; ModuleID = 'tree-data-ref.bc'
source_filename = "tree-data-ref.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.datadep_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.VEC_data_ref_loc_heap = type { %struct.VEC_data_ref_loc_base }
%struct.VEC_data_ref_loc_base = type { i32, i32, [1 x %struct.data_ref_loc_d] }
%struct.data_ref_loc_d = type { %union.tree_node**, i8 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.graph = type { i32, %struct.vertex*, %struct.htab* }
%struct.vertex = type { %struct.graph_edge*, %struct.graph_edge*, i32, i32, i8* }
%struct.graph_edge = type { i32, i32, %struct.graph_edge*, %struct.graph_edge*, i8* }
%struct.rdg_vertex = type { %union.gimple_statement_d*, i8, i8 }
%struct.rdg_vertex_info = type { %union.gimple_statement_d*, i32 }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.omega_pb_d = type { i32, i32, i32, i32, i32, i32, i8, i8, i32*, i32*, %struct.eqn_d*, %struct.eqn_d*, %struct.eqn_d* }
%struct.eqn_d = type { i32, i32, i32, i32* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.rdg_edge = type { i32, i32, %struct.data_dependence_relation* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"#(Data Ref: \0A#  stmt: \00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"#  ref: \00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"#  base_object: \00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"#  Access function %d: \00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"#)\0A\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"\0A (subscript \0A\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"  iterations_that_access_an_element_twice_in_A: \00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"  last_conflict: \00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"  iterations_that_access_an_element_twice_in_B: \00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"  (Subscript distance: \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"  )\0A\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c" )\0A\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"    +\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"    -\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"    =\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"   +=\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"   +-\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"   -=\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"    *\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"indep\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"(Data Dep: \0A\00", align 1
@chrec_dont_know = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.22 = private unnamed_addr constant [11 x i8] c"    (nil)\0A\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"    (don't know)\0A)\0A\00", align 1
@chrec_known = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.24 = private unnamed_addr constant [21 x i8] c"    (no dependence)\0A\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"  access_fn_A: \00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"  access_fn_B: \00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"  inner loop index: %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"  loop nest: (\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"  distance_vector: \00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"  direction_vector: \00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"+-\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"+=\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"-=\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"DISTANCE_V (\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"DIRECTION_V (\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str.43 = private unnamed_addr constant [20 x i8] c"analyze_innermost: \00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"tree-data-ref.c\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"failed: bit offset alignment.\0A\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"failed: evolution of base is not affine.\0A\00", align 1
@.str.48 = private unnamed_addr constant [44 x i8] c"failed: evolution of offset is not affine.\0A\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.49 = private unnamed_addr constant [10 x i8] c"success.\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"Creating dr for \00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"\09base_address: \00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"\0A\09offset from base address: \00", align 1
@.str.53 = private unnamed_addr constant [38 x i8] c"\0A\09constant offset from base address: \00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"\0A\09step: \00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"\0A\09aligned to: \00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"\0A\09base_object: \00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.57 = private unnamed_addr constant [36 x i8] c"\09FAILED as dr address is invariant\0A\00", align 1
@dependence_stats = internal global %struct.datadep_stats zeroinitializer, align 4, !dbg !0
@.str.58 = private unnamed_addr constant [31 x i8] c"Dependence tester statistics:\0A\00", align 1
@.str.59 = private unnamed_addr constant [32 x i8] c"Number of dependence tests: %d\0A\00", align 1
@.str.60 = private unnamed_addr constant [53 x i8] c"Number of dependence tests classified dependent: %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [55 x i8] c"Number of dependence tests classified independent: %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [45 x i8] c"Number of undetermined dependence tests: %d\0A\00", align 1
@.str.63 = private unnamed_addr constant [31 x i8] c"Number of subscript tests: %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"Number of undetermined subscript tests: %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [39 x i8] c"Number of same subscript function: %d\0A\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"Number of ziv tests: %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [45 x i8] c"Number of ziv tests returning dependent: %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [47 x i8] c"Number of ziv tests returning independent: %d\0A\00", align 1
@.str.69 = private unnamed_addr constant [39 x i8] c"Number of ziv tests unimplemented: %d\0A\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"Number of siv tests: %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [45 x i8] c"Number of siv tests returning dependent: %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [47 x i8] c"Number of siv tests returning independent: %d\0A\00", align 1
@.str.73 = private unnamed_addr constant [39 x i8] c"Number of siv tests unimplemented: %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [25 x i8] c"Number of miv tests: %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [45 x i8] c"Number of miv tests returning dependent: %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [47 x i8] c"Number of miv tests returning independent: %d\0A\00", align 1
@.str.77 = private unnamed_addr constant [39 x i8] c"Number of miv tests unimplemented: %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"(vertex %d: (%s%s) (in:\00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.80 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c") (out:\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c") \0A\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"(%d\0A\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"(rdg\0A\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"no dependence\0A\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c"not known\0A\00", align 1
@.str.89 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c" * x_%u\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"%3d \00", align 1
@flag_wrapv = external dso_local local_unnamed_addr global i32, align 4
@flag_trapv = external dso_local local_unnamed_addr global i32, align 4
@flag_strict_overflow = external dso_local local_unnamed_addr global i32, align 4
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.94 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.95 = private unnamed_addr constant [28 x i8] c"(compute_affine_dependence\0A\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"  (stmt_a = \0A\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c")\0A  (stmt_b = \0A\00", align 1
@flag_check_data_deps = external dso_local local_unnamed_addr global i32, align 4
@.str.98 = private unnamed_addr constant [21 x i8] c"\0A\0ABanerjee Analyzer\0A\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"Omega Analyzer\0A\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"Data ref a:\0A\00", align 1
@.str.101 = private unnamed_addr constant [13 x i8] c"Data ref b:\0A\00", align 1
@.str.102 = private unnamed_addr constant [76 x i8] c"affine dependence test not usable: access function not affine or constant.\0A\00", align 1
@.str.103 = private unnamed_addr constant [31 x i8] c"(subscript_dependence_tester \0A\00", align 1
@.str.104 = private unnamed_addr constant [34 x i8] c"(analyze_overlapping_iterations \0A\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"  (chrec_a = \00", align 1
@.str.106 = private unnamed_addr constant [16 x i8] c")\0A  (chrec_b = \00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.107 = private unnamed_addr constant [27 x i8] c"  (overlap_iterations_a = \00", align 1
@.str.108 = private unnamed_addr constant [29 x i8] c")\0A  (overlap_iterations_b = \00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"(analyze_ziv_subscript \0A\00", align 1
@.str.110 = private unnamed_addr constant [45 x i8] c"ziv test failed: difference is non-integer.\0A\00", align 1
@.str.111 = private unnamed_addr constant [25 x i8] c"(analyze_siv_subscript \0A\00", align 1
@.str.112 = private unnamed_addr constant [33 x i8] c"siv test failed: unimplemented.\0A\00", align 1
@.str.113 = private unnamed_addr constant [41 x i8] c"siv test failed: chrec is not positive.\0A\00", align 1
@.str.114 = private unnamed_addr constant [38 x i8] c"siv test failed: chrec not positive.\0A\00", align 1
@.str.115 = private unnamed_addr constant [35 x i8] c"(analyze_subscript_affine_affine \0A\00", align 1
@.str.116 = private unnamed_addr constant [48 x i8] c"affine-affine test failed: too many variables.\0A\00", align 1
@.str.117 = private unnamed_addr constant [43 x i8] c"affine-affine test failed: unimplemented.\0A\00", align 1
@.str.118 = private unnamed_addr constant [17 x i8] c"  (overlaps_a = \00", align 1
@.str.119 = private unnamed_addr constant [19 x i8] c")\0A  (overlaps_b = \00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"./tree-chrec.h\00", align 1
@.str.121 = private unnamed_addr constant [49 x i8] c"overlap steps test failed: no iteration counts.\0A\00", align 1
@.str.122 = private unnamed_addr constant [41 x i8] c"can_use_subscript_aff_aff_for_symbolic \0A\00", align 1
@chrec_not_analyzed_yet = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.123 = private unnamed_addr constant [25 x i8] c"(analyze_miv_subscript \0A\00", align 1
@.str.124 = private unnamed_addr constant [51 x i8] c"analyze_miv_subscript test failed: unimplemented.\0A\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.125 = private unnamed_addr constant [28 x i8] c"(build_classic_dist_vector\0A\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"  dist_vector = (\00", align 1
@.str.127 = private unnamed_addr constant [66 x i8] c"(Dependence relation cannot be represented by distance vector.) \0A\00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.128 = private unnamed_addr constant [10 x i8] c"./omega.h\00", align 1
@.str.129 = private unnamed_addr constant [69 x i8] c"\0A(Number of distance vectors differ: Banerjee has %d, Omega has %d.\0A\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"Banerjee dist vectors:\0A\00", align 1
@.str.131 = private unnamed_addr constant [21 x i8] c"Omega dist vectors:\0A\00", align 1
@.str.132 = private unnamed_addr constant [27 x i8] c"data dependence relation:\0A\00", align 1
@.str.133 = private unnamed_addr constant [71 x i8] c"\0A(Number of direction vectors differ: Banerjee has %d, Omega has %d.)\0A\00", align 1
@.str.134 = private unnamed_addr constant [52 x i8] c"\0A(Dist vectors from the first dependence analyzer:\0A\00", align 1
@.str.135 = private unnamed_addr constant [34 x i8] c"not found in Omega dist vectors:\0A\00", align 1
@.str.136 = private unnamed_addr constant [51 x i8] c"\0A(Dir vectors from the first dependence analyzer:\0A\00", align 1
@.str.137 = private unnamed_addr constant [33 x i8] c"not found in Omega dir vectors:\0A\00", align 1
@.str.138 = private unnamed_addr constant [25 x i8] c"(dependence classified: \00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.139 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2079 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2092, metadata !DIExpression()), !dbg !2094
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2093, metadata !DIExpression()), !dbg !2094
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2095
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !2096
  ret i32 %call, !dbg !2097
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2098 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2102
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !2103
  ret i32 %call, !dbg !2104
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2105 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2160, metadata !DIExpression()), !dbg !2161
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2162
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2162
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2162
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2162
  %cmp = icmp uge i8* %0, %1, !dbg !2162
  %conv1 = zext i1 %cmp to i64, !dbg !2162
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2162
  %tobool = icmp eq i64 %expval, 0, !dbg !2162
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2162

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2162
  br label %cond.end, !dbg !2162

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2162
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2162
  %2 = load i8, i8* %0, align 1, !dbg !2162
  %conv3 = zext i8 %2 to i32, !dbg !2162
  br label %cond.end, !dbg !2162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2162
  ret i32 %cond, !dbg !2163
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2164 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2166, metadata !DIExpression()), !dbg !2167
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2168
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2168
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2168
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2168
  %cmp = icmp uge i8* %0, %1, !dbg !2168
  %conv1 = zext i1 %cmp to i64, !dbg !2168
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2168
  %tobool = icmp eq i64 %expval, 0, !dbg !2168
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2168

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !2168
  br label %cond.end, !dbg !2168

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2168
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2168
  %2 = load i8, i8* %0, align 1, !dbg !2168
  %conv3 = zext i8 %2 to i32, !dbg !2168
  br label %cond.end, !dbg !2168

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2168
  ret i32 %cond, !dbg !2169
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2170 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2171
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2171
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2171
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2171
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2171
  %cmp = icmp uge i8* %1, %2, !dbg !2171
  %conv1 = zext i1 %cmp to i64, !dbg !2171
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2171
  %tobool = icmp eq i64 %expval, 0, !dbg !2171
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2171

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !2171
  br label %cond.end, !dbg !2171

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2171
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2171
  %3 = load i8, i8* %1, align 1, !dbg !2171
  %conv3 = zext i8 %3 to i32, !dbg !2171
  br label %cond.end, !dbg !2171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2171
  ret i32 %cond, !dbg !2172
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2173 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2177, metadata !DIExpression()), !dbg !2178
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2179
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !2180
  ret i32 %call, !dbg !2181
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2182 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2186, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2187, metadata !DIExpression()), !dbg !2188
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2189
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2189
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2189
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2189
  %cmp = icmp uge i8* %0, %1, !dbg !2189
  %conv1 = zext i1 %cmp to i64, !dbg !2189
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2189
  %tobool = icmp eq i64 %expval, 0, !dbg !2189
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2189

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2189
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2189
  br label %cond.end, !dbg !2189

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2189
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2189
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2189
  store i8 %conv2, i8* %0, align 1, !dbg !2189
  %conv6 = and i32 %__c, 255, !dbg !2189
  br label %cond.end, !dbg !2189

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2189
  ret i32 %cond, !dbg !2190
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2191 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2193, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2194, metadata !DIExpression()), !dbg !2195
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2196
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2196
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2196
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2196
  %cmp = icmp uge i8* %0, %1, !dbg !2196
  %conv1 = zext i1 %cmp to i64, !dbg !2196
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2196
  %tobool = icmp eq i64 %expval, 0, !dbg !2196
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2196

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2196
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !2196
  br label %cond.end, !dbg !2196

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2196
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2196
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2196
  store i8 %conv2, i8* %0, align 1, !dbg !2196
  %conv6 = and i32 %__c, 255, !dbg !2196
  br label %cond.end, !dbg !2196

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2196
  ret i32 %cond, !dbg !2197
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2198 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2200, metadata !DIExpression()), !dbg !2201
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2202
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2202
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2202
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2202
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2202
  %cmp = icmp uge i8* %1, %2, !dbg !2202
  %conv1 = zext i1 %cmp to i64, !dbg !2202
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2202
  %tobool = icmp eq i64 %expval, 0, !dbg !2202
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2202

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2202
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !2202
  br label %cond.end, !dbg !2202

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2202
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2202
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2202
  store i8 %conv4, i8* %1, align 1, !dbg !2202
  %conv6 = and i32 %__c, 255, !dbg !2202
  br label %cond.end, !dbg !2202

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2202
  ret i32 %cond, !dbg !2203
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2204 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2210, metadata !DIExpression()), !dbg !2213
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2211, metadata !DIExpression()), !dbg !2213
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2212, metadata !DIExpression()), !dbg !2213
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !2214
  ret i64 %call, !dbg !2215
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2216 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2218, metadata !DIExpression()), !dbg !2219
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2220
  %0 = load i32, i32* %_flags, align 8, !dbg !2220
  %and = lshr i32 %0, 4, !dbg !2220
  %and.lobit = and i32 %and, 1, !dbg !2220
  ret i32 %and.lobit, !dbg !2221
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2222 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2224, metadata !DIExpression()), !dbg !2225
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2226
  %0 = load i32, i32* %_flags, align 8, !dbg !2226
  %and = lshr i32 %0, 5, !dbg !2226
  %and.lobit = and i32 %and, 1, !dbg !2226
  ret i32 %and.lobit, !dbg !2227
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2228 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2231, metadata !DIExpression()), !dbg !2232
  %__c.off = add i32 %__c, 128, !dbg !2233
  %0 = icmp ult i32 %__c.off, 384, !dbg !2233
  br i1 %0, label %cond.true, label %cond.end, !dbg !2233

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !2234
  %1 = load i32*, i32** %call, align 8, !dbg !2235
  %idxprom = sext i32 %__c to i64, !dbg !2236
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2236
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2236
  br label %cond.end, !dbg !2237

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2237
  ret i32 %cond, !dbg !2238
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2239 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2241, metadata !DIExpression()), !dbg !2242
  %__c.off = add i32 %__c, 128, !dbg !2243
  %0 = icmp ult i32 %__c.off, 384, !dbg !2243
  br i1 %0, label %cond.true, label %cond.end, !dbg !2243

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !2244
  %1 = load i32*, i32** %call, align 8, !dbg !2245
  %idxprom = sext i32 %__c to i64, !dbg !2246
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2246
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2246
  br label %cond.end, !dbg !2247

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2247
  ret i32 %cond, !dbg !2248
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2249 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2254, metadata !DIExpression()), !dbg !2255
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2256
  %conv = trunc i64 %call to i32, !dbg !2257
  ret i32 %conv, !dbg !2258
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2259 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2263, metadata !DIExpression()), !dbg !2264
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !2265
  ret i64 %call, !dbg !2266
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2272, metadata !DIExpression()), !dbg !2273
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !2274
  ret i64 %call, !dbg !2275
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2282, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2283, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2284, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2285, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2286, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 0, metadata !2287, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2288, metadata !DIExpression()), !dbg !2292
  br label %while.cond, !dbg !2293

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2294
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2288, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2287, metadata !DIExpression()), !dbg !2292
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2295
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2293

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2296
  %div = lshr i64 %add, 1, !dbg !2298
  call void @llvm.dbg.value(metadata i64 %div, metadata !2289, metadata !DIExpression()), !dbg !2292
  %mul = mul i64 %div, %__size, !dbg !2299
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2300
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2290, metadata !DIExpression()), !dbg !2292
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !2301
  call void @llvm.dbg.value(metadata i32 %call, metadata !2291, metadata !DIExpression()), !dbg !2292
  %cmp1 = icmp slt i32 %call, 0, !dbg !2302
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2304

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2305
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2307

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2308
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2287, metadata !DIExpression()), !dbg !2292
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2292
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2288, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2287, metadata !DIExpression()), !dbg !2292
  br label %while.cond, !dbg !2293, !llvm.loop !2309

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2292
  ret i8* %retval.0, !dbg !2311
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2312 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2318, metadata !DIExpression()), !dbg !2319
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !2320
  ret double %call, !dbg !2321
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2322 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2331, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2332, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.value(metadata i32 %base, metadata !2333, metadata !DIExpression()), !dbg !2334
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2335
  ret i64 %call, !dbg !2336
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2337 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2343, metadata !DIExpression()), !dbg !2346
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2344, metadata !DIExpression()), !dbg !2346
  call void @llvm.dbg.value(metadata i32 %base, metadata !2345, metadata !DIExpression()), !dbg !2346
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !2347
  ret i64 %call, !dbg !2348
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2349 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2360, metadata !DIExpression()), !dbg !2363
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2361, metadata !DIExpression()), !dbg !2363
  call void @llvm.dbg.value(metadata i32 %base, metadata !2362, metadata !DIExpression()), !dbg !2363
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2364
  ret i64 %call, !dbg !2365
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2366 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2370, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2371, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.value(metadata i32 %base, metadata !2372, metadata !DIExpression()), !dbg !2373
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !2374
  ret i64 %call, !dbg !2375
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2376 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2416, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2417, metadata !DIExpression()), !dbg !2418
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2419
  ret i32 %call, !dbg !2420
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2421 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2423, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2424, metadata !DIExpression()), !dbg !2425
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !2426
  ret i32 %call, !dbg !2427
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2432, metadata !DIExpression()), !dbg !2434
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2433, metadata !DIExpression()), !dbg !2434
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !2435
  ret i32 %call, !dbg !2436
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2437 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2441, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2442, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2443, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2444, metadata !DIExpression()), !dbg !2445
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !2446
  ret i32 %call, !dbg !2447
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2448 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2452, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2453, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2454, metadata !DIExpression()), !dbg !2455
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2454, metadata !DIExpression(DW_OP_deref)), !dbg !2455
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2456
  ret i32 %call, !dbg !2457
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2458 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2462, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2463, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2464, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2465, metadata !DIExpression()), !dbg !2466
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2465, metadata !DIExpression(DW_OP_deref)), !dbg !2466
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !2467
  ret i32 %call, !dbg !2468
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2469 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2493, metadata !DIExpression()), !dbg !2495
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2494, metadata !DIExpression()), !dbg !2495
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2496
  ret i32 %call, !dbg !2497
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2498 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2500, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2501, metadata !DIExpression()), !dbg !2502
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !2503
  ret i32 %call, !dbg !2504
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2505 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2509, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2510, metadata !DIExpression()), !dbg !2511
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !2512
  ret i32 %call, !dbg !2513
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2514 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2518, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2519, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2520, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2521, metadata !DIExpression()), !dbg !2522
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !2523
  ret i32 %call, !dbg !2524
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @dump_data_references(%struct._IO_FILE* %file, %struct.VEC_data_reference_p_heap* %datarefs) local_unnamed_addr #5 !dbg !2525 {
entry:
  %dr = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2529, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !2530, metadata !DIExpression()), !dbg !2533
  %0 = bitcast %struct.data_reference** %dr to i8*, !dbg !2534
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2534
  call void @llvm.dbg.value(metadata i32 0, metadata !2531, metadata !DIExpression()), !dbg !2533
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %datarefs, i64 0, i32 0, !dbg !2535
  br label %for.cond, !dbg !2538

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2539
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2531, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !2532, metadata !DIExpression(DW_OP_deref)), !dbg !2533
  %call = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %dr) #8, !dbg !2540
  %tobool1 = icmp eq i32 %call, 0, !dbg !2541
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2541

for.body:                                         ; preds = %for.cond
  %1 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !2542
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !2532, metadata !DIExpression()), !dbg !2533
  call void @dump_data_reference(%struct._IO_FILE* %file, %struct.data_reference* %1) #8, !dbg !2543
  %inc = add i32 %i.0, 1, !dbg !2544
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2531, metadata !DIExpression()), !dbg !2533
  br label %for.cond, !dbg !2545, !llvm.loop !2546

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2548
  ret void, !dbg !2548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %vec_, i32 %ix_, %struct.data_reference** %ptr) unnamed_addr #0 !dbg !2549 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !2556, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2557, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.value(metadata %struct.data_reference** %ptr, metadata !2558, metadata !DIExpression()), !dbg !2559
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !2560
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2560

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !2560
  %0 = load i32, i32* %num, align 8, !dbg !2560
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2560
  br i1 %cmp, label %if.then, label %if.else, !dbg !2562

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2563
  %arrayidx = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2563
  %1 = load %struct.data_reference*, %struct.data_reference** %arrayidx, align 8, !dbg !2563
  br label %return, !dbg !2563

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2565

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_reference* [ null, %if.else ], [ %1, %if.then ], !dbg !2567
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2567
  store %struct.data_reference* %storemerge, %struct.data_reference** %ptr, align 8, !dbg !2567
  ret i32 %retval.0, !dbg !2562
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_data_reference(%struct._IO_FILE* %outf, %struct.data_reference* %dr) local_unnamed_addr #5 !dbg !2568 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2572, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !2573, metadata !DIExpression()), !dbg !2575
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #7, !dbg !2576
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 0, !dbg !2577
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !2577
  tail call void @print_gimple_stmt(%struct._IO_FILE* %outf, %union.gimple_statement_d* %0, i32 0, i32 0) #7, !dbg !2578
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2579
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 1, !dbg !2580
  %1 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !2580
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %1, i32 0) #7, !dbg !2581
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !2582
  %base_object = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 0, !dbg !2583
  %2 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !2583
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %2, i32 0) #7, !dbg !2584
  call void @llvm.dbg.value(metadata i32 0, metadata !2574, metadata !DIExpression()), !dbg !2575
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 1, !dbg !2585
  br label %for.cond, !dbg !2588

for.cond:                                         ; preds = %cond.end16, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end16 ], !dbg !2589
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2574, metadata !DIExpression()), !dbg !2575
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !2590
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !2590
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2590

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !2590
  br label %cond.end, !dbg !2590

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2590
  %call6 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !2590
  %cmp = icmp ult i32 %i.0, %call6, !dbg !2591
  br i1 %cmp, label %for.body, label %for.end, !dbg !2592

for.body:                                         ; preds = %cond.end
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 %i.0) #7, !dbg !2593
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !2595
  %tobool10 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !2595
  br i1 %tobool10, label %cond.end16, label %cond.true11, !dbg !2595

cond.true11:                                      ; preds = %for.body
  %base14 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !2595
  br label %cond.end16, !dbg !2595

cond.end16:                                       ; preds = %for.body, %cond.true11
  %cond17 = phi %struct.VEC_tree_base* [ %base14, %cond.true11 ], [ null, %for.body ], !dbg !2595
  %call18 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond17, i32 %i.0) #8, !dbg !2595
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %call18, i32 0) #7, !dbg !2596
  %inc = add i32 %i.0, 1, !dbg !2597
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2574, metadata !DIExpression()), !dbg !2575
  br label %for.cond, !dbg !2598, !llvm.loop !2599

for.end:                                          ; preds = %cond.end
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2601
  ret void, !dbg !2602
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_data_references(%struct.VEC_data_reference_p_heap* %datarefs) local_unnamed_addr #5 !dbg !2603 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !2607, metadata !DIExpression()), !dbg !2608
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2609
  tail call void @dump_data_references(%struct._IO_FILE* %0, %struct.VEC_data_reference_p_heap* %datarefs) #8, !dbg !2610
  ret void, !dbg !2611
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_data_dependence_relations(%struct.VEC_ddr_p_heap* %ddrs) local_unnamed_addr #5 !dbg !2612 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %ddrs, metadata !2616, metadata !DIExpression()), !dbg !2617
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2618
  tail call void @dump_data_dependence_relations(%struct._IO_FILE* %0, %struct.VEC_ddr_p_heap* %ddrs) #8, !dbg !2619
  ret void, !dbg !2620
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_data_dependence_relations(%struct._IO_FILE* %file, %struct.VEC_ddr_p_heap* %ddrs) local_unnamed_addr #5 !dbg !2621 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2625, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %ddrs, metadata !2626, metadata !DIExpression()), !dbg !2629
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !2630
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2630
  call void @llvm.dbg.value(metadata i32 0, metadata !2627, metadata !DIExpression()), !dbg !2629
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %ddrs, i64 0, i32 0, !dbg !2631
  br label %for.cond, !dbg !2634

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2635
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2627, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !2628, metadata !DIExpression(DW_OP_deref)), !dbg !2629
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !2636
  %tobool1 = icmp eq i32 %call, 0, !dbg !2637
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2637

for.body:                                         ; preds = %for.cond
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !2638
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %1, metadata !2628, metadata !DIExpression()), !dbg !2629
  call void @dump_data_dependence_relation(%struct._IO_FILE* %file, %struct.data_dependence_relation* %1) #8, !dbg !2639
  %inc = add i32 %i.0, 1, !dbg !2640
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2627, metadata !DIExpression()), !dbg !2629
  br label %for.cond, !dbg !2641, !llvm.loop !2642

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2644
  ret void, !dbg !2644
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %vec_, i32 %ix_, %struct.data_dependence_relation** %ptr) unnamed_addr #0 !dbg !2645 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !2652, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2653, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ptr, metadata !2654, metadata !DIExpression()), !dbg !2655
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !2656
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2656

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !2656
  %0 = load i32, i32* %num, align 8, !dbg !2656
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2656
  br i1 %cmp, label %if.then, label %if.else, !dbg !2658

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2659
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2659
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !2659
  br label %return, !dbg !2659

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2661

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_dependence_relation* [ null, %if.else ], [ %1, %if.then ], !dbg !2663
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2663
  store %struct.data_dependence_relation* %storemerge, %struct.data_dependence_relation** %ptr, align 8, !dbg !2663
  ret i32 %retval.0, !dbg !2658
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_data_dependence_relation(%struct._IO_FILE* %outf, %struct.data_dependence_relation* %ddr) local_unnamed_addr #5 !dbg !2664 {
entry:
  %loopi = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2668, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !2669, metadata !DIExpression()), !dbg !2677
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)) #7, !dbg !2678
  %cond1 = icmp eq %struct.data_dependence_relation* %ddr, null, !dbg !2679
  br i1 %cond1, label %if.end11, label %lor.lhs.false, !dbg !2679

lor.lhs.false:                                    ; preds = %entry
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !2681
  %0 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !2681
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !2682
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !2683
  br i1 %cmp, label %if.then, label %if.end13, !dbg !2684

if.then:                                          ; preds = %lor.lhs.false
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !2685
  %2 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !2685
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !2670, metadata !DIExpression()), !dbg !2677
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !2689
  %3 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !2689
  call void @llvm.dbg.value(metadata %struct.data_reference* %3, metadata !2671, metadata !DIExpression()), !dbg !2677
  %tobool3 = icmp eq %struct.data_reference* %2, null, !dbg !2690
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !2692

if.then4:                                         ; preds = %if.then
  tail call void @dump_data_reference(%struct._IO_FILE* %outf, %struct.data_reference* nonnull %2) #8, !dbg !2693
  br label %if.end, !dbg !2693

if.else:                                          ; preds = %if.then
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !2694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %tobool6 = icmp eq %struct.data_reference* %3, null, !dbg !2695
  br i1 %tobool6, label %if.else8, label %if.then7, !dbg !2697

if.then7:                                         ; preds = %if.end
  tail call void @dump_data_reference(%struct._IO_FILE* %outf, %struct.data_reference* nonnull %3) #8, !dbg !2698
  br label %if.end11, !dbg !2698

if.else8:                                         ; preds = %if.end
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !2699
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then7, %if.else8
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0)) #7, !dbg !2700
  br label %cleanup.cont, !dbg !2701

if.end13:                                         ; preds = %lor.lhs.false
  %a14 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !2702
  %4 = load %struct.data_reference*, %struct.data_reference** %a14, align 8, !dbg !2702
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !2670, metadata !DIExpression()), !dbg !2677
  %b15 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !2703
  %5 = load %struct.data_reference*, %struct.data_reference** %b15, align 8, !dbg !2703
  call void @llvm.dbg.value(metadata %struct.data_reference* %5, metadata !2671, metadata !DIExpression()), !dbg !2677
  tail call void @dump_data_reference(%struct._IO_FILE* %outf, %struct.data_reference* %4) #8, !dbg !2704
  tail call void @dump_data_reference(%struct._IO_FILE* %outf, %struct.data_reference* %5) #8, !dbg !2705
  %6 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !2706
  %7 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !2707
  %cmp17 = icmp eq %union.tree_node* %6, %7, !dbg !2708
  br i1 %cmp17, label %if.then18, label %if.else20, !dbg !2709

if.then18:                                        ; preds = %if.end13
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)) #7, !dbg !2710
  br label %if.end144, !dbg !2710

if.else20:                                        ; preds = %if.end13
  %cmp22 = icmp eq %union.tree_node* %6, null, !dbg !2711
  br i1 %cmp22, label %if.then23, label %if.end144, !dbg !2712

if.then23:                                        ; preds = %if.else20
  %8 = bitcast %struct.loop** %loopi to i8*, !dbg !2713
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2713
  call void @llvm.dbg.value(metadata i32 0, metadata !2672, metadata !DIExpression()), !dbg !2714
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !2715
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %4, i64 0, i32 5, i32 1, !dbg !2718
  %access_fns40 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %5, i64 0, i32 5, i32 1, !dbg !2718
  br label %for.cond, !dbg !2720

for.cond:                                         ; preds = %cond.end56, %if.then23
  %i.0 = phi i32 [ 0, %if.then23 ], [ %inc, %cond.end56 ], !dbg !2721
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2672, metadata !DIExpression()), !dbg !2714
  %9 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !2722
  %tobool24 = icmp eq %struct.VEC_subscript_p_heap* %9, null, !dbg !2722
  br i1 %tobool24, label %cond.end, label %cond.true, !dbg !2722

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %9, i64 0, i32 0, !dbg !2722
  br label %cond.end, !dbg !2722

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !2722
  %call26 = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond) #8, !dbg !2722
  %cmp27 = icmp ult i32 %i.0, %call26, !dbg !2723
  br i1 %cmp27, label %for.body, label %for.end, !dbg !2724

for.body:                                         ; preds = %cond.end
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)) #7, !dbg !2725
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !2726
  %tobool29 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !2726
  br i1 %tobool29, label %cond.end35, label %cond.true30, !dbg !2726

cond.true30:                                      ; preds = %for.body
  %base33 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !2726
  br label %cond.end35, !dbg !2726

cond.end35:                                       ; preds = %for.body, %cond.true30
  %cond36 = phi %struct.VEC_tree_base* [ %base33, %cond.true30 ], [ null, %for.body ], !dbg !2726
  %call37 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond36, i32 %i.0) #8, !dbg !2726
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %call37, i32 0) #7, !dbg !2727
  %call38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0)) #7, !dbg !2728
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns40, align 8, !dbg !2729
  %tobool41 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !2729
  br i1 %tobool41, label %cond.end47, label %cond.true42, !dbg !2729

cond.true42:                                      ; preds = %cond.end35
  %base45 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !2729
  br label %cond.end47, !dbg !2729

cond.end47:                                       ; preds = %cond.end35, %cond.true42
  %cond48 = phi %struct.VEC_tree_base* [ %base45, %cond.true42 ], [ null, %cond.end35 ], !dbg !2729
  %call49 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond48, i32 %i.0) #8, !dbg !2729
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %call49, i32 0) #7, !dbg !2730
  %12 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !2731
  %tobool51 = icmp eq %struct.VEC_subscript_p_heap* %12, null, !dbg !2731
  br i1 %tobool51, label %cond.end56, label %cond.true52, !dbg !2731

cond.true52:                                      ; preds = %cond.end47
  %base54 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %12, i64 0, i32 0, !dbg !2731
  br label %cond.end56, !dbg !2731

cond.end56:                                       ; preds = %cond.end47, %cond.true52
  %cond57 = phi %struct.VEC_subscript_p_base* [ %base54, %cond.true52 ], [ null, %cond.end47 ], !dbg !2731
  %call58 = tail call fastcc %struct.subscript* @VEC_subscript_p_base_index(%struct.VEC_subscript_p_base* %cond57, i32 %i.0) #8, !dbg !2731
  tail call void @dump_subscript(%struct._IO_FILE* %outf, %struct.subscript* %call58) #8, !dbg !2732
  %inc = add i32 %i.0, 1, !dbg !2733
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2672, metadata !DIExpression()), !dbg !2714
  br label %for.cond, !dbg !2734, !llvm.loop !2735

for.end:                                          ; preds = %cond.end
  %inner_loop = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 7, !dbg !2737
  %13 = load i32, i32* %inner_loop, align 8, !dbg !2737
  %call59 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i64 0, i64 0), i32 %13) #7, !dbg !2738
  %call60 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)) #7, !dbg !2739
  call void @llvm.dbg.value(metadata i32 0, metadata !2672, metadata !DIExpression()), !dbg !2714
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !2740
  br label %for.cond61, !dbg !2743

for.cond61:                                       ; preds = %for.body71, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc74, %for.body71 ], !dbg !2744
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !2672, metadata !DIExpression()), !dbg !2714
  %14 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2745
  %tobool62 = icmp eq %struct.VEC_loop_p_heap* %14, null, !dbg !2745
  br i1 %tobool62, label %cond.end67, label %cond.true63, !dbg !2745

cond.true63:                                      ; preds = %for.cond61
  %base65 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %14, i64 0, i32 0, !dbg !2745
  br label %cond.end67, !dbg !2745

cond.end67:                                       ; preds = %for.cond61, %cond.true63
  %cond68 = phi %struct.VEC_loop_p_base* [ %base65, %cond.true63 ], [ null, %for.cond61 ], !dbg !2745
  call void @llvm.dbg.value(metadata %struct.loop** %loopi, metadata !2676, metadata !DIExpression(DW_OP_deref)), !dbg !2714
  %call69 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond68, i32 %i.1, %struct.loop** nonnull %loopi) #8, !dbg !2745
  %tobool70 = icmp eq i32 %call69, 0, !dbg !2746
  br i1 %tobool70, label %for.end75, label %for.body71, !dbg !2746

for.body71:                                       ; preds = %cond.end67
  %15 = load %struct.loop*, %struct.loop** %loopi, align 8, !dbg !2747
  call void @llvm.dbg.value(metadata %struct.loop* %15, metadata !2676, metadata !DIExpression()), !dbg !2714
  %num = getelementptr inbounds %struct.loop, %struct.loop* %15, i64 0, i32 0, !dbg !2748
  %16 = load i32, i32* %num, align 8, !dbg !2748
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i32 %16) #7, !dbg !2749
  %inc74 = add i32 %i.1, 1, !dbg !2750
  call void @llvm.dbg.value(metadata i32 %inc74, metadata !2672, metadata !DIExpression()), !dbg !2714
  br label %for.cond61, !dbg !2751, !llvm.loop !2752

for.end75:                                        ; preds = %cond.end67
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !2754
  call void @llvm.dbg.value(metadata i32 0, metadata !2672, metadata !DIExpression()), !dbg !2714
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !2755
  br label %for.cond77, !dbg !2758

for.cond77:                                       ; preds = %cond.end104, %for.end75
  %i.2 = phi i32 [ 0, %for.end75 ], [ %inc108, %cond.end104 ], !dbg !2759
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !2672, metadata !DIExpression()), !dbg !2714
  %17 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !2760
  %tobool78 = icmp eq %struct.VEC_lambda_vector_heap* %17, null, !dbg !2760
  br i1 %tobool78, label %cond.end83, label %cond.true79, !dbg !2760

cond.true79:                                      ; preds = %for.cond77
  %base81 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %17, i64 0, i32 0, !dbg !2760
  br label %cond.end83, !dbg !2760

cond.end83:                                       ; preds = %for.cond77, %cond.true79
  %cond84 = phi %struct.VEC_lambda_vector_base* [ %base81, %cond.true79 ], [ null, %for.cond77 ], !dbg !2760
  %call85 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond84) #8, !dbg !2760
  %cmp86 = icmp ult i32 %i.2, %call85, !dbg !2761
  br i1 %cmp86, label %for.body87, label %for.cond110.preheader, !dbg !2762

for.cond110.preheader:                            ; preds = %cond.end83
  %dir_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 5, !dbg !2763
  br label %for.cond110, !dbg !2766

for.body87:                                       ; preds = %cond.end83
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0)) #7, !dbg !2767
  %18 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !2769
  %tobool90 = icmp eq %struct.VEC_lambda_vector_heap* %18, null, !dbg !2769
  br i1 %tobool90, label %cond.end95, label %cond.true91, !dbg !2769

cond.true91:                                      ; preds = %for.body87
  %base93 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %18, i64 0, i32 0, !dbg !2769
  br label %cond.end95, !dbg !2769

cond.end95:                                       ; preds = %for.body87, %cond.true91
  %cond96 = phi %struct.VEC_lambda_vector_base* [ %base93, %cond.true91 ], [ null, %for.body87 ], !dbg !2769
  %call97 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond96, i32 %i.2) #8, !dbg !2769
  %19 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2770
  %tobool99 = icmp eq %struct.VEC_loop_p_heap* %19, null, !dbg !2770
  br i1 %tobool99, label %cond.end104, label %cond.true100, !dbg !2770

cond.true100:                                     ; preds = %cond.end95
  %base102 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %19, i64 0, i32 0, !dbg !2770
  br label %cond.end104, !dbg !2770

cond.end104:                                      ; preds = %cond.end95, %cond.true100
  %cond105 = phi %struct.VEC_loop_p_base* [ %base102, %cond.true100 ], [ null, %cond.end95 ], !dbg !2770
  %call106 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond105) #8, !dbg !2770
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %outf, i32* %call97, i32 %call106) #8, !dbg !2771
  %inc108 = add i32 %i.2, 1, !dbg !2772
  call void @llvm.dbg.value(metadata i32 %inc108, metadata !2672, metadata !DIExpression()), !dbg !2714
  br label %for.cond77, !dbg !2773, !llvm.loop !2774

for.cond110:                                      ; preds = %for.cond110.preheader, %cond.end137
  %i.3 = phi i32 [ %inc141, %cond.end137 ], [ 0, %for.cond110.preheader ], !dbg !2776
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !2672, metadata !DIExpression()), !dbg !2714
  %20 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects, align 8, !dbg !2777
  %tobool111 = icmp eq %struct.VEC_lambda_vector_heap* %20, null, !dbg !2777
  br i1 %tobool111, label %cond.end116, label %cond.true112, !dbg !2777

cond.true112:                                     ; preds = %for.cond110
  %base114 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %20, i64 0, i32 0, !dbg !2777
  br label %cond.end116, !dbg !2777

cond.end116:                                      ; preds = %for.cond110, %cond.true112
  %cond117 = phi %struct.VEC_lambda_vector_base* [ %base114, %cond.true112 ], [ null, %for.cond110 ], !dbg !2777
  %call118 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond117) #8, !dbg !2777
  %cmp119 = icmp ult i32 %i.3, %call118, !dbg !2778
  br i1 %cmp119, label %for.body120, label %for.end142, !dbg !2766

for.body120:                                      ; preds = %cond.end116
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0)) #7, !dbg !2779
  %21 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects, align 8, !dbg !2781
  %tobool123 = icmp eq %struct.VEC_lambda_vector_heap* %21, null, !dbg !2781
  br i1 %tobool123, label %cond.end128, label %cond.true124, !dbg !2781

cond.true124:                                     ; preds = %for.body120
  %base126 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %21, i64 0, i32 0, !dbg !2781
  br label %cond.end128, !dbg !2781

cond.end128:                                      ; preds = %for.body120, %cond.true124
  %cond129 = phi %struct.VEC_lambda_vector_base* [ %base126, %cond.true124 ], [ null, %for.body120 ], !dbg !2781
  %call130 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond129, i32 %i.3) #8, !dbg !2781
  %22 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2782
  %tobool132 = icmp eq %struct.VEC_loop_p_heap* %22, null, !dbg !2782
  br i1 %tobool132, label %cond.end137, label %cond.true133, !dbg !2782

cond.true133:                                     ; preds = %cond.end128
  %base135 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %22, i64 0, i32 0, !dbg !2782
  br label %cond.end137, !dbg !2782

cond.end137:                                      ; preds = %cond.end128, %cond.true133
  %cond138 = phi %struct.VEC_loop_p_base* [ %base135, %cond.true133 ], [ null, %cond.end128 ], !dbg !2782
  %call139 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond138) #8, !dbg !2782
  call void @print_direction_vector(%struct._IO_FILE* %outf, i32* %call130, i32 %call139) #8, !dbg !2783
  %inc141 = add i32 %i.3, 1, !dbg !2784
  call void @llvm.dbg.value(metadata i32 %inc141, metadata !2672, metadata !DIExpression()), !dbg !2714
  br label %for.cond110, !dbg !2785, !llvm.loop !2786

for.end142:                                       ; preds = %cond.end116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2788
  br label %if.end144, !dbg !2789

if.end144:                                        ; preds = %if.else20, %for.end142, %if.then18
  %call145 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !2790
  br label %cleanup.cont, !dbg !2791

cleanup.cont:                                     ; preds = %if.end11, %if.end144
  ret void, !dbg !2791
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_data_reference(%struct.data_reference* %dr) local_unnamed_addr #5 !dbg !2792 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !2796, metadata !DIExpression()), !dbg !2797
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2798
  tail call void @dump_data_reference(%struct._IO_FILE* %0, %struct.data_reference* %dr) #8, !dbg !2799
  ret void, !dbg !2800
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @print_generic_stmt(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !2801 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !2807, metadata !DIExpression()), !dbg !2808
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !2809
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2809

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !2809
  %0 = load i32, i32* %num, align 8, !dbg !2809
  br label %cond.end, !dbg !2809

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2809
  ret i32 %cond, !dbg !2809
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2810 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !2814, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2815, metadata !DIExpression()), !dbg !2816
  br label %land.end, !dbg !2817

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2817
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2817
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2817
  ret %union.tree_node* %0, !dbg !2817
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_subscript(%struct._IO_FILE* %outf, %struct.subscript* %subscript) local_unnamed_addr #5 !dbg !2818 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2822, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata %struct.subscript* %subscript, metadata !2823, metadata !DIExpression()), !dbg !2831
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %subscript, i64 0, i32 0, !dbg !2832
  %0 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !2832
  call void @llvm.dbg.value(metadata %struct.conflict_function* %0, metadata !2824, metadata !DIExpression()), !dbg !2831
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !2833
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !2834
  tail call fastcc void @dump_conflict_function(%struct._IO_FILE* %outf, %struct.conflict_function* %0) #8, !dbg !2835
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %0, i64 0, i32 0, !dbg !2836
  %1 = load i32, i32* %n, align 8, !dbg !2836
  %cmp = icmp eq i32 %1, 0, !dbg !2836
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !2836

land.lhs.true:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %1, 3, !dbg !2836
  br i1 %cmp3, label %if.end, label %if.then, !dbg !2837

if.then:                                          ; preds = %land.lhs.true
  %last_conflict = getelementptr inbounds %struct.subscript, %struct.subscript* %subscript, i64 0, i32 2, !dbg !2838
  %2 = load %union.tree_node*, %union.tree_node** %last_conflict, align 8, !dbg !2838
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !2825, metadata !DIExpression()), !dbg !2839
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !2840
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %2, i32 0) #7, !dbg !2841
  br label %if.end, !dbg !2842

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %subscript, i64 0, i32 1, !dbg !2843
  %3 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !2843
  call void @llvm.dbg.value(metadata %struct.conflict_function* %3, metadata !2824, metadata !DIExpression()), !dbg !2831
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !2844
  tail call fastcc void @dump_conflict_function(%struct._IO_FILE* %outf, %struct.conflict_function* %3) #8, !dbg !2845
  %n6 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %3, i64 0, i32 0, !dbg !2846
  %4 = load i32, i32* %n6, align 8, !dbg !2846
  %cmp7 = icmp eq i32 %4, 0, !dbg !2846
  br i1 %cmp7, label %if.end15, label %land.lhs.true8, !dbg !2846

land.lhs.true8:                                   ; preds = %if.end
  %cmp10 = icmp eq i32 %4, 3, !dbg !2846
  br i1 %cmp10, label %if.end15, label %if.then11, !dbg !2847

if.then11:                                        ; preds = %land.lhs.true8
  %last_conflict13 = getelementptr inbounds %struct.subscript, %struct.subscript* %subscript, i64 0, i32 2, !dbg !2848
  %5 = load %union.tree_node*, %union.tree_node** %last_conflict13, align 8, !dbg !2848
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !2828, metadata !DIExpression()), !dbg !2849
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !2850
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %5, i32 0) #7, !dbg !2851
  br label %if.end15, !dbg !2852

if.end15:                                         ; preds = %land.lhs.true8, %if.end, %if.then11
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !2853
  %distance = getelementptr inbounds %struct.subscript, %struct.subscript* %subscript, i64 0, i32 3, !dbg !2854
  %6 = load %union.tree_node*, %union.tree_node** %distance, align 8, !dbg !2854
  tail call void @print_generic_stmt(%struct._IO_FILE* %outf, %union.tree_node* %6, i32 0) #7, !dbg !2855
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #7, !dbg !2856
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0)) #7, !dbg !2857
  ret void, !dbg !2858
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_conflict_function(%struct._IO_FILE* %outf, %struct.conflict_function* %cf) unnamed_addr #5 !dbg !2859 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2863, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.value(metadata %struct.conflict_function* %cf, metadata !2864, metadata !DIExpression()), !dbg !2866
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %cf, i64 0, i32 0, !dbg !2867
  %0 = load i32, i32* %n, align 8, !dbg !2867
  %cmp = icmp eq i32 %0, 0, !dbg !2869
  br i1 %cmp, label %if.then, label %if.else, !dbg !2870

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i64 0, i64 0)) #7, !dbg !2871
  br label %if.end10, !dbg !2871

if.else:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %0, 3, !dbg !2872
  br i1 %cmp2, label %if.then3, label %for.cond.preheader, !dbg !2874

for.cond.preheader:                               ; preds = %if.else
  br label %for.cond, !dbg !2875

if.then3:                                         ; preds = %if.else
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i64 0, i64 0)) #7, !dbg !2878
  br label %if.end10, !dbg !2878

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !2879
  %1 = phi i32 [ %0, %for.cond.preheader ], [ %.pre, %for.body ], !dbg !2879
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2865, metadata !DIExpression()), !dbg !2866
  %2 = zext i32 %1 to i64, !dbg !2881
  %cmp7 = icmp ult i64 %indvars.iv, %2, !dbg !2881
  br i1 %cmp7, label %for.body, label %if.end10.loopexit, !dbg !2875

for.body:                                         ; preds = %for.cond
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i64 0, i64 0)) #7, !dbg !2882
  %arrayidx = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %cf, i64 0, i32 1, i64 %indvars.iv, !dbg !2884
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx, align 8, !dbg !2884
  tail call fastcc void @dump_affine_function(%struct._IO_FILE* %outf, %struct.VEC_tree_heap* %3) #8, !dbg !2885
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i64 0, i64 0)) #7, !dbg !2886
  %.pre = load i32, i32* %n, align 8, !dbg !2879
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2887
  br label %for.cond, !dbg !2888, !llvm.loop !2889

if.end10.loopexit:                                ; preds = %for.cond
  br label %if.end10, !dbg !2891

if.end10:                                         ; preds = %if.end10.loopexit, %if.then3, %if.then
  ret void, !dbg !2891
}

; Function Attrs: nounwind uwtable
define dso_local void @print_direction_vector(%struct._IO_FILE* %outf, i32* %dirv, i32 %length) local_unnamed_addr #5 !dbg !2892 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2896, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.value(metadata i32* %dirv, metadata !2897, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.value(metadata i32 %length, metadata !2898, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.value(metadata i32 0, metadata !2899, metadata !DIExpression()), !dbg !2904
  %0 = sext i32 %length to i64, !dbg !2905
  br label %for.cond, !dbg !2905

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !2906
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2899, metadata !DIExpression()), !dbg !2904
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !2907
  br i1 %cmp, label %for.body, label %for.end, !dbg !2908

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %dirv, i64 %indvars.iv, !dbg !2909
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2909
  call void @llvm.dbg.value(metadata i32 %1, metadata !2900, metadata !DIExpression()), !dbg !2910
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 4, label %sw.bb5
    i32 3, label %sw.bb7
    i32 5, label %sw.bb9
    i32 6, label %sw.bb11
  ], !dbg !2911

sw.bb:                                            ; preds = %for.body
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !2912
  br label %for.inc, !dbg !2914

sw.bb1:                                           ; preds = %for.body
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !2915
  br label %for.inc, !dbg !2916

sw.bb3:                                           ; preds = %for.body
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #7, !dbg !2917
  br label %for.inc, !dbg !2918

sw.bb5:                                           ; preds = %for.body
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !2919
  br label %for.inc, !dbg !2920

sw.bb7:                                           ; preds = %for.body
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0)) #7, !dbg !2921
  br label %for.inc, !dbg !2922

sw.bb9:                                           ; preds = %for.body
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #7, !dbg !2923
  br label %for.inc, !dbg !2924

sw.bb11:                                          ; preds = %for.body
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #7, !dbg !2925
  br label %for.inc, !dbg !2926

sw.default:                                       ; preds = %for.body
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !2927
  br label %for.inc, !dbg !2928

for.inc:                                          ; preds = %sw.bb, %sw.bb1, %sw.bb3, %sw.bb5, %sw.bb7, %sw.bb9, %sw.bb11, %sw.default
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2929
  call void @llvm.dbg.value(metadata i32 undef, metadata !2899, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2904
  br label %for.cond, !dbg !2930, !llvm.loop !2931

for.end:                                          ; preds = %for.cond
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #7, !dbg !2933
  ret void, !dbg !2934
}

; Function Attrs: nounwind uwtable
define dso_local void @print_dir_vectors(%struct._IO_FILE* %outf, %struct.VEC_lambda_vector_heap* %dir_vects, i32 %length) local_unnamed_addr #5 !dbg !2935 {
entry:
  %v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2939, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %dir_vects, metadata !2940, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i32 %length, metadata !2941, metadata !DIExpression()), !dbg !2944
  %0 = bitcast i32** %v to i8*, !dbg !2945
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2945
  call void @llvm.dbg.value(metadata i32 0, metadata !2942, metadata !DIExpression()), !dbg !2944
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %dir_vects, i64 0, i32 0, !dbg !2946
  br label %for.cond, !dbg !2949

for.cond:                                         ; preds = %for.body, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2950
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !2942, metadata !DIExpression()), !dbg !2944
  call void @llvm.dbg.value(metadata i32** %v, metadata !2943, metadata !DIExpression(DW_OP_deref)), !dbg !2944
  %call = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %base, i32 %j.0, i32** nonnull %v) #8, !dbg !2951
  %tobool1 = icmp eq i32 %call, 0, !dbg !2952
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2952

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %v, align 8, !dbg !2953
  call void @llvm.dbg.value(metadata i32* %1, metadata !2943, metadata !DIExpression()), !dbg !2944
  call void @print_direction_vector(%struct._IO_FILE* %outf, i32* %1, i32 %length) #8, !dbg !2954
  %inc = add i32 %j.0, 1, !dbg !2955
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2942, metadata !DIExpression()), !dbg !2944
  br label %for.cond, !dbg !2956, !llvm.loop !2957

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2959
  ret void, !dbg !2959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %vec_, i32 %ix_, i32** %ptr) unnamed_addr #0 !dbg !2960 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !2967, metadata !DIExpression()), !dbg !2970
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2968, metadata !DIExpression()), !dbg !2970
  call void @llvm.dbg.value(metadata i32** %ptr, metadata !2969, metadata !DIExpression()), !dbg !2970
  %tobool = icmp eq %struct.VEC_lambda_vector_base* %vec_, null, !dbg !2971
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2971

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !2971
  %0 = load i32, i32* %num, align 8, !dbg !2971
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2971
  br i1 %cmp, label %if.then, label %if.else, !dbg !2973

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2974
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2974
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !2974
  br label %return, !dbg !2974

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2976

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32* [ null, %if.else ], [ %1, %if.then ], !dbg !2978
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2978
  store i32* %storemerge, i32** %ptr, align 8, !dbg !2978
  ret i32 %retval.0, !dbg !2973
}

; Function Attrs: nounwind uwtable
define dso_local void @print_dist_vectors(%struct._IO_FILE* %outf, %struct.VEC_lambda_vector_heap* %dist_vects, i32 %length) local_unnamed_addr #5 !dbg !2979 {
entry:
  %v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !2981, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %dist_vects, metadata !2982, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata i32 %length, metadata !2983, metadata !DIExpression()), !dbg !2986
  %0 = bitcast i32** %v to i8*, !dbg !2987
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !2987
  call void @llvm.dbg.value(metadata i32 0, metadata !2984, metadata !DIExpression()), !dbg !2986
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %dist_vects, i64 0, i32 0, !dbg !2988
  br label %for.cond, !dbg !2991

for.cond:                                         ; preds = %for.body, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2992
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !2984, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata i32** %v, metadata !2985, metadata !DIExpression(DW_OP_deref)), !dbg !2986
  %call = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %base, i32 %j.0, i32** nonnull %v) #8, !dbg !2993
  %tobool1 = icmp eq i32 %call, 0, !dbg !2994
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2994

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %v, align 8, !dbg !2995
  call void @llvm.dbg.value(metadata i32* %1, metadata !2985, metadata !DIExpression()), !dbg !2986
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %outf, i32* %1, i32 %length) #8, !dbg !2996
  %inc = add i32 %j.0, 1, !dbg !2997
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2984, metadata !DIExpression()), !dbg !2986
  br label %for.cond, !dbg !2998, !llvm.loop !2999

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3001
  ret void, !dbg !3001
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @print_lambda_vector(%struct._IO_FILE* %outfile, i32* %vector, i32 %n) unnamed_addr #0 !dbg !3002 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outfile, metadata !3004, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata i32* %vector, metadata !3005, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata i32 %n, metadata !3006, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata i32 0, metadata !3007, metadata !DIExpression()), !dbg !3008
  %0 = sext i32 %n to i64, !dbg !3009
  br label %for.cond, !dbg !3009

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !3011
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3007, metadata !DIExpression()), !dbg !3008
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !3012
  br i1 %cmp, label %for.body, label %for.end, !dbg !3014

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vector, i64 %indvars.iv, !dbg !3015
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3015
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i32 %1) #7, !dbg !3016
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3017
  call void @llvm.dbg.value(metadata i32 undef, metadata !3007, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3008
  br label %for.cond, !dbg !3018, !llvm.loop !3019

for.end:                                          ; preds = %for.cond
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #7, !dbg !3021
  ret void, !dbg !3022
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_data_dependence_relation(%struct.data_dependence_relation* %ddr) local_unnamed_addr #5 !dbg !3023 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !3027, metadata !DIExpression()), !dbg !3028
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3029
  tail call void @dump_data_dependence_relation(%struct._IO_FILE* %0, %struct.data_dependence_relation* %ddr) #8, !dbg !3030
  ret void, !dbg !3031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %vec_) unnamed_addr #0 !dbg !3032 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_base* %vec_, metadata !3038, metadata !DIExpression()), !dbg !3039
  %tobool = icmp eq %struct.VEC_subscript_p_base* %vec_, null, !dbg !3040
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3040

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 0, !dbg !3040
  %0 = load i32, i32* %num, align 8, !dbg !3040
  br label %cond.end, !dbg !3040

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3040
  ret i32 %cond, !dbg !3040
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.subscript* @VEC_subscript_p_base_index(%struct.VEC_subscript_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3041 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_base* %vec_, metadata !3045, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3046, metadata !DIExpression()), !dbg !3047
  br label %land.end, !dbg !3048

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3048
  %arrayidx = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3048
  %0 = load %struct.subscript*, %struct.subscript** %arrayidx, align 8, !dbg !3048
  ret %struct.subscript* %0, !dbg !3048
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !3049 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3056, metadata !DIExpression()), !dbg !3059
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3057, metadata !DIExpression()), !dbg !3059
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !3058, metadata !DIExpression()), !dbg !3059
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3060
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3060

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3060
  %0 = load i32, i32* %num, align 8, !dbg !3060
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3060
  br i1 %cmp, label %if.then, label %if.else, !dbg !3062

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3063
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3063
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !3063
  br label %return, !dbg !3063

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3065

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !3067
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3067
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !3067
  ret i32 %retval.0, !dbg !3062
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %vec_) unnamed_addr #0 !dbg !3068 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !3072, metadata !DIExpression()), !dbg !3073
  %tobool = icmp eq %struct.VEC_lambda_vector_base* %vec_, null, !dbg !3074
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3074

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !3074
  %0 = load i32, i32* %num, align 8, !dbg !3074
  br label %cond.end, !dbg !3074

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3074
  ret i32 %cond, !dbg !3074
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3075 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !3079, metadata !DIExpression()), !dbg !3081
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3080, metadata !DIExpression()), !dbg !3081
  br label %land.end, !dbg !3082

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3082
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3082
  %0 = load i32*, i32** %arrayidx, align 8, !dbg !3082
  ret i32* %0, !dbg !3082
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !3083 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3087, metadata !DIExpression()), !dbg !3088
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3089
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3089

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3089
  %0 = load i32, i32* %num, align 8, !dbg !3089
  br label %cond.end, !dbg !3089

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3089
  ret i32 %cond, !dbg !3089
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_data_dependence_direction(%struct._IO_FILE* %file, i32 %dir) local_unnamed_addr #5 !dbg !3090 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3094, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %dir, metadata !3095, metadata !DIExpression()), !dbg !3096
  switch i32 %dir, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 5, label %sw.bb9
    i32 6, label %sw.bb11
  ], !dbg !3097

sw.bb:                                            ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #7, !dbg !3098
  br label %sw.epilog, !dbg !3100

sw.bb1:                                           ; preds = %entry
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #7, !dbg !3101
  br label %sw.epilog, !dbg !3102

sw.bb3:                                           ; preds = %entry
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7, !dbg !3103
  br label %sw.epilog, !dbg !3104

sw.bb5:                                           ; preds = %entry
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0)) #7, !dbg !3105
  br label %sw.epilog, !dbg !3106

sw.bb7:                                           ; preds = %entry
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #7, !dbg !3107
  br label %sw.epilog, !dbg !3108

sw.bb9:                                           ; preds = %entry
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0)) #7, !dbg !3109
  br label %sw.epilog, !dbg !3110

sw.bb11:                                          ; preds = %entry
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !3111
  br label %sw.epilog, !dbg !3112

sw.epilog:                                        ; preds = %entry, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !3113
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_dist_dir_vectors(%struct._IO_FILE* %file, %struct.VEC_ddr_p_heap* %ddrs) local_unnamed_addr #5 !dbg !3114 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  %v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3116, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %ddrs, metadata !3117, metadata !DIExpression()), !dbg !3122
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !3123
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3123
  %1 = bitcast i32** %v to i8*, !dbg !3124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3124
  call void @llvm.dbg.value(metadata i32 0, metadata !3118, metadata !DIExpression()), !dbg !3122
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %ddrs, i64 0, i32 0, !dbg !3125
  br label %for.cond, !dbg !3128

for.cond:                                         ; preds = %for.inc49, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc50, %for.inc49 ], !dbg !3129
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3118, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !3120, metadata !DIExpression(DW_OP_deref)), !dbg !3122
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !3130
  %tobool1 = icmp eq i32 %call, 0, !dbg !3131
  br i1 %tobool1, label %for.end51, label %for.body, !dbg !3131

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3132
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %2, metadata !3120, metadata !DIExpression()), !dbg !3122
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %2, i64 0, i32 2, !dbg !3132
  %3 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !3132
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !3134
  br i1 %cmp, label %land.lhs.true, label %for.inc49, !dbg !3135

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %2, metadata !3120, metadata !DIExpression()), !dbg !3122
  %affine_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %2, i64 0, i32 9, !dbg !3136
  %4 = load i8, i8* %affine_p, align 1, !dbg !3136
  %tobool2 = icmp eq i8 %4, 0, !dbg !3136
  br i1 %tobool2, label %for.inc49, label %for.cond3.preheader, !dbg !3137

for.cond3.preheader:                              ; preds = %land.lhs.true
  br label %for.cond3, !dbg !3138

for.cond3:                                        ; preds = %for.cond3.preheader, %cond.end20
  %5 = phi %struct.data_dependence_relation* [ %.pre, %cond.end20 ], [ %2, %for.cond3.preheader ], !dbg !3141
  %j.0 = phi i32 [ %inc, %cond.end20 ], [ 0, %for.cond3.preheader ], !dbg !3143
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3119, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !3120, metadata !DIExpression()), !dbg !3122
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %5, i64 0, i32 6, !dbg !3141
  %6 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !3141
  %tobool4 = icmp eq %struct.VEC_lambda_vector_heap* %6, null, !dbg !3141
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !3141

cond.true5:                                       ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %5, metadata !3120, metadata !DIExpression()), !dbg !3122
  %base7 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %6, i64 0, i32 0, !dbg !3141
  br label %cond.end9, !dbg !3141

cond.end9:                                        ; preds = %for.cond3, %cond.true5
  %cond10 = phi %struct.VEC_lambda_vector_base* [ %base7, %cond.true5 ], [ null, %for.cond3 ], !dbg !3141
  call void @llvm.dbg.value(metadata i32** %v, metadata !3121, metadata !DIExpression(DW_OP_deref)), !dbg !3122
  %call11 = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %cond10, i32 %j.0, i32** nonnull %v) #8, !dbg !3141
  %tobool12 = icmp eq i32 %call11, 0, !dbg !3138
  br i1 %tobool12, label %for.cond24.preheader, label %for.body13, !dbg !3138

for.cond24.preheader:                             ; preds = %cond.end9
  br label %for.cond24, !dbg !3144

for.body13:                                       ; preds = %cond.end9
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0)) #7, !dbg !3146
  %7 = load i32*, i32** %v, align 8, !dbg !3148
  call void @llvm.dbg.value(metadata i32* %7, metadata !3121, metadata !DIExpression()), !dbg !3122
  %8 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3149
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %8, metadata !3120, metadata !DIExpression()), !dbg !3122
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %8, i64 0, i32 4, !dbg !3149
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !3149
  %tobool15 = icmp eq %struct.VEC_loop_p_heap* %9, null, !dbg !3149
  br i1 %tobool15, label %cond.end20, label %cond.true16, !dbg !3149

cond.true16:                                      ; preds = %for.body13
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %8, metadata !3120, metadata !DIExpression()), !dbg !3122
  %base18 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !3149
  br label %cond.end20, !dbg !3149

cond.end20:                                       ; preds = %for.body13, %cond.true16
  %cond21 = phi %struct.VEC_loop_p_base* [ %base18, %cond.true16 ], [ null, %for.body13 ], !dbg !3149
  %call22 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond21) #8, !dbg !3149
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %file, i32* %7, i32 %call22) #8, !dbg !3150
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !3151
  %inc = add i32 %j.0, 1, !dbg !3152
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3119, metadata !DIExpression()), !dbg !3122
  %.pre = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3141
  br label %for.cond3, !dbg !3153, !llvm.loop !3154

for.cond24:                                       ; preds = %for.cond24.preheader, %cond.end42
  %j.1 = phi i32 [ %inc47, %cond.end42 ], [ 0, %for.cond24.preheader ], !dbg !3156
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !3119, metadata !DIExpression()), !dbg !3122
  %10 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3157
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %10, metadata !3120, metadata !DIExpression()), !dbg !3122
  %dir_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %10, i64 0, i32 5, !dbg !3157
  %11 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects, align 8, !dbg !3157
  %tobool25 = icmp eq %struct.VEC_lambda_vector_heap* %11, null, !dbg !3157
  br i1 %tobool25, label %cond.end30, label %cond.true26, !dbg !3157

cond.true26:                                      ; preds = %for.cond24
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %10, metadata !3120, metadata !DIExpression()), !dbg !3122
  %base28 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %11, i64 0, i32 0, !dbg !3157
  br label %cond.end30, !dbg !3157

cond.end30:                                       ; preds = %for.cond24, %cond.true26
  %cond31 = phi %struct.VEC_lambda_vector_base* [ %base28, %cond.true26 ], [ null, %for.cond24 ], !dbg !3157
  call void @llvm.dbg.value(metadata i32** %v, metadata !3121, metadata !DIExpression(DW_OP_deref)), !dbg !3122
  %call32 = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %cond31, i32 %j.1, i32** nonnull %v) #8, !dbg !3157
  %tobool33 = icmp eq i32 %call32, 0, !dbg !3144
  br i1 %tobool33, label %for.inc49.loopexit, label %for.body34, !dbg !3144

for.body34:                                       ; preds = %cond.end30
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i64 0, i64 0)) #7, !dbg !3159
  %12 = load i32*, i32** %v, align 8, !dbg !3161
  call void @llvm.dbg.value(metadata i32* %12, metadata !3121, metadata !DIExpression()), !dbg !3122
  %13 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3162
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %13, metadata !3120, metadata !DIExpression()), !dbg !3122
  %loop_nest36 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %13, i64 0, i32 4, !dbg !3162
  %14 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest36, align 8, !dbg !3162
  %tobool37 = icmp eq %struct.VEC_loop_p_heap* %14, null, !dbg !3162
  br i1 %tobool37, label %cond.end42, label %cond.true38, !dbg !3162

cond.true38:                                      ; preds = %for.body34
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %13, metadata !3120, metadata !DIExpression()), !dbg !3122
  %base40 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %14, i64 0, i32 0, !dbg !3162
  br label %cond.end42, !dbg !3162

cond.end42:                                       ; preds = %for.body34, %cond.true38
  %cond43 = phi %struct.VEC_loop_p_base* [ %base40, %cond.true38 ], [ null, %for.body34 ], !dbg !3162
  %call44 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond43) #8, !dbg !3162
  call void @print_direction_vector(%struct._IO_FILE* %file, i32* %12, i32 %call44) #8, !dbg !3163
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !3164
  %inc47 = add i32 %j.1, 1, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %inc47, metadata !3119, metadata !DIExpression()), !dbg !3122
  br label %for.cond24, !dbg !3166, !llvm.loop !3167

for.inc49.loopexit:                               ; preds = %cond.end30
  br label %for.inc49, !dbg !3169

for.inc49:                                        ; preds = %for.inc49.loopexit, %land.lhs.true, %for.body
  %inc50 = add i32 %i.0, 1, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %inc50, metadata !3118, metadata !DIExpression()), !dbg !3122
  br label %for.cond, !dbg !3170, !llvm.loop !3171

for.end51:                                        ; preds = %for.cond
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !3173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3174
  ret void, !dbg !3174
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_ddrs(%struct._IO_FILE* %file, %struct.VEC_ddr_p_heap* %ddrs) local_unnamed_addr #5 !dbg !3175 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3177, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %ddrs, metadata !3178, metadata !DIExpression()), !dbg !3181
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !3182
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3182
  call void @llvm.dbg.value(metadata i32 0, metadata !3179, metadata !DIExpression()), !dbg !3181
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %ddrs, i64 0, i32 0, !dbg !3183
  br label %for.cond, !dbg !3186

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3187
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3179, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !3180, metadata !DIExpression(DW_OP_deref)), !dbg !3181
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !3188
  %tobool1 = icmp eq i32 %call, 0, !dbg !3189
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3189

for.body:                                         ; preds = %for.cond
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %1, metadata !3180, metadata !DIExpression()), !dbg !3181
  call void @dump_data_dependence_relation(%struct._IO_FILE* %file, %struct.data_dependence_relation* %1) #8, !dbg !3191
  %inc = add i32 %i.0, 1, !dbg !3192
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3179, metadata !DIExpression()), !dbg !3181
  br label %for.cond, !dbg !3193, !llvm.loop !3194

for.end:                                          ; preds = %for.cond
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !3196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3197
  ret void, !dbg !3197
}

; Function Attrs: nounwind uwtable
define dso_local void @split_constant_offset(%union.tree_node* %exp, %union.tree_node** %var, %union.tree_node** %off) local_unnamed_addr #5 !dbg !3198 {
entry:
  %op0 = alloca %union.tree_node*, align 8
  %op1 = alloca %union.tree_node*, align 8
  %e = alloca %union.tree_node*, align 8
  %o = alloca %union.tree_node*, align 8
  %code = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !3202, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !3203, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node** %off, metadata !3204, metadata !DIExpression()), !dbg !3212
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3213
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !3213
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3205, metadata !DIExpression()), !dbg !3212
  %1 = bitcast %union.tree_node** %op0 to i8*, !dbg !3214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3214
  %2 = bitcast %union.tree_node** %op1 to i8*, !dbg !3214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3214
  %3 = bitcast %union.tree_node** %e to i8*, !dbg !3214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3214
  %4 = bitcast %union.tree_node** %o to i8*, !dbg !3214
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3214
  %5 = bitcast i32* %code to i8*, !dbg !3215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !3215
  store %union.tree_node* %exp, %union.tree_node** %var, align 8, !dbg !3216
  %call = tail call %union.tree_node* @size_int_kind(i64 0, i32 1) #7, !dbg !3217
  store %union.tree_node* %call, %union.tree_node** %off, align 8, !dbg !3218
  %call2 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %exp) #7, !dbg !3219
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3202, metadata !DIExpression()), !dbg !3212
  %call3 = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %call2) #8, !dbg !3220
  %tobool = icmp eq i8 %call3, 0, !dbg !3220
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3222

if.end:                                           ; preds = %entry
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3223
  %6 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !3223
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3206, metadata !DIExpression()), !dbg !3212
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3224
  %bf.load = load i64, i64* %7, align 8, !dbg !3224
  %8 = trunc i64 %bf.load to i32, !dbg !3224
  %bf.cast = and i32 %8, 65535, !dbg !3224
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3211, metadata !DIExpression()), !dbg !3212
  store i32 %bf.cast, i32* %code, align 4, !dbg !3225
  call void @llvm.dbg.value(metadata %union.tree_node** %op0, metadata !3207, metadata !DIExpression(DW_OP_deref)), !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node** %op1, metadata !3208, metadata !DIExpression(DW_OP_deref)), !dbg !3212
  call void @llvm.dbg.value(metadata i32* %code, metadata !3211, metadata !DIExpression(DW_OP_deref)), !dbg !3212
  call void @extract_ops_from_tree(%union.tree_node* %call2, i32* nonnull %code, %union.tree_node** nonnull %op0, %union.tree_node** nonnull %op1) #7, !dbg !3226
  %9 = load %union.tree_node*, %union.tree_node** %op0, align 8, !dbg !3227
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !3207, metadata !DIExpression()), !dbg !3212
  %10 = load i32, i32* %code, align 4, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %10, metadata !3211, metadata !DIExpression()), !dbg !3212
  %11 = load %union.tree_node*, %union.tree_node** %op1, align 8, !dbg !3230
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3208, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node** %e, metadata !3209, metadata !DIExpression(DW_OP_deref)), !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node** %o, metadata !3210, metadata !DIExpression(DW_OP_deref)), !dbg !3212
  %call6 = call fastcc zeroext i8 @split_constant_offset_1(%union.tree_node* %6, %union.tree_node* %9, i32 %10, %union.tree_node* %11, %union.tree_node** nonnull %e, %union.tree_node** nonnull %o) #8, !dbg !3231
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3231
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !3232

if.then8:                                         ; preds = %if.end
  %12 = load %union.tree_node*, %union.tree_node** %e, align 8, !dbg !3233
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !3209, metadata !DIExpression()), !dbg !3212
  %call9 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %12) #7, !dbg !3233
  store %union.tree_node* %call9, %union.tree_node** %var, align 8, !dbg !3235
  %13 = bitcast %union.tree_node** %o to i64*, !dbg !3236
  %14 = load i64, i64* %13, align 8, !dbg !3236
  %15 = bitcast %union.tree_node** %off to i64*, !dbg !3237
  store i64 %14, i64* %15, align 8, !dbg !3237
  br label %cleanup, !dbg !3238

cleanup:                                          ; preds = %if.end, %entry, %if.then8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3239
  ret void, !dbg !3239
}

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !3240 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !3246, metadata !DIExpression()), !dbg !3247
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !3248
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !3249
  %1 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !3250
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !3250
  %2 = or i1 %cmp, %cmp1, !dbg !3250
  %conv = zext i1 %2 to i8, !dbg !3251
  ret i8 %conv, !dbg !3252
}

declare dso_local void @extract_ops_from_tree(%union.tree_node*, i32*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @split_constant_offset_1(%union.tree_node* %type, %union.tree_node* %op0, i32 %code, %union.tree_node* %op1, %union.tree_node** %var, %union.tree_node** %off) unnamed_addr #5 !dbg !3253 {
entry:
  %var0 = alloca %union.tree_node*, align 8
  %var1 = alloca %union.tree_node*, align 8
  %off0 = alloca %union.tree_node*, align 8
  %off1 = alloca %union.tree_node*, align 8
  %poffset = alloca %union.tree_node*, align 8
  %pbitsize = alloca i64, align 8
  %pbitpos = alloca i64, align 8
  %pmode = alloca i32, align 4
  %punsignedp = alloca i32, align 4
  %pvolatilep = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3257, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !3258, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 %code, metadata !3259, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !3260, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !3261, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %off, metadata !3262, metadata !DIExpression()), !dbg !3282
  %0 = bitcast %union.tree_node** %var0 to i8*, !dbg !3283
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3283
  %1 = bitcast %union.tree_node** %var1 to i8*, !dbg !3283
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3283
  %2 = bitcast %union.tree_node** %off0 to i8*, !dbg !3284
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3284
  %3 = bitcast %union.tree_node** %off1 to i8*, !dbg !3284
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3284
  call void @llvm.dbg.value(metadata i32 %code, metadata !3267, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* null, %union.tree_node** %var, align 8, !dbg !3285
  store %union.tree_node* null, %union.tree_node** %off, align 8, !dbg !3286
  switch i32 %code, label %cleanup171 [
    i32 23, label %sw.bb
    i32 66, label %sw.bb2
    i32 63, label %sw.bb3
    i32 64, label %sw.bb3
    i32 65, label %sw.bb6
    i32 121, label %sw.bb10
    i32 141, label %sw.bb73
    i32 116, label %sw.bb85
    i32 113, label %sw.bb85
  ], !dbg !3287

sw.bb:                                            ; preds = %entry
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* %type, i64 0) #7, !dbg !3288
  store %union.tree_node* %call, %union.tree_node** %var, align 8, !dbg !3289
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3290
  %call1 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %4, %union.tree_node* %op0) #7, !dbg !3290
  store %union.tree_node* %call1, %union.tree_node** %off, align 8, !dbg !3291
  br label %cleanup171, !dbg !3292

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 63, metadata !3267, metadata !DIExpression()), !dbg !3282
  br label %sw.bb3, !dbg !3293

sw.bb3:                                           ; preds = %entry, %entry, %sw.bb2
  %ocode.0 = phi i32 [ %code, %entry ], [ %code, %entry ], [ 63, %sw.bb2 ], !dbg !3282
  call void @llvm.dbg.value(metadata i32 %ocode.0, metadata !3267, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %var0, metadata !3263, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %off0, metadata !3265, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @split_constant_offset(%union.tree_node* %op0, %union.tree_node** nonnull %var0, %union.tree_node** nonnull %off0) #8, !dbg !3294
  call void @llvm.dbg.value(metadata %union.tree_node** %var1, metadata !3264, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %off1, metadata !3266, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @split_constant_offset(%union.tree_node* %op1, %union.tree_node** nonnull %var1, %union.tree_node** nonnull %off1) #8, !dbg !3295
  %5 = load %union.tree_node*, %union.tree_node** %var0, align 8, !dbg !3296
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3263, metadata !DIExpression()), !dbg !3282
  %6 = load %union.tree_node*, %union.tree_node** %var1, align 8, !dbg !3296
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3264, metadata !DIExpression()), !dbg !3282
  %call4 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %code, %union.tree_node* %type, %union.tree_node* %5, %union.tree_node* %6) #7, !dbg !3296
  store %union.tree_node* %call4, %union.tree_node** %var, align 8, !dbg !3297
  %7 = load %union.tree_node*, %union.tree_node** %off0, align 8, !dbg !3298
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3265, metadata !DIExpression()), !dbg !3282
  %8 = load %union.tree_node*, %union.tree_node** %off1, align 8, !dbg !3298
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3266, metadata !DIExpression()), !dbg !3282
  %call5 = call %union.tree_node* @size_binop_loc(i32 0, i32 %ocode.0, %union.tree_node* %7, %union.tree_node* %8) #7, !dbg !3298
  store %union.tree_node* %call5, %union.tree_node** %off, align 8, !dbg !3299
  br label %cleanup171, !dbg !3300

sw.bb6:                                           ; preds = %entry
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3301
  %bf.load = load i64, i64* %9, align 8, !dbg !3301
  %bf.cast19 = and i64 %bf.load, 65535, !dbg !3303
  %cmp = icmp eq i64 %bf.cast19, 23, !dbg !3303
  br i1 %cmp, label %if.end, label %cleanup171, !dbg !3304

if.end:                                           ; preds = %sw.bb6
  call void @llvm.dbg.value(metadata %union.tree_node** %var0, metadata !3263, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %off0, metadata !3265, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @split_constant_offset(%union.tree_node* %op0, %union.tree_node** nonnull %var0, %union.tree_node** nonnull %off0) #8, !dbg !3305
  %10 = load %union.tree_node*, %union.tree_node** %var0, align 8, !dbg !3306
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3263, metadata !DIExpression()), !dbg !3282
  %call7 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %type, %union.tree_node* %10, %union.tree_node* %op1) #7, !dbg !3306
  store %union.tree_node* %call7, %union.tree_node** %var, align 8, !dbg !3307
  %11 = load %union.tree_node*, %union.tree_node** %off0, align 8, !dbg !3308
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3265, metadata !DIExpression()), !dbg !3282
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3308
  %call8 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %12, %union.tree_node* %op1) #7, !dbg !3308
  %call9 = call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %11, %union.tree_node* %call8) #7, !dbg !3308
  store %union.tree_node* %call9, %union.tree_node** %off, align 8, !dbg !3309
  br label %cleanup171, !dbg !3310

sw.bb10:                                          ; preds = %entry
  %13 = bitcast %union.tree_node** %poffset to i8*, !dbg !3311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6, !dbg !3311
  %14 = bitcast i64* %pbitsize to i8*, !dbg !3312
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6, !dbg !3312
  %15 = bitcast i64* %pbitpos to i8*, !dbg !3312
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6, !dbg !3312
  %16 = bitcast i32* %pmode to i8*, !dbg !3313
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #6, !dbg !3313
  %17 = bitcast i32* %punsignedp to i8*, !dbg !3314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #6, !dbg !3314
  %18 = bitcast i32* %pvolatilep to i8*, !dbg !3314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #6, !dbg !3314
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3315
  %19 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3315
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !3258, metadata !DIExpression()), !dbg !3282
  %call12 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %19) #8, !dbg !3316
  %tobool = icmp eq i8 %call12, 0, !dbg !3316
  br i1 %tobool, label %cleanup, label %if.end14, !dbg !3318

if.end14:                                         ; preds = %sw.bb10
  call void @llvm.dbg.value(metadata %union.tree_node** %poffset, metadata !3271, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @llvm.dbg.value(metadata i64* %pbitsize, metadata !3272, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @llvm.dbg.value(metadata i64* %pbitpos, metadata !3273, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @llvm.dbg.value(metadata i32* %pmode, metadata !3274, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @llvm.dbg.value(metadata i32* %punsignedp, metadata !3275, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @llvm.dbg.value(metadata i32* %pvolatilep, metadata !3276, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  %call15 = call %union.tree_node* @get_inner_reference(%union.tree_node* %19, i64* nonnull %pbitsize, i64* nonnull %pbitpos, %union.tree_node** nonnull %poffset, i32* nonnull %pmode, i32* nonnull %punsignedp, i32* nonnull %pvolatilep, i8 zeroext 0) #7, !dbg !3320
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3268, metadata !DIExpression()), !dbg !3319
  %20 = load i64, i64* %pbitpos, align 8, !dbg !3321
  call void @llvm.dbg.value(metadata i64 %20, metadata !3273, metadata !DIExpression()), !dbg !3319
  %rem14 = and i64 %20, 7, !dbg !3323
  %cmp16 = icmp eq i64 %rem14, 0, !dbg !3323
  br i1 %cmp16, label %if.end18, label %cleanup, !dbg !3324

if.end18:                                         ; preds = %if.end14
  %call19 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call15) #7, !dbg !3325
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !3268, metadata !DIExpression()), !dbg !3319
  %21 = load i64, i64* %pbitpos, align 8, !dbg !3326
  call void @llvm.dbg.value(metadata i64 %21, metadata !3273, metadata !DIExpression()), !dbg !3319
  %div = sdiv i64 %21, 8, !dbg !3326
  %call20 = call %union.tree_node* @size_int_kind(i64 %div, i32 1) #7, !dbg !3326
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !3265, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* %call20, %union.tree_node** %off0, align 8, !dbg !3327
  %22 = load %union.tree_node*, %union.tree_node** %poffset, align 8, !dbg !3328
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3271, metadata !DIExpression()), !dbg !3319
  %tobool21 = icmp eq %union.tree_node* %22, null, !dbg !3328
  br i1 %tobool21, label %if.end49, label %if.then22, !dbg !3330

if.then22:                                        ; preds = %if.end18
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3271, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata %union.tree_node** %off1, metadata !3266, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node** %poffset, metadata !3271, metadata !DIExpression(DW_OP_deref)), !dbg !3319
  call void @split_constant_offset(%union.tree_node* nonnull %22, %union.tree_node** nonnull %poffset, %union.tree_node** nonnull %off1) #8, !dbg !3331
  %23 = load %union.tree_node*, %union.tree_node** %off0, align 8, !dbg !3333
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3265, metadata !DIExpression()), !dbg !3282
  %24 = load %union.tree_node*, %union.tree_node** %off1, align 8, !dbg !3333
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !3266, metadata !DIExpression()), !dbg !3282
  %call23 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %23, %union.tree_node* %24) #7, !dbg !3333
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !3265, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* %call23, %union.tree_node** %off0, align 8, !dbg !3334
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3335
  %25 = bitcast %union.tree_node** %type24 to i64**, !dbg !3335
  %26 = load i64*, i64** %25, align 8, !dbg !3335
  %bf.load26 = load i64, i64* %26, align 8, !dbg !3335
  %bf.cast2817 = and i64 %bf.load26, 65535, !dbg !3335
  %cmp29 = icmp eq i64 %bf.cast2817, 10, !dbg !3335
  %27 = bitcast i64* %26 to %union.tree_node*, !dbg !3335
  br i1 %cmp29, label %if.then37, label %lor.lhs.false, !dbg !3335

lor.lhs.false:                                    ; preds = %if.then22
  %cmp36 = icmp eq i64 %bf.cast2817, 12, !dbg !3335
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !3337

if.then37:                                        ; preds = %lor.lhs.false, %if.then22
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !3338
  %29 = load %union.tree_node*, %union.tree_node** %poffset, align 8, !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3271, metadata !DIExpression()), !dbg !3319
  %call40 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %28, %union.tree_node* %29) #7, !dbg !3338
  %call41 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %27, %union.tree_node* %call19, %union.tree_node* %call40) #7, !dbg !3338
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !3268, metadata !DIExpression()), !dbg !3319
  br label %if.end49, !dbg !3339

if.else:                                          ; preds = %lor.lhs.false
  %30 = load %union.tree_node*, %union.tree_node** %poffset, align 8, !dbg !3340
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !3271, metadata !DIExpression()), !dbg !3319
  %call46 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %27, %union.tree_node* %30) #7, !dbg !3340
  %call47 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 63, %union.tree_node* %27, %union.tree_node* %call19, %union.tree_node* %call46) #7, !dbg !3340
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !3268, metadata !DIExpression()), !dbg !3319
  br label %if.end49

if.end49:                                         ; preds = %if.end18, %if.then37, %if.else
  %base11.1 = phi %union.tree_node* [ %call19, %if.end18 ], [ %call41, %if.then37 ], [ %call47, %if.else ], !dbg !3319
  call void @llvm.dbg.value(metadata %union.tree_node* %base11.1, metadata !3268, metadata !DIExpression()), !dbg !3319
  %call50 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %base11.1) #7, !dbg !3341
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !3263, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* %call50, %union.tree_node** %var0, align 8, !dbg !3342
  br label %while.cond, !dbg !3343

while.cond:                                       ; preds = %while.body, %if.end49
  %type.addr.0 = phi %union.tree_node* [ %type, %if.end49 ], [ %32, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !3257, metadata !DIExpression()), !dbg !3282
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3344
  %bf.load52 = load i64, i64* %31, align 8, !dbg !3344
  %bf.cast5415 = and i64 %bf.load52, 65535, !dbg !3344
  %cmp55 = icmp eq i64 %bf.cast5415, 10, !dbg !3344
  %cmp60 = icmp eq i64 %bf.cast5415, 12, !dbg !3344
  %or.cond = or i1 %cmp55, %cmp60, !dbg !3344
  br i1 %or.cond, label %while.body, label %while.end, !dbg !3344

while.body:                                       ; preds = %while.cond
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3345
  %32 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !3345
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !3257, metadata !DIExpression()), !dbg !3282
  br label %while.cond, !dbg !3343, !llvm.loop !3346

while.end:                                        ; preds = %while.cond
  %type.addr.0.lcssa = phi %union.tree_node* [ %type.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3257, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3257, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3257, metadata !DIExpression()), !dbg !3282
  %call63 = call i64 @int_size_in_bytes(%union.tree_node* %type.addr.0.lcssa) #7, !dbg !3347
  %cmp64 = icmp slt i64 %call63, 0, !dbg !3349
  br i1 %cmp64, label %cleanup, label %if.end66, !dbg !3350

if.end66:                                         ; preds = %while.end
  %33 = bitcast %union.tree_node** %var0 to i64*, !dbg !3351
  %34 = load i64, i64* %33, align 8, !dbg !3351
  %35 = bitcast %union.tree_node** %var to i64*, !dbg !3352
  store i64 %34, i64* %35, align 8, !dbg !3352
  %36 = bitcast %union.tree_node** %off0 to i64*, !dbg !3353
  %37 = load i64, i64* %36, align 8, !dbg !3353
  %38 = bitcast %union.tree_node** %off to i64*, !dbg !3354
  store i64 %37, i64* %38, align 8, !dbg !3354
  br label %cleanup, !dbg !3355

cleanup:                                          ; preds = %if.end14, %sw.bb10, %while.end, %if.end66
  %retval.0 = phi i8 [ 1, %if.end66 ], [ 0, %sw.bb10 ], [ 0, %if.end14 ], [ 0, %while.end ], !dbg !3319
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #6, !dbg !3356
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #6, !dbg !3356
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6, !dbg !3356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6, !dbg !3356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6, !dbg !3356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6, !dbg !3356
  br label %cleanup171

sw.bb73:                                          ; preds = %entry
  %def_stmt74 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3357
  %39 = bitcast %union.tree_node** %def_stmt74 to %union.gimple_statement_d**, !dbg !3357
  %40 = load %union.gimple_statement_d*, %union.gimple_statement_d** %39, align 8, !dbg !3357
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %40, metadata !3277, metadata !DIExpression()), !dbg !3358
  %call75 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %40) #8, !dbg !3359
  %cmp76 = icmp eq i32 %call75, 6, !dbg !3361
  br i1 %cmp76, label %if.end78, label %cleanup171, !dbg !3362

if.end78:                                         ; preds = %sw.bb73
  %call79 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %40) #8, !dbg !3363
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !3263, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* %call79, %union.tree_node** %var0, align 8, !dbg !3364
  %call80 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %40) #8, !dbg !3365
  call void @llvm.dbg.value(metadata i32 %call80, metadata !3279, metadata !DIExpression()), !dbg !3358
  %call81 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %40) #8, !dbg !3366
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !3264, metadata !DIExpression()), !dbg !3282
  store %union.tree_node* %call81, %union.tree_node** %var1, align 8, !dbg !3367
  call void @llvm.dbg.value(metadata %union.tree_node* %call79, metadata !3263, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !3264, metadata !DIExpression()), !dbg !3282
  %call82 = tail call fastcc zeroext i8 @split_constant_offset_1(%union.tree_node* %type, %union.tree_node* %call79, i32 %call80, %union.tree_node* %call81, %union.tree_node** %var, %union.tree_node** %off) #8, !dbg !3368
  br label %cleanup171, !dbg !3369

sw.bb85:                                          ; preds = %entry, %entry
  %type87 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3370
  %41 = load %union.tree_node*, %union.tree_node** %type87, align 8, !dbg !3370
  call void @llvm.dbg.value(metadata %union.tree_node* %41, metadata !3280, metadata !DIExpression()), !dbg !3371
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3372
  %bf.load89 = load i64, i64* %42, align 8, !dbg !3372
  %bf.cast913 = and i64 %bf.load89, 65535, !dbg !3372
  %cmp92 = icmp eq i64 %bf.cast913, 10, !dbg !3372
  br i1 %cmp92, label %land.lhs.true128, label %lor.lhs.false93, !dbg !3372

lor.lhs.false93:                                  ; preds = %sw.bb85
  %cmp98 = icmp eq i64 %bf.cast913, 12, !dbg !3372
  br i1 %cmp98, label %land.lhs.true128, label %lor.lhs.false99, !dbg !3374

lor.lhs.false99:                                  ; preds = %lor.lhs.false93
  %cmp104 = icmp eq i64 %bf.cast913, 6, !dbg !3375
  br i1 %cmp104, label %land.lhs.true, label %lor.lhs.false105, !dbg !3375

lor.lhs.false105:                                 ; preds = %lor.lhs.false99
  %cmp110 = icmp eq i64 %bf.cast913, 7, !dbg !3375
  br i1 %cmp110, label %land.lhs.true, label %lor.lhs.false111, !dbg !3375

lor.lhs.false111:                                 ; preds = %lor.lhs.false105
  %cmp116 = icmp eq i64 %bf.cast913, 8, !dbg !3375
  br i1 %cmp116, label %land.lhs.true, label %cleanup171, !dbg !3376

land.lhs.true:                                    ; preds = %lor.lhs.false111, %lor.lhs.false105, %lor.lhs.false99
  %bf.cast1208 = and i64 %bf.load89, 2097152, !dbg !3377
  %tobool121 = icmp eq i64 %bf.cast1208, 0, !dbg !3377
  %43 = load i32, i32* @flag_wrapv, align 4, !dbg !3377
  %44 = load i32, i32* @flag_trapv, align 4, !dbg !3377
  %45 = or i32 %43, %44, !dbg !3377
  %46 = icmp eq i32 %45, 0, !dbg !3377
  %or.cond1.not = and i1 %tobool121, %46, !dbg !3377
  %47 = load i32, i32* @flag_strict_overflow, align 4, !dbg !3377
  %tobool127 = icmp ne i32 %47, 0, !dbg !3377
  %or.cond2 = and i1 %or.cond1.not, %tobool127, !dbg !3377
  br i1 %or.cond2, label %land.lhs.true128, label %cleanup171, !dbg !3377

land.lhs.true128:                                 ; preds = %land.lhs.true, %lor.lhs.false93, %sw.bb85
  %type129 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !3378
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i64 0, i32 6, !dbg !3378
  %bf.load130 = load i32, i32* %precision, align 4, !dbg !3378
  %bf.clear131 = and i32 %bf.load130, 1023, !dbg !3378
  %type132 = bitcast %union.tree_node* %41 to %struct.tree_type*, !dbg !3379
  %precision133 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type132, i64 0, i32 6, !dbg !3379
  %bf.load134 = load i32, i32* %precision133, align 4, !dbg !3379
  %bf.clear135 = and i32 %bf.load134, 1023, !dbg !3379
  %cmp136 = icmp ult i32 %bf.clear131, %bf.clear135, !dbg !3380
  br i1 %cmp136, label %cleanup171, label %land.lhs.true137, !dbg !3381

land.lhs.true137:                                 ; preds = %land.lhs.true128
  %48 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3382
  %bf.load139 = load i64, i64* %48, align 8, !dbg !3382
  %bf.cast1419 = and i64 %bf.load139, 65535, !dbg !3382
  %cmp142 = icmp eq i64 %bf.cast1419, 10, !dbg !3382
  br i1 %cmp142, label %if.then167, label %lor.lhs.false143, !dbg !3382

lor.lhs.false143:                                 ; preds = %land.lhs.true137
  %cmp148 = icmp eq i64 %bf.cast1419, 12, !dbg !3382
  br i1 %cmp148, label %if.then167, label %lor.lhs.false149, !dbg !3383

lor.lhs.false149:                                 ; preds = %lor.lhs.false143
  %cmp154 = icmp eq i64 %bf.cast1419, 6, !dbg !3384
  br i1 %cmp154, label %if.then167, label %lor.lhs.false155, !dbg !3384

lor.lhs.false155:                                 ; preds = %lor.lhs.false149
  %cmp160 = icmp eq i64 %bf.cast1419, 7, !dbg !3384
  br i1 %cmp160, label %if.then167, label %lor.lhs.false161, !dbg !3384

lor.lhs.false161:                                 ; preds = %lor.lhs.false155
  %cmp166 = icmp eq i64 %bf.cast1419, 8, !dbg !3384
  br i1 %cmp166, label %if.then167, label %cleanup171, !dbg !3385

if.then167:                                       ; preds = %lor.lhs.false161, %lor.lhs.false155, %lor.lhs.false149, %lor.lhs.false143, %land.lhs.true137
  call void @llvm.dbg.value(metadata %union.tree_node** %var0, metadata !3263, metadata !DIExpression(DW_OP_deref)), !dbg !3282
  call void @split_constant_offset(%union.tree_node* %op0, %union.tree_node** nonnull %var0, %union.tree_node** %off) #8, !dbg !3386
  %49 = load %union.tree_node*, %union.tree_node** %var0, align 8, !dbg !3388
  call void @llvm.dbg.value(metadata %union.tree_node* %49, metadata !3263, metadata !DIExpression()), !dbg !3282
  %call168 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %49) #7, !dbg !3388
  store %union.tree_node* %call168, %union.tree_node** %var, align 8, !dbg !3389
  br label %cleanup171, !dbg !3390

cleanup171:                                       ; preds = %sw.bb6, %sw.bb73, %land.lhs.true128, %entry, %if.then167, %land.lhs.true, %lor.lhs.false161, %lor.lhs.false111, %if.end78, %cleanup, %if.end, %sw.bb3, %sw.bb
  %retval.3 = phi i8 [ %retval.0, %cleanup ], [ 1, %if.end ], [ 1, %sw.bb3 ], [ 1, %sw.bb ], [ 0, %sw.bb6 ], [ %call82, %if.end78 ], [ 0, %sw.bb73 ], [ 1, %if.then167 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false161 ], [ 0, %land.lhs.true128 ], [ 0, %lor.lhs.false111 ], [ 0, %entry ], !dbg !3391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3392
  ret i8 %retval.3, !dbg !3392
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @dr_analyze_innermost(%struct.data_reference* %dr) local_unnamed_addr #5 !dbg !3393 {
entry:
  %pbitsize = alloca i64, align 8
  %pbitpos = alloca i64, align 8
  %poffset = alloca %union.tree_node*, align 8
  %pmode = alloca i32, align 4
  %punsignedp = alloca i32, align 4
  %pvolatilep = alloca i32, align 4
  %base_iv = alloca %struct.affine_iv, align 8
  %offset_iv = alloca %struct.affine_iv, align 8
  %dinit = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !3397, metadata !DIExpression()), !dbg !3420
  %stmt1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 0, !dbg !3421
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !3421
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !3398, metadata !DIExpression()), !dbg !3420
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %0) #8, !dbg !3422
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !3399, metadata !DIExpression()), !dbg !3420
  %ref2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 1, !dbg !3423
  %1 = load %union.tree_node*, %union.tree_node** %ref2, align 8, !dbg !3423
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3400, metadata !DIExpression()), !dbg !3420
  %2 = bitcast i64* %pbitsize to i8*, !dbg !3424
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3424
  %3 = bitcast i64* %pbitpos to i8*, !dbg !3424
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3424
  %4 = bitcast %union.tree_node** %poffset to i8*, !dbg !3425
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3425
  %5 = bitcast i32* %pmode to i8*, !dbg !3426
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !3426
  %6 = bitcast i32* %punsignedp to i8*, !dbg !3427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !3427
  %7 = bitcast i32* %pvolatilep to i8*, !dbg !3427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !3427
  %8 = bitcast %struct.affine_iv* %base_iv to i8*, !dbg !3428
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6, !dbg !3428
  %9 = bitcast %struct.affine_iv* %offset_iv to i8*, !dbg !3428
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3428
  %10 = bitcast %union.tree_node** %dinit to i8*, !dbg !3429
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !3429
  %tobool = icmp eq %struct.loop* %call, null, !dbg !3430
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3431

land.rhs:                                         ; preds = %entry
  %num = getelementptr inbounds %struct.loop, %struct.loop* %call, i64 0, i32 0, !dbg !3432
  %11 = load i32, i32* %num, align 8, !dbg !3432
  %tobool3 = icmp ne i32 %11, 0, !dbg !3431
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %12 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %12, metadata !3419, metadata !DIExpression()), !dbg !3420
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3433
  %tobool4 = icmp eq %struct._IO_FILE* %13, null, !dbg !3433
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !3435

land.lhs.true:                                    ; preds = %land.end
  %14 = load i32, i32* @dump_flags, align 4, !dbg !3436
  %and = and i32 %14, 8, !dbg !3437
  %tobool5 = icmp eq i32 %and, 0, !dbg !3437
  br i1 %tobool5, label %if.end, label %if.then, !dbg !3438

if.then:                                          ; preds = %land.lhs.true
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0)) #7, !dbg !3439
  br label %if.end, !dbg !3439

if.end:                                           ; preds = %land.lhs.true, %land.end, %if.then
  call void @llvm.dbg.value(metadata i64* %pbitsize, metadata !3401, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @llvm.dbg.value(metadata i64* %pbitpos, metadata !3402, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @llvm.dbg.value(metadata %union.tree_node** %poffset, metadata !3404, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @llvm.dbg.value(metadata i32* %pmode, metadata !3405, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @llvm.dbg.value(metadata i32* %punsignedp, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @llvm.dbg.value(metadata i32* %pvolatilep, metadata !3407, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  %call7 = call %union.tree_node* @get_inner_reference(%union.tree_node* %1, i64* nonnull %pbitsize, i64* nonnull %pbitpos, %union.tree_node** nonnull %poffset, i32* nonnull %pmode, i32* nonnull %punsignedp, i32* nonnull %pvolatilep, i8 zeroext 0) #7, !dbg !3440
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3403, metadata !DIExpression()), !dbg !3420
  %cmp = icmp eq %union.tree_node* %call7, null, !dbg !3441
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3441

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 742, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !3441
  br label %cond.end, !dbg !3441

cond.end:                                         ; preds = %if.end, %cond.true
  %15 = load i64, i64* %pbitpos, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata i64 %15, metadata !3402, metadata !DIExpression()), !dbg !3420
  %rem1 = and i64 %15, 7, !dbg !3444
  %cmp9 = icmp eq i64 %rem1, 0, !dbg !3444
  br i1 %cmp9, label %if.end19, label %if.then11, !dbg !3445

if.then11:                                        ; preds = %cond.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3446
  %tobool12 = icmp eq %struct._IO_FILE* %16, null, !dbg !3446
  br i1 %tobool12, label %cleanup, label %land.lhs.true13, !dbg !3449

land.lhs.true13:                                  ; preds = %if.then11
  %17 = load i32, i32* @dump_flags, align 4, !dbg !3450
  %and14 = and i32 %17, 8, !dbg !3451
  %tobool15 = icmp eq i32 %and14, 0, !dbg !3451
  br i1 %tobool15, label %cleanup, label %if.then16, !dbg !3452

if.then16:                                        ; preds = %land.lhs.true13
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i64 0, i64 0)) #7, !dbg !3453
  br label %cleanup, !dbg !3453

if.end19:                                         ; preds = %cond.end
  %call20 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call7) #7, !dbg !3454
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !3403, metadata !DIExpression()), !dbg !3420
  %tobool21 = icmp eq i8 %12, 0, !dbg !3455
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !3457

if.then22:                                        ; preds = %if.end19
  %call23 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %0) #8, !dbg !3458
  call void @llvm.dbg.value(metadata %struct.affine_iv* %base_iv, metadata !3408, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  %call24 = call zeroext i8 @simple_iv(%struct.loop* %call, %struct.loop* %call23, %union.tree_node* %call20, %struct.affine_iv* nonnull %base_iv, i8 zeroext 0) #7, !dbg !3461
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3461
  br i1 %tobool25, label %if.then26, label %if.end38, !dbg !3462

if.then26:                                        ; preds = %if.then22
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3463
  %tobool27 = icmp eq %struct._IO_FILE* %18, null, !dbg !3463
  br i1 %tobool27, label %cleanup, label %land.lhs.true28, !dbg !3466

land.lhs.true28:                                  ; preds = %if.then26
  %19 = load i32, i32* @dump_flags, align 4, !dbg !3467
  %and29 = and i32 %19, 8, !dbg !3468
  %tobool30 = icmp eq i32 %and29, 0, !dbg !3468
  br i1 %tobool30, label %cleanup, label %if.then31, !dbg !3469

if.then31:                                        ; preds = %land.lhs.true28
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0)) #7, !dbg !3470
  br label %cleanup, !dbg !3470

if.else:                                          ; preds = %if.end19
  %base35 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %base_iv, i64 0, i32 0, !dbg !3471
  store %union.tree_node* %call20, %union.tree_node** %base35, align 8, !dbg !3473
  %call36 = call %union.tree_node* @size_int_kind(i64 0, i32 1) #7, !dbg !3474
  %step37 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %base_iv, i64 0, i32 1, !dbg !3475
  store %union.tree_node* %call36, %union.tree_node** %step37, align 8, !dbg !3476
  %no_overflow = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %base_iv, i64 0, i32 2, !dbg !3477
  store i8 1, i8* %no_overflow, align 8, !dbg !3478
  br label %if.end38

if.end38:                                         ; preds = %if.then22, %if.else
  %20 = load %union.tree_node*, %union.tree_node** %poffset, align 8, !dbg !3479
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !3404, metadata !DIExpression()), !dbg !3420
  %tobool39 = icmp eq %union.tree_node* %20, null, !dbg !3479
  %21 = ptrtoint %union.tree_node* %20 to i64, !dbg !3481
  br i1 %tobool39, label %if.then40, label %if.else45, !dbg !3481

if.then40:                                        ; preds = %if.end38
  %call41 = call %union.tree_node* @size_int_kind(i64 0, i32 1) #7, !dbg !3482
  %base42 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %offset_iv, i64 0, i32 0, !dbg !3484
  store %union.tree_node* %call41, %union.tree_node** %base42, align 8, !dbg !3485
  %call43 = call %union.tree_node* @size_int_kind(i64 0, i32 1) #7, !dbg !3486
  %step44 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %offset_iv, i64 0, i32 1, !dbg !3487
  store %union.tree_node* %call43, %union.tree_node** %step44, align 8, !dbg !3488
  br label %if.end65, !dbg !3489

if.else45:                                        ; preds = %if.end38
  br i1 %tobool21, label %if.then47, label %if.else51, !dbg !3490

if.then47:                                        ; preds = %if.else45
  %22 = bitcast %struct.affine_iv* %offset_iv to i64*, !dbg !3492
  store i64 %21, i64* %22, align 8, !dbg !3492
  %call49 = call %union.tree_node* @size_int_kind(i64 0, i32 1) #7, !dbg !3495
  %step50 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %offset_iv, i64 0, i32 1, !dbg !3496
  store %union.tree_node* %call49, %union.tree_node** %step50, align 8, !dbg !3497
  br label %if.end65, !dbg !3498

if.else51:                                        ; preds = %if.else45
  %call52 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %0) #8, !dbg !3499
  %23 = load %union.tree_node*, %union.tree_node** %poffset, align 8, !dbg !3501
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3404, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata %struct.affine_iv* %offset_iv, metadata !3415, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  %call53 = call zeroext i8 @simple_iv(%struct.loop* %call, %struct.loop* %call52, %union.tree_node* %23, %struct.affine_iv* nonnull %offset_iv, i8 zeroext 0) #7, !dbg !3502
  %tobool54 = icmp eq i8 %call53, 0, !dbg !3502
  br i1 %tobool54, label %if.then55, label %if.end65, !dbg !3503

if.then55:                                        ; preds = %if.else51
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3504
  %tobool56 = icmp eq %struct._IO_FILE* %24, null, !dbg !3504
  br i1 %tobool56, label %cleanup, label %land.lhs.true57, !dbg !3507

land.lhs.true57:                                  ; preds = %if.then55
  %25 = load i32, i32* @dump_flags, align 4, !dbg !3508
  %and58 = and i32 %25, 8, !dbg !3509
  %tobool59 = icmp eq i32 %and58, 0, !dbg !3509
  br i1 %tobool59, label %cleanup, label %if.then60, !dbg !3510

if.then60:                                        ; preds = %land.lhs.true57
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.48, i64 0, i64 0)) #7, !dbg !3511
  br label %cleanup, !dbg !3511

if.end65:                                         ; preds = %if.else51, %if.then47, %if.then40
  %26 = load i64, i64* %pbitpos, align 8, !dbg !3512
  call void @llvm.dbg.value(metadata i64 %26, metadata !3402, metadata !DIExpression()), !dbg !3420
  %div = sdiv i64 %26, 8, !dbg !3512
  %call66 = call %union.tree_node* @size_int_kind(i64 %div, i32 1) #7, !dbg !3512
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !3416, metadata !DIExpression()), !dbg !3420
  %base67 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %base_iv, i64 0, i32 0, !dbg !3513
  %27 = load %union.tree_node*, %union.tree_node** %base67, align 8, !dbg !3513
  call void @llvm.dbg.value(metadata %union.tree_node** %dinit, metadata !3417, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @split_constant_offset(%union.tree_node* %27, %union.tree_node** nonnull %base67, %union.tree_node** nonnull %dinit) #8, !dbg !3514
  %28 = load %union.tree_node*, %union.tree_node** %dinit, align 8, !dbg !3515
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !3417, metadata !DIExpression()), !dbg !3420
  %call69 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call66, %union.tree_node* %28) #7, !dbg !3515
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !3416, metadata !DIExpression()), !dbg !3420
  %base70 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %offset_iv, i64 0, i32 0, !dbg !3516
  %29 = load %union.tree_node*, %union.tree_node** %base70, align 8, !dbg !3516
  call void @llvm.dbg.value(metadata %union.tree_node** %dinit, metadata !3417, metadata !DIExpression(DW_OP_deref)), !dbg !3420
  call void @split_constant_offset(%union.tree_node* %29, %union.tree_node** nonnull %base70, %union.tree_node** nonnull %dinit) #8, !dbg !3517
  %30 = load %union.tree_node*, %union.tree_node** %dinit, align 8, !dbg !3518
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !3417, metadata !DIExpression()), !dbg !3420
  %call72 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call69, %union.tree_node* %30) #7, !dbg !3518
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !3416, metadata !DIExpression()), !dbg !3420
  %31 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3519
  %step73 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %base_iv, i64 0, i32 1, !dbg !3519
  %32 = load %union.tree_node*, %union.tree_node** %step73, align 8, !dbg !3519
  %call74 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %31, %union.tree_node* %32) #7, !dbg !3519
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3519
  %step75 = getelementptr inbounds %struct.affine_iv, %struct.affine_iv* %offset_iv, i64 0, i32 1, !dbg !3519
  %34 = load %union.tree_node*, %union.tree_node** %step75, align 8, !dbg !3519
  %call76 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %33, %union.tree_node* %34) #7, !dbg !3519
  %call77 = call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call74, %union.tree_node* %call76) #7, !dbg !3519
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !3418, metadata !DIExpression()), !dbg !3420
  %35 = load %union.tree_node*, %union.tree_node** %base67, align 8, !dbg !3520
  %call79 = call fastcc %union.tree_node* @canonicalize_base_object_address(%union.tree_node* %35) #8, !dbg !3521
  %base_address = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 0, !dbg !3522
  store %union.tree_node* %call79, %union.tree_node** %base_address, align 8, !dbg !3523
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 1), align 8, !dbg !3524
  %37 = load %union.tree_node*, %union.tree_node** %base70, align 8, !dbg !3524
  %call81 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %36, %union.tree_node* %37) #7, !dbg !3524
  %offset = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 1, !dbg !3525
  store %union.tree_node* %call81, %union.tree_node** %offset, align 8, !dbg !3526
  %init84 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 2, !dbg !3527
  store %union.tree_node* %call72, %union.tree_node** %init84, align 8, !dbg !3528
  %step86 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 3, !dbg !3529
  store %union.tree_node* %call77, %union.tree_node** %step86, align 8, !dbg !3530
  %38 = load %union.tree_node*, %union.tree_node** %base70, align 8, !dbg !3531
  %call88 = call i64 @highest_pow2_factor(%union.tree_node* %38) #7, !dbg !3531
  %call89 = call %union.tree_node* @size_int_kind(i64 %call88, i32 0) #7, !dbg !3531
  %aligned_to = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 4, i32 4, !dbg !3532
  store %union.tree_node* %call89, %union.tree_node** %aligned_to, align 8, !dbg !3533
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3534
  %tobool91 = icmp eq %struct._IO_FILE* %39, null, !dbg !3534
  br i1 %tobool91, label %cleanup, label %land.lhs.true92, !dbg !3536

land.lhs.true92:                                  ; preds = %if.end65
  %40 = load i32, i32* @dump_flags, align 4, !dbg !3537
  %and93 = and i32 %40, 8, !dbg !3538
  %tobool94 = icmp eq i32 %and93, 0, !dbg !3538
  br i1 %tobool94, label %cleanup, label %if.then95, !dbg !3539

if.then95:                                        ; preds = %land.lhs.true92
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0)) #7, !dbg !3540
  br label %cleanup, !dbg !3540

cleanup:                                          ; preds = %land.lhs.true13, %if.then11, %land.lhs.true28, %if.then26, %land.lhs.true57, %if.then55, %land.lhs.true92, %if.end65, %if.then95, %if.then60, %if.then31, %if.then16
  %retval.0 = phi i8 [ 0, %if.then16 ], [ 0, %land.lhs.true13 ], [ 0, %if.then11 ], [ 0, %if.then31 ], [ 0, %land.lhs.true28 ], [ 0, %if.then26 ], [ 0, %if.then60 ], [ 0, %land.lhs.true57 ], [ 0, %if.then55 ], [ 1, %if.then95 ], [ 1, %land.lhs.true92 ], [ 1, %if.end65 ], !dbg !3420
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !3541
  ret i8 %retval.0, !dbg !3541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !3542 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3547, metadata !DIExpression()), !dbg !3549
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #8, !dbg !3550
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3548, metadata !DIExpression()), !dbg !3549
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !3551
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3553

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !3554
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3554
  br label %cleanup, !dbg !3555

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !3549
  ret %struct.loop* %retval.0, !dbg !3556
}

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @canonicalize_base_object_address(%union.tree_node* %addr) unnamed_addr #5 !dbg !3557 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !3561, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !3562, metadata !DIExpression()), !dbg !3563
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %addr) #7, !dbg !3564
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3561, metadata !DIExpression()), !dbg !3563
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3565
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !3565
  %1 = load i64*, i64** %0, align 8, !dbg !3565
  %bf.load = load i64, i64* %1, align 8, !dbg !3565
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3565
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !3565
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3565

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 12, !dbg !3565
  br i1 %cmp7, label %if.end, label %cleanup, !dbg !3567

if.end:                                           ; preds = %lor.lhs.false, %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3568
  %bf.load9 = load i64, i64* %2, align 8, !dbg !3568
  %bf.cast113 = and i64 %bf.load9, 65535, !dbg !3570
  %cmp12 = icmp eq i64 %bf.cast113, 121, !dbg !3570
  br i1 %cmp12, label %if.end14, label %cleanup, !dbg !3571

if.end14:                                         ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3572
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3572
  %call15 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %3) #7, !dbg !3572
  br label %cleanup, !dbg !3573

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %if.end14
  %retval.0 = phi %union.tree_node* [ %call15, %if.end14 ], [ %addr, %lor.lhs.false ], [ %call, %if.end ], !dbg !3563
  ret %union.tree_node* %retval.0, !dbg !3574
}

declare dso_local i64 @highest_pow2_factor(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @free_data_ref(%struct.data_reference* %dr) local_unnamed_addr #5 !dbg !3575 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !3579, metadata !DIExpression()), !dbg !3580
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 1, !dbg !3581
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %access_fns) #8, !dbg !3581
  %0 = bitcast %struct.data_reference* %dr to i8*, !dbg !3582
  tail call void @free(i8* %0) #7, !dbg !3583
  ret void, !dbg !3584
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !3585 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !3590, metadata !DIExpression()), !dbg !3591
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3592
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3592
  br i1 %tobool, label %if.end, label %if.then, !dbg !3594

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !3594
  tail call void @free(i8* nonnull %1) #7, !dbg !3592
  br label %if.end, !dbg !3592

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3594
  ret void, !dbg !3594
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.data_reference* @create_data_ref(%struct.loop* %nest, %union.tree_node* %memref, %union.gimple_statement_d* %stmt, i8 zeroext %is_read) local_unnamed_addr #5 !dbg !3595 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %nest, metadata !3599, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata %union.tree_node* %memref, metadata !3600, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3601, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8 %is_read, metadata !3602, metadata !DIExpression()), !dbg !3604
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3605
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !3605
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3607

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !3608
  %and = and i32 %1, 8, !dbg !3609
  %tobool1 = icmp eq i32 %and, 0, !dbg !3609
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3610

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i64 0, i64 0)) #7, !dbg !3611
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3613
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %memref, i32 2) #7, !dbg !3614
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3615
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #7, !dbg !3616
  br label %if.end, !dbg !3617

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %call3 = tail call i8* @xcalloc(i64 1, i64 112) #7, !dbg !3618
  %4 = bitcast i8* %call3 to %struct.data_reference*, !dbg !3618
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !3603, metadata !DIExpression()), !dbg !3604
  %stmt4 = bitcast i8* %call3 to %union.gimple_statement_d**, !dbg !3619
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt4, align 8, !dbg !3620
  %ref = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !3621
  %5 = bitcast i8* %ref to %union.tree_node**, !dbg !3621
  store %union.tree_node* %memref, %union.tree_node** %5, align 8, !dbg !3622
  %6 = getelementptr inbounds i8, i8* %call3, i64 24, !dbg !3623
  store i8 %is_read, i8* %6, align 8, !dbg !3624
  %call6 = tail call zeroext i8 @dr_analyze_innermost(%struct.data_reference* %4) #8, !dbg !3625
  tail call fastcc void @dr_analyze_indices(%struct.data_reference* %4, %struct.loop* %nest) #8, !dbg !3626
  tail call fastcc void @dr_analyze_alias(%struct.data_reference* %4) #8, !dbg !3627
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3628
  %tobool7 = icmp eq %struct._IO_FILE* %7, null, !dbg !3628
  br i1 %tobool7, label %if.end23, label %land.lhs.true8, !dbg !3630

land.lhs.true8:                                   ; preds = %if.end
  %8 = load i32, i32* @dump_flags, align 4, !dbg !3631
  %and9 = and i32 %8, 8, !dbg !3632
  %tobool10 = icmp eq i32 %and9, 0, !dbg !3632
  br i1 %tobool10, label %if.end23, label %if.then11, !dbg !3633

if.then11:                                        ; preds = %land.lhs.true8
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0)) #7, !dbg !3634
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3636
  %innermost = getelementptr inbounds i8, i8* %call3, i64 32, !dbg !3637
  %base_address = bitcast i8* %innermost to %union.tree_node**, !dbg !3637
  %10 = load %union.tree_node*, %union.tree_node** %base_address, align 8, !dbg !3637
  tail call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* %10, i32 2) #7, !dbg !3638
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3639
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0)) #7, !dbg !3640
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3641
  %offset = getelementptr inbounds i8, i8* %call3, i64 40, !dbg !3642
  %13 = bitcast i8* %offset to %union.tree_node**, !dbg !3642
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !3642
  tail call void @print_generic_expr(%struct._IO_FILE* %12, %union.tree_node* %14, i32 2) #7, !dbg !3643
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3644
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.53, i64 0, i64 0)) #7, !dbg !3645
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3646
  %init = getelementptr inbounds i8, i8* %call3, i64 48, !dbg !3647
  %17 = bitcast i8* %init to %union.tree_node**, !dbg !3647
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !3647
  tail call void @print_generic_expr(%struct._IO_FILE* %16, %union.tree_node* %18, i32 2) #7, !dbg !3648
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3649
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0)) #7, !dbg !3650
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3651
  %step = getelementptr inbounds i8, i8* %call3, i64 56, !dbg !3652
  %21 = bitcast i8* %step to %union.tree_node**, !dbg !3652
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !3652
  tail call void @print_generic_expr(%struct._IO_FILE* %20, %union.tree_node* %22, i32 2) #7, !dbg !3653
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3654
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0)) #7, !dbg !3655
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3656
  %aligned_to = getelementptr inbounds i8, i8* %call3, i64 64, !dbg !3657
  %25 = bitcast i8* %aligned_to to %union.tree_node**, !dbg !3657
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !3657
  tail call void @print_generic_expr(%struct._IO_FILE* %24, %union.tree_node* %26, i32 2) #7, !dbg !3658
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3659
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0)) #7, !dbg !3660
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3661
  %indices = getelementptr inbounds i8, i8* %call3, i64 72, !dbg !3662
  %base_object = bitcast i8* %indices to %union.tree_node**, !dbg !3662
  %29 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !3662
  tail call void @print_generic_expr(%struct._IO_FILE* %28, %union.tree_node* %29, i32 2) #7, !dbg !3663
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3664
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #7, !dbg !3665
  br label %if.end23, !dbg !3666

if.end23:                                         ; preds = %land.lhs.true8, %if.end, %if.then11
  ret %struct.data_reference* %4, !dbg !3667
}

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dr_analyze_indices(%struct.data_reference* %dr, %struct.loop* %nest) unnamed_addr #5 !dbg !3668 {
entry:
  %access_fns = alloca %struct.VEC_tree_heap*, align 8
  %base = alloca %union.tree_node*, align 8
  %off = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !3672, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %struct.loop* %nest, metadata !3673, metadata !DIExpression()), !dbg !3684
  %stmt1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 0, !dbg !3685
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !3685
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !3674, metadata !DIExpression()), !dbg !3684
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %0) #8, !dbg !3686
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !3675, metadata !DIExpression()), !dbg !3684
  %1 = bitcast %struct.VEC_tree_heap** %access_fns to i8*, !dbg !3687
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3687
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3676, metadata !DIExpression()), !dbg !3684
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !3688
  %ref2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 1, !dbg !3689
  %2 = load %union.tree_node*, %union.tree_node** %ref2, align 8, !dbg !3689
  %call3 = tail call %union.tree_node* @unshare_expr(%union.tree_node* %2) #7, !dbg !3690
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3677, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3678, metadata !DIExpression()), !dbg !3684
  %3 = bitcast %union.tree_node** %base to i8*, !dbg !3691
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3691
  %4 = bitcast %union.tree_node** %off to i8*, !dbg !3691
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3691
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3682, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !3683, metadata !DIExpression()), !dbg !3684
  %tobool = icmp eq %struct.loop* %nest, null, !dbg !3692
  br i1 %tobool, label %if.end, label %if.then, !dbg !3694

if.then:                                          ; preds = %entry
  %call4 = tail call fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* nonnull %nest) #8, !dbg !3695
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !3683, metadata !DIExpression()), !dbg !3684
  br label %if.end, !dbg !3696

if.end:                                           ; preds = %entry, %if.then
  %before_loop.0 = phi %struct.basic_block_def* [ %call4, %if.then ], [ null, %entry ], !dbg !3684
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %before_loop.0, metadata !3683, metadata !DIExpression()), !dbg !3684
  br i1 %tobool, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !3697

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %while.cond, !dbg !3697

if.end.split.us:                                  ; preds = %if.end
  br label %while.cond.us, !dbg !3697

while.cond.us:                                    ; preds = %if.end19.us, %if.end.split.us
  %aref.0.us = phi %union.tree_node* [ %call3, %if.end.split.us ], [ %8, %if.end19.us ], !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.us, metadata !3678, metadata !DIExpression()), !dbg !3684
  %call5.us = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %aref.0.us) #8, !dbg !3698
  %tobool6.us = icmp eq i8 %call5.us, 0, !dbg !3697
  br i1 %tobool6.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !3697

while.body.us:                                    ; preds = %while.cond.us
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3699
  %bf.load.us = load i64, i64* %5, align 8, !dbg !3699
  %bf.cast4.us = and i64 %bf.load.us, 65535, !dbg !3702
  %cmp.us = icmp eq i64 %bf.cast4.us, 45, !dbg !3702
  br i1 %cmp.us, label %if.then8.us, label %if.end19.us, !dbg !3703

if.then8.us:                                      ; preds = %while.body.us
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !3679, metadata !DIExpression()), !dbg !3684
  %operands.us = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3704
  %arrayidx.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands.us, i64 1, !dbg !3704
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx.us, align 8, !dbg !3704
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3679, metadata !DIExpression()), !dbg !3684
  %type.us = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3706
  %7 = load %union.tree_node*, %union.tree_node** %type.us, align 8, !dbg !3706
  %call15.us = call %union.tree_node* @build_int_cst(%union.tree_node* %7, i64 0) #7, !dbg !3707
  store %union.tree_node* %call15.us, %union.tree_node** %arrayidx.us, align 8, !dbg !3708
  br label %if.end19.us, !dbg !3709

if.end19.us:                                      ; preds = %if.then8.us, %while.body.us
  %operands21.us = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3710
  %8 = load %union.tree_node*, %union.tree_node** %operands21.us, align 8, !dbg !3710
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3678, metadata !DIExpression()), !dbg !3684
  br label %while.cond.us, !dbg !3697, !llvm.loop !3711

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  %aref.0.us.lcssa = phi %union.tree_node* [ %aref.0.us, %while.cond.us ], !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.us.lcssa, metadata !3678, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.us.lcssa, metadata !3678, metadata !DIExpression()), !dbg !3684
  br label %while.end, !dbg !3713

while.cond:                                       ; preds = %if.end19, %if.end.if.end.split_crit_edge
  %aref.0 = phi %union.tree_node* [ %call3, %if.end.if.end.split_crit_edge ], [ %12, %if.end19 ], !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0, metadata !3678, metadata !DIExpression()), !dbg !3684
  %call5 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %aref.0) #8, !dbg !3698
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3697
  br i1 %tobool6, label %while.end.us-lcssa, label %while.body, !dbg !3697

while.body:                                       ; preds = %while.cond
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3699
  %bf.load = load i64, i64* %9, align 8, !dbg !3699
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !3702
  %cmp = icmp eq i64 %bf.cast4, 45, !dbg !3702
  br i1 %cmp, label %if.then8, label %if.end19, !dbg !3703

if.then8:                                         ; preds = %while.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3704
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !3704
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3704
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !3679, metadata !DIExpression()), !dbg !3684
  %call11 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call, %union.tree_node* %10) #7, !dbg !3715
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !3682, metadata !DIExpression()), !dbg !3684
  %call12 = call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %before_loop.0, %struct.loop* %call, %union.tree_node* %call11) #7, !dbg !3718
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !3682, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %access_fns, metadata !3676, metadata !DIExpression(DW_OP_deref)), !dbg !3684
  %call13 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %access_fns, %union.tree_node* %call12) #8, !dbg !3719
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3706
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3706
  %call15 = call %union.tree_node* @build_int_cst(%union.tree_node* %11, i64 0) #7, !dbg !3707
  store %union.tree_node* %call15, %union.tree_node** %arrayidx, align 8, !dbg !3708
  br label %if.end19, !dbg !3709

if.end19:                                         ; preds = %if.then8, %while.body
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3710
  %12 = load %union.tree_node*, %union.tree_node** %operands21, align 8, !dbg !3710
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !3678, metadata !DIExpression()), !dbg !3684
  br label %while.cond, !dbg !3697, !llvm.loop !3711

while.end.us-lcssa:                               ; preds = %while.cond
  %aref.0.lcssa6 = phi %union.tree_node* [ %aref.0, %while.cond ], !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.lcssa6, metadata !3678, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.lcssa6, metadata !3678, metadata !DIExpression()), !dbg !3684
  br label %while.end, !dbg !3713

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %aref.0.lcssa = phi %union.tree_node* [ %aref.0.lcssa6, %while.end.us-lcssa ], [ %aref.0.us.lcssa, %while.end.us-lcssa.us ], !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node* %aref.0.lcssa, metadata !3678, metadata !DIExpression()), !dbg !3684
  br i1 %tobool, label %if.end55, label %land.lhs.true, !dbg !3720

land.lhs.true:                                    ; preds = %while.end
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3721
  %bf.load25 = load i64, i64* %13, align 8, !dbg !3721
  %bf.cast271 = and i64 %bf.load25, 65535, !dbg !3721
  %cmp28 = icmp eq i64 %bf.cast271, 47, !dbg !3721
  br i1 %cmp28, label %if.then40, label %lor.lhs.false, !dbg !3721

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp33 = icmp eq i64 %bf.cast271, 48, !dbg !3721
  br i1 %cmp33, label %if.then40, label %lor.lhs.false34, !dbg !3721

lor.lhs.false34:                                  ; preds = %lor.lhs.false
  %cmp39 = icmp eq i64 %bf.cast271, 49, !dbg !3721
  br i1 %cmp39, label %if.then40, label %if.end55, !dbg !3722

if.then40:                                        ; preds = %lor.lhs.false34, %lor.lhs.false, %land.lhs.true
  %operands42 = getelementptr inbounds %union.tree_node, %union.tree_node* %aref.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3723
  %14 = load %union.tree_node*, %union.tree_node** %operands42, align 8, !dbg !3723
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3679, metadata !DIExpression()), !dbg !3684
  %call44 = call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call, %union.tree_node* %14) #7, !dbg !3725
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !3682, metadata !DIExpression()), !dbg !3684
  %call45 = call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %before_loop.0, %struct.loop* %call, %union.tree_node* %call44) #7, !dbg !3726
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !3682, metadata !DIExpression()), !dbg !3684
  %call46 = call %union.tree_node* @initial_condition(%union.tree_node* %call45) #7, !dbg !3727
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !3680, metadata !DIExpression()), !dbg !3684
  store %union.tree_node* %call46, %union.tree_node** %base, align 8, !dbg !3728
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !3680, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node** %base, metadata !3680, metadata !DIExpression(DW_OP_deref)), !dbg !3684
  call void @llvm.dbg.value(metadata %union.tree_node** %off, metadata !3681, metadata !DIExpression(DW_OP_deref)), !dbg !3684
  call void @split_constant_offset(%union.tree_node* %call46, %union.tree_node** nonnull %base, %union.tree_node** nonnull %off) #8, !dbg !3729
  %15 = bitcast %union.tree_node** %base to %struct.tree_common**, !dbg !3730
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !3730
  %type48 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !3730
  %17 = load %union.tree_node*, %union.tree_node** %type48, align 8, !dbg !3730
  %18 = load %union.tree_node*, %union.tree_node** %off, align 8, !dbg !3730
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3681, metadata !DIExpression()), !dbg !3684
  %call49 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %17, %union.tree_node* %18) #7, !dbg !3730
  %call50 = call %union.tree_node* @chrec_replace_initial_condition(%union.tree_node* %call45, %union.tree_node* %call49) #7, !dbg !3731
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !3682, metadata !DIExpression()), !dbg !3684
  %19 = bitcast %union.tree_node** %base to i64*, !dbg !3732
  %20 = load i64, i64* %19, align 8, !dbg !3732
  %21 = bitcast %union.tree_node** %operands42 to i64*, !dbg !3733
  store i64 %20, i64* %21, align 8, !dbg !3733
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %access_fns, metadata !3676, metadata !DIExpression(DW_OP_deref)), !dbg !3684
  %call54 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %access_fns, %union.tree_node* %call50) #8, !dbg !3734
  br label %if.end55, !dbg !3735

if.end55:                                         ; preds = %while.end, %if.then40, %lor.lhs.false34
  %base_object = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 0, !dbg !3736
  store %union.tree_node* %call3, %union.tree_node** %base_object, align 8, !dbg !3737
  %22 = bitcast %struct.VEC_tree_heap** %access_fns to i64*, !dbg !3738
  %23 = load i64, i64* %22, align 8, !dbg !3738
  %access_fns57 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 1, !dbg !3739
  %24 = bitcast %struct.VEC_tree_heap** %access_fns57 to i64*, !dbg !3740
  store i64 %23, i64* %24, align 8, !dbg !3740
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3741
  ret void, !dbg !3741
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dr_analyze_alias(%struct.data_reference* %dr) unnamed_addr #5 !dbg !3742 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !3744, metadata !DIExpression()), !dbg !3748
  %ref1 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 1, !dbg !3749
  %0 = load %union.tree_node*, %union.tree_node** %ref1, align 8, !dbg !3749
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3745, metadata !DIExpression()), !dbg !3748
  %call = tail call %union.tree_node* @get_base_address(%union.tree_node* %0) #7, !dbg !3750
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3746, metadata !DIExpression()), !dbg !3748
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3751
  %bf.load = load i64, i64* %1, align 8, !dbg !3751
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3751
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !3751
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3751

lor.lhs.false:                                    ; preds = %entry
  %cmp7 = icmp eq i64 %bf.cast1, 48, !dbg !3751
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !3751

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast1, 49, !dbg !3751
  br i1 %cmp13, label %if.then, label %if.end21, !dbg !3753

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3754
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3754
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3747, metadata !DIExpression()), !dbg !3748
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3756
  %bf.load15 = load i64, i64* %3, align 8, !dbg !3756
  %bf.cast174 = and i64 %bf.load15, 65535, !dbg !3758
  %cmp18 = icmp eq i64 %bf.cast174, 141, !dbg !3758
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !3759

if.then19:                                        ; preds = %if.then
  %ptr_info = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3760
  %4 = bitcast %union.tree_node** %ptr_info to i64*, !dbg !3760
  %5 = load i64, i64* %4, align 8, !dbg !3760
  %alias = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 6, !dbg !3761
  %6 = bitcast %struct.dr_alias* %alias to i64*, !dbg !3762
  store i64 %5, i64* %6, align 8, !dbg !3762
  br label %if.end21, !dbg !3761

if.end21:                                         ; preds = %if.then, %if.then19, %lor.lhs.false8
  ret void, !dbg !3763
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @dr_may_alias_p(%struct.data_reference* %a, %struct.data_reference* %b) local_unnamed_addr #5 !dbg !3764 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %a, metadata !3770, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata %struct.data_reference* %b, metadata !3771, metadata !DIExpression()), !dbg !3778
  %base_address = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 4, i32 0, !dbg !3779
  %0 = load %union.tree_node*, %union.tree_node** %base_address, align 8, !dbg !3779
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3772, metadata !DIExpression()), !dbg !3778
  %base_address2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 4, i32 0, !dbg !3780
  %1 = load %union.tree_node*, %union.tree_node** %base_address2, align 8, !dbg !3780
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3773, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3776, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3777, metadata !DIExpression()), !dbg !3778
  %base_object = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 5, i32 0, !dbg !3781
  %2 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !3781
  %base_object4 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 5, i32 0, !dbg !3783
  %3 = load %union.tree_node*, %union.tree_node** %base_object4, align 8, !dbg !3783
  %call = tail call fastcc zeroext i8 @disjoint_objects_p(%union.tree_node* %2, %union.tree_node* %3) #8, !dbg !3784
  %tobool = icmp eq i8 %call, 0, !dbg !3784
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3785

if.end:                                           ; preds = %entry
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 3, !dbg !3786
  %4 = load i8, i8* %is_read, align 8, !dbg !3786
  %tobool5 = icmp eq i8 %4, 0, !dbg !3786
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !3788

land.lhs.true:                                    ; preds = %if.end
  %is_read6 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 3, !dbg !3789
  %5 = load i8, i8* %is_read6, align 8, !dbg !3789
  %tobool7 = icmp eq i8 %5, 0, !dbg !3789
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3790

if.then8:                                         ; preds = %land.lhs.true
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !3791
  %6 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !3791
  %ref9 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 1, !dbg !3794
  %7 = load %union.tree_node*, %union.tree_node** %ref9, align 8, !dbg !3794
  %call10 = tail call zeroext i8 @refs_output_dependent_p(%union.tree_node* %6, %union.tree_node* %7) #7, !dbg !3795
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3795
  br i1 %tobool11, label %cleanup, label %if.end34, !dbg !3796

if.else:                                          ; preds = %land.lhs.true, %if.end
  br i1 %tobool5, label %if.else26, label %land.lhs.true16, !dbg !3797

land.lhs.true16:                                  ; preds = %if.else
  %is_read17 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 3, !dbg !3799
  %8 = load i8, i8* %is_read17, align 8, !dbg !3799
  %tobool18 = icmp eq i8 %8, 0, !dbg !3799
  br i1 %tobool18, label %if.then19, label %if.else26, !dbg !3800

if.then19:                                        ; preds = %land.lhs.true16
  %ref20 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !3801
  %9 = load %union.tree_node*, %union.tree_node** %ref20, align 8, !dbg !3801
  %ref21 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 1, !dbg !3804
  %10 = load %union.tree_node*, %union.tree_node** %ref21, align 8, !dbg !3804
  %call22 = tail call zeroext i8 @refs_anti_dependent_p(%union.tree_node* %9, %union.tree_node* %10) #7, !dbg !3805
  %tobool23 = icmp eq i8 %call22, 0, !dbg !3805
  br i1 %tobool23, label %cleanup, label %if.end34, !dbg !3806

if.else26:                                        ; preds = %land.lhs.true16, %if.else
  %ref27 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !3807
  %11 = load %union.tree_node*, %union.tree_node** %ref27, align 8, !dbg !3807
  %ref28 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 1, !dbg !3809
  %12 = load %union.tree_node*, %union.tree_node** %ref28, align 8, !dbg !3809
  %call29 = tail call zeroext i8 @refs_may_alias_p(%union.tree_node* %11, %union.tree_node* %12) #7, !dbg !3810
  %tobool30 = icmp eq i8 %call29, 0, !dbg !3810
  br i1 %tobool30, label %cleanup, label %if.end34, !dbg !3811

if.end34:                                         ; preds = %if.then19, %if.else26, %if.then8
  %tobool35 = icmp ne %union.tree_node* %0, null, !dbg !3812
  %tobool36 = icmp ne %union.tree_node* %1, null, !dbg !3814
  %or.cond = and i1 %tobool35, %tobool36, !dbg !3815
  br i1 %or.cond, label %if.end38, label %cleanup, !dbg !3815

if.end38:                                         ; preds = %if.end34
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3816
  %bf.load = load i64, i64* %13, align 8, !dbg !3816
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !3818
  %cmp = icmp eq i64 %bf.cast4, 121, !dbg !3818
  br i1 %cmp, label %land.lhs.true40, label %if.end54, !dbg !3819

land.lhs.true40:                                  ; preds = %if.end38
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3820
  %bf.load42 = load i64, i64* %14, align 8, !dbg !3820
  %bf.cast4412 = and i64 %bf.load42, 65535, !dbg !3821
  %cmp45 = icmp eq i64 %bf.cast4412, 121, !dbg !3821
  br i1 %cmp45, label %if.then47, label %if.end54, !dbg !3822

if.then47:                                        ; preds = %land.lhs.true40
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3823
  %15 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3823
  %operands49 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3824
  %16 = load %union.tree_node*, %union.tree_node** %operands49, align 8, !dbg !3824
  %cmp51 = icmp eq %union.tree_node* %15, %16, !dbg !3825
  %conv53 = zext i1 %cmp51 to i8, !dbg !3823
  br label %cleanup, !dbg !3826

if.end54:                                         ; preds = %land.lhs.true40, %if.end38
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3827
  %17 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3827
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !3774, metadata !DIExpression()), !dbg !3778
  %type56 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3828
  %18 = load %union.tree_node*, %union.tree_node** %type56, align 8, !dbg !3828
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !3775, metadata !DIExpression()), !dbg !3778
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3829
  %bf.load58 = load i64, i64* %19, align 8, !dbg !3829
  %bf.cast605 = and i64 %bf.load58, 65535, !dbg !3829
  %cmp61 = icmp eq i64 %bf.cast605, 10, !dbg !3829
  br i1 %cmp61, label %land.lhs.true70, label %lor.lhs.false63, !dbg !3829

lor.lhs.false63:                                  ; preds = %if.end54
  %cmp68 = icmp eq i64 %bf.cast605, 12, !dbg !3829
  br i1 %cmp68, label %land.lhs.true70, label %cond.true, !dbg !3829

land.lhs.true70:                                  ; preds = %lor.lhs.false63, %if.end54
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3829
  %bf.load72 = load i64, i64* %20, align 8, !dbg !3829
  %bf.cast7410 = and i64 %bf.load72, 65535, !dbg !3829
  %cmp75 = icmp eq i64 %bf.cast7410, 10, !dbg !3829
  br i1 %cmp75, label %cond.end, label %lor.lhs.false77, !dbg !3829

lor.lhs.false77:                                  ; preds = %land.lhs.true70
  %cmp82 = icmp eq i64 %bf.cast7410, 12, !dbg !3829
  br i1 %cmp82, label %cond.end, label %cond.true, !dbg !3829

cond.true:                                        ; preds = %lor.lhs.false77, %lor.lhs.false63
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1331, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !3829
  %bf.load85.pre = load i64, i64* %13, align 8, !dbg !3830
  br label %cond.end, !dbg !3829

cond.end:                                         ; preds = %land.lhs.true70, %lor.lhs.false77, %cond.true
  %bf.load85 = phi i64 [ %bf.load, %land.lhs.true70 ], [ %bf.load, %lor.lhs.false77 ], [ %bf.load85.pre, %cond.true ], !dbg !3830
  %bf.cast877 = and i64 %bf.load85, 65535, !dbg !3832
  %cmp88 = icmp eq i64 %bf.cast877, 141, !dbg !3832
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !3833

if.then90:                                        ; preds = %cond.end
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3834
  %21 = bitcast i32* %var to %union.tree_node**, !dbg !3834
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !3834
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !3776, metadata !DIExpression()), !dbg !3778
  br label %if.end91, !dbg !3835

if.end91:                                         ; preds = %if.then90, %cond.end
  %decl_a.0 = phi %union.tree_node* [ %22, %if.then90 ], [ null, %cond.end ], !dbg !3778
  call void @llvm.dbg.value(metadata %union.tree_node* %decl_a.0, metadata !3776, metadata !DIExpression()), !dbg !3778
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3836
  %bf.load93 = load i64, i64* %23, align 8, !dbg !3836
  %bf.cast958 = and i64 %bf.load93, 65535, !dbg !3838
  %cmp96 = icmp eq i64 %bf.cast958, 141, !dbg !3838
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !3839

if.then98:                                        ; preds = %if.end91
  %var100 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3840
  %24 = bitcast i32* %var100 to %union.tree_node**, !dbg !3840
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !3840
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !3777, metadata !DIExpression()), !dbg !3778
  br label %if.end101, !dbg !3841

if.end101:                                        ; preds = %if.then98, %if.end91
  %decl_b.0 = phi %union.tree_node* [ %25, %if.then98 ], [ null, %if.end91 ], !dbg !3778
  call void @llvm.dbg.value(metadata %union.tree_node* %decl_b.0, metadata !3777, metadata !DIExpression()), !dbg !3778
  %type102 = bitcast %union.tree_node* %17 to %struct.tree_type*, !dbg !3842
  %restrict_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i64 0, i32 6, !dbg !3842
  %bf.load103 = load i32, i32* %restrict_flag, align 4, !dbg !3842
  %bf.clear104 = and i32 %bf.load103, 8192, !dbg !3842
  %tobool105 = icmp eq i32 %bf.clear104, 0, !dbg !3842
  br i1 %tobool105, label %if.end158, label %land.lhs.true106, !dbg !3844

land.lhs.true106:                                 ; preds = %if.end101
  %type107 = bitcast %union.tree_node* %18 to %struct.tree_type*, !dbg !3845
  %restrict_flag108 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type107, i64 0, i32 6, !dbg !3845
  %bf.load109 = load i32, i32* %restrict_flag108, align 4, !dbg !3845
  %bf.clear111 = and i32 %bf.load109, 8192, !dbg !3845
  %tobool112 = icmp eq i32 %bf.clear111, 0, !dbg !3845
  br i1 %tobool112, label %if.end158, label %land.lhs.true113, !dbg !3846

land.lhs.true113:                                 ; preds = %land.lhs.true106
  %26 = load i8, i8* %is_read, align 8, !dbg !3847
  %tobool115 = icmp eq i8 %26, 0, !dbg !3847
  br i1 %tobool115, label %land.lhs.true119, label %lor.lhs.false116, !dbg !3848

lor.lhs.false116:                                 ; preds = %land.lhs.true113
  %is_read117 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 3, !dbg !3849
  %27 = load i8, i8* %is_read117, align 8, !dbg !3849
  %tobool118 = icmp eq i8 %27, 0, !dbg !3849
  %tobool120 = icmp ne %union.tree_node* %decl_a.0, null, !dbg !3850
  %or.cond1 = and i1 %tobool118, %tobool120, !dbg !3851
  br i1 %or.cond1, label %land.lhs.true121, label %if.end158, !dbg !3851

land.lhs.true119:                                 ; preds = %land.lhs.true113
  %tobool120.old = icmp eq %union.tree_node* %decl_a.0, null, !dbg !3850
  br i1 %tobool120.old, label %if.end158, label %land.lhs.true121, !dbg !3852

land.lhs.true121:                                 ; preds = %land.lhs.true119, %lor.lhs.false116
  %28 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl_a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3853
  %bf.load123 = load i64, i64* %28, align 8, !dbg !3853
  %bf.cast125 = and i64 %bf.load123, 65535, !dbg !3853
  %arrayidx126 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast125, !dbg !3853
  %29 = load i32, i32* %arrayidx126, align 4, !dbg !3853
  %cmp127 = icmp eq i32 %29, 3, !dbg !3853
  %tobool130 = icmp ne %union.tree_node* %decl_b.0, null, !dbg !3854
  %or.cond2 = and i1 %cmp127, %tobool130, !dbg !3855
  br i1 %or.cond2, label %land.lhs.true131, label %if.end158, !dbg !3855

land.lhs.true131:                                 ; preds = %land.lhs.true121
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl_b.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3856
  %bf.load133 = load i64, i64* %30, align 8, !dbg !3856
  %bf.cast135 = and i64 %bf.load133, 65535, !dbg !3856
  %arrayidx137 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast135, !dbg !3856
  %31 = load i32, i32* %arrayidx137, align 4, !dbg !3856
  %cmp138 = icmp eq i32 %31, 3, !dbg !3856
  %cmp141 = icmp ne %union.tree_node* %decl_a.0, %decl_b.0, !dbg !3857
  %or.cond3 = and i1 %cmp138, %cmp141, !dbg !3858
  br i1 %or.cond3, label %land.lhs.true143, label %if.end158, !dbg !3858

land.lhs.true143:                                 ; preds = %land.lhs.true131
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl_a.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3859
  %32 = bitcast %union.tree_node** %context to i64**, !dbg !3859
  %33 = load i64*, i64** %32, align 8, !dbg !3859
  %bf.load145 = load i64, i64* %33, align 8, !dbg !3859
  %bf.cast1479 = and i64 %bf.load145, 65535, !dbg !3860
  %cmp148 = icmp eq i64 %bf.cast1479, 29, !dbg !3860
  br i1 %cmp148, label %land.lhs.true150, label %if.end158, !dbg !3861

land.lhs.true150:                                 ; preds = %land.lhs.true143
  %34 = bitcast i64* %33 to %union.tree_node*, !dbg !3861
  %context154 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl_b.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3862
  %35 = load %union.tree_node*, %union.tree_node** %context154, align 8, !dbg !3862
  %cmp155 = icmp eq %union.tree_node* %35, %34, !dbg !3863
  br i1 %cmp155, label %cleanup, label %if.end158, !dbg !3864

if.end158:                                        ; preds = %land.lhs.true119, %land.lhs.true106, %if.end101, %lor.lhs.false116, %land.lhs.true150, %land.lhs.true143, %land.lhs.true131, %land.lhs.true121
  br label %cleanup, !dbg !3865

cleanup:                                          ; preds = %if.then19, %if.else26, %if.then8, %entry, %land.lhs.true150, %if.end34, %if.end158, %if.then47
  %retval.0 = phi i8 [ %conv53, %if.then47 ], [ 1, %if.end158 ], [ 0, %entry ], [ 0, %if.then8 ], [ 0, %if.then19 ], [ 0, %if.else26 ], [ 1, %if.end34 ], [ 0, %land.lhs.true150 ], !dbg !3778
  ret i8 %retval.0, !dbg !3866
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @disjoint_objects_p(%union.tree_node* %a, %union.tree_node* %b) unnamed_addr #5 !dbg !3867 {
entry:
  %comp_a = alloca %struct.VEC_tree_heap*, align 8
  %comp_b = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %a, metadata !3871, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %union.tree_node* %b, metadata !3872, metadata !DIExpression()), !dbg !3878
  %0 = bitcast %struct.VEC_tree_heap** %comp_a to i8*, !dbg !3879
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3879
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3875, metadata !DIExpression()), !dbg !3878
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %comp_a, align 8, !dbg !3880
  %1 = bitcast %struct.VEC_tree_heap** %comp_b to i8*, !dbg !3879
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3879
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* null, metadata !3876, metadata !DIExpression()), !dbg !3878
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %comp_b, align 8, !dbg !3881
  %call = tail call %union.tree_node* @get_base_address(%union.tree_node* %a) #7, !dbg !3882
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3873, metadata !DIExpression()), !dbg !3878
  %call1 = tail call %union.tree_node* @get_base_address(%union.tree_node* %b) #7, !dbg !3883
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3874, metadata !DIExpression()), !dbg !3878
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3884
  %bf.load = load i64, i64* %2, align 8, !dbg !3884
  %bf.cast = and i64 %bf.load, 65535, !dbg !3884
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3884
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3884
  %cmp = icmp eq i32 %3, 3, !dbg !3884
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3886

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3887
  %bf.load3 = load i64, i64* %4, align 8, !dbg !3887
  %bf.cast5 = and i64 %bf.load3, 65535, !dbg !3887
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast5, !dbg !3887
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !3887
  %cmp8 = icmp eq i32 %5, 3, !dbg !3887
  %cmp10 = icmp ne %union.tree_node* %call, %call1, !dbg !3888
  %or.cond = and i1 %cmp8, %cmp10, !dbg !3889
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !3889

if.end:                                           ; preds = %land.lhs.true, %entry
  %call11 = tail call i32 @operand_equal_p(%union.tree_node* %call, %union.tree_node* %call1, i32 0) #7, !dbg !3890
  %tobool = icmp eq i32 %call11, 0, !dbg !3890
  br i1 %tobool, label %cleanup, label %while.cond.preheader, !dbg !3892

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !3893

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %a.addr.0 = phi %union.tree_node* [ %6, %while.body ], [ %a, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %a.addr.0, metadata !3871, metadata !DIExpression()), !dbg !3878
  %call14 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %a.addr.0) #8, !dbg !3894
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3893
  br i1 %tobool15, label %while.cond18.preheader, label %while.body, !dbg !3893

while.cond18.preheader:                           ; preds = %while.cond
  br label %while.cond18, !dbg !3895

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %comp_a, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3878
  %call16 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %comp_a, %union.tree_node* %a.addr.0) #8, !dbg !3896
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %a.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3898
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3871, metadata !DIExpression()), !dbg !3878
  br label %while.cond, !dbg !3893, !llvm.loop !3899

while.cond18:                                     ; preds = %while.cond18.preheader, %while.body21
  %b.addr.0 = phi %union.tree_node* [ %7, %while.body21 ], [ %b, %while.cond18.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %b.addr.0, metadata !3872, metadata !DIExpression()), !dbg !3878
  %call19 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* %b.addr.0) #8, !dbg !3901
  %tobool20 = icmp eq i8 %call19, 0, !dbg !3895
  br i1 %tobool20, label %while.cond27.preheader, label %while.body21, !dbg !3895

while.cond27.preheader:                           ; preds = %while.cond18
  br label %while.cond27, !dbg !3902

while.body21:                                     ; preds = %while.cond18
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %comp_b, metadata !3876, metadata !DIExpression(DW_OP_deref)), !dbg !3878
  %call22 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %comp_b, %union.tree_node* %b.addr.0) #8, !dbg !3903
  %operands24 = getelementptr inbounds %union.tree_node, %union.tree_node* %b.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3905
  %7 = load %union.tree_node*, %union.tree_node** %operands24, align 8, !dbg !3905
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3872, metadata !DIExpression()), !dbg !3878
  br label %while.cond18, !dbg !3895, !llvm.loop !3906

while.cond27:                                     ; preds = %while.cond27.backedge, %while.cond27.preheader
  %8 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %comp_a, align 8, !dbg !3908
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3875, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %8, metadata !3875, metadata !DIExpression()), !dbg !3878
  %base30 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %8, i64 0, i32 0, !dbg !3908
  %call31 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base30) #8, !dbg !3908
  %cmp32 = icmp eq i32 %call31, 0, !dbg !3911
  br i1 %cmp32, label %while.end126.loopexit, label %lor.lhs.false, !dbg !3912

lor.lhs.false:                                    ; preds = %while.cond27
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %comp_b, align 8, !dbg !3913
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !3876, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %9, metadata !3876, metadata !DIExpression()), !dbg !3878
  %base35 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !3913
  %call39 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base35) #8, !dbg !3913
  %cmp40 = icmp eq i32 %call39, 0, !dbg !3914
  br i1 %cmp40, label %while.end126.loopexit, label %if.end42, !dbg !3915

if.end42:                                         ; preds = %lor.lhs.false
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %comp_a, align 8, !dbg !3916
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !3875, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !3875, metadata !DIExpression()), !dbg !3878
  %base45 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !3916
  %call49 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base45) #8, !dbg !3916
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !3871, metadata !DIExpression()), !dbg !3878
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %comp_b, align 8, !dbg !3917
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !3876, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !3876, metadata !DIExpression()), !dbg !3878
  %base52 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !3917
  %call56 = call fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %base52) #8, !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !3872, metadata !DIExpression()), !dbg !3878
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3918
  %bf.load58 = load i64, i64* %12, align 8, !dbg !3918
  %bf.cast601 = and i64 %bf.load58, 65535, !dbg !3920
  %cmp61 = icmp eq i64 %bf.cast601, 43, !dbg !3920
  br i1 %cmp61, label %land.lhs.true62, label %lor.lhs.false68, !dbg !3921

land.lhs.true62:                                  ; preds = %if.end42
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3922
  %bf.load64 = load i64, i64* %13, align 8, !dbg !3922
  %bf.cast667 = and i64 %bf.load64, 65535, !dbg !3923
  %cmp67 = icmp eq i64 %bf.cast667, 44, !dbg !3923
  br i1 %cmp67, label %while.end126.loopexit, label %lor.lhs.false68, !dbg !3924

lor.lhs.false68:                                  ; preds = %land.lhs.true62, %if.end42
  %cmp73 = icmp eq i64 %bf.cast601, 44, !dbg !3925
  br i1 %cmp73, label %land.lhs.true74, label %lor.lhs.false68.if.end81_crit_edge, !dbg !3926

lor.lhs.false68.if.end81_crit_edge:               ; preds = %lor.lhs.false68
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3927
  %bf.load87.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3929
  br label %if.end81, !dbg !3926

land.lhs.true74:                                  ; preds = %lor.lhs.false68
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3930
  %bf.load76 = load i64, i64* %14, align 8, !dbg !3930
  %bf.cast786 = and i64 %bf.load76, 65535, !dbg !3931
  %cmp79 = icmp eq i64 %bf.cast786, 43, !dbg !3931
  br i1 %cmp79, label %while.end126.loopexit, label %if.end81, !dbg !3932

if.end81:                                         ; preds = %lor.lhs.false68.if.end81_crit_edge, %land.lhs.true74
  %bf.load87 = phi i64 [ %bf.load87.pre, %lor.lhs.false68.if.end81_crit_edge ], [ %bf.load76, %land.lhs.true74 ], !dbg !3929
  %15 = xor i64 %bf.load58, %bf.load87, !dbg !3933
  %16 = and i64 %15, 65535, !dbg !3933
  %cmp90 = icmp eq i64 %16, 0, !dbg !3933
  br i1 %cmp90, label %if.end92, label %while.end126.loopexit, !dbg !3934

if.end92:                                         ; preds = %if.end81
  %cmp97 = icmp eq i64 %bf.cast601, 45, !dbg !3935
  br i1 %cmp97, label %while.cond27.backedge, label %if.else, !dbg !3937

while.cond27.backedge:                            ; preds = %if.end92, %if.then104
  br label %while.cond27, !dbg !3908, !llvm.loop !3938

if.else:                                          ; preds = %if.end92
  %cmp103 = icmp eq i64 %bf.cast601, 41, !dbg !3940
  br i1 %cmp103, label %if.then104, label %while.end126.loopexit, !dbg !3942

if.then104:                                       ; preds = %if.else
  %operands106 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3943
  %arrayidx107 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands106, i64 1, !dbg !3943
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx107, align 8, !dbg !3943
  %operands109 = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3946
  %arrayidx110 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands109, i64 1, !dbg !3946
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx110, align 8, !dbg !3946
  %call111 = call i32 @operand_equal_p(%union.tree_node* %17, %union.tree_node* %18, i32 0) #7, !dbg !3947
  %tobool112 = icmp eq i32 %call111, 0, !dbg !3947
  br i1 %tobool112, label %if.end114, label %while.cond27.backedge, !dbg !3948

if.end114:                                        ; preds = %if.then104
  %operands106.lcssa = phi %union.tree_node** [ %operands106, %if.then104 ], !dbg !3943
  %19 = bitcast %union.tree_node** %operands106.lcssa to %struct.tree_common**, !dbg !3949
  %20 = load %struct.tree_common*, %struct.tree_common** %19, align 8, !dbg !3949
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !3950
  %21 = bitcast %union.tree_node** %type to i64**, !dbg !3950
  %22 = load i64*, i64** %21, align 8, !dbg !3950
  %bf.load119 = load i64, i64* %22, align 8, !dbg !3950
  %bf.cast1215 = and i64 %bf.load119, 65535, !dbg !3952
  %cmp122 = icmp ne i64 %bf.cast1215, 17, !dbg !3952
  %. = zext i1 %cmp122 to i8, !dbg !3953
  br label %while.end126, !dbg !3953

while.end126.loopexit:                            ; preds = %lor.lhs.false, %while.cond27, %land.lhs.true74, %land.lhs.true62, %if.else, %if.end81
  %ret.0.ph = phi i8 [ 0, %if.else ], [ 0, %if.end81 ], [ 1, %land.lhs.true62 ], [ 1, %land.lhs.true74 ], [ 0, %while.cond27 ], [ 0, %lor.lhs.false ]
  br label %while.end126, !dbg !3954

while.end126:                                     ; preds = %while.end126.loopexit, %if.end114
  %ret.0 = phi i8 [ %., %if.end114 ], [ %ret.0.ph, %while.end126.loopexit ], !dbg !3878
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !3877, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %comp_a, metadata !3875, metadata !DIExpression(DW_OP_deref)), !dbg !3878
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %comp_a) #8, !dbg !3954
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %comp_b, metadata !3876, metadata !DIExpression(DW_OP_deref)), !dbg !3878
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %comp_b) #8, !dbg !3955
  br label %cleanup, !dbg !3956

cleanup:                                          ; preds = %if.end, %land.lhs.true, %while.end126
  %retval.0 = phi i8 [ %ret.0, %while.end126 ], [ 1, %land.lhs.true ], [ 0, %if.end ], !dbg !3878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !3957
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !3957
  ret i8 %retval.0, !dbg !3957
}

declare dso_local zeroext i8 @refs_output_dependent_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @refs_anti_dependent_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @refs_may_alias_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @estimated_loop_iterations(%struct.loop* %loop, i8 zeroext %conservative, %struct.double_int* %nit) local_unnamed_addr #5 !dbg !3958 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3963, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i8 %conservative, metadata !3964, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata %struct.double_int* %nit, metadata !3965, metadata !DIExpression()), !dbg !3966
  tail call void @estimate_numbers_of_iterations_loop(%struct.loop* %loop) #7, !dbg !3967
  %tobool = icmp eq i8 %conservative, 0, !dbg !3968
  br i1 %tobool, label %if.else, label %if.then, !dbg !3970

if.then:                                          ; preds = %entry
  %any_upper_bound = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 14, !dbg !3971
  %0 = load i8, i8* %any_upper_bound, align 8, !dbg !3971
  %tobool1 = icmp eq i8 %0, 0, !dbg !3974
  br i1 %tobool1, label %return, label %if.end, !dbg !3975

if.end:                                           ; preds = %if.then
  %nb_iterations_upper_bound = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 12, !dbg !3976
  %1 = bitcast %struct.double_int* %nit to i8*, !dbg !3976
  %2 = bitcast %struct.double_int* %nb_iterations_upper_bound to i8*, !dbg !3976
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3976
  br label %return, !dbg !3977

if.else:                                          ; preds = %entry
  %any_estimate = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 15, !dbg !3978
  %3 = load i8, i8* %any_estimate, align 1, !dbg !3978
  %tobool3 = icmp eq i8 %3, 0, !dbg !3981
  br i1 %tobool3, label %return, label %if.end5, !dbg !3982

if.end5:                                          ; preds = %if.else
  %nb_iterations_estimate = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 13, !dbg !3983
  %4 = bitcast %struct.double_int* %nit to i8*, !dbg !3983
  %5 = bitcast %struct.double_int* %nb_iterations_estimate to i8*, !dbg !3983
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !3983
  br label %return

return:                                           ; preds = %if.then, %if.else, %if.end, %if.end5
  %retval.0 = phi i8 [ 0, %if.then ], [ 0, %if.else ], [ 1, %if.end5 ], [ 1, %if.end ], !dbg !3966
  ret i8 %retval.0, !dbg !3984
}

declare dso_local void @estimate_numbers_of_iterations_loop(%struct.loop*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define dso_local i64 @estimated_loop_iterations_int(%struct.loop* %loop, i8 zeroext %conservative) local_unnamed_addr #5 !dbg !3985 {
entry:
  %nit = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3989, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i8 %conservative, metadata !3990, metadata !DIExpression()), !dbg !3993
  %0 = bitcast %struct.double_int* %nit to i8*, !dbg !3994
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !3994
  call void @llvm.dbg.value(metadata %struct.double_int* %nit, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  %call = call zeroext i8 @estimated_loop_iterations(%struct.loop* %loop, i8 zeroext %conservative, %struct.double_int* nonnull %nit) #8, !dbg !3995
  %tobool = icmp eq i8 %call, 0, !dbg !3995
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3997

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.double_int, %struct.double_int* %nit, i64 0, i32 0, !dbg !3998
  %2 = load i64, i64* %1, align 8, !dbg !3998
  %3 = getelementptr inbounds %struct.double_int, %struct.double_int* %nit, i64 0, i32 1, !dbg !3998
  %4 = load i64, i64* %3, align 8, !dbg !3998
  %call1 = call zeroext i8 @double_int_fits_in_shwi_p(i64 %2, i64 %4) #7, !dbg !3998
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3998
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !4000

if.end4:                                          ; preds = %if.end
  %5 = load i64, i64* %1, align 8, !dbg !4001
  %6 = load i64, i64* %3, align 8, !dbg !4001
  %call5 = call i64 @double_int_to_shwi(i64 %5, i64 %6) #7, !dbg !4001
  call void @llvm.dbg.value(metadata i64 %call5, metadata !3992, metadata !DIExpression()), !dbg !3993
  %cmp = icmp sgt i64 %call5, -1, !dbg !4002
  %.call5 = select i1 %cmp, i64 %call5, i64 -1, !dbg !4003
  br label %cleanup, !dbg !4004

cleanup:                                          ; preds = %if.end, %entry, %if.end4
  %retval.0 = phi i64 [ %.call5, %if.end4 ], [ -1, %entry ], [ -1, %if.end ], !dbg !3993
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !4005
  ret i64 %retval.0, !dbg !4005
}

declare dso_local zeroext i8 @double_int_fits_in_shwi_p(i64, i64) local_unnamed_addr #2

declare dso_local i64 @double_int_to_shwi(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @compute_all_dependences(%struct.VEC_data_reference_p_heap* %datarefs, %struct.VEC_ddr_p_heap** %dependence_relations, %struct.VEC_loop_p_heap* %loop_nest, i8 zeroext %compute_self_and_rr) local_unnamed_addr #5 !dbg !4006 {
entry:
  %a = alloca %struct.data_reference*, align 8
  %b = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !4011, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !4012, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %loop_nest, metadata !4013, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i8 %compute_self_and_rr, metadata !4014, metadata !DIExpression()), !dbg !4020
  %0 = bitcast %struct.data_reference** %a to i8*, !dbg !4021
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4021
  %1 = bitcast %struct.data_reference** %b to i8*, !dbg !4021
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4021
  call void @llvm.dbg.value(metadata i32 0, metadata !4018, metadata !DIExpression()), !dbg !4020
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %datarefs, i64 0, i32 0, !dbg !4022
  %tobool16 = icmp eq i8 %compute_self_and_rr, 0, !dbg !4025
  %tobool19 = icmp eq %struct.VEC_loop_p_heap* %loop_nest, null, !dbg !4029
  %base23 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %loop_nest, i64 0, i32 0, !dbg !4029
  br label %for.cond, !dbg !4032

for.cond:                                         ; preds = %for.inc29, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc30, %for.inc29 ], !dbg !4033
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference** %a, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4020
  %call = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %a) #8, !dbg !4034
  %tobool1 = icmp eq i32 %call, 0, !dbg !4035
  br i1 %tobool1, label %for.end31, label %for.body, !dbg !4035

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4019, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4020
  br i1 %tobool16, label %for.body.for.body.split_crit_edge, label %for.body.split.us, !dbg !4036

for.body.for.body.split_crit_edge:                ; preds = %for.body
  br i1 %tobool19, label %for.body.split.split.us, label %for.body.split.for.body.split.split_crit_edge, !dbg !4036

for.body.split.us:                                ; preds = %for.body
  br label %for.cond2.us, !dbg !4036

for.cond2.us:                                     ; preds = %for.inc.us, %for.body.split.us
  %j.0.in.us = phi i32 [ %i.0, %for.body.split.us ], [ %j.0.us, %for.inc.us ]
  %j.0.us = add i32 %j.0.in.us, 1, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !4019, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference** %b, metadata !4017, metadata !DIExpression(DW_OP_deref)), !dbg !4020
  %call9.us = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %j.0.us, %struct.data_reference** nonnull %b) #8, !dbg !4038
  %tobool10.us = icmp eq i32 %call9.us, 0, !dbg !4039
  br i1 %tobool10.us, label %for.inc29.us-lcssa.us, label %for.body11.us, !dbg !4039

for.body11.us:                                    ; preds = %for.cond2.us
  call void @llvm.dbg.value(metadata %struct.data_reference* undef, metadata !4016, metadata !DIExpression()), !dbg !4020
  br label %if.then.us, !dbg !4040

lor.lhs.false.us:                                 ; No predecessors!
  unreachable, !dbg !4041

if.then.us:                                       ; preds = %for.body11.us
  %2 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !4016, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !4016, metadata !DIExpression()), !dbg !4020
  %3 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4043
  call void @llvm.dbg.value(metadata %struct.data_reference* %3, metadata !4017, metadata !DIExpression()), !dbg !4020
  %call17.us = call fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* %2, %struct.data_reference* %3, %struct.VEC_loop_p_heap* %loop_nest) #8, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call17.us, metadata !4015, metadata !DIExpression()), !dbg !4020
  %call18.us = call fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %dependence_relations, %struct.data_dependence_relation* %call17.us) #8, !dbg !4045
  br i1 %tobool19, label %for.inc.us, label %cond.true22.us, !dbg !4046

cond.true22.us:                                   ; preds = %if.then.us
  %call27.us = call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* nonnull %base23, i32 0) #8, !dbg !4047
  call fastcc void @compute_affine_dependence(%struct.data_dependence_relation* %call17.us, %struct.loop* %call27.us) #8, !dbg !4048
  br label %for.inc.us, !dbg !4048

for.inc.us:                                       ; preds = %cond.true22.us, %if.then.us
  call void @llvm.dbg.value(metadata i32 %j.0.us, metadata !4019, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4020
  br label %for.cond2.us, !dbg !4049, !llvm.loop !4050

for.inc29.us-lcssa.us:                            ; preds = %for.cond2.us
  br label %for.inc29, !dbg !4052

for.body.split.for.body.split.split_crit_edge:    ; preds = %for.body.for.body.split_crit_edge
  br label %for.cond2, !dbg !4036

for.body.split.split.us:                          ; preds = %for.body.for.body.split_crit_edge
  br label %for.cond2.us1, !dbg !4036

for.cond2.us1:                                    ; preds = %for.inc.us15, %for.body.split.split.us
  %j.0.in.us2 = phi i32 [ %i.0, %for.body.split.split.us ], [ %j.0.us3, %for.inc.us15 ]
  %j.0.us3 = add i32 %j.0.in.us2, 1, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %j.0.us3, metadata !4019, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference** %b, metadata !4017, metadata !DIExpression(DW_OP_deref)), !dbg !4020
  %call9.us4 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %j.0.us3, %struct.data_reference** nonnull %b) #8, !dbg !4038
  %tobool10.us5 = icmp eq i32 %call9.us4, 0, !dbg !4039
  br i1 %tobool10.us5, label %for.inc29.us-lcssa.us-lcssa.us, label %for.body11.us6, !dbg !4039

for.body11.us6:                                   ; preds = %for.cond2.us1
  %4 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !4016, metadata !DIExpression()), !dbg !4020
  %is_read.us7 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %4, i64 0, i32 3, !dbg !4042
  %5 = load i8, i8* %is_read.us7, align 8, !dbg !4042
  %tobool12.us8 = icmp eq i8 %5, 0, !dbg !4042
  br i1 %tobool12.us8, label %for.body11.us6.if.then.us10_crit_edge, label %lor.lhs.false.us9, !dbg !4040

for.body11.us6.if.then.us10_crit_edge:            ; preds = %for.body11.us6
  %.pre16 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4043
  br label %if.then.us10, !dbg !4040

lor.lhs.false.us9:                                ; preds = %for.body11.us6
  %6 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.data_reference* %6, metadata !4017, metadata !DIExpression()), !dbg !4020
  %is_read13.us = getelementptr inbounds %struct.data_reference, %struct.data_reference* %6, i64 0, i32 3, !dbg !4053
  %7 = load i8, i8* %is_read13.us, align 8, !dbg !4053
  %tobool14.us = icmp eq i8 %7, 0, !dbg !4053
  br i1 %tobool14.us, label %if.then.us10, label %for.inc.us15, !dbg !4041

if.then.us10:                                     ; preds = %for.body11.us6.if.then.us10_crit_edge, %lor.lhs.false.us9
  %8 = phi %struct.data_reference* [ %.pre16, %for.body11.us6.if.then.us10_crit_edge ], [ %6, %lor.lhs.false.us9 ], !dbg !4043
  call void @llvm.dbg.value(metadata %struct.data_reference* %4, metadata !4016, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference* %8, metadata !4017, metadata !DIExpression()), !dbg !4020
  %call17.us11 = call fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* %4, %struct.data_reference* %8, %struct.VEC_loop_p_heap* null) #8, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call17.us11, metadata !4015, metadata !DIExpression()), !dbg !4020
  %call18.us12 = call fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %dependence_relations, %struct.data_dependence_relation* %call17.us11) #8, !dbg !4045
  br label %for.inc.us15, !dbg !4046

for.inc.us15:                                     ; preds = %if.then.us10, %lor.lhs.false.us9
  call void @llvm.dbg.value(metadata i32 %j.0.us3, metadata !4019, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4020
  br label %for.cond2.us1, !dbg !4049, !llvm.loop !4050

for.inc29.us-lcssa.us-lcssa.us:                   ; preds = %for.cond2.us1
  br label %for.inc29.us-lcssa, !dbg !4052

for.cond2:                                        ; preds = %for.inc, %for.body.split.for.body.split.split_crit_edge
  %j.0.in = phi i32 [ %i.0, %for.body.split.for.body.split.split_crit_edge ], [ %j.0, %for.inc ]
  %j.0 = add i32 %j.0.in, 1, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4019, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference** %b, metadata !4017, metadata !DIExpression(DW_OP_deref)), !dbg !4020
  %call9 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %j.0, %struct.data_reference** nonnull %b) #8, !dbg !4038
  %tobool10 = icmp eq i32 %call9, 0, !dbg !4039
  br i1 %tobool10, label %for.inc29.us-lcssa.us-lcssa, label %for.body11, !dbg !4039

for.body11:                                       ; preds = %for.cond2
  %9 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.data_reference* %9, metadata !4016, metadata !DIExpression()), !dbg !4020
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %9, i64 0, i32 3, !dbg !4042
  %10 = load i8, i8* %is_read, align 8, !dbg !4042
  %tobool12 = icmp eq i8 %10, 0, !dbg !4042
  br i1 %tobool12, label %for.body11.if.then_crit_edge, label %lor.lhs.false, !dbg !4040

for.body11.if.then_crit_edge:                     ; preds = %for.body11
  %.pre = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4043
  br label %if.then, !dbg !4040

lor.lhs.false:                                    ; preds = %for.body11
  %11 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4053
  call void @llvm.dbg.value(metadata %struct.data_reference* %11, metadata !4017, metadata !DIExpression()), !dbg !4020
  %is_read13 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %11, i64 0, i32 3, !dbg !4053
  %12 = load i8, i8* %is_read13, align 8, !dbg !4053
  %tobool14 = icmp eq i8 %12, 0, !dbg !4053
  br i1 %tobool14, label %if.then, label %for.inc, !dbg !4041

if.then:                                          ; preds = %for.body11.if.then_crit_edge, %lor.lhs.false
  %13 = phi %struct.data_reference* [ %.pre, %for.body11.if.then_crit_edge ], [ %11, %lor.lhs.false ], !dbg !4043
  call void @llvm.dbg.value(metadata %struct.data_reference* %9, metadata !4016, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference* %13, metadata !4017, metadata !DIExpression()), !dbg !4020
  %call17 = call fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* %9, %struct.data_reference* %13, %struct.VEC_loop_p_heap* nonnull %loop_nest) #8, !dbg !4044
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call17, metadata !4015, metadata !DIExpression()), !dbg !4020
  %call18 = call fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %dependence_relations, %struct.data_dependence_relation* %call17) #8, !dbg !4045
  %call27 = call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* nonnull %base23, i32 0) #8, !dbg !4047
  call fastcc void @compute_affine_dependence(%struct.data_dependence_relation* %call17, %struct.loop* %call27) #8, !dbg !4048
  br label %for.inc, !dbg !4048

for.inc:                                          ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !4019, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4020
  br label %for.cond2, !dbg !4049, !llvm.loop !4050

for.inc29.us-lcssa.us-lcssa:                      ; preds = %for.cond2
  br label %for.inc29.us-lcssa, !dbg !4052

for.inc29.us-lcssa:                               ; preds = %for.inc29.us-lcssa.us-lcssa.us, %for.inc29.us-lcssa.us-lcssa
  br label %for.inc29, !dbg !4052

for.inc29:                                        ; preds = %for.inc29.us-lcssa.us, %for.inc29.us-lcssa
  %inc30 = add i32 %i.0, 1, !dbg !4052
  call void @llvm.dbg.value(metadata i32 %inc30, metadata !4018, metadata !DIExpression()), !dbg !4020
  br label %for.cond, !dbg !4054, !llvm.loop !4055

for.end31:                                        ; preds = %for.cond
  br i1 %tobool16, label %if.end49, label %for.cond34.preheader, !dbg !4057

for.cond34.preheader:                             ; preds = %for.end31
  br label %for.cond34, !dbg !4058

for.cond34:                                       ; preds = %for.cond34.preheader, %for.body43
  %i.1 = phi i32 [ %inc47, %for.body43 ], [ 0, %for.cond34.preheader ], !dbg !4061
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4018, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference** %a, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4020
  %call41 = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.1, %struct.data_reference** nonnull %a) #8, !dbg !4062
  %tobool42 = icmp eq i32 %call41, 0, !dbg !4058
  br i1 %tobool42, label %if.end49.loopexit, label %for.body43, !dbg !4058

for.body43:                                       ; preds = %for.cond34
  %14 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4064
  call void @llvm.dbg.value(metadata %struct.data_reference* %14, metadata !4016, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata %struct.data_reference* %14, metadata !4016, metadata !DIExpression()), !dbg !4020
  %call44 = call fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* %14, %struct.data_reference* %14, %struct.VEC_loop_p_heap* %loop_nest) #8, !dbg !4066
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call44, metadata !4015, metadata !DIExpression()), !dbg !4020
  %call45 = call fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %dependence_relations, %struct.data_dependence_relation* %call44) #8, !dbg !4067
  call fastcc void @compute_self_dependence(%struct.data_dependence_relation* %call44) #8, !dbg !4068
  %inc47 = add i32 %i.1, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %inc47, metadata !4018, metadata !DIExpression()), !dbg !4020
  br label %for.cond34, !dbg !4070, !llvm.loop !4071

if.end49.loopexit:                                ; preds = %for.cond34
  br label %if.end49, !dbg !4073

if.end49:                                         ; preds = %if.end49.loopexit, %for.end31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4073
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4073
  ret void, !dbg !4073
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* %a, %struct.data_reference* %b, %struct.VEC_loop_p_heap* %loop_nest) unnamed_addr #5 !dbg !4074 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_reference* %a, metadata !4078, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata %struct.data_reference* %b, metadata !4079, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %loop_nest, metadata !4080, metadata !DIExpression()), !dbg !4087
  %call = tail call i8* @xmalloc(i64 64) #7, !dbg !4088
  %0 = bitcast i8* %call to %struct.data_dependence_relation*, !dbg !4088
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %0, metadata !4081, metadata !DIExpression()), !dbg !4087
  %a1 = bitcast i8* %call to %struct.data_reference**, !dbg !4089
  store %struct.data_reference* %a, %struct.data_reference** %a1, align 8, !dbg !4090
  %b2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !4091
  %1 = bitcast i8* %b2 to %struct.data_reference**, !dbg !4091
  store %struct.data_reference* %b, %struct.data_reference** %1, align 8, !dbg !4092
  %loop_nest3 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !4093
  %2 = bitcast i8* %loop_nest3 to %struct.VEC_loop_p_heap**, !dbg !4093
  store %struct.VEC_loop_p_heap* null, %struct.VEC_loop_p_heap** %2, align 8, !dbg !4094
  %3 = getelementptr inbounds i8, i8* %call, i64 60, !dbg !4095
  store i8 0, i8* %3, align 4, !dbg !4096
  %subscripts = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4097
  %4 = bitcast i8* %subscripts to %struct.VEC_subscript_p_heap**, !dbg !4097
  store %struct.VEC_subscript_p_heap* null, %struct.VEC_subscript_p_heap** %4, align 8, !dbg !4098
  %dir_vects = getelementptr inbounds i8, i8* %call, i64 40, !dbg !4099
  %5 = bitcast i8* %dir_vects to %struct.VEC_lambda_vector_heap**, !dbg !4099
  store %struct.VEC_lambda_vector_heap* null, %struct.VEC_lambda_vector_heap** %5, align 8, !dbg !4100
  %dist_vects = getelementptr inbounds i8, i8* %call, i64 48, !dbg !4101
  %6 = bitcast i8* %dist_vects to %struct.VEC_lambda_vector_heap**, !dbg !4101
  store %struct.VEC_lambda_vector_heap* null, %struct.VEC_lambda_vector_heap** %6, align 8, !dbg !4102
  %cmp = icmp eq %struct.data_reference* %a, null, !dbg !4103
  %cmp4 = icmp eq %struct.data_reference* %b, null, !dbg !4105
  %or.cond = or i1 %cmp, %cmp4, !dbg !4106
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4106

if.then:                                          ; preds = %entry
  %7 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !4107
  %are_dependent = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4109
  %8 = bitcast i8* %are_dependent to i64*, !dbg !4110
  store i64 %7, i64* %8, align 8, !dbg !4110
  br label %cleanup, !dbg !4111

if.end:                                           ; preds = %entry
  %call5 = tail call zeroext i8 @dr_may_alias_p(%struct.data_reference* %a, %struct.data_reference* %b) #8, !dbg !4112
  %tobool = icmp eq i8 %call5, 0, !dbg !4112
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !4114

if.then6:                                         ; preds = %if.end
  %9 = load i64, i64* bitcast (%union.tree_node** @chrec_known to i64*), align 8, !dbg !4115
  %are_dependent7 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4117
  %10 = bitcast i8* %are_dependent7 to i64*, !dbg !4118
  store i64 %9, i64* %10, align 8, !dbg !4118
  br label %cleanup, !dbg !4119

if.end8:                                          ; preds = %if.end
  %ref = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 1, !dbg !4120
  %11 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !4120
  %ref9 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 1, !dbg !4122
  %12 = load %union.tree_node*, %union.tree_node** %ref9, align 8, !dbg !4122
  %call10 = tail call i32 @operand_equal_p(%union.tree_node* %11, %union.tree_node* %12, i32 0) #7, !dbg !4123
  %tobool11 = icmp eq i32 %call10, 0, !dbg !4123
  br i1 %tobool11, label %if.end21, label %if.then12, !dbg !4124

if.then12:                                        ; preds = %if.end8
  %13 = getelementptr inbounds i8, i8* %call, i64 61, !dbg !4125
  store i8 1, i8* %13, align 1, !dbg !4127
  %are_dependent13 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4128
  %14 = bitcast i8* %are_dependent13 to %union.tree_node**, !dbg !4128
  store %union.tree_node* null, %union.tree_node** %14, align 8, !dbg !4129
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 5, i32 1, !dbg !4130
  %15 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !4130
  %tobool14 = icmp eq %struct.VEC_tree_heap* %15, null, !dbg !4130
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !4130

cond.true:                                        ; preds = %if.then12
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %15, i64 0, i32 0, !dbg !4130
  br label %cond.end, !dbg !4130

cond.end:                                         ; preds = %if.then12, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %if.then12 ], !dbg !4130
  %call17 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !4130
  %call18 = tail call fastcc %struct.VEC_subscript_p_heap* @VEC_subscript_p_heap_alloc(i32 %call17) #8, !dbg !4130
  store %struct.VEC_subscript_p_heap* %call18, %struct.VEC_subscript_p_heap** %4, align 8, !dbg !4131
  store %struct.VEC_loop_p_heap* %loop_nest, %struct.VEC_loop_p_heap** %2, align 8, !dbg !4132
  %inner_loop = getelementptr inbounds i8, i8* %call, i64 56, !dbg !4133
  %16 = bitcast i8* %inner_loop to i32*, !dbg !4133
  store i32 0, i32* %16, align 8, !dbg !4134
  %17 = getelementptr inbounds i8, i8* %call, i64 62, !dbg !4135
  store i8 1, i8* %17, align 2, !dbg !4136
  tail call fastcc void @compute_self_dependence(%struct.data_dependence_relation* %0) #8, !dbg !4137
  br label %cleanup, !dbg !4138

if.end21:                                         ; preds = %if.end8
  %base_object = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 5, i32 0, !dbg !4139
  %18 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !4139
  %base_object24 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 5, i32 0, !dbg !4141
  %19 = load %union.tree_node*, %union.tree_node** %base_object24, align 8, !dbg !4141
  %call25 = tail call i32 @operand_equal_p(%union.tree_node* %18, %union.tree_node* %19, i32 0) #7, !dbg !4142
  %tobool26 = icmp eq i32 %call25, 0, !dbg !4142
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !4143

if.then27:                                        ; preds = %if.end21
  %20 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !4144
  %are_dependent28 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4146
  %21 = bitcast i8* %are_dependent28 to i64*, !dbg !4147
  store i64 %20, i64* %21, align 8, !dbg !4147
  br label %cleanup, !dbg !4148

if.end29:                                         ; preds = %if.end21
  %tobool30 = icmp eq %struct.VEC_loop_p_heap* %loop_nest, null, !dbg !4149
  br i1 %tobool30, label %if.end44, label %cond.true32, !dbg !4151

cond.true32:                                      ; preds = %if.end29
  %base33 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %loop_nest, i64 0, i32 0, !dbg !4152
  %call37 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* nonnull %base33, i32 0) #8, !dbg !4152
  %22 = load %union.tree_node*, %union.tree_node** %base_object, align 8, !dbg !4153
  %call40 = tail call fastcc zeroext i8 @object_address_invariant_in_loop_p(%struct.loop* %call37, %union.tree_node* %22) #8, !dbg !4154
  %tobool41 = icmp eq i8 %call40, 0, !dbg !4154
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !4155

if.then42:                                        ; preds = %cond.true32
  %23 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !4156
  %are_dependent43 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4158
  %24 = bitcast i8* %are_dependent43 to i64*, !dbg !4159
  store i64 %23, i64* %24, align 8, !dbg !4159
  br label %cleanup, !dbg !4160

if.end44:                                         ; preds = %cond.true32, %if.end29
  %access_fns46 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 5, i32 1, !dbg !4161
  %25 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns46, align 8, !dbg !4161
  %tobool47 = icmp eq %struct.VEC_tree_heap* %25, null, !dbg !4161
  br i1 %tobool47, label %cond.end53, label %cond.true48, !dbg !4161

cond.true48:                                      ; preds = %if.end44
  %base51 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %25, i64 0, i32 0, !dbg !4161
  br label %cond.end53, !dbg !4161

cond.end53:                                       ; preds = %if.end44, %cond.true48
  %cond54 = phi %struct.VEC_tree_base* [ %base51, %cond.true48 ], [ null, %if.end44 ], !dbg !4161
  %call55 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond54) #8, !dbg !4161
  %access_fns57 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %b, i64 0, i32 5, i32 1, !dbg !4161
  %26 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns57, align 8, !dbg !4161
  %tobool58 = icmp eq %struct.VEC_tree_heap* %26, null, !dbg !4161
  br i1 %tobool58, label %cond.end64, label %cond.true59, !dbg !4161

cond.true59:                                      ; preds = %cond.end53
  %base62 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %26, i64 0, i32 0, !dbg !4161
  br label %cond.end64, !dbg !4161

cond.end64:                                       ; preds = %cond.end53, %cond.true59
  %cond65 = phi %struct.VEC_tree_base* [ %base62, %cond.true59 ], [ null, %cond.end53 ], !dbg !4161
  %call66 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond65) #8, !dbg !4161
  %cmp67 = icmp eq i32 %call55, %call66, !dbg !4161
  br i1 %cmp67, label %cond.end70, label %cond.true68, !dbg !4161

cond.true68:                                      ; preds = %cond.end64
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1419, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !4161
  br label %cond.end70, !dbg !4161

cond.end70:                                       ; preds = %cond.end64, %cond.true68
  %27 = getelementptr inbounds i8, i8* %call, i64 61, !dbg !4162
  store i8 1, i8* %27, align 1, !dbg !4163
  %are_dependent73 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4164
  %28 = bitcast i8* %are_dependent73 to %union.tree_node**, !dbg !4164
  store %union.tree_node* null, %union.tree_node** %28, align 8, !dbg !4165
  %29 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns46, align 8, !dbg !4166
  %tobool76 = icmp eq %struct.VEC_tree_heap* %29, null, !dbg !4166
  br i1 %tobool76, label %cond.end82, label %cond.true77, !dbg !4166

cond.true77:                                      ; preds = %cond.end70
  %base80 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %29, i64 0, i32 0, !dbg !4166
  br label %cond.end82, !dbg !4166

cond.end82:                                       ; preds = %cond.end70, %cond.true77
  %cond83 = phi %struct.VEC_tree_base* [ %base80, %cond.true77 ], [ null, %cond.end70 ], !dbg !4166
  %call84 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond83) #8, !dbg !4166
  %call85 = tail call fastcc %struct.VEC_subscript_p_heap* @VEC_subscript_p_heap_alloc(i32 %call84) #8, !dbg !4166
  store %struct.VEC_subscript_p_heap* %call85, %struct.VEC_subscript_p_heap** %4, align 8, !dbg !4167
  store %struct.VEC_loop_p_heap* %loop_nest, %struct.VEC_loop_p_heap** %2, align 8, !dbg !4168
  %inner_loop88 = getelementptr inbounds i8, i8* %call, i64 56, !dbg !4169
  %30 = bitcast i8* %inner_loop88 to i32*, !dbg !4169
  store i32 0, i32* %30, align 8, !dbg !4170
  %31 = getelementptr inbounds i8, i8* %call, i64 62, !dbg !4171
  store i8 0, i8* %31, align 2, !dbg !4172
  call void @llvm.dbg.value(metadata i32 0, metadata !4082, metadata !DIExpression()), !dbg !4087
  br label %for.cond, !dbg !4173

for.cond:                                         ; preds = %for.body, %cond.end82
  %i.0 = phi i32 [ 0, %cond.end82 ], [ %inc, %for.body ], !dbg !4174
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4082, metadata !DIExpression()), !dbg !4087
  %32 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns46, align 8, !dbg !4175
  %tobool92 = icmp eq %struct.VEC_tree_heap* %32, null, !dbg !4175
  br i1 %tobool92, label %cond.end98, label %cond.true93, !dbg !4175

cond.true93:                                      ; preds = %for.cond
  %base96 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %32, i64 0, i32 0, !dbg !4175
  br label %cond.end98, !dbg !4175

cond.end98:                                       ; preds = %for.cond, %cond.true93
  %cond99 = phi %struct.VEC_tree_base* [ %base96, %cond.true93 ], [ null, %for.cond ], !dbg !4175
  %call100 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond99) #8, !dbg !4175
  %cmp101 = icmp ult i32 %i.0, %call100, !dbg !4176
  br i1 %cmp101, label %for.body, label %cleanup.loopexit, !dbg !4177

for.body:                                         ; preds = %cond.end98
  %call102 = tail call i8* @xmalloc(i64 32) #7, !dbg !4178
  %33 = bitcast i8* %call102 to %struct.subscript*, !dbg !4178
  call void @llvm.dbg.value(metadata %struct.subscript* %33, metadata !4083, metadata !DIExpression()), !dbg !4179
  %call103 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !4180
  %conflicting_iterations_in_a = bitcast i8* %call102 to %struct.conflict_function**, !dbg !4181
  store %struct.conflict_function* %call103, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !4182
  %call104 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !4183
  %conflicting_iterations_in_b = getelementptr inbounds i8, i8* %call102, i64 8, !dbg !4184
  %34 = bitcast i8* %conflicting_iterations_in_b to %struct.conflict_function**, !dbg !4184
  store %struct.conflict_function* %call104, %struct.conflict_function** %34, align 8, !dbg !4185
  %35 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !4186
  %last_conflict = getelementptr inbounds i8, i8* %call102, i64 16, !dbg !4187
  %36 = bitcast i8* %last_conflict to i64*, !dbg !4188
  store i64 %35, i64* %36, align 8, !dbg !4188
  %distance = getelementptr inbounds i8, i8* %call102, i64 24, !dbg !4189
  %37 = bitcast i8* %distance to i64*, !dbg !4190
  store i64 %35, i64* %37, align 8, !dbg !4190
  %call106 = tail call fastcc %struct.subscript** @VEC_subscript_p_heap_safe_push(%struct.VEC_subscript_p_heap** nonnull %4, %struct.subscript* %33) #8, !dbg !4191
  %inc = add i32 %i.0, 1, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4082, metadata !DIExpression()), !dbg !4087
  br label %for.cond, !dbg !4193, !llvm.loop !4194

cleanup.loopexit:                                 ; preds = %cond.end98
  br label %cleanup, !dbg !4196

cleanup:                                          ; preds = %cleanup.loopexit, %if.then42, %if.then27, %cond.end, %if.then6, %if.then
  ret %struct.data_dependence_relation* %0, !dbg !4196
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %vec_, %struct.data_dependence_relation* %obj_) unnamed_addr #0 !dbg !4197 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %vec_, metadata !4201, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %obj_, metadata !4202, metadata !DIExpression()), !dbg !4203
  %call = tail call fastcc i32 @VEC_ddr_p_heap_reserve(%struct.VEC_ddr_p_heap** %vec_, i32 1) #8, !dbg !4204
  %0 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %vec_, align 8, !dbg !4204
  %tobool = icmp eq %struct.VEC_ddr_p_heap* %0, null, !dbg !4204
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4204

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %0, i64 0, i32 0, !dbg !4204
  br label %cond.end, !dbg !4204

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ddr_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4204
  %call1 = tail call fastcc %struct.data_dependence_relation** @VEC_ddr_p_base_quick_push(%struct.VEC_ddr_p_base* %cond, %struct.data_dependence_relation* %obj_) #8, !dbg !4204
  ret %struct.data_dependence_relation** %call1, !dbg !4204
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_affine_dependence(%struct.data_dependence_relation* %ddr, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !4205 {
entry:
  %maybe_dependent = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !4209, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !4210, metadata !DIExpression()), !dbg !4226
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !4227
  %0 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !4227
  call void @llvm.dbg.value(metadata %struct.data_reference* %0, metadata !4211, metadata !DIExpression()), !dbg !4226
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !4228
  %1 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !4228
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !4212, metadata !DIExpression()), !dbg !4226
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4229
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !4229
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4231

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !4232
  %and = and i32 %3, 8, !dbg !4233
  %tobool1 = icmp eq i32 %and, 0, !dbg !4233
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4234

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95, i64 0, i64 0)) #7, !dbg !4235
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4237
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0)) #7, !dbg !4238
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4239
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %0, i64 0, i32 0, !dbg !4240
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4240
  tail call void @print_gimple_stmt(%struct._IO_FILE* %5, %union.gimple_statement_d* %6, i32 0, i32 0) #7, !dbg !4241
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4242
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i64 0, i64 0)) #7, !dbg !4243
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4244
  %stmt4 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 0, !dbg !4245
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt4, align 8, !dbg !4245
  tail call void @print_gimple_stmt(%struct._IO_FILE* %8, %union.gimple_statement_d* %9, i32 0, i32 0) #7, !dbg !4246
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4247
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !4248
  br label %if.end, !dbg !4249

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !4250
  %11 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !4250
  %cmp = icmp eq %union.tree_node* %11, null, !dbg !4251
  br i1 %cmp, label %land.lhs.true6, label %if.end65, !dbg !4252

land.lhs.true6:                                   ; preds = %if.end
  %self_reference_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 10, !dbg !4253
  %12 = load i8, i8* %self_reference_p, align 2, !dbg !4253
  %tobool7 = icmp eq i8 %12, 0, !dbg !4253
  br i1 %tobool7, label %if.then8, label %if.end65, !dbg !4254

if.then8:                                         ; preds = %land.lhs.true6
  %13 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 0), align 4, !dbg !4255
  %inc = add nsw i32 %13, 1, !dbg !4255
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 0), align 4, !dbg !4255
  %call9 = tail call fastcc zeroext i8 @access_functions_are_affine_or_constant_p(%struct.data_reference* %0, %struct.loop* %loop_nest) #8, !dbg !4256
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4256
  br i1 %tobool10, label %csys_dont_know, label %land.lhs.true11, !dbg !4257

land.lhs.true11:                                  ; preds = %if.then8
  %call12 = tail call fastcc zeroext i8 @access_functions_are_affine_or_constant_p(%struct.data_reference* %1, %struct.loop* %loop_nest) #8, !dbg !4258
  %tobool14 = icmp eq i8 %call12, 0, !dbg !4258
  br i1 %tobool14, label %csys_dont_know, label %if.then15, !dbg !4259

if.then15:                                        ; preds = %land.lhs.true11
  %14 = load i32, i32* @flag_check_data_deps, align 4, !dbg !4260
  %tobool16 = icmp eq i32 %14, 0, !dbg !4260
  tail call fastcc void @subscript_dependence_tester(%struct.data_dependence_relation* %ddr, %struct.loop* %loop_nest) #8, !dbg !4261
  br i1 %tobool16, label %if.end65, label %if.then17, !dbg !4262

if.then17:                                        ; preds = %if.then15
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4263
  %tobool18 = icmp eq %struct._IO_FILE* %15, null, !dbg !4263
  br i1 %tobool18, label %if.end24, label %land.lhs.true19, !dbg !4265

land.lhs.true19:                                  ; preds = %if.then17
  %16 = load i32, i32* @dump_flags, align 4, !dbg !4266
  %and20 = and i32 %16, 8, !dbg !4267
  %tobool21 = icmp eq i32 %and20, 0, !dbg !4267
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !4268

if.then22:                                        ; preds = %land.lhs.true19
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0)) #7, !dbg !4269
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4271
  tail call void @dump_data_dependence_relation(%struct._IO_FILE* %17, %struct.data_dependence_relation* %ddr) #8, !dbg !4272
  br label %if.end24, !dbg !4273

if.end24:                                         ; preds = %land.lhs.true19, %if.then17, %if.then22
  %18 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !4274
  %cmp26 = icmp eq %union.tree_node* %18, null, !dbg !4275
  br i1 %cmp26, label %if.then28, label %if.end65, !dbg !4276

if.then28:                                        ; preds = %if.end24
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !4213, metadata !DIExpression(DW_OP_deref)), !dbg !4277
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %maybe_dependent) #6, !dbg !4278
  %dist_vects29 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !4279
  %19 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects29, align 8, !dbg !4279
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %19, metadata !4223, metadata !DIExpression()), !dbg !4277
  %dir_vects30 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 5, !dbg !4280
  %20 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects30, align 8, !dbg !4280
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %20, metadata !4222, metadata !DIExpression()), !dbg !4277
  store %struct.VEC_lambda_vector_heap* null, %struct.VEC_lambda_vector_heap** %dist_vects29, align 8, !dbg !4281
  store %struct.VEC_lambda_vector_heap* null, %struct.VEC_lambda_vector_heap** %dir_vects30, align 8, !dbg !4282
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !4213, metadata !DIExpression(DW_OP_deref)), !dbg !4277
  %call33 = call fastcc zeroext i8 @init_omega_for_ddr(%struct.data_dependence_relation* %ddr, i8* nonnull %maybe_dependent) #8, !dbg !4283
  %tobool34 = icmp eq i8 %call33, 0, !dbg !4283
  br i1 %tobool34, label %cleanup, label %if.end36, !dbg !4285

if.end36:                                         ; preds = %if.then28
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4286
  %tobool37 = icmp eq %struct._IO_FILE* %21, null, !dbg !4286
  br i1 %tobool37, label %if.end43, label %land.lhs.true38, !dbg !4288

land.lhs.true38:                                  ; preds = %if.end36
  %22 = load i32, i32* @dump_flags, align 4, !dbg !4289
  %and39 = and i32 %22, 8, !dbg !4290
  %tobool40 = icmp eq i32 %and39, 0, !dbg !4290
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !4291

if.then41:                                        ; preds = %land.lhs.true38
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i64 0, i64 0)) #7, !dbg !4292
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4294
  call void @dump_data_dependence_relation(%struct._IO_FILE* %23, %struct.data_dependence_relation* %ddr) #8, !dbg !4295
  br label %if.end43, !dbg !4296

if.end43:                                         ; preds = %land.lhs.true38, %if.end36, %if.then41
  %24 = load i8, i8* %maybe_dependent, align 1, !dbg !4297
  call void @llvm.dbg.value(metadata i8 %24, metadata !4213, metadata !DIExpression()), !dbg !4277
  %tobool44 = icmp eq i8 %24, 0, !dbg !4297
  br i1 %tobool44, label %cleanup, label %if.then45, !dbg !4299

if.then45:                                        ; preds = %if.end43
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4300
  %call46 = call fastcc zeroext i8 @ddr_consistent_p(%struct._IO_FILE* %25, %struct.data_dependence_relation* %ddr, %struct.VEC_lambda_vector_heap* %19, %struct.VEC_lambda_vector_heap* %20) #8, !dbg !4300
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4300
  br i1 %tobool47, label %cond.true, label %cleanup, !dbg !4300

cond.true:                                        ; preds = %if.then45
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 3982, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !4300
  br label %cleanup, !dbg !4300

cleanup:                                          ; preds = %if.then45, %if.end43, %if.then28, %cond.true
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then28 ], [ true, %cond.true ], [ true, %if.then45 ], [ true, %if.end43 ]
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !4213, metadata !DIExpression(DW_OP_deref)), !dbg !4277
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %maybe_dependent) #6, !dbg !4301
  br i1 %cleanup.dest.slot.0, label %if.end65, label %csys_dont_know

csys_dont_know:                                   ; preds = %land.lhs.true11, %if.then8, %cleanup
  call void @llvm.dbg.label(metadata !4224), !dbg !4302
  %26 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 3), align 4, !dbg !4303
  %inc54 = add nsw i32 %26, 1, !dbg !4303
  store i32 %inc54, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 3), align 4, !dbg !4303
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4304
  %tobool55 = icmp eq %struct._IO_FILE* %27, null, !dbg !4304
  br i1 %tobool55, label %if.end63, label %land.lhs.true56, !dbg !4306

land.lhs.true56:                                  ; preds = %csys_dont_know
  %28 = load i32, i32* @dump_flags, align 4, !dbg !4307
  %and57 = and i32 %28, 8, !dbg !4308
  %tobool58 = icmp eq i32 %and57, 0, !dbg !4308
  br i1 %tobool58, label %if.end63, label %if.then59, !dbg !4309

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i64 0, i64 0)) #7, !dbg !4310
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4312
  call void @dump_data_reference(%struct._IO_FILE* %29, %struct.data_reference* %0) #8, !dbg !4313
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4314
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i64 0, i64 0)) #7, !dbg !4315
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4316
  call void @dump_data_reference(%struct._IO_FILE* %31, %struct.data_reference* %1) #8, !dbg !4317
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4318
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.102, i64 0, i64 0)) #7, !dbg !4319
  br label %if.end63, !dbg !4320

if.end63:                                         ; preds = %land.lhs.true56, %csys_dont_know, %if.then59
  %33 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4321
  call fastcc void @finalize_ddr_dependent(%struct.data_dependence_relation* %ddr, %union.tree_node* %33) #8, !dbg !4322
  br label %if.end65

if.end65:                                         ; preds = %if.then15, %land.lhs.true6, %if.end63, %if.end24, %cleanup, %if.end
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4323
  %tobool66 = icmp eq %struct._IO_FILE* %34, null, !dbg !4323
  br i1 %tobool66, label %if.end72, label %land.lhs.true67, !dbg !4325

land.lhs.true67:                                  ; preds = %if.end65
  %35 = load i32, i32* @dump_flags, align 4, !dbg !4326
  %and68 = and i32 %35, 8, !dbg !4327
  %tobool69 = icmp eq i32 %and68, 0, !dbg !4327
  br i1 %tobool69, label %if.end72, label %if.then70, !dbg !4328

if.then70:                                        ; preds = %land.lhs.true67
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !4329
  br label %if.end72, !dbg !4329

if.end72:                                         ; preds = %land.lhs.true67, %if.end65, %if.then70
  ret void, !dbg !4330
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4331 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4335, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4336, metadata !DIExpression()), !dbg !4337
  br label %land.end, !dbg !4338

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4338
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4338
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !4338
  ret %struct.loop* %0, !dbg !4338
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_self_dependence(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !4339 {
entry:
  %subscript = alloca %struct.subscript*, align 8
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !4341, metadata !DIExpression()), !dbg !4344
  %0 = bitcast %struct.subscript** %subscript to i8*, !dbg !4345
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4345
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !4346
  %1 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !4346
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !4348
  br i1 %cmp, label %for.cond.preheader, label %cleanup, !dbg !4349

for.cond.preheader:                               ; preds = %entry
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !4350
  br label %for.cond, !dbg !4353

for.cond:                                         ; preds = %for.cond.preheader, %if.end10
  %i.0 = phi i32 [ %inc, %if.end10 ], [ 0, %for.cond.preheader ], !dbg !4354
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4342, metadata !DIExpression()), !dbg !4344
  %2 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !4355
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %2, null, !dbg !4355
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4355

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !4355
  br label %cond.end, !dbg !4355

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4355
  call void @llvm.dbg.value(metadata %struct.subscript** %subscript, metadata !4343, metadata !DIExpression(DW_OP_deref)), !dbg !4344
  %call = call fastcc i32 @VEC_subscript_p_base_iterate(%struct.VEC_subscript_p_base* %cond, i32 %i.0, %struct.subscript** nonnull %subscript) #8, !dbg !4355
  %tobool2 = icmp eq i32 %call, 0, !dbg !4353
  br i1 %tobool2, label %for.end, label %for.body, !dbg !4353

for.body:                                         ; preds = %cond.end
  %3 = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !4356
  call void @llvm.dbg.value(metadata %struct.subscript* %3, metadata !4343, metadata !DIExpression()), !dbg !4344
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %3, i64 0, i32 0, !dbg !4356
  %4 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !4356
  %tobool3 = icmp eq %struct.conflict_function* %4, null, !dbg !4356
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !4359

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.subscript* %3, metadata !4343, metadata !DIExpression()), !dbg !4344
  call fastcc void @free_conflict_function(%struct.conflict_function* nonnull %4) #8, !dbg !4360
  %.pre = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !4361
  br label %if.end6, !dbg !4360

if.end6:                                          ; preds = %for.body, %if.then4
  %5 = phi %struct.subscript* [ %3, %for.body ], [ %.pre, %if.then4 ], !dbg !4361
  call void @llvm.dbg.value(metadata %struct.subscript* %5, metadata !4343, metadata !DIExpression()), !dbg !4344
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %5, i64 0, i32 1, !dbg !4361
  %6 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !4361
  %tobool7 = icmp eq %struct.conflict_function* %6, null, !dbg !4361
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4363

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.value(metadata %struct.subscript* %5, metadata !4343, metadata !DIExpression()), !dbg !4344
  call fastcc void @free_conflict_function(%struct.conflict_function* nonnull %6) #8, !dbg !4364
  br label %if.end10, !dbg !4364

if.end10:                                         ; preds = %if.end6, %if.then8
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4365
  %call11 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %7) #8, !dbg !4366
  %call12 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call11) #8, !dbg !4367
  %8 = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !4368
  call void @llvm.dbg.value(metadata %struct.subscript* %8, metadata !4343, metadata !DIExpression()), !dbg !4344
  %conflicting_iterations_in_a13 = getelementptr inbounds %struct.subscript, %struct.subscript* %8, i64 0, i32 0, !dbg !4368
  store %struct.conflict_function* %call12, %struct.conflict_function** %conflicting_iterations_in_a13, align 8, !dbg !4369
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !4370
  %call14 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %9) #8, !dbg !4371
  %call15 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call14) #8, !dbg !4372
  %10 = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !4373
  call void @llvm.dbg.value(metadata %struct.subscript* %10, metadata !4343, metadata !DIExpression()), !dbg !4344
  %conflicting_iterations_in_b16 = getelementptr inbounds %struct.subscript, %struct.subscript* %10, i64 0, i32 1, !dbg !4373
  store %struct.conflict_function* %call15, %struct.conflict_function** %conflicting_iterations_in_b16, align 8, !dbg !4374
  %11 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !4375
  call void @llvm.dbg.value(metadata %struct.subscript* %10, metadata !4343, metadata !DIExpression()), !dbg !4344
  %last_conflict = getelementptr inbounds %struct.subscript, %struct.subscript* %10, i64 0, i32 2, !dbg !4376
  %12 = bitcast %union.tree_node** %last_conflict to i64*, !dbg !4377
  store i64 %11, i64* %12, align 8, !dbg !4377
  %inc = add i32 %i.0, 1, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4342, metadata !DIExpression()), !dbg !4344
  br label %for.cond, !dbg !4379, !llvm.loop !4380

for.end:                                          ; preds = %cond.end
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !4382
  %13 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !4382
  %tobool17 = icmp eq %struct.VEC_loop_p_heap* %13, null, !dbg !4382
  br i1 %tobool17, label %cond.end22, label %cond.true18, !dbg !4382

cond.true18:                                      ; preds = %for.end
  %base20 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %13, i64 0, i32 0, !dbg !4382
  br label %cond.end22, !dbg !4382

cond.end22:                                       ; preds = %for.end, %cond.true18
  %cond23 = phi %struct.VEC_loop_p_base* [ %base20, %cond.true18 ], [ null, %for.end ], !dbg !4382
  %call24 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond23) #8, !dbg !4382
  %call25 = call fastcc i32* @lambda_vector_new(i32 %call24) #8, !dbg !4383
  call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call25) #8, !dbg !4384
  %14 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !4385
  %tobool27 = icmp eq %struct.VEC_loop_p_heap* %14, null, !dbg !4385
  br i1 %tobool27, label %cond.end32, label %cond.true28, !dbg !4385

cond.true28:                                      ; preds = %cond.end22
  %base30 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %14, i64 0, i32 0, !dbg !4385
  br label %cond.end32, !dbg !4385

cond.end32:                                       ; preds = %cond.end22, %cond.true28
  %cond33 = phi %struct.VEC_loop_p_base* [ %base30, %cond.true28 ], [ null, %cond.end22 ], !dbg !4385
  %call34 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond33) #8, !dbg !4385
  %call35 = call fastcc i32* @lambda_vector_new(i32 %call34) #8, !dbg !4386
  call fastcc void @save_dir_v(%struct.data_dependence_relation* %ddr, i32* %call35) #8, !dbg !4387
  br label %cleanup, !dbg !4388

cleanup:                                          ; preds = %entry, %cond.end32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4388
  ret void, !dbg !4388
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %stmt, %struct.VEC_data_ref_loc_heap** %references) local_unnamed_addr #5 !dbg !4389 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4394, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4395, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8 0, metadata !4396, metadata !DIExpression()), !dbg !4409
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %call, metadata !4401, metadata !DIExpression()), !dbg !4409
  store %struct.VEC_data_ref_loc_heap* null, %struct.VEC_data_ref_loc_heap** %references, align 8, !dbg !4411
  switch i32 %call, label %if.end [
    i32 8, label %land.lhs.true
    i32 7, label %land.lhs.true3
  ], !dbg !4412

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %stmt) #7, !dbg !4414
  %and = and i32 %call1, 3, !dbg !4415
  %tobool = icmp eq i32 %and, 0, !dbg !4415
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4416

lor.lhs.false:                                    ; preds = %land.lhs.true
  br i1 false, label %lor.lhs.false.land.lhs.true3_crit_edge, label %if.end, !dbg !4417

lor.lhs.false.land.lhs.true3_crit_edge:           ; preds = %lor.lhs.false
  br label %land.lhs.true3, !dbg !4417

land.lhs.true3:                                   ; preds = %lor.lhs.false.land.lhs.true3_crit_edge, %entry
  %call4 = tail call fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %stmt) #8, !dbg !4418
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4418
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4419

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true3
  call void @llvm.dbg.value(metadata i8 1, metadata !4396, metadata !DIExpression()), !dbg !4409
  br label %if.end, !dbg !4420

if.end:                                           ; preds = %land.lhs.true3, %entry, %if.then, %lor.lhs.false
  %clobbers_memory.0 = phi i8 [ 1, %if.then ], [ 0, %land.lhs.true3 ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !4409
  call void @llvm.dbg.value(metadata i8 %clobbers_memory.0, metadata !4396, metadata !DIExpression()), !dbg !4409
  %call6 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !4421
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !4421
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !4423

if.end9:                                          ; preds = %if.end
  switch i32 %call, label %cleanup [
    i32 6, label %if.then12
    i32 8, label %if.then67
  ], !dbg !4424

if.then12:                                        ; preds = %if.end9
  %call13 = tail call fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %stmt) #8, !dbg !4425
  call void @llvm.dbg.value(metadata %union.tree_node** %call13, metadata !4399, metadata !DIExpression()), !dbg !4409
  %call14 = tail call fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %stmt) #8, !dbg !4426
  call void @llvm.dbg.value(metadata %union.tree_node** %call14, metadata !4400, metadata !DIExpression()), !dbg !4409
  %0 = bitcast %union.tree_node** %call14 to i64**, !dbg !4427
  %1 = load i64*, i64** %0, align 8, !dbg !4427
  %bf.load = load i64, i64* %1, align 8, !dbg !4427
  %bf.cast = and i64 %bf.load, 65535, !dbg !4427
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4427
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4427
  %cmp16 = icmp eq i32 %2, 3, !dbg !4427
  %3 = bitcast i64* %1 to %union.tree_node*, !dbg !4429
  br i1 %cmp16, label %if.then37, label %lor.lhs.false18, !dbg !4429

lor.lhs.false18:                                  ; preds = %if.then12
  %cmp25 = icmp eq i32 %2, 4, !dbg !4430
  br i1 %cmp25, label %land.lhs.true27, label %if.end39, !dbg !4431

land.lhs.true27:                                  ; preds = %lor.lhs.false18
  %call28 = tail call %union.tree_node* @get_base_address(%union.tree_node* %3) #7, !dbg !4432
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4402, metadata !DIExpression()), !dbg !4433
  %tobool29 = icmp eq %union.tree_node* %call28, null, !dbg !4434
  br i1 %tobool29, label %if.end39, label %land.lhs.true30, !dbg !4435

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4436
  %bf.load32 = load i64, i64* %4, align 8, !dbg !4436
  %bf.cast341 = and i64 %bf.load32, 65535, !dbg !4437
  %cmp35 = icmp eq i64 %bf.cast341, 141, !dbg !4437
  br i1 %cmp35, label %if.end39, label %if.then37, !dbg !4438

if.then37:                                        ; preds = %land.lhs.true30, %if.then12
  %call38 = tail call fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_heap_safe_push(%struct.VEC_data_ref_loc_heap** %references, %struct.data_ref_loc_d* null) #8, !dbg !4439
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %call38, metadata !4397, metadata !DIExpression()), !dbg !4409
  %pos = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call38, i64 0, i32 0, !dbg !4441
  store %union.tree_node** %call14, %union.tree_node*** %pos, align 8, !dbg !4442
  %is_read = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call38, i64 0, i32 1, !dbg !4443
  store i8 1, i8* %is_read, align 8, !dbg !4444
  br label %if.end39, !dbg !4445

if.end39:                                         ; preds = %land.lhs.true30, %land.lhs.true27, %if.then37, %lor.lhs.false18
  %5 = bitcast %union.tree_node** %call13 to i64**, !dbg !4446
  %6 = load i64*, i64** %5, align 8, !dbg !4446
  %bf.load41 = load i64, i64* %6, align 8, !dbg !4446
  %bf.cast43 = and i64 %bf.load41, 65535, !dbg !4446
  %arrayidx45 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast43, !dbg !4446
  %7 = load i32, i32* %arrayidx45, align 4, !dbg !4446
  %cmp46 = icmp eq i32 %7, 3, !dbg !4446
  %8 = bitcast i64* %6 to %union.tree_node*, !dbg !4448
  br i1 %cmp46, label %if.then60, label %lor.lhs.false48, !dbg !4448

lor.lhs.false48:                                  ; preds = %if.end39
  %cmp55 = icmp eq i32 %7, 4, !dbg !4449
  br i1 %cmp55, label %land.lhs.true57, label %cleanup, !dbg !4450

land.lhs.true57:                                  ; preds = %lor.lhs.false48
  %call58 = tail call %union.tree_node* @get_base_address(%union.tree_node* %8) #7, !dbg !4451
  %tobool59 = icmp eq %union.tree_node* %call58, null, !dbg !4451
  br i1 %tobool59, label %cleanup, label %if.then60, !dbg !4452

if.then60:                                        ; preds = %land.lhs.true57, %if.end39
  %call61 = tail call fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_heap_safe_push(%struct.VEC_data_ref_loc_heap** %references, %struct.data_ref_loc_d* null) #8, !dbg !4453
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %call61, metadata !4397, metadata !DIExpression()), !dbg !4409
  %pos62 = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call61, i64 0, i32 0, !dbg !4455
  store %union.tree_node** %call13, %union.tree_node*** %pos62, align 8, !dbg !4456
  %is_read63 = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call61, i64 0, i32 1, !dbg !4457
  store i8 0, i8* %is_read63, align 8, !dbg !4458
  br label %cleanup, !dbg !4459

if.then67:                                        ; preds = %if.end9
  %call68 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %call68, metadata !4408, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i32 0, metadata !4405, metadata !DIExpression()), !dbg !4461
  br label %for.cond, !dbg !4462

for.cond:                                         ; preds = %for.inc, %if.then67
  %i.0 = phi i32 [ 0, %if.then67 ], [ %inc, %for.inc ], !dbg !4464
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4405, metadata !DIExpression()), !dbg !4461
  %exitcond = icmp eq i32 %i.0, %call68, !dbg !4465
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !4467

for.body:                                         ; preds = %for.cond
  %call71 = tail call fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %stmt, i32 %i.0) #8, !dbg !4468
  call void @llvm.dbg.value(metadata %union.tree_node** %call71, metadata !4399, metadata !DIExpression()), !dbg !4409
  %9 = bitcast %union.tree_node** %call71 to i64**, !dbg !4470
  %10 = load i64*, i64** %9, align 8, !dbg !4470
  %bf.load73 = load i64, i64* %10, align 8, !dbg !4470
  %bf.cast75 = and i64 %bf.load73, 65535, !dbg !4470
  %arrayidx77 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast75, !dbg !4470
  %11 = load i32, i32* %arrayidx77, align 4, !dbg !4470
  %cmp78 = icmp eq i32 %11, 3, !dbg !4470
  %12 = bitcast i64* %10 to %union.tree_node*, !dbg !4472
  br i1 %cmp78, label %if.then92, label %lor.lhs.false80, !dbg !4472

lor.lhs.false80:                                  ; preds = %for.body
  %cmp87 = icmp eq i32 %11, 4, !dbg !4473
  br i1 %cmp87, label %land.lhs.true89, label %for.inc, !dbg !4474

land.lhs.true89:                                  ; preds = %lor.lhs.false80
  %call90 = tail call %union.tree_node* @get_base_address(%union.tree_node* %12) #7, !dbg !4475
  %tobool91 = icmp eq %union.tree_node* %call90, null, !dbg !4475
  br i1 %tobool91, label %for.inc, label %if.then92, !dbg !4476

if.then92:                                        ; preds = %land.lhs.true89, %for.body
  %call93 = tail call fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_heap_safe_push(%struct.VEC_data_ref_loc_heap** %references, %struct.data_ref_loc_d* null) #8, !dbg !4477
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %call93, metadata !4397, metadata !DIExpression()), !dbg !4409
  %pos94 = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call93, i64 0, i32 0, !dbg !4479
  store %union.tree_node** %call71, %union.tree_node*** %pos94, align 8, !dbg !4480
  %is_read95 = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %call93, i64 0, i32 1, !dbg !4481
  store i8 1, i8* %is_read95, align 8, !dbg !4482
  br label %for.inc, !dbg !4483

for.inc:                                          ; preds = %land.lhs.true89, %lor.lhs.false80, %if.then92
  %inc = add i32 %i.0, 1, !dbg !4484
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4405, metadata !DIExpression()), !dbg !4461
  br label %for.cond, !dbg !4485, !llvm.loop !4486

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4488

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true57, %if.end, %if.then60, %lor.lhs.false48, %if.end9
  ret i8 %clobbers_memory.0, !dbg !4488
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4489 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4493, metadata !DIExpression()), !dbg !4494
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4495
  %bf.load = load i32, i32* %0, align 8, !dbg !4495
  %bf.clear = and i32 %bf.load, 255, !dbg !4495
  ret i32 %bf.clear, !dbg !4496
}

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_asm_volatile_p(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4497 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4501, metadata !DIExpression()), !dbg !4502
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !4503
  %bf.load = load i32, i32* %0, align 8, !dbg !4503
  %and = lshr i32 %bf.load, 17, !dbg !4504
  %1 = trunc i32 %and to i8, !dbg !4504
  %2 = and i8 %1, 1, !dbg !4504
  ret i8 %2, !dbg !4505
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4506 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4510, metadata !DIExpression()), !dbg !4511
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !4512
  %tobool = icmp eq i8 %call, 0, !dbg !4512
  br i1 %tobool, label %return, label %if.end, !dbg !4514

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4515
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4515
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4515
  br label %return, !dbg !4516

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4511
  ret %union.tree_node* %retval.0, !dbg !4517
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_lhs_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4518 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4522, metadata !DIExpression()), !dbg !4523
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4524
  ret %union.tree_node** %call, !dbg !4525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_assign_rhs1_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4526 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4528, metadata !DIExpression()), !dbg !4529
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !4530
  ret %union.tree_node** %call, !dbg !4531
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_heap_safe_push(%struct.VEC_data_ref_loc_heap** %vec_, %struct.data_ref_loc_d* %obj_) unnamed_addr #0 !dbg !4532 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %vec_, metadata !4538, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* null, metadata !4539, metadata !DIExpression()), !dbg !4540
  %call = tail call fastcc i32 @VEC_data_ref_loc_heap_reserve(%struct.VEC_data_ref_loc_heap** %vec_, i32 1) #8, !dbg !4541
  %0 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %vec_, align 8, !dbg !4541
  %tobool = icmp eq %struct.VEC_data_ref_loc_heap* %0, null, !dbg !4541
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4541

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %0, i64 0, i32 0, !dbg !4541
  br label %cond.end, !dbg !4541

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_data_ref_loc_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4541
  %call1 = tail call fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_base_quick_push(%struct.VEC_data_ref_loc_base* %cond, %struct.data_ref_loc_d* null) #8, !dbg !4541
  ret %struct.data_ref_loc_d* %call1, !dbg !4541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4542 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4546, metadata !DIExpression()), !dbg !4548
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %call, metadata !4547, metadata !DIExpression()), !dbg !4548
  %sub = add i32 %call, -3, !dbg !4550
  ret i32 %sub, !dbg !4551
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_call_arg_ptr(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4552 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4556, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 %index, metadata !4557, metadata !DIExpression()), !dbg !4558
  %add = add i32 %index, 3, !dbg !4559
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !4560
  ret %union.tree_node** %call, !dbg !4561
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @find_data_references_in_stmt(%struct.loop* %nest, %union.gimple_statement_d* %stmt, %struct.VEC_data_reference_p_heap** %datarefs) local_unnamed_addr #5 !dbg !4562 {
entry:
  %references = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %ref = alloca %struct.data_ref_loc_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %nest, metadata !4567, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4568, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4569, metadata !DIExpression()), !dbg !4575
  %0 = bitcast %struct.VEC_data_ref_loc_heap** %references to i8*, !dbg !4576
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4576
  %1 = bitcast %struct.data_ref_loc_d** %ref to i8*, !dbg !4577
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4577
  call void @llvm.dbg.value(metadata i8 1, metadata !4573, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4575
  %call = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %stmt, %struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4578
  %tobool = icmp eq i8 %call, 0, !dbg !4578
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !4580

for.cond.preheader:                               ; preds = %entry
  %tobool11 = icmp eq %struct.loop* %nest, null, !dbg !4581
  br i1 %tobool11, label %for.cond.preheader.for.cond.preheader.split_crit_edge, label %for.cond.preheader.split.us, !dbg !4586

for.cond.preheader.for.cond.preheader.split_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond, !dbg !4586

for.cond.preheader.split.us:                      ; preds = %for.cond.preheader
  br label %for.cond.us, !dbg !4586

for.cond.us:                                      ; preds = %if.end19.us, %for.cond.preheader.split.us
  %i.0.us = phi i32 [ %inc.us, %if.end19.us ], [ 0, %for.cond.preheader.split.us ], !dbg !4587
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !4570, metadata !DIExpression()), !dbg !4575
  %2 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %references, align 8, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %2, metadata !4571, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %2, metadata !4571, metadata !DIExpression()), !dbg !4575
  %base.us = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %2, i64 0, i32 0, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4575
  %call2.us = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base.us, i32 %i.0.us, %struct.data_ref_loc_d** nonnull %ref) #8, !dbg !4588
  %tobool3.us = icmp eq i32 %call2.us, 0, !dbg !4586
  br i1 %tobool3.us, label %for.end.loopexit.us-lcssa.us, label %for.body.us, !dbg !4586

for.body.us:                                      ; preds = %for.cond.us
  %3 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref, align 8, !dbg !4589
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %3, metadata !4572, metadata !DIExpression()), !dbg !4575
  %pos.us = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %3, i64 0, i32 0, !dbg !4590
  %4 = load %union.tree_node**, %union.tree_node*** %pos.us, align 8, !dbg !4590
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4591
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %3, metadata !4572, metadata !DIExpression()), !dbg !4575
  %is_read.us = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %3, i64 0, i32 1, !dbg !4592
  %6 = load i8, i8* %is_read.us, align 8, !dbg !4592
  %call4.us = call %struct.data_reference* @create_data_ref(%struct.loop* nonnull %nest, %union.tree_node* %5, %union.gimple_statement_d* %stmt, i8 zeroext %6) #8, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.data_reference* %call4.us, metadata !4574, metadata !DIExpression()), !dbg !4575
  %cmp.us = icmp eq %struct.data_reference* %call4.us, null, !dbg !4594
  br i1 %cmp.us, label %cond.true5.us, label %cond.end7.us, !dbg !4594

cond.true5.us:                                    ; preds = %for.body.us
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 4173, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !4594
  br label %cond.end7.us, !dbg !4594

cond.end7.us:                                     ; preds = %cond.true5.us, %for.body.us
  %call9.us = call fastcc zeroext i8 @dr_address_invariant_p(%struct.data_reference* %call4.us) #8, !dbg !4595
  %tobool10.us = icmp eq i8 %call9.us, 0, !dbg !4595
  br i1 %tobool10.us, label %if.end19.us, label %if.then12.us-lcssa.us, !dbg !4596

if.end19.us:                                      ; preds = %cond.end7.us
  %call20.us = call fastcc %struct.data_reference** @VEC_data_reference_p_heap_safe_push(%struct.VEC_data_reference_p_heap** %datarefs, %struct.data_reference* %call4.us) #8, !dbg !4597
  %inc.us = add i32 %i.0.us, 1, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !4570, metadata !DIExpression()), !dbg !4575
  br label %for.cond.us, !dbg !4599, !llvm.loop !4600

for.end.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  br label %for.end.loopexit, !dbg !4602

if.then12.us-lcssa.us:                            ; preds = %cond.end7.us
  %call4.us.lcssa = phi %struct.data_reference* [ %call4.us, %cond.end7.us ], !dbg !4593
  call void @free_data_ref(%struct.data_reference* %call4.us.lcssa) #8, !dbg !4603
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4605
  %tobool13 = icmp eq %struct._IO_FILE* %7, null, !dbg !4605
  br i1 %tobool13, label %for.end, label %land.lhs.true14, !dbg !4607

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4575
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4608
  br label %cleanup, !dbg !4610

for.cond:                                         ; preds = %for.cond.preheader.for.cond.preheader.split_crit_edge, %cond.end7
  %i.0 = phi i32 [ %inc, %cond.end7 ], [ 0, %for.cond.preheader.for.cond.preheader.split_crit_edge ], !dbg !4587
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4570, metadata !DIExpression()), !dbg !4575
  %8 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %references, align 8, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %8, metadata !4571, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %8, metadata !4571, metadata !DIExpression()), !dbg !4575
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %8, i64 0, i32 0, !dbg !4588
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4575
  %call2 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base, i32 %i.0, %struct.data_ref_loc_d** nonnull %ref) #8, !dbg !4588
  %tobool3 = icmp eq i32 %call2, 0, !dbg !4586
  br i1 %tobool3, label %for.end.loopexit.us-lcssa, label %for.body, !dbg !4586

for.body:                                         ; preds = %for.cond
  %9 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref, align 8, !dbg !4589
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %9, metadata !4572, metadata !DIExpression()), !dbg !4575
  %pos = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %9, i64 0, i32 0, !dbg !4590
  %10 = load %union.tree_node**, %union.tree_node*** %pos, align 8, !dbg !4590
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !4591
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %9, metadata !4572, metadata !DIExpression()), !dbg !4575
  %is_read = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %9, i64 0, i32 1, !dbg !4592
  %12 = load i8, i8* %is_read, align 8, !dbg !4592
  %call4 = call %struct.data_reference* @create_data_ref(%struct.loop* null, %union.tree_node* %11, %union.gimple_statement_d* %stmt, i8 zeroext %12) #8, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.data_reference* %call4, metadata !4574, metadata !DIExpression()), !dbg !4575
  %cmp = icmp eq %struct.data_reference* %call4, null, !dbg !4594
  br i1 %cmp, label %cond.true5, label %cond.end7, !dbg !4594

cond.true5:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 4173, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !4594
  br label %cond.end7, !dbg !4594

cond.end7:                                        ; preds = %for.body, %cond.true5
  %call9 = call fastcc zeroext i8 @dr_address_invariant_p(%struct.data_reference* %call4) #8, !dbg !4595
  %call20 = call fastcc %struct.data_reference** @VEC_data_reference_p_heap_safe_push(%struct.VEC_data_reference_p_heap** %datarefs, %struct.data_reference* %call4) #8, !dbg !4597
  %inc = add i32 %i.0, 1, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4570, metadata !DIExpression()), !dbg !4575
  br label %for.cond, !dbg !4599, !llvm.loop !4600

land.lhs.true14:                                  ; preds = %if.then12.us-lcssa.us
  %13 = load i32, i32* @dump_flags, align 4, !dbg !4611
  %and = and i32 %13, 8, !dbg !4612
  %tobool15 = icmp eq i32 %and, 0, !dbg !4612
  br i1 %tobool15, label %for.end, label %if.then16, !dbg !4613

if.then16:                                        ; preds = %land.lhs.true14
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.57, i64 0, i64 0)) #7, !dbg !4614
  br label %for.end, !dbg !4614

for.end.loopexit.us-lcssa:                        ; preds = %for.cond
  br label %for.end.loopexit, !dbg !4602

for.end.loopexit:                                 ; preds = %for.end.loopexit.us-lcssa.us, %for.end.loopexit.us-lcssa
  br label %for.end, !dbg !4602

for.end:                                          ; preds = %for.end.loopexit, %land.lhs.true14, %if.then12.us-lcssa.us, %if.then16
  %ret.0 = phi i8 [ 0, %if.then16 ], [ 0, %land.lhs.true14 ], [ 0, %if.then12.us-lcssa.us ], [ 1, %for.end.loopexit ], !dbg !4575
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !4573, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4575
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4602
  br label %cleanup, !dbg !4615

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ %ret.0, %for.end ], !dbg !4575
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4616
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4616
  ret i8 %retval.0, !dbg !4616
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** %vec_) unnamed_addr #0 !dbg !4617 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %vec_, metadata !4621, metadata !DIExpression()), !dbg !4622
  %0 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %vec_, align 8, !dbg !4623
  %tobool = icmp eq %struct.VEC_data_ref_loc_heap* %0, null, !dbg !4623
  br i1 %tobool, label %if.end, label %if.then, !dbg !4625

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_data_ref_loc_heap* %0 to i8*, !dbg !4625
  tail call void @free(i8* nonnull %1) #7, !dbg !4623
  br label %if.end, !dbg !4623

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_data_ref_loc_heap* null, %struct.VEC_data_ref_loc_heap** %vec_, align 8, !dbg !4625
  ret void, !dbg !4625
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %vec_, i32 %ix_, %struct.data_ref_loc_d** %ptr) unnamed_addr #0 !dbg !4626 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_base* %vec_, metadata !4632, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4633, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ptr, metadata !4634, metadata !DIExpression()), !dbg !4635
  %tobool = icmp eq %struct.VEC_data_ref_loc_base* %vec_, null, !dbg !4636
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4636

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 0, !dbg !4636
  %0 = load i32, i32* %num, align 8, !dbg !4636
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4636
  br i1 %cmp, label %if.then, label %if.else, !dbg !4638

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4639
  %arrayidx = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4639
  br label %return, !dbg !4639

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4641

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_ref_loc_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !4643
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4643
  store %struct.data_ref_loc_d* %storemerge, %struct.data_ref_loc_d** %ptr, align 8, !dbg !4643
  ret i32 %retval.0, !dbg !4638
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @dr_address_invariant_p(%struct.data_reference* %dr) unnamed_addr #5 !dbg !4644 {
entry:
  %idx = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %dr, metadata !4646, metadata !DIExpression()), !dbg !4649
  %0 = bitcast %union.tree_node** %idx to i8*, !dbg !4650
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4650
  call void @llvm.dbg.value(metadata i32 0, metadata !4647, metadata !DIExpression()), !dbg !4649
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dr, i64 0, i32 5, i32 1, !dbg !4651
  br label %for.cond, !dbg !4654

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !4655
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4647, metadata !DIExpression()), !dbg !4649
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !4656
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !4656
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4656

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !4656
  br label %cond.end, !dbg !4656

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !4656
  call void @llvm.dbg.value(metadata %union.tree_node** %idx, metadata !4648, metadata !DIExpression(DW_OP_deref)), !dbg !4649
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %idx) #8, !dbg !4656
  %tobool3 = icmp eq i32 %call, 0, !dbg !4657
  br i1 %tobool3, label %cleanup, label %for.body, !dbg !4657

for.body:                                         ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** %idx, align 8, !dbg !4658
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4648, metadata !DIExpression()), !dbg !4649
  %call4 = call zeroext i8 @tree_contains_chrecs(%union.tree_node* %2, i32* null) #7, !dbg !4660
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4660
  br i1 %tobool5, label %for.inc, label %cleanup, !dbg !4661

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4647, metadata !DIExpression()), !dbg !4649
  br label %for.cond, !dbg !4663, !llvm.loop !4664

cleanup:                                          ; preds = %for.body, %cond.end
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %cond.end ], !dbg !4649
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4666
  ret i8 %retval.0, !dbg !4666
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_reference** @VEC_data_reference_p_heap_safe_push(%struct.VEC_data_reference_p_heap** %vec_, %struct.data_reference* %obj_) unnamed_addr #0 !dbg !4667 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %vec_, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata %struct.data_reference* %obj_, metadata !4672, metadata !DIExpression()), !dbg !4673
  %call = tail call fastcc i32 @VEC_data_reference_p_heap_reserve(%struct.VEC_data_reference_p_heap** %vec_, i32 1) #8, !dbg !4674
  %0 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %vec_, align 8, !dbg !4674
  %tobool = icmp eq %struct.VEC_data_reference_p_heap* %0, null, !dbg !4674
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4674

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %0, i64 0, i32 0, !dbg !4674
  br label %cond.end, !dbg !4674

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_data_reference_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4674
  %call1 = tail call fastcc %struct.data_reference** @VEC_data_reference_p_base_quick_push(%struct.VEC_data_reference_p_base* %cond, %struct.data_reference* %obj_) #8, !dbg !4674
  ret %struct.data_reference** %call1, !dbg !4674
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @graphite_find_data_references_in_stmt(%struct.loop* %nest, %union.gimple_statement_d* %stmt, %struct.VEC_data_reference_p_heap** %datarefs) local_unnamed_addr #5 !dbg !4675 {
entry:
  %references = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %ref = alloca %struct.data_ref_loc_d*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %nest, metadata !4677, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4678, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4679, metadata !DIExpression()), !dbg !4685
  %0 = bitcast %struct.VEC_data_ref_loc_heap** %references to i8*, !dbg !4686
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4686
  %1 = bitcast %struct.data_ref_loc_d** %ref to i8*, !dbg !4687
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4687
  call void @llvm.dbg.value(metadata i8 1, metadata !4683, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4685
  %call = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %stmt, %struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4688
  %tobool = icmp eq i8 %call, 0, !dbg !4688
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !4690

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !4691

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4685
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4693
  br label %cleanup, !dbg !4695

for.cond:                                         ; preds = %for.cond.preheader, %cond.end7
  %i.0 = phi i32 [ %inc, %cond.end7 ], [ 0, %for.cond.preheader ], !dbg !4696
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4680, metadata !DIExpression()), !dbg !4685
  %2 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %references, align 8, !dbg !4697
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %2, metadata !4681, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %2, metadata !4681, metadata !DIExpression()), !dbg !4685
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %2, i64 0, i32 0, !dbg !4697
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref, metadata !4682, metadata !DIExpression(DW_OP_deref)), !dbg !4685
  %call2 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base, i32 %i.0, %struct.data_ref_loc_d** nonnull %ref) #8, !dbg !4697
  %tobool3 = icmp eq i32 %call2, 0, !dbg !4691
  br i1 %tobool3, label %for.end, label %for.body, !dbg !4691

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref, align 8, !dbg !4699
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %3, metadata !4682, metadata !DIExpression()), !dbg !4685
  %pos = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %3, i64 0, i32 0, !dbg !4701
  %4 = load %union.tree_node**, %union.tree_node*** %pos, align 8, !dbg !4701
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4702
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %3, metadata !4682, metadata !DIExpression()), !dbg !4685
  %is_read = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %3, i64 0, i32 1, !dbg !4703
  %6 = load i8, i8* %is_read, align 8, !dbg !4703
  %call4 = call %struct.data_reference* @create_data_ref(%struct.loop* %nest, %union.tree_node* %5, %union.gimple_statement_d* %stmt, i8 zeroext %6) #8, !dbg !4704
  call void @llvm.dbg.value(metadata %struct.data_reference* %call4, metadata !4684, metadata !DIExpression()), !dbg !4685
  %cmp = icmp eq %struct.data_reference* %call4, null, !dbg !4705
  br i1 %cmp, label %cond.true5, label %cond.end7, !dbg !4705

cond.true5:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 4216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !4705
  br label %cond.end7, !dbg !4705

cond.end7:                                        ; preds = %for.body, %cond.true5
  %call9 = call fastcc %struct.data_reference** @VEC_data_reference_p_heap_safe_push(%struct.VEC_data_reference_p_heap** %datarefs, %struct.data_reference* %call4) #8, !dbg !4706
  %inc = add i32 %i.0, 1, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4680, metadata !DIExpression()), !dbg !4685
  br label %for.cond, !dbg !4708, !llvm.loop !4709

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !4681, metadata !DIExpression(DW_OP_deref)), !dbg !4685
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !4711
  br label %cleanup, !dbg !4712

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %for.end ], !dbg !4685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4713
  ret i8 %retval.0, !dbg !4713
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @find_data_references_in_loop(%struct.loop* %loop, %struct.VEC_data_reference_p_heap** %datarefs) local_unnamed_addr #5 !dbg !4714 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4718, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4719, metadata !DIExpression()), !dbg !4724
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #7, !dbg !4725
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !4721, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4724
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !4726
  br label %for.cond, !dbg !4729

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !4730
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4723, metadata !DIExpression()), !dbg !4724
  %0 = load i32, i32* %num_nodes, align 4, !dbg !4731
  %1 = zext i32 %0 to i64, !dbg !4732
  %cmp = icmp ult i64 %indvars.iv, %1, !dbg !4732
  br i1 %cmp, label %for.body, label %for.end, !dbg !4733

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !4734
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4734
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4720, metadata !DIExpression()), !dbg !4724
  %call1 = tail call fastcc %union.tree_node* @find_data_references_in_bb(%struct.loop* %loop, %struct.basic_block_def* %2, %struct.VEC_data_reference_p_heap** %datarefs) #8, !dbg !4736
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4738
  %cmp2 = icmp eq %union.tree_node* %call1, %3, !dbg !4739
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !4740

if.then:                                          ; preds = %for.body
  %4 = bitcast %struct.basic_block_def** %call to i8*, !dbg !4741
  tail call void @free(i8* %4) #7, !dbg !4743
  %5 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4744
  br label %cleanup, !dbg !4745

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4746
  br label %for.cond, !dbg !4747, !llvm.loop !4748

for.end:                                          ; preds = %for.cond
  %6 = bitcast %struct.basic_block_def** %call to i8*, !dbg !4750
  tail call void @free(i8* %6) #7, !dbg !4751
  br label %cleanup, !dbg !4752

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi %union.tree_node* [ %5, %if.then ], [ null, %for.end ], !dbg !4724
  ret %union.tree_node* %retval.0, !dbg !4753
}

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_data_references_in_bb(%struct.loop* %loop, %struct.basic_block_def* %bb, %struct.VEC_data_reference_p_heap** %datarefs) unnamed_addr #5 !dbg !4754 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4758, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4759, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4760, metadata !DIExpression()), !dbg !4775
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4776
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4776
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4777
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #6, !dbg !4777
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #8, !dbg !4777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !4777
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #6, !dbg !4777
  br label %for.cond, !dbg !4778

for.cond:                                         ; preds = %for.inc, %entry
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !4779
  %tobool = icmp eq i8 %call, 0, !dbg !4780
  br i1 %tobool, label %for.body, label %cleanup6, !dbg !4781

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !4782
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4768, metadata !DIExpression()), !dbg !4783
  %call2 = call zeroext i8 @find_data_references_in_stmt(%struct.loop* %loop, %union.gimple_statement_d* %call1, %struct.VEC_data_reference_p_heap** %datarefs) #8, !dbg !4784
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4784
  br i1 %tobool3, label %if.then, label %cleanup, !dbg !4785

if.then:                                          ; preds = %for.body
  %call4 = call i8* @xcalloc(i64 1, i64 112) #7, !dbg !4786
  %2 = bitcast i8* %call4 to %struct.data_reference*, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !4772, metadata !DIExpression()), !dbg !4787
  %call5 = call fastcc %struct.data_reference** @VEC_data_reference_p_heap_safe_push(%struct.VEC_data_reference_p_heap** %datarefs, %struct.data_reference* %2) #8, !dbg !4788
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4789
  br label %cleanup

cleanup:                                          ; preds = %for.body, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %for.body ]
  %retval.1 = phi %union.tree_node* [ %3, %if.then ], [ %retval.0, %for.body ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup6

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4761, metadata !DIExpression(DW_OP_deref)), !dbg !4775
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #8, !dbg !4790
  br label %for.cond, !dbg !4791, !llvm.loop !4792

cleanup6:                                         ; preds = %for.cond, %cleanup
  %retval.2 = phi %union.tree_node* [ %retval.1, %cleanup ], [ null, %for.cond ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4794
  ret %union.tree_node* %retval.2, !dbg !4794
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @find_loop_nest(%struct.loop* %loop, %struct.VEC_loop_p_heap** %loop_nest) local_unnamed_addr #5 !dbg !4795 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4800, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %loop_nest, metadata !4801, metadata !DIExpression()), !dbg !4802
  %call = tail call fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** %loop_nest, %struct.loop* %loop) #8, !dbg !4803
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !4804
  %0 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4804
  %tobool = icmp eq %struct.loop* %0, null, !dbg !4806
  br i1 %tobool, label %return, label %if.then, !dbg !4807

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @find_loop_nest_1(%struct.loop* nonnull %0, %struct.VEC_loop_p_heap** %loop_nest) #8, !dbg !4808
  br label %return, !dbg !4809

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %call2, %if.then ], [ 1, %entry ], !dbg !4802
  ret i8 %retval.0, !dbg !4810
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !4811 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !4815, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !4816, metadata !DIExpression()), !dbg !4817
  %call = tail call fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** %vec_, i32 1) #8, !dbg !4818
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !4818
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !4818
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4818

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !4818
  br label %cond.end, !dbg !4818

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4818
  %call1 = tail call fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %cond, %struct.loop* %obj_) #8, !dbg !4818
  ret %struct.loop** %call1, !dbg !4818
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @find_loop_nest_1(%struct.loop* %loop, %struct.VEC_loop_p_heap** %loop_nest) unnamed_addr #5 !dbg !4819 {
entry:
  br label %tailrecurse, !dbg !4823

tailrecurse:                                      ; preds = %if.then2, %entry
  %loop.tr = phi %struct.loop* [ %loop, %entry ], [ %1, %if.then2 ]
  call void @llvm.dbg.value(metadata %struct.loop* %loop.tr, metadata !4821, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %loop_nest, metadata !4822, metadata !DIExpression()), !dbg !4825
  %next = getelementptr inbounds %struct.loop, %struct.loop* %loop.tr, i64 0, i32 9, !dbg !4826
  %0 = load %struct.loop*, %struct.loop** %next, align 8, !dbg !4826
  %tobool = icmp eq %struct.loop* %0, null, !dbg !4828
  br i1 %tobool, label %if.end, label %return, !dbg !4829

if.end:                                           ; preds = %tailrecurse
  %call = tail call fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** %loop_nest, %struct.loop* %loop.tr) #8, !dbg !4830
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop.tr, i64 0, i32 8, !dbg !4831
  %1 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !4831
  %tobool1 = icmp eq %struct.loop* %1, null, !dbg !4832
  br i1 %tobool1, label %return, label %if.then2, !dbg !4833

if.then2:                                         ; preds = %if.end
  br label %tailrecurse, !dbg !4823

return:                                           ; preds = %if.end, %tailrecurse
  %retval.0 = phi i8 [ 0, %tailrecurse ], [ 1, %if.end ], !dbg !4825
  ret i8 %retval.0, !dbg !4834
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @compute_data_dependences_for_loop(%struct.loop* %loop, i8 zeroext %compute_self_and_read_read_dependences, %struct.VEC_data_reference_p_heap** %datarefs, %struct.VEC_ddr_p_heap** %dependence_relations) local_unnamed_addr #5 !dbg !4835 {
entry:
  %vloops = alloca %struct.VEC_loop_p_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4839, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata i8 %compute_self_and_read_read_dependences, metadata !4840, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4841, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !4842, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.value(metadata i8 1, metadata !4843, metadata !DIExpression()), !dbg !4848
  %0 = bitcast %struct.VEC_loop_p_heap** %vloops to i8*, !dbg !4849
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4849
  %call = tail call fastcc %struct.VEC_loop_p_heap* @VEC_loop_p_heap_alloc(i32 3) #8, !dbg !4850
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %call, metadata !4844, metadata !DIExpression()), !dbg !4848
  store %struct.VEC_loop_p_heap* %call, %struct.VEC_loop_p_heap** %vloops, align 8, !dbg !4851
  %call1 = tail call i8* @memset(i8* bitcast (%struct.datadep_stats* @dependence_stats to i8*), i32 0, i64 76) #7, !dbg !4852
  %tobool = icmp eq %struct.loop* %loop, null, !dbg !4853
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4854

lor.lhs.false:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vloops, metadata !4844, metadata !DIExpression(DW_OP_deref)), !dbg !4848
  %call2 = call zeroext i8 @find_loop_nest(%struct.loop* nonnull %loop, %struct.VEC_loop_p_heap** nonnull %vloops) #8, !dbg !4855
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4855
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !4856

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call5 = call %union.tree_node* @find_data_references_in_loop(%struct.loop* nonnull %loop, %struct.VEC_data_reference_p_heap** %datarefs) #8, !dbg !4857
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4858
  %cmp = icmp eq %union.tree_node* %call5, %1, !dbg !4859
  br i1 %cmp, label %if.then, label %if.else, !dbg !4860

if.then:                                          ; preds = %lor.lhs.false, %entry, %lor.lhs.false4
  %2 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vloops, align 8, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %2, metadata !4844, metadata !DIExpression()), !dbg !4848
  %call6 = call fastcc %struct.data_dependence_relation* @initialize_data_dependence_relation(%struct.data_reference* null, %struct.data_reference* null, %struct.VEC_loop_p_heap* %2) #8, !dbg !4862
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %call6, metadata !4845, metadata !DIExpression()), !dbg !4863
  %call7 = call fastcc %struct.data_dependence_relation** @VEC_ddr_p_heap_safe_push(%struct.VEC_ddr_p_heap** %dependence_relations, %struct.data_dependence_relation* %call6) #8, !dbg !4864
  call void @llvm.dbg.value(metadata i8 0, metadata !4843, metadata !DIExpression()), !dbg !4848
  br label %if.end, !dbg !4865

if.else:                                          ; preds = %lor.lhs.false4
  %3 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !4866
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vloops, align 8, !dbg !4867
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %4, metadata !4844, metadata !DIExpression()), !dbg !4848
  call void @compute_all_dependences(%struct.VEC_data_reference_p_heap* %3, %struct.VEC_ddr_p_heap** %dependence_relations, %struct.VEC_loop_p_heap* %4, i8 zeroext %compute_self_and_read_read_dependences) #8, !dbg !4868
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %res.0 = phi i8 [ 0, %if.then ], [ 1, %if.else ], !dbg !4848
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !4843, metadata !DIExpression()), !dbg !4848
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4869
  %tobool8 = icmp eq %struct._IO_FILE* %5, null, !dbg !4869
  br i1 %tobool8, label %if.end31, label %land.lhs.true, !dbg !4871

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* @dump_flags, align 4, !dbg !4872
  %and = and i32 %6, 16, !dbg !4873
  %tobool9 = icmp eq i32 %and, 0, !dbg !4873
  br i1 %tobool9, label %if.end31, label %if.then10, !dbg !4874

if.then10:                                        ; preds = %land.lhs.true
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0)) #7, !dbg !4875
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4877
  %8 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 0), align 4, !dbg !4878
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i64 0, i64 0), i32 %8) #7, !dbg !4879
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4880
  %10 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 1), align 4, !dbg !4881
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.60, i64 0, i64 0), i32 %10) #7, !dbg !4882
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4883
  %12 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 2), align 4, !dbg !4884
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.61, i64 0, i64 0), i32 %12) #7, !dbg !4885
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4886
  %14 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 3), align 4, !dbg !4887
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.62, i64 0, i64 0), i32 %14) #7, !dbg !4888
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4889
  %16 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 4), align 4, !dbg !4890
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.63, i64 0, i64 0), i32 %16) #7, !dbg !4891
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4892
  %18 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 5), align 4, !dbg !4893
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i32 %18) #7, !dbg !4894
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4895
  %20 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 6), align 4, !dbg !4896
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.65, i64 0, i64 0), i32 %20) #7, !dbg !4897
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4898
  %22 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 7), align 4, !dbg !4899
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i64 0, i64 0), i32 %22) #7, !dbg !4900
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4901
  %24 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 9), align 4, !dbg !4902
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.67, i64 0, i64 0), i32 %24) #7, !dbg !4903
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4904
  %26 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 8), align 4, !dbg !4905
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.68, i64 0, i64 0), i32 %26) #7, !dbg !4906
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4907
  %28 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 10), align 4, !dbg !4908
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.69, i64 0, i64 0), i32 %28) #7, !dbg !4909
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4910
  %30 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 11), align 4, !dbg !4911
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0), i32 %30) #7, !dbg !4912
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4913
  %32 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !4914
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.71, i64 0, i64 0), i32 %32) #7, !dbg !4915
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4916
  %34 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !4917
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.72, i64 0, i64 0), i32 %34) #7, !dbg !4918
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4919
  %36 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !4920
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.73, i64 0, i64 0), i32 %36) #7, !dbg !4921
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4922
  %38 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 15), align 4, !dbg !4923
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i64 0, i64 0), i32 %38) #7, !dbg !4924
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4925
  %40 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 17), align 4, !dbg !4926
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.75, i64 0, i64 0), i32 %40) #7, !dbg !4927
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4928
  %42 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 16), align 4, !dbg !4929
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.76, i64 0, i64 0), i32 %42) #7, !dbg !4930
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4931
  %44 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 18), align 4, !dbg !4932
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77, i64 0, i64 0), i32 %44) #7, !dbg !4933
  br label %if.end31, !dbg !4934

if.end31:                                         ; preds = %land.lhs.true, %if.end, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4935
  ret i8 %res.0, !dbg !4936
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_loop_p_heap* @VEC_loop_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4937 {
entry:
  call void @llvm.dbg.value(metadata i32 3, metadata !4941, metadata !DIExpression()), !dbg !4942
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 3) #7, !dbg !4943
  %0 = bitcast i8* %call to %struct.VEC_loop_p_heap*, !dbg !4943
  ret %struct.VEC_loop_p_heap* %0, !dbg !4943
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @compute_data_dependences_for_bb(%struct.basic_block_def* %bb, i8 zeroext %compute_self_and_read_read_dependences, %struct.VEC_data_reference_p_heap** %datarefs, %struct.VEC_ddr_p_heap** %dependence_relations) local_unnamed_addr #5 !dbg !4944 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4948, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i8 %compute_self_and_read_read_dependences, metadata !4949, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !4950, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !4951, metadata !DIExpression()), !dbg !4952
  %call = tail call fastcc %union.tree_node* @find_data_references_in_bb(%struct.loop* null, %struct.basic_block_def* %bb, %struct.VEC_data_reference_p_heap** %datarefs) #8, !dbg !4953
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !4955
  %cmp = icmp eq %union.tree_node* %call, %0, !dbg !4956
  br i1 %cmp, label %return, label %if.end, !dbg !4957

if.end:                                           ; preds = %entry
  %1 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !4958
  tail call void @compute_all_dependences(%struct.VEC_data_reference_p_heap* %1, %struct.VEC_ddr_p_heap** %dependence_relations, %struct.VEC_loop_p_heap* null, i8 zeroext %compute_self_and_read_read_dependences) #8, !dbg !4959
  br label %return, !dbg !4960

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %entry ], !dbg !4952
  ret i8 %retval.0, !dbg !4961
}

; Function Attrs: nounwind uwtable
define dso_local void @tree_check_data_deps() local_unnamed_addr #5 !dbg !4962 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop_nest = alloca %struct.loop*, align 8
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !4973
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !4973
  %1 = bitcast %struct.loop** %loop_nest to i8*, !dbg !4974
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4974
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4966, metadata !DIExpression(DW_OP_deref)), !dbg !4975
  call void @llvm.dbg.value(metadata %struct.loop** %loop_nest, metadata !4972, metadata !DIExpression(DW_OP_deref)), !dbg !4975
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop_nest, i32 0) #8, !dbg !4976
  br label %for.cond, !dbg !4976

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct.loop*, %struct.loop** %loop_nest, align 8, !dbg !4978
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !4972, metadata !DIExpression()), !dbg !4975
  %tobool = icmp eq %struct.loop* %2, null, !dbg !4976
  br i1 %tobool, label %for.end, label %for.body, !dbg !4976

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !4972, metadata !DIExpression()), !dbg !4975
  call fastcc void @analyze_all_data_dependences(%struct.loop* nonnull %2) #8, !dbg !4980
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4966, metadata !DIExpression(DW_OP_deref)), !dbg !4975
  call void @llvm.dbg.value(metadata %struct.loop** %loop_nest, metadata !4972, metadata !DIExpression(DW_OP_deref)), !dbg !4975
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop_nest) #8, !dbg !4978
  br label %for.cond, !dbg !4978, !llvm.loop !4981

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4983
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !4983
  ret void, !dbg !4983
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !4984 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !4989, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !4990, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i32 0, metadata !4991, metadata !DIExpression()), !dbg !4995
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !4996
  store i32 0, i32* %idx, align 8, !dbg !4997
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4998
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4998
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4998
  %tobool = icmp eq %struct.loops* %1, null, !dbg !4998
  br i1 %tobool, label %if.then, label %if.end, !dbg !5000

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5001
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !5003
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !5004
  br label %cleanup, !dbg !5005

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #8, !dbg !5006
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #8, !dbg !5006
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5007
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !5008
  call void @llvm.dbg.value(metadata i32 1, metadata !4994, metadata !DIExpression()), !dbg !4995
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5009
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !5009
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !5009
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !5009
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !5009
  br label %while.cond79, !dbg !5012

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !5014
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !4992, metadata !DIExpression()), !dbg !4995
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !5017
  %13 = load i32, i32* %num81, align 8, !dbg !5017
  %cmp82 = icmp slt i32 %13, 1, !dbg !5018
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !5019

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !5020
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !5020
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !5020

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !5020
  br label %cond.end90, !dbg !5020

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !5020
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !4992, metadata !DIExpression()), !dbg !4995
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !5020
  %15 = load i32, i32* %num92, align 8, !dbg !5020
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #8, !dbg !5020
  br label %if.end94, !dbg !5020

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !4992, metadata !DIExpression()), !dbg !4995
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !5021
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !5021
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !5023
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !5024

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !5025

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !4992, metadata !DIExpression()), !dbg !4995
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !5027
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !5027
  br label %if.end111, !dbg !5028

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !5029
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !4992, metadata !DIExpression()), !dbg !4995
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !5030
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !5031

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !4992, metadata !DIExpression()), !dbg !4995
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !5032
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !5032
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !5033
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !5034
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !4992, metadata !DIExpression()), !dbg !4995
  br i1 %23, label %while.body104, label %while.end106, !dbg !5025

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #8, !dbg !5035
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !4992, metadata !DIExpression()), !dbg !4995
  br label %while.cond100, !dbg !5025, !llvm.loop !5036

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !5038
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !5040

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !4992, metadata !DIExpression()), !dbg !4995
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !5041
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !5041
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !5012, !llvm.loop !5042

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #8, !dbg !5044
  br label %cleanup, !dbg !5045

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !5045
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_all_data_dependences(%struct.loop* %loop) unnamed_addr #5 !dbg !5046 {
entry:
  %datarefs = alloca %struct.VEC_data_reference_p_heap*, align 8
  %dependence_relations = alloca %struct.VEC_ddr_p_heap*, align 8
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5050, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 10, metadata !5052, metadata !DIExpression()), !dbg !5063
  %0 = bitcast %struct.VEC_data_reference_p_heap** %datarefs to i8*, !dbg !5064
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5064
  %call = tail call fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 10) #8, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %call, metadata !5053, metadata !DIExpression()), !dbg !5063
  store %struct.VEC_data_reference_p_heap* %call, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !5066
  %1 = bitcast %struct.VEC_ddr_p_heap** %dependence_relations to i8*, !dbg !5067
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5067
  %call1 = tail call fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 100) #8, !dbg !5068
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %call1, metadata !5054, metadata !DIExpression()), !dbg !5063
  store %struct.VEC_ddr_p_heap* %call1, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5069
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !5053, metadata !DIExpression(DW_OP_deref)), !dbg !5063
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !5054, metadata !DIExpression(DW_OP_deref)), !dbg !5063
  %call2 = call zeroext i8 @compute_data_dependences_for_loop(%struct.loop* %loop, i8 zeroext 0, %struct.VEC_data_reference_p_heap** nonnull %datarefs, %struct.VEC_ddr_p_heap** nonnull %dependence_relations) #8, !dbg !5070
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5071
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !5071
  br i1 %tobool, label %if.end24, label %if.then, !dbg !5072

if.then:                                          ; preds = %entry
  %3 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5073
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %3, metadata !5054, metadata !DIExpression()), !dbg !5063
  call void @dump_data_dependence_relations(%struct._IO_FILE* nonnull %2, %struct.VEC_ddr_p_heap* %3) #8, !dbg !5074
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5075
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !5076
  %5 = load i32, i32* @dump_flags, align 4, !dbg !5077
  %and = and i32 %5, 8, !dbg !5079
  %tobool4 = icmp eq i32 %and, 0, !dbg !5079
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !5080

if.then5:                                         ; preds = %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5081
  %7 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5082
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %7, metadata !5054, metadata !DIExpression()), !dbg !5063
  call void @dump_dist_dir_vectors(%struct._IO_FILE* %6, %struct.VEC_ddr_p_heap* %7) #8, !dbg !5083
  %.pre = load i32, i32* @dump_flags, align 4, !dbg !5084
  br label %if.end, !dbg !5083

if.end:                                           ; preds = %if.then, %if.then5
  %8 = phi i32 [ %5, %if.then ], [ %.pre, %if.then5 ], !dbg !5084
  %and6 = and i32 %8, 16, !dbg !5085
  %tobool7 = icmp eq i32 %and6, 0, !dbg !5085
  br i1 %tobool7, label %if.end24, label %if.then8, !dbg !5086

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !5055, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 0, metadata !5060, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 0, metadata !5061, metadata !DIExpression()), !dbg !5087
  %9 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !5088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !5088
  call void @llvm.dbg.value(metadata i32 0, metadata !5051, metadata !DIExpression()), !dbg !5063
  br label %for.cond, !dbg !5089

for.cond:                                         ; preds = %for.inc, %if.then8
  %i.0 = phi i32 [ 0, %if.then8 ], [ %inc22, %for.inc ], !dbg !5091
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5051, metadata !DIExpression()), !dbg !5063
  %10 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5092
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %10, metadata !5054, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %10, metadata !5054, metadata !DIExpression()), !dbg !5063
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %10, i64 0, i32 0, !dbg !5092
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !5062, metadata !DIExpression(DW_OP_deref)), !dbg !5087
  %call10 = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !5092
  %tobool11 = icmp eq i32 %call10, 0, !dbg !5094
  br i1 %tobool11, label %for.end, label %for.body, !dbg !5094

for.body:                                         ; preds = %for.cond
  %11 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5095
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %11, metadata !5062, metadata !DIExpression()), !dbg !5087
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %11, i64 0, i32 2, !dbg !5095
  %12 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !5095
  %call12 = call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %12) #7, !dbg !5098
  br label %if.else, !dbg !5099

if.then14:                                        ; No predecessors!
  unreachable, !dbg !5100

if.else:                                          ; preds = %for.body
  br label %for.inc, !dbg !5101

for.inc:                                          ; preds = %if.else
  %inc22 = add i32 %i.0, 1, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %inc22, metadata !5051, metadata !DIExpression()), !dbg !5063
  br label %for.cond, !dbg !5103, !llvm.loop !5104

for.end:                                          ; preds = %for.cond
  call void @gather_stats_on_scev_database() #7, !dbg !5106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !5107
  br label %if.end24, !dbg !5108

if.end24:                                         ; preds = %if.end, %entry, %for.end
  %13 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5109
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %13, metadata !5054, metadata !DIExpression()), !dbg !5063
  call void @free_dependence_relations(%struct.VEC_ddr_p_heap* %13) #8, !dbg !5110
  %14 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !5111
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %14, metadata !5053, metadata !DIExpression()), !dbg !5063
  call void @free_data_refs(%struct.VEC_data_reference_p_heap* %14) #8, !dbg !5112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5113
  ret void, !dbg !5113
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !5114 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !5118, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !5119, metadata !DIExpression()), !dbg !5121
  %0 = bitcast i32* %anum to i8*, !dbg !5122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !5122
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !5121
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !5121
  br label %while.cond, !dbg !5123

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !5124
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !5124
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5124

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !5124
  br label %cond.end, !dbg !5124

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !5124
  %2 = load i32, i32* %idx, align 8, !dbg !5124
  call void @llvm.dbg.value(metadata i32* %anum, metadata !5120, metadata !DIExpression(DW_OP_deref)), !dbg !5121
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #8, !dbg !5124
  %tobool2 = icmp eq i32 %call, 0, !dbg !5123
  br i1 %tobool2, label %while.end, label %while.body, !dbg !5123

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !5125
  %inc = add i32 %3, 1, !dbg !5125
  store i32 %inc, i32* %idx, align 8, !dbg !5125
  %4 = load i32, i32* %anum, align 4, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %4, metadata !5120, metadata !DIExpression()), !dbg !5121
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #8, !dbg !5128
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !5129
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !5130
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !5132, !llvm.loop !5133

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #8, !dbg !5135
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !5136
  br label %cleanup, !dbg !5137

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !5137

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !5137
  ret void, !dbg !5137
}

; Function Attrs: nounwind uwtable
define dso_local void @free_dependence_relation(%struct.data_dependence_relation* %ddr) local_unnamed_addr #5 !dbg !5138 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !5140, metadata !DIExpression()), !dbg !5141
  %cmp = icmp eq %struct.data_dependence_relation* %ddr, null, !dbg !5142
  br i1 %cmp, label %return, label %if.end, !dbg !5144

if.end:                                           ; preds = %entry
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !5145
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !5145
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !5145
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !5147

if.then1:                                         ; preds = %if.end
  tail call fastcc void @free_subscripts(%struct.VEC_subscript_p_heap* nonnull %0) #8, !dbg !5148
  br label %if.end3, !dbg !5148

if.end3:                                          ; preds = %if.end, %if.then1
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !5149
  %1 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !5149
  %tobool4 = icmp eq %struct.VEC_lambda_vector_heap* %1, null, !dbg !5149
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !5151

if.then5:                                         ; preds = %if.end3
  tail call fastcc void @VEC_lambda_vector_heap_free(%struct.VEC_lambda_vector_heap** nonnull %dist_vects) #8, !dbg !5152
  br label %if.end7, !dbg !5152

if.end7:                                          ; preds = %if.end3, %if.then5
  %dir_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 5, !dbg !5153
  %2 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects, align 8, !dbg !5153
  %tobool8 = icmp eq %struct.VEC_lambda_vector_heap* %2, null, !dbg !5153
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !5155

if.then9:                                         ; preds = %if.end7
  tail call fastcc void @VEC_lambda_vector_heap_free(%struct.VEC_lambda_vector_heap** nonnull %dir_vects) #8, !dbg !5156
  br label %if.end11, !dbg !5156

if.end11:                                         ; preds = %if.end7, %if.then9
  %3 = bitcast %struct.data_dependence_relation* %ddr to i8*, !dbg !5157
  tail call void @free(i8* nonnull %3) #7, !dbg !5158
  br label %return, !dbg !5159

return:                                           ; preds = %entry, %if.end11
  ret void, !dbg !5159
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_subscripts(%struct.VEC_subscript_p_heap* %subscripts) unnamed_addr #5 !dbg !5160 {
entry:
  %subscripts.addr = alloca %struct.VEC_subscript_p_heap*, align 8
  %s = alloca %struct.subscript*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap* %subscripts, metadata !5164, metadata !DIExpression()), !dbg !5167
  store %struct.VEC_subscript_p_heap* %subscripts, %struct.VEC_subscript_p_heap** %subscripts.addr, align 8
  %0 = bitcast %struct.subscript** %s to i8*, !dbg !5168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5168
  call void @llvm.dbg.value(metadata i32 0, metadata !5165, metadata !DIExpression()), !dbg !5167
  %1 = bitcast %struct.subscript** %s to i8**, !dbg !5169
  br label %for.cond, !dbg !5173

for.cond:                                         ; preds = %for.body, %entry
  %2 = phi %struct.VEC_subscript_p_heap* [ %subscripts, %entry ], [ %.pre, %for.body ], !dbg !5174
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5175
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5165, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap* %2, metadata !5164, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap* %2, metadata !5164, metadata !DIExpression()), !dbg !5167
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !5174
  call void @llvm.dbg.value(metadata %struct.subscript** %s, metadata !5166, metadata !DIExpression(DW_OP_deref)), !dbg !5167
  %call = call fastcc i32 @VEC_subscript_p_base_iterate(%struct.VEC_subscript_p_base* %base, i32 %i.0, %struct.subscript** nonnull %s) #8, !dbg !5174
  %tobool1 = icmp eq i32 %call, 0, !dbg !5176
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5176

for.body:                                         ; preds = %for.cond
  %3 = load %struct.subscript*, %struct.subscript** %s, align 8, !dbg !5177
  call void @llvm.dbg.value(metadata %struct.subscript* %3, metadata !5166, metadata !DIExpression()), !dbg !5167
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %3, i64 0, i32 0, !dbg !5178
  %4 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !5178
  call fastcc void @free_conflict_function(%struct.conflict_function* %4) #8, !dbg !5179
  %5 = load %struct.subscript*, %struct.subscript** %s, align 8, !dbg !5180
  call void @llvm.dbg.value(metadata %struct.subscript* %5, metadata !5166, metadata !DIExpression()), !dbg !5167
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %5, i64 0, i32 1, !dbg !5181
  %6 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !5181
  call fastcc void @free_conflict_function(%struct.conflict_function* %6) #8, !dbg !5182
  %7 = load i8*, i8** %1, align 8, !dbg !5183
  call void @free(i8* %7) #7, !dbg !5184
  %inc = add i32 %i.0, 1, !dbg !5185
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5165, metadata !DIExpression()), !dbg !5167
  %.pre = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts.addr, align 8, !dbg !5174
  br label %for.cond, !dbg !5186, !llvm.loop !5187

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap** %subscripts.addr, metadata !5164, metadata !DIExpression(DW_OP_deref)), !dbg !5167
  call fastcc void @VEC_subscript_p_heap_free(%struct.VEC_subscript_p_heap** nonnull %subscripts.addr) #8, !dbg !5189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5190
  ret void, !dbg !5190
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_lambda_vector_heap_free(%struct.VEC_lambda_vector_heap** %vec_) unnamed_addr #0 !dbg !5191 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap** %vec_, metadata !5196, metadata !DIExpression()), !dbg !5197
  %0 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %vec_, align 8, !dbg !5198
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %0, null, !dbg !5198
  br i1 %tobool, label %if.end, label %if.then, !dbg !5200

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_lambda_vector_heap* %0 to i8*, !dbg !5200
  tail call void @free(i8* nonnull %1) #7, !dbg !5198
  br label %if.end, !dbg !5198

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_lambda_vector_heap* null, %struct.VEC_lambda_vector_heap** %vec_, align 8, !dbg !5200
  ret void, !dbg !5200
}

; Function Attrs: nounwind uwtable
define dso_local void @free_dependence_relations(%struct.VEC_ddr_p_heap* %dependence_relations) local_unnamed_addr #5 !dbg !5201 {
entry:
  %dependence_relations.addr = alloca %struct.VEC_ddr_p_heap*, align 8
  %ddr = alloca %struct.data_dependence_relation*, align 8
  %loop_nest = alloca %struct.VEC_loop_p_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %dependence_relations, metadata !5203, metadata !DIExpression()), !dbg !5207
  store %struct.VEC_ddr_p_heap* %dependence_relations, %struct.VEC_ddr_p_heap** %dependence_relations.addr, align 8
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !5208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5208
  %1 = bitcast %struct.VEC_loop_p_heap** %loop_nest to i8*, !dbg !5209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5209
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* null, metadata !5206, metadata !DIExpression()), !dbg !5207
  store %struct.VEC_loop_p_heap* null, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !5210
  call void @llvm.dbg.value(metadata i32 0, metadata !5204, metadata !DIExpression()), !dbg !5207
  br label %for.cond, !dbg !5211

for.cond:                                         ; preds = %for.inc, %entry
  %.pre2 = phi %struct.VEC_ddr_p_heap* [ %dependence_relations, %entry ], [ %.pre, %for.inc ]
  %2 = phi %struct.VEC_ddr_p_heap* [ %dependence_relations, %entry ], [ %.pre, %for.inc ], !dbg !5213
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5215
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5204, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %2, metadata !5203, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %2, metadata !5203, metadata !DIExpression()), !dbg !5207
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %2, i64 0, i32 0, !dbg !5213
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !5205, metadata !DIExpression(DW_OP_deref)), !dbg !5207
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !5213
  %tobool1 = icmp eq i32 %call, 0, !dbg !5216
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5216

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5217
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %3, metadata !5205, metadata !DIExpression()), !dbg !5207
  %cmp = icmp eq %struct.data_dependence_relation* %3, null, !dbg !5220
  br i1 %cmp, label %for.inc, label %if.end, !dbg !5221

if.end:                                           ; preds = %for.body
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !5222
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %4, metadata !5206, metadata !DIExpression()), !dbg !5207
  %cmp2 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !5224
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %3, metadata !5205, metadata !DIExpression()), !dbg !5207
  %loop_nest4 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %3, i64 0, i32 4, !dbg !5225
  %5 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest4, align 8, !dbg !5225
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !5226

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %5, metadata !5206, metadata !DIExpression()), !dbg !5207
  store %struct.VEC_loop_p_heap* %5, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !5227
  br label %if.end13, !dbg !5228

if.else:                                          ; preds = %if.end
  %cmp6 = icmp eq %struct.VEC_loop_p_heap* %5, null, !dbg !5229
  br i1 %cmp6, label %if.end13, label %lor.lhs.false, !dbg !5229

lor.lhs.false:                                    ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %3, metadata !5205, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %4, metadata !5206, metadata !DIExpression()), !dbg !5207
  %cmp8 = icmp eq %struct.VEC_loop_p_heap* %5, %4, !dbg !5229
  br i1 %cmp8, label %if.end13, label %cond.true9, !dbg !5229

cond.true9:                                       ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 4551, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !5229
  %.pre1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5230
  br label %if.end13, !dbg !5229

if.end13:                                         ; preds = %cond.true9, %lor.lhs.false, %if.else, %if.then3
  %6 = phi %struct.data_dependence_relation* [ %.pre1, %cond.true9 ], [ %3, %lor.lhs.false ], [ %3, %if.else ], [ %3, %if.then3 ], !dbg !5230
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %6, metadata !5205, metadata !DIExpression()), !dbg !5207
  call void @free_dependence_relation(%struct.data_dependence_relation* %6) #8, !dbg !5231
  %.pre.pre = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations.addr, align 8, !dbg !5213
  br label %for.inc, !dbg !5232

for.inc:                                          ; preds = %for.body, %if.end13
  %.pre = phi %struct.VEC_ddr_p_heap* [ %.pre2, %for.body ], [ %.pre.pre, %if.end13 ], !dbg !5213
  %inc = add i32 %i.0, 1, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5204, metadata !DIExpression()), !dbg !5207
  br label %for.cond, !dbg !5234, !llvm.loop !5235

for.end:                                          ; preds = %for.cond
  %7 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !5237
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %7, metadata !5206, metadata !DIExpression()), !dbg !5207
  %tobool14 = icmp eq %struct.VEC_loop_p_heap* %7, null, !dbg !5237
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5239

if.then15:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %loop_nest, metadata !5206, metadata !DIExpression(DW_OP_deref)), !dbg !5207
  call fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** nonnull %loop_nest) #8, !dbg !5240
  br label %if.end16, !dbg !5240

if.end16:                                         ; preds = %for.end, %if.then15
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations.addr, metadata !5203, metadata !DIExpression(DW_OP_deref)), !dbg !5207
  call fastcc void @VEC_ddr_p_heap_free(%struct.VEC_ddr_p_heap** nonnull %dependence_relations.addr) #8, !dbg !5241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5242
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5242
  ret void, !dbg !5242
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** %vec_) unnamed_addr #0 !dbg !5243 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !5247, metadata !DIExpression()), !dbg !5248
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !5249
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !5249
  br i1 %tobool, label %if.end, label %if.then, !dbg !5251

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_loop_p_heap* %0 to i8*, !dbg !5251
  tail call void @free(i8* nonnull %1) #7, !dbg !5249
  br label %if.end, !dbg !5249

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_loop_p_heap* null, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !5251
  ret void, !dbg !5251
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ddr_p_heap_free(%struct.VEC_ddr_p_heap** %vec_) unnamed_addr #0 !dbg !5252 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %vec_, metadata !5256, metadata !DIExpression()), !dbg !5257
  %0 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %vec_, align 8, !dbg !5258
  %tobool = icmp eq %struct.VEC_ddr_p_heap* %0, null, !dbg !5258
  br i1 %tobool, label %if.end, label %if.then, !dbg !5260

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ddr_p_heap* %0 to i8*, !dbg !5260
  tail call void @free(i8* nonnull %1) #7, !dbg !5258
  br label %if.end, !dbg !5258

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ddr_p_heap* null, %struct.VEC_ddr_p_heap** %vec_, align 8, !dbg !5260
  ret void, !dbg !5260
}

; Function Attrs: nounwind uwtable
define dso_local void @free_data_refs(%struct.VEC_data_reference_p_heap* %datarefs) local_unnamed_addr #5 !dbg !5261 {
entry:
  %datarefs.addr = alloca %struct.VEC_data_reference_p_heap*, align 8
  %dr = alloca %struct.data_reference*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %datarefs, metadata !5263, metadata !DIExpression()), !dbg !5266
  store %struct.VEC_data_reference_p_heap* %datarefs, %struct.VEC_data_reference_p_heap** %datarefs.addr, align 8
  %0 = bitcast %struct.data_reference** %dr to i8*, !dbg !5267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5267
  call void @llvm.dbg.value(metadata i32 0, metadata !5264, metadata !DIExpression()), !dbg !5266
  br label %for.cond, !dbg !5268

for.cond:                                         ; preds = %for.body, %entry
  %1 = phi %struct.VEC_data_reference_p_heap* [ %datarefs, %entry ], [ %.pre, %for.body ], !dbg !5270
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5272
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5264, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %1, metadata !5263, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %1, metadata !5263, metadata !DIExpression()), !dbg !5266
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %1, i64 0, i32 0, !dbg !5270
  call void @llvm.dbg.value(metadata %struct.data_reference** %dr, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5266
  %call = call fastcc i32 @VEC_data_reference_p_base_iterate(%struct.VEC_data_reference_p_base* %base, i32 %i.0, %struct.data_reference** nonnull %dr) #8, !dbg !5270
  %tobool1 = icmp eq i32 %call, 0, !dbg !5273
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5273

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_reference*, %struct.data_reference** %dr, align 8, !dbg !5274
  call void @llvm.dbg.value(metadata %struct.data_reference* %2, metadata !5265, metadata !DIExpression()), !dbg !5266
  call void @free_data_ref(%struct.data_reference* %2) #8, !dbg !5275
  %inc = add i32 %i.0, 1, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5264, metadata !DIExpression()), !dbg !5266
  %.pre = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs.addr, align 8, !dbg !5270
  br label %for.cond, !dbg !5277, !llvm.loop !5278

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs.addr, metadata !5263, metadata !DIExpression(DW_OP_deref)), !dbg !5266
  call fastcc void @VEC_data_reference_p_heap_free(%struct.VEC_data_reference_p_heap** nonnull %datarefs.addr) #8, !dbg !5280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5281
  ret void, !dbg !5281
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_data_reference_p_heap_free(%struct.VEC_data_reference_p_heap** %vec_) unnamed_addr #0 !dbg !5282 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %vec_, metadata !5286, metadata !DIExpression()), !dbg !5287
  %0 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %vec_, align 8, !dbg !5288
  %tobool = icmp eq %struct.VEC_data_reference_p_heap* %0, null, !dbg !5288
  br i1 %tobool, label %if.end, label %if.then, !dbg !5290

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_data_reference_p_heap* %0 to i8*, !dbg !5290
  tail call void @free(i8* nonnull %1) #7, !dbg !5288
  br label %if.end, !dbg !5288

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_data_reference_p_heap* null, %struct.VEC_data_reference_p_heap** %vec_, align 8, !dbg !5290
  ret void, !dbg !5290
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_rdg_vertex(%struct._IO_FILE* %file, %struct.graph* %rdg, i32 %i) local_unnamed_addr #5 !dbg !5291 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5318, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5319, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i32 %i, metadata !5320, metadata !DIExpression()), !dbg !5323
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5324
  %0 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5324
  %idxprom = sext i32 %i to i64, !dbg !5325
  call void @llvm.dbg.value(metadata %struct.vertex* undef, metadata !5321, metadata !DIExpression()), !dbg !5323
  %data = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 %idxprom, i32 4, !dbg !5326
  %1 = bitcast i8** %data to %struct.rdg_vertex**, !dbg !5326
  %2 = load %struct.rdg_vertex*, %struct.rdg_vertex** %1, align 8, !dbg !5326
  %has_mem_write = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %2, i64 0, i32 1, !dbg !5326
  %3 = load i8, i8* %has_mem_write, align 8, !dbg !5326
  %tobool = icmp eq i8 %3, 0, !dbg !5326
  %cond = select i1 %tobool, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i64 0, i64 0), !dbg !5326
  %has_mem_reads = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %2, i64 0, i32 2, !dbg !5327
  %4 = load i8, i8* %has_mem_reads, align 1, !dbg !5327
  %tobool9 = icmp eq i8 %4, 0, !dbg !5327
  %cond10 = select i1 %tobool9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81, i64 0, i64 0), !dbg !5327
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0), i32 %i, i8* %cond, i8* %cond10) #7, !dbg !5328
  %pred = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 %idxprom, i32 0, !dbg !5329
  %5 = load %struct.graph_edge*, %struct.graph_edge** %pred, align 8, !dbg !5329
  %tobool11 = icmp eq %struct.graph_edge* %5, null, !dbg !5331
  br i1 %tobool11, label %if.end, label %if.then, !dbg !5332

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !5333

for.cond:                                         ; preds = %for.body, %if.then
  %e.0 = phi %struct.graph_edge* [ %5, %if.then ], [ %e.0.pre, %for.body ], !dbg !5335
  call void @llvm.dbg.value(metadata %struct.graph_edge* %e.0, metadata !5322, metadata !DIExpression()), !dbg !5323
  %tobool13 = icmp eq %struct.graph_edge* %e.0, null, !dbg !5336
  br i1 %tobool13, label %if.end.loopexit, label %for.body, !dbg !5336

for.body:                                         ; preds = %for.cond
  %src = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %e.0, i64 0, i32 0, !dbg !5337
  %6 = load i32, i32* %src, align 8, !dbg !5337
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i64 0, i64 0), i32 %6) #7, !dbg !5339
  %pred_next = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %e.0, i64 0, i32 2, !dbg !5340
  %e.0.pre = load %struct.graph_edge*, %struct.graph_edge** %pred_next, align 8, !dbg !5335
  br label %for.cond, !dbg !5341, !llvm.loop !5342

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !5344

if.end:                                           ; preds = %if.end.loopexit, %entry
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #7, !dbg !5344
  %succ = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 %idxprom, i32 1, !dbg !5345
  %7 = load %struct.graph_edge*, %struct.graph_edge** %succ, align 8, !dbg !5345
  %tobool16 = icmp eq %struct.graph_edge* %7, null, !dbg !5347
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !5348

if.then17:                                        ; preds = %if.end
  br label %for.cond19, !dbg !5349

for.cond19:                                       ; preds = %for.body21, %if.then17
  %e.1 = phi %struct.graph_edge* [ %7, %if.then17 ], [ %e.1.pre, %for.body21 ], !dbg !5351
  call void @llvm.dbg.value(metadata %struct.graph_edge* %e.1, metadata !5322, metadata !DIExpression()), !dbg !5323
  %tobool20 = icmp eq %struct.graph_edge* %e.1, null, !dbg !5352
  br i1 %tobool20, label %if.end25.loopexit, label %for.body21, !dbg !5352

for.body21:                                       ; preds = %for.cond19
  %dest = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %e.1, i64 0, i32 1, !dbg !5353
  %8 = load i32, i32* %dest, align 4, !dbg !5353
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i64 0, i64 0), i32 %8) #7, !dbg !5355
  %succ_next = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %e.1, i64 0, i32 3, !dbg !5356
  %e.1.pre = load %struct.graph_edge*, %struct.graph_edge** %succ_next, align 8, !dbg !5351
  br label %for.cond19, !dbg !5357, !llvm.loop !5358

if.end25.loopexit:                                ; preds = %for.cond19
  br label %if.end25, !dbg !5360

if.end25:                                         ; preds = %if.end25.loopexit, %if.end
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i64 0, i64 0)) #7, !dbg !5360
  %9 = load %struct.rdg_vertex*, %struct.rdg_vertex** %1, align 8, !dbg !5361
  %stmt = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %9, i64 0, i32 0, !dbg !5361
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5361
  tail call void @print_gimple_stmt(%struct._IO_FILE* %file, %union.gimple_statement_d* %10, i32 0, i32 16448) #7, !dbg !5362
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !5363
  ret void, !dbg !5364
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_rdg_vertex(%struct.graph* %rdg, i32 %i) local_unnamed_addr #5 !dbg !5365 {
entry:
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5369, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %i, metadata !5370, metadata !DIExpression()), !dbg !5371
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5372
  tail call void @dump_rdg_vertex(%struct._IO_FILE* %0, %struct.graph* %rdg, i32 %i) #8, !dbg !5373
  ret void, !dbg !5374
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_rdg_component(%struct._IO_FILE* %file, %struct.graph* %rdg, i32 %c, %struct.bitmap_head_def* %dumped) local_unnamed_addr #5 !dbg !5375 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5379, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %c, metadata !5381, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %dumped, metadata !5382, metadata !DIExpression()), !dbg !5384
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i64 0, i64 0), i32 %c) #7, !dbg !5385
  call void @llvm.dbg.value(metadata i32 0, metadata !5383, metadata !DIExpression()), !dbg !5384
  %n_vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 0, !dbg !5386
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5389
  %tobool = icmp eq %struct.bitmap_head_def* %dumped, null, !dbg !5391
  br i1 %tobool, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5394

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !5394

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !5394

for.cond.us:                                      ; preds = %for.inc.us, %entry.split.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.us ], [ 0, %entry.split.us ], !dbg !5395
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5383, metadata !DIExpression()), !dbg !5384
  %0 = load i32, i32* %n_vertices, align 8, !dbg !5396
  %1 = sext i32 %0 to i64, !dbg !5397
  %cmp.us = icmp slt i64 %indvars.iv, %1, !dbg !5397
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !5398

for.body.us:                                      ; preds = %for.cond.us
  %2 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5399
  %component.us = getelementptr inbounds %struct.vertex, %struct.vertex* %2, i64 %indvars.iv, i32 2, !dbg !5400
  %3 = load i32, i32* %component.us, align 8, !dbg !5400
  %cmp1.us = icmp eq i32 %3, %c, !dbg !5401
  br i1 %cmp1.us, label %if.then.us, label %for.inc.us, !dbg !5402

if.then.us:                                       ; preds = %for.body.us
  %4 = trunc i64 %indvars.iv to i32, !dbg !5403
  tail call void @dump_rdg_vertex(%struct._IO_FILE* %file, %struct.graph* %rdg, i32 %4) #8, !dbg !5403
  br label %for.inc.us, !dbg !5404

for.inc.us:                                       ; preds = %if.then.us, %for.body.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5405
  call void @llvm.dbg.value(metadata i32 undef, metadata !5383, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5384
  br label %for.cond.us, !dbg !5406, !llvm.loop !5407

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !5409

for.cond:                                         ; preds = %for.inc, %entry.entry.split_crit_edge
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc ], [ 0, %entry.entry.split_crit_edge ], !dbg !5395
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !5383, metadata !DIExpression()), !dbg !5384
  %5 = load i32, i32* %n_vertices, align 8, !dbg !5396
  %6 = sext i32 %5 to i64, !dbg !5397
  %cmp = icmp slt i64 %indvars.iv1, %6, !dbg !5397
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !5398

for.body:                                         ; preds = %for.cond
  %7 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5399
  %component = getelementptr inbounds %struct.vertex, %struct.vertex* %7, i64 %indvars.iv1, i32 2, !dbg !5400
  %8 = load i32, i32* %component, align 8, !dbg !5400
  %cmp1 = icmp eq i32 %8, %c, !dbg !5401
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !5402

if.then:                                          ; preds = %for.body
  %9 = trunc i64 %indvars.iv1 to i32, !dbg !5410
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %dumped, i32 %9) #7, !dbg !5410
  %10 = trunc i64 %indvars.iv1 to i32, !dbg !5403
  tail call void @dump_rdg_vertex(%struct._IO_FILE* %file, %struct.graph* %rdg, i32 %10) #8, !dbg !5403
  br label %for.inc, !dbg !5404

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !5405
  call void @llvm.dbg.value(metadata i32 undef, metadata !5383, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5384
  br label %for.cond, !dbg !5406, !llvm.loop !5407

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !5409

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !5409
  ret void, !dbg !5411
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_rdg_component(%struct.graph* %rdg, i32 %c) local_unnamed_addr #5 !dbg !5412 {
entry:
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5414, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %c, metadata !5415, metadata !DIExpression()), !dbg !5416
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5417
  tail call void @dump_rdg_component(%struct._IO_FILE* %0, %struct.graph* %rdg, i32 %c, %struct.bitmap_head_def* null) #8, !dbg !5418
  ret void, !dbg !5419
}

; Function Attrs: nounwind uwtable
define dso_local void @dump_rdg(%struct._IO_FILE* %file, %struct.graph* %rdg) local_unnamed_addr #5 !dbg !5420 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5424, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5425, metadata !DIExpression()), !dbg !5428
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #7, !dbg !5429
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !5427, metadata !DIExpression()), !dbg !5428
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #7, !dbg !5430
  call void @llvm.dbg.value(metadata i32 0, metadata !5426, metadata !DIExpression()), !dbg !5428
  %n_vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 0, !dbg !5431
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5434
  br label %for.cond, !dbg !5436

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5437
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5426, metadata !DIExpression()), !dbg !5428
  %0 = load i32, i32* %n_vertices, align 8, !dbg !5438
  %1 = sext i32 %0 to i64, !dbg !5439
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5439
  br i1 %cmp, label %for.body, label %for.end, !dbg !5440

for.body:                                         ; preds = %for.cond
  %2 = trunc i64 %indvars.iv to i32, !dbg !5441
  %call2 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %2) #7, !dbg !5441
  %tobool = icmp eq i32 %call2, 0, !dbg !5441
  br i1 %tobool, label %if.then, label %for.inc, !dbg !5442

if.then:                                          ; preds = %for.body
  %3 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5443
  %component = getelementptr inbounds %struct.vertex, %struct.vertex* %3, i64 %indvars.iv, i32 2, !dbg !5444
  %4 = load i32, i32* %component, align 8, !dbg !5444
  tail call void @dump_rdg_component(%struct._IO_FILE* %file, %struct.graph* %rdg, i32 %4, %struct.bitmap_head_def* %call) #8, !dbg !5445
  br label %for.inc, !dbg !5445

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5446
  call void @llvm.dbg.value(metadata i32 undef, metadata !5426, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5428
  br label %for.cond, !dbg !5447, !llvm.loop !5448

for.end:                                          ; preds = %for.cond
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !5450
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #7, !dbg !5451
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5427, metadata !DIExpression()), !dbg !5428
  ret void, !dbg !5452
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_rdg(%struct.graph* %rdg) local_unnamed_addr #5 !dbg !5453 {
entry:
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5457, metadata !DIExpression()), !dbg !5458
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5459
  tail call void @dump_rdg(%struct._IO_FILE* %0, %struct.graph* %rdg) #8, !dbg !5460
  ret void, !dbg !5461
}

; Function Attrs: nounwind uwtable
define dso_local i32 @rdg_vertex_for_stmt(%struct.graph* %rdg, %union.gimple_statement_d* %stmt) local_unnamed_addr #5 !dbg !5462 {
entry:
  %rvi = alloca %struct.rdg_vertex_info, align 8
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5466, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5467, metadata !DIExpression()), !dbg !5470
  %0 = bitcast %struct.rdg_vertex_info* %rvi to i8*, !dbg !5471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5471
  %stmt1 = getelementptr inbounds %struct.rdg_vertex_info, %struct.rdg_vertex_info* %rvi, i64 0, i32 0, !dbg !5472
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt1, align 8, !dbg !5473
  %indices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 2, !dbg !5474
  %1 = load %struct.htab*, %struct.htab** %indices, align 8, !dbg !5474
  %call = call i8* @htab_find(%struct.htab* %1, i8* nonnull %0) #7, !dbg !5475
  call void @llvm.dbg.value(metadata i8* %call, metadata !5469, metadata !DIExpression()), !dbg !5470
  %tobool = icmp eq i8* %call, null, !dbg !5476
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5478

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call, metadata !5469, metadata !DIExpression()), !dbg !5470
  %index = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5479
  %2 = bitcast i8* %index to i32*, !dbg !5479
  %3 = load i32, i32* %2, align 8, !dbg !5479
  br label %cleanup, !dbg !5480

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %3, %if.end ], [ -1, %entry ], !dbg !5470
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5481
  ret i32 %retval.0, !dbg !5481
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @create_rdg_vertices(%struct.graph* %rdg, %struct.VEC_gimple_heap* %stmts) local_unnamed_addr #5 !dbg !5482 {
entry:
  %stmt = alloca %union.gimple_statement_d*, align 8
  %references = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %ref = alloca %struct.data_ref_loc_d*, align 8
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5486, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %stmts, metadata !5487, metadata !DIExpression()), !dbg !5499
  %0 = bitcast %union.gimple_statement_d** %stmt to i8*, !dbg !5500
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5500
  call void @llvm.dbg.value(metadata i32 0, metadata !5488, metadata !DIExpression()), !dbg !5499
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %stmts, i64 0, i32 0, !dbg !5501
  %1 = bitcast %struct.VEC_data_ref_loc_heap** %references to i8*, !dbg !5502
  %2 = bitcast %struct.data_ref_loc_d** %ref to i8*, !dbg !5502
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5502
  %3 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !5502
  %indices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 2, !dbg !5502
  br label %for.cond, !dbg !5503

for.cond:                                         ; preds = %cleanup, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cleanup ], [ 0, %entry ], !dbg !5504
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5488, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !5490, metadata !DIExpression(DW_OP_deref)), !dbg !5499
  %4 = trunc i64 %indvars.iv to i32, !dbg !5505
  %call = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %base, i32 %4, %union.gimple_statement_d** nonnull %stmt) #8, !dbg !5505
  %tobool1 = icmp eq i32 %call, 0, !dbg !5506
  br i1 %tobool1, label %for.end54, label %for.body, !dbg !5506

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5507
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !5508
  %5 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5509
  call void @llvm.dbg.value(metadata %struct.vertex* undef, metadata !5496, metadata !DIExpression()), !dbg !5502
  %call2 = call i8* @xmalloc(i64 16) #7, !dbg !5510
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5497, metadata !DIExpression()), !dbg !5502
  %6 = load i64, i64* %3, align 8, !dbg !5511
  %7 = bitcast i8* %call2 to i64*, !dbg !5512
  store i64 %6, i64* %7, align 8, !dbg !5512
  %index = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !5513
  %8 = bitcast i8* %index to i32*, !dbg !5513
  %9 = trunc i64 %indvars.iv to i32, !dbg !5514
  store i32 %9, i32* %8, align 8, !dbg !5514
  %10 = load %struct.htab*, %struct.htab** %indices, align 8, !dbg !5515
  %call4 = call i8** @htab_find_slot(%struct.htab* %10, i8* %call2, i32 1) #7, !dbg !5516
  %11 = bitcast i8** %call4 to %struct.rdg_vertex_info**, !dbg !5517
  call void @llvm.dbg.value(metadata %struct.rdg_vertex_info** %11, metadata !5498, metadata !DIExpression()), !dbg !5502
  %12 = load %struct.rdg_vertex_info*, %struct.rdg_vertex_info** %11, align 8, !dbg !5518
  %tobool5 = icmp eq %struct.rdg_vertex_info* %12, null, !dbg !5518
  br i1 %tobool5, label %if.then, label %if.else, !dbg !5520

if.then:                                          ; preds = %for.body
  store i8* %call2, i8** %call4, align 8, !dbg !5521
  br label %if.end, !dbg !5522

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5497, metadata !DIExpression()), !dbg !5502
  call void @free(i8* %call2) #7, !dbg !5523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call6 = call i8* @xmalloc(i64 16) #7, !dbg !5524
  %data = getelementptr inbounds %struct.vertex, %struct.vertex* %5, i64 %indvars.iv, i32 4, !dbg !5525
  store i8* %call6, i8** %data, align 8, !dbg !5526
  %13 = load i64, i64* %3, align 8, !dbg !5527
  %14 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5528
  %data10 = getelementptr inbounds %struct.vertex, %struct.vertex* %14, i64 %indvars.iv, i32 4, !dbg !5528
  %15 = bitcast i8** %data10 to i64**, !dbg !5528
  %16 = load i64*, i64** %15, align 8, !dbg !5528
  store i64 %13, i64* %16, align 8, !dbg !5529
  %17 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5530
  %data15 = getelementptr inbounds %struct.vertex, %struct.vertex* %17, i64 %indvars.iv, i32 4, !dbg !5530
  %18 = bitcast i8** %data15 to %struct.rdg_vertex**, !dbg !5530
  %19 = load %struct.rdg_vertex*, %struct.rdg_vertex** %18, align 8, !dbg !5530
  %has_mem_write = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %19, i64 0, i32 1, !dbg !5530
  store i8 0, i8* %has_mem_write, align 8, !dbg !5531
  %20 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5532
  %data19 = getelementptr inbounds %struct.vertex, %struct.vertex* %20, i64 %indvars.iv, i32 4, !dbg !5532
  %21 = bitcast i8** %data19 to %struct.rdg_vertex**, !dbg !5532
  %22 = load %struct.rdg_vertex*, %struct.rdg_vertex** %21, align 8, !dbg !5532
  %has_mem_reads = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %22, i64 0, i32 2, !dbg !5532
  store i8 0, i8* %has_mem_reads, align 1, !dbg !5533
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5534
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %23, metadata !5490, metadata !DIExpression()), !dbg !5499
  %call20 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %23) #8, !dbg !5536
  %cmp = icmp eq i32 %call20, 16, !dbg !5537
  br i1 %cmp, label %cleanup, label %if.end22, !dbg !5538

if.end22:                                         ; preds = %if.end
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5539
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %24, metadata !5490, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !5491, metadata !DIExpression(DW_OP_deref)), !dbg !5502
  %call23 = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %24, %struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !5540
  call void @llvm.dbg.value(metadata i32 0, metadata !5489, metadata !DIExpression()), !dbg !5499
  br label %for.cond24, !dbg !5541

for.cond24:                                       ; preds = %for.inc, %if.end22
  %j.0 = phi i32 [ 0, %if.end22 ], [ %inc, %for.inc ], !dbg !5543
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5489, metadata !DIExpression()), !dbg !5499
  %25 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %references, align 8, !dbg !5544
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %25, metadata !5491, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %25, metadata !5491, metadata !DIExpression()), !dbg !5502
  %base27 = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %25, i64 0, i32 0, !dbg !5544
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref, metadata !5495, metadata !DIExpression(DW_OP_deref)), !dbg !5502
  %call31 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base27, i32 %j.0, %struct.data_ref_loc_d** nonnull %ref) #8, !dbg !5544
  %tobool32 = icmp eq i32 %call31, 0, !dbg !5546
  br i1 %tobool32, label %for.end, label %for.body33, !dbg !5546

for.body33:                                       ; preds = %for.cond24
  %26 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref, align 8, !dbg !5547
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %26, metadata !5495, metadata !DIExpression()), !dbg !5502
  %is_read = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %26, i64 0, i32 1, !dbg !5549
  %27 = load i8, i8* %is_read, align 8, !dbg !5549
  %tobool34 = icmp eq i8 %27, 0, !dbg !5547
  %28 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5550
  %data45 = getelementptr inbounds %struct.vertex, %struct.vertex* %28, i64 %indvars.iv, i32 4, !dbg !5550
  %29 = bitcast i8** %data45 to %struct.rdg_vertex**, !dbg !5550
  %30 = load %struct.rdg_vertex*, %struct.rdg_vertex** %29, align 8, !dbg !5550
  br i1 %tobool34, label %if.then35, label %if.else41, !dbg !5551

if.then35:                                        ; preds = %for.body33
  %has_mem_write40 = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %30, i64 0, i32 1, !dbg !5552
  store i8 1, i8* %has_mem_write40, align 8, !dbg !5553
  br label %for.inc, !dbg !5552

if.else41:                                        ; preds = %for.body33
  %has_mem_reads46 = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %30, i64 0, i32 2, !dbg !5554
  store i8 1, i8* %has_mem_reads46, align 1, !dbg !5555
  br label %for.inc

for.inc:                                          ; preds = %if.then35, %if.else41
  %inc = add nuw nsw i32 %j.0, 1, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5489, metadata !DIExpression()), !dbg !5499
  br label %for.cond24, !dbg !5557, !llvm.loop !5558

for.end:                                          ; preds = %for.cond24
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %references, metadata !5491, metadata !DIExpression(DW_OP_deref)), !dbg !5502
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %references) #8, !dbg !5560
  br label %cleanup, !dbg !5561

cleanup:                                          ; preds = %if.end, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !5561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5561
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !5562
  call void @llvm.dbg.value(metadata i32 undef, metadata !5488, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5499
  br label %for.cond, !dbg !5563, !llvm.loop !5564

for.end54:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5566
  ret void, !dbg !5566
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %vec_, i32 %ix_, %union.gimple_statement_d** %ptr) unnamed_addr #0 !dbg !5567 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5574, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5575, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %ptr, metadata !5576, metadata !DIExpression()), !dbg !5577
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5578
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5578

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5578
  %0 = load i32, i32* %num, align 8, !dbg !5578
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5578
  br i1 %cmp, label %if.then, label %if.else, !dbg !5580

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5581
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5581
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !5581
  br label %return, !dbg !5581

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5583

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.gimple_statement_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5585
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5585
  store %union.gimple_statement_d* %storemerge, %union.gimple_statement_d** %ptr, align 8, !dbg !5585
  ret i32 %retval.0, !dbg !5580
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.graph* @build_empty_rdg(i32 %n_stmts) local_unnamed_addr #5 !dbg !5586 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_stmts, metadata !5590, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata i32 10, metadata !5591, metadata !DIExpression()), !dbg !5593
  %call = tail call %struct.graph* @new_graph(i32 %n_stmts) #7, !dbg !5594
  call void @llvm.dbg.value(metadata %struct.graph* %call, metadata !5592, metadata !DIExpression()), !dbg !5593
  %call1 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @hash_stmt_vertex_info, i32 (i8*, i8*)* nonnull @eq_stmt_vertex_info, void (i8*)* nonnull @hash_stmt_vertex_del) #7, !dbg !5595
  %indices = getelementptr inbounds %struct.graph, %struct.graph* %call, i64 0, i32 2, !dbg !5596
  store %struct.htab* %call1, %struct.htab** %indices, align 8, !dbg !5597
  ret %struct.graph* %call, !dbg !5598
}

declare dso_local %struct.graph* @new_graph(i32) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @hash_stmt_vertex_info(i8* %elt) #5 !dbg !5599 {
entry:
  call void @llvm.dbg.value(metadata i8* %elt, metadata !5601, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i8* %elt, metadata !5602, metadata !DIExpression()), !dbg !5605
  %0 = bitcast i8* %elt to i8**, !dbg !5606
  %1 = load i8*, i8** %0, align 8, !dbg !5606
  %2 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5607
  %call = tail call i32 %2(i8* %1) #7, !dbg !5607
  ret i32 %call, !dbg !5608
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_stmt_vertex_info(i8* %e1, i8* %e2) #5 !dbg !5609 {
entry:
  call void @llvm.dbg.value(metadata i8* %e1, metadata !5611, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i8* %e2, metadata !5612, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i8* %e1, metadata !5613, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i8* %e2, metadata !5614, metadata !DIExpression()), !dbg !5615
  %stmt = bitcast i8* %e1 to %union.gimple_statement_d**, !dbg !5616
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5616
  %stmt1 = bitcast i8* %e2 to %union.gimple_statement_d**, !dbg !5617
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !5617
  %cmp = icmp eq %union.gimple_statement_d* %0, %1, !dbg !5618
  %conv = zext i1 %cmp to i32, !dbg !5618
  ret i32 %conv, !dbg !5619
}

; Function Attrs: nounwind uwtable
define internal void @hash_stmt_vertex_del(i8* %e) #5 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata i8* %e, metadata !5622, metadata !DIExpression()), !dbg !5623
  tail call void @free(i8* %e) #7, !dbg !5624
  ret void, !dbg !5625
}

; Function Attrs: nounwind uwtable
define dso_local %struct.graph* @build_rdg(%struct.loop* %loop) local_unnamed_addr #5 !dbg !5626 {
entry:
  %dependence_relations = alloca %struct.VEC_ddr_p_heap*, align 8
  %datarefs = alloca %struct.VEC_data_reference_p_heap*, align 8
  %stmts = alloca %struct.VEC_gimple_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5630, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i32 10, metadata !5631, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.graph* null, metadata !5632, metadata !DIExpression()), !dbg !5636
  %0 = bitcast %struct.VEC_ddr_p_heap** %dependence_relations to i8*, !dbg !5637
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5637
  %1 = bitcast %struct.VEC_data_reference_p_heap** %datarefs to i8*, !dbg !5638
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5638
  %2 = bitcast %struct.VEC_gimple_heap** %stmts to i8*, !dbg !5639
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !5639
  %call = tail call fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 10) #8, !dbg !5640
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %call, metadata !5635, metadata !DIExpression()), !dbg !5636
  store %struct.VEC_gimple_heap* %call, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !5641
  %call1 = tail call fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 100) #8, !dbg !5642
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %call1, metadata !5633, metadata !DIExpression()), !dbg !5636
  store %struct.VEC_ddr_p_heap* %call1, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5643
  %call2 = tail call fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 10) #8, !dbg !5644
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %call2, metadata !5634, metadata !DIExpression()), !dbg !5636
  store %struct.VEC_data_reference_p_heap* %call2, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !5645
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !5633, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !5634, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  %call3 = call zeroext i8 @compute_data_dependences_for_loop(%struct.loop* %loop, i8 zeroext 0, %struct.VEC_data_reference_p_heap** nonnull %datarefs, %struct.VEC_ddr_p_heap** nonnull %dependence_relations) #8, !dbg !5646
  %3 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %3, metadata !5633, metadata !DIExpression()), !dbg !5636
  %call4 = call fastcc zeroext i8 @known_dependences_p(%struct.VEC_ddr_p_heap* %3) #8, !dbg !5649
  %tobool = icmp eq i8 %call4, 0, !dbg !5649
  br i1 %tobool, label %if.then, label %if.end, !dbg !5650

if.then:                                          ; preds = %entry
  %4 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5651
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %4, metadata !5633, metadata !DIExpression()), !dbg !5636
  call void @free_dependence_relations(%struct.VEC_ddr_p_heap* %4) #8, !dbg !5653
  %5 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !5654
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %5, metadata !5634, metadata !DIExpression()), !dbg !5636
  call void @free_data_refs(%struct.VEC_data_reference_p_heap* %5) #8, !dbg !5655
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !5635, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %stmts) #8, !dbg !5656
  br label %cleanup, !dbg !5657

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !5635, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  call fastcc void @stmts_from_loop(%struct.loop* %loop, %struct.VEC_gimple_heap** nonnull %stmts) #8, !dbg !5658
  %6 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !5659
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %6, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %6, metadata !5635, metadata !DIExpression()), !dbg !5636
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %6, i64 0, i32 0, !dbg !5659
  %call6 = call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %base) #8, !dbg !5659
  %call7 = call %struct.graph* @build_empty_rdg(i32 %call6) #8, !dbg !5660
  call void @llvm.dbg.value(metadata %struct.graph* %call7, metadata !5632, metadata !DIExpression()), !dbg !5636
  %call8 = call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @hash_stmt_vertex_info, i32 (i8*, i8*)* nonnull @eq_stmt_vertex_info, void (i8*)* nonnull @hash_stmt_vertex_del) #7, !dbg !5661
  %indices = getelementptr inbounds %struct.graph, %struct.graph* %call7, i64 0, i32 2, !dbg !5662
  store %struct.htab* %call8, %struct.htab** %indices, align 8, !dbg !5663
  %7 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !5664
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap* %7, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @create_rdg_vertices(%struct.graph* %call7, %struct.VEC_gimple_heap* %7) #8, !dbg !5665
  %8 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %8, metadata !5633, metadata !DIExpression()), !dbg !5636
  call fastcc void @create_rdg_edges(%struct.graph* %call7, %struct.VEC_ddr_p_heap* %8) #8, !dbg !5667
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !5635, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  call fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** nonnull %stmts) #8, !dbg !5668
  br label %cleanup, !dbg !5669

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.graph* [ %call7, %if.end ], [ null, %if.then ], !dbg !5636
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !5670
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !5670
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5670
  ret %struct.graph* %retval.0, !dbg !5670
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_gimple_heap* @VEC_gimple_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5671 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !5675, metadata !DIExpression()), !dbg !5676
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #7, !dbg !5677
  %0 = bitcast i8* %call to %struct.VEC_gimple_heap*, !dbg !5677
  ret %struct.VEC_gimple_heap* %0, !dbg !5677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5678 {
entry:
  call void @llvm.dbg.value(metadata i32 100, metadata !5682, metadata !DIExpression()), !dbg !5683
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 100) #7, !dbg !5684
  %0 = bitcast i8* %call to %struct.VEC_ddr_p_heap*, !dbg !5684
  ret %struct.VEC_ddr_p_heap* %0, !dbg !5684
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5685 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !5689, metadata !DIExpression()), !dbg !5690
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #7, !dbg !5691
  %0 = bitcast i8* %call to %struct.VEC_data_reference_p_heap*, !dbg !5691
  ret %struct.VEC_data_reference_p_heap* %0, !dbg !5691
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @known_dependences_p(%struct.VEC_ddr_p_heap* %dependence_relations) unnamed_addr #5 !dbg !5692 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %dependence_relations, metadata !5696, metadata !DIExpression()), !dbg !5699
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !5700
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5700
  call void @llvm.dbg.value(metadata i32 0, metadata !5698, metadata !DIExpression()), !dbg !5699
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %dependence_relations, i64 0, i32 0, !dbg !5701
  br label %for.cond, !dbg !5704

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5705
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !5697, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !5706
  %tobool1 = icmp eq i32 %call, 0, !dbg !5707
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !5707

for.body:                                         ; preds = %for.cond
  %1 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5708
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %1, metadata !5697, metadata !DIExpression()), !dbg !5699
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %1, i64 0, i32 2, !dbg !5708
  %2 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !5708
  %3 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !5710
  %cmp = icmp eq %union.tree_node* %2, %3, !dbg !5711
  br i1 %cmp, label %cleanup, label %for.inc, !dbg !5712

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5698, metadata !DIExpression()), !dbg !5699
  br label %for.cond, !dbg !5714, !llvm.loop !5715

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !5699
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5717
  ret i8 %retval.0, !dbg !5717
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_gimple_heap_free(%struct.VEC_gimple_heap** %vec_) unnamed_addr #0 !dbg !5718 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5723, metadata !DIExpression()), !dbg !5724
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5725
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5725
  br i1 %tobool, label %if.end, label %if.then, !dbg !5727

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_gimple_heap* %0 to i8*, !dbg !5727
  tail call void @free(i8* nonnull %1) #7, !dbg !5725
  br label %if.end, !dbg !5725

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_gimple_heap* null, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5727
  ret void, !dbg !5727
}

; Function Attrs: nounwind uwtable
define internal fastcc void @stmts_from_loop(%struct.loop* %loop, %struct.VEC_gimple_heap** %stmts) unnamed_addr #5 !dbg !5728 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp6 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5732, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !5733, metadata !DIExpression()), !dbg !5742
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #7, !dbg !5743
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !5735, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i32 0, metadata !5734, metadata !DIExpression()), !dbg !5742
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !5744
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5745
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5746
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp6 to i8*, !dbg !5748
  br label %for.cond, !dbg !5750

for.cond:                                         ; preds = %for.end17, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end17 ], [ 0, %entry ], !dbg !5751
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5734, metadata !DIExpression()), !dbg !5742
  %3 = load i32, i32* %num_nodes, align 4, !dbg !5752
  %4 = zext i32 %3 to i64, !dbg !5753
  %cmp = icmp ult i64 %indvars.iv, %4, !dbg !5753
  br i1 %cmp, label %for.body, label %for.end19, !dbg !5754

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !5755
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5755
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !5736, metadata !DIExpression()), !dbg !5745
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5756
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #6, !dbg !5757
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %5) #7, !dbg !5757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5757
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #6, !dbg !5757
  br label %for.cond1, !dbg !5758

for.cond1:                                        ; preds = %for.body3, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5759
  %tobool = icmp eq i8 %call2, 0, !dbg !5761
  br i1 %tobool, label %for.body3, label %for.end, !dbg !5762

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  %call4 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5763
  %call5 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %stmts, %union.gimple_statement_d* %call4) #8, !dbg !5763
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #8, !dbg !5764
  br label %for.cond1, !dbg !5765, !llvm.loop !5766

for.end:                                          ; preds = %for.cond1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #6, !dbg !5768
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp6, %struct.basic_block_def* %5) #8, !dbg !5768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5768
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #6, !dbg !5768
  br label %for.cond7, !dbg !5769

for.cond7:                                        ; preds = %for.inc16, %for.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  %call8 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5770
  %tobool9 = icmp eq i8 %call8, 0, !dbg !5772
  br i1 %tobool9, label %for.body11, label %for.end17, !dbg !5773

for.body11:                                       ; preds = %for.cond7
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  %call12 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5774
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !5741, metadata !DIExpression()), !dbg !5745
  %call13 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call12) #8, !dbg !5776
  %cmp14 = icmp eq i32 %call13, 4, !dbg !5778
  br i1 %cmp14, label %for.inc16, label %if.then, !dbg !5779

if.then:                                          ; preds = %for.body11
  %call15 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %stmts, %union.gimple_statement_d* %call12) #8, !dbg !5780
  br label %for.inc16, !dbg !5780

for.inc16:                                        ; preds = %for.body11, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5745
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #8, !dbg !5781
  br label %for.cond7, !dbg !5782, !llvm.loop !5783

for.end17:                                        ; preds = %for.cond7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5785
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5786
  br label %for.cond, !dbg !5787, !llvm.loop !5788

for.end19:                                        ; preds = %for.cond
  %6 = bitcast %struct.basic_block_def** %call to i8*, !dbg !5790
  call void @free(i8* %6) #7, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %vec_) unnamed_addr #0 !dbg !5793 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !5797, metadata !DIExpression()), !dbg !5798
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !5799
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5799

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !5799
  %0 = load i32, i32* %num, align 8, !dbg !5799
  br label %cond.end, !dbg !5799

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5799
  ret i32 %cond, !dbg !5799
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_rdg_edges(%struct.graph* %rdg, %struct.VEC_ddr_p_heap* %ddrs) unnamed_addr #5 !dbg !5800 {
entry:
  %ddr = alloca %struct.data_dependence_relation*, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5804, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %ddrs, metadata !5805, metadata !DIExpression()), !dbg !5822
  %0 = bitcast %struct.data_dependence_relation** %ddr to i8*, !dbg !5823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5823
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5824
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #6, !dbg !5824
  call void @llvm.dbg.value(metadata i32 0, metadata !5806, metadata !DIExpression()), !dbg !5822
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %ddrs, i64 0, i32 0, !dbg !5825
  br label %for.cond, !dbg !5828

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5829
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5806, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %ddr, metadata !5807, metadata !DIExpression(DW_OP_deref)), !dbg !5822
  %call = call fastcc i32 @VEC_ddr_p_base_iterate(%struct.VEC_ddr_p_base* %base, i32 %i.0, %struct.data_dependence_relation** nonnull %ddr) #8, !dbg !5830
  %tobool1 = icmp eq i32 %call, 0, !dbg !5831
  br i1 %tobool1, label %for.cond2.preheader, label %for.body, !dbg !5831

for.cond2.preheader:                              ; preds = %for.cond
  %n_vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 0, !dbg !5832
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5835
  br label %for.cond2, !dbg !5837

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_dependence_relation*, %struct.data_dependence_relation** %ddr, align 8, !dbg !5838
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %2, metadata !5807, metadata !DIExpression()), !dbg !5822
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %2, i64 0, i32 2, !dbg !5838
  %3 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !5838
  %cmp = icmp eq %union.tree_node* %3, null, !dbg !5840
  br i1 %cmp, label %if.then, label %for.inc, !dbg !5841

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %2, metadata !5807, metadata !DIExpression()), !dbg !5822
  call fastcc void @create_rdg_edge_for_ddr(%struct.graph* %rdg, %struct.data_dependence_relation* %2) #8, !dbg !5842
  br label %for.inc, !dbg !5842

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5806, metadata !DIExpression()), !dbg !5822
  br label %for.cond, !dbg !5844, !llvm.loop !5845

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc31
  %indvars.iv = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next, %for.inc31 ], !dbg !5847
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5806, metadata !DIExpression()), !dbg !5822
  %4 = load i32, i32* %n_vertices, align 8, !dbg !5848
  %5 = sext i32 %4 to i64, !dbg !5849
  %cmp3 = icmp slt i64 %indvars.iv, %5, !dbg !5849
  br i1 %cmp3, label %for.body4, label %for.end33, !dbg !5837

for.body4:                                        ; preds = %for.cond2
  %6 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5850
  %data = getelementptr inbounds %struct.vertex, %struct.vertex* %6, i64 %indvars.iv, i32 4, !dbg !5850
  %7 = bitcast i8** %data to %struct.rdg_vertex**, !dbg !5850
  %8 = load %struct.rdg_vertex*, %struct.rdg_vertex** %7, align 8, !dbg !5850
  %stmt = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %8, i64 0, i32 0, !dbg !5850
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5850
  %call5 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %9) #8, !dbg !5850
  %cmp6 = icmp eq i32 %call5, 16, !dbg !5850
  %10 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5850
  %data11 = getelementptr inbounds %struct.vertex, %struct.vertex* %10, i64 %indvars.iv, i32 4, !dbg !5850
  %11 = bitcast i8** %data11 to %struct.rdg_vertex**, !dbg !5850
  %12 = load %struct.rdg_vertex*, %struct.rdg_vertex** %11, align 8, !dbg !5850
  %stmt12 = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %12, i64 0, i32 0, !dbg !5850
  %13 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt12, align 8, !dbg !5850
  br i1 %cmp6, label %cond.true7, label %cond.false14, !dbg !5850

cond.true7:                                       ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5809, metadata !DIExpression(DW_OP_deref)), !dbg !5822
  %call13 = call fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %13, i32 2) #8, !dbg !5850
  br label %cond.end21, !dbg !5850

cond.false14:                                     ; preds = %for.body4
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5809, metadata !DIExpression(DW_OP_deref)), !dbg !5822
  %call20 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %13, i32 2) #8, !dbg !5850
  br label %cond.end21, !dbg !5850

cond.end21:                                       ; preds = %cond.false14, %cond.true7
  %cond22 = phi %union.tree_node** [ %call13, %cond.true7 ], [ %call20, %cond.false14 ], !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node** %cond22, metadata !5808, metadata !DIExpression()), !dbg !5822
  br label %for.cond23, !dbg !5850

for.cond23:                                       ; preds = %for.body26, %cond.end21
  %def_p.0 = phi %union.tree_node** [ %cond22, %cond.end21 ], [ %call29, %for.body26 ], !dbg !5835
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !5808, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5809, metadata !DIExpression(DW_OP_deref)), !dbg !5822
  %call24 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !5851
  %tobool25 = icmp eq i8 %call24, 0, !dbg !5851
  br i1 %tobool25, label %for.body26, label %for.inc31, !dbg !5850

for.body26:                                       ; preds = %for.cond23
  %call27 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #8, !dbg !5853
  %14 = trunc i64 %indvars.iv to i32, !dbg !5854
  call fastcc void @create_rdg_edges_for_scalar(%struct.graph* %rdg, %union.tree_node* %call27, i32 %14) #8, !dbg !5854
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5809, metadata !DIExpression(DW_OP_deref)), !dbg !5822
  %call29 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %iter) #8, !dbg !5851
  call void @llvm.dbg.value(metadata %union.tree_node** %call29, metadata !5808, metadata !DIExpression()), !dbg !5822
  br label %for.cond23, !dbg !5851, !llvm.loop !5855

for.inc31:                                        ; preds = %for.cond23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5857
  call void @llvm.dbg.value(metadata i32 undef, metadata !5806, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5822
  br label %for.cond2, !dbg !5858, !llvm.loop !5859

for.end33:                                        ; preds = %for.cond2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #6, !dbg !5861
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5861
  ret void, !dbg !5861
}

; Function Attrs: nounwind uwtable
define dso_local void @free_rdg(%struct.graph* %rdg) local_unnamed_addr #5 !dbg !5862 {
entry:
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !5864, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 0, metadata !5865, metadata !DIExpression()), !dbg !5866
  %n_vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 0, !dbg !5867
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !5867
  br label %for.cond, !dbg !5870

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !5871
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5865, metadata !DIExpression()), !dbg !5866
  %0 = load i32, i32* %n_vertices, align 8, !dbg !5872
  %1 = sext i32 %0 to i64, !dbg !5873
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5873
  br i1 %cmp, label %for.body, label %for.end, !dbg !5874

for.body:                                         ; preds = %for.cond
  %2 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !5875
  %data = getelementptr inbounds %struct.vertex, %struct.vertex* %2, i64 %indvars.iv, i32 4, !dbg !5876
  %3 = load i8*, i8** %data, align 8, !dbg !5876
  tail call void @free(i8* %3) #7, !dbg !5877
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5878
  call void @llvm.dbg.value(metadata i32 undef, metadata !5865, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5866
  br label %for.cond, !dbg !5879, !llvm.loop !5880

for.end:                                          ; preds = %for.cond
  %indices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 2, !dbg !5882
  %4 = load %struct.htab*, %struct.htab** %indices, align 8, !dbg !5882
  tail call void @htab_delete(%struct.htab* %4) #7, !dbg !5883
  tail call void @free_graph(%struct.graph* %rdg) #7, !dbg !5884
  ret void, !dbg !5885
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @free_graph(%struct.graph*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @stores_from_loop(%struct.loop* %loop, %struct.VEC_gimple_heap** %stmts) local_unnamed_addr #5 !dbg !5886 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5888, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !5889, metadata !DIExpression()), !dbg !5897
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #7, !dbg !5898
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !5891, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 0, metadata !5890, metadata !DIExpression()), !dbg !5897
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !5899
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !5900
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5901
  br label %for.cond, !dbg !5903

for.cond:                                         ; preds = %for.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 0, %entry ], !dbg !5904
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5890, metadata !DIExpression()), !dbg !5897
  %2 = load i32, i32* %num_nodes, align 4, !dbg !5905
  %3 = zext i32 %2 to i64, !dbg !5906
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !5906
  br i1 %cmp, label %for.body, label %for.end10, !dbg !5907

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !5908
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5908
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !5892, metadata !DIExpression()), !dbg !5900
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5909
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #6, !dbg !5910
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %4) #8, !dbg !5910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #6, !dbg !5910
  br label %for.cond1, !dbg !5911

for.cond1:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5896, metadata !DIExpression(DW_OP_deref)), !dbg !5900
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5912
  %tobool = icmp eq i8 %call2, 0, !dbg !5914
  br i1 %tobool, label %for.body3, label %for.end, !dbg !5915

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5896, metadata !DIExpression(DW_OP_deref)), !dbg !5900
  %call4 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5916
  %call5 = call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %call4) #8, !dbg !5918
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !5918
  br i1 %tobool6, label %for.inc, label %if.then, !dbg !5919

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5896, metadata !DIExpression(DW_OP_deref)), !dbg !5900
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !5920
  %call8 = call fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %stmts, %union.gimple_statement_d* %call7) #8, !dbg !5920
  br label %for.inc, !dbg !5920

for.inc:                                          ; preds = %for.body3, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !5896, metadata !DIExpression(DW_OP_deref)), !dbg !5900
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #8, !dbg !5921
  br label %for.cond1, !dbg !5922, !llvm.loop !5923

for.end:                                          ; preds = %for.cond1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5925
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5926
  br label %for.cond, !dbg !5927, !llvm.loop !5928

for.end10:                                        ; preds = %for.cond
  %5 = bitcast %struct.basic_block_def** %call to i8*, !dbg !5930
  call void @free(i8* %5) #7, !dbg !5931
  ret void, !dbg !5932
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5933 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5937, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5938, metadata !DIExpression()), !dbg !5941
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !5942
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5939, metadata !DIExpression()), !dbg !5940
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !5943
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5944
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5945
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5946
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5947
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5948
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5949
  ret void, !dbg !5950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5951 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5955, metadata !DIExpression()), !dbg !5956
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5957
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5957
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5958
  %conv1 = zext i1 %cmp to i8, !dbg !5959
  ret i8 %conv1, !dbg !5960
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5961 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5963, metadata !DIExpression()), !dbg !5964
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5965
  %tobool = icmp eq i8 %call, 0, !dbg !5965
  br i1 %tobool, label %return, label %if.end, !dbg !5967

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5968
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5968
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5968
  br label %return, !dbg !5969

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5964
  ret %union.tree_node* %retval.0, !dbg !5970
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !5971 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !5975, metadata !DIExpression()), !dbg !5976
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5977
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5977
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !5978
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5978
  ret %union.gimple_statement_d* %1, !dbg !5979
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_heap_safe_push(%struct.VEC_gimple_heap** %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !5980 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !5984, metadata !DIExpression()), !dbg !5986
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !5985, metadata !DIExpression()), !dbg !5986
  %call = tail call fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 1) #8, !dbg !5987
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !5987
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !5987
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5987

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !5987
  br label %cond.end, !dbg !5987

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5987
  %call1 = tail call fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %cond, %union.gimple_statement_d* %obj_) #8, !dbg !5987
  ret %union.gimple_statement_d** %call1, !dbg !5987
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5988 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5993, metadata !DIExpression()), !dbg !5994
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5995
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5995
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5996
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5996
  %2 = load i64, i64* %1, align 8, !dbg !5996
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5997
  store i64 %2, i64* %3, align 8, !dbg !5997
  ret void, !dbg !5998
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @rdg_defs_used_in_other_loops_p(%struct.graph* %rdg, i32 %v) local_unnamed_addr #5 !dbg !5999 {
entry:
  %iterator = alloca %struct.immediate_use_iterator_d, align 8
  %it = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !6003, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata i32 %v, metadata !6004, metadata !DIExpression()), !dbg !6018
  %vertices = getelementptr inbounds %struct.graph, %struct.graph* %rdg, i64 0, i32 1, !dbg !6019
  %0 = load %struct.vertex*, %struct.vertex** %vertices, align 8, !dbg !6019
  %idxprom = sext i32 %v to i64, !dbg !6019
  %data = getelementptr inbounds %struct.vertex, %struct.vertex* %0, i64 %idxprom, i32 4, !dbg !6019
  %1 = bitcast i8** %data to %struct.rdg_vertex**, !dbg !6019
  %2 = load %struct.rdg_vertex*, %struct.rdg_vertex** %1, align 8, !dbg !6019
  %stmt1 = getelementptr inbounds %struct.rdg_vertex, %struct.rdg_vertex* %2, i64 0, i32 0, !dbg !6019
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !6019
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !6005, metadata !DIExpression()), !dbg !6018
  %call = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %3) #8, !dbg !6020
  call void @llvm.dbg.value(metadata %struct.loop* %call, metadata !6006, metadata !DIExpression()), !dbg !6018
  %4 = bitcast %struct.immediate_use_iterator_d* %iterator to i8*, !dbg !6021
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #6, !dbg !6021
  %5 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %it, i64 0, i32 0, !dbg !6022
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6, !dbg !6022
  %tobool = icmp eq %struct.loop* %call, null, !dbg !6023
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6025

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %3) #8, !dbg !6026
  %cmp = icmp eq i32 %call2, 16, !dbg !6026
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6026

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %it, metadata !6016, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call3 = call fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* nonnull %it, %union.gimple_statement_d* %3, i32 2) #8, !dbg !6026
  br label %cond.end, !dbg !6026

cond.false:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %it, metadata !6016, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call4 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %it, %union.gimple_statement_d* %3, i32 2) #8, !dbg !6026
  br label %cond.end, !dbg !6026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node** [ %call3, %cond.true ], [ %call4, %cond.false ], !dbg !6026
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %for.cond, !dbg !6026

for.cond:                                         ; preds = %for.inc20, %cond.end
  %def_p.0 = phi %union.tree_node** [ %cond, %cond.end ], [ %call21, %for.inc20 ], !dbg !6028
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %it, metadata !6016, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call5 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %it) #8, !dbg !6029
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6029
  br i1 %tobool6, label %for.body, label %cleanup.loopexit1, !dbg !6026

for.body:                                         ; preds = %for.cond
  %call7 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #8, !dbg !6031
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !6008, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call8 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iterator, %union.tree_node* %call7) #8, !dbg !6031
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call8, metadata !6007, metadata !DIExpression()), !dbg !6018
  br label %for.cond9, !dbg !6031

for.cond9:                                        ; preds = %for.inc, %for.body
  %imm_use_p.0 = phi %struct.ssa_use_operand_d* [ %call8, %for.body ], [ %call19, %for.inc ], !dbg !6034
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %imm_use_p.0, metadata !6007, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !6008, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call10 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %iterator) #8, !dbg !6035
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6035
  br i1 %tobool11, label %for.body13, label %for.inc20, !dbg !6031

for.body13:                                       ; preds = %for.cond9
  %stmt14 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %imm_use_p.0, i64 0, i32 2, i32 0, !dbg !6037
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt14, align 8, !dbg !6037
  %call15 = call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %6) #8, !dbg !6040
  %cmp16 = icmp eq %struct.loop* %call15, %call, !dbg !6041
  br i1 %cmp16, label %for.inc, label %cleanup.loopexit, !dbg !6042

for.inc:                                          ; preds = %for.body13
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !6008, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call19 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iterator) #8, !dbg !6035
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call19, metadata !6007, metadata !DIExpression()), !dbg !6018
  br label %for.cond9, !dbg !6035, !llvm.loop !6043

for.inc20:                                        ; preds = %for.cond9
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %it, metadata !6016, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call21 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %it) #8, !dbg !6029
  call void @llvm.dbg.value(metadata %union.tree_node** %call21, metadata !6017, metadata !DIExpression()), !dbg !6018
  br label %for.cond, !dbg !6029, !llvm.loop !6045

cleanup.loopexit:                                 ; preds = %for.body13
  br label %cleanup, !dbg !6047

cleanup.loopexit1:                                ; preds = %for.cond
  br label %cleanup, !dbg !6047

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 1, %cleanup.loopexit ], [ 0, %cleanup.loopexit1 ], !dbg !6018
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6, !dbg !6047
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #6, !dbg !6047
  ret i8 %retval.0, !dbg !6047
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !6048 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6053, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !6054, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i32 2, metadata !6055, metadata !DIExpression()), !dbg !6058
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !6059
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6056, metadata !DIExpression()), !dbg !6058
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !6060
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6061
  store i8 0, i8* %done, align 8, !dbg !6062
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #7, !dbg !6063
  %tobool = icmp eq i8 %call2, 0, !dbg !6063
  br i1 %tobool, label %if.then, label %if.end, !dbg !6064

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !6065
  br label %cleanup, !dbg !6068

if.end:                                           ; preds = %entry
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6069
  store i32 3, i32* %iter_type, align 4, !dbg !6070
  %call8 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !6071
  br label %cleanup, !dbg !6072

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ null, %if.then ], [ %call8, %if.end ], !dbg !6058
  ret %union.tree_node** %retval.0, !dbg !6073
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !6074 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6076, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6077, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 2, metadata !6078, metadata !DIExpression()), !dbg !6079
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !6080
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !6081
  store i32 3, i32* %iter_type, align 4, !dbg !6082
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !6083
  ret %union.tree_node** %call, !dbg !6084
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6085 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6091, metadata !DIExpression()), !dbg !6092
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6093
  %0 = load i8, i8* %done, align 8, !dbg !6093
  ret i8 %0, !dbg !6094
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !6095 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6100, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6101, metadata !DIExpression()), !dbg !6102
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6103
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6104
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !6105
  store i40* %imm_uses, i40** %0, align 8, !dbg !6105
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !6106
  %1 = bitcast i40* %next to i64*, !dbg !6106
  %2 = load i64, i64* %1, align 8, !dbg !6106
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6107
  store i64 %2, i64* %3, align 8, !dbg !6107
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !6108
  %tobool = icmp eq i8 %call, 0, !dbg !6108
  br i1 %tobool, label %if.end, label %return, !dbg !6110

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6111
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !6111
  br label %return, !dbg !6112

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6102
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6113
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !6114 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !6118, metadata !DIExpression()), !dbg !6119
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !6120
  ret %union.tree_node* %0, !dbg !6121
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6122 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6128, metadata !DIExpression()), !dbg !6129
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6130
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6130
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !6131
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !6131
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !6132
  %conv1 = zext i1 %cmp to i8, !dbg !6133
  ret i8 %conv1, !dbg !6134
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !6135 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !6139, metadata !DIExpression()), !dbg !6141
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !6142
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6142
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !6140, metadata !DIExpression()), !dbg !6141
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !6143
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !6143
  %2 = load i64, i64* %1, align 8, !dbg !6143
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !6144
  store i64 %2, i64* %3, align 8, !dbg !6144
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !6145
  %tobool = icmp eq i8 %call, 0, !dbg !6145
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6147

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !6148
  br label %cleanup, !dbg !6149

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !6141
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !6150
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !6155, metadata !DIExpression()), !dbg !6157
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !6158
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !6158
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !6160
  br i1 %tobool, label %if.end, label %if.then, !dbg !6161

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !6162
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !6162
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !6156, metadata !DIExpression()), !dbg !6157
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !6164
  %3 = load i64, i64* %2, align 8, !dbg !6164
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !6165
  store i64 %3, i64* %4, align 8, !dbg !6165
  br label %cleanup, !dbg !6166

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !6167
  store i8 1, i8* %done, align 8, !dbg !6168
  br label %cleanup, !dbg !6169

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !6157
  ret %union.tree_node** %retval.0, !dbg !6170
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @have_similar_memory_accesses(%union.gimple_statement_d* %s1, %union.gimple_statement_d* %s2) local_unnamed_addr #5 !dbg !6171 {
entry:
  %refs1 = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %refs2 = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %ref1 = alloca %struct.data_ref_loc_d*, align 8
  %ref2 = alloca %struct.data_ref_loc_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s1, metadata !6175, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s2, metadata !6176, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata i8 0, metadata !6177, metadata !DIExpression()), !dbg !6189
  %0 = bitcast %struct.VEC_data_ref_loc_heap** %refs1 to i8*, !dbg !6190
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6190
  %1 = bitcast %struct.VEC_data_ref_loc_heap** %refs2 to i8*, !dbg !6190
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6190
  %2 = bitcast %struct.data_ref_loc_d** %ref1 to i8*, !dbg !6191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !6191
  %3 = bitcast %struct.data_ref_loc_d** %ref2 to i8*, !dbg !6191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !6191
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs1, metadata !6180, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  %call = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %s1, %struct.VEC_data_ref_loc_heap** nonnull %refs1) #8, !dbg !6192
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs2, metadata !6181, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  %call1 = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %s2, %struct.VEC_data_ref_loc_heap** nonnull %refs2) #8, !dbg !6193
  call void @llvm.dbg.value(metadata i32 0, metadata !6178, metadata !DIExpression()), !dbg !6189
  br label %for.cond, !dbg !6194

for.cond:                                         ; preds = %for.inc19, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc20, %for.inc19 ], !dbg !6195
  %res.0 = phi i8 [ 0, %entry ], [ %res.1, %for.inc19 ], !dbg !6189
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !6177, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6178, metadata !DIExpression()), !dbg !6189
  %4 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %refs1, align 8, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %4, metadata !6180, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %4, metadata !6180, metadata !DIExpression()), !dbg !6189
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %4, i64 0, i32 0, !dbg !6196
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref1, metadata !6182, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  %call2 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base, i32 %i.0, %struct.data_ref_loc_d** nonnull %ref1) #8, !dbg !6196
  %tobool3 = icmp eq i32 %call2, 0, !dbg !6197
  br i1 %tobool3, label %end, label %for.body, !dbg !6197

for.body:                                         ; preds = %for.cond
  %5 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref1, align 8, !dbg !6198
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %5, metadata !6182, metadata !DIExpression()), !dbg !6189
  %call4 = call fastcc %union.tree_node* @ref_base_address(%union.gimple_statement_d* %s1, %struct.data_ref_loc_d* %5) #8, !dbg !6199
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6184, metadata !DIExpression()), !dbg !6200
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !6201
  br i1 %tobool5, label %cleanup, label %for.cond6.preheader, !dbg !6203

for.cond6.preheader:                              ; preds = %for.body
  br label %for.cond6, !dbg !6204

for.cond6:                                        ; preds = %for.cond6.preheader, %for.inc
  %j.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond6.preheader ], !dbg !6206
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6179, metadata !DIExpression()), !dbg !6189
  %6 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %refs2, align 8, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %6, metadata !6181, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %6, metadata !6181, metadata !DIExpression()), !dbg !6189
  %base9 = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %6, i64 0, i32 0, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref2, metadata !6183, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  %call13 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base9, i32 %j.0, %struct.data_ref_loc_d** nonnull %ref2) #8, !dbg !6207
  %tobool14 = icmp eq i32 %call13, 0, !dbg !6204
  br i1 %tobool14, label %cleanup.loopexit, label %for.body15, !dbg !6204

for.body15:                                       ; preds = %for.cond6
  %7 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref2, align 8, !dbg !6209
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %7, metadata !6183, metadata !DIExpression()), !dbg !6189
  %call16 = call fastcc %union.tree_node* @ref_base_address(%union.gimple_statement_d* %s2, %struct.data_ref_loc_d* %7) #8, !dbg !6211
  %cmp = icmp eq %union.tree_node* %call4, %call16, !dbg !6212
  br i1 %cmp, label %cleanup.loopexit, label %for.inc, !dbg !6213

for.inc:                                          ; preds = %for.body15
  %inc = add i32 %j.0, 1, !dbg !6214
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6179, metadata !DIExpression()), !dbg !6189
  br label %for.cond6, !dbg !6215, !llvm.loop !6216

cleanup.loopexit:                                 ; preds = %for.body15, %for.cond6
  %res.1.ph = phi i8 [ %res.0, %for.cond6 ], [ 1, %for.body15 ]
  %cleanup.dest.slot.0.ph = phi i1 [ true, %for.cond6 ], [ false, %for.body15 ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %for.body
  %res.1 = phi i8 [ %res.0, %for.body ], [ %res.1.ph, %cleanup.loopexit ], !dbg !6189
  %cleanup.dest.slot.0 = phi i1 [ true, %for.body ], [ %cleanup.dest.slot.0.ph, %cleanup.loopexit ]
  call void @llvm.dbg.value(metadata i8 %res.1, metadata !6177, metadata !DIExpression()), !dbg !6189
  br i1 %cleanup.dest.slot.0, label %for.inc19, label %end

for.inc19:                                        ; preds = %cleanup
  %inc20 = add i32 %i.0, 1, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %inc20, metadata !6178, metadata !DIExpression()), !dbg !6189
  br label %for.cond, !dbg !6219, !llvm.loop !6220

end:                                              ; preds = %for.cond, %cleanup
  %res.2 = phi i8 [ %res.1, %cleanup ], [ %res.0, %for.cond ], !dbg !6189
  call void @llvm.dbg.value(metadata i8 %res.2, metadata !6177, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.label(metadata !6188), !dbg !6222
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs1, metadata !6180, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %refs1) #8, !dbg !6223
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs2, metadata !6181, metadata !DIExpression(DW_OP_deref)), !dbg !6189
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %refs2) #8, !dbg !6224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !6225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !6225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6225
  ret i8 %res.2, !dbg !6225
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @ref_base_address(%union.gimple_statement_d* %stmt, %struct.data_ref_loc_d* %ref) unnamed_addr #0 !dbg !6226 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6230, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %ref, metadata !6231, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6232, metadata !DIExpression()), !dbg !6236
  %call = tail call i8* @xcalloc(i64 1, i64 112) #7, !dbg !6237
  %0 = bitcast i8* %call to %struct.data_reference*, !dbg !6237
  call void @llvm.dbg.value(metadata %struct.data_reference* %0, metadata !6234, metadata !DIExpression()), !dbg !6236
  %stmt1 = bitcast i8* %call to %union.gimple_statement_d**, !dbg !6238
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt1, align 8, !dbg !6239
  %1 = bitcast %struct.data_ref_loc_d* %ref to i64**, !dbg !6240
  %2 = load i64*, i64** %1, align 8, !dbg !6240
  %3 = load i64, i64* %2, align 8, !dbg !6241
  %ref2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6242
  %4 = bitcast i8* %ref2 to i64*, !dbg !6243
  store i64 %3, i64* %4, align 8, !dbg !6243
  %call3 = tail call zeroext i8 @dr_analyze_innermost(%struct.data_reference* %0) #8, !dbg !6244
  %innermost = getelementptr inbounds i8, i8* %call, i64 32, !dbg !6245
  %base_address4 = bitcast i8* %innermost to %union.tree_node**, !dbg !6245
  %5 = load %union.tree_node*, %union.tree_node** %base_address4, align 8, !dbg !6245
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6233, metadata !DIExpression()), !dbg !6236
  %tobool = icmp eq %union.tree_node* %5, null, !dbg !6246
  br i1 %tobool, label %end, label %if.end, !dbg !6248

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6249
  %bf.load = load i64, i64* %6, align 8, !dbg !6249
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6250
  %cond = icmp eq i64 %bf.cast1, 121, !dbg !6250
  br i1 %cond, label %sw.bb, label %end, !dbg !6250

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6251
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6251
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6232, metadata !DIExpression()), !dbg !6236
  br label %end, !dbg !6253

end:                                              ; preds = %entry, %sw.bb, %if.end
  %base.1 = phi %union.tree_node* [ null, %entry ], [ %7, %sw.bb ], [ %5, %if.end ], !dbg !6236
  call void @llvm.dbg.value(metadata %union.tree_node* %base.1, metadata !6232, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.label(metadata !6235), !dbg !6254
  tail call void @free_data_ref(%struct.data_reference* %0) #8, !dbg !6255
  ret %union.tree_node* %base.1, !dbg !6256
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local void @remove_similar_memory_refs(%struct.VEC_gimple_heap** %stmts) local_unnamed_addr #5 !dbg !6257 {
entry:
  %stmt = alloca %union.gimple_statement_d*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %stmts, metadata !6259, metadata !DIExpression()), !dbg !6267
  %0 = bitcast %union.gimple_statement_d** %stmt to i8*, !dbg !6268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6268
  %1 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !6269
  %tobool = icmp eq %struct.VEC_gimple_heap* %1, null, !dbg !6269
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6269

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %1, i64 0, i32 0, !dbg !6269
  br label %cond.end, !dbg !6269

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6269
  %call = tail call fastcc i32 @VEC_gimple_base_length(%struct.VEC_gimple_base* %cond) #8, !dbg !6269
  %conv = zext i32 %call to i64, !dbg !6269
  %call1 = tail call %struct.htab* @htab_create(i64 %conv, i32 (i8*)* nonnull @ref_base_address_1, i32 (i8*, i8*)* nonnull @have_similar_memory_accesses_1, void (i8*)* null) #7, !dbg !6270
  call void @llvm.dbg.value(metadata %struct.htab* %call1, metadata !6262, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i32 0, metadata !6260, metadata !DIExpression()), !dbg !6267
  %2 = bitcast %union.gimple_statement_d** %stmt to i8**, !dbg !6271
  %3 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !6272
  br label %for.cond, !dbg !6275

for.cond:                                         ; preds = %if.end, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %i.1, %if.end ], !dbg !6276
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6260, metadata !DIExpression()), !dbg !6267
  %4 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !6277
  %tobool2 = icmp eq %struct.VEC_gimple_heap* %4, null, !dbg !6277
  br i1 %tobool2, label %cond.end6, label %cond.true3, !dbg !6277

cond.true3:                                       ; preds = %for.cond
  %base4 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %4, i64 0, i32 0, !dbg !6277
  br label %cond.end6, !dbg !6277

cond.end6:                                        ; preds = %for.cond, %cond.true3
  %cond7 = phi %struct.VEC_gimple_base* [ %base4, %cond.true3 ], [ null, %for.cond ], !dbg !6277
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !6261, metadata !DIExpression(DW_OP_deref)), !dbg !6267
  %call8 = call fastcc i32 @VEC_gimple_base_iterate(%struct.VEC_gimple_base* %cond7, i32 %i.0, %union.gimple_statement_d** nonnull %stmt) #8, !dbg !6277
  %tobool9 = icmp eq i32 %call8, 0, !dbg !6278
  br i1 %tobool9, label %for.end, label %for.body, !dbg !6278

for.body:                                         ; preds = %cond.end6
  %5 = load i8*, i8** %2, align 8, !dbg !6279
  %call10 = call i8** @htab_find_slot(%struct.htab* %call1, i8* %5, i32 1) #7, !dbg !6280
  call void @llvm.dbg.value(metadata i8** %call10, metadata !6263, metadata !DIExpression()), !dbg !6271
  %6 = load i8*, i8** %call10, align 8, !dbg !6281
  %tobool11 = icmp eq i8* %6, null, !dbg !6281
  br i1 %tobool11, label %if.else, label %if.then, !dbg !6282

if.then:                                          ; preds = %for.body
  %7 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %stmts, align 8, !dbg !6283
  %tobool12 = icmp eq %struct.VEC_gimple_heap* %7, null, !dbg !6283
  br i1 %tobool12, label %cond.end16, label %cond.true13, !dbg !6283

cond.true13:                                      ; preds = %if.then
  %base14 = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %7, i64 0, i32 0, !dbg !6283
  br label %cond.end16, !dbg !6283

cond.end16:                                       ; preds = %if.then, %cond.true13
  %cond17 = phi %struct.VEC_gimple_base* [ %base14, %cond.true13 ], [ null, %if.then ], !dbg !6283
  %call18 = call fastcc %union.gimple_statement_d* @VEC_gimple_base_ordered_remove(%struct.VEC_gimple_base* %cond17, i32 %i.0) #8, !dbg !6283
  br label %if.end, !dbg !6283

if.else:                                          ; preds = %for.body
  %8 = load i64, i64* %3, align 8, !dbg !6284
  %9 = bitcast i8** %call10 to i64*, !dbg !6285
  store i64 %8, i64* %9, align 8, !dbg !6285
  %inc = add i32 %i.0, 1, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6260, metadata !DIExpression()), !dbg !6267
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end16
  %i.1 = phi i32 [ %i.0, %cond.end16 ], [ %inc, %if.else ], !dbg !6287
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6260, metadata !DIExpression()), !dbg !6267
  br label %for.cond, !dbg !6288, !llvm.loop !6289

for.end:                                          ; preds = %cond.end6
  call void @htab_delete(%struct.htab* %call1) #7, !dbg !6291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6292
  ret void, !dbg !6292
}

; Function Attrs: nounwind uwtable
define internal i32 @ref_base_address_1(i8* %s) #5 !dbg !6293 {
entry:
  %refs = alloca %struct.VEC_data_ref_loc_heap*, align 8
  %ref = alloca %struct.data_ref_loc_d*, align 8
  call void @llvm.dbg.value(metadata i8* %s, metadata !6295, metadata !DIExpression()), !dbg !6301
  %0 = bitcast i8* %s to %union.gimple_statement_d*, !dbg !6302
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6296, metadata !DIExpression()), !dbg !6301
  %1 = bitcast %struct.VEC_data_ref_loc_heap** %refs to i8*, !dbg !6303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6303
  %2 = bitcast %struct.data_ref_loc_d** %ref to i8*, !dbg !6304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !6304
  call void @llvm.dbg.value(metadata i32 0, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs, metadata !6298, metadata !DIExpression(DW_OP_deref)), !dbg !6301
  %call = call zeroext i8 @get_references_in_stmt(%union.gimple_statement_d* %0, %struct.VEC_data_ref_loc_heap** nonnull %refs) #8, !dbg !6305
  call void @llvm.dbg.value(metadata i32 0, metadata !6297, metadata !DIExpression()), !dbg !6301
  br label %for.cond, !dbg !6306

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6308
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6297, metadata !DIExpression()), !dbg !6301
  %3 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %refs, align 8, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %3, metadata !6298, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap* %3, metadata !6298, metadata !DIExpression()), !dbg !6301
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %3, i64 0, i32 0, !dbg !6309
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d** %ref, metadata !6299, metadata !DIExpression(DW_OP_deref)), !dbg !6301
  %call1 = call fastcc i32 @VEC_data_ref_loc_base_iterate(%struct.VEC_data_ref_loc_base* %base, i32 %i.0, %struct.data_ref_loc_d** nonnull %ref) #8, !dbg !6309
  %tobool2 = icmp eq i32 %call1, 0, !dbg !6311
  br i1 %tobool2, label %for.end.loopexit, label %for.body, !dbg !6311

for.body:                                         ; preds = %for.cond
  %4 = load %struct.data_ref_loc_d*, %struct.data_ref_loc_d** %ref, align 8, !dbg !6312
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %4, metadata !6299, metadata !DIExpression()), !dbg !6301
  %is_read = getelementptr inbounds %struct.data_ref_loc_d, %struct.data_ref_loc_d* %4, i64 0, i32 1, !dbg !6314
  %5 = load i8, i8* %is_read, align 8, !dbg !6314
  %tobool3 = icmp eq i8 %5, 0, !dbg !6312
  br i1 %tobool3, label %if.then, label %for.inc, !dbg !6315

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.data_ref_loc_d* [ %4, %for.body ], !dbg !6312
  %6 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !6316
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %.lcssa, metadata !6299, metadata !DIExpression()), !dbg !6301
  %call4 = call fastcc %union.tree_node* @ref_base_address(%union.gimple_statement_d* %0, %struct.data_ref_loc_d* %.lcssa) #8, !dbg !6318
  %7 = bitcast %union.tree_node* %call4 to i8*, !dbg !6318
  %call5 = call i32 %6(i8* %7) #7, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %call5, metadata !6300, metadata !DIExpression()), !dbg !6301
  br label %for.end, !dbg !6319

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !6320
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6297, metadata !DIExpression()), !dbg !6301
  br label %for.cond, !dbg !6321, !llvm.loop !6322

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !6324

for.end:                                          ; preds = %for.end.loopexit, %if.then
  %res.0 = phi i32 [ %call5, %if.then ], [ 0, %for.end.loopexit ], !dbg !6301
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %refs, metadata !6298, metadata !DIExpression(DW_OP_deref)), !dbg !6301
  call fastcc void @VEC_data_ref_loc_heap_free(%struct.VEC_data_ref_loc_heap** nonnull %refs) #8, !dbg !6324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !6325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6325
  ret i32 %res.0, !dbg !6326
}

; Function Attrs: nounwind uwtable
define internal i32 @have_similar_memory_accesses_1(i8* %s1, i8* %s2) #5 !dbg !6327 {
entry:
  call void @llvm.dbg.value(metadata i8* %s1, metadata !6329, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.value(metadata i8* %s2, metadata !6330, metadata !DIExpression()), !dbg !6331
  %0 = bitcast i8* %s1 to %union.gimple_statement_d*, !dbg !6332
  %1 = bitcast i8* %s2 to %union.gimple_statement_d*, !dbg !6333
  %call = tail call zeroext i8 @have_similar_memory_accesses(%union.gimple_statement_d* %0, %union.gimple_statement_d* %1) #8, !dbg !6334
  %conv = zext i8 %call to i32, !dbg !6334
  ret i32 %conv, !dbg !6335
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @VEC_gimple_base_ordered_remove(%struct.VEC_gimple_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6336 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !6341, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6342, metadata !DIExpression()), !dbg !6345
  %idxprom = zext i32 %ix_ to i64, !dbg !6346
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6346
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !6343, metadata !DIExpression()), !dbg !6345
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, align 8, !dbg !6346
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !6344, metadata !DIExpression()), !dbg !6345
  %1 = bitcast %union.gimple_statement_d** %arrayidx to i8*, !dbg !6346
  %add.ptr = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %arrayidx, i64 1, !dbg !6346
  %2 = bitcast %union.gimple_statement_d** %add.ptr to i8*, !dbg !6346
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !6346
  %3 = load i32, i32* %num1, align 8, !dbg !6346
  %dec = add i32 %3, -1, !dbg !6346
  store i32 %dec, i32* %num1, align 8, !dbg !6346
  %sub = sub i32 %dec, %ix_, !dbg !6346
  %conv2 = zext i32 %sub to i64, !dbg !6346
  %mul = shl nuw nsw i64 %conv2, 3, !dbg !6346
  %call = tail call i8* @memmove(i8* nonnull %1, i8* nonnull %2, i64 %mul) #7, !dbg !6346
  ret %union.gimple_statement_d* %0, !dbg !6346
}

; Function Attrs: nounwind uwtable
define dso_local i32 @access_matrix_get_index_for_parameter(%union.tree_node* %parameter, %struct.access_matrix* %access_matrix) local_unnamed_addr #5 !dbg !6347 {
entry:
  %lambda_parameter = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %parameter, metadata !6351, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata %struct.access_matrix* %access_matrix, metadata !6352, metadata !DIExpression()), !dbg !6356
  %parameters = getelementptr inbounds %struct.access_matrix, %struct.access_matrix* %access_matrix, i64 0, i32 2, !dbg !6357
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %parameters, align 8, !dbg !6357
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %0, metadata !6354, metadata !DIExpression()), !dbg !6356
  %1 = bitcast %union.tree_node** %lambda_parameter to i8*, !dbg !6358
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6358
  call void @llvm.dbg.value(metadata i32 0, metadata !6353, metadata !DIExpression()), !dbg !6356
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6359
  br label %for.cond, !dbg !6362

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6363
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6353, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata %union.tree_node** %lambda_parameter, metadata !6355, metadata !DIExpression(DW_OP_deref)), !dbg !6356
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %lambda_parameter) #8, !dbg !6364
  %tobool1 = icmp eq i32 %call, 0, !dbg !6365
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !6365

for.body:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %lambda_parameter, align 8, !dbg !6366
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6355, metadata !DIExpression()), !dbg !6356
  %cmp = icmp eq %union.tree_node* %2, %parameter, !dbg !6368
  br i1 %cmp, label %if.then, label %for.inc, !dbg !6369

if.then:                                          ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !6363
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !6353, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !6353, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !6353, metadata !DIExpression()), !dbg !6356
  %nb_induction_vars = getelementptr inbounds %struct.access_matrix, %struct.access_matrix* %access_matrix, i64 0, i32 1, !dbg !6370
  %3 = load i32, i32* %nb_induction_vars, align 8, !dbg !6370
  %add = add nsw i32 %i.0.lcssa3, %3, !dbg !6371
  br label %cleanup, !dbg !6372

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6353, metadata !DIExpression()), !dbg !6356
  br label %for.cond, !dbg !6374, !llvm.loop !6375

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6377

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i32 [ %add, %if.then ], [ -1, %cleanup.loopexit ], !dbg !6356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6377
  ret i32 %retval.0, !dbg !6377
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !6378 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6382, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6383, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !6384, metadata !DIExpression()), !dbg !6385
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6386
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6386

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6386
  %0 = load i32, i32* %num, align 8, !dbg !6386
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6386
  br i1 %cmp, label %if.then, label %if.else, !dbg !6388

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6389
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6389
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6389
  br label %return, !dbg !6389

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6391

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !6393
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6393
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !6393
  ret i32 %retval.0, !dbg !6388
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_affine_function(%struct._IO_FILE* %outf, %struct.VEC_tree_heap* %fn) unnamed_addr #5 !dbg !6394 {
entry:
  %coef = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %outf, metadata !6398, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fn, metadata !6399, metadata !DIExpression()), !dbg !6402
  %0 = bitcast %union.tree_node** %coef to i8*, !dbg !6403
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6403
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fn, i64 0, i32 0, !dbg !6404
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #8, !dbg !6404
  tail call void @print_generic_expr(%struct._IO_FILE* %outf, %union.tree_node* %call, i32 2) #7, !dbg !6405
  call void @llvm.dbg.value(metadata i32 1, metadata !6400, metadata !DIExpression()), !dbg !6402
  br label %for.cond, !dbg !6406

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.body ], !dbg !6408
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6400, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata %union.tree_node** %coef, metadata !6401, metadata !DIExpression(DW_OP_deref)), !dbg !6402
  %call7 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %coef) #8, !dbg !6409
  %tobool8 = icmp eq i32 %call7, 0, !dbg !6411
  br i1 %tobool8, label %for.end, label %for.body, !dbg !6411

for.body:                                         ; preds = %for.cond
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i64 0, i64 0)) #7, !dbg !6412
  %1 = load %union.tree_node*, %union.tree_node** %coef, align 8, !dbg !6414
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6401, metadata !DIExpression()), !dbg !6402
  call void @print_generic_expr(%struct._IO_FILE* %outf, %union.tree_node* %1, i32 2) #7, !dbg !6415
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), i32 %i.0) #7, !dbg !6416
  %inc = add i32 %i.0, 1, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6400, metadata !DIExpression()), !dbg !6402
  br label %for.cond, !dbg !6418, !llvm.loop !6419

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6421
  ret void, !dbg !6421
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !6422 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6424, metadata !DIExpression()), !dbg !6425
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6426
  %bf.load = load i64, i64* %0, align 8, !dbg !6426
  %1 = trunc i64 %bf.load to i16, !dbg !6426
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !6427

sw.default:                                       ; preds = %entry
  br label %return, !dbg !6428

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !6430
  ret i8 %retval.0, !dbg !6431
}

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6432 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6434, metadata !DIExpression()), !dbg !6435
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6436
  ret %union.tree_node* %call, !dbg !6437
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6438 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6442, metadata !DIExpression()), !dbg !6444
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %call, metadata !6443, metadata !DIExpression()), !dbg !6444
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !6446
  %cmp = icmp eq i32 %call1, 3, !dbg !6448
  br i1 %cmp, label %if.then, label %if.end, !dbg !6449

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !6450
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6450
  %bf.load = load i64, i64* %0, align 8, !dbg !6450
  %1 = trunc i64 %bf.load to i32, !dbg !6450
  %bf.cast = and i32 %1, 65535, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !6443, metadata !DIExpression()), !dbg !6444
  br label %if.end, !dbg !6451

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !6444
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !6443, metadata !DIExpression()), !dbg !6444
  ret i32 %code.0, !dbg !6452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6453 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6455, metadata !DIExpression()), !dbg !6456
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !6457
  %cmp = icmp ugt i32 %call, 2, !dbg !6459
  br i1 %cmp, label %if.then, label %return, !dbg !6460

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #8, !dbg !6461
  br label %return, !dbg !6462

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !6463
  ret %union.tree_node* %retval.0, !dbg !6464
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6465 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %i, metadata !6470, metadata !DIExpression()), !dbg !6471
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !6472
  %tobool = icmp eq i8 %call, 0, !dbg !6472
  br i1 %tobool, label %return, label %if.then, !dbg !6474

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !6475
  %idxprom = zext i32 %i to i64, !dbg !6475
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !6475
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6475
  br label %return, !dbg !6477

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6478
  ret %union.tree_node* %retval.0, !dbg !6479
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6480 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6482, metadata !DIExpression()), !dbg !6483
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6484
  %cmp = icmp eq i32 %call, 0, !dbg !6485
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6486

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6487
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6488
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6489
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6490 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6494, metadata !DIExpression()), !dbg !6496
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !6497
  %idxprom = zext i32 %call to i64, !dbg !6498
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6498
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6498
  call void @llvm.dbg.value(metadata i64 %0, metadata !6495, metadata !DIExpression()), !dbg !6496
  %cmp = icmp eq i64 %0, 0, !dbg !6499
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6499

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !6499
  br label %cond.end, !dbg !6499

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6500
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6501
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6502
  ret %union.tree_node** %2, !dbg !6503
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6504 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6508, metadata !DIExpression()), !dbg !6509
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6510
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !6511
  ret i32 %call1, !dbg !6512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6513 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6517, metadata !DIExpression()), !dbg !6518
  %idxprom = zext i32 %code to i64, !dbg !6519
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6519
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6519
  ret i32 %0, !dbg !6520
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !6521 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6523, metadata !DIExpression()), !dbg !6525
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !6526
  call void @llvm.dbg.value(metadata i32 %call, metadata !6524, metadata !DIExpression()), !dbg !6525
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !6527

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !6529
  %bf.load = load i32, i32* %0, align 8, !dbg !6529
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6529
  br label %cleanup, !dbg !6530

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !6531
  br label %cleanup, !dbg !6533

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !6525
  ret i32 %retval.0, !dbg !6534
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !6535 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6539, metadata !DIExpression()), !dbg !6540
  %idxprom = sext i32 %code to i64, !dbg !6541
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !6541
  %0 = load i8, i8* %arrayidx, align 1, !dbg !6541
  %conv = zext i8 %0 to i32, !dbg !6542
  ret i32 %conv, !dbg !6543
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6544 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6546, metadata !DIExpression()), !dbg !6547
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6548
  %0 = load i32, i32* %num_ops, align 4, !dbg !6548
  ret i32 %0, !dbg !6549
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6550 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6554, metadata !DIExpression()), !dbg !6555
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !6556
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6556
  ret %struct.basic_block_def* %0, !dbg !6557
}

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_before_loop(%struct.loop* %loop) unnamed_addr #0 !dbg !6558 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6563, metadata !DIExpression()), !dbg !6565
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #7, !dbg !6566
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !6564, metadata !DIExpression()), !dbg !6565
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !6567
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6567

cond.true:                                        ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !6568
  br label %cond.end, !dbg !6567

cond.false:                                       ; preds = %entry
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6569
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6569
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6569
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !6569
  br label %cond.end, !dbg !6567

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.basic_block_def** [ %src, %cond.true ], [ %x_entry_block_ptr, %cond.false ]
  %cond = load %struct.basic_block_def*, %struct.basic_block_def** %cond.in, align 8, !dbg !6567
  ret %struct.basic_block_def* %cond, !dbg !6570
}

declare dso_local %union.tree_node* @analyze_scalar_evolution(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @instantiate_scev(%struct.basic_block_def*, %struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6571 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6575, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6576, metadata !DIExpression()), !dbg !6577
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #8, !dbg !6578
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6578
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6578
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6578

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6578
  br label %cond.end, !dbg !6578

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6578
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #8, !dbg !6578
  ret %union.tree_node** %call1, !dbg !6578
}

declare dso_local %union.tree_node* @initial_condition(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_replace_initial_condition(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6579 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !6583, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 1, metadata !6584, metadata !DIExpression()), !dbg !6586
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !6587
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !6587
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6587

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6587
  br label %cond.end, !dbg !6587

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6587
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #8, !dbg !6587
  %tobool1 = icmp eq i32 %call, 0, !dbg !6587
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6587
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6585, metadata !DIExpression()), !dbg !6586
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6587

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !6588
  %2 = load i8*, i8** %1, align 8, !dbg !6588
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !6588
  store i8* %call3, i8** %1, align 8, !dbg !6588
  br label %if.end, !dbg !6588

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6590 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6595, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6596, metadata !DIExpression()), !dbg !6598
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6599
  %0 = load i32, i32* %num1, align 8, !dbg !6599
  %inc = add i32 %0, 1, !dbg !6599
  store i32 %inc, i32* %num1, align 8, !dbg !6599
  %idxprom = zext i32 %0 to i64, !dbg !6599
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6599
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !6597, metadata !DIExpression()), !dbg !6598
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !6599
  ret %union.tree_node** %arrayidx, !dbg !6599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6600 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6604, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i32 1, metadata !6605, metadata !DIExpression()), !dbg !6606
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6607
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6607

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !6607
  %0 = load i32, i32* %alloc, align 4, !dbg !6607
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6607
  %1 = load i32, i32* %num, align 8, !dbg !6607
  %cmp1 = icmp ne i32 %0, %1, !dbg !6607
  %phitmp = zext i1 %cmp1 to i32, !dbg !6607
  br label %cond.end, !dbg !6607

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6607
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_pop(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6608 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6612, metadata !DIExpression()), !dbg !6614
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6615
  %0 = load i32, i32* %num1, align 8, !dbg !6615
  %dec = add i32 %0, -1, !dbg !6615
  store i32 %dec, i32* %num1, align 8, !dbg !6615
  %idxprom = zext i32 %dec to i64, !dbg !6615
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6615
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6615
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6613, metadata !DIExpression()), !dbg !6614
  ret %union.tree_node* %1, !dbg !6615
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_subscript_p_heap* @VEC_subscript_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !6616 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6620, metadata !DIExpression()), !dbg !6621
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #7, !dbg !6622
  %0 = bitcast i8* %call to %struct.VEC_subscript_p_heap*, !dbg !6622
  ret %struct.VEC_subscript_p_heap* %0, !dbg !6622
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @object_address_invariant_in_loop_p(%struct.loop* %loop, %union.tree_node* %obj) unnamed_addr #5 !dbg !6623 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6629, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !6630, metadata !DIExpression()), !dbg !6631
  %num21 = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !6632
  br label %while.cond, !dbg !6638

while.cond:                                       ; preds = %if.end27, %entry
  %obj.addr.0 = phi %union.tree_node* [ %obj, %entry ], [ %8, %if.end27 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %obj.addr.0, metadata !6630, metadata !DIExpression()), !dbg !6631
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %obj.addr.0) #8, !dbg !6639
  %tobool = icmp eq i8 %call, 0, !dbg !6638
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6631
  %bf.load = load i64, i64* %0, align 8, !dbg !6631
  %1 = trunc i64 %bf.load to i32, !dbg !6631
  %bf.cast = and i32 %1, 65535, !dbg !6631
  br i1 %tobool, label %while.end, label %while.body, !dbg !6638

while.body:                                       ; preds = %while.cond
  %cmp = icmp eq i32 %bf.cast, 45, !dbg !6640
  br i1 %cmp, label %if.then, label %if.else, !dbg !6641

if.then:                                          ; preds = %while.body
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %obj.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6642
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !6642
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6642
  %3 = load i32, i32* %num21, align 8, !dbg !6645
  %call1 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %2, i32 %3) #7, !dbg !6646
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6646
  br i1 %tobool2, label %lor.lhs.false, label %return.loopexit, !dbg !6647

lor.lhs.false:                                    ; preds = %if.then
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6648
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !6648
  %5 = load i32, i32* %num21, align 8, !dbg !6649
  %call7 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %4, i32 %5) #7, !dbg !6650
  %tobool9 = icmp eq i8 %call7, 0, !dbg !6650
  br i1 %tobool9, label %if.end27, label %return.loopexit, !dbg !6651

if.else:                                          ; preds = %while.body
  %bf.cast143 = and i64 %bf.load, 65535, !dbg !6652
  %cmp15 = icmp eq i64 %bf.cast143, 41, !dbg !6652
  br i1 %cmp15, label %if.then17, label %if.end27, !dbg !6653

if.then17:                                        ; preds = %if.else
  %operands19 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6654
  %arrayidx20 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands19, i64 2, !dbg !6654
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx20, align 8, !dbg !6654
  %7 = load i32, i32* %num21, align 8, !dbg !6655
  %call22 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %6, i32 %7) #7, !dbg !6656
  %tobool23 = icmp eq i8 %call22, 0, !dbg !6656
  br i1 %tobool23, label %if.end27, label %return.loopexit, !dbg !6657

if.end27:                                         ; preds = %lor.lhs.false, %if.then17, %if.else
  %operands29 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6658
  %8 = load %union.tree_node*, %union.tree_node** %operands29, align 8, !dbg !6658
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6630, metadata !DIExpression()), !dbg !6631
  br label %while.cond, !dbg !6638, !llvm.loop !6659

while.end:                                        ; preds = %while.cond
  %obj.addr.0.lcssa = phi %union.tree_node* [ %obj.addr.0, %while.cond ]
  %bf.load.lcssa = phi i64 [ %bf.load, %while.cond ], !dbg !6631
  %bf.cast.lcssa = phi i32 [ %bf.cast, %while.cond ], !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %obj.addr.0.lcssa, metadata !6630, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %obj.addr.0.lcssa, metadata !6630, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata %union.tree_node* %obj.addr.0.lcssa, metadata !6630, metadata !DIExpression()), !dbg !6631
  %cmp35 = icmp eq i32 %bf.cast.lcssa, 47, !dbg !6661
  br i1 %cmp35, label %if.end52, label %lor.lhs.false37, !dbg !6661

lor.lhs.false37:                                  ; preds = %while.end
  %bf.cast411 = and i64 %bf.load.lcssa, 65535, !dbg !6661
  %cmp42 = icmp eq i64 %bf.cast411, 48, !dbg !6661
  br i1 %cmp42, label %if.end52, label %lor.lhs.false44, !dbg !6661

lor.lhs.false44:                                  ; preds = %lor.lhs.false37
  %cmp49 = icmp eq i64 %bf.cast411, 49, !dbg !6661
  br i1 %cmp49, label %if.end52, label %return, !dbg !6663

if.end52:                                         ; preds = %lor.lhs.false44, %lor.lhs.false37, %while.end
  %operands54 = getelementptr inbounds %union.tree_node, %union.tree_node* %obj.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6664
  %9 = load %union.tree_node*, %union.tree_node** %operands54, align 8, !dbg !6664
  %10 = load i32, i32* %num21, align 8, !dbg !6665
  %call57 = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %9, i32 %10) #7, !dbg !6666
  %tobool58 = icmp eq i8 %call57, 0, !dbg !6667
  %conv59 = zext i1 %tobool58 to i8, !dbg !6667
  br label %return, !dbg !6668

return.loopexit:                                  ; preds = %if.then17, %if.then, %lor.lhs.false
  br label %return, !dbg !6669

return:                                           ; preds = %return.loopexit, %lor.lhs.false44, %if.end52
  %retval.0 = phi i8 [ %conv59, %if.end52 ], [ 1, %lor.lhs.false44 ], [ 0, %return.loopexit ], !dbg !6631
  ret i8 %retval.0, !dbg !6669
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.conflict_function* @conflict_fn_not_known() unnamed_addr #5 !dbg !6670 {
entry:
  %call = tail call i8* @xcalloc(i64 1, i64 24) #7, !dbg !6675
  %0 = bitcast i8* %call to %struct.conflict_function*, !dbg !6675
  call void @llvm.dbg.value(metadata %struct.conflict_function* %0, metadata !6674, metadata !DIExpression()), !dbg !6676
  %n = bitcast i8* %call to i32*, !dbg !6677
  store i32 3, i32* %n, align 8, !dbg !6678
  ret %struct.conflict_function* %0, !dbg !6679
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.subscript** @VEC_subscript_p_heap_safe_push(%struct.VEC_subscript_p_heap** %vec_, %struct.subscript* %obj_) unnamed_addr #0 !dbg !6680 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap** %vec_, metadata !6686, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata %struct.subscript* %obj_, metadata !6687, metadata !DIExpression()), !dbg !6688
  %call = tail call fastcc i32 @VEC_subscript_p_heap_reserve(%struct.VEC_subscript_p_heap** %vec_, i32 1) #8, !dbg !6689
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %vec_, align 8, !dbg !6689
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !6689
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6689

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %0, i64 0, i32 0, !dbg !6689
  br label %cond.end, !dbg !6689

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6689
  %call1 = tail call fastcc %struct.subscript** @VEC_subscript_p_base_quick_push(%struct.VEC_subscript_p_base* %cond, %struct.subscript* %obj_) #8, !dbg !6689
  ret %struct.subscript** %call1, !dbg !6689
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_subscript_p_heap_reserve(%struct.VEC_subscript_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6690 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap** %vec_, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 1, metadata !6695, metadata !DIExpression()), !dbg !6697
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %vec_, align 8, !dbg !6698
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !6698
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6698

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %0, i64 0, i32 0, !dbg !6698
  br label %cond.end, !dbg !6698

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6698
  %call = tail call fastcc i32 @VEC_subscript_p_base_space(%struct.VEC_subscript_p_base* %cond, i32 1) #8, !dbg !6698
  %tobool1 = icmp eq i32 %call, 0, !dbg !6698
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6696, metadata !DIExpression()), !dbg !6697
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6698

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_subscript_p_heap** %vec_ to i8**, !dbg !6699
  %2 = load i8*, i8** %1, align 8, !dbg !6699
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !6699
  store i8* %call3, i8** %1, align 8, !dbg !6699
  br label %if.end, !dbg !6699

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6698
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.subscript** @VEC_subscript_p_base_quick_push(%struct.VEC_subscript_p_base* %vec_, %struct.subscript* %obj_) unnamed_addr #0 !dbg !6701 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_base* %vec_, metadata !6706, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata %struct.subscript* %obj_, metadata !6707, metadata !DIExpression()), !dbg !6709
  %num1 = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 0, !dbg !6710
  %0 = load i32, i32* %num1, align 8, !dbg !6710
  %inc = add i32 %0, 1, !dbg !6710
  store i32 %inc, i32* %num1, align 8, !dbg !6710
  %idxprom = zext i32 %0 to i64, !dbg !6710
  %arrayidx = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6710
  call void @llvm.dbg.value(metadata %struct.subscript** %arrayidx, metadata !6708, metadata !DIExpression()), !dbg !6709
  store %struct.subscript* %obj_, %struct.subscript** %arrayidx, align 8, !dbg !6710
  ret %struct.subscript** %arrayidx, !dbg !6710
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_subscript_p_base_space(%struct.VEC_subscript_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6711 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_base* %vec_, metadata !6715, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.value(metadata i32 1, metadata !6716, metadata !DIExpression()), !dbg !6717
  %tobool = icmp eq %struct.VEC_subscript_p_base* %vec_, null, !dbg !6718
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6718

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 1, !dbg !6718
  %0 = load i32, i32* %alloc, align 4, !dbg !6718
  %num = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 0, !dbg !6718
  %1 = load i32, i32* %num, align 8, !dbg !6718
  %cmp1 = icmp ne i32 %0, %1, !dbg !6718
  %phitmp = zext i1 %cmp1 to i32, !dbg !6718
  br label %cond.end, !dbg !6718

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6718
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_heap_reserve(%struct.VEC_ddr_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6719 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %vec_, metadata !6723, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i32 1, metadata !6724, metadata !DIExpression()), !dbg !6726
  %0 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %vec_, align 8, !dbg !6727
  %tobool = icmp eq %struct.VEC_ddr_p_heap* %0, null, !dbg !6727
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6727

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ddr_p_heap, %struct.VEC_ddr_p_heap* %0, i64 0, i32 0, !dbg !6727
  br label %cond.end, !dbg !6727

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ddr_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6727
  %call = tail call fastcc i32 @VEC_ddr_p_base_space(%struct.VEC_ddr_p_base* %cond, i32 1) #8, !dbg !6727
  %tobool1 = icmp eq i32 %call, 0, !dbg !6727
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6725, metadata !DIExpression()), !dbg !6726
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6727

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ddr_p_heap** %vec_ to i8**, !dbg !6728
  %2 = load i8*, i8** %1, align 8, !dbg !6728
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !6728
  store i8* %call3, i8** %1, align 8, !dbg !6728
  br label %if.end, !dbg !6728

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6727
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_dependence_relation** @VEC_ddr_p_base_quick_push(%struct.VEC_ddr_p_base* %vec_, %struct.data_dependence_relation* %obj_) unnamed_addr #0 !dbg !6730 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !6735, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %obj_, metadata !6736, metadata !DIExpression()), !dbg !6738
  %num1 = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !6739
  %0 = load i32, i32* %num1, align 8, !dbg !6739
  %inc = add i32 %0, 1, !dbg !6739
  store i32 %inc, i32* %num1, align 8, !dbg !6739
  %idxprom = zext i32 %0 to i64, !dbg !6739
  %arrayidx = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6739
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation** %arrayidx, metadata !6737, metadata !DIExpression()), !dbg !6738
  store %struct.data_dependence_relation* %obj_, %struct.data_dependence_relation** %arrayidx, align 8, !dbg !6739
  ret %struct.data_dependence_relation** %arrayidx, !dbg !6739
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ddr_p_base_space(%struct.VEC_ddr_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6740 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_base* %vec_, metadata !6744, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 1, metadata !6745, metadata !DIExpression()), !dbg !6746
  %tobool = icmp eq %struct.VEC_ddr_p_base* %vec_, null, !dbg !6747
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6747

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 1, !dbg !6747
  %0 = load i32, i32* %alloc, align 4, !dbg !6747
  %num = getelementptr inbounds %struct.VEC_ddr_p_base, %struct.VEC_ddr_p_base* %vec_, i64 0, i32 0, !dbg !6747
  %1 = load i32, i32* %num, align 8, !dbg !6747
  %cmp1 = icmp ne i32 %0, %1, !dbg !6747
  %phitmp = zext i1 %cmp1 to i32, !dbg !6747
  br label %cond.end, !dbg !6747

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6747

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6747
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @access_functions_are_affine_or_constant_p(%struct.data_reference* %a, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !6748 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %a, metadata !6752, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !6753, metadata !DIExpression()), !dbg !6757
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %a, i64 0, i32 5, i32 1, !dbg !6758
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !6758
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %0, metadata !6755, metadata !DIExpression()), !dbg !6757
  %1 = bitcast %union.tree_node** %t to i8*, !dbg !6759
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6754, metadata !DIExpression()), !dbg !6757
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !6760
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop_nest, i64 0, i32 0, !dbg !6763
  br label %for.cond, !dbg !6765

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6766
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6754, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !6756, metadata !DIExpression(DW_OP_deref)), !dbg !6757
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %t) #8, !dbg !6767
  %tobool1 = icmp eq i32 %call, 0, !dbg !6768
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !6768

for.body:                                         ; preds = %for.cond
  %2 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !6769
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6756, metadata !DIExpression()), !dbg !6757
  %3 = load i32, i32* %num, align 8, !dbg !6770
  %call2 = call zeroext i8 @evolution_function_is_invariant_p(%union.tree_node* %2, i32 %3) #7, !dbg !6771
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6771
  br i1 %tobool3, label %land.lhs.true, label %for.inc, !dbg !6772

land.lhs.true:                                    ; preds = %for.body
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !6773
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6756, metadata !DIExpression()), !dbg !6757
  %5 = load i32, i32* %num, align 8, !dbg !6774
  %call5 = call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %4, i32 %5) #7, !dbg !6775
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6775
  br i1 %tobool6, label %cleanup, label %for.inc, !dbg !6776

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %inc = add i32 %i.0, 1, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6754, metadata !DIExpression()), !dbg !6757
  br label %for.cond, !dbg !6778, !llvm.loop !6779

cleanup:                                          ; preds = %land.lhs.true, %for.cond
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ 1, %for.cond ], !dbg !6757
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !6781
  ret i8 %retval.0, !dbg !6781
}

; Function Attrs: nounwind uwtable
define internal fastcc void @subscript_dependence_tester(%struct.data_dependence_relation* %ddr, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !6782 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !6784, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !6785, metadata !DIExpression()), !dbg !6786
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6787
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !6787
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6789

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !6790
  %and = and i32 %1, 8, !dbg !6791
  %tobool1 = icmp eq i32 %and, 0, !dbg !6791
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6792

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.103, i64 0, i64 0)) #7, !dbg !6793
  br label %if.end, !dbg !6793

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !6794
  %2 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !6794
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !6796
  %3 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !6796
  %call2 = tail call fastcc zeroext i8 @subscript_dependence_tester_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %2, %struct.data_reference* %3, %struct.loop* %loop_nest) #8, !dbg !6797
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6797
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6798

if.then4:                                         ; preds = %if.end
  %4 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 1), align 4, !dbg !6799
  %inc = add nsw i32 %4, 1, !dbg !6799
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 1), align 4, !dbg !6799
  br label %if.end5, !dbg !6800

if.end5:                                          ; preds = %if.end, %if.then4
  tail call fastcc void @compute_subscript_distance(%struct.data_dependence_relation* %ddr) #8, !dbg !6801
  %call6 = tail call fastcc zeroext i8 @build_classic_dist_vector(%struct.data_dependence_relation* %ddr, %struct.loop* %loop_nest) #8, !dbg !6802
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6802
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6804

if.then8:                                         ; preds = %if.end5
  tail call fastcc void @build_classic_dir_vector(%struct.data_dependence_relation* %ddr) #8, !dbg !6805
  br label %if.end9, !dbg !6805

if.end9:                                          ; preds = %if.end5, %if.then8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6806
  %tobool10 = icmp eq %struct._IO_FILE* %5, null, !dbg !6806
  br i1 %tobool10, label %if.end16, label %land.lhs.true11, !dbg !6808

land.lhs.true11:                                  ; preds = %if.end9
  %6 = load i32, i32* @dump_flags, align 4, !dbg !6809
  %and12 = and i32 %6, 8, !dbg !6810
  %tobool13 = icmp eq i32 %and12, 0, !dbg !6810
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !6811

if.then14:                                        ; preds = %land.lhs.true11
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !6812
  br label %if.end16, !dbg !6812

if.end16:                                         ; preds = %land.lhs.true11, %if.end9, %if.then14
  ret void, !dbg !6813
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @init_omega_for_ddr(%struct.data_dependence_relation* %ddr, i8* %maybe_dependent) unnamed_addr #5 !dbg !6814 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !6818, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !6819, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i8 0, metadata !6846, metadata !DIExpression()), !dbg !6851
  store i8 1, i8* %maybe_dependent, align 1, !dbg !6852
  %call = tail call fastcc zeroext i8 @same_access_functions(%struct.data_dependence_relation* %ddr) #8, !dbg !6853
  %tobool = icmp eq i8 %call, 0, !dbg !6853
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !6851
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6851
  %tobool1 = icmp ne %struct.VEC_loop_p_heap* %0, null, !dbg !6851
  br i1 %tobool, label %if.end, label %if.then, !dbg !6854

if.then:                                          ; preds = %entry
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !6855

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !6855
  br label %cond.end, !dbg !6855

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.then ], !dbg !6855
  %call3 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !6855
  %call4 = tail call fastcc i32* @lambda_vector_new(i32 %call3) #8, !dbg !6856
  tail call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call4) #8, !dbg !6857
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6858
  %tobool6 = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !6858
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !6858

cond.true7:                                       ; preds = %cond.end
  %base9 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !6858
  br label %cond.end11, !dbg !6858

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi %struct.VEC_loop_p_base* [ %base9, %cond.true7 ], [ null, %cond.end ], !dbg !6858
  %call13 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond12) #8, !dbg !6858
  %call14 = tail call fastcc i32* @lambda_vector_new(i32 %call13) #8, !dbg !6859
  call void @llvm.dbg.value(metadata i32* %call14, metadata !6850, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.value(metadata i32 0, metadata !6847, metadata !DIExpression()), !dbg !6860
  br label %for.cond, !dbg !6861

for.cond:                                         ; preds = %for.body, %cond.end11
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end11 ], !dbg !6863
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6847, metadata !DIExpression()), !dbg !6860
  %2 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6864
  %tobool16 = icmp eq %struct.VEC_loop_p_heap* %2, null, !dbg !6864
  br i1 %tobool16, label %cond.end21, label %cond.true17, !dbg !6864

cond.true17:                                      ; preds = %for.cond
  %base19 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %2, i64 0, i32 0, !dbg !6864
  br label %cond.end21, !dbg !6864

cond.end21:                                       ; preds = %for.cond, %cond.true17
  %cond22 = phi %struct.VEC_loop_p_base* [ %base19, %cond.true17 ], [ null, %for.cond ], !dbg !6864
  %call23 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond22) #8, !dbg !6864
  %3 = zext i32 %call23 to i64, !dbg !6866
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !6866
  br i1 %cmp, label %for.body, label %for.end, !dbg !6867

for.body:                                         ; preds = %cond.end21
  %arrayidx = getelementptr inbounds i32, i32* %call14, i64 %indvars.iv, !dbg !6868
  store i32 2, i32* %arrayidx, align 4, !dbg !6869
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6870
  br label %for.cond, !dbg !6871, !llvm.loop !6872

for.end:                                          ; preds = %cond.end21
  tail call fastcc void @save_dir_v(%struct.data_dependence_relation* %ddr, i32* %call14) #8, !dbg !6874
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6875
  %tobool25 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !6875
  br i1 %tobool25, label %cond.end30, label %cond.true26, !dbg !6875

cond.true26:                                      ; preds = %for.end
  %base28 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %4, i64 0, i32 0, !dbg !6875
  br label %cond.end30, !dbg !6875

cond.end30:                                       ; preds = %for.end, %cond.true26
  %cond31 = phi %struct.VEC_loop_p_base* [ %base28, %cond.true26 ], [ null, %for.end ], !dbg !6875
  %call32 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond31) #8, !dbg !6875
  %mul = shl i32 %call32, 1, !dbg !6876
  %5 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6877
  %tobool34 = icmp eq %struct.VEC_loop_p_heap* %5, null, !dbg !6877
  br i1 %tobool34, label %cond.end39, label %cond.true35, !dbg !6877

cond.true35:                                      ; preds = %cond.end30
  %base37 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %5, i64 0, i32 0, !dbg !6877
  br label %cond.end39, !dbg !6877

cond.end39:                                       ; preds = %cond.end30, %cond.true35
  %cond40 = phi %struct.VEC_loop_p_base* [ %base37, %cond.true35 ], [ null, %cond.end30 ], !dbg !6877
  %call41 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond40) #8, !dbg !6877
  %call42 = tail call %struct.omega_pb_d* @omega_alloc_problem(i32 %mul, i32 %call41) #7, !dbg !6878
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %call42, metadata !6820, metadata !DIExpression()), !dbg !6851
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !6879
  %6 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !6879
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !6880
  %7 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !6880
  %call43 = tail call fastcc zeroext i8 @init_omega_for_ddr_1(%struct.data_reference* %6, %struct.data_reference* %7, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %call42, i8* %maybe_dependent) #8, !dbg !6881
  call void @llvm.dbg.value(metadata i8 %call43, metadata !6846, metadata !DIExpression()), !dbg !6851
  tail call fastcc void @omega_free_problem(%struct.omega_pb_d* %call42) #8, !dbg !6882
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %tobool1, label %cond.true46, label %cond.end50, !dbg !6883

cond.true46:                                      ; preds = %if.end
  %base48 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !6883
  br label %cond.end50, !dbg !6883

cond.end50:                                       ; preds = %if.end, %cond.true46
  %cond51 = phi %struct.VEC_loop_p_base* [ %base48, %cond.true46 ], [ null, %if.end ], !dbg !6883
  %call52 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond51) #8, !dbg !6883
  %mul53 = shl i32 %call52, 1, !dbg !6884
  %8 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6885
  %tobool55 = icmp eq %struct.VEC_loop_p_heap* %8, null, !dbg !6885
  br i1 %tobool55, label %cond.end60, label %cond.true56, !dbg !6885

cond.true56:                                      ; preds = %cond.end50
  %base58 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %8, i64 0, i32 0, !dbg !6885
  br label %cond.end60, !dbg !6885

cond.end60:                                       ; preds = %cond.end50, %cond.true56
  %cond61 = phi %struct.VEC_loop_p_base* [ %base58, %cond.true56 ], [ null, %cond.end50 ], !dbg !6885
  %call62 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond61) #8, !dbg !6885
  %call63 = tail call %struct.omega_pb_d* @omega_alloc_problem(i32 %mul53, i32 %call62) #7, !dbg !6886
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %call63, metadata !6820, metadata !DIExpression()), !dbg !6851
  %a64 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !6887
  %9 = load %struct.data_reference*, %struct.data_reference** %a64, align 8, !dbg !6887
  %b65 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !6888
  %10 = load %struct.data_reference*, %struct.data_reference** %b65, align 8, !dbg !6888
  %call66 = tail call fastcc zeroext i8 @init_omega_for_ddr_1(%struct.data_reference* %9, %struct.data_reference* %10, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %call63, i8* %maybe_dependent) #8, !dbg !6889
  call void @llvm.dbg.value(metadata i8 %call66, metadata !6846, metadata !DIExpression()), !dbg !6851
  tail call fastcc void @omega_free_problem(%struct.omega_pb_d* %call63) #8, !dbg !6890
  %cmp67 = icmp eq i8 %call66, 0, !dbg !6891
  br i1 %cmp67, label %cleanup, label %lor.lhs.false, !dbg !6893

lor.lhs.false:                                    ; preds = %cond.end60
  %11 = load i8, i8* %maybe_dependent, align 1, !dbg !6894
  %cmp70 = icmp eq i8 %11, 0, !dbg !6895
  br i1 %cmp70, label %cleanup, label %if.end73, !dbg !6896

if.end73:                                         ; preds = %lor.lhs.false
  %12 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6897
  %tobool75 = icmp eq %struct.VEC_loop_p_heap* %12, null, !dbg !6897
  br i1 %tobool75, label %cond.end80, label %cond.true76, !dbg !6897

cond.true76:                                      ; preds = %if.end73
  %base78 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %12, i64 0, i32 0, !dbg !6897
  br label %cond.end80, !dbg !6897

cond.end80:                                       ; preds = %if.end73, %cond.true76
  %cond81 = phi %struct.VEC_loop_p_base* [ %base78, %cond.true76 ], [ null, %if.end73 ], !dbg !6897
  %call82 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond81) #8, !dbg !6897
  %mul83 = shl i32 %call82, 1, !dbg !6898
  %13 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6899
  %tobool85 = icmp eq %struct.VEC_loop_p_heap* %13, null, !dbg !6899
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !6899

cond.true86:                                      ; preds = %cond.end80
  %base88 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %13, i64 0, i32 0, !dbg !6899
  br label %cond.end90, !dbg !6899

cond.end90:                                       ; preds = %cond.end80, %cond.true86
  %cond91 = phi %struct.VEC_loop_p_base* [ %base88, %cond.true86 ], [ null, %cond.end80 ], !dbg !6899
  %call92 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond91) #8, !dbg !6899
  %call93 = tail call %struct.omega_pb_d* @omega_alloc_problem(i32 %mul83, i32 %call92) #7, !dbg !6900
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %call93, metadata !6820, metadata !DIExpression()), !dbg !6851
  %14 = load %struct.data_reference*, %struct.data_reference** %b65, align 8, !dbg !6901
  %15 = load %struct.data_reference*, %struct.data_reference** %a64, align 8, !dbg !6902
  %call96 = tail call fastcc zeroext i8 @init_omega_for_ddr_1(%struct.data_reference* %14, %struct.data_reference* %15, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %call93, i8* %maybe_dependent) #8, !dbg !6903
  call void @llvm.dbg.value(metadata i8 %call96, metadata !6846, metadata !DIExpression()), !dbg !6851
  tail call fastcc void @omega_free_problem(%struct.omega_pb_d* %call93) #8, !dbg !6904
  br label %cleanup, !dbg !6905

cleanup:                                          ; preds = %cond.end60, %lor.lhs.false, %cond.end90, %cond.end39
  %retval.0 = phi i8 [ %call43, %cond.end39 ], [ %call96, %cond.end90 ], [ %call66, %lor.lhs.false ], [ 0, %cond.end60 ], !dbg !6851
  ret i8 %retval.0, !dbg !6906
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @ddr_consistent_p(%struct._IO_FILE* %file, %struct.data_dependence_relation* %ddr, %struct.VEC_lambda_vector_heap* %dist_vects, %struct.VEC_lambda_vector_heap* %dir_vects) unnamed_addr #5 !dbg !6907 {
entry:
  %b_dist_v = alloca i32*, align 8
  %a_dist_v = alloca i32*, align 8
  %a_dir_v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !6911, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !6912, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %dist_vects, metadata !6913, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap* %dir_vects, metadata !6914, metadata !DIExpression()), !dbg !6930
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6931
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !6931
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6933

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !6934
  %and = and i32 %1, 8, !dbg !6935
  %tobool1 = icmp eq i32 %and, 0, !dbg !6935
  %spec.select = select i1 %tobool1, %struct._IO_FILE* %file, %struct._IO_FILE* %0, !dbg !6936
  br label %if.end, !dbg !6936

if.end:                                           ; preds = %entry, %land.lhs.true
  %file.addr.0 = phi %struct._IO_FILE* [ %file, %entry ], [ %spec.select, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file.addr.0, metadata !6911, metadata !DIExpression()), !dbg !6930
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %dist_vects, i64 0, i32 0, !dbg !6937
  %call = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base) #8, !dbg !6937
  %dist_vects3 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !6938
  %2 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !6938
  %tobool4 = icmp eq %struct.VEC_lambda_vector_heap* %2, null, !dbg !6938
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !6938

cond.true5:                                       ; preds = %if.end
  %base7 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %2, i64 0, i32 0, !dbg !6938
  br label %cond.end9, !dbg !6938

cond.end9:                                        ; preds = %if.end, %cond.true5
  %cond10 = phi %struct.VEC_lambda_vector_base* [ %base7, %cond.true5 ], [ null, %if.end ], !dbg !6938
  %call11 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond10) #8, !dbg !6938
  %cmp = icmp eq i32 %call, %call11, !dbg !6939
  br i1 %cmp, label %if.end83, label %if.then12, !dbg !6940

if.then12:                                        ; preds = %cond.end9
  %3 = bitcast i32** %b_dist_v to i8*, !dbg !6941
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !6941
  %call19 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base) #8, !dbg !6942
  %4 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !6943
  %tobool21 = icmp eq %struct.VEC_lambda_vector_heap* %4, null, !dbg !6943
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !6943

cond.true22:                                      ; preds = %if.then12
  %base24 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %4, i64 0, i32 0, !dbg !6943
  br label %cond.end26, !dbg !6943

cond.end26:                                       ; preds = %if.then12, %cond.true22
  %cond27 = phi %struct.VEC_lambda_vector_base* [ %base24, %cond.true22 ], [ null, %if.then12 ], !dbg !6943
  %call28 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond27) #8, !dbg !6943
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.129, i64 0, i64 0), i32 %call19, i32 %call28) #7, !dbg !6944
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.130, i64 0, i64 0)) #7, !dbg !6945
  call void @llvm.dbg.value(metadata i32 0, metadata !6915, metadata !DIExpression()), !dbg !6930
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !6946
  br label %for.cond, !dbg !6949

for.cond:                                         ; preds = %cond.end44, %cond.end26
  %i.0 = phi i32 [ 0, %cond.end26 ], [ %inc, %cond.end44 ], !dbg !6950
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6915, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32** %b_dist_v, metadata !6917, metadata !DIExpression(DW_OP_deref)), !dbg !6951
  %call37 = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %base, i32 %i.0, i32** nonnull %b_dist_v) #8, !dbg !6952
  %tobool38 = icmp eq i32 %call37, 0, !dbg !6953
  br i1 %tobool38, label %for.end, label %for.body, !dbg !6953

for.body:                                         ; preds = %for.cond
  %5 = load i32*, i32** %b_dist_v, align 8, !dbg !6954
  call void @llvm.dbg.value(metadata i32* %5, metadata !6917, metadata !DIExpression()), !dbg !6951
  %6 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6955
  %tobool39 = icmp eq %struct.VEC_loop_p_heap* %6, null, !dbg !6955
  br i1 %tobool39, label %cond.end44, label %cond.true40, !dbg !6955

cond.true40:                                      ; preds = %for.body
  %base42 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %6, i64 0, i32 0, !dbg !6955
  br label %cond.end44, !dbg !6955

cond.end44:                                       ; preds = %for.body, %cond.true40
  %cond45 = phi %struct.VEC_loop_p_base* [ %base42, %cond.true40 ], [ null, %for.body ], !dbg !6955
  %call46 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond45) #8, !dbg !6955
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %file.addr.0, i32* %5, i32 %call46) #8, !dbg !6956
  %inc = add i32 %i.0, 1, !dbg !6957
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6915, metadata !DIExpression()), !dbg !6930
  br label %for.cond, !dbg !6958, !llvm.loop !6959

for.end:                                          ; preds = %for.cond
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.131, i64 0, i64 0)) #7, !dbg !6961
  call void @llvm.dbg.value(metadata i32 0, metadata !6915, metadata !DIExpression()), !dbg !6930
  br label %for.cond48, !dbg !6962

for.cond48:                                       ; preds = %cond.end75, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc79, %cond.end75 ], !dbg !6964
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !6915, metadata !DIExpression()), !dbg !6930
  %7 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !6965
  %tobool50 = icmp eq %struct.VEC_lambda_vector_heap* %7, null, !dbg !6965
  br i1 %tobool50, label %cond.end55, label %cond.true51, !dbg !6965

cond.true51:                                      ; preds = %for.cond48
  %base53 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %7, i64 0, i32 0, !dbg !6965
  br label %cond.end55, !dbg !6965

cond.end55:                                       ; preds = %for.cond48, %cond.true51
  %cond56 = phi %struct.VEC_lambda_vector_base* [ %base53, %cond.true51 ], [ null, %for.cond48 ], !dbg !6965
  %call57 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond56) #8, !dbg !6965
  %cmp58 = icmp ult i32 %i.1, %call57, !dbg !6967
  br i1 %cmp58, label %for.body59, label %for.end80, !dbg !6968

for.body59:                                       ; preds = %cond.end55
  %8 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !6969
  %tobool61 = icmp eq %struct.VEC_lambda_vector_heap* %8, null, !dbg !6969
  br i1 %tobool61, label %cond.end66, label %cond.true62, !dbg !6969

cond.true62:                                      ; preds = %for.body59
  %base64 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %8, i64 0, i32 0, !dbg !6969
  br label %cond.end66, !dbg !6969

cond.end66:                                       ; preds = %for.body59, %cond.true62
  %cond67 = phi %struct.VEC_lambda_vector_base* [ %base64, %cond.true62 ], [ null, %for.body59 ], !dbg !6969
  %call68 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond67, i32 %i.1) #8, !dbg !6969
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !6970
  %tobool70 = icmp eq %struct.VEC_loop_p_heap* %9, null, !dbg !6970
  br i1 %tobool70, label %cond.end75, label %cond.true71, !dbg !6970

cond.true71:                                      ; preds = %cond.end66
  %base73 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !6970
  br label %cond.end75, !dbg !6970

cond.end75:                                       ; preds = %cond.end66, %cond.true71
  %cond76 = phi %struct.VEC_loop_p_base* [ %base73, %cond.true71 ], [ null, %cond.end66 ], !dbg !6970
  %call77 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond76) #8, !dbg !6970
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %file.addr.0, i32* %call68, i32 %call77) #8, !dbg !6971
  %inc79 = add i32 %i.1, 1, !dbg !6972
  call void @llvm.dbg.value(metadata i32 %inc79, metadata !6915, metadata !DIExpression()), !dbg !6930
  br label %for.cond48, !dbg !6973, !llvm.loop !6974

for.end80:                                        ; preds = %cond.end55
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i64 0, i64 0)) #7, !dbg !6976
  call void @dump_data_dependence_relation(%struct._IO_FILE* %file.addr.0, %struct.data_dependence_relation* %ddr) #8, !dbg !6977
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !6978
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !6979
  br label %cleanup

if.end83:                                         ; preds = %cond.end9
  %base86 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %dir_vects, i64 0, i32 0, !dbg !6980
  %call90 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base86) #8, !dbg !6980
  %dir_vects91 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 5, !dbg !6982
  %10 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects91, align 8, !dbg !6982
  %tobool92 = icmp eq %struct.VEC_lambda_vector_heap* %10, null, !dbg !6982
  br i1 %tobool92, label %cond.end97, label %cond.true93, !dbg !6982

cond.true93:                                      ; preds = %if.end83
  %base95 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %10, i64 0, i32 0, !dbg !6982
  br label %cond.end97, !dbg !6982

cond.end97:                                       ; preds = %if.end83, %cond.true93
  %cond98 = phi %struct.VEC_lambda_vector_base* [ %base95, %cond.true93 ], [ null, %if.end83 ], !dbg !6982
  %call99 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond98) #8, !dbg !6982
  %cmp100 = icmp eq i32 %call90, %call99, !dbg !6983
  br i1 %cmp100, label %for.cond120.preheader, label %if.then101, !dbg !6984

for.cond120.preheader:                            ; preds = %cond.end97
  %11 = bitcast i32** %a_dist_v to i8*, !dbg !6985
  %loop_nest152 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !6986
  br label %for.cond120, !dbg !6990

if.then101:                                       ; preds = %cond.end97
  %call108 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base86) #8, !dbg !6991
  %12 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects91, align 8, !dbg !6993
  %tobool110 = icmp eq %struct.VEC_lambda_vector_heap* %12, null, !dbg !6993
  br i1 %tobool110, label %cond.end115, label %cond.true111, !dbg !6993

cond.true111:                                     ; preds = %if.then101
  %base113 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %12, i64 0, i32 0, !dbg !6993
  br label %cond.end115, !dbg !6993

cond.end115:                                      ; preds = %if.then101, %cond.true111
  %cond116 = phi %struct.VEC_lambda_vector_base* [ %base113, %cond.true111 ], [ null, %if.then101 ], !dbg !6993
  %call117 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond116) #8, !dbg !6993
  %call118 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.133, i64 0, i64 0), i32 %call108, i32 %call117) #7, !dbg !6994
  br label %cleanup, !dbg !6995

for.cond120:                                      ; preds = %for.cond120.preheader, %if.end200
  %i.2 = phi i32 [ %inc202, %if.end200 ], [ 0, %for.cond120.preheader ], !dbg !6996
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6915, metadata !DIExpression()), !dbg !6930
  %13 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !6997
  %tobool122 = icmp eq %struct.VEC_lambda_vector_heap* %13, null, !dbg !6997
  br i1 %tobool122, label %cond.end127, label %cond.true123, !dbg !6997

cond.true123:                                     ; preds = %for.cond120
  %base125 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %13, i64 0, i32 0, !dbg !6997
  br label %cond.end127, !dbg !6997

cond.end127:                                      ; preds = %for.cond120, %cond.true123
  %cond128 = phi %struct.VEC_lambda_vector_base* [ %base125, %cond.true123 ], [ null, %for.cond120 ], !dbg !6997
  %call129 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond128) #8, !dbg !6997
  %cmp130 = icmp ult i32 %i.2, %call129, !dbg !6998
  br i1 %cmp130, label %for.body131, label %for.cond204.preheader, !dbg !6990

for.cond204.preheader:                            ; preds = %cond.end127
  %14 = bitcast i32** %a_dir_v to i8*, !dbg !6999
  br label %for.cond204, !dbg !7000

for.body131:                                      ; preds = %cond.end127
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !7001
  %15 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !7002
  %tobool134 = icmp eq %struct.VEC_lambda_vector_heap* %15, null, !dbg !7002
  br i1 %tobool134, label %cond.end139, label %cond.true135, !dbg !7002

cond.true135:                                     ; preds = %for.body131
  %base137 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %15, i64 0, i32 0, !dbg !7002
  br label %cond.end139, !dbg !7002

cond.end139:                                      ; preds = %for.body131, %cond.true135
  %cond140 = phi %struct.VEC_lambda_vector_base* [ %base137, %cond.true135 ], [ null, %for.body131 ], !dbg !7002
  %call141 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond140, i32 %i.2) #8, !dbg !7002
  call void @llvm.dbg.value(metadata i32* %call141, metadata !6924, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.value(metadata i32 0, metadata !6916, metadata !DIExpression()), !dbg !6930
  br label %for.cond142, !dbg !7003

for.cond142:                                      ; preds = %for.inc165, %cond.end139
  %j.0 = phi i32 [ 0, %cond.end139 ], [ %inc166, %for.inc165 ], !dbg !7004
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32** %a_dist_v, metadata !6920, metadata !DIExpression(DW_OP_deref)), !dbg !6985
  %call149 = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %base, i32 %j.0, i32** nonnull %a_dist_v) #8, !dbg !7005
  %tobool150 = icmp eq i32 %call149, 0, !dbg !7006
  br i1 %tobool150, label %for.end167, label %for.body151, !dbg !7006

for.body151:                                      ; preds = %for.cond142
  %16 = load i32*, i32** %a_dist_v, align 8, !dbg !7007
  call void @llvm.dbg.value(metadata i32* %16, metadata !6920, metadata !DIExpression()), !dbg !6985
  %17 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7008
  %tobool153 = icmp eq %struct.VEC_loop_p_heap* %17, null, !dbg !7008
  br i1 %tobool153, label %cond.end158, label %cond.true154, !dbg !7008

cond.true154:                                     ; preds = %for.body151
  %base156 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %17, i64 0, i32 0, !dbg !7008
  br label %cond.end158, !dbg !7008

cond.end158:                                      ; preds = %for.body151, %cond.true154
  %cond159 = phi %struct.VEC_loop_p_base* [ %base156, %cond.true154 ], [ null, %for.body151 ], !dbg !7008
  %call160 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond159) #8, !dbg !7008
  %call161 = call fastcc zeroext i8 @lambda_vector_equal(i32* %16, i32* %call141, i32 %call160) #8, !dbg !7009
  %tobool162 = icmp eq i8 %call161, 0, !dbg !7009
  br i1 %tobool162, label %for.inc165, label %for.end167, !dbg !7010

for.inc165:                                       ; preds = %cond.end158
  %inc166 = add i32 %j.0, 1, !dbg !7011
  call void @llvm.dbg.value(metadata i32 %inc166, metadata !6916, metadata !DIExpression()), !dbg !6930
  br label %for.cond142, !dbg !7012, !llvm.loop !7013

for.end167:                                       ; preds = %cond.end158, %for.cond142
  %j.0.lcssa = phi i32 [ %j.0, %cond.end158 ], [ %j.0, %for.cond142 ], !dbg !7004
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  %call174 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base) #8, !dbg !7015
  %cmp175 = icmp eq i32 %j.0.lcssa, %call174, !dbg !7017
  br i1 %cmp175, label %if.then176, label %if.end200, !dbg !7018

if.then176:                                       ; preds = %for.end167
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.134, i64 0, i64 0)) #7, !dbg !7019
  %18 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7021
  %tobool179 = icmp eq %struct.VEC_loop_p_heap* %18, null, !dbg !7021
  br i1 %tobool179, label %cond.end184, label %cond.true180, !dbg !7021

cond.true180:                                     ; preds = %if.then176
  %base182 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %18, i64 0, i32 0, !dbg !7021
  br label %cond.end184, !dbg !7021

cond.end184:                                      ; preds = %if.then176, %cond.true180
  %cond185 = phi %struct.VEC_loop_p_base* [ %base182, %cond.true180 ], [ null, %if.then176 ], !dbg !7021
  %call186 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond185) #8, !dbg !7021
  call void @print_dist_vectors(%struct._IO_FILE* %file.addr.0, %struct.VEC_lambda_vector_heap* %dist_vects, i32 %call186) #8, !dbg !7022
  %call187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.135, i64 0, i64 0)) #7, !dbg !7023
  %19 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects3, align 8, !dbg !7024
  %20 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7025
  %tobool190 = icmp eq %struct.VEC_loop_p_heap* %20, null, !dbg !7025
  br i1 %tobool190, label %cond.end195, label %cond.true191, !dbg !7025

cond.true191:                                     ; preds = %cond.end184
  %base193 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %20, i64 0, i32 0, !dbg !7025
  br label %cond.end195, !dbg !7025

cond.end195:                                      ; preds = %cond.end184, %cond.true191
  %cond196 = phi %struct.VEC_loop_p_base* [ %base193, %cond.true191 ], [ null, %cond.end184 ], !dbg !7025
  %call197 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond196) #8, !dbg !7025
  call void @print_dist_vectors(%struct._IO_FILE* %file.addr.0, %struct.VEC_lambda_vector_heap* %19, i32 %call197) #8, !dbg !7026
  %call198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i64 0, i64 0)) #7, !dbg !7027
  call void @dump_data_dependence_relation(%struct._IO_FILE* %file.addr.0, %struct.data_dependence_relation* %ddr) #8, !dbg !7028
  %call199 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7029
  br label %if.end200, !dbg !7030

if.end200:                                        ; preds = %cond.end195, %for.end167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !7031
  %inc202 = add i32 %i.2, 1, !dbg !7032
  call void @llvm.dbg.value(metadata i32 %inc202, metadata !6915, metadata !DIExpression()), !dbg !6930
  br label %for.cond120, !dbg !7033, !llvm.loop !7034

for.cond204:                                      ; preds = %for.cond204.preheader, %if.end283
  %i.3 = phi i32 [ %inc285, %if.end283 ], [ 0, %for.cond204.preheader ], !dbg !7036
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !6915, metadata !DIExpression()), !dbg !6930
  %21 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects91, align 8, !dbg !7037
  %tobool206 = icmp eq %struct.VEC_lambda_vector_heap* %21, null, !dbg !7037
  br i1 %tobool206, label %cond.end211, label %cond.true207, !dbg !7037

cond.true207:                                     ; preds = %for.cond204
  %base209 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %21, i64 0, i32 0, !dbg !7037
  br label %cond.end211, !dbg !7037

cond.end211:                                      ; preds = %for.cond204, %cond.true207
  %cond212 = phi %struct.VEC_lambda_vector_base* [ %base209, %cond.true207 ], [ null, %for.cond204 ], !dbg !7037
  %call213 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond212) #8, !dbg !7037
  %cmp214 = icmp ult i32 %i.3, %call213, !dbg !7038
  br i1 %cmp214, label %for.body215, label %cleanup.loopexit, !dbg !7000

for.body215:                                      ; preds = %cond.end211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6, !dbg !7039
  %22 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects91, align 8, !dbg !7040
  %tobool217 = icmp eq %struct.VEC_lambda_vector_heap* %22, null, !dbg !7040
  br i1 %tobool217, label %cond.end222, label %cond.true218, !dbg !7040

cond.true218:                                     ; preds = %for.body215
  %base220 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %22, i64 0, i32 0, !dbg !7040
  br label %cond.end222, !dbg !7040

cond.end222:                                      ; preds = %for.body215, %cond.true218
  %cond223 = phi %struct.VEC_lambda_vector_base* [ %base220, %cond.true218 ], [ null, %for.body215 ], !dbg !7040
  %call224 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond223, i32 %i.3) #8, !dbg !7040
  call void @llvm.dbg.value(metadata i32* %call224, metadata !6929, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i32 0, metadata !6916, metadata !DIExpression()), !dbg !6930
  br label %for.cond225, !dbg !7041

for.cond225:                                      ; preds = %for.inc248, %cond.end222
  %j.1 = phi i32 [ 0, %cond.end222 ], [ %inc249, %for.inc248 ], !dbg !7043
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32** %a_dir_v, metadata !6925, metadata !DIExpression(DW_OP_deref)), !dbg !6999
  %call232 = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %base86, i32 %j.1, i32** nonnull %a_dir_v) #8, !dbg !7044
  %tobool233 = icmp eq i32 %call232, 0, !dbg !7046
  br i1 %tobool233, label %for.end250, label %for.body234, !dbg !7046

for.body234:                                      ; preds = %for.cond225
  %23 = load i32*, i32** %a_dir_v, align 8, !dbg !7047
  call void @llvm.dbg.value(metadata i32* %23, metadata !6925, metadata !DIExpression()), !dbg !6999
  %24 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7049
  %tobool236 = icmp eq %struct.VEC_loop_p_heap* %24, null, !dbg !7049
  br i1 %tobool236, label %cond.end241, label %cond.true237, !dbg !7049

cond.true237:                                     ; preds = %for.body234
  %base239 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %24, i64 0, i32 0, !dbg !7049
  br label %cond.end241, !dbg !7049

cond.end241:                                      ; preds = %for.body234, %cond.true237
  %cond242 = phi %struct.VEC_loop_p_base* [ %base239, %cond.true237 ], [ null, %for.body234 ], !dbg !7049
  %call243 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond242) #8, !dbg !7049
  %call244 = call fastcc zeroext i8 @lambda_vector_equal(i32* %23, i32* %call224, i32 %call243) #8, !dbg !7050
  %tobool245 = icmp eq i8 %call244, 0, !dbg !7050
  br i1 %tobool245, label %for.inc248, label %for.end250, !dbg !7051

for.inc248:                                       ; preds = %cond.end241
  %inc249 = add i32 %j.1, 1, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %inc249, metadata !6916, metadata !DIExpression()), !dbg !6930
  br label %for.cond225, !dbg !7053, !llvm.loop !7054

for.end250:                                       ; preds = %cond.end241, %for.cond225
  %j.1.lcssa = phi i32 [ %j.1, %cond.end241 ], [ %j.1, %for.cond225 ], !dbg !7043
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 %j.1.lcssa, metadata !6916, metadata !DIExpression()), !dbg !6930
  %call257 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %base) #8, !dbg !7056
  %cmp258 = icmp eq i32 %j.1.lcssa, %call257, !dbg !7058
  br i1 %cmp258, label %if.then259, label %if.end283, !dbg !7059

if.then259:                                       ; preds = %for.end250
  %call260 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.136, i64 0, i64 0)) #7, !dbg !7060
  %25 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7062
  %tobool262 = icmp eq %struct.VEC_loop_p_heap* %25, null, !dbg !7062
  br i1 %tobool262, label %cond.end267, label %cond.true263, !dbg !7062

cond.true263:                                     ; preds = %if.then259
  %base265 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %25, i64 0, i32 0, !dbg !7062
  br label %cond.end267, !dbg !7062

cond.end267:                                      ; preds = %if.then259, %cond.true263
  %cond268 = phi %struct.VEC_loop_p_base* [ %base265, %cond.true263 ], [ null, %if.then259 ], !dbg !7062
  %call269 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond268) #8, !dbg !7062
  call void @print_dir_vectors(%struct._IO_FILE* %file.addr.0, %struct.VEC_lambda_vector_heap* %dir_vects, i32 %call269) #8, !dbg !7063
  %call270 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.137, i64 0, i64 0)) #7, !dbg !7064
  %26 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects91, align 8, !dbg !7065
  %27 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest152, align 8, !dbg !7066
  %tobool273 = icmp eq %struct.VEC_loop_p_heap* %27, null, !dbg !7066
  br i1 %tobool273, label %cond.end278, label %cond.true274, !dbg !7066

cond.true274:                                     ; preds = %cond.end267
  %base276 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %27, i64 0, i32 0, !dbg !7066
  br label %cond.end278, !dbg !7066

cond.end278:                                      ; preds = %cond.end267, %cond.true274
  %cond279 = phi %struct.VEC_loop_p_base* [ %base276, %cond.true274 ], [ null, %cond.end267 ], !dbg !7066
  %call280 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond279) #8, !dbg !7066
  call void @print_dir_vectors(%struct._IO_FILE* %file.addr.0, %struct.VEC_lambda_vector_heap* %26, i32 %call280) #8, !dbg !7067
  %call281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i64 0, i64 0)) #7, !dbg !7068
  call void @dump_data_dependence_relation(%struct._IO_FILE* %file.addr.0, %struct.data_dependence_relation* %ddr) #8, !dbg !7069
  %call282 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file.addr.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7070
  br label %if.end283, !dbg !7071

if.end283:                                        ; preds = %cond.end278, %for.end250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6, !dbg !7072
  %inc285 = add i32 %i.3, 1, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %inc285, metadata !6915, metadata !DIExpression()), !dbg !6930
  br label %for.cond204, !dbg !7074, !llvm.loop !7075

cleanup.loopexit:                                 ; preds = %cond.end211
  br label %cleanup, !dbg !7077

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end115, %for.end80
  %retval.0 = phi i8 [ 0, %for.end80 ], [ 0, %cond.end115 ], [ 1, %cleanup.loopexit ], !dbg !6930
  ret i8 %retval.0, !dbg !7077
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @finalize_ddr_dependent(%struct.data_dependence_relation* %ddr, %union.tree_node* %chrec) unnamed_addr #0 !dbg !7078 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !7082, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !7083, metadata !DIExpression()), !dbg !7084
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7085
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !7085
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7087

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !7088
  %and = and i32 %1, 8, !dbg !7089
  %tobool1 = icmp eq i32 %and, 0, !dbg !7089
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7090

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.138, i64 0, i64 0)) #7, !dbg !7091
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7093
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %chrec, i32 0) #7, !dbg !7094
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7095
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7096
  br label %if.end, !dbg !7097

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !7098
  store %union.tree_node* %chrec, %union.tree_node** %are_dependent, align 8, !dbg !7099
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !7100
  %4 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !7100
  tail call fastcc void @free_subscripts(%struct.VEC_subscript_p_heap* %4) #8, !dbg !7101
  store %struct.VEC_subscript_p_heap* null, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !7102
  ret void, !dbg !7103
}

declare dso_local zeroext i8 @evolution_function_is_invariant_p(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @subscript_dependence_tester_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %dra, %struct.data_reference* %drb, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !7104 {
entry:
  %last_conflicts = alloca %union.tree_node*, align 8
  %subscript = alloca %struct.subscript*, align 8
  %overlaps_a = alloca %struct.conflict_function*, align 8
  %overlaps_b = alloca %struct.conflict_function*, align 8
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !7108, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata %struct.data_reference* %dra, metadata !7109, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata %struct.data_reference* %drb, metadata !7110, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !7111, metadata !DIExpression()), !dbg !7120
  %0 = bitcast %union.tree_node** %last_conflicts to i8*, !dbg !7121
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7121
  %1 = bitcast %struct.subscript** %subscript to i8*, !dbg !7122
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7122
  call void @llvm.dbg.value(metadata i32 0, metadata !7112, metadata !DIExpression()), !dbg !7120
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !7123
  %2 = bitcast %struct.conflict_function** %overlaps_a to i8*, !dbg !7124
  %3 = bitcast %struct.conflict_function** %overlaps_b to i8*, !dbg !7124
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dra, i64 0, i32 5, i32 1, !dbg !7124
  %access_fns13 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb, i64 0, i32 5, i32 1, !dbg !7124
  %4 = bitcast %struct.conflict_function** %overlaps_a to i64*, !dbg !7125
  %5 = bitcast %struct.subscript** %subscript to i64**, !dbg !7125
  %6 = bitcast %struct.conflict_function** %overlaps_b to i64*, !dbg !7125
  %7 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7125
  br label %for.cond, !dbg !7129

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc45, %for.inc ], !dbg !7130
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7112, metadata !DIExpression()), !dbg !7120
  %8 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !7131
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %8, null, !dbg !7131
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7131

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %8, i64 0, i32 0, !dbg !7131
  br label %cond.end, !dbg !7131

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7131
  call void @llvm.dbg.value(metadata %struct.subscript** %subscript, metadata !7114, metadata !DIExpression(DW_OP_deref)), !dbg !7120
  %call = call fastcc i32 @VEC_subscript_p_base_iterate(%struct.VEC_subscript_p_base* %cond, i32 %i.0, %struct.subscript** nonnull %subscript) #8, !dbg !7131
  %tobool2 = icmp eq i32 %call, 0, !dbg !7132
  br i1 %tobool2, label %cleanup46, label %for.body, !dbg !7132

for.body:                                         ; preds = %cond.end
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !7133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !7133
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !7134
  %tobool3 = icmp eq %struct.VEC_tree_heap* %9, null, !dbg !7134
  br i1 %tobool3, label %cond.end9, label %cond.true4, !dbg !7134

cond.true4:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !7134
  br label %cond.end9, !dbg !7134

cond.end9:                                        ; preds = %for.body, %cond.true4
  %cond10 = phi %struct.VEC_tree_base* [ %base7, %cond.true4 ], [ null, %for.body ], !dbg !7134
  %call11 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond10, i32 %i.0) #8, !dbg !7134
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns13, align 8, !dbg !7135
  %tobool14 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !7135
  br i1 %tobool14, label %cond.end20, label %cond.true15, !dbg !7135

cond.true15:                                      ; preds = %cond.end9
  %base18 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !7135
  br label %cond.end20, !dbg !7135

cond.end20:                                       ; preds = %cond.end9, %cond.true15
  %cond21 = phi %struct.VEC_tree_base* [ %base18, %cond.true15 ], [ null, %cond.end9 ], !dbg !7135
  %call22 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond21, i32 %i.0) #8, !dbg !7135
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !7113, metadata !DIExpression(DW_OP_deref)), !dbg !7120
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !7115, metadata !DIExpression(DW_OP_deref)), !dbg !7124
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !7119, metadata !DIExpression(DW_OP_deref)), !dbg !7124
  call fastcc void @analyze_overlapping_iterations(%union.tree_node* %call11, %union.tree_node* %call22, %struct.conflict_function** nonnull %overlaps_a, %struct.conflict_function** nonnull %overlaps_b, %union.tree_node** nonnull %last_conflicts, %struct.loop* %loop_nest) #8, !dbg !7136
  %11 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7137
  call void @llvm.dbg.value(metadata %struct.conflict_function* %11, metadata !7115, metadata !DIExpression()), !dbg !7124
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %11, i64 0, i32 0, !dbg !7137
  %12 = load i32, i32* %n, align 8, !dbg !7137
  %cmp = icmp eq i32 %12, 3, !dbg !7137
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7138

lor.lhs.false:                                    ; preds = %cond.end20
  %13 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7139
  call void @llvm.dbg.value(metadata %struct.conflict_function* %13, metadata !7119, metadata !DIExpression()), !dbg !7124
  %n23 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %13, i64 0, i32 0, !dbg !7139
  %14 = load i32, i32* %n23, align 8, !dbg !7139
  %cmp24 = icmp eq i32 %14, 3, !dbg !7139
  br i1 %cmp24, label %if.then, label %if.else, !dbg !7140

if.then:                                          ; preds = %lor.lhs.false, %cond.end20
  %15 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !7141
  call fastcc void @finalize_ddr_dependent(%struct.data_dependence_relation* %ddr, %union.tree_node* %15) #8, !dbg !7143
  %16 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 3), align 4, !dbg !7144
  %inc = add nsw i32 %16, 1, !dbg !7144
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 3), align 4, !dbg !7144
  %17 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7145
  call void @llvm.dbg.value(metadata %struct.conflict_function* %17, metadata !7115, metadata !DIExpression()), !dbg !7124
  call fastcc void @free_conflict_function(%struct.conflict_function* %17) #8, !dbg !7146
  %18 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7147
  call void @llvm.dbg.value(metadata %struct.conflict_function* %18, metadata !7119, metadata !DIExpression()), !dbg !7124
  call fastcc void @free_conflict_function(%struct.conflict_function* %18) #8, !dbg !7148
  br label %cleanup, !dbg !7149

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.conflict_function* %11, metadata !7115, metadata !DIExpression()), !dbg !7124
  %cmp26 = icmp eq i32 %12, 0, !dbg !7150
  br i1 %cmp26, label %if.then30, label %lor.lhs.false27, !dbg !7151

lor.lhs.false27:                                  ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.conflict_function* %13, metadata !7119, metadata !DIExpression()), !dbg !7124
  %cmp29 = icmp eq i32 %14, 0, !dbg !7152
  br i1 %cmp29, label %if.then30, label %if.else32, !dbg !7153

if.then30:                                        ; preds = %lor.lhs.false27, %if.else
  %19 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !7154
  call fastcc void @finalize_ddr_dependent(%struct.data_dependence_relation* %ddr, %union.tree_node* %19) #8, !dbg !7156
  %20 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 2), align 4, !dbg !7157
  %inc31 = add nsw i32 %20, 1, !dbg !7157
  store i32 %inc31, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 2), align 4, !dbg !7157
  %21 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7158
  call void @llvm.dbg.value(metadata %struct.conflict_function* %21, metadata !7115, metadata !DIExpression()), !dbg !7124
  call fastcc void @free_conflict_function(%struct.conflict_function* %21) #8, !dbg !7159
  %22 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7160
  call void @llvm.dbg.value(metadata %struct.conflict_function* %22, metadata !7119, metadata !DIExpression()), !dbg !7124
  call fastcc void @free_conflict_function(%struct.conflict_function* %22) #8, !dbg !7161
  br label %cleanup, !dbg !7162

if.else32:                                        ; preds = %lor.lhs.false27
  %23 = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.subscript* %23, metadata !7114, metadata !DIExpression()), !dbg !7120
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %23, i64 0, i32 0, !dbg !7163
  %24 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !7163
  %tobool33 = icmp eq %struct.conflict_function* %24, null, !dbg !7163
  br i1 %tobool33, label %if.end, label %if.then34, !dbg !7165

if.then34:                                        ; preds = %if.else32
  call void @llvm.dbg.value(metadata %struct.subscript* %23, metadata !7114, metadata !DIExpression()), !dbg !7120
  call fastcc void @free_conflict_function(%struct.conflict_function* nonnull %24) #8, !dbg !7166
  %.pre = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !7167
  br label %if.end, !dbg !7166

if.end:                                           ; preds = %if.else32, %if.then34
  %.in = phi %struct.subscript* [ %23, %if.else32 ], [ %.pre, %if.then34 ]
  %25 = phi %struct.subscript* [ %23, %if.else32 ], [ %.pre, %if.then34 ], !dbg !7167
  %26 = bitcast %struct.subscript* %.in to i64*, !dbg !7125
  call void @llvm.dbg.value(metadata %struct.subscript* %25, metadata !7114, metadata !DIExpression()), !dbg !7120
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %25, i64 0, i32 1, !dbg !7167
  %27 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !7167
  %tobool36 = icmp eq %struct.conflict_function* %27, null, !dbg !7167
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !7169

if.then37:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.subscript* %25, metadata !7114, metadata !DIExpression()), !dbg !7120
  call fastcc void @free_conflict_function(%struct.conflict_function* nonnull %27) #8, !dbg !7170
  %.pre2 = load i64*, i64** %5, align 8, !dbg !7171
  br label %if.end39, !dbg !7170

if.end39:                                         ; preds = %if.end, %if.then37
  %28 = phi i64* [ %26, %if.end ], [ %.pre2, %if.then37 ], !dbg !7171
  %29 = load i64, i64* %4, align 8, !dbg !7172
  store i64 %29, i64* %28, align 8, !dbg !7173
  %30 = load i64, i64* %6, align 8, !dbg !7174
  %31 = load %struct.subscript*, %struct.subscript** %subscript, align 8, !dbg !7175
  call void @llvm.dbg.value(metadata %struct.subscript* %31, metadata !7114, metadata !DIExpression()), !dbg !7120
  %conflicting_iterations_in_b41 = getelementptr inbounds %struct.subscript, %struct.subscript* %31, i64 0, i32 1, !dbg !7175
  %32 = bitcast %struct.conflict_function** %conflicting_iterations_in_b41 to i64*, !dbg !7176
  store i64 %30, i64* %32, align 8, !dbg !7176
  %33 = load i64, i64* %7, align 8, !dbg !7177
  call void @llvm.dbg.value(metadata %struct.subscript* %31, metadata !7114, metadata !DIExpression()), !dbg !7120
  %last_conflict = getelementptr inbounds %struct.subscript, %struct.subscript* %31, i64 0, i32 2, !dbg !7178
  %34 = bitcast %union.tree_node** %last_conflict to i64*, !dbg !7179
  store i64 %33, i64* %34, align 8, !dbg !7179
  br label %cleanup, !dbg !7180

cleanup:                                          ; preds = %if.end39, %if.then30, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ false, %if.then30 ], [ true, %if.end39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !7180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !7180
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup46

for.inc:                                          ; preds = %cleanup
  %inc45 = add i32 %i.0, 1, !dbg !7181
  call void @llvm.dbg.value(metadata i32 %inc45, metadata !7112, metadata !DIExpression()), !dbg !7120
  br label %for.cond, !dbg !7182, !llvm.loop !7183

cleanup46:                                        ; preds = %cond.end, %cleanup
  %retval.2 = phi i8 [ 0, %cleanup ], [ 1, %cond.end ], !dbg !7120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !7185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7185
  ret i8 %retval.2, !dbg !7185
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_subscript_distance(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !7186 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !7188, metadata !DIExpression()), !dbg !7201
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !7202
  %0 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !7202
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !7203
  br i1 %cmp, label %for.cond.preheader, label %cleanup.cont35, !dbg !7204

for.cond.preheader:                               ; preds = %entry
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !7205
  br label %for.cond, !dbg !7206

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !7207
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7194, metadata !DIExpression()), !dbg !7208
  %1 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !7209
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %1, null, !dbg !7209
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7209

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %1, i64 0, i32 0, !dbg !7209
  br label %cond.end, !dbg !7209

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7209
  %call = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond) #8, !dbg !7209
  %cmp2 = icmp ult i32 %i.0, %call, !dbg !7210
  br i1 %cmp2, label %for.body, label %cleanup25, !dbg !7206

for.body:                                         ; preds = %cond.end
  %2 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !7211
  %tobool4 = icmp eq %struct.VEC_subscript_p_heap* %2, null, !dbg !7211
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !7211

cond.true5:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !7211
  br label %cond.end9, !dbg !7211

cond.end9:                                        ; preds = %for.body, %cond.true5
  %cond10 = phi %struct.VEC_subscript_p_base* [ %base7, %cond.true5 ], [ null, %for.body ], !dbg !7211
  %call11 = tail call fastcc %struct.subscript* @VEC_subscript_p_base_index(%struct.VEC_subscript_p_base* %cond10, i32 %i.0) #8, !dbg !7211
  call void @llvm.dbg.value(metadata %struct.subscript* %call11, metadata !7197, metadata !DIExpression()), !dbg !7212
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %call11, i64 0, i32 0, !dbg !7213
  %3 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !7213
  call void @llvm.dbg.value(metadata %struct.conflict_function* %3, metadata !7189, metadata !DIExpression()), !dbg !7201
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %call11, i64 0, i32 1, !dbg !7214
  %4 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !7214
  call void @llvm.dbg.value(metadata %struct.conflict_function* %4, metadata !7190, metadata !DIExpression()), !dbg !7201
  %call12 = tail call fastcc %struct.VEC_tree_heap* @common_affine_function(%struct.conflict_function* %3) #8, !dbg !7215
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call12, metadata !7191, metadata !DIExpression()), !dbg !7201
  %call13 = tail call fastcc %struct.VEC_tree_heap* @common_affine_function(%struct.conflict_function* %4) #8, !dbg !7216
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call13, metadata !7192, metadata !DIExpression()), !dbg !7201
  %tobool14 = icmp ne %struct.VEC_tree_heap* %call12, null, !dbg !7217
  %tobool15 = icmp ne %struct.VEC_tree_heap* %call13, null, !dbg !7219
  %or.cond = and i1 %tobool14, %tobool15, !dbg !7220
  br i1 %or.cond, label %if.end, label %if.then16, !dbg !7220

if.then16:                                        ; preds = %cond.end9
  %5 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7221
  %distance = getelementptr inbounds %struct.subscript, %struct.subscript* %call11, i64 0, i32 3, !dbg !7223
  %6 = bitcast %union.tree_node** %distance to i64*, !dbg !7224
  store i64 %5, i64* %6, align 8, !dbg !7224
  br label %cleanup, !dbg !7225

if.end:                                           ; preds = %cond.end9
  %call17 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_minus(%struct.VEC_tree_heap* nonnull %call12, %struct.VEC_tree_heap* nonnull %call13) #8, !dbg !7226
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call17, metadata !7193, metadata !DIExpression()), !dbg !7201
  %call18 = tail call fastcc zeroext i8 @affine_function_constant_p(%struct.VEC_tree_heap* %call17) #8, !dbg !7227
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7227
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !7229

if.then20:                                        ; preds = %if.end
  %call21 = tail call fastcc %union.tree_node* @affine_function_base(%struct.VEC_tree_heap* %call17) #8, !dbg !7230
  %distance22 = getelementptr inbounds %struct.subscript, %struct.subscript* %call11, i64 0, i32 3, !dbg !7231
  store %union.tree_node* %call21, %union.tree_node** %distance22, align 8, !dbg !7232
  br label %if.end24, !dbg !7231

if.else:                                          ; preds = %if.end
  %7 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7233
  %distance23 = getelementptr inbounds %struct.subscript, %struct.subscript* %call11, i64 0, i32 3, !dbg !7234
  %8 = bitcast %union.tree_node** %distance23 to i64*, !dbg !7235
  store i64 %7, i64* %8, align 8, !dbg !7235
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then20
  tail call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %call17) #8, !dbg !7236
  br label %cleanup, !dbg !7237

cleanup:                                          ; preds = %if.end24, %if.then16
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end24 ], [ false, %if.then16 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup25

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !7238
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7194, metadata !DIExpression()), !dbg !7208
  br label %for.cond, !dbg !7239, !llvm.loop !7240

cleanup25:                                        ; preds = %cond.end, %cleanup
  ret void

cleanup.cont35:                                   ; preds = %entry
  ret void, !dbg !7242
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @build_classic_dist_vector(%struct.data_dependence_relation* %ddr, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !7243 {
entry:
  %init_b = alloca i8, align 1
  %index_carry = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !7247, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !7248, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !7249, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %init_b) #6, !dbg !7266
  call void @llvm.dbg.value(metadata i8 0, metadata !7249, metadata !DIExpression()), !dbg !7265
  store i8 0, i8* %init_b, align 1, !dbg !7267
  %0 = bitcast i32* %index_carry to i8*, !dbg !7268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !7268
  %loop_nest1 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !7269
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7269
  %tobool = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !7269
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7269

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !7269
  br label %cond.end, !dbg !7269

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7269
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !7269
  call void @llvm.dbg.value(metadata i32 %call, metadata !7250, metadata !DIExpression()), !dbg !7265
  store i32 %call, i32* %index_carry, align 4, !dbg !7270
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !7271
  %2 = load %union.tree_node*, %union.tree_node** %are_dependent, align 8, !dbg !7271
  %cmp = icmp eq %union.tree_node* %2, null, !dbg !7273
  br i1 %cmp, label %if.end, label %cleanup204, !dbg !7274

if.end:                                           ; preds = %cond.end
  %call3 = tail call fastcc zeroext i8 @same_access_functions(%struct.data_dependence_relation* %ddr) #8, !dbg !7275
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7275
  %3 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7265
  %tobool7 = icmp ne %struct.VEC_loop_p_heap* %3, null, !dbg !7265
  br i1 %tobool4, label %if.end32, label %if.then5, !dbg !7277

if.then5:                                         ; preds = %if.end
  br i1 %tobool7, label %cond.true8, label %cond.end12, !dbg !7278

cond.true8:                                       ; preds = %if.then5
  %base10 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !7278
  br label %cond.end12, !dbg !7278

cond.end12:                                       ; preds = %if.then5, %cond.true8
  %cond13 = phi %struct.VEC_loop_p_base* [ %base10, %cond.true8 ], [ null, %if.then5 ], !dbg !7278
  %call14 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond13) #8, !dbg !7278
  %call15 = tail call fastcc i32* @lambda_vector_new(i32 %call14) #8, !dbg !7280
  call void @llvm.dbg.value(metadata i32* %call15, metadata !7251, metadata !DIExpression()), !dbg !7265
  tail call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call15) #8, !dbg !7281
  %call16 = tail call fastcc zeroext i8 @constant_access_functions(%struct.data_dependence_relation* %ddr) #8, !dbg !7282
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7282
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7284

if.then18:                                        ; preds = %cond.end12
  tail call fastcc void @add_distance_for_zero_overlaps(%struct.data_dependence_relation* %ddr) #8, !dbg !7285
  br label %if.end19, !dbg !7285

if.end19:                                         ; preds = %cond.end12, %if.then18
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7286
  %tobool21 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !7286
  br i1 %tobool21, label %cond.end26, label %cond.true22, !dbg !7286

cond.true22:                                      ; preds = %if.end19
  %base24 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %4, i64 0, i32 0, !dbg !7286
  br label %cond.end26, !dbg !7286

cond.end26:                                       ; preds = %if.end19, %cond.true22
  %cond27 = phi %struct.VEC_loop_p_base* [ %base24, %cond.true22 ], [ null, %if.end19 ], !dbg !7286
  %call28 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond27) #8, !dbg !7286
  %cmp29 = icmp ugt i32 %call28, 1, !dbg !7288
  br i1 %cmp29, label %if.then30, label %cleanup204, !dbg !7289

if.then30:                                        ; preds = %cond.end26
  tail call fastcc void @add_other_self_distances(%struct.data_dependence_relation* %ddr) #8, !dbg !7290
  br label %cleanup204, !dbg !7290

if.end32:                                         ; preds = %if.end
  br i1 %tobool7, label %cond.true35, label %cond.end39, !dbg !7291

cond.true35:                                      ; preds = %if.end32
  %base37 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !7291
  br label %cond.end39, !dbg !7291

cond.end39:                                       ; preds = %if.end32, %cond.true35
  %cond40 = phi %struct.VEC_loop_p_base* [ %base37, %cond.true35 ], [ null, %if.end32 ], !dbg !7291
  %call41 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond40) #8, !dbg !7291
  %call42 = tail call fastcc i32* @lambda_vector_new(i32 %call41) #8, !dbg !7292
  call void @llvm.dbg.value(metadata i32* %call42, metadata !7251, metadata !DIExpression()), !dbg !7265
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !7293
  %5 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !7293
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !7295
  %6 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !7295
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !7249, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  call void @llvm.dbg.value(metadata i32* %index_carry, metadata !7250, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  %call43 = call fastcc zeroext i8 @build_classic_dist_vector_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %5, %struct.data_reference* %6, i32* %call42, i8* nonnull %init_b, i32* nonnull %index_carry) #8, !dbg !7296
  %tobool44 = icmp eq i8 %call43, 0, !dbg !7296
  br i1 %tobool44, label %cleanup204, label %if.end46, !dbg !7297

if.end46:                                         ; preds = %cond.end39
  %7 = load i8, i8* %init_b, align 1, !dbg !7298
  call void @llvm.dbg.value(metadata i8 %7, metadata !7249, metadata !DIExpression()), !dbg !7265
  %tobool47 = icmp eq i8 %7, 0, !dbg !7298
  %8 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7299
  %tobool50 = icmp ne %struct.VEC_loop_p_heap* %8, null, !dbg !7299
  br i1 %tobool47, label %if.else157, label %if.then48, !dbg !7300

if.then48:                                        ; preds = %if.end46
  br i1 %tobool50, label %cond.true51, label %cond.end55, !dbg !7301

cond.true51:                                      ; preds = %if.then48
  %base53 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %8, i64 0, i32 0, !dbg !7301
  br label %cond.end55, !dbg !7301

cond.end55:                                       ; preds = %if.then48, %cond.true51
  %cond56 = phi %struct.VEC_loop_p_base* [ %base53, %cond.true51 ], [ null, %if.then48 ], !dbg !7301
  %call57 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond56) #8, !dbg !7301
  %call58 = call fastcc zeroext i8 @lambda_vector_lexico_pos(i32* %call42, i32 %call57) #8, !dbg !7302
  %tobool59 = icmp eq i8 %call58, 0, !dbg !7302
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7303
  %tobool97 = icmp ne %struct.VEC_loop_p_heap* %9, null, !dbg !7303
  br i1 %tobool59, label %if.then60, label %if.else, !dbg !7304

if.then60:                                        ; preds = %cond.end55
  br i1 %tobool97, label %cond.true63, label %cond.end67, !dbg !7305

cond.true63:                                      ; preds = %if.then60
  %base65 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !7305
  br label %cond.end67, !dbg !7305

cond.end67:                                       ; preds = %if.then60, %cond.true63
  %cond68 = phi %struct.VEC_loop_p_base* [ %base65, %cond.true63 ], [ null, %if.then60 ], !dbg !7305
  %call69 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond68) #8, !dbg !7305
  %call70 = call fastcc i32* @lambda_vector_new(i32 %call69) #8, !dbg !7306
  call void @llvm.dbg.value(metadata i32* %call70, metadata !7252, metadata !DIExpression()), !dbg !7307
  %10 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !7308
  %11 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !7310
  %call73 = call fastcc zeroext i8 @subscript_dependence_tester_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %10, %struct.data_reference* %11, %struct.loop* %loop_nest) #8, !dbg !7311
  %tobool74 = icmp eq i8 %call73, 0, !dbg !7311
  br i1 %tobool74, label %cleanup, label %if.end76, !dbg !7312

if.end76:                                         ; preds = %cond.end67
  call fastcc void @compute_subscript_distance(%struct.data_dependence_relation* %ddr) #8, !dbg !7313
  %12 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !7314
  %13 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !7316
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !7249, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  call void @llvm.dbg.value(metadata i32* %index_carry, metadata !7250, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  %call79 = call fastcc zeroext i8 @build_classic_dist_vector_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %12, %struct.data_reference* %13, i32* %call70, i8* nonnull %init_b, i32* nonnull %index_carry) #8, !dbg !7317
  %tobool80 = icmp eq i8 %call79, 0, !dbg !7317
  br i1 %tobool80, label %cleanup, label %if.end82, !dbg !7318

if.end82:                                         ; preds = %if.end76
  call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call70) #8, !dbg !7319
  %reversed_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 8, !dbg !7320
  store i8 1, i8* %reversed_p, align 4, !dbg !7321
  %14 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7322
  %tobool84 = icmp eq %struct.VEC_loop_p_heap* %14, null, !dbg !7322
  br i1 %tobool84, label %cond.end89, label %cond.true85, !dbg !7322

cond.true85:                                      ; preds = %if.end82
  %base87 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %14, i64 0, i32 0, !dbg !7322
  br label %cond.end89, !dbg !7322

cond.end89:                                       ; preds = %if.end82, %cond.true85
  %cond90 = phi %struct.VEC_loop_p_base* [ %base87, %cond.true85 ], [ null, %if.end82 ], !dbg !7322
  %call91 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond90) #8, !dbg !7322
  %cmp92 = icmp ugt i32 %call91, 1, !dbg !7324
  br i1 %cmp92, label %if.then93, label %cleanup, !dbg !7325

if.then93:                                        ; preds = %cond.end89
  %15 = load i32, i32* %index_carry, align 4, !dbg !7326
  call void @llvm.dbg.value(metadata i32 %15, metadata !7250, metadata !DIExpression()), !dbg !7265
  call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call70, i32 %15) #8, !dbg !7328
  %16 = load i32, i32* %index_carry, align 4, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %16, metadata !7250, metadata !DIExpression()), !dbg !7265
  call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call42, i32 %16) #8, !dbg !7330
  br label %cleanup, !dbg !7331

cleanup:                                          ; preds = %if.end76, %cond.end67, %cond.end89, %if.then93
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end67 ], [ false, %if.end76 ], [ true, %if.then93 ], [ true, %cond.end89 ]
  br i1 %cleanup.dest.slot.0, label %if.end168, label %cleanup204

if.else:                                          ; preds = %cond.end55
  br i1 %tobool97, label %cond.true98, label %cond.end102, !dbg !7332

cond.true98:                                      ; preds = %if.else
  %base100 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !7332
  br label %cond.end102, !dbg !7332

cond.end102:                                      ; preds = %if.else, %cond.true98
  %cond103 = phi %struct.VEC_loop_p_base* [ %base100, %cond.true98 ], [ null, %if.else ], !dbg !7332
  %call104 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond103) #8, !dbg !7332
  %call105 = call fastcc i32* @lambda_vector_new(i32 %call104) #8, !dbg !7333
  call void @llvm.dbg.value(metadata i32* %call105, metadata !7257, metadata !DIExpression()), !dbg !7334
  %17 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7335
  %tobool107 = icmp eq %struct.VEC_loop_p_heap* %17, null, !dbg !7335
  br i1 %tobool107, label %cond.end112, label %cond.true108, !dbg !7335

cond.true108:                                     ; preds = %cond.end102
  %base110 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %17, i64 0, i32 0, !dbg !7335
  br label %cond.end112, !dbg !7335

cond.end112:                                      ; preds = %cond.end102, %cond.true108
  %cond113 = phi %struct.VEC_loop_p_base* [ %base110, %cond.true108 ], [ null, %cond.end102 ], !dbg !7335
  %call114 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond113) #8, !dbg !7335
  call fastcc void @lambda_vector_copy(i32* %call42, i32* %call105, i32 %call114) #8, !dbg !7336
  %18 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7337
  %tobool116 = icmp eq %struct.VEC_loop_p_heap* %18, null, !dbg !7337
  br i1 %tobool116, label %cond.end121, label %cond.true117, !dbg !7337

cond.true117:                                     ; preds = %cond.end112
  %base119 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %18, i64 0, i32 0, !dbg !7337
  br label %cond.end121, !dbg !7337

cond.end121:                                      ; preds = %cond.end112, %cond.true117
  %cond122 = phi %struct.VEC_loop_p_base* [ %base119, %cond.true117 ], [ null, %cond.end112 ], !dbg !7337
  %call123 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond122) #8, !dbg !7337
  %cmp124 = icmp ugt i32 %call123, 1, !dbg !7338
  br i1 %cmp124, label %if.then125, label %if.else151, !dbg !7339

if.then125:                                       ; preds = %cond.end121
  %19 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7340
  %tobool127 = icmp eq %struct.VEC_loop_p_heap* %19, null, !dbg !7340
  br i1 %tobool127, label %cond.end132, label %cond.true128, !dbg !7340

cond.true128:                                     ; preds = %if.then125
  %base130 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %19, i64 0, i32 0, !dbg !7340
  br label %cond.end132, !dbg !7340

cond.end132:                                      ; preds = %if.then125, %cond.true128
  %cond133 = phi %struct.VEC_loop_p_base* [ %base130, %cond.true128 ], [ null, %if.then125 ], !dbg !7340
  %call134 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond133) #8, !dbg !7340
  %call135 = call fastcc i32* @lambda_vector_new(i32 %call134) #8, !dbg !7341
  call void @llvm.dbg.value(metadata i32* %call135, metadata !7259, metadata !DIExpression()), !dbg !7342
  %20 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !7343
  %21 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !7345
  %call138 = call fastcc zeroext i8 @subscript_dependence_tester_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %20, %struct.data_reference* %21, %struct.loop* %loop_nest) #8, !dbg !7346
  %tobool139 = icmp eq i8 %call138, 0, !dbg !7346
  br i1 %tobool139, label %cleanup148, label %if.end141, !dbg !7347

if.end141:                                        ; preds = %cond.end132
  call fastcc void @compute_subscript_distance(%struct.data_dependence_relation* %ddr) #8, !dbg !7348
  %22 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !7349
  %23 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !7351
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !7249, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  call void @llvm.dbg.value(metadata i32* %index_carry, metadata !7250, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  %call144 = call fastcc zeroext i8 @build_classic_dist_vector_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %22, %struct.data_reference* %23, i32* %call135, i8* nonnull %init_b, i32* nonnull %index_carry) #8, !dbg !7352
  %tobool145 = icmp eq i8 %call144, 0, !dbg !7352
  br i1 %tobool145, label %cleanup148, label %if.end147, !dbg !7353

if.end147:                                        ; preds = %if.end141
  call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call105) #8, !dbg !7354
  %24 = load i32, i32* %index_carry, align 4, !dbg !7355
  call void @llvm.dbg.value(metadata i32 %24, metadata !7250, metadata !DIExpression()), !dbg !7265
  call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call42, i32 %24) #8, !dbg !7356
  %25 = load i32, i32* %index_carry, align 4, !dbg !7357
  call void @llvm.dbg.value(metadata i32 %25, metadata !7250, metadata !DIExpression()), !dbg !7265
  call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call135, i32 %25) #8, !dbg !7358
  br label %cleanup148, !dbg !7359

cleanup148:                                       ; preds = %if.end141, %cond.end132, %if.end147
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end147 ], [ 1, %cond.end132 ], [ 1, %if.end141 ]
  %cond3 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond3, label %if.end152, label %cleanup153

if.else151:                                       ; preds = %cond.end121
  call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call105) #8, !dbg !7360
  br label %if.end152

if.end152:                                        ; preds = %cleanup148, %if.else151
  br label %cleanup153, !dbg !7361

cleanup153:                                       ; preds = %cleanup148, %if.end152
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup148 ], [ 0, %if.end152 ], !dbg !7303
  %cond2 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond2, label %if.end168, label %cleanup204

if.else157:                                       ; preds = %if.end46
  br i1 %tobool50, label %cond.true160, label %cond.end164, !dbg !7362

cond.true160:                                     ; preds = %if.else157
  %base162 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %8, i64 0, i32 0, !dbg !7362
  br label %cond.end164, !dbg !7362

cond.end164:                                      ; preds = %if.else157, %cond.true160
  %cond165 = phi %struct.VEC_loop_p_base* [ %base162, %cond.true160 ], [ null, %if.else157 ], !dbg !7362
  %call166 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond165) #8, !dbg !7362
  %call167 = call fastcc i32 @lambda_vector_first_nz(i32* %call42, i32 %call166, i32 0) #8, !dbg !7364
  call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call42, i32 %call167) #8, !dbg !7365
  br label %if.end168

if.end168:                                        ; preds = %cleanup, %cleanup153, %cond.end164
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7366
  %tobool169 = icmp eq %struct._IO_FILE* %26, null, !dbg !7366
  br i1 %tobool169, label %cleanup204, label %land.lhs.true, !dbg !7367

land.lhs.true:                                    ; preds = %if.end168
  %27 = load i32, i32* @dump_flags, align 4, !dbg !7368
  %and = and i32 %27, 8, !dbg !7369
  %tobool170 = icmp eq i32 %and, 0, !dbg !7369
  br i1 %tobool170, label %cleanup204, label %if.then171, !dbg !7370

if.then171:                                       ; preds = %land.lhs.true
  %call172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.125, i64 0, i64 0)) #7, !dbg !7371
  call void @llvm.dbg.value(metadata i32 0, metadata !7262, metadata !DIExpression()), !dbg !7372
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !7373
  br label %for.cond, !dbg !7376

for.cond:                                         ; preds = %cond.end198, %if.then171
  %i.0 = phi i32 [ 0, %if.then171 ], [ %inc, %cond.end198 ], !dbg !7377
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7262, metadata !DIExpression()), !dbg !7372
  %28 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !7378
  %tobool173 = icmp eq %struct.VEC_lambda_vector_heap* %28, null, !dbg !7378
  br i1 %tobool173, label %cond.end178, label %cond.true174, !dbg !7378

cond.true174:                                     ; preds = %for.cond
  %base176 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %28, i64 0, i32 0, !dbg !7378
  br label %cond.end178, !dbg !7378

cond.end178:                                      ; preds = %for.cond, %cond.true174
  %cond179 = phi %struct.VEC_lambda_vector_base* [ %base176, %cond.true174 ], [ null, %for.cond ], !dbg !7378
  %call180 = call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond179) #8, !dbg !7378
  %cmp181 = icmp ult i32 %i.0, %call180, !dbg !7379
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7372
  br i1 %cmp181, label %for.body, label %for.end, !dbg !7380

for.body:                                         ; preds = %cond.end178
  %call182 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i64 0, i64 0)) #7, !dbg !7381
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7383
  %31 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !7384
  %tobool184 = icmp eq %struct.VEC_lambda_vector_heap* %31, null, !dbg !7384
  br i1 %tobool184, label %cond.end189, label %cond.true185, !dbg !7384

cond.true185:                                     ; preds = %for.body
  %base187 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %31, i64 0, i32 0, !dbg !7384
  br label %cond.end189, !dbg !7384

cond.end189:                                      ; preds = %for.body, %cond.true185
  %cond190 = phi %struct.VEC_lambda_vector_base* [ %base187, %cond.true185 ], [ null, %for.body ], !dbg !7384
  %call191 = call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond190, i32 %i.0) #8, !dbg !7384
  %32 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest1, align 8, !dbg !7385
  %tobool193 = icmp eq %struct.VEC_loop_p_heap* %32, null, !dbg !7385
  br i1 %tobool193, label %cond.end198, label %cond.true194, !dbg !7385

cond.true194:                                     ; preds = %cond.end189
  %base196 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %32, i64 0, i32 0, !dbg !7385
  br label %cond.end198, !dbg !7385

cond.end198:                                      ; preds = %cond.end189, %cond.true194
  %cond199 = phi %struct.VEC_loop_p_base* [ %base196, %cond.true194 ], [ null, %cond.end189 ], !dbg !7385
  %call200 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond199) #8, !dbg !7385
  call fastcc void @print_lambda_vector(%struct._IO_FILE* %30, i32* %call191, i32 %call200) #8, !dbg !7386
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7387
  %call201 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #7, !dbg !7388
  %inc = add i32 %i.0, 1, !dbg !7389
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7262, metadata !DIExpression()), !dbg !7372
  br label %for.cond, !dbg !7390, !llvm.loop !7391

for.end:                                          ; preds = %cond.end178
  %.lcssa = phi %struct._IO_FILE* [ %29, %cond.end178 ], !dbg !7372
  %call202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7393
  br label %cleanup204, !dbg !7394

cleanup204:                                       ; preds = %land.lhs.true, %if.end168, %cond.end39, %cond.end, %for.end, %cond.end26, %if.then30, %cleanup153, %cleanup
  %retval.4 = phi i8 [ 0, %cleanup153 ], [ 0, %cleanup ], [ 0, %cond.end ], [ 1, %if.then30 ], [ 1, %cond.end26 ], [ 0, %cond.end39 ], [ 1, %for.end ], [ 1, %land.lhs.true ], [ 1, %if.end168 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !7395
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !7249, metadata !DIExpression(DW_OP_deref)), !dbg !7265
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %init_b) #6, !dbg !7395
  ret i8 %retval.4, !dbg !7395
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_classic_dir_vector(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !7396 {
entry:
  %dist_v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !7398, metadata !DIExpression()), !dbg !7406
  %0 = bitcast i32** %dist_v to i8*, !dbg !7407
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7399, metadata !DIExpression()), !dbg !7406
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !7408
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !7409
  br label %for.cond, !dbg !7410

for.cond:                                         ; preds = %for.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc27, %for.end ], !dbg !7411
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7399, metadata !DIExpression()), !dbg !7406
  %1 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !7412
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %1, null, !dbg !7412
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7412

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %1, i64 0, i32 0, !dbg !7412
  br label %cond.end, !dbg !7412

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7412
  call void @llvm.dbg.value(metadata i32** %dist_v, metadata !7401, metadata !DIExpression(DW_OP_deref)), !dbg !7406
  %call = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %cond, i32 %i.0, i32** nonnull %dist_v) #8, !dbg !7412
  %tobool2 = icmp eq i32 %call, 0, !dbg !7413
  br i1 %tobool2, label %for.end28, label %for.body, !dbg !7413

for.body:                                         ; preds = %cond.end
  %2 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !7414
  %tobool3 = icmp eq %struct.VEC_loop_p_heap* %2, null, !dbg !7414
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !7414

cond.true4:                                       ; preds = %for.body
  %base6 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %2, i64 0, i32 0, !dbg !7414
  br label %cond.end8, !dbg !7414

cond.end8:                                        ; preds = %for.body, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %for.body ], !dbg !7414
  %call10 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond9) #8, !dbg !7414
  %call11 = call fastcc i32* @lambda_vector_new(i32 %call10) #8, !dbg !7415
  call void @llvm.dbg.value(metadata i32* %call11, metadata !7402, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata i32 0, metadata !7400, metadata !DIExpression()), !dbg !7406
  br label %for.cond12, !dbg !7416

for.cond12:                                       ; preds = %for.body22, %cond.end8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ 0, %cond.end8 ], !dbg !7418
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7400, metadata !DIExpression()), !dbg !7406
  %3 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !7419
  %tobool14 = icmp eq %struct.VEC_loop_p_heap* %3, null, !dbg !7419
  br i1 %tobool14, label %cond.end19, label %cond.true15, !dbg !7419

cond.true15:                                      ; preds = %for.cond12
  %base17 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !7419
  br label %cond.end19, !dbg !7419

cond.end19:                                       ; preds = %for.cond12, %cond.true15
  %cond20 = phi %struct.VEC_loop_p_base* [ %base17, %cond.true15 ], [ null, %for.cond12 ], !dbg !7419
  %call21 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond20) #8, !dbg !7419
  %4 = zext i32 %call21 to i64, !dbg !7421
  %cmp = icmp ult i64 %indvars.iv, %4, !dbg !7421
  br i1 %cmp, label %for.body22, label %for.end, !dbg !7422

for.body22:                                       ; preds = %cond.end19
  %5 = load i32*, i32** %dist_v, align 8, !dbg !7423
  call void @llvm.dbg.value(metadata i32* %5, metadata !7401, metadata !DIExpression()), !dbg !7406
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %indvars.iv, !dbg !7423
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7423
  %call23 = call fastcc i32 @dir_from_dist(i32 %6) #8, !dbg !7424
  %arrayidx25 = getelementptr inbounds i32, i32* %call11, i64 %indvars.iv, !dbg !7425
  store i32 %call23, i32* %arrayidx25, align 4, !dbg !7426
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7427
  br label %for.cond12, !dbg !7428, !llvm.loop !7429

for.end:                                          ; preds = %cond.end19
  call fastcc void @save_dir_v(%struct.data_dependence_relation* %ddr, i32* %call11) #8, !dbg !7431
  %inc27 = add i32 %i.0, 1, !dbg !7432
  call void @llvm.dbg.value(metadata i32 %inc27, metadata !7399, metadata !DIExpression()), !dbg !7406
  br label %for.cond, !dbg !7433, !llvm.loop !7434

for.end28:                                        ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !7436
  ret void, !dbg !7436
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_subscript_p_base_iterate(%struct.VEC_subscript_p_base* %vec_, i32 %ix_, %struct.subscript** %ptr) unnamed_addr #0 !dbg !7437 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_base* %vec_, metadata !7441, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata %struct.subscript** %ptr, metadata !7443, metadata !DIExpression()), !dbg !7444
  %tobool = icmp eq %struct.VEC_subscript_p_base* %vec_, null, !dbg !7445
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7445

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 0, !dbg !7445
  %0 = load i32, i32* %num, align 8, !dbg !7445
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7445
  br i1 %cmp, label %if.then, label %if.else, !dbg !7447

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7448
  %arrayidx = getelementptr inbounds %struct.VEC_subscript_p_base, %struct.VEC_subscript_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7448
  %1 = load %struct.subscript*, %struct.subscript** %arrayidx, align 8, !dbg !7448
  br label %return, !dbg !7448

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7450

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.subscript* [ null, %if.else ], [ %1, %if.then ], !dbg !7452
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7452
  store %struct.subscript* %storemerge, %struct.subscript** %ptr, align 8, !dbg !7452
  ret i32 %retval.0, !dbg !7447
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_overlapping_iterations(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlap_iterations_a, %struct.conflict_function** %overlap_iterations_b, %union.tree_node** %last_conflicts, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !7453 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7458, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7459, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlap_iterations_a, metadata !7460, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlap_iterations_b, metadata !7461, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !7462, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !7463, metadata !DIExpression()), !dbg !7465
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop_nest, i64 0, i32 0, !dbg !7466
  %0 = load i32, i32* %num, align 8, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %0, metadata !7464, metadata !DIExpression()), !dbg !7465
  %1 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 4), align 4, !dbg !7467
  %inc = add nsw i32 %1, 1, !dbg !7467
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 4), align 4, !dbg !7467
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7468
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !7468
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7470

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !7471
  %and = and i32 %3, 8, !dbg !7472
  %tobool1 = icmp eq i32 %and, 0, !dbg !7472
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7473

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.104, i64 0, i64 0)) #7, !dbg !7474
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7476
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i64 0, i64 0)) #7, !dbg !7477
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7478
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %chrec_a, i32 0) #7, !dbg !7479
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7480
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.106, i64 0, i64 0)) #7, !dbg !7481
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7482
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %chrec_b, i32 0) #7, !dbg !7483
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7484
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7485
  br label %if.end, !dbg !7486

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %cmp = icmp eq %union.tree_node* %chrec_a, null, !dbg !7487
  %cmp5 = icmp eq %union.tree_node* %chrec_b, null, !dbg !7489
  %or.cond = or i1 %cmp, %cmp5, !dbg !7490
  br i1 %or.cond, label %if.then13, label %lor.lhs.false6, !dbg !7490

lor.lhs.false6:                                   ; preds = %if.end
  %call7 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %chrec_a) #7, !dbg !7491
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7491
  br i1 %tobool8, label %lor.lhs.false9, label %if.then13, !dbg !7492

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %call10 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %chrec_b) #7, !dbg !7493
  %tobool12 = icmp eq i8 %call10, 0, !dbg !7493
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !7494

if.then13:                                        ; preds = %lor.lhs.false9, %lor.lhs.false6, %if.end
  %9 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 5), align 4, !dbg !7495
  %inc14 = add nsw i32 %9, 1, !dbg !7495
  store i32 %inc14, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 5), align 4, !dbg !7495
  %call15 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7497
  store %struct.conflict_function* %call15, %struct.conflict_function** %overlap_iterations_a, align 8, !dbg !7498
  %call16 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7499
  store %struct.conflict_function* %call16, %struct.conflict_function** %overlap_iterations_b, align 8, !dbg !7500
  br label %if.end61, !dbg !7501

if.else:                                          ; preds = %lor.lhs.false9
  %call17 = tail call zeroext i8 @eq_evolutions_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) #7, !dbg !7502
  %tobool19 = icmp eq i8 %call17, 0, !dbg !7502
  br i1 %tobool19, label %if.else30, label %land.lhs.true20, !dbg !7504

land.lhs.true20:                                  ; preds = %if.else
  %call21 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %chrec_a, i32 %0) #7, !dbg !7505
  %tobool23 = icmp eq i8 %call21, 0, !dbg !7505
  br i1 %tobool23, label %if.else30, label %if.then24, !dbg !7506

if.then24:                                        ; preds = %land.lhs.true20
  %10 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 6), align 4, !dbg !7507
  %inc25 = add nsw i32 %10, 1, !dbg !7507
  store i32 %inc25, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 6), align 4, !dbg !7507
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7509
  %call26 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %11) #8, !dbg !7510
  %call27 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call26) #8, !dbg !7511
  store %struct.conflict_function* %call27, %struct.conflict_function** %overlap_iterations_a, align 8, !dbg !7512
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7513
  %call28 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %12) #8, !dbg !7514
  %call29 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call28) #8, !dbg !7515
  store %struct.conflict_function* %call29, %struct.conflict_function** %overlap_iterations_b, align 8, !dbg !7516
  %13 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7517
  %14 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7518
  store i64 %13, i64* %14, align 8, !dbg !7518
  br label %if.end61, !dbg !7519

if.else30:                                        ; preds = %land.lhs.true20, %if.else
  %call31 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %chrec_a) #7, !dbg !7520
  %tobool33 = icmp eq i8 %call31, 0, !dbg !7520
  br i1 %tobool33, label %lor.lhs.false34, label %land.lhs.true38, !dbg !7522

lor.lhs.false34:                                  ; preds = %if.else30
  %call35 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %chrec_b) #7, !dbg !7523
  %tobool37 = icmp eq i8 %call35, 0, !dbg !7523
  br i1 %tobool37, label %if.else48, label %land.lhs.true38, !dbg !7524

land.lhs.true38:                                  ; preds = %lor.lhs.false34, %if.else30
  %call39 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %chrec_a, i32 %0) #7, !dbg !7525
  %tobool40 = icmp eq i8 %call39, 0, !dbg !7525
  br i1 %tobool40, label %if.then44, label %lor.lhs.false41, !dbg !7526

lor.lhs.false41:                                  ; preds = %land.lhs.true38
  %call42 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %chrec_b, i32 %0) #7, !dbg !7527
  %tobool43 = icmp eq i8 %call42, 0, !dbg !7527
  br i1 %tobool43, label %if.then44, label %if.else48, !dbg !7528

if.then44:                                        ; preds = %lor.lhs.false41, %land.lhs.true38
  %15 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 5), align 4, !dbg !7529
  %inc45 = add nsw i32 %15, 1, !dbg !7529
  store i32 %inc45, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 5), align 4, !dbg !7529
  %call46 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7531
  store %struct.conflict_function* %call46, %struct.conflict_function** %overlap_iterations_a, align 8, !dbg !7532
  %call47 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7533
  store %struct.conflict_function* %call47, %struct.conflict_function** %overlap_iterations_b, align 8, !dbg !7534
  br label %if.end61, !dbg !7535

if.else48:                                        ; preds = %lor.lhs.false41, %lor.lhs.false34
  %call49 = tail call fastcc zeroext i8 @ziv_subscript_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) #8, !dbg !7536
  %tobool50 = icmp eq i8 %call49, 0, !dbg !7536
  br i1 %tobool50, label %if.else52, label %if.then51, !dbg !7538

if.then51:                                        ; preds = %if.else48
  tail call fastcc void @analyze_ziv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlap_iterations_a, %struct.conflict_function** %overlap_iterations_b, %union.tree_node** %last_conflicts) #8, !dbg !7539
  br label %if.end61, !dbg !7539

if.else52:                                        ; preds = %if.else48
  %call53 = tail call fastcc zeroext i8 @siv_subscript_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) #8, !dbg !7540
  %tobool54 = icmp eq i8 %call53, 0, !dbg !7540
  br i1 %tobool54, label %if.else56, label %if.then55, !dbg !7542

if.then55:                                        ; preds = %if.else52
  tail call fastcc void @analyze_siv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlap_iterations_a, %struct.conflict_function** %overlap_iterations_b, %union.tree_node** %last_conflicts, i32 %0) #8, !dbg !7543
  br label %if.end61, !dbg !7543

if.else56:                                        ; preds = %if.else52
  tail call fastcc void @analyze_miv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlap_iterations_a, %struct.conflict_function** %overlap_iterations_b, %union.tree_node** %last_conflicts, %struct.loop* %loop_nest) #8, !dbg !7544
  br label %if.end61

if.end61:                                         ; preds = %if.then24, %if.then51, %if.else56, %if.then55, %if.then44, %if.then13
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7545
  %tobool62 = icmp eq %struct._IO_FILE* %16, null, !dbg !7545
  br i1 %tobool62, label %if.end71, label %land.lhs.true63, !dbg !7547

land.lhs.true63:                                  ; preds = %if.end61
  %17 = load i32, i32* @dump_flags, align 4, !dbg !7548
  %and64 = and i32 %17, 8, !dbg !7549
  %tobool65 = icmp eq i32 %and64, 0, !dbg !7549
  br i1 %tobool65, label %if.end71, label %if.then66, !dbg !7550

if.then66:                                        ; preds = %land.lhs.true63
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.107, i64 0, i64 0)) #7, !dbg !7551
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7553
  %19 = load %struct.conflict_function*, %struct.conflict_function** %overlap_iterations_a, align 8, !dbg !7554
  tail call fastcc void @dump_conflict_function(%struct._IO_FILE* %18, %struct.conflict_function* %19) #8, !dbg !7555
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7556
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i64 0, i64 0)) #7, !dbg !7557
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7558
  %22 = load %struct.conflict_function*, %struct.conflict_function** %overlap_iterations_b, align 8, !dbg !7559
  tail call fastcc void @dump_conflict_function(%struct._IO_FILE* %21, %struct.conflict_function* %22) #8, !dbg !7560
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7561
  %call69 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7562
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7563
  %call70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7564
  br label %if.end71, !dbg !7565

if.end71:                                         ; preds = %land.lhs.true63, %if.end61, %if.then66
  ret void, !dbg !7566
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_conflict_function(%struct.conflict_function* %f) unnamed_addr #5 !dbg !7567 {
entry:
  call void @llvm.dbg.value(metadata %struct.conflict_function* %f, metadata !7571, metadata !DIExpression()), !dbg !7573
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %f, i64 0, i32 0, !dbg !7574
  %0 = load i32, i32* %n, align 8, !dbg !7574
  %cmp = icmp eq i32 %0, 0, !dbg !7574
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !7574

land.lhs.true:                                    ; preds = %entry
  %cmp2 = icmp eq i32 %0, 3, !dbg !7574
  br i1 %cmp2, label %if.end, label %for.cond.preheader, !dbg !7576

for.cond.preheader:                               ; preds = %land.lhs.true
  br label %for.cond, !dbg !7577

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !7580
  %1 = phi i32 [ %0, %for.cond.preheader ], [ %.pre, %for.body ], !dbg !7580
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7572, metadata !DIExpression()), !dbg !7573
  %2 = zext i32 %1 to i64, !dbg !7582
  %cmp4 = icmp ult i64 %indvars.iv, %2, !dbg !7582
  br i1 %cmp4, label %for.body, label %if.end.loopexit, !dbg !7577

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %f, i64 0, i32 1, i64 %indvars.iv, !dbg !7583
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx, align 8, !dbg !7583
  tail call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %3) #8, !dbg !7584
  %.pre = load i32, i32* %n, align 8, !dbg !7580
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7585
  br label %for.cond, !dbg !7586, !llvm.loop !7587

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !7589

if.end:                                           ; preds = %if.end.loopexit, %land.lhs.true, %entry
  %4 = bitcast %struct.conflict_function* %f to i8*, !dbg !7589
  tail call void @free(i8* %4) #7, !dbg !7590
  ret void, !dbg !7591
}

declare dso_local zeroext i8 @chrec_contains_undetermined(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @eq_evolutions_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %struct.conflict_function* @conflict_fn(i32 %n, ...) unnamed_addr #5 !dbg !7592 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %n, metadata !7596, metadata !DIExpression()), !dbg !7606
  %call = tail call i8* @xcalloc(i64 1, i64 24) #7, !dbg !7607
  %0 = bitcast i8* %call to %struct.conflict_function*, !dbg !7607
  call void @llvm.dbg.value(metadata %struct.conflict_function* %0, metadata !7598, metadata !DIExpression()), !dbg !7606
  %1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !7608
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #6, !dbg !7608
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7599, metadata !DIExpression()), !dbg !7609
  %n.off = add i32 %n, -1, !dbg !7610
  %2 = icmp ult i32 %n.off, 2, !dbg !7610
  br i1 %2, label %cond.end, label %cond.true, !dbg !7610

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1566, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !7610
  br label %cond.end, !dbg !7610

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.va_start(i8* %1), !dbg !7611
  %n3 = bitcast i8* %call to i32*, !dbg !7612
  store i32 %n, i32* %n3, align 8, !dbg !7613
  call void @llvm.dbg.value(metadata i32 0, metadata !7597, metadata !DIExpression()), !dbg !7606
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !7614
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !7614
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !7614
  %fns = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7614
  %4 = bitcast i8* %fns to [2 x %struct.VEC_tree_heap*]*, !dbg !7614
  %wide.trip.count = zext i32 %n to i64, !dbg !7617
  br label %for.cond, !dbg !7618

for.cond:                                         ; preds = %vaarg.end, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %vaarg.end ], [ 0, %cond.end ], !dbg !7619
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7597, metadata !DIExpression()), !dbg !7606
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !7617
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7620

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !7621
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !7621
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !7621

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %3, align 16, !dbg !7621
  %5 = sext i32 %gp_offset to i64, !dbg !7621
  %6 = getelementptr i8, i8* %reg_save_area, i64 %5, !dbg !7621
  %7 = add i32 %gp_offset, 8, !dbg !7621
  store i32 %7, i32* %gp_offset_p, align 16, !dbg !7621
  br label %vaarg.end, !dbg !7621

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !7621
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !7621
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !7621
  br label %vaarg.end, !dbg !7621

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %6, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %8 = bitcast i8* %vaarg.addr.in to i64*, !dbg !7621
  %9 = load i64, i64* %8, align 8, !dbg !7621
  %arrayidx = getelementptr inbounds [2 x %struct.VEC_tree_heap*], [2 x %struct.VEC_tree_heap*]* %4, i64 0, i64 %indvars.iv, !dbg !7622
  %10 = bitcast %struct.VEC_tree_heap** %arrayidx to i64*, !dbg !7623
  store i64 %9, i64* %10, align 8, !dbg !7623
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7624
  br label %for.cond, !dbg !7625, !llvm.loop !7626

for.end:                                          ; preds = %for.cond
  call void @llvm.va_end(i8* nonnull %1), !dbg !7628
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #6, !dbg !7629
  ret %struct.conflict_function* %0, !dbg !7630
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %cst) unnamed_addr #5 !dbg !7631 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !7635, metadata !DIExpression()), !dbg !7637
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 1) #8, !dbg !7638
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !7636, metadata !DIExpression()), !dbg !7637
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call, i64 0, i32 0, !dbg !7639
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %cst) #8, !dbg !7639
  ret %struct.VEC_tree_heap* %call, !dbg !7640
}

declare dso_local zeroext i8 @chrec_contains_symbols(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ziv_subscript_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) unnamed_addr #0 !dbg !7641 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7645, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7646, metadata !DIExpression()), !dbg !7647
  %call = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_a) #8, !dbg !7648
  %tobool = icmp eq i8 %call, 0, !dbg !7648
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7649

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_b) #8, !dbg !7650
  %tobool3 = icmp ne i8 %call1, 0, !dbg !7649
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !7651
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_ziv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) unnamed_addr #5 !dbg !7652 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7656, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7657, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !7658, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !7659, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !7660, metadata !DIExpression()), !dbg !7663
  %0 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 7), align 4, !dbg !7664
  %inc = add nsw i32 %0, 1, !dbg !7664
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 7), align 4, !dbg !7664
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7665
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !7665
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7667

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !7668
  %and = and i32 %2, 8, !dbg !7669
  %tobool1 = icmp eq i32 %and, 0, !dbg !7669
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7670

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0)) #7, !dbg !7671
  br label %if.end, !dbg !7671

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7672
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !7672
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7673
  %4 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !7673
  %call5 = tail call fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %3, %union.tree_node* %4) #8, !dbg !7674
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7661, metadata !DIExpression()), !dbg !7663
  %call6 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call5, %union.tree_node* %chrec_a, %union.gimple_statement_d* null) #7, !dbg !7675
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7656, metadata !DIExpression()), !dbg !7663
  %call7 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call5, %union.tree_node* %chrec_b, %union.gimple_statement_d* null) #7, !dbg !7676
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7657, metadata !DIExpression()), !dbg !7663
  %call8 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %call5, %union.tree_node* %call6, %union.tree_node* %call7) #7, !dbg !7677
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7662, metadata !DIExpression()), !dbg !7663
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7678
  %bf.load = load i64, i64* %5, align 8, !dbg !7678
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7679
  %cond = icmp eq i64 %bf.cast1, 23, !dbg !7679
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !7679

sw.bb:                                            ; preds = %if.end
  %call9 = tail call i32 @integer_zerop(%union.tree_node* %call8) #7, !dbg !7680
  %tobool10 = icmp eq i32 %call9, 0, !dbg !7680
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !7683

if.then11:                                        ; preds = %sw.bb
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7684
  %call12 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %6) #8, !dbg !7686
  %call13 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call12) #8, !dbg !7687
  store %struct.conflict_function* %call13, %struct.conflict_function** %overlaps_a, align 8, !dbg !7688
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7689
  %call14 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %7) #8, !dbg !7690
  %call15 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call14) #8, !dbg !7691
  store %struct.conflict_function* %call15, %struct.conflict_function** %overlaps_b, align 8, !dbg !7692
  %8 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7693
  %9 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7694
  store i64 %8, i64* %9, align 8, !dbg !7694
  %10 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 9), align 4, !dbg !7695
  %inc16 = add nsw i32 %10, 1, !dbg !7695
  store i32 %inc16, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 9), align 4, !dbg !7695
  br label %sw.epilog, !dbg !7696

if.else:                                          ; preds = %sw.bb
  %call17 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !7697
  store %struct.conflict_function* %call17, %struct.conflict_function** %overlaps_a, align 8, !dbg !7699
  %call18 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !7700
  store %struct.conflict_function* %call18, %struct.conflict_function** %overlaps_b, align 8, !dbg !7701
  %11 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !7702
  %12 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7703
  store i64 %11, i64* %12, align 8, !dbg !7703
  %13 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 8), align 4, !dbg !7704
  %inc19 = add nsw i32 %13, 1, !dbg !7704
  store i32 %inc19, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 8), align 4, !dbg !7704
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7705
  %tobool21 = icmp eq %struct._IO_FILE* %14, null, !dbg !7705
  br i1 %tobool21, label %if.end27, label %land.lhs.true22, !dbg !7707

land.lhs.true22:                                  ; preds = %sw.default
  %15 = load i32, i32* @dump_flags, align 4, !dbg !7708
  %and23 = and i32 %15, 8, !dbg !7709
  %tobool24 = icmp eq i32 %and23, 0, !dbg !7709
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !7710

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.110, i64 0, i64 0)) #7, !dbg !7711
  br label %if.end27, !dbg !7711

if.end27:                                         ; preds = %land.lhs.true22, %sw.default, %if.then25
  %call28 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7712
  store %struct.conflict_function* %call28, %struct.conflict_function** %overlaps_a, align 8, !dbg !7713
  %call29 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7714
  store %struct.conflict_function* %call29, %struct.conflict_function** %overlaps_b, align 8, !dbg !7715
  %16 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7716
  %17 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7717
  store i64 %16, i64* %17, align 8, !dbg !7717
  %18 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 10), align 4, !dbg !7718
  %inc30 = add nsw i32 %18, 1, !dbg !7718
  store i32 %inc30, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 10), align 4, !dbg !7718
  br label %sw.epilog, !dbg !7719

sw.epilog:                                        ; preds = %if.then11, %if.else, %if.end27
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7720
  %tobool31 = icmp eq %struct._IO_FILE* %19, null, !dbg !7720
  br i1 %tobool31, label %if.end37, label %land.lhs.true32, !dbg !7722

land.lhs.true32:                                  ; preds = %sw.epilog
  %20 = load i32, i32* @dump_flags, align 4, !dbg !7723
  %and33 = and i32 %20, 8, !dbg !7724
  %tobool34 = icmp eq i32 %and33, 0, !dbg !7724
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !7725

if.then35:                                        ; preds = %land.lhs.true32
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7726
  br label %if.end37, !dbg !7726

if.end37:                                         ; preds = %land.lhs.true32, %sw.epilog, %if.then35
  ret void, !dbg !7727
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @siv_subscript_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) unnamed_addr #5 !dbg !7728 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7730, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7731, metadata !DIExpression()), !dbg !7732
  %call = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_a) #8, !dbg !7733
  %tobool = icmp eq i8 %call, 0, !dbg !7733
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !7735

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call zeroext i8 @evolution_function_is_univariate_p(%union.tree_node* %chrec_b) #7, !dbg !7736
  %tobool3 = icmp eq i8 %call1, 0, !dbg !7736
  br i1 %tobool3, label %lor.lhs.false, label %return, !dbg !7737

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %call4 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_b) #8, !dbg !7738
  %tobool6 = icmp eq i8 %call4, 0, !dbg !7738
  br i1 %tobool6, label %if.end, label %land.lhs.true7, !dbg !7739

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %call8 = tail call zeroext i8 @evolution_function_is_univariate_p(%union.tree_node* %chrec_a) #7, !dbg !7740
  %tobool10 = icmp eq i8 %call8, 0, !dbg !7740
  br i1 %tobool10, label %if.end, label %return, !dbg !7741

if.end:                                           ; preds = %land.lhs.true7, %lor.lhs.false
  %call11 = tail call zeroext i8 @evolution_function_is_univariate_p(%union.tree_node* %chrec_a) #7, !dbg !7742
  %tobool13 = icmp eq i8 %call11, 0, !dbg !7742
  br i1 %tobool13, label %return, label %land.lhs.true14, !dbg !7744

land.lhs.true14:                                  ; preds = %if.end
  %call15 = tail call zeroext i8 @evolution_function_is_univariate_p(%union.tree_node* %chrec_b) #7, !dbg !7745
  %tobool17 = icmp eq i8 %call15, 0, !dbg !7745
  br i1 %tobool17, label %return, label %if.then18, !dbg !7746

if.then18:                                        ; preds = %land.lhs.true14
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7747
  %bf.load = load i64, i64* %0, align 8, !dbg !7747
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7749
  %cond = icmp eq i64 %bf.cast2, 146, !dbg !7749
  br i1 %cond, label %sw.bb, label %return, !dbg !7749

sw.bb:                                            ; preds = %if.then18
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7750
  %bf.load20 = load i64, i64* %1, align 8, !dbg !7750
  %bf.cast223 = and i64 %bf.load20, 65535, !dbg !7752
  %cond1 = icmp eq i64 %bf.cast223, 146, !dbg !7752
  br i1 %cond1, label %sw.bb23, label %sw.default, !dbg !7752

sw.bb23:                                          ; preds = %sw.bb
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7753
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7753
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !7753
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !7753
  %4 = load i64, i64* %low, align 8, !dbg !7753
  %operands26 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7756
  %5 = bitcast %union.tree_node** %operands26 to %struct.tree_int_cst**, !dbg !7756
  %6 = load %struct.tree_int_cst*, %struct.tree_int_cst** %5, align 8, !dbg !7756
  %low30 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %6, i64 0, i32 1, i32 0, !dbg !7756
  %7 = load i64, i64* %low30, align 8, !dbg !7756
  %cmp = icmp eq i64 %4, %7, !dbg !7757
  br i1 %cmp, label %sw.default, label %return, !dbg !7758

sw.default:                                       ; preds = %sw.bb23, %sw.bb
  br label %return, !dbg !7759

return:                                           ; preds = %land.lhs.true, %land.lhs.true7, %sw.bb23, %land.lhs.true14, %if.end, %if.then18, %sw.default
  %retval.0 = phi i8 [ 1, %sw.default ], [ 1, %land.lhs.true7 ], [ 1, %land.lhs.true ], [ 0, %sw.bb23 ], [ 1, %if.then18 ], [ 0, %land.lhs.true14 ], [ 0, %if.end ], !dbg !7732
  ret i8 %retval.0, !dbg !7760
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_siv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts, i32 %loop_nest_num) unnamed_addr #5 !dbg !7761 {
entry:
  %chrec_a.addr = alloca %union.tree_node*, align 8
  %chrec_b.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  store %union.tree_node* %chrec_a, %union.tree_node** %chrec_a.addr, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  store %union.tree_node* %chrec_b, %union.tree_node** %chrec_b.addr, align 8
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !7767, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !7768, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !7769, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata i32 %loop_nest_num, metadata !7770, metadata !DIExpression()), !dbg !7776
  %0 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 11), align 4, !dbg !7777
  %inc = add nsw i32 %0, 1, !dbg !7777
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 11), align 4, !dbg !7777
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7778
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !7778
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7780

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !7781
  %and = and i32 %2, 8, !dbg !7782
  %tobool1 = icmp eq i32 %and, 0, !dbg !7782
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7783

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111, i64 0, i64 0)) #7, !dbg !7784
  br label %if.end, !dbg !7784

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  %call2 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_a) #8, !dbg !7785
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7785
  br i1 %tobool3, label %if.else, label %land.lhs.true4, !dbg !7786

land.lhs.true4:                                   ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  %call5 = tail call fastcc zeroext i8 @evolution_function_is_affine_in_loop(%union.tree_node* %chrec_b, i32 %loop_nest_num) #8, !dbg !7787
  %tobool7 = icmp eq i8 %call5, 0, !dbg !7787
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !7788

if.then8:                                         ; preds = %land.lhs.true4
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  tail call fastcc void @analyze_siv_subscript_cst_affine(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) #8, !dbg !7789
  br label %if.end95, !dbg !7789

if.else:                                          ; preds = %land.lhs.true4, %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  %call9 = tail call fastcc zeroext i8 @evolution_function_is_affine_in_loop(%union.tree_node* %chrec_a, i32 %loop_nest_num) #8, !dbg !7790
  %tobool11 = icmp eq i8 %call9, 0, !dbg !7790
  br i1 %tobool11, label %if.else17, label %land.lhs.true12, !dbg !7791

land.lhs.true12:                                  ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  %call13 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec_b) #8, !dbg !7792
  %tobool15 = icmp eq i8 %call13, 0, !dbg !7792
  br i1 %tobool15, label %if.else17, label %if.then16, !dbg !7793

if.then16:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  tail call fastcc void @analyze_siv_subscript_cst_affine(%union.tree_node* %chrec_b, %union.tree_node* %chrec_a, %struct.conflict_function** %overlaps_b, %struct.conflict_function** %overlaps_a, %union.tree_node** %last_conflicts) #8, !dbg !7794
  br label %if.end95, !dbg !7794

if.else17:                                        ; preds = %land.lhs.true12, %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  %call18 = tail call fastcc zeroext i8 @evolution_function_is_affine_in_loop(%union.tree_node* %chrec_a, i32 %loop_nest_num) #8, !dbg !7795
  %tobool20 = icmp eq i8 %call18, 0, !dbg !7795
  br i1 %tobool20, label %siv_subscript_dontknow, label %land.lhs.true21, !dbg !7796

land.lhs.true21:                                  ; preds = %if.else17
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  %call22 = tail call fastcc zeroext i8 @evolution_function_is_affine_in_loop(%union.tree_node* %chrec_b, i32 %loop_nest_num) #8, !dbg !7797
  %tobool24 = icmp eq i8 %call22, 0, !dbg !7797
  br i1 %tobool24, label %siv_subscript_dontknow, label %if.then25, !dbg !7798

if.then25:                                        ; preds = %land.lhs.true21
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  %call26 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %chrec_a) #7, !dbg !7799
  %tobool27 = icmp eq i8 %call26, 0, !dbg !7799
  br i1 %tobool27, label %land.lhs.true28, label %if.else52, !dbg !7802

land.lhs.true28:                                  ; preds = %if.then25
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  %call29 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %chrec_b) #7, !dbg !7803
  %tobool30 = icmp eq i8 %call29, 0, !dbg !7803
  br i1 %tobool30, label %if.then31, label %if.else52, !dbg !7804

if.then31:                                        ; preds = %land.lhs.true28
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7765, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7766, metadata !DIExpression()), !dbg !7776
  tail call fastcc void @analyze_subscript_affine_affine(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) #8, !dbg !7805
  %3 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7807
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %3, i64 0, i32 0, !dbg !7807
  %4 = load i32, i32* %n, align 8, !dbg !7807
  %cmp = icmp eq i32 %4, 3, !dbg !7807
  br i1 %cmp, label %if.then36, label %lor.lhs.false, !dbg !7809

lor.lhs.false:                                    ; preds = %if.then31
  %5 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7810
  %n33 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %5, i64 0, i32 0, !dbg !7810
  %6 = load i32, i32* %n33, align 8, !dbg !7810
  %cmp34 = icmp eq i32 %6, 3, !dbg !7810
  br i1 %cmp34, label %if.then36, label %if.else38, !dbg !7811

if.then36:                                        ; preds = %lor.lhs.false, %if.then31
  %7 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7812
  %inc37 = add nsw i32 %7, 1, !dbg !7812
  store i32 %inc37, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7812
  br label %if.end95, !dbg !7813

if.else38:                                        ; preds = %lor.lhs.false
  %cmp40 = icmp eq i32 %4, 0, !dbg !7814
  br i1 %cmp40, label %if.then46, label %lor.lhs.false42, !dbg !7816

lor.lhs.false42:                                  ; preds = %if.else38
  %cmp44 = icmp eq i32 %6, 0, !dbg !7817
  br i1 %cmp44, label %if.then46, label %if.else48, !dbg !7818

if.then46:                                        ; preds = %lor.lhs.false42, %if.else38
  %8 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !7819
  %inc47 = add nsw i32 %8, 1, !dbg !7819
  store i32 %inc47, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !7819
  br label %if.end95, !dbg !7820

if.else48:                                        ; preds = %lor.lhs.false42
  %9 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !7821
  %inc49 = add nsw i32 %9, 1, !dbg !7821
  store i32 %inc49, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !7821
  br label %if.end95

if.else52:                                        ; preds = %land.lhs.true28, %if.then25
  call void @llvm.dbg.value(metadata %union.tree_node** %chrec_a.addr, metadata !7765, metadata !DIExpression(DW_OP_deref)), !dbg !7776
  call void @llvm.dbg.value(metadata %union.tree_node** %chrec_b.addr, metadata !7766, metadata !DIExpression(DW_OP_deref)), !dbg !7776
  %call53 = call fastcc zeroext i8 @can_use_analyze_subscript_affine_affine(%union.tree_node** nonnull %chrec_a.addr, %union.tree_node** nonnull %chrec_b.addr) #8, !dbg !7822
  %tobool54 = icmp eq i8 %call53, 0, !dbg !7822
  br i1 %tobool54, label %siv_subscript_dontknow, label %if.then55, !dbg !7824

if.then55:                                        ; preds = %if.else52
  %10 = load %union.tree_node*, %union.tree_node** %chrec_a.addr, align 8, !dbg !7825
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7765, metadata !DIExpression()), !dbg !7776
  %11 = load %union.tree_node*, %union.tree_node** %chrec_b.addr, align 8, !dbg !7827
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7766, metadata !DIExpression()), !dbg !7776
  call fastcc void @analyze_subscript_affine_affine(%union.tree_node* %10, %union.tree_node* %11, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) #8, !dbg !7828
  %12 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7829
  %n56 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %12, i64 0, i32 0, !dbg !7829
  %13 = load i32, i32* %n56, align 8, !dbg !7829
  %cmp57 = icmp eq i32 %13, 3, !dbg !7829
  br i1 %cmp57, label %if.then63, label %lor.lhs.false59, !dbg !7831

lor.lhs.false59:                                  ; preds = %if.then55
  %14 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7832
  %n60 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %14, i64 0, i32 0, !dbg !7832
  %15 = load i32, i32* %n60, align 8, !dbg !7832
  %cmp61 = icmp eq i32 %15, 3, !dbg !7832
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !7833

if.then63:                                        ; preds = %lor.lhs.false59, %if.then55
  %16 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7834
  %inc64 = add nsw i32 %16, 1, !dbg !7834
  store i32 %inc64, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7834
  br label %if.end95, !dbg !7835

if.else65:                                        ; preds = %lor.lhs.false59
  %cmp67 = icmp eq i32 %13, 0, !dbg !7836
  br i1 %cmp67, label %if.then73, label %lor.lhs.false69, !dbg !7838

lor.lhs.false69:                                  ; preds = %if.else65
  %cmp71 = icmp eq i32 %15, 0, !dbg !7839
  br i1 %cmp71, label %if.then73, label %if.else75, !dbg !7840

if.then73:                                        ; preds = %lor.lhs.false69, %if.else65
  %17 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !7841
  %inc74 = add nsw i32 %17, 1, !dbg !7841
  store i32 %inc74, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !7841
  br label %if.end95, !dbg !7842

if.else75:                                        ; preds = %lor.lhs.false69
  %18 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !7843
  %inc76 = add nsw i32 %18, 1, !dbg !7843
  store i32 %inc76, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !7843
  br label %if.end95

siv_subscript_dontknow:                           ; preds = %if.else52, %land.lhs.true21, %if.else17
  call void @llvm.dbg.label(metadata !7771), !dbg !7844
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7845
  %tobool83 = icmp eq %struct._IO_FILE* %19, null, !dbg !7845
  br i1 %tobool83, label %if.end89, label %land.lhs.true84, !dbg !7847

land.lhs.true84:                                  ; preds = %siv_subscript_dontknow
  %20 = load i32, i32* @dump_flags, align 4, !dbg !7848
  %and85 = and i32 %20, 8, !dbg !7849
  %tobool86 = icmp eq i32 %and85, 0, !dbg !7849
  br i1 %tobool86, label %if.end89, label %if.then87, !dbg !7850

if.then87:                                        ; preds = %land.lhs.true84
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.112, i64 0, i64 0)) #7, !dbg !7851
  br label %if.end89, !dbg !7851

if.end89:                                         ; preds = %land.lhs.true84, %siv_subscript_dontknow, %if.then87
  %call90 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7852
  store %struct.conflict_function* %call90, %struct.conflict_function** %overlaps_a, align 8, !dbg !7853
  %call91 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7854
  store %struct.conflict_function* %call91, %struct.conflict_function** %overlaps_b, align 8, !dbg !7855
  %21 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7856
  %22 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7857
  store i64 %21, i64* %22, align 8, !dbg !7857
  %23 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7858
  %inc92 = add nsw i32 %23, 1, !dbg !7858
  store i32 %inc92, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !7858
  br label %if.end95

if.end95:                                         ; preds = %if.then16, %if.then46, %if.else48, %if.then36, %if.then63, %if.else75, %if.then73, %if.end89, %if.then8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7859
  %tobool96 = icmp eq %struct._IO_FILE* %24, null, !dbg !7859
  br i1 %tobool96, label %if.end102, label %land.lhs.true97, !dbg !7861

land.lhs.true97:                                  ; preds = %if.end95
  %25 = load i32, i32* @dump_flags, align 4, !dbg !7862
  %and98 = and i32 %25, 8, !dbg !7863
  %tobool99 = icmp eq i32 %and98, 0, !dbg !7863
  br i1 %tobool99, label %if.end102, label %if.then100, !dbg !7864

if.then100:                                       ; preds = %land.lhs.true97
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7865
  br label %if.end102, !dbg !7865

if.end102:                                        ; preds = %land.lhs.true97, %if.end95, %if.then100
  ret void, !dbg !7866
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_miv_subscript(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts, %struct.loop* %loop_nest) unnamed_addr #5 !dbg !7867 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !7869, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !7870, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !7871, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !7872, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !7873, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata %struct.loop* %loop_nest, metadata !7874, metadata !DIExpression()), !dbg !7877
  %0 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 15), align 4, !dbg !7878
  %inc = add nsw i32 %0, 1, !dbg !7878
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 15), align 4, !dbg !7878
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7879
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !7879
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7881

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !7882
  %and = and i32 %2, 8, !dbg !7883
  %tobool1 = icmp eq i32 %and, 0, !dbg !7883
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7884

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #7, !dbg !7885
  br label %if.end, !dbg !7885

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7886
  %3 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !7886
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7887
  %4 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !7887
  %call5 = tail call fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %3, %union.tree_node* %4) #8, !dbg !7888
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7875, metadata !DIExpression()), !dbg !7877
  %call6 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call5, %union.tree_node* %chrec_a, %union.gimple_statement_d* null) #7, !dbg !7889
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7869, metadata !DIExpression()), !dbg !7877
  %call7 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call5, %union.tree_node* %chrec_b, %union.gimple_statement_d* null) #7, !dbg !7890
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7870, metadata !DIExpression()), !dbg !7877
  %call8 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %call5, %union.tree_node* %call6, %union.tree_node* %call7) #7, !dbg !7891
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7876, metadata !DIExpression()), !dbg !7877
  %call9 = tail call zeroext i8 @eq_evolutions_p(%union.tree_node* %call6, %union.tree_node* %call7) #7, !dbg !7892
  %tobool10 = icmp eq i8 %call9, 0, !dbg !7892
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !7894

if.then11:                                        ; preds = %if.end
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7895
  %call12 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %5) #8, !dbg !7897
  %call13 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call12) #8, !dbg !7898
  store %struct.conflict_function* %call13, %struct.conflict_function** %overlaps_a, align 8, !dbg !7899
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7900
  %call14 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %6) #8, !dbg !7901
  %call15 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call14) #8, !dbg !7902
  store %struct.conflict_function* %call15, %struct.conflict_function** %overlaps_b, align 8, !dbg !7903
  %call16 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %call6) #8, !dbg !7904
  %call17 = tail call fastcc %union.tree_node* @estimated_loop_iterations_tree(%struct.loop* %call16, i8 zeroext 1) #8, !dbg !7905
  store %union.tree_node* %call17, %union.tree_node** %last_conflicts, align 8, !dbg !7906
  %7 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 17), align 4, !dbg !7907
  %inc18 = add nsw i32 %7, 1, !dbg !7907
  store i32 %inc18, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 17), align 4, !dbg !7907
  br label %if.end77, !dbg !7908

if.else:                                          ; preds = %if.end
  %call19 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %call8) #8, !dbg !7909
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7909
  br i1 %tobool20, label %if.else28, label %land.lhs.true21, !dbg !7911

land.lhs.true21:                                  ; preds = %if.else
  %call22 = tail call fastcc zeroext i8 @gcd_of_steps_may_divide_p(%union.tree_node* %call6, %union.tree_node* %call8) #8, !dbg !7912
  %tobool23 = icmp eq i8 %call22, 0, !dbg !7912
  br i1 %tobool23, label %if.then24, label %if.else28, !dbg !7913

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !7914
  store %struct.conflict_function* %call25, %struct.conflict_function** %overlaps_a, align 8, !dbg !7916
  %call26 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !7917
  store %struct.conflict_function* %call26, %struct.conflict_function** %overlaps_b, align 8, !dbg !7918
  %8 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !7919
  %9 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7920
  store i64 %8, i64* %9, align 8, !dbg !7920
  %10 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 16), align 4, !dbg !7921
  %inc27 = add nsw i32 %10, 1, !dbg !7921
  store i32 %inc27, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 16), align 4, !dbg !7921
  br label %if.end77, !dbg !7922

if.else28:                                        ; preds = %land.lhs.true21, %if.else
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop_nest, i64 0, i32 0, !dbg !7923
  %11 = load i32, i32* %num, align 8, !dbg !7923
  %call29 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %call6, i32 %11) #7, !dbg !7925
  %tobool31 = icmp eq i8 %call29, 0, !dbg !7925
  br i1 %tobool31, label %if.else64, label %land.lhs.true32, !dbg !7926

land.lhs.true32:                                  ; preds = %if.else28
  %call33 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %call6) #7, !dbg !7927
  %tobool34 = icmp eq i8 %call33, 0, !dbg !7927
  br i1 %tobool34, label %land.lhs.true35, label %if.else64, !dbg !7928

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %12 = load i32, i32* %num, align 8, !dbg !7929
  %call37 = tail call zeroext i8 @evolution_function_is_affine_multivariate_p(%union.tree_node* %call7, i32 %12) #7, !dbg !7930
  %tobool39 = icmp eq i8 %call37, 0, !dbg !7930
  br i1 %tobool39, label %if.else64, label %land.lhs.true40, !dbg !7931

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %call41 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %call7) #7, !dbg !7932
  %tobool42 = icmp eq i8 %call41, 0, !dbg !7932
  br i1 %tobool42, label %if.then43, label %if.else64, !dbg !7933

if.then43:                                        ; preds = %land.lhs.true40
  tail call fastcc void @analyze_subscript_affine_affine(%union.tree_node* %call6, %union.tree_node* %call7, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) #8, !dbg !7934
  %13 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !7936
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %13, i64 0, i32 0, !dbg !7936
  %14 = load i32, i32* %n, align 8, !dbg !7936
  %cmp = icmp eq i32 %14, 3, !dbg !7936
  br i1 %cmp, label %if.then48, label %lor.lhs.false, !dbg !7938

lor.lhs.false:                                    ; preds = %if.then43
  %15 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !7939
  %n45 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %15, i64 0, i32 0, !dbg !7939
  %16 = load i32, i32* %n45, align 8, !dbg !7939
  %cmp46 = icmp eq i32 %16, 3, !dbg !7939
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !7940

if.then48:                                        ; preds = %lor.lhs.false, %if.then43
  %17 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 18), align 4, !dbg !7941
  %inc49 = add nsw i32 %17, 1, !dbg !7941
  store i32 %inc49, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 18), align 4, !dbg !7941
  br label %if.end77, !dbg !7942

if.else50:                                        ; preds = %lor.lhs.false
  %cmp52 = icmp eq i32 %14, 0, !dbg !7943
  br i1 %cmp52, label %if.then58, label %lor.lhs.false54, !dbg !7945

lor.lhs.false54:                                  ; preds = %if.else50
  %cmp56 = icmp eq i32 %16, 0, !dbg !7946
  br i1 %cmp56, label %if.then58, label %if.else60, !dbg !7947

if.then58:                                        ; preds = %lor.lhs.false54, %if.else50
  %18 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 16), align 4, !dbg !7948
  %inc59 = add nsw i32 %18, 1, !dbg !7948
  store i32 %inc59, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 16), align 4, !dbg !7948
  br label %if.end77, !dbg !7949

if.else60:                                        ; preds = %lor.lhs.false54
  %19 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 17), align 4, !dbg !7950
  %inc61 = add nsw i32 %19, 1, !dbg !7950
  store i32 %inc61, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 17), align 4, !dbg !7950
  br label %if.end77

if.else64:                                        ; preds = %land.lhs.true40, %land.lhs.true35, %land.lhs.true32, %if.else28
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7951
  %tobool65 = icmp eq %struct._IO_FILE* %20, null, !dbg !7951
  br i1 %tobool65, label %if.end71, label %land.lhs.true66, !dbg !7954

land.lhs.true66:                                  ; preds = %if.else64
  %21 = load i32, i32* @dump_flags, align 4, !dbg !7955
  %and67 = and i32 %21, 8, !dbg !7956
  %tobool68 = icmp eq i32 %and67, 0, !dbg !7956
  br i1 %tobool68, label %if.end71, label %if.then69, !dbg !7957

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %20, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.124, i64 0, i64 0)) #7, !dbg !7958
  br label %if.end71, !dbg !7958

if.end71:                                         ; preds = %land.lhs.true66, %if.else64, %if.then69
  %call72 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7959
  store %struct.conflict_function* %call72, %struct.conflict_function** %overlaps_a, align 8, !dbg !7960
  %call73 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !7961
  store %struct.conflict_function* %call73, %struct.conflict_function** %overlaps_b, align 8, !dbg !7962
  %22 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !7963
  %23 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !7964
  store i64 %22, i64* %23, align 8, !dbg !7964
  %24 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 18), align 4, !dbg !7965
  %inc74 = add nsw i32 %24, 1, !dbg !7965
  store i32 %inc74, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 18), align 4, !dbg !7965
  br label %if.end77

if.end77:                                         ; preds = %if.then24, %if.then48, %if.else60, %if.then58, %if.end71, %if.then11
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7966
  %tobool78 = icmp eq %struct._IO_FILE* %25, null, !dbg !7966
  br i1 %tobool78, label %if.end84, label %land.lhs.true79, !dbg !7968

land.lhs.true79:                                  ; preds = %if.end77
  %26 = load i32, i32* @dump_flags, align 4, !dbg !7969
  %and80 = and i32 %26, 8, !dbg !7970
  %tobool81 = icmp eq i32 %and80, 0, !dbg !7970
  br i1 %tobool81, label %if.end84, label %if.then82, !dbg !7971

if.then82:                                        ; preds = %land.lhs.true79
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !7972
  br label %if.end84, !dbg !7972

if.end84:                                         ; preds = %land.lhs.true79, %if.end77, %if.then82
  ret void, !dbg !7973
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7974 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !7978, metadata !DIExpression()), !dbg !7979
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #7, !dbg !7980
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !7980
  ret %struct.VEC_tree_heap* %0, !dbg !7980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %chrec) unnamed_addr #0 !dbg !7981 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !7983, metadata !DIExpression()), !dbg !7984
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !7985
  br i1 %cmp, label %return, label %if.end, !dbg !7987

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7988
  %bf.load = load i64, i64* %0, align 8, !dbg !7988
  %1 = trunc i64 %bf.load to i32, !dbg !7988
  %bf.cast = and i32 %1, 65535, !dbg !7988
  %bf.cast.off = add nsw i32 %bf.cast, -23, !dbg !7989
  %switch = icmp ult i32 %bf.cast.off, 2, !dbg !7989
  %. = zext i1 %switch to i8, !dbg !7990
  br label %return, !dbg !7990

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %., %if.end ], !dbg !7984
  ret i8 %retval.0, !dbg !7992
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %ta, %union.tree_node* %tb) unnamed_addr #5 !dbg !7993 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ta, metadata !7997, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.value(metadata %union.tree_node* %tb, metadata !7998, metadata !DIExpression()), !dbg !7999
  %type = bitcast %union.tree_node* %ta to %struct.tree_type*, !dbg !8000
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !8000
  %bf.load = load i32, i32* %precision, align 4, !dbg !8000
  %bf.clear = and i32 %bf.load, 1023, !dbg !8000
  %type1 = bitcast %union.tree_node* %tb to %struct.tree_type*, !dbg !8002
  %precision2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !8002
  %bf.load3 = load i32, i32* %precision2, align 4, !dbg !8002
  %bf.clear4 = and i32 %bf.load3, 1023, !dbg !8002
  %cmp = icmp ugt i32 %bf.clear, %bf.clear4, !dbg !8003
  br i1 %cmp, label %if.then, label %if.else, !dbg !8004

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @signed_type_for(%union.tree_node* %ta) #7, !dbg !8005
  br label %return, !dbg !8006

if.else:                                          ; preds = %entry
  %call5 = tail call %union.tree_node* @signed_type_for(%union.tree_node* %tb) #7, !dbg !8007
  br label %return, !dbg !8008

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call5, %if.else ], !dbg !8009
  ret %union.tree_node* %retval.0, !dbg !8010
}

declare dso_local %union.tree_node* @chrec_convert(%union.tree_node*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_fold_minus(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.conflict_function* @conflict_fn_no_dependence() unnamed_addr #5 !dbg !8011 {
entry:
  %call = tail call i8* @xcalloc(i64 1, i64 24) #7, !dbg !8014
  %0 = bitcast i8* %call to %struct.conflict_function*, !dbg !8014
  call void @llvm.dbg.value(metadata %struct.conflict_function* %0, metadata !8013, metadata !DIExpression()), !dbg !8015
  %n = bitcast i8* %call to i32*, !dbg !8016
  store i32 0, i32* %n, align 8, !dbg !8017
  ret %struct.conflict_function* %0, !dbg !8018
}

declare dso_local %union.tree_node* @signed_type_for(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @evolution_function_is_univariate_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @evolution_function_is_affine_in_loop(%union.tree_node* %chrec, i32 %loopnum) unnamed_addr #0 !dbg !8019 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !8023, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 %loopnum, metadata !8024, metadata !DIExpression()), !dbg !8025
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !8026
  br i1 %cmp, label %return, label %if.end, !dbg !8028

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8029
  %bf.load = load i64, i64* %0, align 8, !dbg !8029
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8030
  %cond = icmp eq i64 %bf.cast1, 146, !dbg !8030
  br i1 %cond, label %sw.bb, label %return, !dbg !8030

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8031
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8031
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8031
  %call = tail call zeroext i8 @evolution_function_is_invariant_p(%union.tree_node* %1, i32 %loopnum) #7, !dbg !8034
  %tobool = icmp eq i8 %call, 0, !dbg !8034
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !8035

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8036
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !8036
  %call4 = tail call zeroext i8 @evolution_function_is_invariant_p(%union.tree_node* %2, i32 %loopnum) #7, !dbg !8037
  %tobool6 = icmp eq i8 %call4, 0, !dbg !8037
  br i1 %tobool6, label %if.else, label %return, !dbg !8038

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  br label %return, !dbg !8039

return:                                           ; preds = %land.lhs.true, %if.end, %entry, %if.else
  %retval.0 = phi i8 [ 0, %if.else ], [ 0, %entry ], [ 1, %land.lhs.true ], [ 0, %if.end ], !dbg !8025
  ret i8 %retval.0, !dbg !8040
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_siv_subscript_cst_affine(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) unnamed_addr #5 !dbg !8041 {
entry:
  %value0 = alloca i8, align 1
  %value1 = alloca i8, align 1
  %value2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !8043, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !8044, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !8045, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !8046, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !8047, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i8* %value0, metadata !8048, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value0) #6, !dbg !8076
  call void @llvm.dbg.value(metadata i8* %value1, metadata !8049, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value1) #6, !dbg !8076
  call void @llvm.dbg.value(metadata i8* %value2, metadata !8050, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %value2) #6, !dbg !8076
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8077
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !8077
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8078
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !8078
  %call = tail call fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %0, %union.tree_node* %1) #8, !dbg !8079
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8051, metadata !DIExpression()), !dbg !8075
  %call4 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call, %union.tree_node* %chrec_a, %union.gimple_statement_d* null) #7, !dbg !8080
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8043, metadata !DIExpression()), !dbg !8075
  %call5 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call, %union.tree_node* %chrec_b, %union.gimple_statement_d* null) #7, !dbg !8081
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8044, metadata !DIExpression()), !dbg !8075
  %call6 = tail call %union.tree_node* @initial_condition(%union.tree_node* %call5) #7, !dbg !8082
  %call7 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %call, %union.tree_node* %call6, %union.tree_node* %call4) #7, !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !8052, metadata !DIExpression()), !dbg !8075
  %call8 = tail call %union.tree_node* @initial_condition(%union.tree_node* %call7) #7, !dbg !8084
  call void @llvm.dbg.value(metadata i8* %value0, metadata !8048, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  %call9 = call zeroext i8 @chrec_is_positive(%union.tree_node* %call8, i8* nonnull %value0) #7, !dbg !8085
  %tobool = icmp eq i8 %call9, 0, !dbg !8085
  br i1 %tobool, label %if.then, label %if.else, !dbg !8086

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8087
  %tobool10 = icmp eq %struct._IO_FILE* %2, null, !dbg !8087
  br i1 %tobool10, label %if.end, label %land.lhs.true, !dbg !8090

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* @dump_flags, align 4, !dbg !8091
  %and = and i32 %3, 8, !dbg !8092
  %tobool11 = icmp eq i32 %and, 0, !dbg !8092
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !8093

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.113, i64 0, i64 0)) #7, !dbg !8094
  br label %if.end, !dbg !8094

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then12
  %4 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8095
  %inc = add nsw i32 %4, 1, !dbg !8095
  store i32 %inc, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8095
  %call14 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8096
  store %struct.conflict_function* %call14, %struct.conflict_function** %overlaps_a, align 8, !dbg !8097
  %call15 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8098
  store %struct.conflict_function* %call15, %struct.conflict_function** %overlaps_b, align 8, !dbg !8099
  %5 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8100
  %6 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8101
  store i64 %5, i64* %6, align 8, !dbg !8101
  br label %cleanup136, !dbg !8102

if.else:                                          ; preds = %entry
  %7 = load i8, i8* %value0, align 1, !dbg !8103
  call void @llvm.dbg.value(metadata i8 %7, metadata !8048, metadata !DIExpression()), !dbg !8075
  %cmp = icmp eq i8 %7, 0, !dbg !8104
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8105
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8105
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8105
  br i1 %cmp, label %if.then17, label %if.else74, !dbg !8106

if.then17:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i8* %value1, metadata !8049, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  %call18 = call zeroext i8 @chrec_is_positive(%union.tree_node* %8, i8* nonnull %value1) #7, !dbg !8107
  %tobool19 = icmp eq i8 %call18, 0, !dbg !8107
  br i1 %tobool19, label %if.then20, label %if.else31, !dbg !8108

if.then20:                                        ; preds = %if.then17
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8109
  %tobool21 = icmp eq %struct._IO_FILE* %9, null, !dbg !8109
  br i1 %tobool21, label %if.end27, label %land.lhs.true22, !dbg !8112

land.lhs.true22:                                  ; preds = %if.then20
  %10 = load i32, i32* @dump_flags, align 4, !dbg !8113
  %and23 = and i32 %10, 8, !dbg !8114
  %tobool24 = icmp eq i32 %and23, 0, !dbg !8114
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !8115

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i64 0, i64 0)) #7, !dbg !8116
  br label %if.end27, !dbg !8116

if.end27:                                         ; preds = %land.lhs.true22, %if.then20, %if.then25
  %call28 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8117
  store %struct.conflict_function* %call28, %struct.conflict_function** %overlaps_a, align 8, !dbg !8118
  %call29 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8119
  store %struct.conflict_function* %call29, %struct.conflict_function** %overlaps_b, align 8, !dbg !8120
  %11 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8121
  %12 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8122
  store i64 %11, i64* %12, align 8, !dbg !8122
  %13 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8123
  %inc30 = add nsw i32 %13, 1, !dbg !8123
  store i32 %inc30, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8123
  br label %cleanup136, !dbg !8124

if.else31:                                        ; preds = %if.then17
  %14 = load i8, i8* %value1, align 1, !dbg !8125
  call void @llvm.dbg.value(metadata i8 %14, metadata !8049, metadata !DIExpression()), !dbg !8075
  %cmp33 = icmp eq i8 %14, 1, !dbg !8126
  br i1 %cmp33, label %if.then35, label %if.else70, !dbg !8127

if.then35:                                        ; preds = %if.else31
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8128
  %call39 = call fastcc zeroext i8 @tree_fold_divides_p(%union.tree_node* %15, %union.tree_node* %call7) #8, !dbg !8129
  %tobool40 = icmp eq i8 %call39, 0, !dbg !8129
  br i1 %tobool40, label %if.else66, label %if.then41, !dbg !8130

if.then41:                                        ; preds = %if.then35
  %call42 = call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %call5) #8, !dbg !8131
  call void @llvm.dbg.value(metadata %struct.loop* %call42, metadata !8065, metadata !DIExpression()), !dbg !8132
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8133
  %call43 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %16) #8, !dbg !8134
  %call44 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call43) #8, !dbg !8135
  store %struct.conflict_function* %call44, %struct.conflict_function** %overlaps_a, align 8, !dbg !8136
  %call45 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 82, %union.tree_node* %call, %union.tree_node* %call7) #7, !dbg !8137
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8137
  %call49 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 76, %union.tree_node* %call, %union.tree_node* %call45, %union.tree_node* %17) #7, !dbg !8137
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !8053, metadata !DIExpression()), !dbg !8075
  %call50 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %call49) #8, !dbg !8138
  %call51 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call50) #8, !dbg !8139
  store %struct.conflict_function* %call51, %struct.conflict_function** %overlaps_b, align 8, !dbg !8140
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !8141
  %19 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8142
  store i64 %18, i64* %19, align 8, !dbg !8142
  %call52 = call i64 @estimated_loop_iterations_int(%struct.loop* %call42, i8 zeroext 0) #8, !dbg !8143
  call void @llvm.dbg.value(metadata i64 %call52, metadata !8054, metadata !DIExpression()), !dbg !8132
  %cmp53 = icmp sgt i64 %call52, -1, !dbg !8144
  br i1 %cmp53, label %land.lhs.true55, label %if.end63, !dbg !8146

land.lhs.true55:                                  ; preds = %if.then41
  %call56 = call i32 @compare_tree_int(%union.tree_node* %call49, i64 %call52) #7, !dbg !8147
  %cmp57 = icmp sgt i32 %call56, 0, !dbg !8148
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !8149

if.then59:                                        ; preds = %land.lhs.true55
  %20 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !8150
  call fastcc void @free_conflict_function(%struct.conflict_function* %20) #8, !dbg !8152
  %21 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !8153
  call fastcc void @free_conflict_function(%struct.conflict_function* %21) #8, !dbg !8154
  %call60 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8155
  store %struct.conflict_function* %call60, %struct.conflict_function** %overlaps_a, align 8, !dbg !8156
  %call61 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8157
  store %struct.conflict_function* %call61, %struct.conflict_function** %overlaps_b, align 8, !dbg !8158
  %22 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8159
  store i64 %22, i64* %19, align 8, !dbg !8160
  %23 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8161
  %inc62 = add nsw i32 %23, 1, !dbg !8161
  store i32 %inc62, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8161
  br label %cleanup136, !dbg !8162

if.end63:                                         ; preds = %land.lhs.true55, %if.then41
  %24 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !8163
  %inc64 = add nsw i32 %24, 1, !dbg !8163
  store i32 %inc64, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !8163
  br label %cleanup136, !dbg !8164

if.else66:                                        ; preds = %if.then35
  %call67 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8165
  store %struct.conflict_function* %call67, %struct.conflict_function** %overlaps_a, align 8, !dbg !8167
  %call68 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8168
  store %struct.conflict_function* %call68, %struct.conflict_function** %overlaps_b, align 8, !dbg !8169
  %25 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8170
  %26 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8171
  store i64 %25, i64* %26, align 8, !dbg !8171
  %27 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8172
  %inc69 = add nsw i32 %27, 1, !dbg !8172
  store i32 %inc69, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8172
  br label %cleanup136, !dbg !8173

if.else70:                                        ; preds = %if.else31
  %call71 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8174
  store %struct.conflict_function* %call71, %struct.conflict_function** %overlaps_a, align 8, !dbg !8176
  %call72 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8177
  store %struct.conflict_function* %call72, %struct.conflict_function** %overlaps_b, align 8, !dbg !8178
  %28 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8179
  %29 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8180
  store i64 %28, i64* %29, align 8, !dbg !8180
  %30 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8181
  %inc73 = add nsw i32 %30, 1, !dbg !8181
  store i32 %inc73, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8181
  br label %cleanup136, !dbg !8182

if.else74:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i8* %value2, metadata !8050, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  %call78 = call zeroext i8 @chrec_is_positive(%union.tree_node* %8, i8* nonnull %value2) #7, !dbg !8183
  %tobool79 = icmp eq i8 %call78, 0, !dbg !8183
  br i1 %tobool79, label %if.then80, label %if.else91, !dbg !8184

if.then80:                                        ; preds = %if.else74
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8185
  %tobool81 = icmp eq %struct._IO_FILE* %31, null, !dbg !8185
  br i1 %tobool81, label %if.end87, label %land.lhs.true82, !dbg !8188

land.lhs.true82:                                  ; preds = %if.then80
  %32 = load i32, i32* @dump_flags, align 4, !dbg !8189
  %and83 = and i32 %32, 8, !dbg !8190
  %tobool84 = icmp eq i32 %and83, 0, !dbg !8190
  br i1 %tobool84, label %if.end87, label %if.then85, !dbg !8191

if.then85:                                        ; preds = %land.lhs.true82
  %call86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %31, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i64 0, i64 0)) #7, !dbg !8192
  br label %if.end87, !dbg !8192

if.end87:                                         ; preds = %land.lhs.true82, %if.then80, %if.then85
  %call88 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8193
  store %struct.conflict_function* %call88, %struct.conflict_function** %overlaps_a, align 8, !dbg !8194
  %call89 = call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8195
  store %struct.conflict_function* %call89, %struct.conflict_function** %overlaps_b, align 8, !dbg !8196
  %33 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8197
  %34 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8198
  store i64 %33, i64* %34, align 8, !dbg !8198
  %35 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8199
  %inc90 = add nsw i32 %35, 1, !dbg !8199
  store i32 %inc90, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 14), align 4, !dbg !8199
  br label %cleanup136, !dbg !8200

if.else91:                                        ; preds = %if.else74
  %36 = load i8, i8* %value2, align 1, !dbg !8201
  call void @llvm.dbg.value(metadata i8 %36, metadata !8050, metadata !DIExpression()), !dbg !8075
  %cmp93 = icmp eq i8 %36, 0, !dbg !8202
  br i1 %cmp93, label %if.then95, label %if.else132, !dbg !8203

if.then95:                                        ; preds = %if.else91
  %37 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8204
  %call99 = call fastcc zeroext i8 @tree_fold_divides_p(%union.tree_node* %37, %union.tree_node* %call7) #8, !dbg !8205
  %tobool100 = icmp eq i8 %call99, 0, !dbg !8205
  br i1 %tobool100, label %if.else128, label %if.then101, !dbg !8206

if.then101:                                       ; preds = %if.then95
  %call104 = call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %call5) #8, !dbg !8207
  call void @llvm.dbg.value(metadata %struct.loop* %call104, metadata !8074, metadata !DIExpression()), !dbg !8208
  %38 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8209
  %call105 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %38) #8, !dbg !8210
  %call106 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call105) #8, !dbg !8211
  store %struct.conflict_function* %call106, %struct.conflict_function** %overlaps_a, align 8, !dbg !8212
  %39 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8213
  %call110 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 76, %union.tree_node* %call, %union.tree_node* %call7, %union.tree_node* %39) #7, !dbg !8213
  call void @llvm.dbg.value(metadata %union.tree_node* %call110, metadata !8053, metadata !DIExpression()), !dbg !8075
  %call111 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %call110) #8, !dbg !8214
  %call112 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call111) #8, !dbg !8215
  store %struct.conflict_function* %call112, %struct.conflict_function** %overlaps_b, align 8, !dbg !8216
  %40 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14) to i64*), align 16, !dbg !8217
  %41 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8218
  store i64 %40, i64* %41, align 8, !dbg !8218
  %call113 = call i64 @estimated_loop_iterations_int(%struct.loop* %call104, i8 zeroext 0) #8, !dbg !8219
  call void @llvm.dbg.value(metadata i64 %call113, metadata !8066, metadata !DIExpression()), !dbg !8208
  %cmp114 = icmp sgt i64 %call113, -1, !dbg !8220
  br i1 %cmp114, label %land.lhs.true116, label %if.end124, !dbg !8222

land.lhs.true116:                                 ; preds = %if.then101
  %call117 = call i32 @compare_tree_int(%union.tree_node* %call110, i64 %call113) #7, !dbg !8223
  %cmp118 = icmp sgt i32 %call117, 0, !dbg !8224
  br i1 %cmp118, label %if.then120, label %if.end124, !dbg !8225

if.then120:                                       ; preds = %land.lhs.true116
  %42 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !8226
  call fastcc void @free_conflict_function(%struct.conflict_function* %42) #8, !dbg !8228
  %43 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !8229
  call fastcc void @free_conflict_function(%struct.conflict_function* %43) #8, !dbg !8230
  %call121 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8231
  store %struct.conflict_function* %call121, %struct.conflict_function** %overlaps_a, align 8, !dbg !8232
  %call122 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8233
  store %struct.conflict_function* %call122, %struct.conflict_function** %overlaps_b, align 8, !dbg !8234
  %44 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8235
  store i64 %44, i64* %41, align 8, !dbg !8236
  %45 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8237
  %inc123 = add nsw i32 %45, 1, !dbg !8237
  store i32 %inc123, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8237
  br label %cleanup136, !dbg !8238

if.end124:                                        ; preds = %land.lhs.true116, %if.then101
  %46 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !8239
  %inc125 = add nsw i32 %46, 1, !dbg !8239
  store i32 %inc125, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 13), align 4, !dbg !8239
  br label %cleanup136, !dbg !8240

if.else128:                                       ; preds = %if.then95
  %call129 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8241
  store %struct.conflict_function* %call129, %struct.conflict_function** %overlaps_a, align 8, !dbg !8243
  %call130 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8244
  store %struct.conflict_function* %call130, %struct.conflict_function** %overlaps_b, align 8, !dbg !8245
  %47 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8246
  %48 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8247
  store i64 %47, i64* %48, align 8, !dbg !8247
  %49 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8248
  %inc131 = add nsw i32 %49, 1, !dbg !8248
  store i32 %inc131, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8248
  br label %cleanup136, !dbg !8249

if.else132:                                       ; preds = %if.else91
  %call133 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8250
  store %struct.conflict_function* %call133, %struct.conflict_function** %overlaps_a, align 8, !dbg !8252
  %call134 = call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8253
  store %struct.conflict_function* %call134, %struct.conflict_function** %overlaps_b, align 8, !dbg !8254
  %50 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8255
  %51 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8256
  store i64 %50, i64* %51, align 8, !dbg !8256
  %52 = load i32, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8257
  %inc135 = add nsw i32 %52, 1, !dbg !8257
  store i32 %inc135, i32* getelementptr inbounds (%struct.datadep_stats, %struct.datadep_stats* @dependence_stats, i64 0, i32 12), align 4, !dbg !8257
  br label %cleanup136, !dbg !8258

cleanup136:                                       ; preds = %if.then120, %if.end124, %if.then59, %if.end63, %if.else132, %if.else128, %if.end87, %if.else70, %if.else66, %if.end27, %if.end
  call void @llvm.dbg.value(metadata i8* %value2, metadata !8050, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value2) #6, !dbg !8259
  call void @llvm.dbg.value(metadata i8* %value1, metadata !8049, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value1) #6, !dbg !8259
  call void @llvm.dbg.value(metadata i8* %value0, metadata !8048, metadata !DIExpression(DW_OP_deref)), !dbg !8075
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %value0) #6, !dbg !8259
  ret void, !dbg !8259
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_subscript_affine_affine(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) unnamed_addr #5 !dbg !8260 {
entry:
  %ova = alloca %struct.VEC_tree_heap*, align 8
  %ovb = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !8262, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !8263, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !8264, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !8265, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !8266, metadata !DIExpression()), !dbg !8314
  %call = tail call zeroext i8 @eq_evolutions_p(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b) #7, !dbg !8315
  %tobool = icmp eq i8 %call, 0, !dbg !8315
  br i1 %tobool, label %if.end, label %if.then, !dbg !8317

if.then:                                          ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8318
  %call1 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %0) #8, !dbg !8320
  %call2 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call1) #8, !dbg !8321
  store %struct.conflict_function* %call2, %struct.conflict_function** %overlaps_a, align 8, !dbg !8322
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8323
  %call3 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %1) #8, !dbg !8324
  %call4 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call3) #8, !dbg !8325
  store %struct.conflict_function* %call4, %struct.conflict_function** %overlaps_b, align 8, !dbg !8326
  %2 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8327
  %3 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8328
  store i64 %2, i64* %3, align 8, !dbg !8328
  br label %cleanup.cont320, !dbg !8329

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8330
  %tobool5 = icmp eq %struct._IO_FILE* %4, null, !dbg !8330
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !8332

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* @dump_flags, align 4, !dbg !8333
  %and = and i32 %5, 8, !dbg !8334
  %tobool6 = icmp eq i32 %and, 0, !dbg !8334
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !8335

if.then7:                                         ; preds = %land.lhs.true
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0)) #7, !dbg !8336
  br label %if.end9, !dbg !8336

if.end9:                                          ; preds = %land.lhs.true, %if.end, %if.then7
  %call10 = tail call i32 @nb_vars_in_chrec(%union.tree_node* %chrec_a) #7, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %call10, metadata !8267, metadata !DIExpression()), !dbg !8314
  %call11 = tail call i32 @nb_vars_in_chrec(%union.tree_node* %chrec_b) #7, !dbg !8338
  call void @llvm.dbg.value(metadata i32 %call11, metadata !8268, metadata !DIExpression()), !dbg !8314
  %add = add i32 %call10, %call11, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %add, metadata !8269, metadata !DIExpression()), !dbg !8314
  %call12 = tail call i32** @lambda_matrix_new(i32 %add, i32 %add) #7, !dbg !8340
  call void @llvm.dbg.value(metadata i32** %call12, metadata !8276, metadata !DIExpression()), !dbg !8314
  %call13 = tail call i32** @lambda_matrix_new(i32 %add, i32 1) #7, !dbg !8341
  call void @llvm.dbg.value(metadata i32** %call13, metadata !8274, metadata !DIExpression()), !dbg !8314
  %call14 = tail call i32** @lambda_matrix_new(i32 %add, i32 1) #7, !dbg !8342
  call void @llvm.dbg.value(metadata i32** %call14, metadata !8277, metadata !DIExpression()), !dbg !8314
  %call15 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %call13, %union.tree_node* %chrec_a, i32 0, i32 1) #8, !dbg !8343
  %call16 = tail call i64 @int_cst_value(%union.tree_node* %call15) #7, !dbg !8344
  call void @llvm.dbg.value(metadata i64 %call16, metadata !8270, metadata !DIExpression()), !dbg !8314
  %call17 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %call13, %union.tree_node* %chrec_b, i32 %call10, i32 -1) #8, !dbg !8345
  %call18 = tail call i64 @int_cst_value(%union.tree_node* %call17) #7, !dbg !8346
  call void @llvm.dbg.value(metadata i64 %call18, metadata !8271, metadata !DIExpression()), !dbg !8314
  %sub = sub nsw i64 %call18, %call16, !dbg !8347
  call void @llvm.dbg.value(metadata i64 %sub, metadata !8272, metadata !DIExpression()), !dbg !8314
  %cmp = icmp eq i64 %sub, 0, !dbg !8348
  br i1 %cmp, label %if.then19, label %if.end64, !dbg !8349

if.then19:                                        ; preds = %if.end9
  %cmp20 = icmp eq i32 %call10, 1, !dbg !8350
  %cmp22 = icmp eq i32 %call11, 1, !dbg !8351
  %or.cond = and i1 %cmp20, %cmp22, !dbg !8352
  br i1 %or.cond, label %if.then23, label %if.else, !dbg !8352

if.then23:                                        ; preds = %if.then19
  %6 = bitcast %struct.VEC_tree_heap** %ova to i8*, !dbg !8353
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8353
  %7 = bitcast %struct.VEC_tree_heap** %ovb to i8*, !dbg !8353
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !8353
  %call24 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_a) #8, !dbg !8354
  %call25 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call24, i8 zeroext 0) #8, !dbg !8355
  call void @llvm.dbg.value(metadata i64 %call25, metadata !8285, metadata !DIExpression()), !dbg !8356
  %call26 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_b) #8, !dbg !8357
  %call27 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call26, i8 zeroext 0) #8, !dbg !8358
  call void @llvm.dbg.value(metadata i64 %call27, metadata !8286, metadata !DIExpression()), !dbg !8356
  %cmp28 = icmp slt i64 %call25, %call27, !dbg !8359
  %call25.call27 = select i1 %cmp28, i64 %call25, i64 %call27, !dbg !8359
  call void @llvm.dbg.value(metadata i64 %call25.call27, metadata !8284, metadata !DIExpression()), !dbg !8356
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8360
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8360
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8360
  %call29 = tail call i64 @int_cst_value(%union.tree_node* %8) #7, !dbg !8361
  call void @llvm.dbg.value(metadata i64 %call29, metadata !8278, metadata !DIExpression()), !dbg !8356
  %operands31 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8362
  %arrayidx32 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands31, i64 2, !dbg !8362
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8, !dbg !8362
  %call33 = tail call i64 @int_cst_value(%union.tree_node* %9) #7, !dbg !8363
  call void @llvm.dbg.value(metadata i64 %call33, metadata !8283, metadata !DIExpression()), !dbg !8356
  %conv = trunc i64 %call25.call27 to i32, !dbg !8364
  %conv34 = trunc i64 %call29 to i32, !dbg !8365
  %conv35 = trunc i64 %call33 to i32, !dbg !8366
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %ova, metadata !8287, metadata !DIExpression(DW_OP_deref)), !dbg !8356
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %ovb, metadata !8288, metadata !DIExpression(DW_OP_deref)), !dbg !8356
  call fastcc void @compute_overlap_steps_for_affine_univar(i32 %conv, i32 %conv34, i32 %conv35, %struct.VEC_tree_heap** nonnull %ova, %struct.VEC_tree_heap** nonnull %ovb, %union.tree_node** %last_conflicts, i32 1) #8, !dbg !8367
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %ova, align 8, !dbg !8368
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %10, metadata !8287, metadata !DIExpression()), !dbg !8356
  %call36 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %10) #8, !dbg !8369
  store %struct.conflict_function* %call36, %struct.conflict_function** %overlaps_a, align 8, !dbg !8370
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %ovb, align 8, !dbg !8371
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %11, metadata !8288, metadata !DIExpression()), !dbg !8356
  %call37 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %11) #8, !dbg !8372
  store %struct.conflict_function* %call37, %struct.conflict_function** %overlaps_b, align 8, !dbg !8373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !8374
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8374
  br label %end_analyze_subs_aa, !dbg !8375

if.else:                                          ; preds = %if.then19
  %cmp38 = icmp eq i32 %call10, 2, !dbg !8376
  %or.cond3 = and i1 %cmp38, %cmp22, !dbg !8378
  br i1 %or.cond3, label %if.then43, label %if.else44, !dbg !8378

if.then43:                                        ; preds = %if.else
  tail call fastcc void @compute_overlap_steps_for_affine_1_2(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) #8, !dbg !8379
  br label %end_analyze_subs_aa, !dbg !8379

if.else44:                                        ; preds = %if.else
  %cmp48 = icmp eq i32 %call11, 2, !dbg !8380
  %or.cond4 = and i1 %cmp20, %cmp48, !dbg !8382
  br i1 %or.cond4, label %if.then50, label %if.else51, !dbg !8382

if.then50:                                        ; preds = %if.else44
  tail call fastcc void @compute_overlap_steps_for_affine_1_2(%union.tree_node* %chrec_b, %union.tree_node* %chrec_a, %struct.conflict_function** %overlaps_b, %struct.conflict_function** %overlaps_a, %union.tree_node** %last_conflicts) #8, !dbg !8383
  br label %end_analyze_subs_aa, !dbg !8383

if.else51:                                        ; preds = %if.else44
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8384
  %tobool52 = icmp eq %struct._IO_FILE* %12, null, !dbg !8384
  br i1 %tobool52, label %if.end58, label %land.lhs.true53, !dbg !8387

land.lhs.true53:                                  ; preds = %if.else51
  %13 = load i32, i32* @dump_flags, align 4, !dbg !8388
  %and54 = and i32 %13, 8, !dbg !8389
  %tobool55 = icmp eq i32 %and54, 0, !dbg !8389
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !8390

if.then56:                                        ; preds = %land.lhs.true53
  %call57 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.116, i64 0, i64 0)) #7, !dbg !8391
  br label %if.end58, !dbg !8391

if.end58:                                         ; preds = %land.lhs.true53, %if.else51, %if.then56
  %call59 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8392
  store %struct.conflict_function* %call59, %struct.conflict_function** %overlaps_a, align 8, !dbg !8393
  %call60 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8394
  store %struct.conflict_function* %call60, %struct.conflict_function** %overlaps_b, align 8, !dbg !8395
  %14 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8396
  %15 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8397
  store i64 %14, i64* %15, align 8, !dbg !8397
  br label %end_analyze_subs_aa

if.end64:                                         ; preds = %if.end9
  tail call void @lambda_matrix_right_hermite(i32** %call13, i32 %add, i32 1, i32** %call14, i32** %call12) #7, !dbg !8398
  %16 = load i32*, i32** %call14, align 8, !dbg !8399
  %17 = load i32, i32* %16, align 4, !dbg !8399
  %cmp67 = icmp slt i32 %17, 0, !dbg !8401
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !8402

if.then69:                                        ; preds = %if.end64
  %mul = sub nsw i32 0, %17, !dbg !8403
  store i32 %mul, i32* %16, align 4, !dbg !8403
  tail call void @lambda_matrix_row_negate(i32** %call12, i32 %add, i32 0) #7, !dbg !8405
  %.pre = load i32*, i32** %call14, align 8, !dbg !8406
  %.pre10 = load i32, i32* %.pre, align 4, !dbg !8406
  br label %if.end72, !dbg !8407

if.end72:                                         ; preds = %if.then69, %if.end64
  %18 = phi i32 [ %.pre10, %if.then69 ], [ %17, %if.end64 ], !dbg !8406
  %conv75 = sext i32 %18 to i64, !dbg !8406
  call void @llvm.dbg.value(metadata i64 %conv75, metadata !8273, metadata !DIExpression()), !dbg !8314
  %cmp76 = icmp eq i32 %18, 0, !dbg !8408
  br i1 %cmp76, label %if.then78, label %if.end81, !dbg !8410

if.then78:                                        ; preds = %if.end72
  %call79 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8411
  store %struct.conflict_function* %call79, %struct.conflict_function** %overlaps_a, align 8, !dbg !8413
  %call80 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8414
  store %struct.conflict_function* %call80, %struct.conflict_function** %overlaps_b, align 8, !dbg !8415
  %19 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8416
  %20 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8417
  store i64 %19, i64* %20, align 8, !dbg !8417
  br label %end_analyze_subs_aa, !dbg !8418

if.end81:                                         ; preds = %if.end72
  %conv83 = trunc i64 %sub to i32, !dbg !8419
  %call84 = tail call fastcc zeroext i8 @int_divides_p(i32 %18, i32 %conv83) #8, !dbg !8420
  %tobool85 = icmp eq i8 %call84, 0, !dbg !8420
  br i1 %tobool85, label %if.then86, label %if.else89, !dbg !8421

if.then86:                                        ; preds = %if.end81
  %call87 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8422
  store %struct.conflict_function* %call87, %struct.conflict_function** %overlaps_a, align 8, !dbg !8424
  %call88 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8425
  store %struct.conflict_function* %call88, %struct.conflict_function** %overlaps_b, align 8, !dbg !8426
  %21 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8427
  %22 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8428
  store i64 %21, i64* %22, align 8, !dbg !8428
  br label %end_analyze_subs_aa, !dbg !8429

if.else89:                                        ; preds = %if.end81
  %cmp90 = icmp eq i32 %call10, 1, !dbg !8430
  %cmp93 = icmp eq i32 %call11, 1, !dbg !8431
  %or.cond5 = and i1 %cmp90, %cmp93, !dbg !8432
  br i1 %or.cond5, label %if.then95, label %if.else287, !dbg !8432

if.then95:                                        ; preds = %if.else89
  %23 = load i32*, i32** %call13, align 8, !dbg !8433
  %24 = load i32, i32* %23, align 4, !dbg !8433
  %cmp98 = icmp sgt i32 %24, 0, !dbg !8434
  br i1 %cmp98, label %land.lhs.true100, label %lor.lhs.false, !dbg !8435

land.lhs.true100:                                 ; preds = %if.then95
  %arrayidx101 = getelementptr inbounds i32*, i32** %call13, i64 1, !dbg !8436
  %25 = load i32*, i32** %arrayidx101, align 8, !dbg !8436
  %26 = load i32, i32* %25, align 4, !dbg !8436
  %cmp104 = icmp slt i32 %26, 0, !dbg !8437
  br i1 %cmp104, label %if.then116, label %lor.lhs.false, !dbg !8438

lor.lhs.false:                                    ; preds = %land.lhs.true100, %if.then95
  %cmp108 = icmp slt i32 %24, 0, !dbg !8439
  br i1 %cmp108, label %land.lhs.true110, label %if.else276, !dbg !8440

land.lhs.true110:                                 ; preds = %lor.lhs.false
  %arrayidx111 = getelementptr inbounds i32*, i32** %call13, i64 1, !dbg !8441
  %27 = load i32*, i32** %arrayidx111, align 8, !dbg !8441
  %28 = load i32, i32* %27, align 4, !dbg !8441
  %cmp114 = icmp sgt i32 %28, 0, !dbg !8442
  br i1 %cmp114, label %if.then116, label %if.else276, !dbg !8443

if.then116:                                       ; preds = %land.lhs.true110, %land.lhs.true100
  %29 = load i32*, i32** %call12, align 8, !dbg !8444
  %30 = load i32, i32* %29, align 4, !dbg !8444
  %conv119 = sext i32 %30 to i64, !dbg !8444
  %mul120 = mul nsw i64 %sub, %conv119, !dbg !8445
  %div = sdiv i64 %mul120, %conv75, !dbg !8446
  call void @llvm.dbg.value(metadata i64 %div, metadata !8289, metadata !DIExpression()), !dbg !8447
  %arrayidx122 = getelementptr inbounds i32, i32* %29, i64 1, !dbg !8448
  %31 = load i32, i32* %arrayidx122, align 4, !dbg !8448
  %conv123 = sext i32 %31 to i64, !dbg !8448
  %mul124 = mul nsw i64 %sub, %conv123, !dbg !8449
  %div125 = sdiv i64 %mul124, %conv75, !dbg !8450
  call void @llvm.dbg.value(metadata i64 %div125, metadata !8295, metadata !DIExpression()), !dbg !8447
  %arrayidx126 = getelementptr inbounds i32*, i32** %call12, i64 1, !dbg !8451
  %32 = load i32*, i32** %arrayidx126, align 8, !dbg !8451
  %33 = load i32, i32* %32, align 4, !dbg !8451
  %conv128 = sext i32 %33 to i64, !dbg !8451
  call void @llvm.dbg.value(metadata i64 %conv128, metadata !8296, metadata !DIExpression()), !dbg !8447
  %arrayidx130 = getelementptr inbounds i32, i32* %32, i64 1, !dbg !8452
  %34 = load i32, i32* %arrayidx130, align 4, !dbg !8452
  %conv131 = sext i32 %34 to i64, !dbg !8452
  call void @llvm.dbg.value(metadata i64 %conv131, metadata !8297, metadata !DIExpression()), !dbg !8447
  %cmp132 = icmp eq i32 %33, 0, !dbg !8453
  %cmp135 = icmp slt i64 %div, 0, !dbg !8455
  %or.cond6 = and i1 %cmp132, %cmp135, !dbg !8456
  br i1 %or.cond6, label %if.then143, label %lor.lhs.false137, !dbg !8456

lor.lhs.false137:                                 ; preds = %if.then116
  %cmp138 = icmp eq i32 %34, 0, !dbg !8457
  %cmp141 = icmp slt i64 %div125, 0, !dbg !8458
  %or.cond7 = and i1 %cmp138, %cmp141, !dbg !8459
  br i1 %or.cond7, label %if.then143, label %if.end146, !dbg !8459

if.then143:                                       ; preds = %lor.lhs.false137, %if.then116
  %call144 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8460
  store %struct.conflict_function* %call144, %struct.conflict_function** %overlaps_a, align 8, !dbg !8462
  %call145 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8463
  store %struct.conflict_function* %call145, %struct.conflict_function** %overlaps_b, align 8, !dbg !8464
  %35 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8465
  %36 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8466
  store i64 %35, i64* %36, align 8, !dbg !8466
  br label %cleanup270, !dbg !8467

if.end146:                                        ; preds = %lor.lhs.false137
  %cmp147 = icmp sgt i32 %33, 0, !dbg !8468
  %cmp150 = icmp sgt i32 %34, 0, !dbg !8469
  %or.cond8 = and i1 %cmp147, %cmp150, !dbg !8470
  br i1 %or.cond8, label %if.then152, label %if.else259, !dbg !8470

if.then152:                                       ; preds = %if.end146
  %call154 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_a) #8, !dbg !8471
  %call155 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call154, i8 zeroext 0) #8, !dbg !8472
  call void @llvm.dbg.value(metadata i64 %call155, metadata !8298, metadata !DIExpression()), !dbg !8473
  %call157 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_b) #8, !dbg !8474
  %call158 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call157, i8 zeroext 0) #8, !dbg !8475
  call void @llvm.dbg.value(metadata i64 %call158, metadata !8301, metadata !DIExpression()), !dbg !8473
  %cmp160 = icmp slt i64 %call155, %call158, !dbg !8476
  %call155.call158 = select i1 %cmp160, i64 %call155, i64 %call158, !dbg !8476
  call void @llvm.dbg.value(metadata i64 %call155.call158, metadata !8302, metadata !DIExpression()), !dbg !8473
  %37 = xor i64 %div, -1, !dbg !8477
  %sub168 = add i64 %37, %conv128, !dbg !8477
  %div169 = sdiv i64 %sub168, %conv128, !dbg !8477
  %38 = xor i64 %div125, -1, !dbg !8477
  %sub172 = add i64 %38, %conv131, !dbg !8477
  %div173 = sdiv i64 %sub172, %conv131, !dbg !8477
  %cmp174 = icmp sgt i64 %div169, %div173, !dbg !8477
  br i1 %cmp174, label %cond.true176, label %cond.false181, !dbg !8477

cond.true176:                                     ; preds = %if.then152
  br label %cond.end186, !dbg !8477

cond.false181:                                    ; preds = %if.then152
  br label %cond.end186, !dbg !8477

cond.end186:                                      ; preds = %cond.false181, %cond.true176
  %cond187 = phi i64 [ %div169, %cond.true176 ], [ %div173, %cond.false181 ], !dbg !8477
  call void @llvm.dbg.value(metadata i64 %cond187, metadata !8303, metadata !DIExpression()), !dbg !8473
  %mul188 = mul nsw i64 %cond187, %conv128, !dbg !8478
  %add189 = add nsw i64 %mul188, %div, !dbg !8479
  call void @llvm.dbg.value(metadata i64 %add189, metadata !8304, metadata !DIExpression()), !dbg !8473
  %mul190 = mul nsw i64 %cond187, %conv131, !dbg !8480
  %add191 = add nsw i64 %mul190, %div125, !dbg !8481
  call void @llvm.dbg.value(metadata i64 %add191, metadata !8305, metadata !DIExpression()), !dbg !8473
  %div192 = sdiv i64 %add189, %conv128, !dbg !8482
  %div193 = sdiv i64 %add191, %conv131, !dbg !8482
  %cmp194 = icmp slt i64 %div192, %div193, !dbg !8482
  br i1 %cmp194, label %cond.true196, label %cond.false198, !dbg !8482

cond.true196:                                     ; preds = %cond.end186
  br label %cond.end200, !dbg !8482

cond.false198:                                    ; preds = %cond.end186
  br label %cond.end200, !dbg !8482

cond.end200:                                      ; preds = %cond.false198, %cond.true196
  %cond201 = phi i64 [ %div192, %cond.true196 ], [ %div193, %cond.false198 ], !dbg !8482
  call void @llvm.dbg.value(metadata i64 %cond201, metadata !8306, metadata !DIExpression()), !dbg !8473
  %mul202 = mul nsw i64 %cond201, %conv128, !dbg !8483
  %sub203 = sub nsw i64 %add189, %mul202, !dbg !8484
  call void @llvm.dbg.value(metadata i64 %sub203, metadata !8307, metadata !DIExpression()), !dbg !8473
  %mul204 = mul nsw i64 %cond201, %conv131, !dbg !8485
  %sub205 = sub nsw i64 %add191, %mul204, !dbg !8486
  call void @llvm.dbg.value(metadata i64 %sub205, metadata !8308, metadata !DIExpression()), !dbg !8473
  %cmp206 = icmp sgt i64 %call155.call158, 0, !dbg !8487
  br i1 %cmp206, label %if.then208, label %if.else238, !dbg !8488

if.then208:                                       ; preds = %cond.end200
  %sub209 = sub nsw i64 %call155.call158, %div, !dbg !8489
  %div210 = sdiv i64 %sub209, %conv128, !dbg !8489
  %sub211 = sub nsw i64 %call155.call158, %div125, !dbg !8489
  %div212 = sdiv i64 %sub211, %conv131, !dbg !8489
  %cmp213 = icmp slt i64 %div210, %div212, !dbg !8489
  br i1 %cmp213, label %cond.true215, label %cond.false218, !dbg !8489

cond.true215:                                     ; preds = %if.then208
  br label %cond.end221, !dbg !8489

cond.false218:                                    ; preds = %if.then208
  br label %cond.end221, !dbg !8489

cond.end221:                                      ; preds = %cond.false218, %cond.true215
  %cond222 = phi i64 [ %div210, %cond.true215 ], [ %div212, %cond.false218 ], !dbg !8489
  call void @llvm.dbg.value(metadata i64 %cond222, metadata !8309, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i64 undef, metadata !8312, metadata !DIExpression()), !dbg !8490
  %cmp226 = icmp sge i64 %sub203, %call155.call158, !dbg !8491
  %cmp229 = icmp sge i64 %sub205, %call155.call158, !dbg !8493
  %or.cond9 = or i1 %cmp226, %cmp229, !dbg !8494
  br i1 %or.cond9, label %if.then231, label %if.else234, !dbg !8494

if.then231:                                       ; preds = %cond.end221
  %call232 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8495
  store %struct.conflict_function* %call232, %struct.conflict_function** %overlaps_a, align 8, !dbg !8497
  %call233 = tail call fastcc %struct.conflict_function* @conflict_fn_no_dependence() #8, !dbg !8498
  store %struct.conflict_function* %call233, %struct.conflict_function** %overlaps_b, align 8, !dbg !8499
  %39 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8500
  br label %cleanup, !dbg !8501

if.else234:                                       ; preds = %cond.end221
  %sub223 = sub nsw i64 %sub203, %div, !dbg !8502
  %div224 = sdiv i64 %sub223, %conv128, !dbg !8503
  %sub225 = sub nsw i64 %cond222, %div224, !dbg !8504
  call void @llvm.dbg.value(metadata i64 %sub225, metadata !8312, metadata !DIExpression()), !dbg !8490
  %call235 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub225) #7, !dbg !8505
  br label %cleanup, !dbg !8506

cleanup:                                          ; preds = %if.then231, %if.else234
  %storemerge = phi %union.tree_node* [ %call235, %if.else234 ], [ %39, %if.then231 ], !dbg !8507
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.else234 ], [ 2, %if.then231 ]
  store %union.tree_node* %storemerge, %union.tree_node** %last_conflicts, align 8, !dbg !8507
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end239, label %cleanup248

if.else238:                                       ; preds = %cond.end200
  %40 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8508
  %41 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8509
  store i64 %40, i64* %41, align 8, !dbg !8509
  br label %if.end239

if.end239:                                        ; preds = %cleanup, %if.else238
  %call240 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub203) #7, !dbg !8510
  %call241 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv128) #7, !dbg !8511
  %call242 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_univar(%union.tree_node* %call240, i32 1, %union.tree_node* %call241) #8, !dbg !8512
  %call243 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call242) #8, !dbg !8513
  store %struct.conflict_function* %call243, %struct.conflict_function** %overlaps_a, align 8, !dbg !8514
  %call244 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %sub205) #7, !dbg !8515
  %call245 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv131) #7, !dbg !8516
  %call246 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_univar(%union.tree_node* %call244, i32 1, %union.tree_node* %call245) #8, !dbg !8517
  %call247 = tail call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call246) #8, !dbg !8518
  store %struct.conflict_function* %call247, %struct.conflict_function** %overlaps_b, align 8, !dbg !8519
  br label %cleanup248, !dbg !8520

cleanup248:                                       ; preds = %cleanup, %if.end239
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end239 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end269, label %cleanup270

if.else259:                                       ; preds = %if.end146
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8521
  %tobool260 = icmp eq %struct._IO_FILE* %42, null, !dbg !8521
  br i1 %tobool260, label %if.end266, label %land.lhs.true261, !dbg !8524

land.lhs.true261:                                 ; preds = %if.else259
  %43 = load i32, i32* @dump_flags, align 4, !dbg !8525
  %and262 = and i32 %43, 8, !dbg !8526
  %tobool263 = icmp eq i32 %and262, 0, !dbg !8526
  br i1 %tobool263, label %if.end266, label %if.then264, !dbg !8527

if.then264:                                       ; preds = %land.lhs.true261
  %call265 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %42, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.117, i64 0, i64 0)) #7, !dbg !8528
  br label %if.end266, !dbg !8528

if.end266:                                        ; preds = %land.lhs.true261, %if.else259, %if.then264
  %call267 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8529
  store %struct.conflict_function* %call267, %struct.conflict_function** %overlaps_a, align 8, !dbg !8530
  %call268 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8531
  store %struct.conflict_function* %call268, %struct.conflict_function** %overlaps_b, align 8, !dbg !8532
  %44 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8533
  %45 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8534
  store i64 %44, i64* %45, align 8, !dbg !8534
  br label %if.end269

if.end269:                                        ; preds = %cleanup248, %if.end266
  br label %cleanup270, !dbg !8535

cleanup270:                                       ; preds = %cleanup248, %if.then143, %if.end269
  %cleanup.dest.slot.2 = phi i32 [ 2, %if.then143 ], [ %cleanup.dest.slot.1, %cleanup248 ], [ 0, %if.end269 ]
  switch i32 %cleanup.dest.slot.2, label %cleanup.cont320 [
    i32 0, label %end_analyze_subs_aa
    i32 2, label %end_analyze_subs_aa
  ]

if.else276:                                       ; preds = %land.lhs.true110, %lor.lhs.false
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8536
  %tobool277 = icmp eq %struct._IO_FILE* %46, null, !dbg !8536
  br i1 %tobool277, label %if.end283, label %land.lhs.true278, !dbg !8539

land.lhs.true278:                                 ; preds = %if.else276
  %47 = load i32, i32* @dump_flags, align 4, !dbg !8540
  %and279 = and i32 %47, 8, !dbg !8541
  %tobool280 = icmp eq i32 %and279, 0, !dbg !8541
  br i1 %tobool280, label %if.end283, label %if.then281, !dbg !8542

if.then281:                                       ; preds = %land.lhs.true278
  %call282 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %46, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.117, i64 0, i64 0)) #7, !dbg !8543
  br label %if.end283, !dbg !8543

if.end283:                                        ; preds = %land.lhs.true278, %if.else276, %if.then281
  %call284 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8544
  store %struct.conflict_function* %call284, %struct.conflict_function** %overlaps_a, align 8, !dbg !8545
  %call285 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8546
  store %struct.conflict_function* %call285, %struct.conflict_function** %overlaps_b, align 8, !dbg !8547
  %48 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8548
  %49 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8549
  store i64 %48, i64* %49, align 8, !dbg !8549
  br label %end_analyze_subs_aa

if.else287:                                       ; preds = %if.else89
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8550
  %tobool288 = icmp eq %struct._IO_FILE* %50, null, !dbg !8550
  br i1 %tobool288, label %if.end294, label %land.lhs.true289, !dbg !8553

land.lhs.true289:                                 ; preds = %if.else287
  %51 = load i32, i32* @dump_flags, align 4, !dbg !8554
  %and290 = and i32 %51, 8, !dbg !8555
  %tobool291 = icmp eq i32 %and290, 0, !dbg !8555
  br i1 %tobool291, label %if.end294, label %if.then292, !dbg !8556

if.then292:                                       ; preds = %land.lhs.true289
  %call293 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %50, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.117, i64 0, i64 0)) #7, !dbg !8557
  br label %if.end294, !dbg !8557

if.end294:                                        ; preds = %land.lhs.true289, %if.else287, %if.then292
  %call295 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8558
  store %struct.conflict_function* %call295, %struct.conflict_function** %overlaps_a, align 8, !dbg !8559
  %call296 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8560
  store %struct.conflict_function* %call296, %struct.conflict_function** %overlaps_b, align 8, !dbg !8561
  %52 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8562
  %53 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8563
  store i64 %52, i64* %53, align 8, !dbg !8563
  br label %end_analyze_subs_aa

end_analyze_subs_aa:                              ; preds = %if.then86, %if.end283, %cleanup270, %if.end294, %if.then23, %if.then50, %if.end58, %if.then43, %cleanup270, %if.then78
  call void @llvm.dbg.label(metadata !8313), !dbg !8564
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8565
  %tobool299 = icmp eq %struct._IO_FILE* %54, null, !dbg !8565
  br i1 %tobool299, label %cleanup.cont320, label %land.lhs.true300, !dbg !8567

land.lhs.true300:                                 ; preds = %end_analyze_subs_aa
  %55 = load i32, i32* @dump_flags, align 4, !dbg !8568
  %and301 = and i32 %55, 8, !dbg !8569
  %tobool302 = icmp eq i32 %and301, 0, !dbg !8569
  br i1 %tobool302, label %cleanup.cont320, label %if.then303, !dbg !8570

if.then303:                                       ; preds = %land.lhs.true300
  %call304 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %54, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.118, i64 0, i64 0)) #7, !dbg !8571
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8573
  %57 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_a, align 8, !dbg !8574
  call fastcc void @dump_conflict_function(%struct._IO_FILE* %56, %struct.conflict_function* %57) #8, !dbg !8575
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8576
  %call305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.119, i64 0, i64 0)) #7, !dbg !8577
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8578
  %60 = load %struct.conflict_function*, %struct.conflict_function** %overlaps_b, align 8, !dbg !8579
  call fastcc void @dump_conflict_function(%struct._IO_FILE* %59, %struct.conflict_function* %60) #8, !dbg !8580
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8581
  %call306 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !8582
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8583
  %call307 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #7, !dbg !8584
  br label %cleanup.cont320, !dbg !8585

cleanup.cont320:                                  ; preds = %land.lhs.true300, %end_analyze_subs_aa, %if.then, %cleanup270, %if.then303
  ret void, !dbg !8586
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @can_use_analyze_subscript_affine_affine(%union.tree_node** %chrec_a, %union.tree_node** %chrec_b) unnamed_addr #5 !dbg !8587 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %chrec_a, metadata !8591, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata %union.tree_node** %chrec_b, metadata !8592, metadata !DIExpression()), !dbg !8598
  %0 = bitcast %union.tree_node** %chrec_a to %struct.tree_exp**, !dbg !8599
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !8599
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 2, !dbg !8599
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8599
  %call = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %2) #7, !dbg !8601
  %tobool = icmp eq i8 %call, 0, !dbg !8601
  br i1 %tobool, label %lor.lhs.false, label %cleanup, !dbg !8602

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %union.tree_node** %chrec_b to %struct.tree_exp**, !dbg !8603
  %4 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !8603
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 2, !dbg !8603
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !8603
  %call4 = tail call zeroext i8 @chrec_contains_symbols(%union.tree_node* %5) #7, !dbg !8604
  %tobool6 = icmp eq i8 %call4, 0, !dbg !8604
  br i1 %tobool6, label %if.end, label %cleanup, !dbg !8605

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %chrec_a, align 8, !dbg !8606
  %call7 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %6) #8, !dbg !8607
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !8594, metadata !DIExpression()), !dbg !8598
  %7 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !8608
  %arrayidx10 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %7, i64 0, i32 3, i64 1, !dbg !8608
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !8608
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8595, metadata !DIExpression()), !dbg !8598
  %9 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !8609
  %arrayidx13 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %9, i64 0, i32 3, i64 1, !dbg !8609
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8, !dbg !8609
  %call14 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call7, %union.tree_node* %10, %union.gimple_statement_d* null) #7, !dbg !8610
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !8596, metadata !DIExpression()), !dbg !8598
  %call15 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %call7, %union.tree_node* %8, %union.tree_node* %call14) #7, !dbg !8611
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !8593, metadata !DIExpression()), !dbg !8598
  %call16 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %call15) #8, !dbg !8612
  %tobool17 = icmp eq i8 %call16, 0, !dbg !8612
  br i1 %tobool17, label %cleanup, label %if.end19, !dbg !8614

if.end19:                                         ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8615
  %tobool20 = icmp eq %struct._IO_FILE* %11, null, !dbg !8615
  br i1 %tobool20, label %if.end24, label %land.lhs.true, !dbg !8617

land.lhs.true:                                    ; preds = %if.end19
  %12 = load i32, i32* @dump_flags, align 4, !dbg !8618
  %and = and i32 %12, 8, !dbg !8619
  %tobool21 = icmp eq i32 %and, 0, !dbg !8619
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !8620

if.then22:                                        ; preds = %land.lhs.true
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.122, i64 0, i64 0)) #7, !dbg !8621
  br label %if.end24, !dbg !8621

if.end24:                                         ; preds = %land.lhs.true, %if.end19, %if.then22
  %13 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !8622
  %arrayidx27 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %13, i64 0, i32 3, i64 0, !dbg !8622
  %14 = bitcast %union.tree_node** %arrayidx27 to %struct.tree_int_cst**, !dbg !8622
  %15 = load %struct.tree_int_cst*, %struct.tree_int_cst** %14, align 8, !dbg !8622
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %15, i64 0, i32 1, i32 0, !dbg !8622
  %16 = load i64, i64* %low, align 8, !dbg !8622
  %conv29 = trunc i64 %16 to i32, !dbg !8622
  %arrayidx32 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %13, i64 0, i32 3, i64 2, !dbg !8623
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8, !dbg !8623
  %call33 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %conv29, %union.tree_node* %call15, %union.tree_node* %17) #8, !dbg !8624
  store %union.tree_node* %call33, %union.tree_node** %chrec_a, align 8, !dbg !8625
  %18 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !8626
  %arrayidx36 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %18, i64 0, i32 3, i64 2, !dbg !8626
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx36, align 8, !dbg !8626
  %call37 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call7, %union.tree_node* %19, %union.gimple_statement_d* null) #7, !dbg !8627
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !8597, metadata !DIExpression()), !dbg !8598
  %20 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !8628
  %arrayidx40 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %20, i64 0, i32 3, i64 0, !dbg !8628
  %21 = bitcast %union.tree_node** %arrayidx40 to %struct.tree_int_cst**, !dbg !8628
  %22 = load %struct.tree_int_cst*, %struct.tree_int_cst** %21, align 8, !dbg !8628
  %low43 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %22, i64 0, i32 1, i32 0, !dbg !8628
  %23 = load i64, i64* %low43, align 8, !dbg !8628
  %conv44 = trunc i64 %23 to i32, !dbg !8628
  %call45 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call7, i64 0) #7, !dbg !8629
  %call46 = tail call fastcc %union.tree_node* @build_polynomial_chrec(i32 %conv44, %union.tree_node* %call45, %union.tree_node* %call37) #8, !dbg !8630
  store %union.tree_node* %call46, %union.tree_node** %chrec_b, align 8, !dbg !8631
  br label %cleanup, !dbg !8632

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %entry, %if.end24
  %retval.0 = phi i8 [ 1, %if.end24 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.end ], !dbg !8598
  ret i8 %retval.0, !dbg !8633
}

declare dso_local zeroext i8 @chrec_is_positive(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_fold_divides_p(%union.tree_node* %a, %union.tree_node* %b) unnamed_addr #0 !dbg !8634 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %a, metadata !8636, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %b, metadata !8637, metadata !DIExpression()), !dbg !8638
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8639
  %bf.load = load i64, i64* %0, align 8, !dbg !8639
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8639
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !8639
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !8639

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8639
  br label %cond.end, !dbg !8639

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8640
  %bf.load2 = load i64, i64* %1, align 8, !dbg !8640
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !8640
  %cmp5 = icmp eq i64 %bf.cast42, 23, !dbg !8640
  br i1 %cmp5, label %cond.end8, label %cond.true6, !dbg !8640

cond.true6:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 135, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8640
  br label %cond.end8, !dbg !8640

cond.end8:                                        ; preds = %cond.end, %cond.true6
  %call = tail call %union.tree_node* @int_const_binop(i32 71, %union.tree_node* %b, %union.tree_node* %a, i32 0) #7, !dbg !8641
  %call10 = tail call i32 @integer_zerop(%union.tree_node* %call) #7, !dbg !8642
  %conv = trunc i32 %call10 to i8, !dbg !8642
  ret i8 %conv, !dbg !8643
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec) unnamed_addr #0 !dbg !8644 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !8648, metadata !DIExpression()), !dbg !8649
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8650
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !8650
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !8650
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !8650
  %2 = load i64, i64* %low, align 8, !dbg !8650
  %conv = trunc i64 %2 to i32, !dbg !8650
  %call = tail call fastcc %struct.loop* @get_loop(i32 %conv) #8, !dbg !8651
  ret %struct.loop* %call, !dbg !8652
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !8653 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !8657, metadata !DIExpression()), !dbg !8658
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8659
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !8659
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !8659
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !8659
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !8659
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !8659
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8659

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !8659
  br label %cond.end, !dbg !8659

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8659
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #8, !dbg !8659
  ret %struct.loop* %call, !dbg !8660
}

declare dso_local i32 @nb_vars_in_chrec(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32** @lambda_matrix_new(i32, i32) local_unnamed_addr #2

declare dso_local i64 @int_cst_value(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @initialize_matrix_A(i32** %A, %union.tree_node* %chrec, i32 %index, i32 %mult) unnamed_addr #5 !dbg !8661 {
entry:
  br label %tailrecurse, !dbg !8677

tailrecurse:                                      ; preds = %cond.end7, %entry
  %chrec.tr = phi %union.tree_node* [ %chrec, %entry ], [ %8, %cond.end7 ]
  %index.tr = phi i32 [ %index, %entry ], [ %add, %cond.end7 ]
  call void @llvm.dbg.value(metadata i32** %A, metadata !8665, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %mult, metadata !8668, metadata !DIExpression()), !dbg !8678
  %tobool = icmp eq %union.tree_node* %chrec.tr, null, !dbg !8679
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8679

cond.true:                                        ; preds = %tailrecurse
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1939, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8679
  br label %cond.end, !dbg !8679

cond.end:                                         ; preds = %tailrecurse, %cond.true
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8680
  %bf.load = load i64, i64* %0, align 8, !dbg !8680
  %1 = trunc i64 %bf.load to i16, !dbg !8680
  switch i16 %1, label %sw.default [
    i16 146, label %sw.bb
    i16 63, label %sw.bb19
    i16 65, label %sw.bb19
    i16 64, label %sw.bb19
    i16 116, label %sw.bb34
    i16 90, label %sw.bb41
    i16 23, label %return.loopexit
  ], !dbg !8681

sw.bb:                                            ; preds = %cond.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8682
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8682
  %2 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !8682
  %3 = load i64*, i64** %2, align 8, !dbg !8682
  %bf.load2 = load i64, i64* %3, align 8, !dbg !8682
  %bf.cast41 = and i64 %bf.load2, 65535, !dbg !8682
  %cmp = icmp eq i64 %bf.cast41, 23, !dbg !8682
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !8682
  br i1 %cmp, label %cond.end7, label %cond.true5, !dbg !8682

cond.true5:                                       ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1944, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8682
  %.pre = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8683
  br label %cond.end7, !dbg !8682

cond.end7:                                        ; preds = %sw.bb, %cond.true5
  %5 = phi %union.tree_node* [ %4, %sw.bb ], [ %.pre, %cond.true5 ], !dbg !8683
  %call = tail call i64 @int_cst_value(%union.tree_node* %5) #7, !dbg !8684
  %6 = trunc i64 %call to i32, !dbg !8685
  %conv12 = mul i32 %6, %mult, !dbg !8685
  %idxprom = zext i32 %index.tr to i64, !dbg !8686
  %arrayidx13 = getelementptr inbounds i32*, i32** %A, i64 %idxprom, !dbg !8686
  %7 = load i32*, i32** %arrayidx13, align 8, !dbg !8686
  store i32 %conv12, i32* %7, align 4, !dbg !8687
  %arrayidx17 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8688
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx17, align 8, !dbg !8688
  %add = add i32 %index.tr, 1, !dbg !8689
  br label %tailrecurse, !dbg !8677

sw.bb19:                                          ; preds = %cond.end, %cond.end, %cond.end
  %.lcssa30 = phi i64* [ %0, %cond.end ], [ %0, %cond.end ], [ %0, %cond.end ], !dbg !8680
  %chrec.tr.lcssa26 = phi %union.tree_node* [ %chrec.tr, %cond.end ], [ %chrec.tr, %cond.end ], [ %chrec.tr, %cond.end ]
  %index.tr.lcssa22 = phi i32 [ %index.tr, %cond.end ], [ %index.tr, %cond.end ], [ %index.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa26, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa22, metadata !8667, metadata !DIExpression()), !dbg !8678
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr.lcssa26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8690
  %9 = load %union.tree_node*, %union.tree_node** %operands21, align 8, !dbg !8690
  %call23 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %A, %union.tree_node* %9, i32 %index.tr.lcssa22, i32 %mult) #8, !dbg !8691
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !8669, metadata !DIExpression()), !dbg !8692
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands21, i64 1, !dbg !8693
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !8693
  %call27 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %A, %union.tree_node* %10, i32 %index.tr.lcssa22, i32 %mult) #8, !dbg !8694
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !8672, metadata !DIExpression()), !dbg !8692
  %bf.load29 = load i64, i64* %.lcssa30, align 8, !dbg !8695
  %11 = trunc i64 %bf.load29 to i32, !dbg !8695
  %bf.cast31 = and i32 %11, 65535, !dbg !8695
  %call32 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec.tr.lcssa26) #8, !dbg !8696
  %call33 = tail call fastcc %union.tree_node* @chrec_fold_op(i32 %bf.cast31, %union.tree_node* %call32, %union.tree_node* %call23, %union.tree_node* %call27) #8, !dbg !8697
  ret %union.tree_node* %call33, !dbg !8698

sw.bb34:                                          ; preds = %cond.end
  %chrec.tr.lcssa27 = phi %union.tree_node* [ %chrec.tr, %cond.end ]
  %index.tr.lcssa23 = phi i32 [ %index.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa27, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa23, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa27, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa23, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa27, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa23, metadata !8667, metadata !DIExpression()), !dbg !8678
  %operands36 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr.lcssa27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8699
  %12 = load %union.tree_node*, %union.tree_node** %operands36, align 8, !dbg !8699
  %call38 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %A, %union.tree_node* %12, i32 %index.tr.lcssa23, i32 %mult) #8, !dbg !8700
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !8673, metadata !DIExpression()), !dbg !8701
  %call39 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec.tr.lcssa27) #8, !dbg !8702
  %call40 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call39, %union.tree_node* %call38, %union.gimple_statement_d* null) #7, !dbg !8703
  ret %union.tree_node* %call40, !dbg !8698

sw.bb41:                                          ; preds = %cond.end
  %chrec.tr.lcssa28 = phi %union.tree_node* [ %chrec.tr, %cond.end ]
  %index.tr.lcssa24 = phi i32 [ %index.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa28, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa24, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa28, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa24, metadata !8667, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa28, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %index.tr.lcssa24, metadata !8667, metadata !DIExpression()), !dbg !8678
  %operands44 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr.lcssa28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8704
  %13 = load %union.tree_node*, %union.tree_node** %operands44, align 8, !dbg !8704
  %call46 = tail call fastcc %union.tree_node* @initialize_matrix_A(i32** %A, %union.tree_node* %13, i32 %index.tr.lcssa24, i32 %mult) #8, !dbg !8705
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !8675, metadata !DIExpression()), !dbg !8706
  %call47 = tail call fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec.tr.lcssa28) #8, !dbg !8707
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.tr.lcssa28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8708
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8708
  %call48 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %14, i64 -1) #7, !dbg !8709
  %call49 = tail call fastcc %union.tree_node* @chrec_fold_op(i32 64, %union.tree_node* %call47, %union.tree_node* %call48, %union.tree_node* %call46) #8, !dbg !8710
  ret %union.tree_node* %call49, !dbg !8698

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1977, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8711
  br label %return, !dbg !8712

return.loopexit:                                  ; preds = %cond.end
  %chrec.tr.lcssa29 = phi %union.tree_node* [ %chrec.tr, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa29, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa29, metadata !8666, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.tr.lcssa29, metadata !8666, metadata !DIExpression()), !dbg !8678
  br label %return, !dbg !8698

return:                                           ; preds = %return.loopexit, %sw.default
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %chrec.tr.lcssa29, %return.loopexit ], !dbg !8713
  ret %union.tree_node* %retval.0, !dbg !8698
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_overlap_steps_for_affine_univar(i32 %niter, i32 %step_a, i32 %step_b, %struct.VEC_tree_heap** %overlaps_a, %struct.VEC_tree_heap** %overlaps_b, %union.tree_node** %last_conflicts, i32 %dim) unnamed_addr #5 !dbg !8714 {
entry:
  call void @llvm.dbg.value(metadata i32 %niter, metadata !8719, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i32 %step_a, metadata !8720, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i32 %step_b, metadata !8721, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_a, metadata !8722, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_b, metadata !8723, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !8724, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i32 %dim, metadata !8725, metadata !DIExpression()), !dbg !8733
  %cmp = icmp sgt i32 %step_a, 0, !dbg !8734
  %cmp1 = icmp sgt i32 %step_b, 0, !dbg !8735
  %or.cond = and i1 %cmp, %cmp1, !dbg !8736
  br i1 %or.cond, label %if.then, label %lor.lhs.false, !dbg !8736

lor.lhs.false:                                    ; preds = %entry
  %0 = and i32 %step_a, %step_b, !dbg !8737
  %1 = icmp slt i32 %0, 0, !dbg !8737
  br i1 %1, label %if.then, label %if.else19, !dbg !8737

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = tail call fastcc i32 @gcd(i32 %step_a, i32 %step_b) #8, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %call, metadata !8730, metadata !DIExpression()), !dbg !8739
  %div = sdiv i32 %step_b, %call, !dbg !8740
  call void @llvm.dbg.value(metadata i32 %div, metadata !8726, metadata !DIExpression()), !dbg !8739
  %div5 = sdiv i32 %step_a, %call, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %div5, metadata !8729, metadata !DIExpression()), !dbg !8739
  %cmp6 = icmp sgt i32 %niter, 0, !dbg !8742
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8744

if.then7:                                         ; preds = %if.then
  %div8 = sdiv i32 %niter, %div, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %div8, metadata !8732, metadata !DIExpression()), !dbg !8739
  %div9 = sdiv i32 %niter, %div5, !dbg !8747
  %cmp10 = icmp slt i32 %div8, %div9, !dbg !8747
  %cond = select i1 %cmp10, i32 %div8, i32 %div9, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8732, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %cond, metadata !8731, metadata !DIExpression()), !dbg !8739
  %conv = sext i32 %cond to i64, !dbg !8748
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #7, !dbg !8749
  store %union.tree_node* %call12, %union.tree_node** %last_conflicts, align 8, !dbg !8750
  br label %if.end, !dbg !8751

if.else:                                          ; preds = %if.then
  %2 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8752
  %3 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8753
  store i64 %2, i64* %3, align 8, !dbg !8753
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8754
  %conv13 = sext i32 %div to i64, !dbg !8755
  %call14 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv13) #7, !dbg !8756
  %call15 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_univar(%union.tree_node* %4, i32 %dim, %union.tree_node* %call14) #8, !dbg !8757
  store %struct.VEC_tree_heap* %call15, %struct.VEC_tree_heap** %overlaps_a, align 8, !dbg !8758
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8759
  %conv16 = sext i32 %div5 to i64, !dbg !8760
  %call17 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv16) #7, !dbg !8761
  %call18 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_univar(%union.tree_node* %5, i32 %dim, %union.tree_node* %call17) #8, !dbg !8762
  store %struct.VEC_tree_heap* %call18, %struct.VEC_tree_heap** %overlaps_b, align 8, !dbg !8763
  br label %if.end22, !dbg !8764

if.else19:                                        ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8765
  %call20 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %6) #8, !dbg !8767
  store %struct.VEC_tree_heap* %call20, %struct.VEC_tree_heap** %overlaps_a, align 8, !dbg !8768
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8769
  %call21 = tail call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %7) #8, !dbg !8770
  store %struct.VEC_tree_heap* %call21, %struct.VEC_tree_heap** %overlaps_b, align 8, !dbg !8771
  %8 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8772
  %9 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8773
  store i64 %8, i64* %9, align 8, !dbg !8773
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.end
  ret void, !dbg !8774
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_overlap_steps_for_affine_1_2(%union.tree_node* %chrec_a, %union.tree_node* %chrec_b, %struct.conflict_function** %overlaps_a, %struct.conflict_function** %overlaps_b, %union.tree_node** %last_conflicts) unnamed_addr #5 !dbg !8775 {
entry:
  %overlaps_a_xz = alloca %struct.VEC_tree_heap*, align 8
  %overlaps_b_xz = alloca %struct.VEC_tree_heap*, align 8
  %overlaps_a_yz = alloca %struct.VEC_tree_heap*, align 8
  %overlaps_b_yz = alloca %struct.VEC_tree_heap*, align 8
  %overlaps_a_xyz = alloca %struct.VEC_tree_heap*, align 8
  %overlaps_b_xyz = alloca %struct.VEC_tree_heap*, align 8
  %last_conflicts_xz = alloca %union.tree_node*, align 8
  %last_conflicts_yz = alloca %union.tree_node*, align 8
  %last_conflicts_xyz = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_a, metadata !8777, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec_b, metadata !8778, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_a, metadata !8779, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.conflict_function** %overlaps_b, metadata !8780, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts, metadata !8781, metadata !DIExpression()), !dbg !8819
  %0 = bitcast %struct.VEC_tree_heap** %overlaps_a_xz to i8*, !dbg !8820
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !8820
  %1 = bitcast %struct.VEC_tree_heap** %overlaps_b_xz to i8*, !dbg !8820
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !8820
  %2 = bitcast %struct.VEC_tree_heap** %overlaps_a_yz to i8*, !dbg !8821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !8821
  %3 = bitcast %struct.VEC_tree_heap** %overlaps_b_yz to i8*, !dbg !8821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !8821
  %4 = bitcast %struct.VEC_tree_heap** %overlaps_a_xyz to i8*, !dbg !8822
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !8822
  %5 = bitcast %struct.VEC_tree_heap** %overlaps_b_xyz to i8*, !dbg !8822
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !8822
  %6 = bitcast %union.tree_node** %last_conflicts_xz to i8*, !dbg !8823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8823
  %7 = bitcast %union.tree_node** %last_conflicts_yz to i8*, !dbg !8823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !8823
  %8 = bitcast %union.tree_node** %last_conflicts_xyz to i8*, !dbg !8823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8823
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8824
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8824
  %9 = bitcast %union.tree_node** %arrayidx to %struct.tree_exp**, !dbg !8824
  %10 = load %struct.tree_exp*, %struct.tree_exp** %9, align 8, !dbg !8824
  %arrayidx3 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 2, !dbg !8824
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !8824
  %call = tail call i64 @int_cst_value(%union.tree_node* %11) #7, !dbg !8825
  %conv = trunc i64 %call to i32, !dbg !8825
  call void @llvm.dbg.value(metadata i32 %conv, metadata !8785, metadata !DIExpression()), !dbg !8819
  %arrayidx6 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !8826
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8, !dbg !8826
  %call7 = tail call i64 @int_cst_value(%union.tree_node* %12) #7, !dbg !8827
  %conv8 = trunc i64 %call7 to i32, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %conv8, metadata !8786, metadata !DIExpression()), !dbg !8819
  %operands10 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8828
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands10, i64 2, !dbg !8828
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !8828
  %call12 = tail call i64 @int_cst_value(%union.tree_node* %13) #7, !dbg !8829
  %conv13 = trunc i64 %call12 to i32, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %conv13, metadata !8787, metadata !DIExpression()), !dbg !8819
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !8830
  %call17 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %14) #8, !dbg !8831
  %call18 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call17, i8 zeroext 0) #8, !dbg !8832
  call void @llvm.dbg.value(metadata i64 %call18, metadata !8788, metadata !DIExpression()), !dbg !8819
  %call19 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_a) #8, !dbg !8833
  %call20 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call19, i8 zeroext 0) #8, !dbg !8834
  call void @llvm.dbg.value(metadata i64 %call20, metadata !8789, metadata !DIExpression()), !dbg !8819
  %call21 = tail call fastcc %struct.loop* @get_chrec_loop(%union.tree_node* %chrec_b) #8, !dbg !8835
  %call22 = tail call i64 @estimated_loop_iterations_int(%struct.loop* %call21, i8 zeroext 0) #8, !dbg !8836
  call void @llvm.dbg.value(metadata i64 %call22, metadata !8790, metadata !DIExpression()), !dbg !8819
  %15 = or i64 %call18, %call20, !dbg !8837
  %16 = or i64 %15, %call22, !dbg !8837
  %17 = icmp slt i64 %16, 0, !dbg !8837
  br i1 %17, label %if.then, label %if.end34, !dbg !8837

if.then:                                          ; preds = %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8839
  %tobool = icmp eq %struct._IO_FILE* %18, null, !dbg !8839
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8842

land.lhs.true:                                    ; preds = %if.then
  %19 = load i32, i32* @dump_flags, align 4, !dbg !8843
  %and = and i32 %19, 8, !dbg !8844
  %tobool29 = icmp eq i32 %and, 0, !dbg !8844
  br i1 %tobool29, label %if.end, label %if.then30, !dbg !8845

if.then30:                                        ; preds = %land.lhs.true
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.121, i64 0, i64 0)) #7, !dbg !8846
  br label %if.end, !dbg !8846

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then30
  %call32 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8847
  store %struct.conflict_function* %call32, %struct.conflict_function** %overlaps_a, align 8, !dbg !8848
  %call33 = tail call fastcc %struct.conflict_function* @conflict_fn_not_known() #8, !dbg !8849
  store %struct.conflict_function* %call33, %struct.conflict_function** %overlaps_b, align 8, !dbg !8850
  %20 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !8851
  %21 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8852
  store i64 %20, i64* %21, align 8, !dbg !8852
  br label %cleanup, !dbg !8853

if.end34:                                         ; preds = %entry
  %cmp35 = icmp slt i64 %call18, %call22, !dbg !8854
  %call18.call22 = select i1 %cmp35, i64 %call18, i64 %call22, !dbg !8854
  call void @llvm.dbg.value(metadata i64 %call18.call22, metadata !8791, metadata !DIExpression()), !dbg !8819
  %conv37 = trunc i64 %call18.call22 to i32, !dbg !8855
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_a_xz, metadata !8792, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_b_xz, metadata !8793, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts_xz, metadata !8801, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call fastcc void @compute_overlap_steps_for_affine_univar(i32 %conv37, i32 %conv, i32 %conv13, %struct.VEC_tree_heap** nonnull %overlaps_a_xz, %struct.VEC_tree_heap** nonnull %overlaps_b_xz, %union.tree_node** nonnull %last_conflicts_xz, i32 1) #8, !dbg !8856
  %cmp38 = icmp slt i64 %call20, %call22, !dbg !8857
  %cond43 = select i1 %cmp38, i64 %call20, i64 %call22, !dbg !8857
  call void @llvm.dbg.value(metadata i64 %cond43, metadata !8791, metadata !DIExpression()), !dbg !8819
  %conv44 = trunc i64 %cond43 to i32, !dbg !8858
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_a_yz, metadata !8794, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_b_yz, metadata !8795, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts_yz, metadata !8802, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call fastcc void @compute_overlap_steps_for_affine_univar(i32 %conv44, i32 %conv8, i32 %conv13, %struct.VEC_tree_heap** nonnull %overlaps_a_yz, %struct.VEC_tree_heap** nonnull %overlaps_b_yz, %union.tree_node** nonnull %last_conflicts_yz, i32 2) #8, !dbg !8859
  call void @llvm.dbg.value(metadata i64 %call18.call22, metadata !8791, metadata !DIExpression()), !dbg !8819
  %cmp51 = icmp slt i64 %call20, %call18.call22, !dbg !8860
  %cond56 = select i1 %cmp51, i64 %call20, i64 %call18.call22, !dbg !8860
  call void @llvm.dbg.value(metadata i64 %cond56, metadata !8791, metadata !DIExpression()), !dbg !8819
  %conv57 = trunc i64 %cond56 to i32, !dbg !8861
  %add = add nsw i32 %conv, %conv8, !dbg !8862
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_a_xyz, metadata !8796, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %overlaps_b_xyz, metadata !8797, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call void @llvm.dbg.value(metadata %union.tree_node** %last_conflicts_xyz, metadata !8803, metadata !DIExpression(DW_OP_deref)), !dbg !8819
  call fastcc void @compute_overlap_steps_for_affine_univar(i32 %conv57, i32 %add, i32 %conv13, %struct.VEC_tree_heap** nonnull %overlaps_a_xyz, %struct.VEC_tree_heap** nonnull %overlaps_b_xyz, %union.tree_node** nonnull %last_conflicts_xyz, i32 3) #8, !dbg !8863
  %22 = load %union.tree_node*, %union.tree_node** %last_conflicts_xz, align 8, !dbg !8864
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !8801, metadata !DIExpression()), !dbg !8819
  %call58 = call i32 @integer_zerop(%union.tree_node* %22) #7, !dbg !8865
  %tobool59 = icmp eq i32 %call58, 0, !dbg !8866
  call void @llvm.dbg.value(metadata i1 %tobool59, metadata !8782, metadata !DIExpression()), !dbg !8819
  %23 = load %union.tree_node*, %union.tree_node** %last_conflicts_yz, align 8, !dbg !8867
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !8802, metadata !DIExpression()), !dbg !8819
  %call61 = call i32 @integer_zerop(%union.tree_node* %23) #7, !dbg !8868
  %tobool62 = icmp eq i32 %call61, 0, !dbg !8869
  call void @llvm.dbg.value(metadata i1 %tobool62, metadata !8783, metadata !DIExpression()), !dbg !8819
  %24 = load %union.tree_node*, %union.tree_node** %last_conflicts_xyz, align 8, !dbg !8870
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !8803, metadata !DIExpression()), !dbg !8819
  %call66 = call i32 @integer_zerop(%union.tree_node* %24) #7, !dbg !8871
  %tobool67 = icmp eq i32 %call66, 0, !dbg !8872
  call void @llvm.dbg.value(metadata i1 %tobool67, metadata !8784, metadata !DIExpression()), !dbg !8819
  %or.cond3 = or i1 %tobool59, %tobool62, !dbg !8873
  %or.cond4 = or i1 %or.cond3, %tobool67, !dbg !8873
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8874
  %call80 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %25) #8, !dbg !8874
  br i1 %or.cond4, label %if.then79, label %if.else, !dbg !8873

if.then79:                                        ; preds = %if.end34
  call void @llvm.dbg.value(metadata i1 %tobool59, metadata !8782, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call80, metadata !8798, metadata !DIExpression()), !dbg !8819
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8875
  %call81 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %26) #8, !dbg !8876
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call81, metadata !8799, metadata !DIExpression()), !dbg !8819
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8877
  %call82 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %27) #8, !dbg !8878
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call82, metadata !8800, metadata !DIExpression()), !dbg !8819
  br i1 %tobool59, label %if.then84, label %if.end87, !dbg !8879

if.then84:                                        ; preds = %if.then79
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call80, metadata !8804, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call82, metadata !8809, metadata !DIExpression()), !dbg !8880
  %28 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_xz, align 8, !dbg !8881
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %28, metadata !8792, metadata !DIExpression()), !dbg !8819
  %call85 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %call80, %struct.VEC_tree_heap* %28) #8, !dbg !8882
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call85, metadata !8798, metadata !DIExpression()), !dbg !8819
  %29 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_xz, align 8, !dbg !8883
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %29, metadata !8793, metadata !DIExpression()), !dbg !8819
  %call86 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %call82, %struct.VEC_tree_heap* %29) #8, !dbg !8884
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call86, metadata !8800, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %call80) #8, !dbg !8885
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %call82) #8, !dbg !8886
  %30 = bitcast %union.tree_node** %last_conflicts_xz to i64*, !dbg !8887
  %31 = load i64, i64* %30, align 8, !dbg !8887
  %32 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8888
  store i64 %31, i64* %32, align 8, !dbg !8888
  br label %if.end87, !dbg !8889

if.end87:                                         ; preds = %if.then84, %if.then79
  %ova1.0 = phi %struct.VEC_tree_heap* [ %call85, %if.then84 ], [ %call80, %if.then79 ], !dbg !8890
  %ovb.0 = phi %struct.VEC_tree_heap* [ %call86, %if.then84 ], [ %call82, %if.then79 ], !dbg !8890
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ovb.0, metadata !8800, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova1.0, metadata !8798, metadata !DIExpression()), !dbg !8819
  br i1 %tobool62, label %if.then89, label %if.end94, !dbg !8891

if.then89:                                        ; preds = %if.end87
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call81, metadata !8810, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ovb.0, metadata !8813, metadata !DIExpression()), !dbg !8892
  %33 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_yz, align 8, !dbg !8893
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %33, metadata !8794, metadata !DIExpression()), !dbg !8819
  %call92 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %call81, %struct.VEC_tree_heap* %33) #8, !dbg !8894
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call92, metadata !8799, metadata !DIExpression()), !dbg !8819
  %34 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_yz, align 8, !dbg !8895
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %34, metadata !8795, metadata !DIExpression()), !dbg !8819
  %call93 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %ovb.0, %struct.VEC_tree_heap* %34) #8, !dbg !8896
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call93, metadata !8800, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %call81) #8, !dbg !8897
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %ovb.0) #8, !dbg !8898
  %35 = bitcast %union.tree_node** %last_conflicts_yz to i64*, !dbg !8899
  %36 = load i64, i64* %35, align 8, !dbg !8899
  %37 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8900
  store i64 %36, i64* %37, align 8, !dbg !8900
  br label %if.end94, !dbg !8901

if.end94:                                         ; preds = %if.then89, %if.end87
  %ova2.0 = phi %struct.VEC_tree_heap* [ %call92, %if.then89 ], [ %call81, %if.end87 ], !dbg !8890
  %ovb.1 = phi %struct.VEC_tree_heap* [ %call93, %if.then89 ], [ %ovb.0, %if.end87 ], !dbg !8890
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ovb.1, metadata !8800, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova2.0, metadata !8799, metadata !DIExpression()), !dbg !8819
  br i1 %tobool67, label %if.then96, label %if.end102, !dbg !8902

if.then96:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova1.0, metadata !8814, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova2.0, metadata !8817, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ovb.1, metadata !8818, metadata !DIExpression()), !dbg !8903
  %38 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_xyz, align 8, !dbg !8904
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %38, metadata !8796, metadata !DIExpression()), !dbg !8819
  %call99 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %ova1.0, %struct.VEC_tree_heap* %38) #8, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call99, metadata !8798, metadata !DIExpression()), !dbg !8819
  %39 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_xyz, align 8, !dbg !8906
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %39, metadata !8796, metadata !DIExpression()), !dbg !8819
  %call100 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %ova2.0, %struct.VEC_tree_heap* %39) #8, !dbg !8907
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call100, metadata !8799, metadata !DIExpression()), !dbg !8819
  %40 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_xyz, align 8, !dbg !8908
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %40, metadata !8797, metadata !DIExpression()), !dbg !8819
  %call101 = call fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %ovb.1, %struct.VEC_tree_heap* %40) #8, !dbg !8909
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call101, metadata !8800, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %ova1.0) #8, !dbg !8910
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %ova2.0) #8, !dbg !8911
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %ovb.1) #8, !dbg !8912
  %41 = bitcast %union.tree_node** %last_conflicts_xyz to i64*, !dbg !8913
  %42 = load i64, i64* %41, align 8, !dbg !8913
  %43 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8914
  store i64 %42, i64* %43, align 8, !dbg !8914
  br label %if.end102, !dbg !8915

if.end102:                                        ; preds = %if.then96, %if.end94
  %ova1.1 = phi %struct.VEC_tree_heap* [ %call99, %if.then96 ], [ %ova1.0, %if.end94 ], !dbg !8890
  %ova2.1 = phi %struct.VEC_tree_heap* [ %call100, %if.then96 ], [ %ova2.0, %if.end94 ], !dbg !8890
  %ovb.2 = phi %struct.VEC_tree_heap* [ %call101, %if.then96 ], [ %ovb.1, %if.end94 ], !dbg !8890
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ovb.2, metadata !8800, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova2.1, metadata !8799, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %ova1.1, metadata !8798, metadata !DIExpression()), !dbg !8819
  %call103 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 2, %struct.VEC_tree_heap* %ova1.1, %struct.VEC_tree_heap* %ova2.1) #8, !dbg !8916
  store %struct.conflict_function* %call103, %struct.conflict_function** %overlaps_a, align 8, !dbg !8917
  %call104 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %ovb.2) #8, !dbg !8918
  store %struct.conflict_function* %call104, %struct.conflict_function** %overlaps_b, align 8, !dbg !8919
  br label %if.end109, !dbg !8920

if.else:                                          ; preds = %if.end34
  %call106 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call80) #8, !dbg !8921
  store %struct.conflict_function* %call106, %struct.conflict_function** %overlaps_a, align 8, !dbg !8923
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8924
  %call107 = call fastcc %struct.VEC_tree_heap* @affine_fn_cst(%union.tree_node* %44) #8, !dbg !8925
  %call108 = call %struct.conflict_function* (i32, ...) @conflict_fn(i32 1, %struct.VEC_tree_heap* %call107) #8, !dbg !8926
  store %struct.conflict_function* %call108, %struct.conflict_function** %overlaps_b, align 8, !dbg !8927
  %45 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !8928
  %46 = bitcast %union.tree_node** %last_conflicts to i64*, !dbg !8929
  store i64 %45, i64* %46, align 8, !dbg !8929
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.end102
  %47 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_xz, align 8, !dbg !8930
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %47, metadata !8792, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %47) #8, !dbg !8931
  %48 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_xz, align 8, !dbg !8932
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %48, metadata !8793, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %48) #8, !dbg !8933
  %49 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_yz, align 8, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %49, metadata !8794, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %49) #8, !dbg !8935
  %50 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_yz, align 8, !dbg !8936
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %50, metadata !8795, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %50) #8, !dbg !8937
  %51 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_a_xyz, align 8, !dbg !8938
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %51, metadata !8796, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %51) #8, !dbg !8939
  %52 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %overlaps_b_xyz, align 8, !dbg !8940
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %52, metadata !8797, metadata !DIExpression()), !dbg !8819
  call fastcc void @affine_fn_free(%struct.VEC_tree_heap* %52) #8, !dbg !8941
  br label %cleanup, !dbg !8942

cleanup:                                          ; preds = %if.end109, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !8942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !8942
  ret void, !dbg !8942
}

declare dso_local void @lambda_matrix_right_hermite(i32**, i32, i32, i32**, i32**) local_unnamed_addr #2

declare dso_local void @lambda_matrix_row_negate(i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @int_divides_p(i32 %a, i32 %b) unnamed_addr #0 !dbg !8943 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !8947, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i32 %b, metadata !8948, metadata !DIExpression()), !dbg !8949
  %rem = srem i32 %b, %a, !dbg !8950
  %cmp = icmp eq i32 %rem, 0, !dbg !8951
  %conv1 = zext i1 %cmp to i8, !dbg !8952
  ret i8 %conv1, !dbg !8953
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @affine_fn_univar(%union.tree_node* %cst, i32 %dim, %union.tree_node* %coef) unnamed_addr #5 !dbg !8954 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !8958, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i32 %dim, metadata !8959, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata %union.tree_node* %coef, metadata !8960, metadata !DIExpression()), !dbg !8963
  %add = add i32 %dim, 1, !dbg !8964
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %add) #8, !dbg !8964
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !8961, metadata !DIExpression()), !dbg !8963
  %cmp = icmp eq i32 %dim, 0, !dbg !8965
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8965

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 1595, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8965
  br label %cond.end, !dbg !8965

cond.end:                                         ; preds = %entry, %cond.true
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call, i64 0, i32 0, !dbg !8966
  %call5 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %cst) #8, !dbg !8966
  call void @llvm.dbg.value(metadata i32 1, metadata !8962, metadata !DIExpression()), !dbg !8963
  br label %for.cond, !dbg !8967

for.cond:                                         ; preds = %cond.end11, %cond.end
  %i.0 = phi i32 [ 1, %cond.end ], [ %inc, %cond.end11 ], !dbg !8969
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8962, metadata !DIExpression()), !dbg !8963
  %cmp6 = icmp ult i32 %i.0, %dim, !dbg !8970
  br i1 %cmp6, label %cond.end11, label %cond.end18, !dbg !8972

cond.end11:                                       ; preds = %for.cond
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8973
  %call13 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %0) #8, !dbg !8973
  %inc = add i32 %i.0, 1, !dbg !8974
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8962, metadata !DIExpression()), !dbg !8963
  br label %for.cond, !dbg !8975, !llvm.loop !8976

cond.end18:                                       ; preds = %for.cond
  %call20 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %coef) #8, !dbg !8978
  ret %struct.VEC_tree_heap* %call, !dbg !8979
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @chrec_fold_op(i32 %code, %union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1) unnamed_addr #0 !dbg !8980 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !8984, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8985, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !8986, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !8987, metadata !DIExpression()), !dbg !8988
  switch i32 %code, label %sw.default [
    i32 63, label %sw.bb
    i32 64, label %sw.bb1
    i32 65, label %sw.bb3
  ], !dbg !8989

sw.bb:                                            ; preds = %entry
  %call = tail call %union.tree_node* @chrec_fold_plus(%union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1) #7, !dbg !8990
  br label %return, !dbg !8992

sw.bb1:                                           ; preds = %entry
  %call2 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1) #7, !dbg !8993
  br label %return, !dbg !8994

sw.bb3:                                           ; preds = %entry
  %call4 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %type, %union.tree_node* %op0, %union.tree_node* %op1) #7, !dbg !8995
  br label %return, !dbg !8996

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0), i32 257, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !8997
  br label %return, !dbg !8998

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call4, %sw.bb3 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], !dbg !8988
  ret %union.tree_node* %retval.0, !dbg !8999
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @chrec_type(%union.tree_node* %chrec) unnamed_addr #0 !dbg !9000 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !9004, metadata !DIExpression()), !dbg !9005
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %chrec) #8, !dbg !9006
  %tobool = icmp eq i8 %call, 0, !dbg !9006
  br i1 %tobool, label %if.end, label %return, !dbg !9008

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9009
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9009
  br label %return, !dbg !9010

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %0, %if.end ], [ null, %entry ], !dbg !9005
  ret %union.tree_node* %retval.0, !dbg !9011
}

declare dso_local %union.tree_node* @chrec_fold_plus(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @chrec_fold_multiply(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gcd(i32 %a, i32 %b) unnamed_addr #0 !dbg !9012 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !9016, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %b, metadata !9017, metadata !DIExpression()), !dbg !9021
  %call = tail call i32 @abs(i32 %a) #7, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %call, metadata !9018, metadata !DIExpression()), !dbg !9021
  %call1 = tail call i32 @abs(i32 %b) #7, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %call1, metadata !9019, metadata !DIExpression()), !dbg !9021
  br label %while.cond, !dbg !9024

while.cond:                                       ; preds = %while.body, %entry
  %x.0 = phi i32 [ %call, %entry ], [ %rem, %while.body ], !dbg !9021
  %y.0 = phi i32 [ %call1, %entry ], [ %x.0, %while.body ], !dbg !9021
  call void @llvm.dbg.value(metadata i32 %y.0, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !9018, metadata !DIExpression()), !dbg !9021
  %cmp = icmp sgt i32 %x.0, 0, !dbg !9025
  br i1 %cmp, label %while.body, label %while.end, !dbg !9024

while.body:                                       ; preds = %while.cond
  %rem = srem i32 %y.0, %x.0, !dbg !9026
  call void @llvm.dbg.value(metadata i32 %rem, metadata !9020, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %x.0, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %rem, metadata !9018, metadata !DIExpression()), !dbg !9021
  br label %while.cond, !dbg !9024, !llvm.loop !9028

while.end:                                        ; preds = %while.cond
  %y.0.lcssa = phi i32 [ %y.0, %while.cond ], !dbg !9021
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i32 %y.0.lcssa, metadata !9019, metadata !DIExpression()), !dbg !9021
  ret i32 %y.0.lcssa, !dbg !9030
}

declare dso_local i32 @abs(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @affine_fn_plus(%struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) unnamed_addr #5 !dbg !9031 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fna, metadata !9035, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fnb, metadata !9036, metadata !DIExpression()), !dbg !9037
  %call = tail call fastcc %struct.VEC_tree_heap* @affine_fn_op(i32 63, %struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) #8, !dbg !9038
  ret %struct.VEC_tree_heap* %call, !dbg !9039
}

; Function Attrs: nounwind uwtable
define internal fastcc void @affine_fn_free(%struct.VEC_tree_heap* %fn) unnamed_addr #5 !dbg !9040 {
entry:
  %fn.addr = alloca %struct.VEC_tree_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fn, metadata !9044, metadata !DIExpression()), !dbg !9045
  store %struct.VEC_tree_heap* %fn, %struct.VEC_tree_heap** %fn.addr, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %fn.addr, metadata !9044, metadata !DIExpression(DW_OP_deref)), !dbg !9045
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %fn.addr) #8, !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @affine_fn_op(i32 %op, %struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) unnamed_addr #5 !dbg !9048 {
entry:
  %coef = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %op, metadata !9052, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fna, metadata !9053, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fnb, metadata !9054, metadata !DIExpression()), !dbg !9064
  %0 = bitcast %union.tree_node** %coef to i8*, !dbg !9065
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9065
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fnb, i64 0, i32 0, !dbg !9066
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !9066
  %base3 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fna, i64 0, i32 0, !dbg !9068
  %call7 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base3) #8, !dbg !9068
  %cmp = icmp ugt i32 %call, %call7, !dbg !9069
  br i1 %cmp, label %if.then, label %if.else, !dbg !9070

if.then:                                          ; preds = %entry
  %call14 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base3) #8, !dbg !9071
  call void @llvm.dbg.value(metadata i32 %call14, metadata !9056, metadata !DIExpression()), !dbg !9064
  %call21 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %call21, metadata !9057, metadata !DIExpression()), !dbg !9064
  br label %if.end, !dbg !9074

if.else:                                          ; preds = %entry
  %call28 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %call28, metadata !9056, metadata !DIExpression()), !dbg !9064
  %call35 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base3) #8, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %call35, metadata !9057, metadata !DIExpression()), !dbg !9064
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.0 = phi i32 [ %call14, %if.then ], [ %call28, %if.else ], !dbg !9078
  %m.0 = phi i32 [ %call21, %if.then ], [ %call35, %if.else ], !dbg !9078
  call void @llvm.dbg.value(metadata i32 %m.0, metadata !9057, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !9056, metadata !DIExpression()), !dbg !9064
  %call36 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %m.0) #8, !dbg !9079
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call36, metadata !9058, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 0, metadata !9055, metadata !DIExpression()), !dbg !9064
  %base58 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %call36, i64 0, i32 0, !dbg !9080
  br label %for.cond, !dbg !9081

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !9082
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9055, metadata !DIExpression()), !dbg !9064
  %exitcond = icmp eq i32 %i.0, %n.0, !dbg !9083
  br i1 %exitcond, label %for.cond78.preheader, label %for.body, !dbg !9084

for.cond78.preheader:                             ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !9055, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !9055, metadata !DIExpression()), !dbg !9064
  %1 = bitcast %union.tree_node** %coef to %struct.tree_common**, !dbg !9085
  br label %for.cond78, !dbg !9088

for.body:                                         ; preds = %for.cond
  %call44 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base3, i32 %i.0) #8, !dbg !9089
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9089
  %2 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !9089
  %call52 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 %i.0) #8, !dbg !9090
  %type54 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9090
  %3 = load %union.tree_node*, %union.tree_node** %type54, align 8, !dbg !9090
  %call55 = tail call fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %2, %union.tree_node* %3) #8, !dbg !9091
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !9060, metadata !DIExpression()), !dbg !9080
  %call68 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base3, i32 %i.0) #8, !dbg !9092
  %call75 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 %i.0) #8, !dbg !9092
  %call76 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %op, %union.tree_node* %call55, %union.tree_node* %call68, %union.tree_node* %call75) #7, !dbg !9092
  %call77 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base58, %union.tree_node* %call76) #8, !dbg !9092
  %inc = add i32 %i.0, 1, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9055, metadata !DIExpression()), !dbg !9064
  br label %for.cond, !dbg !9094, !llvm.loop !9095

for.cond78:                                       ; preds = %for.cond78.preheader, %for.body87
  %i.1 = phi i32 [ %inc100, %for.body87 ], [ %n.0, %for.cond78.preheader ], !dbg !9064
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !9055, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %union.tree_node** %coef, metadata !9059, metadata !DIExpression(DW_OP_deref)), !dbg !9064
  %call85 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base3, i32 %i.1, %union.tree_node** nonnull %coef) #8, !dbg !9097
  %tobool86 = icmp eq i32 %call85, 0, !dbg !9088
  br i1 %tobool86, label %for.cond102.preheader, label %for.body87, !dbg !9088

for.cond102.preheader:                            ; preds = %for.cond78
  %i.1.lcssa = phi i32 [ %i.1, %for.cond78 ], !dbg !9064
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9055, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9055, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %i.1.lcssa, metadata !9055, metadata !DIExpression()), !dbg !9064
  br label %for.cond102, !dbg !9098

for.body87:                                       ; preds = %for.cond78
  %4 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9100
  %type95 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !9100
  %5 = load %union.tree_node*, %union.tree_node** %type95, align 8, !dbg !9100
  %call96 = call %union.tree_node* @signed_type_for(%union.tree_node* %5) #7, !dbg !9100
  %6 = load %union.tree_node*, %union.tree_node** %coef, align 8, !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9059, metadata !DIExpression()), !dbg !9064
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9100
  %call97 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %op, %union.tree_node* %call96, %union.tree_node* %6, %union.tree_node* %7) #7, !dbg !9100
  %call98 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base58, %union.tree_node* %call97) #8, !dbg !9100
  %inc100 = add i32 %i.1, 1, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %inc100, metadata !9055, metadata !DIExpression()), !dbg !9064
  br label %for.cond78, !dbg !9102, !llvm.loop !9103

for.cond102:                                      ; preds = %for.cond102.preheader, %for.body111
  %i.2 = phi i32 [ %inc124, %for.body111 ], [ %i.1.lcssa, %for.cond102.preheader ], !dbg !9064
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !9055, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %union.tree_node** %coef, metadata !9059, metadata !DIExpression(DW_OP_deref)), !dbg !9064
  %call109 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.2, %union.tree_node** nonnull %coef) #8, !dbg !9105
  %tobool110 = icmp eq i32 %call109, 0, !dbg !9098
  br i1 %tobool110, label %for.end125, label %for.body111, !dbg !9098

for.body111:                                      ; preds = %for.cond102
  %8 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9107
  %type119 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !9107
  %9 = load %union.tree_node*, %union.tree_node** %type119, align 8, !dbg !9107
  %call120 = call %union.tree_node* @signed_type_for(%union.tree_node* %9) #7, !dbg !9107
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9107
  %11 = load %union.tree_node*, %union.tree_node** %coef, align 8, !dbg !9107
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9059, metadata !DIExpression()), !dbg !9064
  %call121 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %op, %union.tree_node* %call120, %union.tree_node* %10, %union.tree_node* %11) #7, !dbg !9107
  %call122 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base58, %union.tree_node* %call121) #8, !dbg !9107
  %inc124 = add i32 %i.2, 1, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %inc124, metadata !9055, metadata !DIExpression()), !dbg !9064
  br label %for.cond102, !dbg !9109, !llvm.loop !9110

for.end125:                                       ; preds = %for.cond102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9112
  ret %struct.VEC_tree_heap* %call36, !dbg !9113
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @build_polynomial_chrec(i32 %loop_num, %union.tree_node* %left, %union.tree_node* %right) unnamed_addr #0 !dbg !9114 {
entry:
  %val = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loop_num, metadata !9118, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata %union.tree_node* %left, metadata !9119, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata %union.tree_node* %right, metadata !9120, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i8* %val, metadata !9121, metadata !DIExpression(DW_OP_deref)), !dbg !9122
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %val) #6, !dbg !9123
  %0 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !9124
  %cmp = icmp eq %union.tree_node* %0, %left, !dbg !9126
  %cmp1 = icmp eq %union.tree_node* %0, %right, !dbg !9127
  %or.cond = or i1 %cmp, %cmp1, !dbg !9128
  br i1 %or.cond, label %if.then, label %if.end, !dbg !9128

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !9129

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %val, metadata !9121, metadata !DIExpression(DW_OP_deref)), !dbg !9122
  %call = call fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %left, i32 %loop_num, i8* nonnull %val) #8, !dbg !9130
  %tobool = icmp ne i8 %call, 0, !dbg !9130
  %1 = load i8, i8* %val, align 1, !dbg !9132
  call void @llvm.dbg.value(metadata i8 %1, metadata !9121, metadata !DIExpression()), !dbg !9122
  %tobool3 = icmp ne i8 %1, 0, !dbg !9132
  %or.cond1 = and i1 %tobool, %tobool3, !dbg !9133
  br i1 %or.cond1, label %if.end5, label %if.then4, !dbg !9133

if.then4:                                         ; preds = %if.end
  %2 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !9134
  br label %cleanup, !dbg !9135

if.end5:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %right, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9136
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !9136
  %4 = load i64*, i64** %3, align 8, !dbg !9136
  %bf.load = load i64, i64* %4, align 8, !dbg !9136
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9136
  %cmp6 = icmp eq i64 %bf.cast2, 10, !dbg !9136
  br i1 %cmp6, label %cond.true, label %lor.lhs.false7, !dbg !9136

lor.lhs.false7:                                   ; preds = %if.end5
  %cmp14 = icmp eq i64 %bf.cast2, 12, !dbg !9136
  br i1 %cmp14, label %cond.true, label %cond.end, !dbg !9136

cond.true:                                        ; preds = %lor.lhs.false7, %if.end5
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !9136
  br label %cond.end, !dbg !9136

cond.end:                                         ; preds = %lor.lhs.false7, %cond.true
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %left, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9137
  %5 = bitcast %union.tree_node** %type16 to i64**, !dbg !9137
  %6 = load i64*, i64** %5, align 8, !dbg !9137
  %bf.load18 = load i64, i64* %6, align 8, !dbg !9137
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !9137
  %cmp21 = icmp eq i64 %bf.cast204, 10, !dbg !9137
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !9137
  br i1 %cmp21, label %if.then30, label %lor.lhs.false22, !dbg !9137

lor.lhs.false22:                                  ; preds = %cond.end
  %cmp29 = icmp eq i64 %bf.cast204, 12, !dbg !9137
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !9139

if.then30:                                        ; preds = %lor.lhs.false22, %cond.end
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9140
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9140
  %cmp33 = icmp eq %union.tree_node* %8, %9, !dbg !9140
  br i1 %cmp33, label %if.end47, label %cond.true34, !dbg !9140

cond.true34:                                      ; preds = %if.then30
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0), i32 147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !9140
  br label %if.end47, !dbg !9140

if.else:                                          ; preds = %lor.lhs.false22
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9141
  %cmp42 = icmp eq %union.tree_node* %10, %7, !dbg !9141
  br i1 %cmp42, label %if.end47, label %cond.true43, !dbg !9141

cond.true43:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0), i32 149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !9141
  br label %if.end47, !dbg !9141

if.end47:                                         ; preds = %cond.true43, %if.else, %cond.true34, %if.then30
  %call48 = call fastcc zeroext i8 @chrec_zerop(%union.tree_node* %right) #8, !dbg !9142
  %tobool49 = icmp eq i8 %call48, 0, !dbg !9142
  br i1 %tobool49, label %if.end51, label %cleanup, !dbg !9144

if.end51:                                         ; preds = %if.end47
  %11 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !9145
  %conv = zext i32 %loop_num to i64, !dbg !9145
  %call54 = call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #7, !dbg !9145
  %call55 = call %union.tree_node* @build3_stat(i32 146, %union.tree_node* %11, %union.tree_node* %call54, %union.tree_node* %left, %union.tree_node* %right) #7, !dbg !9145
  br label %cleanup, !dbg !9146

cleanup:                                          ; preds = %if.end47, %if.end51, %if.then4, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ %call55, %if.end51 ], [ %2, %if.then4 ], [ %left, %if.end47 ], !dbg !9122
  call void @llvm.dbg.value(metadata i8* %val, metadata !9121, metadata !DIExpression(DW_OP_deref)), !dbg !9122
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %val) #6, !dbg !9147
  ret %union.tree_node* %retval.0, !dbg !9147
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @no_evolution_in_loop_p(%union.tree_node* %chrec, i32 %loop_num, i8* %res) unnamed_addr #0 !dbg !9148 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !9152, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i32 %loop_num, metadata !9153, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i8* %res, metadata !9154, metadata !DIExpression()), !dbg !9156
  %0 = load %union.tree_node*, %union.tree_node** @chrec_not_analyzed_yet, align 8, !dbg !9157
  %cmp = icmp eq %union.tree_node* %0, %chrec, !dbg !9159
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !9160
  %cmp1 = icmp eq %union.tree_node* %1, %chrec, !dbg !9161
  %or.cond = or i1 %cmp, %cmp1, !dbg !9162
  br i1 %or.cond, label %cleanup, label %lor.lhs.false2, !dbg !9162

lor.lhs.false2:                                   ; preds = %entry
  %call = tail call zeroext i8 @chrec_contains_symbols_defined_in_loop(%union.tree_node* %chrec, i32 %loop_num) #7, !dbg !9163
  %tobool = icmp eq i8 %call, 0, !dbg !9163
  br i1 %tobool, label %if.end, label %cleanup, !dbg !9164

if.end:                                           ; preds = %lor.lhs.false2
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %chrec) #7, !dbg !9165
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9152, metadata !DIExpression()), !dbg !9156
  %call4 = tail call %union.tree_node* @hide_evolution_in_other_loops_than_loop(%union.tree_node* %call3, i32 %loop_num) #7, !dbg !9166
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !9155, metadata !DIExpression()), !dbg !9156
  %call5 = tail call fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %call4) #8, !dbg !9167
  %tobool6 = icmp eq i8 %call5, 0, !dbg !9168
  %conv7 = zext i1 %tobool6 to i8, !dbg !9168
  store i8 %conv7, i8* %res, align 1, !dbg !9169
  br label %cleanup, !dbg !9170

cleanup:                                          ; preds = %lor.lhs.false2, %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %lor.lhs.false2 ], [ 0, %entry ], !dbg !9156
  ret i8 %retval.0, !dbg !9171
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @chrec_zerop(%union.tree_node* %chrec) unnamed_addr #0 !dbg !9172 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !9174, metadata !DIExpression()), !dbg !9175
  %cmp = icmp eq %union.tree_node* %chrec, null, !dbg !9176
  br i1 %cmp, label %return, label %if.end, !dbg !9178

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9179
  %bf.load = load i64, i64* %0, align 8, !dbg !9179
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9181
  %cmp1 = icmp eq i64 %bf.cast1, 23, !dbg !9181
  br i1 %cmp1, label %if.then2, label %return, !dbg !9182

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @integer_zerop(%union.tree_node* nonnull %chrec) #7, !dbg !9183
  %conv = trunc i32 %call to i8, !dbg !9183
  br label %return, !dbg !9184

return:                                           ; preds = %if.end, %entry, %if.then2
  %retval.0 = phi i8 [ %conv, %if.then2 ], [ 0, %entry ], [ 0, %if.end ], !dbg !9175
  ret i8 %retval.0, !dbg !9185
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @hide_evolution_in_other_loops_than_loop(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @tree_is_chrec(%union.tree_node* %expr) unnamed_addr #0 !dbg !9186 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !9188, metadata !DIExpression()), !dbg !9189
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9190
  %bf.load = load i64, i64* %0, align 8, !dbg !9190
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9192
  %cmp = icmp eq i64 %bf.cast1, 146, !dbg !9192
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !9193

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @automatically_generated_chrec_p(%union.tree_node* %expr) #8, !dbg !9194
  %tobool = icmp ne i8 %call, 0, !dbg !9194
  %spec.select = zext i1 %tobool to i8, !dbg !9195
  ret i8 %spec.select, !dbg !9195

return:                                           ; preds = %entry
  ret i8 1, !dbg !9196
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @estimated_loop_iterations_tree(%struct.loop* %loop, i8 zeroext %conservative) unnamed_addr #5 !dbg !9197 {
entry:
  %nit = alloca %struct.double_int, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !9201, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8 1, metadata !9202, metadata !DIExpression()), !dbg !9205
  %0 = bitcast %struct.double_int* %nit to i8*, !dbg !9206
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !9206
  call void @llvm.dbg.value(metadata %struct.double_int* %nit, metadata !9203, metadata !DIExpression(DW_OP_deref)), !dbg !9205
  %call = call zeroext i8 @estimated_loop_iterations(%struct.loop* %loop, i8 zeroext 1, %struct.double_int* nonnull %nit) #8, !dbg !9207
  %tobool = icmp eq i8 %call, 0, !dbg !9207
  br i1 %tobool, label %if.then, label %if.end, !dbg !9209

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !9210
  br label %cleanup, !dbg !9211

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 3), align 8, !dbg !9212
  %call1 = call %union.tree_node* %2(i32 32, i32 1) #7, !dbg !9213
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9204, metadata !DIExpression()), !dbg !9205
  %3 = getelementptr inbounds %struct.double_int, %struct.double_int* %nit, i64 0, i32 0, !dbg !9214
  %4 = load i64, i64* %3, align 8, !dbg !9214
  %5 = getelementptr inbounds %struct.double_int, %struct.double_int* %nit, i64 0, i32 1, !dbg !9214
  %6 = load i64, i64* %5, align 8, !dbg !9214
  %call2 = call zeroext i8 @double_int_fits_to_tree_p(%union.tree_node* %call1, i64 %4, i64 %6) #7, !dbg !9214
  %tobool3 = icmp eq i8 %call2, 0, !dbg !9214
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9216

if.then4:                                         ; preds = %if.end
  %7 = load %union.tree_node*, %union.tree_node** @chrec_dont_know, align 8, !dbg !9217
  br label %cleanup, !dbg !9218

if.end5:                                          ; preds = %if.end
  %8 = load i64, i64* %3, align 8, !dbg !9219
  %9 = load i64, i64* %5, align 8, !dbg !9219
  %call6 = call %union.tree_node* @double_int_to_tree(%union.tree_node* %call1, i64 %8, i64 %9) #7, !dbg !9219
  br label %cleanup, !dbg !9220

cleanup:                                          ; preds = %if.end5, %if.then4, %if.then
  %retval.0 = phi %union.tree_node* [ %call6, %if.end5 ], [ %7, %if.then4 ], [ %1, %if.then ], !dbg !9205
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !9221
  ret %union.tree_node* %retval.0, !dbg !9221
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @gcd_of_steps_may_divide_p(%union.tree_node* %chrec, %union.tree_node* %cst) unnamed_addr #5 !dbg !9222 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec, metadata !9224, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !9225, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i64 0, metadata !9226, metadata !DIExpression()), !dbg !9229
  %call = tail call i32 @host_integerp(%union.tree_node* %cst, i32 0) #7, !dbg !9230
  %tobool = icmp eq i32 %call, 0, !dbg !9230
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9232

if.end:                                           ; preds = %entry
  %call1 = tail call i64 @tree_low_cst(%union.tree_node* %cst, i32 0) #7, !dbg !9233
  call void @llvm.dbg.value(metadata i64 %call1, metadata !9227, metadata !DIExpression()), !dbg !9229
  br label %while.cond, !dbg !9234

while.cond:                                       ; preds = %if.end5, %if.end
  %cd.0 = phi i64 [ 0, %if.end ], [ %conv9, %if.end5 ], !dbg !9229
  %chrec.addr.0 = phi %union.tree_node* [ %chrec, %if.end ], [ %2, %if.end5 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %chrec.addr.0, metadata !9224, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i64 %cd.0, metadata !9226, metadata !DIExpression()), !dbg !9229
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9235
  %bf.load = load i64, i64* %0, align 8, !dbg !9235
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9236
  %cmp = icmp eq i64 %bf.cast1, 146, !dbg !9236
  br i1 %cmp, label %while.body, label %while.end, !dbg !9234

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %chrec.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9237
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !9237
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9237
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9228, metadata !DIExpression()), !dbg !9229
  %call2 = tail call i32 @host_integerp(%union.tree_node* %1, i32 0) #7, !dbg !9239
  %tobool3 = icmp eq i32 %call2, 0, !dbg !9239
  br i1 %tobool3, label %cleanup.loopexit, label %if.end5, !dbg !9241

if.end5:                                          ; preds = %while.body
  %conv = trunc i64 %cd.0 to i32, !dbg !9242
  %call6 = tail call i64 @tree_low_cst(%union.tree_node* %1, i32 0) #7, !dbg !9243
  %conv7 = trunc i64 %call6 to i32, !dbg !9243
  %call8 = tail call fastcc i32 @gcd(i32 %conv, i32 %conv7) #8, !dbg !9244
  %conv9 = sext i32 %call8 to i64, !dbg !9244
  call void @llvm.dbg.value(metadata i64 %conv9, metadata !9226, metadata !DIExpression()), !dbg !9229
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9245
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !9245
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9224, metadata !DIExpression()), !dbg !9229
  br label %while.cond, !dbg !9234, !llvm.loop !9246

while.end:                                        ; preds = %while.cond
  %cd.0.lcssa = phi i64 [ %cd.0, %while.cond ], !dbg !9229
  call void @llvm.dbg.value(metadata i64 %cd.0.lcssa, metadata !9226, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i64 %cd.0.lcssa, metadata !9226, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i64 %cd.0.lcssa, metadata !9226, metadata !DIExpression()), !dbg !9229
  %rem = srem i64 %call1, %cd.0.lcssa, !dbg !9248
  %cmp13 = icmp eq i64 %rem, 0, !dbg !9249
  %conv15 = zext i1 %cmp13 to i8, !dbg !9250
  br label %cleanup, !dbg !9251

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !9252

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %while.end
  %retval.0 = phi i8 [ %conv15, %while.end ], [ 1, %entry ], [ 1, %cleanup.loopexit ], !dbg !9229
  ret i8 %retval.0, !dbg !9252
}

declare dso_local zeroext i8 @double_int_fits_to_tree_p(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @double_int_to_tree(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @common_affine_function(%struct.conflict_function* %cf) unnamed_addr #5 !dbg !9253 {
entry:
  call void @llvm.dbg.value(metadata %struct.conflict_function* %cf, metadata !9257, metadata !DIExpression()), !dbg !9260
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %cf, i64 0, i32 0, !dbg !9261
  %0 = load i32, i32* %n, align 8, !dbg !9261
  %cmp = icmp eq i32 %0, 0, !dbg !9261
  br i1 %cmp, label %cleanup, label %land.lhs.true, !dbg !9261

land.lhs.true:                                    ; preds = %entry
  %cmp2 = icmp eq i32 %0, 3, !dbg !9261
  br i1 %cmp2, label %cleanup, label %if.end, !dbg !9263

if.end:                                           ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %cf, i64 0, i32 1, i64 0, !dbg !9264
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx, align 8, !dbg !9264
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %1, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata i32 1, metadata !9258, metadata !DIExpression()), !dbg !9260
  br label %for.cond, !dbg !9265

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %if.end ], !dbg !9267
  %2 = phi i32 [ %.pre, %for.inc ], [ %0, %if.end ], !dbg !9267
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9258, metadata !DIExpression()), !dbg !9260
  %3 = zext i32 %2 to i64, !dbg !9269
  %cmp4 = icmp ult i64 %indvars.iv, %3, !dbg !9269
  br i1 %cmp4, label %for.body, label %cleanup.loopexit, !dbg !9270

for.body:                                         ; preds = %for.cond
  %arrayidx6 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %cf, i64 0, i32 1, i64 %indvars.iv, !dbg !9271
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx6, align 8, !dbg !9271
  %call = tail call fastcc zeroext i8 @affine_function_equal_p(%struct.VEC_tree_heap* %1, %struct.VEC_tree_heap* %4) #8, !dbg !9273
  %tobool = icmp eq i8 %call, 0, !dbg !9273
  br i1 %tobool, label %cleanup.loopexit, label %for.inc, !dbg !9274

for.inc:                                          ; preds = %for.body
  %.pre = load i32, i32* %n, align 8, !dbg !9267
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9275
  br label %for.cond, !dbg !9276, !llvm.loop !9277

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi %struct.VEC_tree_heap* [ %1, %for.cond ], [ null, %for.body ]
  br label %cleanup, !dbg !9279

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %entry
  %retval.0 = phi %struct.VEC_tree_heap* [ null, %land.lhs.true ], [ null, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !9260
  ret %struct.VEC_tree_heap* %retval.0, !dbg !9279
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @affine_fn_minus(%struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) unnamed_addr #5 !dbg !9280 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fna, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fnb, metadata !9283, metadata !DIExpression()), !dbg !9284
  %call = tail call fastcc %struct.VEC_tree_heap* @affine_fn_op(i32 64, %struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) #8, !dbg !9285
  ret %struct.VEC_tree_heap* %call, !dbg !9286
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @affine_function_constant_p(%struct.VEC_tree_heap* %fn) unnamed_addr #5 !dbg !9287 {
entry:
  %coef = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fn, metadata !9291, metadata !DIExpression()), !dbg !9294
  %0 = bitcast %union.tree_node** %coef to i8*, !dbg !9295
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9295
  call void @llvm.dbg.value(metadata i32 1, metadata !9292, metadata !DIExpression()), !dbg !9294
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fn, i64 0, i32 0, !dbg !9296
  br label %for.cond, !dbg !9299

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ], !dbg !9300
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9292, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata %union.tree_node** %coef, metadata !9293, metadata !DIExpression(DW_OP_deref)), !dbg !9294
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %i.0, %union.tree_node** nonnull %coef) #8, !dbg !9301
  %tobool1 = icmp eq i32 %call, 0, !dbg !9302
  br i1 %tobool1, label %cleanup, label %for.body, !dbg !9302

for.body:                                         ; preds = %for.cond
  %1 = load %union.tree_node*, %union.tree_node** %coef, align 8, !dbg !9303
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9293, metadata !DIExpression()), !dbg !9294
  %call2 = call i32 @integer_zerop(%union.tree_node* %1) #7, !dbg !9305
  %tobool3 = icmp eq i32 %call2, 0, !dbg !9305
  br i1 %tobool3, label %cleanup, label %for.inc, !dbg !9306

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9292, metadata !DIExpression()), !dbg !9294
  br label %for.cond, !dbg !9308, !llvm.loop !9309

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !9294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9311
  ret i8 %retval.0, !dbg !9311
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @affine_function_base(%struct.VEC_tree_heap* %fn) unnamed_addr #5 !dbg !9312 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fn, metadata !9316, metadata !DIExpression()), !dbg !9317
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fn, i64 0, i32 0, !dbg !9318
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #8, !dbg !9318
  ret %union.tree_node* %call, !dbg !9319
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @affine_function_equal_p(%struct.VEC_tree_heap* %fna, %struct.VEC_tree_heap* %fnb) unnamed_addr #5 !dbg !9320 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fna, metadata !9324, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fnb, metadata !9325, metadata !DIExpression()), !dbg !9328
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fna, i64 0, i32 0, !dbg !9329
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #8, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %call, metadata !9327, metadata !DIExpression()), !dbg !9328
  %base3 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %fnb, i64 0, i32 0, !dbg !9330
  %call7 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base3) #8, !dbg !9330
  %cmp = icmp eq i32 %call, %call7, !dbg !9332
  br i1 %cmp, label %for.cond.preheader, label %cleanup, !dbg !9333

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !9334

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !9336
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9326, metadata !DIExpression()), !dbg !9328
  %exitcond = icmp eq i32 %i.0, %call, !dbg !9337
  br i1 %exitcond, label %cleanup.loopexit, label %for.body, !dbg !9334

for.body:                                         ; preds = %for.cond
  %call15 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 %i.0) #8, !dbg !9339
  %call22 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base3, i32 %i.0) #8, !dbg !9341
  %call23 = tail call i32 @operand_equal_p(%union.tree_node* %call15, %union.tree_node* %call22, i32 0) #7, !dbg !9342
  %tobool24 = icmp eq i32 %call23, 0, !dbg !9342
  br i1 %tobool24, label %cleanup.loopexit, label %for.inc, !dbg !9343

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9326, metadata !DIExpression()), !dbg !9328
  br label %for.cond, !dbg !9345, !llvm.loop !9346

cleanup.loopexit:                                 ; preds = %for.cond, %for.body
  %retval.0.ph = phi i8 [ 1, %for.cond ], [ 0, %for.body ]
  br label %cleanup, !dbg !9348

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i8 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !9328
  ret i8 %retval.0, !dbg !9348
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @same_access_functions(%struct.data_dependence_relation* %ddr) unnamed_addr #0 !dbg !9349 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9355, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i32 0, metadata !9356, metadata !DIExpression()), !dbg !9357
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9358
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !9361
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !9361
  br label %for.cond, !dbg !9363

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9364
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9356, metadata !DIExpression()), !dbg !9357
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9365
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !9365
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9365

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %0, i64 0, i32 0, !dbg !9365
  br label %cond.end, !dbg !9365

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !9365
  %call = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond) #8, !dbg !9365
  %cmp = icmp ult i32 %i.0, %call, !dbg !9366
  br i1 %cmp, label %for.body, label %cleanup, !dbg !9367

for.body:                                         ; preds = %cond.end
  %1 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !9368
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 5, i32 1, !dbg !9368
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !9368
  %tobool2 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !9368
  br i1 %tobool2, label %cond.end9, label %cond.true3, !dbg !9368

cond.true3:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !9368
  br label %cond.end9, !dbg !9368

cond.end9:                                        ; preds = %for.body, %cond.true3
  %cond10 = phi %struct.VEC_tree_base* [ %base7, %cond.true3 ], [ null, %for.body ], !dbg !9368
  %call11 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond10, i32 %i.0) #8, !dbg !9368
  %3 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !9369
  %access_fns13 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %3, i64 0, i32 5, i32 1, !dbg !9369
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns13, align 8, !dbg !9369
  %tobool14 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !9369
  br i1 %tobool14, label %cond.end21, label %cond.true15, !dbg !9369

cond.true15:                                      ; preds = %cond.end9
  %base19 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !9369
  br label %cond.end21, !dbg !9369

cond.end21:                                       ; preds = %cond.end9, %cond.true15
  %cond22 = phi %struct.VEC_tree_base* [ %base19, %cond.true15 ], [ null, %cond.end9 ], !dbg !9369
  %call23 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond22, i32 %i.0) #8, !dbg !9369
  %call24 = tail call zeroext i8 @eq_evolutions_p(%union.tree_node* %call11, %union.tree_node* %call23) #7, !dbg !9370
  %tobool25 = icmp eq i8 %call24, 0, !dbg !9370
  br i1 %tobool25, label %cleanup, label %for.inc, !dbg !9371

for.inc:                                          ; preds = %cond.end21
  %inc = add i32 %i.0, 1, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9356, metadata !DIExpression()), !dbg !9357
  br label %for.cond, !dbg !9373, !llvm.loop !9374

cleanup:                                          ; preds = %cond.end21, %cond.end
  %retval.0 = phi i8 [ 0, %cond.end21 ], [ 1, %cond.end ], !dbg !9357
  ret i8 %retval.0, !dbg !9376
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @lambda_vector_new(i32 %size) unnamed_addr #0 !dbg !9377 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !9381, metadata !DIExpression()), !dbg !9382
  %conv = sext i32 %size to i64, !dbg !9383
  %mul = shl nsw i64 %conv, 2, !dbg !9383
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #7, !dbg !9383
  %0 = bitcast i8* %call to i32*, !dbg !9383
  ret i32* %0, !dbg !9384
}

; Function Attrs: nounwind uwtable
define internal fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %dist_v) unnamed_addr #5 !dbg !9385 {
entry:
  %v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32* %dist_v, metadata !9390, metadata !DIExpression()), !dbg !9393
  %0 = bitcast i32** %v to i8*, !dbg !9394
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9394
  call void @llvm.dbg.value(metadata i32 0, metadata !9391, metadata !DIExpression()), !dbg !9393
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !9395
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9398
  br label %for.cond, !dbg !9400

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9401
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9391, metadata !DIExpression()), !dbg !9393
  %1 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !9402
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %1, null, !dbg !9402
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9402

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %1, i64 0, i32 0, !dbg !9402
  br label %cond.end, !dbg !9402

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !9402
  call void @llvm.dbg.value(metadata i32** %v, metadata !9392, metadata !DIExpression(DW_OP_deref)), !dbg !9393
  %call = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %cond, i32 %i.0, i32** nonnull %v) #8, !dbg !9402
  %tobool2 = icmp eq i32 %call, 0, !dbg !9403
  br i1 %tobool2, label %for.end, label %for.body, !dbg !9403

for.body:                                         ; preds = %cond.end
  %2 = load i32*, i32** %v, align 8, !dbg !9404
  call void @llvm.dbg.value(metadata i32* %2, metadata !9392, metadata !DIExpression()), !dbg !9393
  %3 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9405
  %tobool3 = icmp eq %struct.VEC_loop_p_heap* %3, null, !dbg !9405
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !9405

cond.true4:                                       ; preds = %for.body
  %base6 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !9405
  br label %cond.end8, !dbg !9405

cond.end8:                                        ; preds = %for.body, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %for.body ], !dbg !9405
  %call10 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond9) #8, !dbg !9405
  %call11 = call fastcc zeroext i8 @lambda_vector_equal(i32* %2, i32* %dist_v, i32 %call10) #8, !dbg !9406
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9406
  br i1 %tobool12, label %for.inc, label %cleanup.loopexit, !dbg !9407

for.inc:                                          ; preds = %cond.end8
  %inc = add i32 %i.0, 1, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9391, metadata !DIExpression()), !dbg !9393
  br label %for.cond, !dbg !9409, !llvm.loop !9410

for.end:                                          ; preds = %cond.end
  %call14 = call fastcc i32** @VEC_lambda_vector_heap_safe_push(%struct.VEC_lambda_vector_heap** nonnull %dist_vects, i32* %dist_v) #8, !dbg !9412
  br label %cleanup, !dbg !9413

cleanup.loopexit:                                 ; preds = %cond.end8
  br label %cleanup, !dbg !9413

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9413
  ret void, !dbg !9413
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @constant_access_functions(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !9414 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 0, metadata !9417, metadata !DIExpression()), !dbg !9418
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9419
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !9422
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !9422
  br label %for.cond, !dbg !9424

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9425
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9417, metadata !DIExpression()), !dbg !9418
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9426
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !9426
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9426

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %0, i64 0, i32 0, !dbg !9426
  br label %cond.end, !dbg !9426

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !9426
  %call = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond) #8, !dbg !9426
  %cmp = icmp ult i32 %i.0, %call, !dbg !9427
  br i1 %cmp, label %for.body, label %cleanup, !dbg !9428

for.body:                                         ; preds = %cond.end
  %1 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !9429
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %1, i64 0, i32 5, i32 1, !dbg !9429
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !9429
  %tobool2 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !9429
  br i1 %tobool2, label %cond.end9, label %cond.true3, !dbg !9429

cond.true3:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !9429
  br label %cond.end9, !dbg !9429

cond.end9:                                        ; preds = %for.body, %cond.true3
  %cond10 = phi %struct.VEC_tree_base* [ %base7, %cond.true3 ], [ null, %for.body ], !dbg !9429
  %call11 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond10, i32 %i.0) #8, !dbg !9429
  %call12 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %call11) #8, !dbg !9430
  %tobool13 = icmp eq i8 %call12, 0, !dbg !9430
  br i1 %tobool13, label %cleanup, label %lor.lhs.false, !dbg !9431

lor.lhs.false:                                    ; preds = %cond.end9
  %3 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !9432
  %access_fns15 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %3, i64 0, i32 5, i32 1, !dbg !9432
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns15, align 8, !dbg !9432
  %tobool16 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !9432
  br i1 %tobool16, label %cond.end23, label %cond.true17, !dbg !9432

cond.true17:                                      ; preds = %lor.lhs.false
  %base21 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !9432
  br label %cond.end23, !dbg !9432

cond.end23:                                       ; preds = %lor.lhs.false, %cond.true17
  %cond24 = phi %struct.VEC_tree_base* [ %base21, %cond.true17 ], [ null, %lor.lhs.false ], !dbg !9432
  %call25 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond24, i32 %i.0) #8, !dbg !9432
  %call26 = tail call fastcc zeroext i8 @evolution_function_is_constant_p(%union.tree_node* %call25) #8, !dbg !9433
  %tobool27 = icmp eq i8 %call26, 0, !dbg !9433
  br i1 %tobool27, label %cleanup, label %for.inc, !dbg !9434

for.inc:                                          ; preds = %cond.end23
  %inc = add i32 %i.0, 1, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9417, metadata !DIExpression()), !dbg !9418
  br label %for.cond, !dbg !9436, !llvm.loop !9437

cleanup:                                          ; preds = %cond.end23, %cond.end9, %cond.end
  %retval.0 = phi i8 [ 0, %cond.end23 ], [ 0, %cond.end9 ], [ 1, %cond.end ], !dbg !9418
  ret i8 %retval.0, !dbg !9439
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_distance_for_zero_overlaps(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !9440 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9442, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9443, metadata !DIExpression()), !dbg !9451
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9452
  br label %for.cond, !dbg !9453

for.cond:                                         ; preds = %for.inc32, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc33, %for.inc32 ], !dbg !9454
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9443, metadata !DIExpression()), !dbg !9451
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9455
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !9455
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9455

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %0, i64 0, i32 0, !dbg !9455
  br label %cond.end, !dbg !9455

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_subscript_p_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !9455
  %call = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond) #8, !dbg !9455
  %cmp = icmp ult i32 %i.0, %call, !dbg !9456
  br i1 %cmp, label %for.body, label %cleanup.cont38, !dbg !9457

for.body:                                         ; preds = %cond.end
  %1 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9458
  %tobool3 = icmp eq %struct.VEC_subscript_p_heap* %1, null, !dbg !9458
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !9458

cond.true4:                                       ; preds = %for.body
  %base6 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %1, i64 0, i32 0, !dbg !9458
  br label %cond.end8, !dbg !9458

cond.end8:                                        ; preds = %for.body, %cond.true4
  %cond9 = phi %struct.VEC_subscript_p_base* [ %base6, %cond.true4 ], [ null, %for.body ], !dbg !9458
  %call10 = tail call fastcc %struct.subscript* @VEC_subscript_p_base_index(%struct.VEC_subscript_p_base* %cond9, i32 %i.0) #8, !dbg !9458
  call void @llvm.dbg.value(metadata %struct.subscript* %call10, metadata !9445, metadata !DIExpression()), !dbg !9459
  %conflicting_iterations_in_a = getelementptr inbounds %struct.subscript, %struct.subscript* %call10, i64 0, i32 0, !dbg !9460
  %2 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_a, align 8, !dbg !9460
  call void @llvm.dbg.value(metadata %struct.conflict_function* %2, metadata !9449, metadata !DIExpression()), !dbg !9459
  %conflicting_iterations_in_b = getelementptr inbounds %struct.subscript, %struct.subscript* %call10, i64 0, i32 1, !dbg !9461
  %3 = load %struct.conflict_function*, %struct.conflict_function** %conflicting_iterations_in_b, align 8, !dbg !9461
  call void @llvm.dbg.value(metadata %struct.conflict_function* %3, metadata !9450, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 0, metadata !9444, metadata !DIExpression()), !dbg !9451
  %n = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %2, i64 0, i32 0, !dbg !9462
  br label %for.cond11, !dbg !9465

for.cond11:                                       ; preds = %for.inc, %cond.end8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end8 ], !dbg !9466
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9444, metadata !DIExpression()), !dbg !9451
  %4 = load i32, i32* %n, align 8, !dbg !9467
  %5 = zext i32 %4 to i64, !dbg !9468
  %cmp12 = icmp ult i64 %indvars.iv, %5, !dbg !9468
  br i1 %cmp12, label %for.body13, label %for.cond16.preheader, !dbg !9469

for.cond16.preheader:                             ; preds = %for.cond11
  %n17 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %3, i64 0, i32 0, !dbg !9470
  br label %for.cond16, !dbg !9473

for.body13:                                       ; preds = %for.cond11
  %arrayidx = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %2, i64 0, i32 1, i64 %indvars.iv, !dbg !9474
  %6 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx, align 8, !dbg !9474
  %call14 = tail call fastcc zeroext i8 @affine_function_zero_p(%struct.VEC_tree_heap* %6) #8, !dbg !9476
  %tobool15 = icmp eq i8 %call14, 0, !dbg !9476
  br i1 %tobool15, label %for.inc, label %if.then, !dbg !9477

if.then:                                          ; preds = %for.body13
  tail call fastcc void @insert_innermost_unit_dist_vector(%struct.data_dependence_relation* %ddr) #8, !dbg !9478
  br label %cleanup, !dbg !9480

for.inc:                                          ; preds = %for.body13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9481
  br label %for.cond11, !dbg !9482, !llvm.loop !9483

for.cond16:                                       ; preds = %for.cond16.preheader, %for.inc27
  %indvars.iv2 = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next3, %for.inc27 ], !dbg !9485
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !9444, metadata !DIExpression()), !dbg !9451
  %7 = load i32, i32* %n17, align 8, !dbg !9486
  %8 = zext i32 %7 to i64, !dbg !9487
  %cmp18 = icmp ult i64 %indvars.iv2, %8, !dbg !9487
  br i1 %cmp18, label %for.body19, label %cleanup.loopexit, !dbg !9473

for.body19:                                       ; preds = %for.cond16
  %arrayidx22 = getelementptr inbounds %struct.conflict_function, %struct.conflict_function* %3, i64 0, i32 1, i64 %indvars.iv2, !dbg !9488
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %arrayidx22, align 8, !dbg !9488
  %call23 = tail call fastcc zeroext i8 @affine_function_zero_p(%struct.VEC_tree_heap* %9) #8, !dbg !9490
  %tobool24 = icmp eq i8 %call23, 0, !dbg !9490
  br i1 %tobool24, label %for.inc27, label %if.then25, !dbg !9491

if.then25:                                        ; preds = %for.body19
  tail call fastcc void @insert_innermost_unit_dist_vector(%struct.data_dependence_relation* %ddr) #8, !dbg !9492
  br label %cleanup, !dbg !9494

for.inc27:                                        ; preds = %for.body19
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !9495
  br label %for.cond16, !dbg !9496, !llvm.loop !9497

cleanup.loopexit:                                 ; preds = %for.cond16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.then25, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ false, %if.then25 ], [ true, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %for.inc32, label %cleanup.cont38

for.inc32:                                        ; preds = %cleanup
  %inc33 = add i32 %i.0, 1, !dbg !9499
  call void @llvm.dbg.value(metadata i32 %inc33, metadata !9443, metadata !DIExpression()), !dbg !9451
  br label %for.cond, !dbg !9500, !llvm.loop !9501

cleanup.cont38:                                   ; preds = %cleanup, %cond.end
  ret void, !dbg !9503
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_other_self_distances(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !9504 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9506, metadata !DIExpression()), !dbg !9514
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9515
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9515
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !9515
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9515

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !9515
  br label %cond.end, !dbg !9515

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9515
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %call, metadata !9509, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 0, metadata !9508, metadata !DIExpression()), !dbg !9514
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9516
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !9517
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !9518
  %1 = bitcast %union.tree_node** %are_dependent to i64*, !dbg !9518
  %affine_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 9, !dbg !9525
  br label %for.cond, !dbg !9527

for.cond:                                         ; preds = %for.inc, %cond.end
  %index_carry.0 = phi i32 [ %call, %cond.end ], [ %index_carry.2, %for.inc ], !dbg !9514
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !9528
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9508, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %index_carry.0, metadata !9509, metadata !DIExpression()), !dbg !9514
  %2 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9529
  %tobool2 = icmp eq %struct.VEC_subscript_p_heap* %2, null, !dbg !9529
  br i1 %tobool2, label %cond.end7, label %cond.true3, !dbg !9529

cond.true3:                                       ; preds = %for.cond
  %base5 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !9529
  br label %cond.end7, !dbg !9529

cond.end7:                                        ; preds = %for.cond, %cond.true3
  %cond8 = phi %struct.VEC_subscript_p_base* [ %base5, %cond.true3 ], [ null, %for.cond ], !dbg !9529
  %call9 = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond8) #8, !dbg !9529
  %cmp = icmp ult i32 %i.0, %call9, !dbg !9530
  br i1 %cmp, label %for.body, label %for.end, !dbg !9531

for.body:                                         ; preds = %cond.end7
  %3 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !9532
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %3, i64 0, i32 5, i32 1, !dbg !9532
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !9532
  %tobool10 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !9532
  br i1 %tobool10, label %cond.end17, label %cond.true11, !dbg !9532

cond.true11:                                      ; preds = %for.body
  %base15 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !9532
  br label %cond.end17, !dbg !9532

cond.end17:                                       ; preds = %for.body, %cond.true11
  %cond18 = phi %struct.VEC_tree_base* [ %base15, %cond.true11 ], [ null, %for.body ], !dbg !9532
  %call19 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond18, i32 %i.0) #8, !dbg !9532
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !9510, metadata !DIExpression()), !dbg !9517
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9533
  %bf.load = load i64, i64* %5, align 8, !dbg !9533
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9534
  %cmp21 = icmp eq i64 %bf.cast2, 146, !dbg !9534
  br i1 %cmp21, label %if.then, label %cleanup, !dbg !9535

if.then:                                          ; preds = %cond.end17
  %call22 = tail call zeroext i8 @evolution_function_is_univariate_p(%union.tree_node* %call19) #7, !dbg !9536
  %tobool23 = icmp eq i8 %call22, 0, !dbg !9536
  br i1 %tobool23, label %if.then24, label %if.end56, !dbg !9537

if.then24:                                        ; preds = %if.then
  %6 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9538
  %tobool26 = icmp eq %struct.VEC_subscript_p_heap* %6, null, !dbg !9538
  br i1 %tobool26, label %cond.end31, label %cond.true27, !dbg !9538

cond.true27:                                      ; preds = %if.then24
  %base29 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %6, i64 0, i32 0, !dbg !9538
  br label %cond.end31, !dbg !9538

cond.end31:                                       ; preds = %if.then24, %cond.true27
  %cond32 = phi %struct.VEC_subscript_p_base* [ %base29, %cond.true27 ], [ null, %if.then24 ], !dbg !9538
  %call33 = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond32) #8, !dbg !9538
  %cmp34 = icmp eq i32 %call33, 1, !dbg !9539
  br i1 %cmp34, label %if.end, label %if.then35, !dbg !9540

if.then35:                                        ; preds = %cond.end31
  %7 = load i64, i64* bitcast (%union.tree_node** @chrec_dont_know to i64*), align 8, !dbg !9541
  store i64 %7, i64* %1, align 8, !dbg !9542
  br label %cleanup, !dbg !9543

if.end:                                           ; preds = %cond.end31
  %8 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !9544
  %access_fns38 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %8, i64 0, i32 5, i32 1, !dbg !9544
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns38, align 8, !dbg !9544
  %tobool39 = icmp eq %struct.VEC_tree_heap* %9, null, !dbg !9544
  br i1 %tobool39, label %cond.end46, label %cond.true40, !dbg !9544

cond.true40:                                      ; preds = %if.end
  %base44 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !9544
  br label %cond.end46, !dbg !9544

cond.end46:                                       ; preds = %if.end, %cond.true40
  %cond47 = phi %struct.VEC_tree_base* [ %base44, %cond.true40 ], [ null, %if.end ], !dbg !9544
  %call48 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond47, i32 0) #8, !dbg !9544
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !9510, metadata !DIExpression()), !dbg !9517
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9545
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9545
  %10 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !9545
  %11 = load i64*, i64** %10, align 8, !dbg !9545
  %bf.load50 = load i64, i64* %11, align 8, !dbg !9545
  %bf.cast523 = and i64 %bf.load50, 65535, !dbg !9546
  %cmp53 = icmp eq i64 %bf.cast523, 146, !dbg !9546
  br i1 %cmp53, label %if.then54, label %if.else, !dbg !9547

if.then54:                                        ; preds = %cond.end46
  tail call fastcc void @add_multivariate_self_dist(%struct.data_dependence_relation* %ddr, %union.tree_node* %call48) #8, !dbg !9548
  br label %cleanup, !dbg !9548

if.else:                                          ; preds = %cond.end46
  store i8 0, i8* %affine_p, align 1, !dbg !9549
  br label %cleanup

if.end56:                                         ; preds = %if.then
  %operands58 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9550
  %12 = bitcast %union.tree_node** %operands58 to %struct.tree_int_cst**, !dbg !9550
  %13 = load %struct.tree_int_cst*, %struct.tree_int_cst** %12, align 8, !dbg !9550
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %13, i64 0, i32 1, i32 0, !dbg !9550
  %14 = load i64, i64* %low, align 8, !dbg !9550
  %conv = trunc i64 %14 to i32, !dbg !9550
  %15 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9550
  %call62 = tail call fastcc i32 @index_in_loop_nest(i32 %conv, %struct.VEC_loop_p_heap* %15) #8, !dbg !9550
  %cmp63 = icmp slt i32 %index_carry.0, %call62, !dbg !9550
  br i1 %cmp63, label %cleanup, label %cond.false66, !dbg !9550

cond.false66:                                     ; preds = %if.end56
  %16 = load %struct.tree_int_cst*, %struct.tree_int_cst** %12, align 8, !dbg !9550
  %low72 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %16, i64 0, i32 1, i32 0, !dbg !9550
  %17 = load i64, i64* %low72, align 8, !dbg !9550
  %conv73 = trunc i64 %17 to i32, !dbg !9550
  %18 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9550
  %call75 = tail call fastcc i32 @index_in_loop_nest(i32 %conv73, %struct.VEC_loop_p_heap* %18) #8, !dbg !9550
  br label %cleanup, !dbg !9550

cleanup:                                          ; preds = %cond.end17, %if.end56, %cond.false66, %if.then54, %if.else, %if.then35
  %index_carry.2 = phi i32 [ %index_carry.0, %if.then35 ], [ %index_carry.0, %if.else ], [ %index_carry.0, %if.then54 ], [ %index_carry.0, %cond.end17 ], [ %call75, %cond.false66 ], [ %index_carry.0, %if.end56 ], !dbg !9514
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then35 ], [ false, %if.else ], [ false, %if.then54 ], [ true, %cond.end17 ], [ true, %cond.false66 ], [ true, %if.end56 ]
  call void @llvm.dbg.value(metadata i32 %index_carry.2, metadata !9509, metadata !DIExpression()), !dbg !9514
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup.cont93.loopexit

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9508, metadata !DIExpression()), !dbg !9514
  br label %for.cond, !dbg !9552, !llvm.loop !9553

for.end:                                          ; preds = %cond.end7
  %index_carry.0.lcssa = phi i32 [ %index_carry.0, %cond.end7 ], !dbg !9514
  call void @llvm.dbg.value(metadata i32 %index_carry.0.lcssa, metadata !9509, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %index_carry.0.lcssa, metadata !9509, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %index_carry.0.lcssa, metadata !9509, metadata !DIExpression()), !dbg !9514
  %19 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9555
  %tobool80 = icmp eq %struct.VEC_loop_p_heap* %19, null, !dbg !9555
  br i1 %tobool80, label %cond.end85, label %cond.true81, !dbg !9555

cond.true81:                                      ; preds = %for.end
  %base83 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %19, i64 0, i32 0, !dbg !9555
  br label %cond.end85, !dbg !9555

cond.end85:                                       ; preds = %for.end, %cond.true81
  %cond86 = phi %struct.VEC_loop_p_base* [ %base83, %cond.true81 ], [ null, %for.end ], !dbg !9555
  %call87 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond86) #8, !dbg !9555
  %call88 = tail call fastcc i32* @lambda_vector_new(i32 %call87) #8, !dbg !9556
  call void @llvm.dbg.value(metadata i32* %call88, metadata !9507, metadata !DIExpression()), !dbg !9514
  tail call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call88, i32 %index_carry.0.lcssa) #8, !dbg !9557
  br label %cleanup.cont93, !dbg !9558

cleanup.cont93.loopexit:                          ; preds = %cleanup
  br label %cleanup.cont93, !dbg !9558

cleanup.cont93:                                   ; preds = %cleanup.cont93.loopexit, %cond.end85
  ret void, !dbg !9558
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @build_classic_dist_vector_1(%struct.data_dependence_relation* %ddr, %struct.data_reference* %ddr_a, %struct.data_reference* %ddr_b, i32* %dist_v, i8* %init_b, i32* %index_carry) unnamed_addr #5 !dbg !9559 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9563, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata %struct.data_reference* %ddr_a, metadata !9564, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata %struct.data_reference* %ddr_b, metadata !9565, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32* %dist_v, metadata !9566, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i8* %init_b, metadata !9567, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32* %index_carry, metadata !9568, metadata !DIExpression()), !dbg !9583
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9584
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9584
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !9584
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9584

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !9584
  br label %cond.end, !dbg !9584

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9584
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9584
  %call2 = tail call fastcc i32* @lambda_vector_new(i32 %call) #8, !dbg !9585
  call void @llvm.dbg.value(metadata i32* %call2, metadata !9570, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 0, metadata !9569, metadata !DIExpression()), !dbg !9583
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9586
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ddr_a, i64 0, i32 5, i32 1, !dbg !9587
  %access_fns32 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %ddr_b, i64 0, i32 5, i32 1, !dbg !9587
  br label %for.cond, !dbg !9588

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !9589
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9569, metadata !DIExpression()), !dbg !9583
  %1 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9590
  %tobool3 = icmp eq %struct.VEC_subscript_p_heap* %1, null, !dbg !9590
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !9590

cond.true4:                                       ; preds = %for.cond
  %base6 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %1, i64 0, i32 0, !dbg !9590
  br label %cond.end8, !dbg !9590

cond.end8:                                        ; preds = %for.cond, %cond.true4
  %cond9 = phi %struct.VEC_subscript_p_base* [ %base6, %cond.true4 ], [ null, %for.cond ], !dbg !9590
  %call10 = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond9) #8, !dbg !9590
  %cmp = icmp ult i32 %i.0, %call10, !dbg !9591
  br i1 %cmp, label %for.body, label %cleanup109, !dbg !9592

for.body:                                         ; preds = %cond.end8
  %2 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9593
  %tobool12 = icmp eq %struct.VEC_subscript_p_heap* %2, null, !dbg !9593
  br i1 %tobool12, label %cond.end17, label %cond.true13, !dbg !9593

cond.true13:                                      ; preds = %for.body
  %base15 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !9593
  br label %cond.end17, !dbg !9593

cond.end17:                                       ; preds = %for.body, %cond.true13
  %cond18 = phi %struct.VEC_subscript_p_base* [ %base15, %cond.true13 ], [ null, %for.body ], !dbg !9593
  %call19 = tail call fastcc %struct.subscript* @VEC_subscript_p_base_index(%struct.VEC_subscript_p_base* %cond18, i32 %i.0) #8, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.subscript* %call19, metadata !9576, metadata !DIExpression()), !dbg !9587
  %distance = getelementptr inbounds %struct.subscript, %struct.subscript* %call19, i64 0, i32 3, !dbg !9594
  %3 = load %union.tree_node*, %union.tree_node** %distance, align 8, !dbg !9594
  %call20 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %3) #7, !dbg !9596
  %tobool21 = icmp eq i8 %call20, 0, !dbg !9596
  br i1 %tobool21, label %if.end, label %if.then, !dbg !9597

if.then:                                          ; preds = %cond.end17
  tail call fastcc void @non_affine_dependence_relation(%struct.data_dependence_relation* %ddr) #8, !dbg !9598
  br label %cleanup104, !dbg !9600

if.end:                                           ; preds = %cond.end17
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !9601
  %tobool22 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !9601
  br i1 %tobool22, label %cond.end28, label %cond.true23, !dbg !9601

cond.true23:                                      ; preds = %if.end
  %base26 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !9601
  br label %cond.end28, !dbg !9601

cond.end28:                                       ; preds = %if.end, %cond.true23
  %cond29 = phi %struct.VEC_tree_base* [ %base26, %cond.true23 ], [ null, %if.end ], !dbg !9601
  %call30 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond29, i32 %i.0) #8, !dbg !9601
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !9571, metadata !DIExpression()), !dbg !9587
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns32, align 8, !dbg !9602
  %tobool33 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !9602
  br i1 %tobool33, label %cond.end39, label %cond.true34, !dbg !9602

cond.true34:                                      ; preds = %cond.end28
  %base37 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !9602
  br label %cond.end39, !dbg !9602

cond.end39:                                       ; preds = %cond.end28, %cond.true34
  %cond40 = phi %struct.VEC_tree_base* [ %base37, %cond.true34 ], [ null, %cond.end28 ], !dbg !9602
  %call41 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond40, i32 %i.0) #8, !dbg !9602
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !9575, metadata !DIExpression()), !dbg !9587
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9603
  %bf.load = load i64, i64* %6, align 8, !dbg !9603
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !9604
  %cmp43 = icmp eq i64 %bf.cast3, 146, !dbg !9604
  br i1 %cmp43, label %land.lhs.true, label %if.else, !dbg !9605

land.lhs.true:                                    ; preds = %cond.end39
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9606
  %bf.load45 = load i64, i64* %7, align 8, !dbg !9606
  %bf.cast474 = and i64 %bf.load45, 65535, !dbg !9607
  %cmp48 = icmp eq i64 %bf.cast474, 146, !dbg !9607
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !9608

if.then49:                                        ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9609
  %8 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !9609
  %9 = load %struct.tree_int_cst*, %struct.tree_int_cst** %8, align 8, !dbg !9609
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %9, i64 0, i32 1, i32 0, !dbg !9609
  %10 = load i64, i64* %low, align 8, !dbg !9609
  %conv = trunc i64 %10 to i32, !dbg !9609
  %11 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9610
  %call52 = tail call fastcc i32 @index_in_loop_nest(i32 %conv, %struct.VEC_loop_p_heap* %11) #8, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %call52, metadata !9581, metadata !DIExpression()), !dbg !9612
  %operands54 = getelementptr inbounds %union.tree_node, %union.tree_node* %call41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9613
  %12 = bitcast %union.tree_node** %operands54 to %struct.tree_int_cst**, !dbg !9613
  %13 = load %struct.tree_int_cst*, %struct.tree_int_cst** %12, align 8, !dbg !9613
  %low58 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %13, i64 0, i32 1, i32 0, !dbg !9613
  %14 = load i64, i64* %low58, align 8, !dbg !9613
  %conv59 = trunc i64 %14 to i32, !dbg !9613
  %15 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9614
  %call61 = tail call fastcc i32 @index_in_loop_nest(i32 %conv59, %struct.VEC_loop_p_heap* %15) #8, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %call61, metadata !9582, metadata !DIExpression()), !dbg !9612
  %cmp62 = icmp slt i32 %call52, %call61, !dbg !9616
  %call52.call61 = select i1 %cmp62, i32 %call52, i32 %call61, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %call52.call61, metadata !9580, metadata !DIExpression()), !dbg !9612
  %16 = load i32, i32* %index_carry, align 4, !dbg !9618
  %cmp68 = icmp slt i32 %call52.call61, %16, !dbg !9618
  br i1 %cmp68, label %cond.end72, label %cond.false71, !dbg !9618

cond.false71:                                     ; preds = %if.then49
  br label %cond.end72, !dbg !9618

cond.end72:                                       ; preds = %if.then49, %cond.false71
  %cond73 = phi i32 [ %16, %cond.false71 ], [ %call52.call61, %if.then49 ], !dbg !9618
  store i32 %cond73, i32* %index_carry, align 4, !dbg !9619
  %17 = load %union.tree_node*, %union.tree_node** %distance, align 8, !dbg !9620
  %call75 = tail call zeroext i8 @chrec_contains_undetermined(%union.tree_node* %17) #7, !dbg !9622
  %tobool76 = icmp eq i8 %call75, 0, !dbg !9622
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !9623

if.then77:                                        ; preds = %cond.end72
  tail call fastcc void @non_affine_dependence_relation(%struct.data_dependence_relation* %ddr) #8, !dbg !9624
  br label %cleanup, !dbg !9626

if.end78:                                         ; preds = %cond.end72
  %18 = load %union.tree_node*, %union.tree_node** %distance, align 8, !dbg !9627
  %call80 = tail call i64 @int_cst_value(%union.tree_node* %18) #7, !dbg !9628
  %conv81 = trunc i64 %call80 to i32, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %conv81, metadata !9577, metadata !DIExpression()), !dbg !9612
  %idxprom = sext i32 %call52.call61 to i64, !dbg !9629
  %arrayidx82 = getelementptr inbounds i32, i32* %call2, i64 %idxprom, !dbg !9629
  %19 = load i32, i32* %arrayidx82, align 4, !dbg !9629
  %cmp83 = icmp eq i32 %19, 0, !dbg !9631
  br i1 %cmp83, label %if.end91, label %land.lhs.true85, !dbg !9632

land.lhs.true85:                                  ; preds = %if.end78
  %arrayidx87 = getelementptr inbounds i32, i32* %dist_v, i64 %idxprom, !dbg !9633
  %20 = load i32, i32* %arrayidx87, align 4, !dbg !9633
  %cmp88 = icmp eq i32 %20, %conv81, !dbg !9634
  br i1 %cmp88, label %if.end91, label %if.then90, !dbg !9635

if.then90:                                        ; preds = %land.lhs.true85
  %21 = load %union.tree_node*, %union.tree_node** @chrec_known, align 8, !dbg !9636
  tail call fastcc void @finalize_ddr_dependent(%struct.data_dependence_relation* %ddr, %union.tree_node* %21) #8, !dbg !9638
  br label %cleanup, !dbg !9639

if.end91:                                         ; preds = %land.lhs.true85, %if.end78
  %arrayidx93 = getelementptr inbounds i32, i32* %dist_v, i64 %idxprom, !dbg !9640
  store i32 %conv81, i32* %arrayidx93, align 4, !dbg !9641
  store i32 1, i32* %arrayidx82, align 4, !dbg !9642
  store i8 1, i8* %init_b, align 1, !dbg !9643
  br label %cleanup, !dbg !9644

cleanup:                                          ; preds = %if.end91, %if.then90, %if.then77
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then77 ], [ 1, %if.then90 ], [ 0, %if.end91 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end103, label %cleanup104

if.else:                                          ; preds = %land.lhs.true, %cond.end39
  %call99 = tail call i32 @operand_equal_p(%union.tree_node* %call30, %union.tree_node* %call41, i32 0) #7, !dbg !9645
  %tobool100 = icmp eq i32 %call99, 0, !dbg !9645
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !9647

if.then101:                                       ; preds = %if.else
  tail call fastcc void @non_affine_dependence_relation(%struct.data_dependence_relation* %ddr) #8, !dbg !9648
  br label %cleanup104, !dbg !9650

if.end103:                                        ; preds = %if.else, %cleanup
  br label %cleanup104, !dbg !9651

cleanup104:                                       ; preds = %cleanup, %if.end103, %if.then101, %if.then
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then ], [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end103 ], [ 1, %if.then101 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %for.inc, label %cleanup109

for.inc:                                          ; preds = %cleanup104
  %inc = add i32 %i.0, 1, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9569, metadata !DIExpression()), !dbg !9583
  br label %for.cond, !dbg !9653, !llvm.loop !9654

cleanup109:                                       ; preds = %cond.end8, %cleanup104
  %retval.4 = phi i8 [ 0, %cleanup104 ], [ 1, %cond.end8 ], !dbg !9583
  ret i8 %retval.4, !dbg !9656
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lambda_vector_lexico_pos(i32* %v, i32 %n) unnamed_addr #0 !dbg !9657 {
entry:
  call void @llvm.dbg.value(metadata i32* %v, metadata !9661, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i32 %n, metadata !9662, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i32 0, metadata !9663, metadata !DIExpression()), !dbg !9664
  %wide.trip.count = zext i32 %n to i64, !dbg !9665
  br label %for.cond, !dbg !9668

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !9669
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9663, metadata !DIExpression()), !dbg !9664
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !9665
  br i1 %exitcond, label %cleanup, label %for.body, !dbg !9670

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %v, i64 %indvars.iv, !dbg !9671
  %0 = load i32, i32* %arrayidx, align 4, !dbg !9671
  %cmp1 = icmp eq i32 %0, 0, !dbg !9674
  br i1 %cmp1, label %for.inc, label %if.end, !dbg !9675

if.end:                                           ; preds = %for.body
  %cmp4 = icmp slt i32 %0, 0, !dbg !9676
  br i1 %cmp4, label %cleanup, label %if.end6, !dbg !9678

if.end6:                                          ; preds = %if.end
  %cmp9 = icmp eq i32 %0, 0, !dbg !9679
  br i1 %cmp9, label %for.inc, label %cleanup, !dbg !9681

for.inc:                                          ; preds = %if.end6, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9682
  br label %for.cond, !dbg !9683, !llvm.loop !9684

cleanup:                                          ; preds = %if.end6, %for.cond, %if.end
  %retval.0 = phi i8 [ 0, %if.end ], [ 1, %if.end6 ], [ 1, %for.cond ], !dbg !9664
  ret i8 %retval.0, !dbg !9686
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %dist_v, i32 %index) unnamed_addr #5 !dbg !9687 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9691, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i32* %dist_v, metadata !9692, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i32 %index, metadata !9693, metadata !DIExpression()), !dbg !9696
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9697
  %0 = sext i32 %index to i64, !dbg !9698
  br label %while.cond, !dbg !9698

while.cond:                                       ; preds = %cond.end9, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end9 ], [ %0, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9693, metadata !DIExpression()), !dbg !9696
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !9699
  call void @llvm.dbg.value(metadata i32 undef, metadata !9693, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9696
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !9700
  br i1 %cmp, label %while.body, label %while.end, !dbg !9698

while.body:                                       ; preds = %while.cond
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9701
  %tobool = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !9701
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9701

cond.true:                                        ; preds = %while.body
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !9701
  br label %cond.end, !dbg !9701

cond.end:                                         ; preds = %while.body, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %while.body ], !dbg !9701
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9701
  %call2 = tail call fastcc i32* @lambda_vector_new(i32 %call) #8, !dbg !9702
  call void @llvm.dbg.value(metadata i32* %call2, metadata !9694, metadata !DIExpression()), !dbg !9697
  %2 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9703
  %tobool4 = icmp eq %struct.VEC_loop_p_heap* %2, null, !dbg !9703
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !9703

cond.true5:                                       ; preds = %cond.end
  %base7 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %2, i64 0, i32 0, !dbg !9703
  br label %cond.end9, !dbg !9703

cond.end9:                                        ; preds = %cond.end, %cond.true5
  %cond10 = phi %struct.VEC_loop_p_base* [ %base7, %cond.true5 ], [ null, %cond.end ], !dbg !9703
  %call11 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond10) #8, !dbg !9703
  tail call fastcc void @lambda_vector_copy(i32* %dist_v, i32* %call2, i32 %call11) #8, !dbg !9704
  %arrayidx = getelementptr inbounds i32, i32* %call2, i64 %indvars.iv.next, !dbg !9705
  store i32 1, i32* %arrayidx, align 4, !dbg !9706
  tail call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call2) #8, !dbg !9707
  br label %while.cond, !dbg !9698, !llvm.loop !9708

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9710
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @lambda_vector_copy(i32* %vec1, i32* %vec2, i32 %size) unnamed_addr #0 !dbg !9711 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !9715, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32* %vec2, metadata !9716, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %size, metadata !9717, metadata !DIExpression()), !dbg !9718
  %0 = bitcast i32* %vec2 to i8*, !dbg !9719
  %1 = bitcast i32* %vec1 to i8*, !dbg !9720
  %conv = sext i32 %size to i64, !dbg !9721
  %mul = shl nsw i64 %conv, 2, !dbg !9722
  %call = tail call i8* @memcpy(i8* %0, i8* %1, i64 %mul) #7, !dbg !9723
  ret void, !dbg !9724
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lambda_vector_first_nz(i32* %vec1, i32 %n, i32 %start) unnamed_addr #0 !dbg !9725 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !9729, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 %n, metadata !9730, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 0, metadata !9731, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 0, metadata !9732, metadata !DIExpression()), !dbg !9733
  %0 = sext i32 %n to i64, !dbg !9734
  br label %while.cond, !dbg !9734

while.cond:                                       ; preds = %while.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body ], [ 0, %entry ], !dbg !9733
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9732, metadata !DIExpression()), !dbg !9733
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !9735
  %1 = trunc i64 %indvars.iv to i32, !dbg !9736
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !9736

land.rhs:                                         ; preds = %while.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !9737
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9737
  %cmp1 = icmp eq i32 %2, 0, !dbg !9738
  br i1 %cmp1, label %while.body, label %while.end, !dbg !9734

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9739
  call void @llvm.dbg.value(metadata i32 undef, metadata !9732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9733
  br label %while.cond, !dbg !9734, !llvm.loop !9740

while.end:                                        ; preds = %while.cond, %land.rhs
  %.lcssa = phi i32 [ %1, %while.cond ], [ %1, %land.rhs ], !dbg !9736
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9732, metadata !DIExpression()), !dbg !9733
  ret i32 %.lcssa, !dbg !9741
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lambda_vector_equal(i32* %vec1, i32* %vec2, i32 %size) unnamed_addr #0 !dbg !9742 {
entry:
  call void @llvm.dbg.value(metadata i32* %vec1, metadata !9746, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.value(metadata i32* %vec2, metadata !9747, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.value(metadata i32 %size, metadata !9748, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.value(metadata i32 0, metadata !9749, metadata !DIExpression()), !dbg !9750
  %0 = sext i32 %size to i64, !dbg !9751
  br label %for.cond, !dbg !9751

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !9753
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9749, metadata !DIExpression()), !dbg !9750
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !9754
  br i1 %cmp, label %for.body, label %cleanup, !dbg !9756

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %vec1, i64 %indvars.iv, !dbg !9757
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9757
  %arrayidx2 = getelementptr inbounds i32, i32* %vec2, i64 %indvars.iv, !dbg !9759
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !9759
  %cmp3 = icmp eq i32 %1, %2, !dbg !9760
  br i1 %cmp3, label %for.inc, label %cleanup, !dbg !9761

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9762
  call void @llvm.dbg.value(metadata i32 undef, metadata !9749, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9750
  br label %for.cond, !dbg !9763, !llvm.loop !9764

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !9750
  ret i8 %retval.0, !dbg !9766
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32** @VEC_lambda_vector_heap_safe_push(%struct.VEC_lambda_vector_heap** %vec_, i32* %obj_) unnamed_addr #0 !dbg !9767 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap** %vec_, metadata !9771, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32* %obj_, metadata !9772, metadata !DIExpression()), !dbg !9773
  %call = tail call fastcc i32 @VEC_lambda_vector_heap_reserve(%struct.VEC_lambda_vector_heap** %vec_, i32 1) #8, !dbg !9774
  %0 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %vec_, align 8, !dbg !9774
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %0, null, !dbg !9774
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9774

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %0, i64 0, i32 0, !dbg !9774
  br label %cond.end, !dbg !9774

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9774
  %call1 = tail call fastcc i32** @VEC_lambda_vector_base_quick_push(%struct.VEC_lambda_vector_base* %cond, i32* %obj_) #8, !dbg !9774
  ret i32** %call1, !dbg !9774
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_vector_heap_reserve(%struct.VEC_lambda_vector_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9775 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_heap** %vec_, metadata !9779, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 1, metadata !9780, metadata !DIExpression()), !dbg !9782
  %0 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %vec_, align 8, !dbg !9783
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %0, null, !dbg !9783
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9783

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %0, i64 0, i32 0, !dbg !9783
  br label %cond.end, !dbg !9783

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9783
  %call = tail call fastcc i32 @VEC_lambda_vector_base_space(%struct.VEC_lambda_vector_base* %cond, i32 1) #8, !dbg !9783
  %tobool1 = icmp eq i32 %call, 0, !dbg !9783
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !9781, metadata !DIExpression()), !dbg !9782
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9783

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_lambda_vector_heap** %vec_ to i8**, !dbg !9784
  %2 = load i8*, i8** %1, align 8, !dbg !9784
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !9784
  store i8* %call3, i8** %1, align 8, !dbg !9784
  br label %if.end, !dbg !9784

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !9783
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32** @VEC_lambda_vector_base_quick_push(%struct.VEC_lambda_vector_base* %vec_, i32* %obj_) unnamed_addr #0 !dbg !9786 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !9791, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i32* %obj_, metadata !9792, metadata !DIExpression()), !dbg !9794
  %num1 = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !9795
  %0 = load i32, i32* %num1, align 8, !dbg !9795
  %inc = add i32 %0, 1, !dbg !9795
  store i32 %inc, i32* %num1, align 8, !dbg !9795
  %idxprom = zext i32 %0 to i64, !dbg !9795
  %arrayidx = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9795
  call void @llvm.dbg.value(metadata i32** %arrayidx, metadata !9793, metadata !DIExpression()), !dbg !9794
  store i32* %obj_, i32** %arrayidx, align 8, !dbg !9795
  ret i32** %arrayidx, !dbg !9795
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_lambda_vector_base_space(%struct.VEC_lambda_vector_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !9796 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_lambda_vector_base* %vec_, metadata !9800, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 1, metadata !9801, metadata !DIExpression()), !dbg !9802
  %tobool = icmp eq %struct.VEC_lambda_vector_base* %vec_, null, !dbg !9803
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9803

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 1, !dbg !9803
  %0 = load i32, i32* %alloc, align 4, !dbg !9803
  %num = getelementptr inbounds %struct.VEC_lambda_vector_base, %struct.VEC_lambda_vector_base* %vec_, i64 0, i32 0, !dbg !9803
  %1 = load i32, i32* %num, align 8, !dbg !9803
  %cmp1 = icmp ne i32 %0, %1, !dbg !9803
  %phitmp = zext i1 %cmp1 to i32, !dbg !9803
  br label %cond.end, !dbg !9803

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9803

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !9803
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @affine_function_zero_p(%struct.VEC_tree_heap* %fn) unnamed_addr #5 !dbg !9804 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %fn, metadata !9806, metadata !DIExpression()), !dbg !9807
  %call = tail call fastcc %union.tree_node* @affine_function_base(%struct.VEC_tree_heap* %fn) #8, !dbg !9808
  %call1 = tail call i32 @integer_zerop(%union.tree_node* %call) #7, !dbg !9809
  %tobool = icmp eq i32 %call1, 0, !dbg !9809
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !9810

land.rhs:                                         ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @affine_function_constant_p(%struct.VEC_tree_heap* %fn) #8, !dbg !9811
  %tobool3 = icmp ne i8 %call2, 0, !dbg !9810
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !9812
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_innermost_unit_dist_vector(%struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !9813 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9815, metadata !DIExpression()), !dbg !9817
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9818
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9818
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !9818
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9818

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !9818
  br label %cond.end, !dbg !9818

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9818
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9818
  %call2 = tail call fastcc i32* @lambda_vector_new(i32 %call) #8, !dbg !9819
  call void @llvm.dbg.value(metadata i32* %call2, metadata !9816, metadata !DIExpression()), !dbg !9817
  %inner_loop = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 7, !dbg !9820
  %1 = load i32, i32* %inner_loop, align 8, !dbg !9820
  %idxprom = zext i32 %1 to i64, !dbg !9821
  %arrayidx = getelementptr inbounds i32, i32* %call2, i64 %idxprom, !dbg !9821
  store i32 1, i32* %arrayidx, align 4, !dbg !9822
  tail call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call2) #8, !dbg !9823
  ret void, !dbg !9824
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_multivariate_self_dist(%struct.data_dependence_relation* %ddr, %union.tree_node* %c_2) unnamed_addr #5 !dbg !9825 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9827, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata %union.tree_node* %c_2, metadata !9828, metadata !DIExpression()), !dbg !9837
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %c_2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9838
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9838
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9838
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9831, metadata !DIExpression()), !dbg !9837
  %operands2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9839
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands2, i64 1, !dbg !9839
  %1 = bitcast %union.tree_node** %arrayidx3 to i64**, !dbg !9839
  %2 = load i64*, i64** %1, align 8, !dbg !9839
  %bf.load = load i64, i64* %2, align 8, !dbg !9840
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9842
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !9842
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !9843

lor.lhs.false:                                    ; preds = %entry
  %arrayidx6 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands2, i64 2, !dbg !9844
  %3 = bitcast %union.tree_node** %arrayidx6 to i64**, !dbg !9844
  %4 = load i64*, i64** %3, align 8, !dbg !9844
  %bf.load8 = load i64, i64* %4, align 8, !dbg !9844
  %bf.cast102 = and i64 %bf.load8, 65535, !dbg !9845
  %cmp11 = icmp eq i64 %bf.cast102, 23, !dbg !9845
  br i1 %cmp11, label %lor.lhs.false12, label %if.then, !dbg !9846

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !9847
  %5 = bitcast %union.tree_node** %arrayidx15 to i64**, !dbg !9847
  %6 = load i64*, i64** %5, align 8, !dbg !9847
  %bf.load17 = load i64, i64* %6, align 8, !dbg !9847
  %bf.cast193 = and i64 %bf.load17, 65535, !dbg !9848
  %cmp20 = icmp eq i64 %bf.cast193, 23, !dbg !9848
  br i1 %cmp20, label %if.end, label %if.then, !dbg !9849

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  %affine_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 9, !dbg !9850
  store i8 0, i8* %affine_p, align 1, !dbg !9852
  br label %cleanup.cont, !dbg !9853

if.end:                                           ; preds = %lor.lhs.false12
  %7 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !9854
  %8 = load %struct.tree_int_cst*, %struct.tree_int_cst** %7, align 8, !dbg !9854
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %8, i64 0, i32 1, i32 0, !dbg !9854
  %9 = load i64, i64* %low, align 8, !dbg !9854
  %conv = trunc i64 %9 to i32, !dbg !9854
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9855
  %10 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9855
  %call = tail call fastcc i32 @index_in_loop_nest(i32 %conv, %struct.VEC_loop_p_heap* %10) #8, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %call, metadata !9830, metadata !DIExpression()), !dbg !9837
  %11 = bitcast %union.tree_node** %operands2 to %struct.tree_int_cst**, !dbg !9857
  %12 = load %struct.tree_int_cst*, %struct.tree_int_cst** %11, align 8, !dbg !9857
  %low30 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %12, i64 0, i32 1, i32 0, !dbg !9857
  %13 = load i64, i64* %low30, align 8, !dbg !9857
  %conv31 = trunc i64 %13 to i32, !dbg !9857
  %14 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9858
  %call33 = tail call fastcc i32 @index_in_loop_nest(i32 %conv31, %struct.VEC_loop_p_heap* %14) #8, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %call33, metadata !9829, metadata !DIExpression()), !dbg !9837
  %15 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9860
  %tobool = icmp eq %struct.VEC_loop_p_heap* %15, null, !dbg !9860
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9860

cond.true:                                        ; preds = %if.end
  %base36 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %15, i64 0, i32 0, !dbg !9860
  br label %cond.end, !dbg !9860

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base36, %cond.true ], [ null, %if.end ], !dbg !9860
  %call37 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9860
  %call38 = tail call fastcc i32* @lambda_vector_new(i32 %call37) #8, !dbg !9861
  call void @llvm.dbg.value(metadata i32* %call38, metadata !9833, metadata !DIExpression()), !dbg !9837
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8, !dbg !9862
  %call42 = tail call i64 @int_cst_value(%union.tree_node* %16) #7, !dbg !9863
  %conv43 = trunc i64 %call42 to i32, !dbg !9863
  call void @llvm.dbg.value(metadata i32 %conv43, metadata !9834, metadata !DIExpression()), !dbg !9837
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !9864
  %call47 = tail call i64 @int_cst_value(%union.tree_node* %17) #7, !dbg !9865
  %conv48 = trunc i64 %call47 to i32, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %conv48, metadata !9835, metadata !DIExpression()), !dbg !9837
  %call49 = tail call fastcc i32 @gcd(i32 %conv43, i32 %conv48) #8, !dbg !9866
  call void @llvm.dbg.value(metadata i32 %call49, metadata !9836, metadata !DIExpression()), !dbg !9837
  %div = sdiv i32 %conv43, %call49, !dbg !9867
  call void @llvm.dbg.value(metadata i32 %div, metadata !9834, metadata !DIExpression()), !dbg !9837
  %div50 = sdiv i32 %conv48, %call49, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %div50, metadata !9835, metadata !DIExpression()), !dbg !9837
  %cmp51 = icmp slt i32 %div50, 0, !dbg !9869
  %sub = sub nsw i32 0, %div50, !dbg !9871
  %sub54 = sub nsw i32 0, %div, !dbg !9871
  %v1.0 = select i1 %cmp51, i32 %sub54, i32 %div, !dbg !9871
  %v2.0 = select i1 %cmp51, i32 %sub, i32 %div50, !dbg !9871
  call void @llvm.dbg.value(metadata i32 %v2.0, metadata !9835, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i32 %v1.0, metadata !9834, metadata !DIExpression()), !dbg !9837
  %idxprom = sext i32 %call33 to i64, !dbg !9872
  %arrayidx56 = getelementptr inbounds i32, i32* %call38, i64 %idxprom, !dbg !9872
  store i32 %v2.0, i32* %arrayidx56, align 4, !dbg !9873
  %sub57 = sub nsw i32 0, %v1.0, !dbg !9874
  %idxprom58 = sext i32 %call to i64, !dbg !9875
  %arrayidx59 = getelementptr inbounds i32, i32* %call38, i64 %idxprom58, !dbg !9875
  store i32 %sub57, i32* %arrayidx59, align 4, !dbg !9876
  tail call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call38) #8, !dbg !9877
  tail call fastcc void @add_outer_distances(%struct.data_dependence_relation* %ddr, i32* %call38, i32 %call33) #8, !dbg !9878
  br label %cleanup.cont, !dbg !9879

cleanup.cont:                                     ; preds = %if.then, %cond.end
  ret void, !dbg !9879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @index_in_loop_nest(i32 %var, %struct.VEC_loop_p_heap* %loop_nest) unnamed_addr #0 !dbg !9880 {
entry:
  %loopi = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata i32 %var, metadata !9884, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap* %loop_nest, metadata !9885, metadata !DIExpression()), !dbg !9888
  %0 = bitcast %struct.loop** %loopi to i8*, !dbg !9889
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9889
  call void @llvm.dbg.value(metadata i32 0, metadata !9887, metadata !DIExpression()), !dbg !9888
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %loop_nest, i64 0, i32 0, !dbg !9890
  br label %for.cond, !dbg !9893

for.cond:                                         ; preds = %for.inc, %entry
  %var_index.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9894
  call void @llvm.dbg.value(metadata i32 %var_index.0, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata %struct.loop** %loopi, metadata !9886, metadata !DIExpression(DW_OP_deref)), !dbg !9888
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %base, i32 %var_index.0, %struct.loop** nonnull %loopi) #8, !dbg !9895
  %tobool1 = icmp eq i32 %call, 0, !dbg !9896
  br i1 %tobool1, label %for.end, label %for.body, !dbg !9896

for.body:                                         ; preds = %for.cond
  %1 = load %struct.loop*, %struct.loop** %loopi, align 8, !dbg !9897
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !9886, metadata !DIExpression()), !dbg !9888
  %num = getelementptr inbounds %struct.loop, %struct.loop* %1, i64 0, i32 0, !dbg !9899
  %2 = load i32, i32* %num, align 8, !dbg !9899
  %cmp = icmp eq i32 %2, %var, !dbg !9900
  br i1 %cmp, label %for.end, label %for.inc, !dbg !9901

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %var_index.0, 1, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9887, metadata !DIExpression()), !dbg !9888
  br label %for.cond, !dbg !9903, !llvm.loop !9904

for.end:                                          ; preds = %for.cond, %for.body
  %var_index.0.lcssa = phi i32 [ %var_index.0, %for.cond ], [ %var_index.0, %for.body ], !dbg !9894
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.value(metadata i32 %var_index.0.lcssa, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9906
  ret i32 %var_index.0.lcssa, !dbg !9907
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @non_affine_dependence_relation(%struct.data_dependence_relation* %ddr) unnamed_addr #0 !dbg !9908 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9910, metadata !DIExpression()), !dbg !9911
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !9912
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !9912
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9914

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @dump_flags, align 4, !dbg !9915
  %and = and i32 %1, 8, !dbg !9916
  %tobool1 = icmp eq i32 %and, 0, !dbg !9916
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9917

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.127, i64 0, i64 0)) #7, !dbg !9918
  br label %if.end, !dbg !9918

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %affine_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 9, !dbg !9919
  store i8 0, i8* %affine_p, align 1, !dbg !9920
  ret void, !dbg !9921
}

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @dir_from_dist(i32 %dist) unnamed_addr #0 !dbg !9922 {
entry:
  call void @llvm.dbg.value(metadata i32 %dist, metadata !9926, metadata !DIExpression()), !dbg !9927
  %cmp = icmp sgt i32 %dist, 0, !dbg !9928
  %cmp1 = icmp slt i32 %dist, 0, !dbg !9930
  %. = select i1 %cmp1, i32 1, i32 2, !dbg !9930
  %retval.0 = select i1 %cmp, i32 0, i32 %., !dbg !9930
  ret i32 %retval.0, !dbg !9931
}

; Function Attrs: nounwind uwtable
define internal fastcc void @save_dir_v(%struct.data_dependence_relation* %ddr, i32* %dir_v) unnamed_addr #5 !dbg !9932 {
entry:
  %v = alloca i32*, align 8
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9934, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32* %dir_v, metadata !9935, metadata !DIExpression()), !dbg !9938
  %0 = bitcast i32** %v to i8*, !dbg !9939
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9939
  call void @llvm.dbg.value(metadata i32 0, metadata !9936, metadata !DIExpression()), !dbg !9938
  %dir_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 5, !dbg !9940
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9943
  br label %for.cond, !dbg !9945

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !9946
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9936, metadata !DIExpression()), !dbg !9938
  %1 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dir_vects, align 8, !dbg !9947
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %1, null, !dbg !9947
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9947

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %1, i64 0, i32 0, !dbg !9947
  br label %cond.end, !dbg !9947

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !9947
  call void @llvm.dbg.value(metadata i32** %v, metadata !9937, metadata !DIExpression(DW_OP_deref)), !dbg !9938
  %call = call fastcc i32 @VEC_lambda_vector_base_iterate(%struct.VEC_lambda_vector_base* %cond, i32 %i.0, i32** nonnull %v) #8, !dbg !9947
  %tobool2 = icmp eq i32 %call, 0, !dbg !9948
  br i1 %tobool2, label %for.end, label %for.body, !dbg !9948

for.body:                                         ; preds = %cond.end
  %2 = load i32*, i32** %v, align 8, !dbg !9949
  call void @llvm.dbg.value(metadata i32* %2, metadata !9937, metadata !DIExpression()), !dbg !9938
  %3 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9950
  %tobool3 = icmp eq %struct.VEC_loop_p_heap* %3, null, !dbg !9950
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !9950

cond.true4:                                       ; preds = %for.body
  %base6 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !9950
  br label %cond.end8, !dbg !9950

cond.end8:                                        ; preds = %for.body, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %for.body ], !dbg !9950
  %call10 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond9) #8, !dbg !9950
  %call11 = call fastcc zeroext i8 @lambda_vector_equal(i32* %2, i32* %dir_v, i32 %call10) #8, !dbg !9951
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9951
  br i1 %tobool12, label %for.inc, label %cleanup.loopexit, !dbg !9952

for.inc:                                          ; preds = %cond.end8
  %inc = add i32 %i.0, 1, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9936, metadata !DIExpression()), !dbg !9938
  br label %for.cond, !dbg !9954, !llvm.loop !9955

for.end:                                          ; preds = %cond.end
  %call14 = call fastcc i32** @VEC_lambda_vector_heap_safe_push(%struct.VEC_lambda_vector_heap** nonnull %dir_vects, i32* %dir_v) #8, !dbg !9957
  br label %cleanup, !dbg !9958

cleanup.loopexit:                                 ; preds = %cond.end8
  br label %cleanup, !dbg !9958

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9958
  ret void, !dbg !9958
}

declare dso_local %struct.omega_pb_d* @omega_alloc_problem(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @init_omega_for_ddr_1(%struct.data_reference* %dra, %struct.data_reference* %drb, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %pb, i8* %maybe_dependent) unnamed_addr #5 !dbg !9959 {
entry:
  %loopi = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.data_reference* %dra, metadata !9963, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata %struct.data_reference* %drb, metadata !9964, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !9965, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !9966, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !9967, metadata !DIExpression()), !dbg !9976
  %0 = bitcast %struct.loop** %loopi to i8*, !dbg !9977
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !9977
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !9978
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !9978
  %tobool = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !9978
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9978

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !9978
  br label %cond.end, !dbg !9978

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !9978
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %call, metadata !9971, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 0, metadata !9968, metadata !DIExpression()), !dbg !9976
  %subscripts = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 3, !dbg !9979
  %access_fns = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dra, i64 0, i32 5, i32 1, !dbg !9982
  %access_fns20 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb, i64 0, i32 5, i32 1, !dbg !9982
  br label %for.cond, !dbg !9985

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ], !dbg !9986
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9968, metadata !DIExpression()), !dbg !9976
  %2 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %subscripts, align 8, !dbg !9987
  %tobool2 = icmp eq %struct.VEC_subscript_p_heap* %2, null, !dbg !9987
  br i1 %tobool2, label %cond.end7, label %cond.true3, !dbg !9987

cond.true3:                                       ; preds = %for.cond
  %base5 = getelementptr inbounds %struct.VEC_subscript_p_heap, %struct.VEC_subscript_p_heap* %2, i64 0, i32 0, !dbg !9987
  br label %cond.end7, !dbg !9987

cond.end7:                                        ; preds = %for.cond, %cond.true3
  %cond8 = phi %struct.VEC_subscript_p_base* [ %base5, %cond.true3 ], [ null, %for.cond ], !dbg !9987
  %call9 = tail call fastcc i32 @VEC_subscript_p_base_length(%struct.VEC_subscript_p_base* %cond8) #8, !dbg !9987
  %cmp = icmp ult i32 %i.0, %call9, !dbg !9988
  br i1 %cmp, label %for.body, label %for.cond36.preheader, !dbg !9989

for.cond36.preheader:                             ; preds = %cond.end7
  %inner_loop = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 7, !dbg !9990
  %geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 10, !dbg !9991
  br label %for.cond36, !dbg !9992

for.body:                                         ; preds = %cond.end7
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns, align 8, !dbg !9993
  %tobool10 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !9993
  br i1 %tobool10, label %cond.end16, label %cond.true11, !dbg !9993

cond.true11:                                      ; preds = %for.body
  %base14 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !9993
  br label %cond.end16, !dbg !9993

cond.end16:                                       ; preds = %for.body, %cond.true11
  %cond17 = phi %struct.VEC_tree_base* [ %base14, %cond.true11 ], [ null, %for.body ], !dbg !9993
  %call18 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond17, i32 %i.0) #8, !dbg !9993
  %4 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %access_fns20, align 8, !dbg !9994
  %tobool21 = icmp eq %struct.VEC_tree_heap* %4, null, !dbg !9994
  br i1 %tobool21, label %cond.end27, label %cond.true22, !dbg !9994

cond.true22:                                      ; preds = %cond.end16
  %base25 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %4, i64 0, i32 0, !dbg !9994
  br label %cond.end27, !dbg !9994

cond.end27:                                       ; preds = %cond.end16, %cond.true22
  %cond28 = phi %struct.VEC_tree_base* [ %base25, %cond.true22 ], [ null, %cond.end16 ], !dbg !9994
  %call29 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond28, i32 %i.0) #8, !dbg !9994
  %call30 = tail call fastcc zeroext i8 @omega_setup_subscript(%union.tree_node* %call18, %union.tree_node* %call29, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %pb, i8* %maybe_dependent) #8, !dbg !9995
  %tobool31 = icmp eq i8 %call30, 0, !dbg !9995
  br i1 %tobool31, label %cleanup.loopexit, label %if.else, !dbg !9996

if.else:                                          ; preds = %cond.end27
  %5 = load i8, i8* %maybe_dependent, align 1, !dbg !9997
  %cmp32 = icmp eq i8 %5, 0, !dbg !9999
  br i1 %cmp32, label %if.then34, label %for.inc, !dbg !10000

if.then34:                                        ; preds = %if.else
  %6 = load i64, i64* bitcast (%union.tree_node** @chrec_known to i64*), align 8, !dbg !10001
  %are_dependent = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 2, !dbg !10003
  %7 = bitcast %union.tree_node** %are_dependent to i64*, !dbg !10004
  store i64 %6, i64* %7, align 8, !dbg !10004
  br label %cleanup, !dbg !10005

for.inc:                                          ; preds = %if.else
  %inc = add i32 %i.0, 1, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9968, metadata !DIExpression()), !dbg !9976
  br label %for.cond, !dbg !10007, !llvm.loop !10008

for.cond36:                                       ; preds = %for.cond36.preheader, %for.inc140
  %i.1 = phi i32 [ %add68, %for.inc140 ], [ 0, %for.cond36.preheader ], !dbg !10010
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !9968, metadata !DIExpression()), !dbg !9976
  %8 = load i32, i32* %inner_loop, align 8, !dbg !10011
  %cmp37 = icmp ugt i32 %i.1, %8, !dbg !10012
  br i1 %cmp37, label %for.end142, label %land.rhs, !dbg !10013

land.rhs:                                         ; preds = %for.cond36
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10014
  %tobool40 = icmp eq %struct.VEC_loop_p_heap* %9, null, !dbg !10014
  br i1 %tobool40, label %cond.end45, label %cond.true41, !dbg !10014

cond.true41:                                      ; preds = %land.rhs
  %base43 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !10014
  br label %cond.end45, !dbg !10014

cond.end45:                                       ; preds = %land.rhs, %cond.true41
  %cond46 = phi %struct.VEC_loop_p_base* [ %base43, %cond.true41 ], [ null, %land.rhs ], !dbg !10014
  call void @llvm.dbg.value(metadata %struct.loop** %loopi, metadata !9970, metadata !DIExpression(DW_OP_deref)), !dbg !9976
  %call47 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond46, i32 %i.1, %struct.loop** nonnull %loopi) #8, !dbg !10014
  %tobool48 = icmp eq i32 %call47, 0, !dbg !10013
  br i1 %tobool48, label %for.end142, label %for.body49, !dbg !9992

for.body49:                                       ; preds = %cond.end45
  %10 = load %struct.loop*, %struct.loop** %loopi, align 8, !dbg !10015
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !9970, metadata !DIExpression()), !dbg !9976
  %call50 = call i64 @estimated_loop_iterations_int(%struct.loop* %10, i8 zeroext 0) #8, !dbg !10016
  call void @llvm.dbg.value(metadata i64 %call50, metadata !9972, metadata !DIExpression()), !dbg !9991
  %call51 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %call51, metadata !9969, metadata !DIExpression()), !dbg !9976
  %11 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10018
  %idxprom = sext i32 %call51 to i64, !dbg !10019
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %11, i64 %idxprom, i32 3, !dbg !10020
  %12 = load i32*, i32** %coef, align 8, !dbg !10020
  %add = add i32 %i.1, %call, !dbg !10021
  %add52 = add i32 %add, 1, !dbg !10022
  %idxprom53 = zext i32 %add52 to i64, !dbg !10019
  %arrayidx54 = getelementptr inbounds i32, i32* %12, i64 %idxprom53, !dbg !10019
  store i32 1, i32* %arrayidx54, align 4, !dbg !10023
  %call55 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %call55, metadata !9969, metadata !DIExpression()), !dbg !9976
  %13 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10025
  %idxprom57 = sext i32 %call55 to i64, !dbg !10026
  %coef59 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %13, i64 %idxprom57, i32 3, !dbg !10027
  %14 = load i32*, i32** %coef59, align 8, !dbg !10027
  %arrayidx63 = getelementptr inbounds i32, i32* %14, i64 %idxprom53, !dbg !10026
  store i32 1, i32* %arrayidx63, align 4, !dbg !10028
  %15 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10029
  %coef67 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %15, i64 %idxprom57, i32 3, !dbg !10030
  %16 = load i32*, i32** %coef67, align 8, !dbg !10030
  %add68 = add i32 %i.1, 1, !dbg !10031
  %idxprom69 = zext i32 %add68 to i64, !dbg !10032
  %arrayidx70 = getelementptr inbounds i32, i32* %16, i64 %idxprom69, !dbg !10032
  store i32 1, i32* %arrayidx70, align 4, !dbg !10033
  %cmp71 = icmp eq i64 %call50, -1, !dbg !10034
  br i1 %cmp71, label %for.inc140, label %if.then73, !dbg !10036

if.then73:                                        ; preds = %for.body49
  %call74 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10037
  call void @llvm.dbg.value(metadata i32 %call74, metadata !9969, metadata !DIExpression()), !dbg !9976
  %17 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10039
  %idxprom76 = sext i32 %call74 to i64, !dbg !10040
  %coef78 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %17, i64 %idxprom76, i32 3, !dbg !10041
  %18 = load i32*, i32** %coef78, align 8, !dbg !10041
  %arrayidx82 = getelementptr inbounds i32, i32* %18, i64 %idxprom53, !dbg !10040
  store i32 -1, i32* %arrayidx82, align 4, !dbg !10042
  %conv83 = trunc i64 %call50 to i32, !dbg !10043
  %19 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10044
  %coef87 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %19, i64 %idxprom76, i32 3, !dbg !10045
  %20 = load i32*, i32** %coef87, align 8, !dbg !10045
  store i32 %conv83, i32* %20, align 4, !dbg !10046
  %call89 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10047
  call void @llvm.dbg.value(metadata i32 %call89, metadata !9969, metadata !DIExpression()), !dbg !9976
  %21 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10048
  %idxprom91 = sext i32 %call89 to i64, !dbg !10049
  %coef93 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %21, i64 %idxprom91, i32 3, !dbg !10050
  %22 = load i32*, i32** %coef93, align 8, !dbg !10050
  %arrayidx97 = getelementptr inbounds i32, i32* %22, i64 %idxprom53, !dbg !10049
  store i32 -1, i32* %arrayidx97, align 4, !dbg !10051
  %23 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10052
  %coef101 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %23, i64 %idxprom91, i32 3, !dbg !10053
  %24 = load i32*, i32** %coef101, align 8, !dbg !10053
  %arrayidx104 = getelementptr inbounds i32, i32* %24, i64 %idxprom69, !dbg !10054
  store i32 -1, i32* %arrayidx104, align 4, !dbg !10055
  %25 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10056
  %coef109 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %25, i64 %idxprom91, i32 3, !dbg !10057
  %26 = load i32*, i32** %coef109, align 8, !dbg !10057
  store i32 %conv83, i32* %26, align 4, !dbg !10058
  %call111 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10059
  call void @llvm.dbg.value(metadata i32 %call111, metadata !9969, metadata !DIExpression()), !dbg !9976
  %27 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10060
  %idxprom113 = sext i32 %call111 to i64, !dbg !10061
  %coef115 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %27, i64 %idxprom113, i32 3, !dbg !10062
  %28 = load i32*, i32** %coef115, align 8, !dbg !10062
  %arrayidx118 = getelementptr inbounds i32, i32* %28, i64 %idxprom69, !dbg !10061
  store i32 1, i32* %arrayidx118, align 4, !dbg !10063
  %29 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10064
  %coef123 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %29, i64 %idxprom113, i32 3, !dbg !10065
  %30 = load i32*, i32** %coef123, align 8, !dbg !10065
  store i32 %conv83, i32* %30, align 4, !dbg !10066
  %call125 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %call125, metadata !9969, metadata !DIExpression()), !dbg !9976
  %31 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10068
  %idxprom127 = sext i32 %call125 to i64, !dbg !10069
  %coef129 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %31, i64 %idxprom127, i32 3, !dbg !10070
  %32 = load i32*, i32** %coef129, align 8, !dbg !10070
  %arrayidx132 = getelementptr inbounds i32, i32* %32, i64 %idxprom69, !dbg !10069
  store i32 -1, i32* %arrayidx132, align 4, !dbg !10071
  %33 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10072
  %coef137 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %33, i64 %idxprom127, i32 3, !dbg !10073
  %34 = load i32*, i32** %coef137, align 8, !dbg !10073
  store i32 %conv83, i32* %34, align 4, !dbg !10074
  br label %for.inc140, !dbg !10075

for.inc140:                                       ; preds = %for.body49, %if.then73
  call void @llvm.dbg.value(metadata i32 %add68, metadata !9968, metadata !DIExpression()), !dbg !9976
  br label %for.cond36, !dbg !10076, !llvm.loop !10077

for.end142:                                       ; preds = %cond.end45, %for.cond36
  call fastcc void @omega_extract_distance_vectors(%struct.omega_pb_d* %pb, %struct.data_dependence_relation* %ddr) #8, !dbg !10079
  br label %cleanup, !dbg !10080

cleanup.loopexit:                                 ; preds = %cond.end27
  br label %cleanup, !dbg !10081

cleanup:                                          ; preds = %cleanup.loopexit, %for.end142, %if.then34
  %retval.0 = phi i8 [ 1, %if.then34 ], [ 1, %for.end142 ], [ 0, %cleanup.loopexit ], !dbg !9976
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !10081
  ret i8 %retval.0, !dbg !10081
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @omega_free_problem(%struct.omega_pb_d* %pb) unnamed_addr #0 !dbg !10082 {
entry:
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10086, metadata !DIExpression()), !dbg !10087
  %var = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 8, !dbg !10088
  %0 = bitcast i32** %var to i8**, !dbg !10088
  %1 = load i8*, i8** %0, align 8, !dbg !10088
  tail call void @free(i8* %1) #7, !dbg !10089
  %forwarding_address = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 9, !dbg !10090
  %2 = bitcast i32** %forwarding_address to i8**, !dbg !10090
  %3 = load i8*, i8** %2, align 8, !dbg !10090
  tail call void @free(i8* %3) #7, !dbg !10091
  %geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 10, !dbg !10092
  %4 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10092
  %5 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10093
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %5, i64 65, i32 1, !dbg !10093
  %6 = load i32, i32* %value, align 8, !dbg !10093
  tail call fastcc void @omega_free_eqns(%struct.eqn_d* %4, i32 %6) #8, !dbg !10094
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 11, !dbg !10095
  %7 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10095
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10096
  %value2 = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 66, i32 1, !dbg !10096
  %9 = load i32, i32* %value2, align 8, !dbg !10096
  tail call fastcc void @omega_free_eqns(%struct.eqn_d* %7, i32 %9) #8, !dbg !10097
  %subs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 12, !dbg !10098
  %10 = load %struct.eqn_d*, %struct.eqn_d** %subs, align 8, !dbg !10098
  %11 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10099
  %value4 = getelementptr inbounds %struct.param_info, %struct.param_info* %11, i64 64, i32 1, !dbg !10099
  %12 = load i32, i32* %value4, align 8, !dbg !10099
  %add = add nsw i32 %12, 1, !dbg !10100
  tail call fastcc void @omega_free_eqns(%struct.eqn_d* %10, i32 %add) #8, !dbg !10101
  %13 = bitcast %struct.omega_pb_d* %pb to i8*, !dbg !10102
  tail call void @free(i8* %13) #7, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @omega_setup_subscript(%union.tree_node* %access_fun_a, %union.tree_node* %access_fun_b, %struct.data_dependence_relation* %ddr, %struct.omega_pb_d* %pb, i8* %maybe_dependent) unnamed_addr #5 !dbg !10105 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun_a, metadata !10109, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun_b, metadata !10110, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10111, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10112, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata i8* %maybe_dependent, metadata !10113, metadata !DIExpression()), !dbg !10119
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun_a, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10120
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !10120
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun_b, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10121
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !10121
  %call = tail call fastcc %union.tree_node* @signed_type_for_types(%union.tree_node* %0, %union.tree_node* %1) #8, !dbg !10122
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10115, metadata !DIExpression()), !dbg !10119
  %call4 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call, %union.tree_node* %access_fun_a, %union.gimple_statement_d* null) #7, !dbg !10123
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10116, metadata !DIExpression()), !dbg !10119
  %call5 = tail call %union.tree_node* @chrec_convert(%union.tree_node* %call, %union.tree_node* %access_fun_b, %union.gimple_statement_d* null) #7, !dbg !10124
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !10117, metadata !DIExpression()), !dbg !10119
  %call6 = tail call %union.tree_node* @chrec_fold_minus(%union.tree_node* %call, %union.tree_node* %call4, %union.tree_node* %call5) #7, !dbg !10125
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !10118, metadata !DIExpression()), !dbg !10119
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10126
  %bf.load = load i64, i64* %2, align 8, !dbg !10126
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10128
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !10128
  br i1 %cmp, label %if.end, label %cleanup, !dbg !10129

if.end:                                           ; preds = %entry
  %call7 = tail call fastcc zeroext i8 @ziv_subscript_p(%union.tree_node* %call4, %union.tree_node* %call5) #8, !dbg !10130
  %tobool = icmp eq i8 %call7, 0, !dbg !10130
  br i1 %tobool, label %if.end11, label %land.lhs.true, !dbg !10132

land.lhs.true:                                    ; preds = %if.end
  %call8 = tail call i32 @integer_zerop(%union.tree_node* %call6) #7, !dbg !10133
  %tobool9 = icmp eq i32 %call8, 0, !dbg !10133
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10134

if.then10:                                        ; preds = %land.lhs.true
  store i8 0, i8* %maybe_dependent, align 1, !dbg !10135
  br label %cleanup, !dbg !10137

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !10138
  %call12 = tail call %union.tree_node* @chrec_fold_multiply(%union.tree_node* %call, %union.tree_node* %call5, %union.tree_node* %3) #7, !dbg !10139
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !10117, metadata !DIExpression()), !dbg !10119
  %call13 = tail call fastcc i32 @omega_add_zero_eq(%struct.omega_pb_d* %pb, i32 0) #8, !dbg !10140
  call void @llvm.dbg.value(metadata i32 %call13, metadata !10114, metadata !DIExpression()), !dbg !10119
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !10141
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10141
  %tobool14 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !10141
  br i1 %tobool14, label %cond.end, label %cond.true, !dbg !10141

cond.true:                                        ; preds = %if.end11
  %base16 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %4, i64 0, i32 0, !dbg !10141
  br label %cond.end, !dbg !10141

cond.end:                                         ; preds = %if.end11, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base16, %cond.true ], [ null, %if.end11 ], !dbg !10141
  %call17 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !10141
  %call18 = tail call fastcc zeroext i8 @init_omega_eq_with_af(%struct.omega_pb_d* %pb, i32 %call13, i32 %call17, %union.tree_node* %call4, %struct.data_dependence_relation* %ddr) #8, !dbg !10143
  %tobool19 = icmp eq i8 %call18, 0, !dbg !10143
  br i1 %tobool19, label %cleanup, label %lor.lhs.false, !dbg !10144

lor.lhs.false:                                    ; preds = %cond.end
  %call20 = tail call fastcc zeroext i8 @init_omega_eq_with_af(%struct.omega_pb_d* %pb, i32 %call13, i32 0, %union.tree_node* %call12, %struct.data_dependence_relation* %ddr) #8, !dbg !10145
  %tobool21 = icmp eq i8 %call20, 0, !dbg !10145
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !10146

if.end23:                                         ; preds = %lor.lhs.false
  %5 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10147
  %tobool25 = icmp eq %struct.VEC_loop_p_heap* %5, null, !dbg !10147
  br i1 %tobool25, label %cond.end30, label %cond.true26, !dbg !10147

cond.true26:                                      ; preds = %if.end23
  %base28 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %5, i64 0, i32 0, !dbg !10147
  br label %cond.end30, !dbg !10147

cond.end30:                                       ; preds = %if.end23, %cond.true26
  %cond31 = phi %struct.VEC_loop_p_base* [ %base28, %cond.true26 ], [ null, %if.end23 ], !dbg !10147
  %call32 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond31) #8, !dbg !10147
  %cmp33 = icmp eq i32 %call32, 0, !dbg !10149
  br i1 %cmp33, label %cleanup, label %land.lhs.true35, !dbg !10150

land.lhs.true35:                                  ; preds = %cond.end30
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 11, !dbg !10151
  %6 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10151
  %idxprom = sext i32 %call13 to i64, !dbg !10152
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %6, i64 %idxprom, i32 3, !dbg !10153
  %7 = load i32*, i32** %coef, align 8, !dbg !10153
  %8 = load i32, i32* %7, align 4, !dbg !10152
  %tobool37 = icmp eq i32 %8, 0, !dbg !10152
  br i1 %tobool37, label %cleanup, label %land.lhs.true38, !dbg !10154

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %arrayidx43 = getelementptr inbounds i32, i32* %7, i64 1, !dbg !10155
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10156
  %tobool45 = icmp eq %struct.VEC_loop_p_heap* %9, null, !dbg !10156
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !10156

cond.true46:                                      ; preds = %land.lhs.true38
  %base48 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !10156
  br label %cond.end50, !dbg !10156

cond.end50:                                       ; preds = %land.lhs.true38, %cond.true46
  %cond51 = phi %struct.VEC_loop_p_base* [ %base48, %cond.true46 ], [ null, %land.lhs.true38 ], !dbg !10156
  %call52 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond51) #8, !dbg !10156
  %mul = shl i32 %call52, 1, !dbg !10157
  %call53 = tail call fastcc i32 @lambda_vector_gcd(i32* nonnull %arrayidx43, i32 %mul) #8, !dbg !10158
  %10 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10159
  %coef57 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %10, i64 %idxprom, i32 3, !dbg !10160
  %11 = load i32*, i32** %coef57, align 8, !dbg !10160
  %12 = load i32, i32* %11, align 4, !dbg !10161
  %call59 = tail call fastcc zeroext i8 @int_divides_p(i32 %call53, i32 %12) #8, !dbg !10162
  %tobool60 = icmp eq i8 %call59, 0, !dbg !10162
  br i1 %tobool60, label %if.then61, label %cleanup, !dbg !10163

if.then61:                                        ; preds = %cond.end50
  store i8 0, i8* %maybe_dependent, align 1, !dbg !10164
  br label %cleanup, !dbg !10166

cleanup:                                          ; preds = %cond.end50, %land.lhs.true35, %cond.end30, %lor.lhs.false, %cond.end, %entry, %if.then61, %if.then10
  %retval.0 = phi i8 [ 1, %if.then61 ], [ 1, %if.then10 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %cond.end ], [ 1, %cond.end50 ], [ 1, %land.lhs.true35 ], [ 1, %cond.end30 ], !dbg !10119
  ret i8 %retval.0, !dbg !10167
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %pb, i32 %color) unnamed_addr #0 !dbg !10168 {
entry:
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10172, metadata !DIExpression()), !dbg !10175
  call void @llvm.dbg.value(metadata i32 0, metadata !10173, metadata !DIExpression()), !dbg !10175
  %num_geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 3, !dbg !10176
  %0 = load i32, i32* %num_geqs, align 4, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %0, metadata !10174, metadata !DIExpression()), !dbg !10175
  %inc = add nsw i32 %0, 1, !dbg !10177
  store i32 %inc, i32* %num_geqs, align 4, !dbg !10177
  %1 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10178
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %1, i64 65, i32 1, !dbg !10178
  %2 = load i32, i32* %value, align 8, !dbg !10178
  %cmp = icmp slt i32 %0, %2, !dbg !10178
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10178

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.128, i64 0, i64 0), i32 274, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !10178
  br label %cond.end, !dbg !10178

cond.end:                                         ; preds = %entry, %cond.true
  %geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 10, !dbg !10179
  %3 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10179
  %idxprom = sext i32 %0 to i64, !dbg !10180
  %arrayidx3 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %3, i64 %idxprom, !dbg !10180
  %num_vars = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 0, !dbg !10181
  %4 = load i32, i32* %num_vars, align 8, !dbg !10181
  tail call fastcc void @omega_init_eqn_zero(%struct.eqn_d* %arrayidx3, i32 %4) #8, !dbg !10182
  %5 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10183
  %touched = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %5, i64 %idxprom, i32 1, !dbg !10184
  store i32 1, i32* %touched, align 4, !dbg !10185
  %6 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10186
  %color10 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %6, i64 %idxprom, i32 2, !dbg !10187
  store i32 0, i32* %color10, align 8, !dbg !10188
  ret i32 %0, !dbg !10189
}

; Function Attrs: nounwind uwtable
define internal fastcc void @omega_extract_distance_vectors(%struct.omega_pb_d* %pb, %struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !10190 {
entry:
  %loopi = alloca %struct.loop*, align 8
  %loopj = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10194, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10195, metadata !DIExpression()), !dbg !10214
  %0 = bitcast %struct.loop** %loopi to i8*, !dbg !10215
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !10215
  %1 = bitcast %struct.loop** %loopj to i8*, !dbg !10215
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10214
  %inner_loop = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 7, !dbg !10216
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !10216
  br label %for.cond, !dbg !10217

for.cond:                                         ; preds = %next_problem, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add44, %next_problem ], !dbg !10218
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10198, metadata !DIExpression()), !dbg !10214
  %2 = load i32, i32* %inner_loop, align 8, !dbg !10219
  %cmp = icmp ugt i32 %i.0, %2, !dbg !10220
  br i1 %cmp, label %for.end230, label %land.rhs, !dbg !10221

land.rhs:                                         ; preds = %for.cond
  %3 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10222
  %tobool = icmp eq %struct.VEC_loop_p_heap* %3, null, !dbg !10222
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10222

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %3, i64 0, i32 0, !dbg !10222
  br label %cond.end, !dbg !10222

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !10222
  call void @llvm.dbg.value(metadata %struct.loop** %loopi, metadata !10200, metadata !DIExpression(DW_OP_deref)), !dbg !10214
  %call = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond, i32 %i.0, %struct.loop** nonnull %loopi) #8, !dbg !10222
  %tobool2 = icmp eq i32 %call, 0, !dbg !10221
  br i1 %tobool2, label %for.end230, label %for.body, !dbg !10223

for.body:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 0, metadata !10203, metadata !DIExpression()), !dbg !10224
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10225
  %tobool4 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !10225
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !10225

cond.true5:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %4, i64 0, i32 0, !dbg !10225
  br label %cond.end9, !dbg !10225

cond.end9:                                        ; preds = %for.body, %cond.true5
  %cond10 = phi %struct.VEC_loop_p_base* [ %base7, %cond.true5 ], [ null, %for.body ], !dbg !10225
  %call11 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond10) #8, !dbg !10225
  %mul = shl i32 %call11, 1, !dbg !10226
  %5 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10227
  %tobool13 = icmp eq %struct.VEC_loop_p_heap* %5, null, !dbg !10227
  br i1 %tobool13, label %cond.end18, label %cond.true14, !dbg !10227

cond.true14:                                      ; preds = %cond.end9
  %base16 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %5, i64 0, i32 0, !dbg !10227
  br label %cond.end18, !dbg !10227

cond.end18:                                       ; preds = %cond.end9, %cond.true14
  %cond19 = phi %struct.VEC_loop_p_base* [ %base16, %cond.true14 ], [ null, %cond.end9 ], !dbg !10227
  %call20 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond19) #8, !dbg !10227
  %call21 = call %struct.omega_pb_d* @omega_alloc_problem(i32 %mul, i32 %call20) #7, !dbg !10228
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %call21, metadata !10207, metadata !DIExpression()), !dbg !10224
  call fastcc void @omega_copy_problem(%struct.omega_pb_d* %call21, %struct.omega_pb_d* %pb) #8, !dbg !10229
  call void @llvm.dbg.value(metadata i32 0, metadata !10199, metadata !DIExpression()), !dbg !10214
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %call21, i64 0, i32 11, !dbg !10230
  %wide.trip.count = zext i32 %i.0 to i64, !dbg !10234
  br label %for.cond22, !dbg !10235

for.cond22:                                       ; preds = %for.body36, %cond.end18
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body36 ], [ 0, %cond.end18 ], !dbg !10236
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10199, metadata !DIExpression()), !dbg !10214
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !10234
  br i1 %exitcond, label %for.end, label %land.rhs24, !dbg !10237

land.rhs24:                                       ; preds = %for.cond22
  %6 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10238
  %tobool26 = icmp eq %struct.VEC_loop_p_heap* %6, null, !dbg !10238
  br i1 %tobool26, label %cond.end31, label %cond.true27, !dbg !10238

cond.true27:                                      ; preds = %land.rhs24
  %base29 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %6, i64 0, i32 0, !dbg !10238
  br label %cond.end31, !dbg !10238

cond.end31:                                       ; preds = %land.rhs24, %cond.true27
  %cond32 = phi %struct.VEC_loop_p_base* [ %base29, %cond.true27 ], [ null, %land.rhs24 ], !dbg !10238
  call void @llvm.dbg.value(metadata %struct.loop** %loopj, metadata !10201, metadata !DIExpression(DW_OP_deref)), !dbg !10214
  %7 = trunc i64 %indvars.iv to i32, !dbg !10238
  %call33 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond32, i32 %7, %struct.loop** nonnull %loopj) #8, !dbg !10238
  %tobool34 = icmp eq i32 %call33, 0, !dbg !10237
  br i1 %tobool34, label %for.end, label %for.body36, !dbg !10239

for.body36:                                       ; preds = %cond.end31
  %call37 = call fastcc i32 @omega_add_zero_eq(%struct.omega_pb_d* %call21, i32 0) #8, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %call37, metadata !10196, metadata !DIExpression()), !dbg !10214
  %8 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10241
  %idxprom = sext i32 %call37 to i64, !dbg !10242
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %8, i64 %idxprom, i32 3, !dbg !10243
  %9 = load i32*, i32** %coef, align 8, !dbg !10243
  %add = add nuw nsw i64 %indvars.iv, 1, !dbg !10244
  %idxprom38 = and i64 %add, 4294967295, !dbg !10242
  %arrayidx39 = getelementptr inbounds i32, i32* %9, i64 %idxprom38, !dbg !10242
  store i32 1, i32* %arrayidx39, align 4, !dbg !10245
  call void @llvm.dbg.value(metadata i64 %add, metadata !10199, metadata !DIExpression()), !dbg !10214
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10244
  br label %for.cond22, !dbg !10246, !llvm.loop !10247

for.end:                                          ; preds = %for.cond22, %cond.end31
  %call40 = call fastcc i32 @omega_add_zero_geq(%struct.omega_pb_d* %call21, i32 0) #8, !dbg !10249
  call void @llvm.dbg.value(metadata i32 %call40, metadata !10197, metadata !DIExpression()), !dbg !10214
  %geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %call21, i64 0, i32 10, !dbg !10250
  %10 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10250
  %idxprom41 = sext i32 %call40 to i64, !dbg !10251
  %coef43 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %10, i64 %idxprom41, i32 3, !dbg !10252
  %11 = load i32*, i32** %coef43, align 8, !dbg !10252
  %add44 = add i32 %i.0, 1, !dbg !10253
  %idxprom45 = zext i32 %add44 to i64, !dbg !10251
  %arrayidx46 = getelementptr inbounds i32, i32* %11, i64 %idxprom45, !dbg !10251
  store i32 1, i32* %arrayidx46, align 4, !dbg !10254
  %call47 = call i32 @omega_simplify_problem(%struct.omega_pb_d* %call21) #7, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %call47, metadata !10202, metadata !DIExpression()), !dbg !10214
  switch i32 %call47, label %lor.lhs.false50 [
    i32 0, label %next_problem
    i32 2, label %next_problem
  ], !dbg !10256

lor.lhs.false50:                                  ; preds = %for.end
  %num_geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %call21, i64 0, i32 3, !dbg !10258
  %12 = load i32, i32* %num_geqs, align 4, !dbg !10258
  %13 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10259
  %tobool52 = icmp eq %struct.VEC_loop_p_heap* %13, null, !dbg !10259
  br i1 %tobool52, label %cond.end57, label %cond.true53, !dbg !10259

cond.true53:                                      ; preds = %lor.lhs.false50
  %base55 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %13, i64 0, i32 0, !dbg !10259
  br label %cond.end57, !dbg !10259

cond.end57:                                       ; preds = %lor.lhs.false50, %cond.true53
  %cond58 = phi %struct.VEC_loop_p_base* [ %base55, %cond.true53 ], [ null, %lor.lhs.false50 ], !dbg !10259
  %call59 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond58) #8, !dbg !10259
  %cmp60 = icmp sgt i32 %12, %call59, !dbg !10260
  br i1 %cmp60, label %next_problem, label %for.cond61.preheader, !dbg !10261

for.cond61.preheader:                             ; preds = %cond.end57
  %num_subs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %call21, i64 0, i32 4, !dbg !10262
  %14 = load i32, i32* %num_subs, align 8, !dbg !10262
  %subs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %call21, i64 0, i32 12, !dbg !10265
  %15 = sext i32 %14 to i64, !dbg !10267
  br label %for.cond61, !dbg !10267

for.cond61:                                       ; preds = %for.cond61.preheader, %for.inc75
  %indvars.iv5 = phi i64 [ 0, %for.cond61.preheader ], [ %indvars.iv.next6, %for.inc75 ], !dbg !10268
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !10196, metadata !DIExpression()), !dbg !10214
  %cmp62 = icmp slt i64 %indvars.iv5, %15, !dbg !10269
  br i1 %cmp62, label %for.body63, label %for.end77, !dbg !10267

for.body63:                                       ; preds = %for.cond61
  %16 = load %struct.eqn_d*, %struct.eqn_d** %subs, align 8, !dbg !10270
  %key = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %16, i64 %indvars.iv5, i32 0, !dbg !10271
  %17 = load i32, i32* %key, align 8, !dbg !10271
  %cmp67 = icmp eq i32 %17, %add44, !dbg !10272
  br i1 %cmp67, label %if.then68, label %for.inc75, !dbg !10273

if.then68:                                        ; preds = %for.body63
  %.lcssa = phi %struct.eqn_d* [ %16, %for.body63 ], !dbg !10270
  %indvars.iv5.lcssa13 = phi i64 [ %indvars.iv5, %for.body63 ], !dbg !10268
  call void @llvm.dbg.value(metadata i64 %indvars.iv5.lcssa13, metadata !10196, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i64 %indvars.iv5.lcssa13, metadata !10196, metadata !DIExpression()), !dbg !10214
  %coef72 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %.lcssa, i64 %indvars.iv5.lcssa13, i32 3, !dbg !10274
  %18 = load i32*, i32** %coef72, align 8, !dbg !10274
  %19 = load i32, i32* %18, align 4, !dbg !10276
  call void @llvm.dbg.value(metadata i32 %19, metadata !10203, metadata !DIExpression()), !dbg !10224
  br label %found_dist, !dbg !10277

for.inc75:                                        ; preds = %for.body63
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !10278
  call void @llvm.dbg.value(metadata i32 undef, metadata !10196, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10214
  br label %for.cond61, !dbg !10279, !llvm.loop !10280

for.end77:                                        ; preds = %for.cond61
  call fastcc void @omega_copy_problem(%struct.omega_pb_d* %call21, %struct.omega_pb_d* %pb) #8, !dbg !10282
  call void @llvm.dbg.value(metadata i32 0, metadata !10199, metadata !DIExpression()), !dbg !10214
  br label %for.cond80, !dbg !10285

for.cond80:                                       ; preds = %for.body94, %for.end77
  %j.1 = phi i32 [ 0, %for.end77 ], [ %add100, %for.body94 ], !dbg !10287
  call void @llvm.dbg.value(metadata i32 %j.1, metadata !10199, metadata !DIExpression()), !dbg !10214
  %cmp81 = icmp ult i32 %j.1, %i.0, !dbg !10288
  br i1 %cmp81, label %land.rhs82, label %land.end93, !dbg !10290

land.rhs82:                                       ; preds = %for.cond80
  %20 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10291
  %tobool84 = icmp eq %struct.VEC_loop_p_heap* %20, null, !dbg !10291
  br i1 %tobool84, label %cond.end89, label %cond.true85, !dbg !10291

cond.true85:                                      ; preds = %land.rhs82
  %base87 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %20, i64 0, i32 0, !dbg !10291
  br label %cond.end89, !dbg !10291

cond.end89:                                       ; preds = %land.rhs82, %cond.true85
  %cond90 = phi %struct.VEC_loop_p_base* [ %base87, %cond.true85 ], [ null, %land.rhs82 ], !dbg !10291
  call void @llvm.dbg.value(metadata %struct.loop** %loopj, metadata !10201, metadata !DIExpression(DW_OP_deref)), !dbg !10214
  %call91 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond90, i32 %j.1, %struct.loop** nonnull %loopj) #8, !dbg !10291
  %tobool92 = icmp ne i32 %call91, 0, !dbg !10290
  br label %land.end93

land.end93:                                       ; preds = %cond.end89, %for.cond80
  %21 = phi i1 [ false, %for.cond80 ], [ %tobool92, %cond.end89 ], !dbg !10292
  %call95 = call fastcc i32 @omega_add_zero_eq(%struct.omega_pb_d* %call21, i32 0) #8, !dbg !10293
  call void @llvm.dbg.value(metadata i32 %call95, metadata !10196, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i32 %call95, metadata !10196, metadata !DIExpression()), !dbg !10214
  %22 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10293
  %idxprom97 = sext i32 %call95 to i64, !dbg !10293
  %coef99 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %22, i64 %idxprom97, i32 3, !dbg !10293
  %23 = load i32*, i32** %coef99, align 8, !dbg !10293
  br i1 %21, label %for.body94, label %for.end105, !dbg !10294

for.body94:                                       ; preds = %land.end93
  %add100 = add i32 %j.1, 1, !dbg !10295
  %idxprom101 = zext i32 %add100 to i64, !dbg !10297
  %arrayidx102 = getelementptr inbounds i32, i32* %23, i64 %idxprom101, !dbg !10297
  store i32 1, i32* %arrayidx102, align 4, !dbg !10298
  call void @llvm.dbg.value(metadata i32 %add100, metadata !10199, metadata !DIExpression()), !dbg !10214
  br label %for.cond80, !dbg !10299, !llvm.loop !10300

for.end105:                                       ; preds = %land.end93
  %idxprom97.lcssa = phi i64 [ %idxprom97, %land.end93 ], !dbg !10293
  %.lcssa14 = phi i32* [ %23, %land.end93 ], !dbg !10293
  %arrayidx113 = getelementptr inbounds i32, i32* %.lcssa14, i64 %idxprom45, !dbg !10302
  store i32 1, i32* %arrayidx113, align 4, !dbg !10303
  %24 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10304
  %coef117 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %24, i64 %idxprom97.lcssa, i32 3, !dbg !10305
  %25 = load i32*, i32** %coef117, align 8, !dbg !10305
  store i32 -1, i32* %25, align 4, !dbg !10306
  %call119 = call i32 @omega_simplify_problem(%struct.omega_pb_d* %call21) #7, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %call119, metadata !10202, metadata !DIExpression()), !dbg !10214
  switch i32 %call119, label %lor.lhs.false123 [
    i32 0, label %next_problem
    i32 2, label %next_problem
  ], !dbg !10308

lor.lhs.false123:                                 ; preds = %for.end105
  %26 = load i32, i32* %num_geqs, align 4, !dbg !10310
  %27 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10311
  %tobool126 = icmp eq %struct.VEC_loop_p_heap* %27, null, !dbg !10311
  br i1 %tobool126, label %cond.end131, label %cond.true127, !dbg !10311

cond.true127:                                     ; preds = %lor.lhs.false123
  %base129 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %27, i64 0, i32 0, !dbg !10311
  br label %cond.end131, !dbg !10311

cond.end131:                                      ; preds = %lor.lhs.false123, %cond.true127
  %cond132 = phi %struct.VEC_loop_p_base* [ %base129, %cond.true127 ], [ null, %lor.lhs.false123 ], !dbg !10311
  %call133 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond132) #8, !dbg !10311
  %cmp134 = icmp sgt i32 %26, %call133, !dbg !10312
  br i1 %cmp134, label %next_problem, label %for.cond137.preheader, !dbg !10313

for.cond137.preheader:                            ; preds = %cond.end131
  %28 = load i32, i32* %num_subs, align 8, !dbg !10314
  %29 = sext i32 %28 to i64, !dbg !10317
  br label %for.cond137, !dbg !10317

for.cond137:                                      ; preds = %for.cond137.preheader, %for.inc154
  %indvars.iv7 = phi i64 [ 0, %for.cond137.preheader ], [ %indvars.iv.next8, %for.inc154 ], !dbg !10318
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !10196, metadata !DIExpression()), !dbg !10214
  %cmp139 = icmp slt i64 %indvars.iv7, %29, !dbg !10319
  br i1 %cmp139, label %for.body140, label %found_dist.loopexit, !dbg !10317

for.body140:                                      ; preds = %for.cond137
  %30 = load %struct.eqn_d*, %struct.eqn_d** %subs, align 8, !dbg !10320
  %key144 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %30, i64 %indvars.iv7, i32 0, !dbg !10322
  %31 = load i32, i32* %key144, align 8, !dbg !10322
  %cmp146 = icmp eq i32 %31, %add44, !dbg !10323
  br i1 %cmp146, label %if.then147, label %for.inc154, !dbg !10324

if.then147:                                       ; preds = %for.body140
  %.lcssa16 = phi %struct.eqn_d* [ %30, %for.body140 ], !dbg !10320
  %indvars.iv7.lcssa15 = phi i64 [ %indvars.iv7, %for.body140 ], !dbg !10318
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa15, metadata !10196, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa15, metadata !10196, metadata !DIExpression()), !dbg !10214
  %coef151 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %.lcssa16, i64 %indvars.iv7.lcssa15, i32 3, !dbg !10325
  %32 = load i32*, i32** %coef151, align 8, !dbg !10325
  %33 = load i32, i32* %32, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %33, metadata !10203, metadata !DIExpression()), !dbg !10224
  br label %found_dist, !dbg !10328

for.inc154:                                       ; preds = %for.body140
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !10329
  call void @llvm.dbg.value(metadata i32 undef, metadata !10196, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10214
  br label %for.cond137, !dbg !10330, !llvm.loop !10331

found_dist.loopexit:                              ; preds = %for.cond137
  br label %found_dist, !dbg !10333

found_dist:                                       ; preds = %found_dist.loopexit, %if.then147, %if.then68
  %dist.0 = phi i32 [ %19, %if.then68 ], [ %33, %if.then147 ], [ 0, %found_dist.loopexit ], !dbg !10224
  call void @llvm.dbg.value(metadata i32 %dist.0, metadata !10203, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.label(metadata !10212), !dbg !10334
  %cmp158 = icmp sgt i32 %dist.0, -1, !dbg !10333
  br i1 %cmp158, label %if.then159, label %next_problem, !dbg !10335

if.then159:                                       ; preds = %found_dist
  %34 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10336
  %tobool161 = icmp eq %struct.VEC_loop_p_heap* %34, null, !dbg !10336
  br i1 %tobool161, label %cond.end166, label %cond.true162, !dbg !10336

cond.true162:                                     ; preds = %if.then159
  %base164 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %34, i64 0, i32 0, !dbg !10336
  br label %cond.end166, !dbg !10336

cond.end166:                                      ; preds = %if.then159, %cond.true162
  %cond167 = phi %struct.VEC_loop_p_base* [ %base164, %cond.true162 ], [ null, %if.then159 ], !dbg !10336
  %call168 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond167) #8, !dbg !10336
  %call169 = call fastcc i32* @lambda_vector_new(i32 %call168) #8, !dbg !10337
  call void @llvm.dbg.value(metadata i32* %call169, metadata !10208, metadata !DIExpression()), !dbg !10338
  %35 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10339
  %tobool171 = icmp eq %struct.VEC_loop_p_heap* %35, null, !dbg !10339
  br i1 %tobool171, label %cond.end176, label %cond.true172, !dbg !10339

cond.true172:                                     ; preds = %cond.end166
  %base174 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %35, i64 0, i32 0, !dbg !10339
  br label %cond.end176, !dbg !10339

cond.end176:                                      ; preds = %cond.end166, %cond.true172
  %cond177 = phi %struct.VEC_loop_p_base* [ %base174, %cond.true172 ], [ null, %cond.end166 ], !dbg !10339
  %call178 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond177) #8, !dbg !10339
  %call179 = call fastcc i32* @lambda_vector_new(i32 %call178) #8, !dbg !10340
  call void @llvm.dbg.value(metadata i32* %call179, metadata !10211, metadata !DIExpression()), !dbg !10338
  %idxprom180 = zext i32 %i.0 to i64, !dbg !10341
  %arrayidx181 = getelementptr inbounds i32, i32* %call169, i64 %idxprom180, !dbg !10341
  store i32 %dist.0, i32* %arrayidx181, align 4, !dbg !10342
  call void @llvm.dbg.value(metadata i32 0, metadata !10196, metadata !DIExpression()), !dbg !10214
  br label %for.cond182, !dbg !10343

for.cond182:                                      ; preds = %for.inc204, %cond.end176
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc204 ], [ 0, %cond.end176 ], !dbg !10345
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !10196, metadata !DIExpression()), !dbg !10214
  %36 = load i32, i32* %num_subs, align 8, !dbg !10346
  %37 = sext i32 %36 to i64, !dbg !10348
  %cmp184 = icmp slt i64 %indvars.iv9, %37, !dbg !10348
  br i1 %cmp184, label %for.body185, label %for.cond207.preheader, !dbg !10349

for.cond207.preheader:                            ; preds = %for.cond182
  br label %for.cond207, !dbg !10350

for.body185:                                      ; preds = %for.cond182
  %38 = load %struct.eqn_d*, %struct.eqn_d** %subs, align 8, !dbg !10352
  %key189 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %38, i64 %indvars.iv9, i32 0, !dbg !10354
  %39 = load i32, i32* %key189, align 8, !dbg !10354
  %cmp190 = icmp sgt i32 %39, 0, !dbg !10355
  br i1 %cmp190, label %if.then191, label %for.inc204, !dbg !10356

if.then191:                                       ; preds = %for.body185
  %coef195 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %38, i64 %indvars.iv9, i32 3, !dbg !10357
  %40 = load i32*, i32** %coef195, align 8, !dbg !10357
  %41 = load i32, i32* %40, align 4, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %41, metadata !10203, metadata !DIExpression()), !dbg !10224
  %sub = add nsw i32 %39, -1, !dbg !10360
  %idxprom201 = sext i32 %sub to i64, !dbg !10361
  %arrayidx202 = getelementptr inbounds i32, i32* %call169, i64 %idxprom201, !dbg !10361
  store i32 %41, i32* %arrayidx202, align 4, !dbg !10362
  br label %for.inc204, !dbg !10363

for.inc204:                                       ; preds = %for.body185, %if.then191
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !10364
  call void @llvm.dbg.value(metadata i32 undef, metadata !10196, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10214
  br label %for.cond182, !dbg !10365, !llvm.loop !10366

for.cond207:                                      ; preds = %for.cond207.preheader, %for.body218
  %indvars.iv11 = phi i64 [ 0, %for.cond207.preheader ], [ %indvars.iv.next12, %for.body218 ], !dbg !10368
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !10199, metadata !DIExpression()), !dbg !10214
  %42 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10369
  %tobool209 = icmp eq %struct.VEC_loop_p_heap* %42, null, !dbg !10369
  br i1 %tobool209, label %cond.end214, label %cond.true210, !dbg !10369

cond.true210:                                     ; preds = %for.cond207
  %base212 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %42, i64 0, i32 0, !dbg !10369
  br label %cond.end214, !dbg !10369

cond.end214:                                      ; preds = %for.cond207, %cond.true210
  %cond215 = phi %struct.VEC_loop_p_base* [ %base212, %cond.true210 ], [ null, %for.cond207 ], !dbg !10369
  %call216 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond215) #8, !dbg !10369
  %43 = zext i32 %call216 to i64, !dbg !10371
  %cmp217 = icmp ult i64 %indvars.iv11, %43, !dbg !10371
  br i1 %cmp217, label %for.body218, label %for.end226, !dbg !10350

for.body218:                                      ; preds = %cond.end214
  %arrayidx220 = getelementptr inbounds i32, i32* %call169, i64 %indvars.iv11, !dbg !10372
  %44 = load i32, i32* %arrayidx220, align 4, !dbg !10372
  %call221 = call fastcc i32 @dir_from_dist(i32 %44) #8, !dbg !10373
  %arrayidx223 = getelementptr inbounds i32, i32* %call179, i64 %indvars.iv11, !dbg !10374
  store i32 %call221, i32* %arrayidx223, align 4, !dbg !10375
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !10376
  br label %for.cond207, !dbg !10377, !llvm.loop !10378

for.end226:                                       ; preds = %cond.end214
  call fastcc void @save_dist_v(%struct.data_dependence_relation* %ddr, i32* %call169) #8, !dbg !10380
  call fastcc void @save_dir_v(%struct.data_dependence_relation* %ddr, i32* %call179) #8, !dbg !10381
  br label %next_problem, !dbg !10382

next_problem:                                     ; preds = %found_dist, %for.end226, %cond.end131, %for.end105, %for.end105, %cond.end57, %for.end, %for.end
  call void @llvm.dbg.label(metadata !10213), !dbg !10383
  call fastcc void @omega_free_problem(%struct.omega_pb_d* %call21) #8, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %add44, metadata !10198, metadata !DIExpression()), !dbg !10214
  br label %for.cond, !dbg !10385, !llvm.loop !10386

for.end230:                                       ; preds = %cond.end, %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !10388
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !10388
  ret void, !dbg !10388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @omega_add_zero_eq(%struct.omega_pb_d* %pb, i32 %color) unnamed_addr #0 !dbg !10389 {
entry:
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10391, metadata !DIExpression()), !dbg !10394
  call void @llvm.dbg.value(metadata i32 0, metadata !10392, metadata !DIExpression()), !dbg !10394
  %num_eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 2, !dbg !10395
  %0 = load i32, i32* %num_eqs, align 8, !dbg !10396
  %inc = add nsw i32 %0, 1, !dbg !10396
  store i32 %inc, i32* %num_eqs, align 8, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %0, metadata !10393, metadata !DIExpression()), !dbg !10394
  %1 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10397
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %1, i64 66, i32 1, !dbg !10397
  %2 = load i32, i32* %value, align 8, !dbg !10397
  %cmp = icmp slt i32 %0, %2, !dbg !10397
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !10397

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.128, i64 0, i64 0), i32 259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #7, !dbg !10397
  br label %cond.end, !dbg !10397

cond.end:                                         ; preds = %entry, %cond.true
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 11, !dbg !10398
  %3 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10398
  %idxprom = sext i32 %0 to i64, !dbg !10399
  %arrayidx2 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %3, i64 %idxprom, !dbg !10399
  %num_vars = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 0, !dbg !10400
  %4 = load i32, i32* %num_vars, align 8, !dbg !10400
  tail call fastcc void @omega_init_eqn_zero(%struct.eqn_d* %arrayidx2, i32 %4) #8, !dbg !10401
  %5 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10402
  %color6 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %5, i64 %idxprom, i32 2, !dbg !10403
  store i32 0, i32* %color6, align 8, !dbg !10404
  ret i32 %0, !dbg !10405
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @init_omega_eq_with_af(%struct.omega_pb_d* %pb, i32 %eq, i32 %offset, %union.tree_node* %access_fun, %struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !10406 {
entry:
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !10421
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %pb, i64 0, i32 11, !dbg !10421
  %idxprom = zext i32 %eq to i64, !dbg !10421
  %inner_loop = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 7, !dbg !10421
  %cmp23 = icmp eq i32 %offset, 0, !dbg !10422
  br i1 %cmp23, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !10424

entry.entry.split_crit_edge:                      ; preds = %entry
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10426
  %bf.load.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !10427
  br label %tailrecurse, !dbg !10424

entry.split.us:                                   ; preds = %entry
  %.phi.trans.insert8 = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10426
  %bf.load.us.pre = load i64, i64* %.phi.trans.insert8, align 8, !dbg !10427
  br label %tailrecurse.us, !dbg !10424

tailrecurse.us:                                   ; preds = %sw.bb51.us, %entry.split.us
  %bf.load.us = phi i64 [ %bf.load.us.pre, %entry.split.us ], [ %bf.load48.us, %sw.bb51.us ], !dbg !10427
  %access_fun.tr.us = phi %union.tree_node* [ %access_fun, %entry.split.us ], [ %1, %sw.bb51.us ]
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10410, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata i32 %eq, metadata !10411, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata i32 %offset, metadata !10412, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.us, metadata !10413, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10414, metadata !DIExpression()), !dbg !10426
  %0 = trunc i64 %bf.load.us to i16, !dbg !10427
  switch i16 %0, label %return.loopexit.us-lcssa.us [
    i16 146, label %sw.bb.us
    i16 23, label %sw.bb66.us-lcssa.us
  ], !dbg !10428

sw.bb.us:                                         ; preds = %tailrecurse.us
  %operands.us = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun.tr.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10429
  %arrayidx.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands.us, i64 1, !dbg !10429
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx.us, align 8, !dbg !10429
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10415, metadata !DIExpression()), !dbg !10421
  %arrayidx3.us = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands.us, i64 2, !dbg !10430
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx3.us, align 8, !dbg !10430
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10418, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()), !dbg !10421
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10431
  %bf.load9.us = load i64, i64* %3, align 8, !dbg !10431
  %bf.cast112.us = and i64 %bf.load9.us, 65535, !dbg !10433
  %cmp.us = icmp eq i64 %bf.cast112.us, 23, !dbg !10433
  br i1 %cmp.us, label %if.end.us, label %return.loopexit.us-lcssa.us, !dbg !10434

if.end.us:                                        ; preds = %sw.bb.us
  %4 = bitcast %union.tree_node** %operands.us to %struct.tree_int_cst**, !dbg !10435
  %5 = load %struct.tree_int_cst*, %struct.tree_int_cst** %4, align 8, !dbg !10435
  %low.us = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %5, i64 0, i32 1, i32 0, !dbg !10435
  %6 = load i64, i64* %low.us, align 8, !dbg !10435
  %conv.us = trunc i64 %6 to i32, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %conv.us, metadata !10419, metadata !DIExpression()), !dbg !10421
  %7 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10436
  %call.us = tail call fastcc i32 @index_in_loop_nest(i32 %conv.us, %struct.VEC_loop_p_heap* %7) #8, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %call.us, metadata !10420, metadata !DIExpression()), !dbg !10421
  %call13.us = tail call i64 @int_cst_value(%union.tree_node* %2) #7, !dbg !10438
  %conv14.us = trunc i64 %call13.us to i32, !dbg !10438
  %8 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10439
  %coef.us = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %8, i64 %idxprom, i32 3, !dbg !10440
  %9 = load i32*, i32** %coef.us, align 8, !dbg !10440
  %add16.us = add i32 %call.us, 1, !dbg !10441
  %idxprom17.us = zext i32 %add16.us to i64, !dbg !10442
  %arrayidx18.us = getelementptr inbounds i32, i32* %9, i64 %idxprom17.us, !dbg !10442
  store i32 %conv14.us, i32* %arrayidx18.us, align 4, !dbg !10443
  %10 = load i32, i32* %inner_loop, align 8, !dbg !10444
  %cmp19.us = icmp ugt i32 %10, %call.us, !dbg !10444
  br i1 %cmp19.us, label %cond.true.us, label %cond.end.us, !dbg !10444

cond.true.us:                                     ; preds = %if.end.us
  br label %cond.end.us, !dbg !10444

cond.end.us:                                      ; preds = %cond.true.us, %if.end.us
  %cond.us = phi i32 [ %10, %cond.true.us ], [ %call.us, %if.end.us ], !dbg !10444
  store i32 %cond.us, i32* %inner_loop, align 8, !dbg !10445
  %call26.us = tail call i64 @int_cst_value(%union.tree_node* %2) #7, !dbg !10446
  %11 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10447
  %coef30.us = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %11, i64 %idxprom, i32 3, !dbg !10448
  %12 = load i32*, i32** %coef30.us, align 8, !dbg !10448
  %13 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10449
  %tobool.us = icmp eq %struct.VEC_loop_p_heap* %13, null, !dbg !10449
  br i1 %tobool.us, label %cond.end36.us, label %cond.true32.us, !dbg !10449

cond.true32.us:                                   ; preds = %cond.end.us
  %base34.us = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %13, i64 0, i32 0, !dbg !10449
  br label %cond.end36.us, !dbg !10449

cond.end36.us:                                    ; preds = %cond.true32.us, %cond.end.us
  %cond37.us = phi %struct.VEC_loop_p_base* [ %base34.us, %cond.true32.us ], [ null, %cond.end.us ], !dbg !10449
  %call38.us = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond37.us) #8, !dbg !10449
  %add39.us = add i32 %call.us, %call38.us, !dbg !10450
  %add40.us = add i32 %add39.us, 1, !dbg !10451
  %idxprom41.us = zext i32 %add40.us to i64, !dbg !10452
  %arrayidx42.us = getelementptr inbounds i32, i32* %12, i64 %idxprom41.us, !dbg !10452
  %14 = load i32, i32* %arrayidx42.us, align 4, !dbg !10453
  %15 = trunc i64 %call26.us to i32, !dbg !10453
  %conv45.us = add i32 %14, %15, !dbg !10453
  store i32 %conv45.us, i32* %arrayidx42.us, align 4, !dbg !10453
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10454
  %bf.load48.us = load i64, i64* %16, align 8, !dbg !10454
  %17 = trunc i64 %bf.load48.us to i16, !dbg !10454
  switch i16 %17, label %return.loopexit.us-lcssa.us [
    i16 146, label %sw.bb51.us
    i16 23, label %sw.bb53.us-lcssa.us
  ], !dbg !10455

sw.bb51.us:                                       ; preds = %cond.end36.us
  br label %tailrecurse.us, !dbg !10424

return.loopexit.us-lcssa.us:                      ; preds = %cond.end36.us, %sw.bb.us, %tailrecurse.us
  br label %return.loopexit, !dbg !10456

sw.bb66.us-lcssa.us:                              ; preds = %tailrecurse.us
  %access_fun.tr.us.lcssa16 = phi %union.tree_node* [ %access_fun.tr.us, %tailrecurse.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.us.lcssa16, metadata !10413, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.us.lcssa16, metadata !10413, metadata !DIExpression()), !dbg !10426
  br label %sw.bb66, !dbg !10457

sw.bb53.us-lcssa.us:                              ; preds = %cond.end36.us
  %.lcssa18 = phi %union.tree_node* [ %1, %cond.end36.us ], !dbg !10429
  br label %sw.bb53, !dbg !10458

tailrecurse:                                      ; preds = %sw.bb51, %entry.entry.split_crit_edge
  %bf.load = phi i64 [ %bf.load.pre, %entry.entry.split_crit_edge ], [ %bf.load48, %sw.bb51 ], !dbg !10427
  %access_fun.tr = phi %union.tree_node* [ %access_fun, %entry.entry.split_crit_edge ], [ %19, %sw.bb51 ]
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %pb, metadata !10410, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata i32 %eq, metadata !10411, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata i32 %offset, metadata !10412, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr, metadata !10413, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10414, metadata !DIExpression()), !dbg !10426
  %18 = trunc i64 %bf.load to i16, !dbg !10427
  switch i16 %18, label %return.loopexit.us-lcssa [
    i16 146, label %sw.bb
    i16 23, label %sw.bb66.us-lcssa
  ], !dbg !10428

sw.bb:                                            ; preds = %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %access_fun.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10429
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10429
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10429
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !10415, metadata !DIExpression()), !dbg !10421
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !10430
  %20 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !10430
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !10418, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()), !dbg !10421
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10431
  %bf.load9 = load i64, i64* %21, align 8, !dbg !10431
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !10433
  %cmp = icmp eq i64 %bf.cast112, 23, !dbg !10433
  br i1 %cmp, label %if.end, label %return.loopexit.us-lcssa, !dbg !10434

if.end:                                           ; preds = %sw.bb
  %22 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !10435
  %23 = load %struct.tree_int_cst*, %struct.tree_int_cst** %22, align 8, !dbg !10435
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %23, i64 0, i32 1, i32 0, !dbg !10435
  %24 = load i64, i64* %low, align 8, !dbg !10435
  %conv = trunc i64 %24 to i32, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10419, metadata !DIExpression()), !dbg !10421
  %25 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10436
  %call = tail call fastcc i32 @index_in_loop_nest(i32 %conv, %struct.VEC_loop_p_heap* %25) #8, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %call, metadata !10420, metadata !DIExpression()), !dbg !10421
  %call13 = tail call i64 @int_cst_value(%union.tree_node* %20) #7, !dbg !10438
  %conv14 = trunc i64 %call13 to i32, !dbg !10438
  %26 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10439
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %26, i64 %idxprom, i32 3, !dbg !10440
  %27 = load i32*, i32** %coef, align 8, !dbg !10440
  %add = add i32 %call, %offset, !dbg !10459
  %add16 = add i32 %add, 1, !dbg !10441
  %idxprom17 = zext i32 %add16 to i64, !dbg !10442
  %arrayidx18 = getelementptr inbounds i32, i32* %27, i64 %idxprom17, !dbg !10442
  store i32 %conv14, i32* %arrayidx18, align 4, !dbg !10443
  %28 = load i32, i32* %inner_loop, align 8, !dbg !10444
  %cmp19 = icmp ugt i32 %28, %call, !dbg !10444
  br i1 %cmp19, label %cond.true, label %cond.end, !dbg !10444

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !10444

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %call, %if.end ], !dbg !10444
  store i32 %cond, i32* %inner_loop, align 8, !dbg !10445
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10454
  %bf.load48 = load i64, i64* %29, align 8, !dbg !10454
  %30 = trunc i64 %bf.load48 to i16, !dbg !10454
  switch i16 %30, label %return.loopexit.us-lcssa [
    i16 146, label %sw.bb51
    i16 23, label %sw.bb53.us-lcssa
  ], !dbg !10455

sw.bb51:                                          ; preds = %cond.end
  br label %tailrecurse, !dbg !10424

sw.bb53.us-lcssa:                                 ; preds = %cond.end
  %.lcssa21 = phi %union.tree_node* [ %19, %cond.end ], !dbg !10429
  br label %sw.bb53, !dbg !10458

sw.bb53:                                          ; preds = %sw.bb53.us-lcssa.us, %sw.bb53.us-lcssa
  %.lcssa = phi %union.tree_node* [ %.lcssa21, %sw.bb53.us-lcssa ], [ %.lcssa18, %sw.bb53.us-lcssa.us ], !dbg !10429
  %call54 = tail call i64 @int_cst_value(%union.tree_node* %.lcssa) #7, !dbg !10458
  %31 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10460
  %coef58 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %31, i64 %idxprom, i32 3, !dbg !10461
  %32 = load i32*, i32** %coef58, align 8, !dbg !10461
  %33 = load i32, i32* %32, align 4, !dbg !10462
  %34 = trunc i64 %call54 to i32, !dbg !10462
  %conv62 = add i32 %33, %34, !dbg !10462
  store i32 %conv62, i32* %32, align 4, !dbg !10462
  br label %return, !dbg !10463

sw.bb66.us-lcssa:                                 ; preds = %tailrecurse
  %access_fun.tr.lcssa19 = phi %union.tree_node* [ %access_fun.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa19, metadata !10413, metadata !DIExpression()), !dbg !10426
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa19, metadata !10413, metadata !DIExpression()), !dbg !10426
  br label %sw.bb66, !dbg !10457

sw.bb66:                                          ; preds = %sw.bb66.us-lcssa.us, %sw.bb66.us-lcssa
  %access_fun.tr.lcssa5 = phi %union.tree_node* [ %access_fun.tr.lcssa19, %sw.bb66.us-lcssa ], [ %access_fun.tr.us.lcssa16, %sw.bb66.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %access_fun.tr.lcssa5, metadata !10413, metadata !DIExpression()), !dbg !10426
  %call67 = tail call i64 @int_cst_value(%union.tree_node* %access_fun.tr.lcssa5) #7, !dbg !10457
  %35 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10464
  %coef71 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %35, i64 %idxprom, i32 3, !dbg !10465
  %36 = load i32*, i32** %coef71, align 8, !dbg !10465
  %37 = load i32, i32* %36, align 4, !dbg !10466
  %38 = trunc i64 %call67 to i32, !dbg !10466
  %conv75 = add i32 %37, %38, !dbg !10466
  store i32 %conv75, i32* %36, align 4, !dbg !10466
  br label %return, !dbg !10467

return.loopexit.us-lcssa:                         ; preds = %sw.bb, %tailrecurse, %cond.end
  br label %return.loopexit, !dbg !10456

return.loopexit:                                  ; preds = %return.loopexit.us-lcssa.us, %return.loopexit.us-lcssa
  br label %return, !dbg !10456

return:                                           ; preds = %return.loopexit, %sw.bb53, %sw.bb66
  %retval.1 = phi i8 [ 1, %sw.bb66 ], [ 1, %sw.bb53 ], [ 0, %return.loopexit ], !dbg !10468
  ret i8 %retval.1, !dbg !10456
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lambda_vector_gcd(i32* %vector, i32 %size) unnamed_addr #0 !dbg !10469 {
entry:
  call void @llvm.dbg.value(metadata i32* %vector, metadata !10473, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %size, metadata !10474, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 0, metadata !10476, metadata !DIExpression()), !dbg !10477
  %cmp = icmp sgt i32 %size, 0, !dbg !10478
  br i1 %cmp, label %if.then, label %if.end, !dbg !10480

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %vector, align 4, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %0, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 1, metadata !10475, metadata !DIExpression()), !dbg !10477
  %wide.trip.count = zext i32 %size to i64, !dbg !10483
  br label %for.cond, !dbg !10486

for.cond:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ], !dbg !10487
  %gcd1.0 = phi i32 [ %call, %for.body ], [ %0, %if.then ], !dbg !10488
  call void @llvm.dbg.value(metadata i32 %gcd1.0, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10475, metadata !DIExpression()), !dbg !10477
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !10483
  br i1 %exitcond, label %if.end.loopexit, label %for.body, !dbg !10489

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds i32, i32* %vector, i64 %indvars.iv, !dbg !10490
  %1 = load i32, i32* %arrayidx2, align 4, !dbg !10490
  %call = tail call fastcc i32 @gcd(i32 %gcd1.0, i32 %1) #8, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %call, metadata !10476, metadata !DIExpression()), !dbg !10477
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10492
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10477
  br label %for.cond, !dbg !10493, !llvm.loop !10494

if.end.loopexit:                                  ; preds = %for.cond
  %gcd1.0.lcssa = phi i32 [ %gcd1.0, %for.cond ], !dbg !10488
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %gcd1.0.lcssa, metadata !10476, metadata !DIExpression()), !dbg !10477
  br label %if.end, !dbg !10496

if.end:                                           ; preds = %if.end.loopexit, %entry
  %gcd1.1 = phi i32 [ 0, %entry ], [ %gcd1.0.lcssa, %if.end.loopexit ], !dbg !10477
  call void @llvm.dbg.value(metadata i32 %gcd1.1, metadata !10476, metadata !DIExpression()), !dbg !10477
  ret i32 %gcd1.1, !dbg !10496
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @omega_init_eqn_zero(%struct.eqn_d* %e, i32 %s) unnamed_addr #0 !dbg !10497 {
entry:
  call void @llvm.dbg.value(metadata %struct.eqn_d* %e, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %s, metadata !10502, metadata !DIExpression()), !dbg !10503
  %key = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e, i64 0, i32 0, !dbg !10504
  store i32 0, i32* %key, align 8, !dbg !10505
  %touched = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e, i64 0, i32 1, !dbg !10506
  store i32 0, i32* %touched, align 4, !dbg !10507
  %color = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e, i64 0, i32 2, !dbg !10508
  store i32 0, i32* %color, align 8, !dbg !10509
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e, i64 0, i32 3, !dbg !10510
  %0 = bitcast i32** %coef to i8**, !dbg !10510
  %1 = load i8*, i8** %0, align 8, !dbg !10510
  %add = add nsw i32 %s, 1, !dbg !10511
  %conv = sext i32 %add to i64, !dbg !10512
  %mul = shl nsw i64 %conv, 2, !dbg !10513
  %call = tail call i8* @memset(i8* %1, i32 0, i64 %mul) #7, !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @omega_copy_problem(%struct.omega_pb_d* %p1, %struct.omega_pb_d* %p2) unnamed_addr #0 !dbg !10516 {
entry:
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %p1, metadata !10520, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata %struct.omega_pb_d* %p2, metadata !10521, metadata !DIExpression()), !dbg !10524
  %num_vars = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 0, !dbg !10525
  %0 = load i32, i32* %num_vars, align 8, !dbg !10525
  %num_vars1 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 0, !dbg !10526
  store i32 %0, i32* %num_vars1, align 8, !dbg !10527
  %hash_version = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 5, !dbg !10528
  %1 = load i32, i32* %hash_version, align 4, !dbg !10528
  %hash_version2 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 5, !dbg !10529
  store i32 %1, i32* %hash_version2, align 4, !dbg !10530
  %variables_initialized = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 6, !dbg !10531
  %2 = load i8, i8* %variables_initialized, align 8, !dbg !10531
  %variables_initialized3 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 6, !dbg !10532
  store i8 %2, i8* %variables_initialized3, align 8, !dbg !10533
  %variables_freed = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 7, !dbg !10534
  %3 = load i8, i8* %variables_freed, align 1, !dbg !10534
  %variables_freed4 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 7, !dbg !10535
  store i8 %3, i8* %variables_freed4, align 1, !dbg !10536
  %safe_vars = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 1, !dbg !10537
  %4 = load i32, i32* %safe_vars, align 4, !dbg !10537
  %safe_vars5 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 1, !dbg !10538
  store i32 %4, i32* %safe_vars5, align 4, !dbg !10539
  %num_eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 2, !dbg !10540
  %5 = load i32, i32* %num_eqs, align 8, !dbg !10540
  %num_eqs6 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 2, !dbg !10541
  store i32 %5, i32* %num_eqs6, align 8, !dbg !10542
  %num_subs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 4, !dbg !10543
  %6 = load i32, i32* %num_subs, align 8, !dbg !10543
  %num_subs7 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 4, !dbg !10544
  store i32 %6, i32* %num_subs7, align 8, !dbg !10545
  %num_geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 3, !dbg !10546
  %7 = load i32, i32* %num_geqs, align 4, !dbg !10546
  %num_geqs8 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 3, !dbg !10547
  store i32 %7, i32* %num_geqs8, align 4, !dbg !10548
  %8 = load i32, i32* %num_eqs, align 8, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %8, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %eqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 11, !dbg !10551
  %eqs10 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 11, !dbg !10551
  %9 = sext i32 %8 to i64, !dbg !10553
  br label %for.cond, !dbg !10553

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.body ], [ %9, %entry ]
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !10554
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %cmp = icmp sgt i64 %indvars.iv7, 0, !dbg !10555
  br i1 %cmp, label %for.body, label %for.end, !dbg !10556

for.body:                                         ; preds = %for.cond
  %10 = load %struct.eqn_d*, %struct.eqn_d** %eqs, align 8, !dbg !10557
  %arrayidx = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %10, i64 %indvars.iv.next8, !dbg !10558
  %11 = load %struct.eqn_d*, %struct.eqn_d** %eqs10, align 8, !dbg !10559
  %arrayidx12 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %11, i64 %indvars.iv.next8, !dbg !10560
  %12 = load i32, i32* %num_vars, align 8, !dbg !10561
  tail call fastcc void @omega_copy_eqn(%struct.eqn_d* %arrayidx, %struct.eqn_d* %arrayidx12, i32 %12) #8, !dbg !10562
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  br label %for.cond, !dbg !10563, !llvm.loop !10564

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %num_geqs, align 4, !dbg !10566
  call void @llvm.dbg.value(metadata i32 %13, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %geqs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 10, !dbg !10568
  %geqs21 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 10, !dbg !10568
  %14 = sext i32 %13 to i64, !dbg !10570
  br label %for.cond16, !dbg !10570

for.cond16:                                       ; preds = %for.body18, %for.end
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body18 ], [ %14, %for.end ]
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, -1, !dbg !10571
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %cmp17 = icmp sgt i64 %indvars.iv5, 0, !dbg !10572
  br i1 %cmp17, label %for.body18, label %for.end27, !dbg !10573

for.body18:                                       ; preds = %for.cond16
  %15 = load %struct.eqn_d*, %struct.eqn_d** %geqs, align 8, !dbg !10574
  %arrayidx20 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %15, i64 %indvars.iv.next6, !dbg !10575
  %16 = load %struct.eqn_d*, %struct.eqn_d** %geqs21, align 8, !dbg !10576
  %arrayidx23 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %16, i64 %indvars.iv.next6, !dbg !10577
  %17 = load i32, i32* %num_vars, align 8, !dbg !10578
  tail call fastcc void @omega_copy_eqn(%struct.eqn_d* %arrayidx20, %struct.eqn_d* %arrayidx23, i32 %17) #8, !dbg !10579
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  br label %for.cond16, !dbg !10580, !llvm.loop !10581

for.end27:                                        ; preds = %for.cond16
  %18 = load i32, i32* %num_subs, align 8, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %18, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %subs = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 12, !dbg !10585
  %subs35 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 12, !dbg !10585
  %19 = sext i32 %18 to i64, !dbg !10587
  br label %for.cond30, !dbg !10587

for.cond30:                                       ; preds = %for.body32, %for.end27
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body32 ], [ %19, %for.end27 ]
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !10588
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  %cmp31 = icmp sgt i64 %indvars.iv3, 0, !dbg !10589
  br i1 %cmp31, label %for.body32, label %for.end41, !dbg !10590

for.body32:                                       ; preds = %for.cond30
  %20 = load %struct.eqn_d*, %struct.eqn_d** %subs, align 8, !dbg !10591
  %arrayidx34 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %20, i64 %indvars.iv.next4, !dbg !10592
  %21 = load %struct.eqn_d*, %struct.eqn_d** %subs35, align 8, !dbg !10593
  %arrayidx37 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %21, i64 %indvars.iv.next4, !dbg !10594
  %22 = load i32, i32* %num_vars, align 8, !dbg !10595
  tail call fastcc void @omega_copy_eqn(%struct.eqn_d* %arrayidx34, %struct.eqn_d* %arrayidx37, i32 %22) #8, !dbg !10596
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  br label %for.cond30, !dbg !10597, !llvm.loop !10598

for.end41:                                        ; preds = %for.cond30
  %23 = load i32, i32* %num_vars, align 8, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %23, metadata !10523, metadata !DIExpression()), !dbg !10524
  %var = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 8, !dbg !10602
  %var48 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 8, !dbg !10602
  %24 = sext i32 %23 to i64, !dbg !10604
  br label %for.cond43, !dbg !10604

for.cond43:                                       ; preds = %for.body45, %for.end41
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body45 ], [ %24, %for.end41 ], !dbg !10605
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !10523, metadata !DIExpression()), !dbg !10524
  %cmp44 = icmp sgt i64 %indvars.iv1, -1, !dbg !10606
  br i1 %cmp44, label %for.body45, label %for.end53, !dbg !10607

for.body45:                                       ; preds = %for.cond43
  %25 = load i32*, i32** %var, align 8, !dbg !10608
  %arrayidx47 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv1, !dbg !10609
  %26 = load i32, i32* %arrayidx47, align 4, !dbg !10609
  %27 = load i32*, i32** %var48, align 8, !dbg !10610
  %arrayidx50 = getelementptr inbounds i32, i32* %27, i64 %indvars.iv1, !dbg !10611
  store i32 %26, i32* %arrayidx50, align 4, !dbg !10612
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !10613
  call void @llvm.dbg.value(metadata i32 undef, metadata !10523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  br label %for.cond43, !dbg !10614, !llvm.loop !10615

for.end53:                                        ; preds = %for.cond43
  %28 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !10617
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %28, i64 64, i32 1, !dbg !10617
  %29 = load i32, i32* %value, align 8, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %29, metadata !10523, metadata !DIExpression()), !dbg !10524
  %forwarding_address = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p2, i64 0, i32 9, !dbg !10619
  %forwarding_address60 = getelementptr inbounds %struct.omega_pb_d, %struct.omega_pb_d* %p1, i64 0, i32 9, !dbg !10619
  %30 = sext i32 %29 to i64, !dbg !10621
  br label %for.cond55, !dbg !10621

for.cond55:                                       ; preds = %for.body57, %for.end53
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body57 ], [ %30, %for.end53 ], !dbg !10622
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !10523, metadata !DIExpression()), !dbg !10524
  %cmp56 = icmp sgt i64 %indvars.iv, -1, !dbg !10623
  br i1 %cmp56, label %for.body57, label %for.end65, !dbg !10624

for.body57:                                       ; preds = %for.cond55
  %31 = load i32*, i32** %forwarding_address, align 8, !dbg !10625
  %arrayidx59 = getelementptr inbounds i32, i32* %31, i64 %indvars.iv, !dbg !10626
  %32 = load i32, i32* %arrayidx59, align 4, !dbg !10626
  %33 = load i32*, i32** %forwarding_address60, align 8, !dbg !10627
  %arrayidx62 = getelementptr inbounds i32, i32* %33, i64 %indvars.iv, !dbg !10628
  store i32 %32, i32* %arrayidx62, align 4, !dbg !10629
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !10630
  call void @llvm.dbg.value(metadata i32 undef, metadata !10523, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10524
  br label %for.cond55, !dbg !10631, !llvm.loop !10632

for.end65:                                        ; preds = %for.cond55
  ret void, !dbg !10634
}

declare dso_local i32 @omega_simplify_problem(%struct.omega_pb_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @omega_copy_eqn(%struct.eqn_d* %e1, %struct.eqn_d* %e2, i32 %s) unnamed_addr #0 !dbg !10635 {
entry:
  call void @llvm.dbg.value(metadata %struct.eqn_d* %e1, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata %struct.eqn_d* %e2, metadata !10640, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 %s, metadata !10641, metadata !DIExpression()), !dbg !10642
  %key = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e2, i64 0, i32 0, !dbg !10643
  %0 = load i32, i32* %key, align 8, !dbg !10643
  %key1 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e1, i64 0, i32 0, !dbg !10644
  store i32 %0, i32* %key1, align 8, !dbg !10645
  %touched = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e2, i64 0, i32 1, !dbg !10646
  %1 = load i32, i32* %touched, align 4, !dbg !10646
  %touched2 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e1, i64 0, i32 1, !dbg !10647
  store i32 %1, i32* %touched2, align 4, !dbg !10648
  %color = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e2, i64 0, i32 2, !dbg !10649
  %2 = load i32, i32* %color, align 8, !dbg !10649
  %color3 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e1, i64 0, i32 2, !dbg !10650
  store i32 %2, i32* %color3, align 8, !dbg !10651
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e1, i64 0, i32 3, !dbg !10652
  %3 = bitcast i32** %coef to i8**, !dbg !10652
  %4 = load i8*, i8** %3, align 8, !dbg !10652
  %coef4 = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %e2, i64 0, i32 3, !dbg !10653
  %5 = bitcast i32** %coef4 to i8**, !dbg !10653
  %6 = load i8*, i8** %5, align 8, !dbg !10653
  %add = add nsw i32 %s, 1, !dbg !10654
  %conv = sext i32 %add to i64, !dbg !10655
  %mul = shl nsw i64 %conv, 2, !dbg !10656
  %call = tail call i8* @memcpy(i8* %4, i8* %6, i64 %mul) #7, !dbg !10657
  ret void, !dbg !10658
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @omega_free_eqns(%struct.eqn_d* %eq, i32 %n) unnamed_addr #0 !dbg !10659 {
entry:
  call void @llvm.dbg.value(metadata %struct.eqn_d* %eq, metadata !10661, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 %n, metadata !10662, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 %n, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10664
  %0 = sext i32 %n to i64, !dbg !10665
  br label %for.cond, !dbg !10665

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %0, %entry ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !10667
  call void @llvm.dbg.value(metadata i32 undef, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10664
  %cmp = icmp sgt i64 %indvars.iv, 0, !dbg !10668
  br i1 %cmp, label %for.body, label %for.end, !dbg !10670

for.body:                                         ; preds = %for.cond
  %coef = getelementptr inbounds %struct.eqn_d, %struct.eqn_d* %eq, i64 %indvars.iv.next, i32 3, !dbg !10671
  %1 = bitcast i32** %coef to i8**, !dbg !10671
  %2 = load i8*, i8** %1, align 8, !dbg !10671
  tail call void @free(i8* %2) #7, !dbg !10672
  call void @llvm.dbg.value(metadata i32 undef, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10664
  br label %for.cond, !dbg !10673, !llvm.loop !10674

for.end:                                          ; preds = %for.cond
  %3 = bitcast %struct.eqn_d* %eq to i8*, !dbg !10676
  tail call void @free(i8* %3) #7, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !10679 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !10681, metadata !DIExpression()), !dbg !10682
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !10683
  %cmp = icmp ugt i32 %call, 5, !dbg !10684
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10685

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !10686
  %cmp2 = icmp ult i32 %call1, 10, !dbg !10687
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !10688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !10689 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !10691, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata i32 %i, metadata !10692, metadata !DIExpression()), !dbg !10693
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !10694
  %tobool = icmp eq i8 %call, 0, !dbg !10694
  br i1 %tobool, label %return, label %if.then, !dbg !10696

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !10697
  %idx.ext = zext i32 %i to i64, !dbg !10699
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idx.ext, !dbg !10699
  br label %return, !dbg !10700

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !10701
  ret %union.tree_node** %retval.0, !dbg !10702
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_ref_loc_heap_reserve(%struct.VEC_data_ref_loc_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10703 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_heap** %vec_, metadata !10707, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i32 1, metadata !10708, metadata !DIExpression()), !dbg !10710
  %0 = load %struct.VEC_data_ref_loc_heap*, %struct.VEC_data_ref_loc_heap** %vec_, align 8, !dbg !10711
  %tobool = icmp eq %struct.VEC_data_ref_loc_heap* %0, null, !dbg !10711
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10711

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_data_ref_loc_heap, %struct.VEC_data_ref_loc_heap* %0, i64 0, i32 0, !dbg !10711
  br label %cond.end, !dbg !10711

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_data_ref_loc_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10711
  %call = tail call fastcc i32 @VEC_data_ref_loc_base_space(%struct.VEC_data_ref_loc_base* %cond, i32 1) #8, !dbg !10711
  %tobool1 = icmp eq i32 %call, 0, !dbg !10711
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10709, metadata !DIExpression()), !dbg !10710
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10711

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_data_ref_loc_heap** %vec_ to i8**, !dbg !10712
  %2 = load i8*, i8** %1, align 8, !dbg !10712
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 16) #7, !dbg !10712
  store i8* %call3, i8** %1, align 8, !dbg !10712
  br label %if.end, !dbg !10712

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10711
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_ref_loc_d* @VEC_data_ref_loc_base_quick_push(%struct.VEC_data_ref_loc_base* %vec_, %struct.data_ref_loc_d* %obj_) unnamed_addr #0 !dbg !10714 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_base* %vec_, metadata !10718, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* null, metadata !10719, metadata !DIExpression()), !dbg !10721
  %num1 = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 0, !dbg !10722
  %0 = load i32, i32* %num1, align 8, !dbg !10722
  %inc = add i32 %0, 1, !dbg !10722
  store i32 %inc, i32* %num1, align 8, !dbg !10722
  %idxprom = zext i32 %0 to i64, !dbg !10722
  %arrayidx = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10722
  call void @llvm.dbg.value(metadata %struct.data_ref_loc_d* %arrayidx, metadata !10720, metadata !DIExpression()), !dbg !10721
  ret %struct.data_ref_loc_d* %arrayidx, !dbg !10722
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_ref_loc_base_space(%struct.VEC_data_ref_loc_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10723 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_ref_loc_base* %vec_, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 1, metadata !10728, metadata !DIExpression()), !dbg !10729
  %tobool = icmp eq %struct.VEC_data_ref_loc_base* %vec_, null, !dbg !10730
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10730

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 1, !dbg !10730
  %0 = load i32, i32* %alloc, align 4, !dbg !10730
  %num = getelementptr inbounds %struct.VEC_data_ref_loc_base, %struct.VEC_data_ref_loc_base* %vec_, i64 0, i32 0, !dbg !10730
  %1 = load i32, i32* %num, align 8, !dbg !10730
  %cmp1 = icmp ne i32 %0, %1, !dbg !10730
  %phitmp = zext i1 %cmp1 to i32, !dbg !10730
  br label %cond.end, !dbg !10730

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10730

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10730
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_contains_chrecs(%union.tree_node*, i32*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_heap_reserve(%struct.VEC_data_reference_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10731 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %vec_, metadata !10735, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.value(metadata i32 1, metadata !10736, metadata !DIExpression()), !dbg !10738
  %0 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %vec_, align 8, !dbg !10739
  %tobool = icmp eq %struct.VEC_data_reference_p_heap* %0, null, !dbg !10739
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10739

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_data_reference_p_heap, %struct.VEC_data_reference_p_heap* %0, i64 0, i32 0, !dbg !10739
  br label %cond.end, !dbg !10739

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_data_reference_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10739
  %call = tail call fastcc i32 @VEC_data_reference_p_base_space(%struct.VEC_data_reference_p_base* %cond, i32 1) #8, !dbg !10739
  %tobool1 = icmp eq i32 %call, 0, !dbg !10739
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10739
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10737, metadata !DIExpression()), !dbg !10738
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10739

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_data_reference_p_heap** %vec_ to i8**, !dbg !10740
  %2 = load i8*, i8** %1, align 8, !dbg !10740
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !10740
  store i8* %call3, i8** %1, align 8, !dbg !10740
  br label %if.end, !dbg !10740

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10739
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_reference** @VEC_data_reference_p_base_quick_push(%struct.VEC_data_reference_p_base* %vec_, %struct.data_reference* %obj_) unnamed_addr #0 !dbg !10742 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !10747, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata %struct.data_reference* %obj_, metadata !10748, metadata !DIExpression()), !dbg !10750
  %num1 = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !10751
  %0 = load i32, i32* %num1, align 8, !dbg !10751
  %inc = add i32 %0, 1, !dbg !10751
  store i32 %inc, i32* %num1, align 8, !dbg !10751
  %idxprom = zext i32 %0 to i64, !dbg !10751
  %arrayidx = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10751
  call void @llvm.dbg.value(metadata %struct.data_reference** %arrayidx, metadata !10749, metadata !DIExpression()), !dbg !10750
  store %struct.data_reference* %obj_, %struct.data_reference** %arrayidx, align 8, !dbg !10751
  ret %struct.data_reference** %arrayidx, !dbg !10751
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_data_reference_p_base_space(%struct.VEC_data_reference_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10752 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_base* %vec_, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 1, metadata !10757, metadata !DIExpression()), !dbg !10758
  %tobool = icmp eq %struct.VEC_data_reference_p_base* %vec_, null, !dbg !10759
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10759

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 1, !dbg !10759
  %0 = load i32, i32* %alloc, align 4, !dbg !10759
  %num = getelementptr inbounds %struct.VEC_data_reference_p_base, %struct.VEC_data_reference_p_base* %vec_, i64 0, i32 0, !dbg !10759
  %1 = load i32, i32* %num, align 8, !dbg !10759
  %cmp1 = icmp ne i32 %0, %1, !dbg !10759
  %phitmp = zext i1 %cmp1 to i32, !dbg !10759
  br label %cond.end, !dbg !10759

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10759

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10759
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10760 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !10764, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 1, metadata !10765, metadata !DIExpression()), !dbg !10767
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !10768
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !10768
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10768

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !10768
  br label %cond.end, !dbg !10768

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10768
  %call = tail call fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %cond, i32 1) #8, !dbg !10768
  %tobool1 = icmp eq i32 %call, 0, !dbg !10768
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10766, metadata !DIExpression()), !dbg !10767
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10768

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_loop_p_heap** %vec_ to i8**, !dbg !10769
  %2 = load i8*, i8** %1, align 8, !dbg !10769
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !10769
  store i8* %call3, i8** %1, align 8, !dbg !10769
  br label %if.end, !dbg !10769

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10768
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !10771 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !10776, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !10777, metadata !DIExpression()), !dbg !10779
  %num1 = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !10780
  %0 = load i32, i32* %num1, align 8, !dbg !10780
  %inc = add i32 %0, 1, !dbg !10780
  store i32 %inc, i32* %num1, align 8, !dbg !10780
  %idxprom = zext i32 %0 to i64, !dbg !10780
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10780
  call void @llvm.dbg.value(metadata %struct.loop** %arrayidx, metadata !10778, metadata !DIExpression()), !dbg !10779
  store %struct.loop* %obj_, %struct.loop** %arrayidx, align 8, !dbg !10780
  ret %struct.loop** %arrayidx, !dbg !10780
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10781 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !10785, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 1, metadata !10786, metadata !DIExpression()), !dbg !10787
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !10788
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10788

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 1, !dbg !10788
  %0 = load i32, i32* %alloc, align 4, !dbg !10788
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !10788
  %1 = load i32, i32* %num, align 8, !dbg !10788
  %cmp1 = icmp ne i32 %0, %1, !dbg !10788
  %phitmp = zext i1 %cmp1 to i32, !dbg !10788
  br label %cond.end, !dbg !10788

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10788

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10788
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !10789 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !10793, metadata !DIExpression()), !dbg !10794
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #7, !dbg !10795
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !10795
  ret %struct.VEC_int_heap* %0, !dbg !10795
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !10796 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !10799
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !10799
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !10799
  %tobool = icmp eq %struct.loops* %1, null, !dbg !10799
  br i1 %tobool, label %return, label %if.end, !dbg !10801

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !10802
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !10802
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !10802
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !10802

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !10802
  br label %cond.end, !dbg !10802

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !10802
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !10802
  br label %return, !dbg !10803

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !10804
  ret i32 %retval.0, !dbg !10805
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !10806 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10811, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !10812, metadata !DIExpression()), !dbg !10814
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10815
  %0 = load i32, i32* %num1, align 4, !dbg !10815
  %inc = add i32 %0, 1, !dbg !10815
  store i32 %inc, i32* %num1, align 4, !dbg !10815
  %idxprom = zext i32 %0 to i64, !dbg !10815
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10815
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !10813, metadata !DIExpression()), !dbg !10814
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !10815
  ret i32* %arrayidx, !dbg !10815
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !10816 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !10820, metadata !DIExpression()), !dbg !10822
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !10823
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !10823
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !10823
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10823

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !10823
  br label %cond.end, !dbg !10823

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10823
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %call, metadata !10821, metadata !DIExpression()), !dbg !10822
  %cmp = icmp eq i32 %call, 0, !dbg !10824
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10826

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !10827
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !10827
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !10827

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !10827
  br label %cond.end8, !dbg !10827

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !10827
  %sub = add i32 %call, -1, !dbg !10827
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #8, !dbg !10827
  br label %cleanup, !dbg !10828

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !10822
  ret %struct.loop* %retval.0, !dbg !10829
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

declare dso_local void @gather_stats_on_scev_database() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !10830 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !10836, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10837, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !10838, metadata !DIExpression()), !dbg !10839
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !10840
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10840

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !10840
  %0 = load i32, i32* %num, align 4, !dbg !10840
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10840
  br i1 %cmp, label %if.then, label %if.else, !dbg !10842

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10843
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10843
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10843
  br label %return, !dbg !10843

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10845

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !10847
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10847
  store i32 %storemerge, i32* %ptr, align 4, !dbg !10847
  ret i32 %retval.0, !dbg !10842
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !10848 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !10853, metadata !DIExpression()), !dbg !10854
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !10855
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !10855
  br i1 %tobool, label %if.end, label %if.then, !dbg !10857

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !10857
  tail call void @free(i8* nonnull %1) #7, !dbg !10855
  br label %if.end, !dbg !10855

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !10857
  ret void, !dbg !10857
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_subscript_p_heap_free(%struct.VEC_subscript_p_heap** %vec_) unnamed_addr #0 !dbg !10858 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_subscript_p_heap** %vec_, metadata !10862, metadata !DIExpression()), !dbg !10863
  %0 = load %struct.VEC_subscript_p_heap*, %struct.VEC_subscript_p_heap** %vec_, align 8, !dbg !10864
  %tobool = icmp eq %struct.VEC_subscript_p_heap* %0, null, !dbg !10864
  br i1 %tobool, label %if.end, label %if.then, !dbg !10866

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_subscript_p_heap* %0 to i8*, !dbg !10866
  tail call void @free(i8* nonnull %1) #7, !dbg !10864
  br label %if.end, !dbg !10864

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_subscript_p_heap* null, %struct.VEC_subscript_p_heap** %vec_, align 8, !dbg !10866
  ret void, !dbg !10866
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @create_rdg_edge_for_ddr(%struct.graph* %rdg, %struct.data_dependence_relation* %ddr) unnamed_addr #5 !dbg !10867 {
entry:
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !10871, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10872, metadata !DIExpression()), !dbg !10882
  %a = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 0, !dbg !10883
  %0 = load %struct.data_reference*, %struct.data_reference** %a, align 8, !dbg !10883
  call void @llvm.dbg.value(metadata %struct.data_reference* %0, metadata !10876, metadata !DIExpression()), !dbg !10882
  %b = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 1, !dbg !10884
  %1 = load %struct.data_reference*, %struct.data_reference** %b, align 8, !dbg !10884
  call void @llvm.dbg.value(metadata %struct.data_reference* %1, metadata !10877, metadata !DIExpression()), !dbg !10882
  %call = tail call fastcc i32 @ddr_dependence_level(%struct.data_dependence_relation* %ddr) #8, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %call, metadata !10878, metadata !DIExpression()), !dbg !10882
  %cmp = icmp eq i32 %call, 0, !dbg !10886
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10887

land.lhs.true:                                    ; preds = %entry
  %reversed_p = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 8, !dbg !10888
  %2 = load i8, i8* %reversed_p, align 4, !dbg !10888
  %tobool = icmp ne i8 %2, 0, !dbg !10888
  %spec.select = select i1 %tobool, %struct.data_reference* %0, %struct.data_reference* %1, !dbg !10889
  %spec.select1 = select i1 %tobool, %struct.data_reference* %1, %struct.data_reference* %0, !dbg !10889
  br label %if.end, !dbg !10889

if.end:                                           ; preds = %entry, %land.lhs.true
  %dra.0 = phi %struct.data_reference* [ %0, %entry ], [ %spec.select, %land.lhs.true ], !dbg !10882
  %drb.0 = phi %struct.data_reference* [ %1, %entry ], [ %spec.select1, %land.lhs.true ], !dbg !10882
  call void @llvm.dbg.value(metadata %struct.data_reference* %drb.0, metadata !10877, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata %struct.data_reference* %dra.0, metadata !10876, metadata !DIExpression()), !dbg !10882
  %stmt = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dra.0, i64 0, i32 0, !dbg !10890
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !10890
  %call1 = tail call i32 @rdg_vertex_for_stmt(%struct.graph* %rdg, %union.gimple_statement_d* %3) #8, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %call1, metadata !10874, metadata !DIExpression()), !dbg !10882
  %stmt2 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb.0, i64 0, i32 0, !dbg !10892
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt2, align 8, !dbg !10892
  %call3 = tail call i32 @rdg_vertex_for_stmt(%struct.graph* %rdg, %union.gimple_statement_d* %4) #8, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %call3, metadata !10875, metadata !DIExpression()), !dbg !10882
  %5 = or i32 %call1, %call3, !dbg !10894
  %6 = icmp slt i32 %5, 0, !dbg !10894
  br i1 %6, label %cleanup.cont, label %if.end7, !dbg !10894

if.end7:                                          ; preds = %if.end
  %call8 = tail call %struct.graph_edge* @add_edge(%struct.graph* %rdg, i32 %call1, i32 %call3) #7, !dbg !10896
  call void @llvm.dbg.value(metadata %struct.graph_edge* %call8, metadata !10873, metadata !DIExpression()), !dbg !10882
  %call9 = tail call i8* @xmalloc(i64 16) #7, !dbg !10897
  %data = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %call8, i64 0, i32 4, !dbg !10898
  store i8* %call9, i8** %data, align 8, !dbg !10899
  %level11 = getelementptr inbounds i8, i8* %call9, i64 4, !dbg !10900
  %7 = bitcast i8* %level11 to i32*, !dbg !10900
  store i32 %call, i32* %7, align 4, !dbg !10901
  %8 = bitcast i8** %data to %struct.rdg_edge**, !dbg !10902
  %9 = load %struct.rdg_edge*, %struct.rdg_edge** %8, align 8, !dbg !10902
  %relation = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %9, i64 0, i32 2, !dbg !10902
  store %struct.data_dependence_relation* %ddr, %struct.data_dependence_relation** %relation, align 8, !dbg !10903
  %is_read = getelementptr inbounds %struct.data_reference, %struct.data_reference* %dra.0, i64 0, i32 3, !dbg !10904
  %10 = load i8, i8* %is_read, align 8, !dbg !10904
  %tobool13 = icmp eq i8 %10, 0, !dbg !10904
  br i1 %tobool13, label %if.else, label %land.lhs.true14, !dbg !10906

land.lhs.true14:                                  ; preds = %if.end7
  %is_read15 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb.0, i64 0, i32 3, !dbg !10907
  %11 = load i8, i8* %is_read15, align 8, !dbg !10907
  %tobool17 = icmp eq i8 %11, 0, !dbg !10907
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !10908

if.then18:                                        ; preds = %land.lhs.true14
  %12 = load %struct.rdg_edge*, %struct.rdg_edge** %8, align 8, !dbg !10909
  %type = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %12, i64 0, i32 0, !dbg !10909
  store i32 105, i32* %type, align 8, !dbg !10910
  br label %cleanup.cont, !dbg !10909

if.else:                                          ; preds = %land.lhs.true14, %if.end7
  br i1 %tobool13, label %land.lhs.true22, label %if.else28, !dbg !10911

land.lhs.true22:                                  ; preds = %if.else
  %is_read23 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb.0, i64 0, i32 3, !dbg !10913
  %13 = load i8, i8* %is_read23, align 8, !dbg !10913
  %tobool24 = icmp eq i8 %13, 0, !dbg !10913
  br i1 %tobool24, label %if.then25, label %if.else28, !dbg !10914

if.then25:                                        ; preds = %land.lhs.true22
  %14 = load %struct.rdg_edge*, %struct.rdg_edge** %8, align 8, !dbg !10915
  %type27 = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %14, i64 0, i32 0, !dbg !10915
  store i32 111, i32* %type27, align 8, !dbg !10916
  br label %cleanup.cont, !dbg !10915

if.else28:                                        ; preds = %land.lhs.true22, %if.else
  br i1 %tobool13, label %land.lhs.true31, label %if.else38, !dbg !10917

land.lhs.true31:                                  ; preds = %if.else28
  %is_read32 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb.0, i64 0, i32 3, !dbg !10919
  %15 = load i8, i8* %is_read32, align 8, !dbg !10919
  %tobool34 = icmp eq i8 %15, 0, !dbg !10919
  br i1 %tobool34, label %if.else38, label %if.then35, !dbg !10920

if.then35:                                        ; preds = %land.lhs.true31
  %16 = load %struct.rdg_edge*, %struct.rdg_edge** %8, align 8, !dbg !10921
  %type37 = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %16, i64 0, i32 0, !dbg !10921
  store i32 102, i32* %type37, align 8, !dbg !10922
  br label %cleanup.cont, !dbg !10921

if.else38:                                        ; preds = %land.lhs.true31, %if.else28
  br i1 %tobool13, label %cleanup.cont, label %land.lhs.true42, !dbg !10923

land.lhs.true42:                                  ; preds = %if.else38
  %is_read43 = getelementptr inbounds %struct.data_reference, %struct.data_reference* %drb.0, i64 0, i32 3, !dbg !10925
  %17 = load i8, i8* %is_read43, align 8, !dbg !10925
  %tobool44 = icmp eq i8 %17, 0, !dbg !10925
  br i1 %tobool44, label %if.then45, label %cleanup.cont, !dbg !10926

if.then45:                                        ; preds = %land.lhs.true42
  %18 = load %struct.rdg_edge*, %struct.rdg_edge** %8, align 8, !dbg !10927
  %type47 = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %18, i64 0, i32 0, !dbg !10927
  store i32 97, i32* %type47, align 8, !dbg !10928
  br label %cleanup.cont, !dbg !10927

cleanup.cont:                                     ; preds = %land.lhs.true42, %if.else38, %if.end, %if.then25, %if.then45, %if.then35, %if.then18
  ret void, !dbg !10929
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_rdg_edges_for_scalar(%struct.graph* %rdg, %union.tree_node* %def, i32 %idef) unnamed_addr #5 !dbg !10930 {
entry:
  %iterator = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.graph* %rdg, metadata !10934, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !10935, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata i32 %idef, metadata !10936, metadata !DIExpression()), !dbg !10944
  %0 = bitcast %struct.immediate_use_iterator_d* %iterator to i8*, !dbg !10945
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #6, !dbg !10945
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !10938, metadata !DIExpression(DW_OP_deref)), !dbg !10944
  %call = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iterator, %union.tree_node* %def) #8, !dbg !10946
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !10937, metadata !DIExpression()), !dbg !10944
  br label %for.cond, !dbg !10946

for.cond:                                         ; preds = %cleanup, %entry
  %imm_use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call8, %cleanup ], !dbg !10947
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %imm_use_p.0, metadata !10937, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !10938, metadata !DIExpression(DW_OP_deref)), !dbg !10944
  %call1 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %iterator) #8, !dbg !10948
  %tobool = icmp eq i8 %call1, 0, !dbg !10948
  br i1 %tobool, label %for.body, label %for.end, !dbg !10946

for.body:                                         ; preds = %for.cond
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %imm_use_p.0, i64 0, i32 2, i32 0, !dbg !10949
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !10949
  %call2 = call i32 @rdg_vertex_for_stmt(%struct.graph* %rdg, %union.gimple_statement_d* %1) #8, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %call2, metadata !10943, metadata !DIExpression()), !dbg !10951
  %cmp = icmp slt i32 %call2, 0, !dbg !10952
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10954

if.end:                                           ; preds = %for.body
  %call3 = call %struct.graph_edge* @add_edge(%struct.graph* %rdg, i32 %idef, i32 %call2) #7, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.graph_edge* %call3, metadata !10939, metadata !DIExpression()), !dbg !10951
  %call4 = call i8* @xmalloc(i64 16) #7, !dbg !10956
  %data = getelementptr inbounds %struct.graph_edge, %struct.graph_edge* %call3, i64 0, i32 4, !dbg !10957
  store i8* %call4, i8** %data, align 8, !dbg !10958
  %type = bitcast i8* %call4 to i32*, !dbg !10959
  store i32 102, i32* %type, align 8, !dbg !10960
  %2 = bitcast i8** %data to %struct.rdg_edge**, !dbg !10961
  %3 = load %struct.rdg_edge*, %struct.rdg_edge** %2, align 8, !dbg !10961
  %relation = getelementptr inbounds %struct.rdg_edge, %struct.rdg_edge* %3, i64 0, i32 2, !dbg !10961
  store %struct.data_dependence_relation* null, %struct.data_dependence_relation** %relation, align 8, !dbg !10962
  br label %cleanup, !dbg !10963

cleanup:                                          ; preds = %for.body, %if.end
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %iterator, metadata !10938, metadata !DIExpression(DW_OP_deref)), !dbg !10944
  %call8 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %iterator) #8, !dbg !10948
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call8, metadata !10937, metadata !DIExpression()), !dbg !10944
  br label %for.cond, !dbg !10948, !llvm.loop !10964

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #6, !dbg !10966
  ret void, !dbg !10966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @ddr_dependence_level(%struct.data_dependence_relation* %ddr) unnamed_addr #0 !dbg !10967 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_dependence_relation* %ddr, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 0, metadata !10973, metadata !DIExpression()), !dbg !10974
  %dist_vects = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 6, !dbg !10975
  %0 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !10975
  %tobool = icmp eq %struct.VEC_lambda_vector_heap* %0, null, !dbg !10975
  br i1 %tobool, label %if.end, label %if.then, !dbg !10977

if.then:                                          ; preds = %entry
  br i1 false, label %if.then.cond.end_crit_edge, label %cond.true, !dbg !10978

if.then.cond.end_crit_edge:                       ; preds = %if.then
  br label %cond.end, !dbg !10978

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %0, i64 0, i32 0, !dbg !10978
  br label %cond.end, !dbg !10978

cond.end:                                         ; preds = %if.then.cond.end_crit_edge, %cond.true
  %cond = phi %struct.VEC_lambda_vector_base* [ %base, %cond.true ], [ undef, %if.then.cond.end_crit_edge ], !dbg !10978
  %call = tail call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond, i32 0) #8, !dbg !10978
  %loop_nest = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !10979
  %1 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !10979
  %tobool4 = icmp eq %struct.VEC_loop_p_heap* %1, null, !dbg !10979
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !10979

cond.true5:                                       ; preds = %cond.end
  %base7 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %1, i64 0, i32 0, !dbg !10979
  br label %cond.end9, !dbg !10979

cond.end9:                                        ; preds = %cond.end, %cond.true5
  %cond10 = phi %struct.VEC_loop_p_base* [ %base7, %cond.true5 ], [ null, %cond.end ], !dbg !10979
  %call11 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond10) #8, !dbg !10979
  %call12 = tail call fastcc i32 @dependence_level(i32* %call, i32 %call11) #8, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %call12, metadata !10973, metadata !DIExpression()), !dbg !10974
  br label %if.end, !dbg !10981

if.end:                                           ; preds = %entry, %cond.end9
  %level.0 = phi i32 [ %call12, %cond.end9 ], [ 0, %entry ], !dbg !10974
  call void @llvm.dbg.value(metadata i32 %level.0, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 1, metadata !10972, metadata !DIExpression()), !dbg !10974
  %loop_nest31 = getelementptr inbounds %struct.data_dependence_relation, %struct.data_dependence_relation* %ddr, i64 0, i32 4, !dbg !10982
  br label %for.cond, !dbg !10985

for.cond:                                         ; preds = %for.inc, %if.end
  %vector.0 = phi i32 [ 1, %if.end ], [ %inc, %for.inc ], !dbg !10986
  %level.1 = phi i32 [ %level.0, %if.end ], [ %cond64, %for.inc ], !dbg !10974
  call void @llvm.dbg.value(metadata i32 %level.1, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %vector.0, metadata !10972, metadata !DIExpression()), !dbg !10974
  %2 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !10987
  %tobool14 = icmp eq %struct.VEC_lambda_vector_heap* %2, null, !dbg !10987
  br i1 %tobool14, label %cond.end19, label %cond.true15, !dbg !10987

cond.true15:                                      ; preds = %for.cond
  %base17 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %2, i64 0, i32 0, !dbg !10987
  br label %cond.end19, !dbg !10987

cond.end19:                                       ; preds = %for.cond, %cond.true15
  %cond20 = phi %struct.VEC_lambda_vector_base* [ %base17, %cond.true15 ], [ null, %for.cond ], !dbg !10987
  %call21 = tail call fastcc i32 @VEC_lambda_vector_base_length(%struct.VEC_lambda_vector_base* %cond20) #8, !dbg !10987
  %cmp = icmp ult i32 %vector.0, %call21, !dbg !10988
  br i1 %cmp, label %for.body, label %for.end, !dbg !10989

for.body:                                         ; preds = %cond.end19
  %3 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !10990
  %tobool23 = icmp eq %struct.VEC_lambda_vector_heap* %3, null, !dbg !10990
  br i1 %tobool23, label %cond.end28, label %cond.true24, !dbg !10990

cond.true24:                                      ; preds = %for.body
  %base26 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %3, i64 0, i32 0, !dbg !10990
  br label %cond.end28, !dbg !10990

cond.end28:                                       ; preds = %for.body, %cond.true24
  %cond29 = phi %struct.VEC_lambda_vector_base* [ %base26, %cond.true24 ], [ null, %for.body ], !dbg !10990
  %call30 = tail call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond29, i32 %vector.0) #8, !dbg !10990
  %4 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest31, align 8, !dbg !10990
  %tobool32 = icmp eq %struct.VEC_loop_p_heap* %4, null, !dbg !10990
  br i1 %tobool32, label %cond.end37, label %cond.true33, !dbg !10990

cond.true33:                                      ; preds = %cond.end28
  %base35 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %4, i64 0, i32 0, !dbg !10990
  br label %cond.end37, !dbg !10990

cond.end37:                                       ; preds = %cond.end28, %cond.true33
  %cond38 = phi %struct.VEC_loop_p_base* [ %base35, %cond.true33 ], [ null, %cond.end28 ], !dbg !10990
  %call39 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond38) #8, !dbg !10990
  %call40 = tail call fastcc i32 @dependence_level(i32* %call30, i32 %call39) #8, !dbg !10990
  %cmp41 = icmp ult i32 %level.1, %call40, !dbg !10990
  br i1 %cmp41, label %for.inc, label %cond.false43, !dbg !10990

cond.false43:                                     ; preds = %cond.end37
  %5 = load %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap** %dist_vects, align 8, !dbg !10990
  %tobool45 = icmp eq %struct.VEC_lambda_vector_heap* %5, null, !dbg !10990
  br i1 %tobool45, label %cond.end50, label %cond.true46, !dbg !10990

cond.true46:                                      ; preds = %cond.false43
  %base48 = getelementptr inbounds %struct.VEC_lambda_vector_heap, %struct.VEC_lambda_vector_heap* %5, i64 0, i32 0, !dbg !10990
  br label %cond.end50, !dbg !10990

cond.end50:                                       ; preds = %cond.false43, %cond.true46
  %cond51 = phi %struct.VEC_lambda_vector_base* [ %base48, %cond.true46 ], [ null, %cond.false43 ], !dbg !10990
  %call52 = tail call fastcc i32* @VEC_lambda_vector_base_index(%struct.VEC_lambda_vector_base* %cond51, i32 %vector.0) #8, !dbg !10990
  %6 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest31, align 8, !dbg !10990
  %tobool54 = icmp eq %struct.VEC_loop_p_heap* %6, null, !dbg !10990
  br i1 %tobool54, label %cond.end59, label %cond.true55, !dbg !10990

cond.true55:                                      ; preds = %cond.end50
  %base57 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %6, i64 0, i32 0, !dbg !10990
  br label %cond.end59, !dbg !10990

cond.end59:                                       ; preds = %cond.end50, %cond.true55
  %cond60 = phi %struct.VEC_loop_p_base* [ %base57, %cond.true55 ], [ null, %cond.end50 ], !dbg !10990
  %call61 = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond60) #8, !dbg !10990
  %call62 = tail call fastcc i32 @dependence_level(i32* %call52, i32 %call61) #8, !dbg !10990
  br label %for.inc, !dbg !10990

for.inc:                                          ; preds = %cond.end59, %cond.end37
  %cond64 = phi i32 [ %call62, %cond.end59 ], [ %level.1, %cond.end37 ], !dbg !10990
  call void @llvm.dbg.value(metadata i32 %cond64, metadata !10973, metadata !DIExpression()), !dbg !10974
  %inc = add i32 %vector.0, 1, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10972, metadata !DIExpression()), !dbg !10974
  br label %for.cond, !dbg !10992, !llvm.loop !10993

for.end:                                          ; preds = %cond.end19
  %level.1.lcssa = phi i32 [ %level.1, %cond.end19 ], !dbg !10974
  call void @llvm.dbg.value(metadata i32 %level.1.lcssa, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %level.1.lcssa, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %level.1.lcssa, metadata !10973, metadata !DIExpression()), !dbg !10974
  ret i32 %level.1.lcssa, !dbg !10995
}

declare dso_local %struct.graph_edge* @add_edge(%struct.graph*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @dependence_level(i32* %dist_vect, i32 %length) unnamed_addr #0 !dbg !10996 {
entry:
  call void @llvm.dbg.value(metadata i32* %dist_vect, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %length, metadata !11001, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 0, metadata !11002, metadata !DIExpression()), !dbg !11003
  %0 = sext i32 %length to i64, !dbg !11004
  br label %for.cond, !dbg !11004

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !11006
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !11002, metadata !DIExpression()), !dbg !11003
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !11007
  br i1 %cmp, label %for.body, label %cleanup, !dbg !11009

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %dist_vect, i64 %indvars.iv, !dbg !11010
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11010
  %cmp1 = icmp eq i32 %1, 0, !dbg !11012
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !11013
  %2 = trunc i64 %indvars.iv.next to i32, !dbg !11014
  br i1 %cmp1, label %for.cond, label %cleanup, !dbg !11014, !llvm.loop !11015

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i32 [ 0, %for.cond ], [ %2, %for.body ], !dbg !11003
  ret i32 %retval.0, !dbg !11017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !11018 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !11025, metadata !DIExpression()), !dbg !11026
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !11027
  %0 = load i32, i32* %flags, align 8, !dbg !11027
  %and = and i32 %0, 512, !dbg !11028
  %tobool = icmp eq i32 %and, 0, !dbg !11028
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !11029

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !11030
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !11030
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !11031
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !11032

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !11033
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !11033
  br label %cond.end, !dbg !11032

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !11032
  ret %struct.gimple_seq_d* %cond, !dbg !11034
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !11035 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !11042, metadata !DIExpression()), !dbg !11043
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !11044
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11044

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !11045
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !11045
  br label %cond.end, !dbg !11044

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !11044
  ret %struct.gimple_seq_node_d* %cond, !dbg !11046
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_heap_reserve(%struct.VEC_gimple_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11047 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_heap** %vec_, metadata !11051, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.value(metadata i32 1, metadata !11052, metadata !DIExpression()), !dbg !11054
  %0 = load %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap** %vec_, align 8, !dbg !11055
  %tobool = icmp eq %struct.VEC_gimple_heap* %0, null, !dbg !11055
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !11055

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_gimple_heap, %struct.VEC_gimple_heap* %0, i64 0, i32 0, !dbg !11055
  br label %cond.end, !dbg !11055

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_gimple_base* [ %base, %cond.true ], [ null, %entry ], !dbg !11055
  %call = tail call fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %cond, i32 1) #8, !dbg !11055
  %tobool1 = icmp eq i32 %call, 0, !dbg !11055
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !11053, metadata !DIExpression()), !dbg !11054
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11055

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_gimple_heap** %vec_ to i8**, !dbg !11056
  %2 = load i8*, i8** %1, align 8, !dbg !11056
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #7, !dbg !11056
  store i8* %call3, i8** %1, align 8, !dbg !11056
  br label %if.end, !dbg !11056

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !11055
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d** @VEC_gimple_base_quick_push(%struct.VEC_gimple_base* %vec_, %union.gimple_statement_d* %obj_) unnamed_addr #0 !dbg !11058 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !11062, metadata !DIExpression()), !dbg !11065
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %obj_, metadata !11063, metadata !DIExpression()), !dbg !11065
  %num1 = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !11066
  %0 = load i32, i32* %num1, align 8, !dbg !11066
  %inc = add i32 %0, 1, !dbg !11066
  store i32 %inc, i32* %num1, align 8, !dbg !11066
  %idxprom = zext i32 %0 to i64, !dbg !11066
  %arrayidx = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !11066
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %arrayidx, metadata !11064, metadata !DIExpression()), !dbg !11065
  store %union.gimple_statement_d* %obj_, %union.gimple_statement_d** %arrayidx, align 8, !dbg !11066
  ret %union.gimple_statement_d** %arrayidx, !dbg !11066
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_gimple_base_space(%struct.VEC_gimple_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !11067 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_gimple_base* %vec_, metadata !11071, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 1, metadata !11072, metadata !DIExpression()), !dbg !11073
  %tobool = icmp eq %struct.VEC_gimple_base* %vec_, null, !dbg !11074
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !11074

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 1, !dbg !11074
  %0 = load i32, i32* %alloc, align 4, !dbg !11074
  %num = getelementptr inbounds %struct.VEC_gimple_base, %struct.VEC_gimple_base* %vec_, i64 0, i32 0, !dbg !11074
  %1 = load i32, i32* %num, align 8, !dbg !11074
  %cmp1 = icmp ne i32 %0, %1, !dbg !11074
  %phitmp = zext i1 %cmp1 to i32, !dbg !11074
  br label %cond.end, !dbg !11074

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11074

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !11074
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11075 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11077, metadata !DIExpression()), !dbg !11078
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !11079
  ret %union.tree_node** %result, !dbg !11080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !11081 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !11085, metadata !DIExpression()), !dbg !11086
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !11087
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !11088
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !11089
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !11090
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !11091
  store i32 0, i32* %iter_type, align 4, !dbg !11092
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !11093
  store i32 0, i32* %phi_i, align 8, !dbg !11094
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !11095
  store i32 0, i32* %num_phi, align 4, !dbg !11096
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !11097
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !11098
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !11099
  store i8 1, i8* %done, align 8, !dbg !11100
  ret void, !dbg !11101
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !11102 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !11106, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11107, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32 2, metadata !11108, metadata !DIExpression()), !dbg !11109
  br i1 false, label %entry.cond.end12_crit_edge, label %cond.true10, !dbg !11110

entry.cond.end12_crit_edge:                       ; preds = %entry
  br label %cond.end12, !dbg !11110

cond.true10:                                      ; preds = %entry
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !11111
  br label %cond.end12, !dbg !11110

cond.end12:                                       ; preds = %entry.cond.end12_crit_edge, %cond.true10
  %0 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ undef, %entry.cond.end12_crit_edge ], !dbg !11110
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !11112
  store %struct.def_optype_d* %0, %struct.def_optype_d** %defs, align 8, !dbg !11113
  br i1 true, label %land.lhs.true16, label %cond.end12.if.end_crit_edge, !dbg !11114

cond.end12.if.end_crit_edge:                      ; preds = %cond.end12
  br label %if.end, !dbg !11114

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %0, null, !dbg !11116
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !11117

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !11118
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !11119
  br i1 %cmp, label %if.end, label %if.then, !dbg !11120

if.then:                                          ; preds = %land.lhs.true19
  %1 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !11121
  %2 = load i64*, i64** %1, align 8, !dbg !11121
  %3 = load i64, i64* %2, align 8, !dbg !11122
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !11123
  store i64 %3, i64* %4, align 8, !dbg !11123
  br label %if.end, !dbg !11124

if.end:                                           ; preds = %cond.end12.if.end_crit_edge, %land.lhs.true19, %land.lhs.true16, %if.then
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !11125
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !11126
  br i1 true, label %land.lhs.true32, label %if.end.if.end42_crit_edge, !dbg !11127

if.end.if.end42_crit_edge:                        ; preds = %if.end
  br label %if.end42, !dbg !11127

land.lhs.true32:                                  ; preds = %if.end
  br i1 true, label %if.end42, label %land.lhs.true35, !dbg !11129

land.lhs.true35:                                  ; preds = %land.lhs.true32
  br i1 undef, label %land.lhs.true35.if.end42_crit_edge, label %if.then38, !dbg !11130

land.lhs.true35.if.end42_crit_edge:               ; preds = %land.lhs.true35
  br label %if.end42, !dbg !11130

if.then38:                                        ; preds = %land.lhs.true35
  br label %if.end42, !dbg !11131

if.end42:                                         ; preds = %land.lhs.true35.if.end42_crit_edge, %if.end.if.end42_crit_edge, %land.lhs.true32, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !11132
  store i8 0, i8* %done, align 8, !dbg !11133
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !11134
  store i32 0, i32* %phi_i, align 8, !dbg !11135
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !11136
  store i32 0, i32* %num_phi, align 4, !dbg !11137
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !11138
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !11139
  ret void, !dbg !11140
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !11141 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !11145, metadata !DIExpression()), !dbg !11146
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !11147
  %tobool = icmp eq i8 %call, 0, !dbg !11147
  br i1 %tobool, label %return, label %if.end, !dbg !11149

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !11150
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !11150
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !11150
  br label %return, !dbg !11151

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !11146
  ret %struct.def_optype_d* %retval.0, !dbg !11152
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !11153 {
entry:
  unreachable, !dbg !11158
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2075, !2076, !2077}
!llvm.ident = !{!2078}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dependence_stats", scope: !2, file: !3, line: 123, type: !2054, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !496, globals: !2053, nameTableKind: None)
!3 = !DIFile(filename: "tree-data-ref.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !154, !158, !163, !182, !189, !196, !390, !401, !440, !447, !473, !479, !484, !490}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !146, line: 31, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153}
!148 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !146, line: 91, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157}
!156 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "data_dependence_direction", file: !391, line: 211, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400}
!393 = !DIEnumerator(name: "dir_positive", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "dir_negative", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "dir_equal", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "dir_positive_or_negative", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "dir_positive_or_equal", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "dir_negative_or_equal", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "dir_star", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "dir_independent", value: 7, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !402, line: 51, baseType: !7, size: 32, elements: !403)
!402 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!403 = !{!404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439}
!404 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!435 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!436 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!437 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!438 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!439 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !441, line: 119, baseType: !7, size: 32, elements: !442)
!441 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!442 = !{!443, !444, !445, !446}
!443 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!444 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!445 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!446 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !402, line: 727, baseType: !7, size: 32, elements: !448)
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!449 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!460 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!461 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!462 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!463 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!464 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!465 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!466 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!467 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!468 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!469 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!470 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!471 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!472 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !402, line: 80, baseType: !7, size: 32, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!476 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!477 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!478 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omega_eqn_color", file: !480, line: 55, baseType: !7, size: 32, elements: !481)
!480 = !DIFile(filename: "./omega.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!481 = !{!482, !483}
!482 = !DIEnumerator(name: "omega_black", value: 0, isUnsigned: true)
!483 = !DIEnumerator(name: "omega_red", value: 1, isUnsigned: true)
!484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omega_result", file: !480, line: 41, baseType: !7, size: 32, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIEnumerator(name: "omega_false", value: 0, isUnsigned: true)
!487 = !DIEnumerator(name: "omega_true", value: 1, isUnsigned: true)
!488 = !DIEnumerator(name: "omega_unknown", value: 2, isUnsigned: true)
!489 = !DIEnumerator(name: "omega_simplify", value: 3, isUnsigned: true)
!490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdg_dep_type", file: !391, line: 514, baseType: !7, size: 32, elements: !491)
!491 = !{!492, !493, !494, !495}
!492 = !DIEnumerator(name: "flow_dd", value: 102, isUnsigned: true)
!493 = !DIEnumerator(name: "anti_dd", value: 97, isUnsigned: true)
!494 = !DIEnumerator(name: "output_dd", value: 111, isUnsigned: true)
!495 = !DIEnumerator(name: "input_dd", value: 105, isUnsigned: true)
!496 = !{!497, !498, !499, !500, !503, !504, !390, !506, !508, !1858, !196, !633, !1860, !1918, !1400, !1924, !1929, !1930, !1931, !1916, !1072, !831, !1979, !864, !501, !473, !1880, !7, !1932, !1952, !1939, !1956, !1981, !1951, !1917, !1969, !1993, !2010, !1895, !2022, !830, !2035, !2037, !2042, !2048, !2049, !2052}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!499 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !507, line: 56, baseType: !508)
!507 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !510)
!510 = !{!511, !544, !550, !563, !582, !593, !598, !607, !613, !626, !638, !676, !1186, !1214, !1231, !1232, !1237, !1246, !1252, !1257, !1261, !1265, !1509, !1556, !1562, !1568, !1575, !1588, !1602, !1619, !1631, !1653, !1668, !1840}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !509, file: !164, line: 3372, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !513)
!513 = !{!514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !512, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !512, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !512, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !512, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !512, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !512, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !512, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !512, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !512, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !512, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !512, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !512, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !512, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !512, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !512, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !512, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !512, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !512, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !512, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !512, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !512, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !512, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !512, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !512, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !512, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !512, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !512, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !512, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !512, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !512, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !509, file: !164, line: 3373, baseType: !545, size: 192)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !546)
!546 = !{!547, !548, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !545, file: !164, line: 403, baseType: !512, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !545, file: !164, line: 404, baseType: !506, size: 64, offset: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !545, file: !164, line: 405, baseType: !506, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !509, file: !164, line: 3374, baseType: !551, size: 320)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !551, file: !164, line: 1385, baseType: !545, size: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !551, file: !164, line: 1386, baseType: !555, size: 128, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !556, line: 58, baseType: !557)
!556 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !556, line: 54, size: 128, elements: !558)
!558 = !{!559, !561}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !557, file: !556, line: 56, baseType: !560, size: 64)
!560 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !557, file: !556, line: 57, baseType: !562, size: 64, offset: 64)
!562 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !509, file: !164, line: 3375, baseType: !564, size: 256)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !565)
!565 = !{!566, !567}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !564, file: !164, line: 1398, baseType: !545, size: 192)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !564, file: !164, line: 1399, baseType: !568, size: 64, offset: 192)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !570, line: 52, size: 256, elements: !571)
!570 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!571 = !{!572, !573, !574, !575, !576, !577, !578}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !569, file: !570, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !569, file: !570, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !569, file: !570, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !569, file: !570, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !569, file: !570, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !569, file: !570, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !569, file: !570, line: 62, baseType: !579, size: 192, offset: 64)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 192, elements: !580)
!580 = !{!581}
!581 = !DISubrange(count: 3)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !509, file: !164, line: 3376, baseType: !583, size: 256)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !583, file: !164, line: 1409, baseType: !545, size: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !583, file: !164, line: 1410, baseType: !587, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !589, line: 27, size: 192, elements: !590)
!589 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !588, file: !589, line: 29, baseType: !555, size: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !588, file: !589, line: 30, baseType: !5, size: 32, offset: 128)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !509, file: !164, line: 3377, baseType: !594, size: 256)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !595)
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !594, file: !164, line: 1438, baseType: !545, size: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !594, file: !164, line: 1439, baseType: !506, size: 64, offset: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !509, file: !164, line: 3378, baseType: !599, size: 256)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !600)
!600 = !{!601, !602, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !599, file: !164, line: 1419, baseType: !545, size: 192)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !599, file: !164, line: 1420, baseType: !499, size: 32, offset: 192)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !599, file: !164, line: 1421, baseType: !604, size: 8, offset: 224)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 8, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 1)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !509, file: !164, line: 3379, baseType: !608, size: 320)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !609)
!609 = !{!610, !611, !612}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !608, file: !164, line: 1429, baseType: !545, size: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !608, file: !164, line: 1430, baseType: !506, size: 64, offset: 192)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !608, file: !164, line: 1431, baseType: !506, size: 64, offset: 256)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !509, file: !164, line: 3380, baseType: !614, size: 320)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !615)
!615 = !{!616, !617}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !614, file: !164, line: 1461, baseType: !545, size: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !614, file: !164, line: 1462, baseType: !618, size: 128, offset: 192)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !619, line: 31, size: 128, elements: !620)
!619 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!620 = !{!621, !624, !625}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !618, file: !619, line: 32, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !618, file: !619, line: 33, baseType: !7, size: 32, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !618, file: !619, line: 34, baseType: !7, size: 32, offset: 96)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !509, file: !164, line: 3381, baseType: !627, size: 384)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !628)
!628 = !{!629, !630, !635, !636, !637}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !627, file: !164, line: 2508, baseType: !545, size: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !627, file: !164, line: 2509, baseType: !631, size: 32, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !632, line: 58, baseType: !633)
!632 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !634, line: 44, baseType: !7)
!634 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!635 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !627, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !627, file: !164, line: 2511, baseType: !506, size: 64, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !627, file: !164, line: 2512, baseType: !506, size: 64, offset: 320)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !509, file: !164, line: 3382, baseType: !639, size: 896)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !639, file: !164, line: 2653, baseType: !627, size: 384)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !639, file: !164, line: 2654, baseType: !506, size: 64, offset: 384)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !639, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !639, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !639, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !639, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !639, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !639, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !639, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !639, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !639, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !639, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !639, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !639, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !639, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !639, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !639, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !639, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !639, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !639, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !639, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !639, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !639, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !639, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !639, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !639, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !639, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !639, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !639, file: !164, line: 2705, baseType: !506, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !639, file: !164, line: 2706, baseType: !506, size: 64, offset: 640)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !639, file: !164, line: 2707, baseType: !506, size: 64, offset: 704)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !639, file: !164, line: 2708, baseType: !506, size: 64, offset: 768)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !639, file: !164, line: 2711, baseType: !674, size: 64, offset: 832)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !509, file: !164, line: 3383, baseType: !677, size: 960)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !678)
!678 = !{!679, !680}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !677, file: !164, line: 2757, baseType: !639, size: 896)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !677, file: !164, line: 2758, baseType: !681, size: 64, offset: 896)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !507, line: 50, baseType: !682)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !684, line: 240, size: 384, elements: !685)
!684 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!685 = !{!686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !683, file: !684, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !683, file: !684, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !683, file: !684, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !683, file: !684, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !683, file: !684, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !683, file: !684, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !683, file: !684, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !683, file: !684, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !683, file: !684, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !683, file: !684, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !683, file: !684, line: 321, baseType: !697, size: 320, offset: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !684, line: 315, size: 320, elements: !698)
!698 = !{!699, !1153, !1155, !1184, !1185}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !697, file: !684, line: 316, baseType: !700, size: 64)
!700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !701, size: 64, elements: !605)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !684, line: 183, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !684, line: 166, size: 64, elements: !703)
!703 = !{!704, !705, !706, !707, !708, !716, !717, !729, !732, !792, !793, !1130, !1143, !1150}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !702, file: !684, line: 168, baseType: !499, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !702, file: !684, line: 169, baseType: !7, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !702, file: !684, line: 170, baseType: !504, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !702, file: !684, line: 171, baseType: !681, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !702, file: !684, line: 172, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !507, line: 53, baseType: !710)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !684, line: 359, size: 128, elements: !712)
!712 = !{!713, !714}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !711, file: !684, line: 360, baseType: !499, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !711, file: !684, line: 361, baseType: !715, size: 64, offset: 64)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !681, size: 64, elements: !605)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !702, file: !684, line: 173, baseType: !5, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !702, file: !684, line: 174, baseType: !718, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !684, line: 133, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !684, line: 115, size: 32, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !726, !727, !728}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !719, file: !684, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !719, file: !684, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !719, file: !684, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !719, file: !684, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !719, file: !684, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !719, file: !684, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !719, file: !684, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !719, file: !684, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !702, file: !684, line: 175, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !684, line: 175, flags: DIFlagFwdDecl)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !702, file: !684, line: 176, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !735, line: 75, size: 256, elements: !736)
!735 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!736 = !{!737, !751, !752, !753}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !734, file: !735, line: 76, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !735, line: 68, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !735, line: 63, size: 320, elements: !741)
!741 = !{!742, !744, !745, !746}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !740, file: !735, line: 64, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !740, file: !735, line: 65, baseType: !743, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !740, file: !735, line: 66, baseType: !7, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !740, file: !735, line: 67, baseType: !747, size: 128, offset: 192)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !748, size: 128, elements: !749)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !735, line: 29, baseType: !560)
!749 = !{!750}
!750 = !DISubrange(count: 2)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !734, file: !735, line: 77, baseType: !738, size: 64, offset: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !734, file: !735, line: 78, baseType: !7, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !734, file: !735, line: 79, baseType: !754, size: 64, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !735, line: 49, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !735, line: 45, size: 832, elements: !757)
!757 = !{!758, !759, !760}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !756, file: !735, line: 46, baseType: !743, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !756, file: !735, line: 47, baseType: !733, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !756, file: !735, line: 48, baseType: !761, size: 704, offset: 128)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !762, line: 164, size: 704, elements: !763)
!762 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!763 = !{!764, !765, !775, !776, !777, !778, !779, !780, !784, !788, !789, !790, !791}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !761, file: !762, line: 166, baseType: !562, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !761, file: !762, line: 167, baseType: !766, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !762, line: 157, size: 192, elements: !768)
!768 = !{!769, !770, !771}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !767, file: !762, line: 159, baseType: !501, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !767, file: !762, line: 160, baseType: !766, size: 64, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !767, file: !762, line: 161, baseType: !772, size: 32, offset: 128)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 32, elements: !773)
!773 = !{!774}
!774 = !DISubrange(count: 4)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !761, file: !762, line: 168, baseType: !501, size: 64, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !761, file: !762, line: 169, baseType: !501, size: 64, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !761, file: !762, line: 170, baseType: !501, size: 64, offset: 256)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !761, file: !762, line: 171, baseType: !562, size: 64, offset: 320)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !761, file: !762, line: 172, baseType: !499, size: 32, offset: 384)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !761, file: !762, line: 176, baseType: !781, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!766, !503, !562}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !761, file: !762, line: 177, baseType: !785, size: 64, offset: 512)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{null, !503, !766}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !761, file: !762, line: 178, baseType: !503, size: 64, offset: 576)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !761, file: !762, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !761, file: !762, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !761, file: !762, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !702, file: !684, line: 177, baseType: !506, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !702, file: !684, line: 178, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !796)
!796 = !{!797, !1042, !1043, !1044, !1100, !1104, !1105, !1106, !1124, !1125, !1126, !1127, !1128, !1129}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !795, file: !135, line: 219, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !801)
!801 = !{!802}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !800, file: !135, line: 151, baseType: !803, size: 128)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !805)
!805 = !{!806, !807, !808}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !804, file: !135, line: 150, baseType: !7, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !804, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !804, file: !135, line: 150, baseType: !809, size: 64, offset: 64)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 64, elements: !605)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !507, line: 108, baseType: !811)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !813)
!813 = !{!814, !815, !816, !1034, !1035, !1036, !1037, !1038, !1039, !1040}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !812, file: !135, line: 124, baseType: !794, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !812, file: !135, line: 125, baseType: !794, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !812, file: !135, line: 131, baseType: !817, size: 64, offset: 128)
!817 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !818)
!818 = !{!819, !1033}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !817, file: !135, line: 129, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !507, line: 66, baseType: !821)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !402, line: 143, size: 192, elements: !823)
!823 = !{!824, !1031, !1032}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !822, file: !402, line: 145, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !507, line: 69, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !402, line: 136, size: 192, elements: !828)
!828 = !{!829, !1029, !1030}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !827, file: !402, line: 137, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !507, line: 58, baseType: !831)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !402, line: 737, size: 768, elements: !833)
!833 = !{!834, !851, !884, !890, !895, !900, !907, !913, !919, !924, !938, !943, !949, !954, !964, !969, !987, !994, !1001, !1007, !1012, !1018, !1024}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !832, file: !402, line: 738, baseType: !835, size: 256)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !402, line: 271, size: 256, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !835, file: !402, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !835, file: !402, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !835, file: !402, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !835, file: !402, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !835, file: !402, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !835, file: !402, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !835, file: !402, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !835, file: !402, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !835, file: !402, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !835, file: !402, line: 312, baseType: !7, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !835, file: !402, line: 316, baseType: !631, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !835, file: !402, line: 319, baseType: !7, size: 32, offset: 96)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !835, file: !402, line: 323, baseType: !794, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !835, file: !402, line: 327, baseType: !506, size: 64, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !832, file: !402, line: 739, baseType: !852, size: 448)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !402, line: 350, size: 448, elements: !853)
!853 = !{!854, !882}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !852, file: !402, line: 353, baseType: !855, size: 384)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !402, line: 333, size: 384, elements: !856)
!856 = !{!857, !858, !865}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !855, file: !402, line: 336, baseType: !835, size: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !855, file: !402, line: 343, baseType: !859, size: 64, offset: 256)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !441, line: 37, size: 128, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !860, file: !441, line: 39, baseType: !859, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !860, file: !441, line: 40, baseType: !864, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !855, file: !402, line: 344, baseType: !866, size: 64, offset: 320)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !441, line: 45, size: 320, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !867, file: !441, line: 47, baseType: !866, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !867, file: !441, line: 48, baseType: !871, size: 256, offset: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !872)
!872 = !{!873, !875, !876, !881}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !871, file: !164, line: 1884, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !164, line: 1885, baseType: !874, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !871, file: !164, line: 1891, baseType: !877, size: 64, offset: 128)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !871, file: !164, line: 1891, size: 64, elements: !878)
!878 = !{!879, !880}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !877, file: !164, line: 1891, baseType: !830, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !877, file: !164, line: 1891, baseType: !506, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !871, file: !164, line: 1892, baseType: !864, size: 64, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !852, file: !402, line: 359, baseType: !883, size: 64, offset: 384)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 64, elements: !605)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !832, file: !402, line: 740, baseType: !885, size: 512)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !402, line: 365, size: 512, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !885, file: !402, line: 368, baseType: !855, size: 384)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !885, file: !402, line: 373, baseType: !506, size: 64, offset: 384)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !885, file: !402, line: 374, baseType: !506, size: 64, offset: 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !832, file: !402, line: 741, baseType: !891, size: 576)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !402, line: 380, size: 576, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !891, file: !402, line: 383, baseType: !885, size: 512)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !891, file: !402, line: 389, baseType: !883, size: 64, offset: 512)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !832, file: !402, line: 742, baseType: !896, size: 320)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !402, line: 395, size: 320, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !896, file: !402, line: 397, baseType: !835, size: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !896, file: !402, line: 400, baseType: !820, size: 64, offset: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !832, file: !402, line: 743, baseType: !901, size: 448)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !402, line: 406, size: 448, elements: !902)
!902 = !{!903, !904, !905, !906}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !901, file: !402, line: 408, baseType: !835, size: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !901, file: !402, line: 412, baseType: !506, size: 64, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !901, file: !402, line: 420, baseType: !506, size: 64, offset: 320)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !901, file: !402, line: 423, baseType: !820, size: 64, offset: 384)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !832, file: !402, line: 744, baseType: !908, size: 384)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !402, line: 429, size: 384, elements: !909)
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !908, file: !402, line: 431, baseType: !835, size: 256)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !908, file: !402, line: 434, baseType: !506, size: 64, offset: 256)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !908, file: !402, line: 437, baseType: !820, size: 64, offset: 320)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !832, file: !402, line: 745, baseType: !914, size: 384)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !402, line: 443, size: 384, elements: !915)
!915 = !{!916, !917, !918}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !914, file: !402, line: 445, baseType: !835, size: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !914, file: !402, line: 449, baseType: !506, size: 64, offset: 256)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !914, file: !402, line: 453, baseType: !820, size: 64, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !832, file: !402, line: 746, baseType: !920, size: 320)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !402, line: 459, size: 320, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !920, file: !402, line: 461, baseType: !835, size: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !920, file: !402, line: 464, baseType: !506, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !832, file: !402, line: 747, baseType: !925, size: 768)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !402, line: 469, size: 768, elements: !926)
!926 = !{!927, !928, !929, !930, !931}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !925, file: !402, line: 471, baseType: !835, size: 256)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !925, file: !402, line: 474, baseType: !7, size: 32, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !925, file: !402, line: 475, baseType: !7, size: 32, offset: 288)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !925, file: !402, line: 478, baseType: !506, size: 64, offset: 320)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !925, file: !402, line: 481, baseType: !932, size: 384, offset: 384)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 384, elements: !605)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !164, line: 1917, size: 384, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !933, file: !164, line: 1920, baseType: !871, size: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !933, file: !164, line: 1921, baseType: !506, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !933, file: !164, line: 1922, baseType: !631, size: 32, offset: 320)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !832, file: !402, line: 748, baseType: !939, size: 320)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !402, line: 487, size: 320, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !939, file: !402, line: 490, baseType: !835, size: 256)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !939, file: !402, line: 494, baseType: !499, size: 32, offset: 256)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !832, file: !402, line: 749, baseType: !944, size: 384)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !402, line: 500, size: 384, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !944, file: !402, line: 502, baseType: !835, size: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !944, file: !402, line: 506, baseType: !820, size: 64, offset: 256)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !944, file: !402, line: 510, baseType: !820, size: 64, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !832, file: !402, line: 750, baseType: !950, size: 320)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !402, line: 529, size: 320, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !950, file: !402, line: 531, baseType: !835, size: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !950, file: !402, line: 540, baseType: !820, size: 64, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !832, file: !402, line: 751, baseType: !955, size: 704)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !402, line: 546, size: 704, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !955, file: !402, line: 549, baseType: !885, size: 512)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !955, file: !402, line: 553, baseType: !504, size: 64, offset: 512)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !955, file: !402, line: 557, baseType: !498, size: 8, offset: 576)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !955, file: !402, line: 558, baseType: !498, size: 8, offset: 584)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !955, file: !402, line: 559, baseType: !498, size: 8, offset: 592)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !955, file: !402, line: 560, baseType: !498, size: 8, offset: 600)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !955, file: !402, line: 566, baseType: !883, size: 64, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !832, file: !402, line: 752, baseType: !965, size: 384)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !402, line: 571, size: 384, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !965, file: !402, line: 573, baseType: !896, size: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !965, file: !402, line: 577, baseType: !506, size: 64, offset: 320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !832, file: !402, line: 753, baseType: !970, size: 576)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !402, line: 600, size: 576, elements: !971)
!971 = !{!972, !973, !974, !977, !986}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !970, file: !402, line: 602, baseType: !896, size: 320)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !970, file: !402, line: 605, baseType: !506, size: 64, offset: 320)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !970, file: !402, line: 609, baseType: !975, size: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !976, line: 46, baseType: !560)
!976 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!977 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !970, file: !402, line: 612, baseType: !978, size: 64, offset: 448)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !402, line: 581, size: 320, elements: !980)
!980 = !{!981, !982, !983, !984, !985}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !979, file: !402, line: 583, baseType: !196, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !979, file: !402, line: 586, baseType: !506, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !979, file: !402, line: 589, baseType: !506, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !979, file: !402, line: 592, baseType: !506, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !979, file: !402, line: 595, baseType: !506, size: 64, offset: 256)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !970, file: !402, line: 616, baseType: !820, size: 64, offset: 512)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !832, file: !402, line: 754, baseType: !988, size: 512)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !402, line: 622, size: 512, elements: !989)
!989 = !{!990, !991, !992, !993}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !988, file: !402, line: 624, baseType: !896, size: 320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !988, file: !402, line: 628, baseType: !506, size: 64, offset: 320)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !988, file: !402, line: 632, baseType: !506, size: 64, offset: 384)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !988, file: !402, line: 636, baseType: !506, size: 64, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !832, file: !402, line: 755, baseType: !995, size: 704)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !402, line: 642, size: 704, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !995, file: !402, line: 644, baseType: !988, size: 512)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !995, file: !402, line: 648, baseType: !506, size: 64, offset: 512)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !995, file: !402, line: 652, baseType: !506, size: 64, offset: 576)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !995, file: !402, line: 653, baseType: !506, size: 64, offset: 640)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !832, file: !402, line: 756, baseType: !1002, size: 448)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !402, line: 663, size: 448, elements: !1003)
!1003 = !{!1004, !1005, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1002, file: !402, line: 665, baseType: !896, size: 320)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1002, file: !402, line: 668, baseType: !506, size: 64, offset: 320)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1002, file: !402, line: 673, baseType: !506, size: 64, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !832, file: !402, line: 757, baseType: !1008, size: 384)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !402, line: 694, size: 384, elements: !1009)
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1008, file: !402, line: 696, baseType: !896, size: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1008, file: !402, line: 699, baseType: !506, size: 64, offset: 320)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !832, file: !402, line: 758, baseType: !1013, size: 384)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !402, line: 681, size: 384, elements: !1014)
!1014 = !{!1015, !1016, !1017}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1013, file: !402, line: 683, baseType: !835, size: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1013, file: !402, line: 686, baseType: !506, size: 64, offset: 256)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1013, file: !402, line: 689, baseType: !506, size: 64, offset: 320)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !832, file: !402, line: 759, baseType: !1019, size: 384)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !402, line: 707, size: 384, elements: !1020)
!1020 = !{!1021, !1022, !1023}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1019, file: !402, line: 709, baseType: !835, size: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1019, file: !402, line: 712, baseType: !506, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1019, file: !402, line: 712, baseType: !506, size: 64, offset: 320)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !832, file: !402, line: 760, baseType: !1025, size: 320)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !402, line: 718, size: 320, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1025, file: !402, line: 720, baseType: !835, size: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1025, file: !402, line: 723, baseType: !506, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !827, file: !402, line: 138, baseType: !826, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !827, file: !402, line: 139, baseType: !826, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !822, file: !402, line: 146, baseType: !825, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !822, file: !402, line: 152, baseType: !820, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !817, file: !135, line: 130, baseType: !681, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !812, file: !135, line: 134, baseType: !503, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !812, file: !135, line: 137, baseType: !506, size: 64, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !812, file: !135, line: 138, baseType: !631, size: 32, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !812, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !812, file: !135, line: 144, baseType: !499, size: 32, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !812, file: !135, line: 145, baseType: !499, size: 32, offset: 416)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !812, file: !135, line: 146, baseType: !1041, size: 64, offset: 448)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !562)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !795, file: !135, line: 220, baseType: !798, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !795, file: !135, line: 223, baseType: !503, size: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !795, file: !135, line: 226, baseType: !1045, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 100, size: 1216, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052, !1057, !1058, !1059, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1090, !1098, !1099}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1046, file: !146, line: 102, baseType: !499, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1046, file: !146, line: 105, baseType: !7, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1046, file: !146, line: 108, baseType: !794, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1046, file: !146, line: 111, baseType: !794, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1046, file: !146, line: 114, baseType: !1053, size: 64, offset: 192)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !146, line: 41, size: 64, elements: !1054)
!1054 = !{!1055, !1056}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1053, file: !146, line: 42, baseType: !145, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1053, file: !146, line: 43, baseType: !7, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1046, file: !146, line: 117, baseType: !7, size: 32, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1046, file: !146, line: 120, baseType: !7, size: 32, offset: 288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1046, file: !146, line: 123, baseType: !1060, size: 64, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !146, line: 87, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !146, line: 87, size: 128, elements: !1063)
!1063 = !{!1064}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1062, file: !146, line: 87, baseType: !1065, size: 128)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !146, line: 85, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !146, line: 85, size: 128, elements: !1067)
!1067 = !{!1068, !1069, !1070}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1066, file: !146, line: 85, baseType: !7, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1066, file: !146, line: 85, baseType: !7, size: 32, offset: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1066, file: !146, line: 85, baseType: !1071, size: 64, offset: 64)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 64, elements: !605)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !146, line: 84, baseType: !1045)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1046, file: !146, line: 126, baseType: !1045, size: 64, offset: 384)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1046, file: !146, line: 129, baseType: !1045, size: 64, offset: 448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1046, file: !146, line: 132, baseType: !503, size: 64, offset: 512)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1046, file: !146, line: 139, baseType: !506, size: 64, offset: 576)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1046, file: !146, line: 143, baseType: !555, size: 128, offset: 640)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1046, file: !146, line: 146, baseType: !555, size: 128, offset: 768)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1046, file: !146, line: 148, baseType: !498, size: 8, offset: 896)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1046, file: !146, line: 149, baseType: !498, size: 8, offset: 904)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1046, file: !146, line: 153, baseType: !154, size: 32, offset: 928)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1046, file: !146, line: 156, baseType: !1083, size: 64, offset: 960)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !146, line: 48, size: 320, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1084, file: !146, line: 50, baseType: !830, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1084, file: !146, line: 59, baseType: !555, size: 128, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1084, file: !146, line: 64, baseType: !498, size: 8, offset: 192)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1084, file: !146, line: 67, baseType: !1083, size: 64, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1046, file: !146, line: 159, baseType: !1091, size: 64, offset: 1024)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !146, line: 72, size: 256, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1092, file: !146, line: 74, baseType: !811, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1092, file: !146, line: 77, baseType: !1091, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1092, file: !146, line: 78, baseType: !1091, size: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1092, file: !146, line: 81, baseType: !1091, size: 64, offset: 192)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1046, file: !146, line: 162, baseType: !498, size: 8, offset: 1088)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1046, file: !146, line: 166, baseType: !506, size: 64, offset: 1152)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !795, file: !135, line: 229, baseType: !1101, size: 128, offset: 256)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 128, elements: !749)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !795, file: !135, line: 232, baseType: !794, size: 64, offset: 384)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !795, file: !135, line: 233, baseType: !794, size: 64, offset: 448)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !795, file: !135, line: 238, baseType: !1107, size: 64, offset: 512)
!1107 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1108)
!1108 = !{!1109, !1115}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1107, file: !135, line: 236, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1112)
!1112 = !{!1113, !1114}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1111, file: !135, line: 275, baseType: !820, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1111, file: !135, line: 278, baseType: !820, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1107, file: !135, line: 237, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1117, file: !135, line: 261, baseType: !681, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1117, file: !135, line: 262, baseType: !681, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1117, file: !135, line: 266, baseType: !681, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1117, file: !135, line: 267, baseType: !681, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1117, file: !135, line: 270, baseType: !499, size: 32, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !795, file: !135, line: 241, baseType: !1041, size: 64, offset: 576)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !795, file: !135, line: 244, baseType: !499, size: 32, offset: 640)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !795, file: !135, line: 247, baseType: !499, size: 32, offset: 672)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !795, file: !135, line: 250, baseType: !499, size: 32, offset: 704)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !795, file: !135, line: 253, baseType: !499, size: 32, offset: 736)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !795, file: !135, line: 256, baseType: !499, size: 32, offset: 768)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !702, file: !684, line: 179, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !684, line: 150, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !684, line: 142, size: 320, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1141, !1142}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1133, file: !684, line: 144, baseType: !506, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1133, file: !684, line: 145, baseType: !681, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1133, file: !684, line: 146, baseType: !681, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1133, file: !684, line: 147, baseType: !1139, size: 32, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1140, line: 31, baseType: !499)
!1140 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1133, file: !684, line: 148, baseType: !7, size: 32, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1133, file: !684, line: 149, baseType: !498, size: 8, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !702, file: !684, line: 180, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !684, line: 162, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !684, line: 159, size: 128, elements: !1147)
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1146, file: !684, line: 160, baseType: !506, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1146, file: !684, line: 161, baseType: !562, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !702, file: !684, line: 181, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !684, line: 181, flags: DIFlagFwdDecl)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !697, file: !684, line: 317, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, size: 64, elements: !605)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !697, file: !684, line: 318, baseType: !1156, size: 320)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !684, line: 188, size: 320, elements: !1157)
!1157 = !{!1158, !1160, !1183}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1156, file: !684, line: 190, baseType: !1159, size: 192)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !701, size: 192, elements: !580)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1156, file: !684, line: 193, baseType: !1161, size: 64, offset: 192)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !684, line: 206, size: 320, elements: !1163)
!1163 = !{!1164, !1168, !1169, !1170, !1182}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1162, file: !684, line: 208, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !507, line: 62, baseType: !1167)
!1167 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !507, line: 61, flags: DIFlagFwdDecl)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1162, file: !684, line: 211, baseType: !7, size: 32, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1162, file: !684, line: 214, baseType: !562, size: 64, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1162, file: !684, line: 224, baseType: !1171, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !684, line: 202, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !684, line: 202, size: 128, elements: !1174)
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1173, file: !684, line: 202, baseType: !1176, size: 128)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !684, line: 200, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !684, line: 200, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1177, file: !684, line: 200, baseType: !7, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1177, file: !684, line: 200, baseType: !7, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1177, file: !684, line: 200, baseType: !715, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1162, file: !684, line: 234, baseType: !1171, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1156, file: !684, line: 197, baseType: !562, size: 64, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !697, file: !684, line: 319, baseType: !569, size: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !697, file: !684, line: 320, baseType: !588, size: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !509, file: !164, line: 3384, baseType: !1187, size: 1472)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !1188)
!1188 = !{!1189, !1210, !1211, !1212, !1213}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1187, file: !164, line: 3115, baseType: !1190, size: 1216)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1190, file: !164, line: 2985, baseType: !677, size: 960)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1190, file: !164, line: 2986, baseType: !506, size: 64, offset: 960)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1190, file: !164, line: 2987, baseType: !506, size: 64, offset: 1024)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1190, file: !164, line: 2988, baseType: !506, size: 64, offset: 1088)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1190, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1190, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1190, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1190, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1190, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1190, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1190, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1190, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1190, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1190, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1190, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1190, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1190, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1190, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1187, file: !164, line: 3117, baseType: !506, size: 64, offset: 1216)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1187, file: !164, line: 3119, baseType: !506, size: 64, offset: 1280)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1187, file: !164, line: 3121, baseType: !506, size: 64, offset: 1344)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1187, file: !164, line: 3123, baseType: !506, size: 64, offset: 1408)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !509, file: !164, line: 3385, baseType: !1215, size: 1088)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !1216)
!1216 = !{!1217, !1218, !1219}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1215, file: !164, line: 2875, baseType: !677, size: 960)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1215, file: !164, line: 2876, baseType: !681, size: 64, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1215, file: !164, line: 2877, baseType: !1220, size: 64, offset: 1024)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1222, line: 172, size: 128, elements: !1223)
!1222 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1221, file: !1222, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1221, file: !1222, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1221, file: !1222, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1221, file: !1222, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1221, file: !1222, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1221, file: !1222, line: 195, baseType: !7, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1221, file: !1222, line: 199, baseType: !506, size: 64, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !509, file: !164, line: 3386, baseType: !1190, size: 1216)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !509, file: !164, line: 3387, baseType: !1233, size: 1280)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !1234)
!1234 = !{!1235, !1236}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1233, file: !164, line: 3094, baseType: !1190, size: 1216)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1233, file: !164, line: 3095, baseType: !1220, size: 64, offset: 1216)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !509, file: !164, line: 3388, baseType: !1238, size: 1216)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1238, file: !164, line: 2825, baseType: !639, size: 896)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1238, file: !164, line: 2827, baseType: !506, size: 64, offset: 896)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1238, file: !164, line: 2828, baseType: !506, size: 64, offset: 960)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1238, file: !164, line: 2829, baseType: !506, size: 64, offset: 1024)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1238, file: !164, line: 2830, baseType: !506, size: 64, offset: 1088)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1238, file: !164, line: 2831, baseType: !506, size: 64, offset: 1152)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !509, file: !164, line: 3389, baseType: !1247, size: 1024)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !1248)
!1248 = !{!1249, !1250, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1247, file: !164, line: 2851, baseType: !677, size: 960)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1247, file: !164, line: 2852, baseType: !499, size: 32, offset: 960)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1247, file: !164, line: 2853, baseType: !499, size: 32, offset: 992)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !509, file: !164, line: 3390, baseType: !1253, size: 1024)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !1254)
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1253, file: !164, line: 2858, baseType: !677, size: 960)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1253, file: !164, line: 2859, baseType: !1220, size: 64, offset: 960)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !509, file: !164, line: 3391, baseType: !1258, size: 960)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1258, file: !164, line: 2863, baseType: !677, size: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !509, file: !164, line: 3392, baseType: !1262, size: 1472)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1262, file: !164, line: 3305, baseType: !1187, size: 1472)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !509, file: !164, line: 3393, baseType: !1266, size: 1792)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !1267)
!1267 = !{!1268, !1269, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1266, file: !164, line: 3249, baseType: !1187, size: 1472)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1266, file: !164, line: 3251, baseType: !1270, size: 64, offset: 1472)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1272, line: 463, size: 1152, elements: !1273)
!1272 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1273 = !{!1274, !1277, !1308, !1309, !1424, !1432, !1433, !1434, !1435, !1436, !1437, !1461, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1271, file: !1272, line: 464, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1272, line: 464, flags: DIFlagFwdDecl)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1271, file: !1272, line: 467, baseType: !1278, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1280)
!1280 = !{!1281, !1283, !1284, !1297, !1298, !1299, !1300, !1301, !1302, !1304, !1306, !1307}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1279, file: !135, line: 377, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !507, line: 111, baseType: !794)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1279, file: !135, line: 378, baseType: !1282, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1279, file: !135, line: 381, baseType: !1285, size: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1287, file: !135, line: 282, baseType: !1290, size: 128)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1291, file: !135, line: 281, baseType: !7, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1291, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1291, file: !135, line: 281, baseType: !1296, size: 64, offset: 64)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1282, size: 64, elements: !605)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1279, file: !135, line: 384, baseType: !499, size: 32, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1279, file: !135, line: 387, baseType: !499, size: 32, offset: 224)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1279, file: !135, line: 390, baseType: !499, size: 32, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1279, file: !135, line: 394, baseType: !1285, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1279, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1279, file: !135, line: 399, baseType: !1303, size: 64, offset: 416)
!1303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !749)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1279, file: !135, line: 402, baseType: !1305, size: 64, offset: 480)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !749)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1279, file: !135, line: 406, baseType: !499, size: 32, offset: 544)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1279, file: !135, line: 409, baseType: !499, size: 32, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1271, file: !1272, line: 470, baseType: !821, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1271, file: !1272, line: 473, baseType: !1310, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1222, line: 39, size: 1152, elements: !1312)
!1312 = !{!1313, !1363, !1376, !1388, !1389, !1401, !1402, !1406, !1407, !1408, !1409, !1410}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1311, file: !1222, line: 41, baseType: !1314, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1315, line: 144, baseType: !1316)
!1315 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1315, line: 100, size: 896, elements: !1318)
!1318 = !{!1319, !1327, !1332, !1337, !1339, !1340, !1341, !1342, !1343, !1344, !1349, !1351, !1352, !1357, !1362}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1317, file: !1315, line: 102, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1315, line: 52, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!1324, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1315, line: 47, baseType: !7)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1317, file: !1315, line: 105, baseType: !1328, size: 64, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1315, line: 59, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!499, !1325, !1325}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1317, file: !1315, line: 108, baseType: !1333, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1315, line: 63, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{null, !503}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1317, file: !1315, line: 111, baseType: !1338, size: 64, offset: 192)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1317, file: !1315, line: 114, baseType: !975, size: 64, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1317, file: !1315, line: 117, baseType: !975, size: 64, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1317, file: !1315, line: 120, baseType: !975, size: 64, offset: 384)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1317, file: !1315, line: 124, baseType: !7, size: 32, offset: 448)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1317, file: !1315, line: 128, baseType: !7, size: 32, offset: 480)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1317, file: !1315, line: 131, baseType: !1345, size: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1315, line: 75, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!503, !975, !975}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1317, file: !1315, line: 132, baseType: !1350, size: 64, offset: 576)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1315, line: 78, baseType: !1334)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1317, file: !1315, line: 135, baseType: !503, size: 64, offset: 640)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1317, file: !1315, line: 136, baseType: !1353, size: 64, offset: 704)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1315, line: 82, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!503, !503, !975, !975}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1317, file: !1315, line: 137, baseType: !1358, size: 64, offset: 768)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1315, line: 83, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{null, !503, !503}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1317, file: !1315, line: 141, baseType: !7, size: 32, offset: 832)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1311, file: !1222, line: 48, baseType: !1364, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !402, line: 35, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !402, line: 35, size: 128, elements: !1367)
!1367 = !{!1368}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1366, file: !402, line: 35, baseType: !1369, size: 128)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !402, line: 33, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !402, line: 33, size: 128, elements: !1371)
!1371 = !{!1372, !1373, !1374}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1370, file: !402, line: 33, baseType: !7, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1370, file: !402, line: 33, baseType: !7, size: 32, offset: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1370, file: !402, line: 33, baseType: !1375, size: 64, offset: 64)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 64, elements: !605)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1311, file: !1222, line: 51, baseType: !1377, size: 64, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1379, file: !164, line: 183, baseType: !1382, size: 128)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1384)
!1384 = !{!1385, !1386, !1387}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1383, file: !164, line: 182, baseType: !7, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1383, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1383, file: !164, line: 182, baseType: !883, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1311, file: !1222, line: 54, baseType: !506, size: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1311, file: !1222, line: 57, baseType: !1390, size: 128, offset: 256)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1391, line: 31, size: 128, elements: !1392)
!1391 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1392 = !{!1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1390, file: !1391, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1390, file: !1391, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1390, file: !1391, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1390, file: !1391, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1390, file: !1391, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1390, file: !1391, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1390, file: !1391, line: 56, baseType: !1400, size: 64, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !507, line: 47, baseType: !733)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1311, file: !1222, line: 60, baseType: !1390, size: 128, offset: 384)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1311, file: !1222, line: 64, baseType: !1403, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1405, line: 33, flags: DIFlagFwdDecl)
!1405 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1311, file: !1222, line: 67, baseType: !506, size: 64, offset: 576)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1311, file: !1222, line: 73, baseType: !1314, size: 64, offset: 640)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1311, file: !1222, line: 77, baseType: !1400, size: 64, offset: 704)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1311, file: !1222, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1311, file: !1222, line: 82, baseType: !1411, size: 320, offset: 832)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !441, line: 62, size: 320, elements: !1412)
!1412 = !{!1413, !1419, !1420, !1421, !1422, !1423}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1411, file: !441, line: 63, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !441, line: 56, size: 128, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1415, file: !441, line: 57, baseType: !1414, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1415, file: !441, line: 58, baseType: !604, size: 8, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1411, file: !441, line: 64, baseType: !7, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1411, file: !441, line: 66, baseType: !7, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1411, file: !441, line: 68, baseType: !498, size: 8, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1411, file: !441, line: 70, baseType: !859, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1411, file: !441, line: 71, baseType: !866, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1271, file: !1272, line: 476, baseType: !1425, size: 64, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !146, line: 187, size: 256, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1426, file: !146, line: 189, baseType: !499, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1426, file: !146, line: 192, baseType: !1060, size: 64, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1426, file: !146, line: 197, baseType: !1314, size: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1426, file: !146, line: 200, baseType: !1045, size: 64, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1271, file: !1272, line: 479, baseType: !1314, size: 64, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1271, file: !1272, line: 484, baseType: !506, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1271, file: !1272, line: 488, baseType: !506, size: 64, offset: 448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1271, file: !1272, line: 493, baseType: !506, size: 64, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1271, file: !1272, line: 496, baseType: !506, size: 64, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1271, file: !1272, line: 501, baseType: !1438, size: 64, offset: 640)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1440)
!1440 = !{!1441, !1444, !1445, !1446, !1447, !1449, !1450, !1455, !1456, !1457, !1458, !1459, !1460}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1439, file: !159, line: 2356, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1439, file: !159, line: 2357, baseType: !504, size: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1439, file: !159, line: 2358, baseType: !499, size: 32, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1439, file: !159, line: 2359, baseType: !499, size: 32, offset: 160)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1439, file: !159, line: 2360, baseType: !1448, size: 128, offset: 192)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !773)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1439, file: !159, line: 2364, baseType: !499, size: 32, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1439, file: !159, line: 2367, baseType: !1451, size: 128, offset: 384)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1451, file: !159, line: 2351, baseType: !681, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1451, file: !159, line: 2352, baseType: !562, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1439, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1439, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1439, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1439, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1439, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1439, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1271, file: !1272, line: 504, baseType: !1462, size: 64, offset: 704)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1272, line: 504, flags: DIFlagFwdDecl)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1271, file: !1272, line: 507, baseType: !1314, size: 64, offset: 768)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1271, file: !1272, line: 510, baseType: !499, size: 32, offset: 832)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1271, file: !1272, line: 513, baseType: !499, size: 32, offset: 864)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1271, file: !1272, line: 516, baseType: !631, size: 32, offset: 896)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1271, file: !1272, line: 519, baseType: !631, size: 32, offset: 928)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1271, file: !1272, line: 522, baseType: !7, size: 32, offset: 960)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1271, file: !1272, line: 523, baseType: !7, size: 32, offset: 992)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1271, file: !1272, line: 528, baseType: !504, size: 64, offset: 1024)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1271, file: !1272, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1271, file: !1272, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1271, file: !1272, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1271, file: !1272, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1271, file: !1272, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1271, file: !1272, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1271, file: !1272, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1271, file: !1272, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1271, file: !1272, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1271, file: !1272, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1271, file: !1272, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1271, file: !1272, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1271, file: !1272, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1271, file: !1272, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1271, file: !1272, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1271, file: !1272, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1266, file: !164, line: 3254, baseType: !506, size: 64, offset: 1536)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1266, file: !164, line: 3257, baseType: !506, size: 64, offset: 1600)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1266, file: !164, line: 3258, baseType: !506, size: 64, offset: 1664)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1266, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1266, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1266, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1266, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1266, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1266, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1266, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1266, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1266, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1266, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1266, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1266, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1266, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1266, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1266, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1266, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1266, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1266, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !509, file: !164, line: 3394, baseType: !1510, size: 1344)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1510, file: !164, line: 2280, baseType: !545, size: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1510, file: !164, line: 2281, baseType: !506, size: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1510, file: !164, line: 2282, baseType: !506, size: 64, offset: 256)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1510, file: !164, line: 2283, baseType: !506, size: 64, offset: 320)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1510, file: !164, line: 2284, baseType: !506, size: 64, offset: 384)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1510, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1510, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1510, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1510, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1510, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1510, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1510, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1510, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1510, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1510, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1510, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1510, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1510, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1510, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1510, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1510, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1510, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1510, file: !164, line: 2306, baseType: !1139, size: 32, offset: 544)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1510, file: !164, line: 2307, baseType: !506, size: 64, offset: 576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1510, file: !164, line: 2308, baseType: !506, size: 64, offset: 640)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1510, file: !164, line: 2314, baseType: !1538, size: 64, offset: 704)
!1538 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1539)
!1539 = !{!1540, !1541, !1542}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1538, file: !164, line: 2310, baseType: !499, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1538, file: !164, line: 2311, baseType: !504, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1538, file: !164, line: 2312, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1510, file: !164, line: 2315, baseType: !506, size: 64, offset: 768)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1510, file: !164, line: 2316, baseType: !506, size: 64, offset: 832)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1510, file: !164, line: 2317, baseType: !506, size: 64, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1510, file: !164, line: 2318, baseType: !506, size: 64, offset: 960)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1510, file: !164, line: 2319, baseType: !506, size: 64, offset: 1024)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1510, file: !164, line: 2320, baseType: !506, size: 64, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1510, file: !164, line: 2321, baseType: !506, size: 64, offset: 1152)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1510, file: !164, line: 2322, baseType: !506, size: 64, offset: 1216)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1510, file: !164, line: 2324, baseType: !1554, size: 64, offset: 1280)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !509, file: !164, line: 3395, baseType: !1557, size: 320)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1558)
!1558 = !{!1559, !1560, !1561}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1557, file: !164, line: 1470, baseType: !545, size: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1557, file: !164, line: 1471, baseType: !506, size: 64, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1557, file: !164, line: 1472, baseType: !506, size: 64, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !509, file: !164, line: 3396, baseType: !1563, size: 320)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1564)
!1564 = !{!1565, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1563, file: !164, line: 1483, baseType: !545, size: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1563, file: !164, line: 1484, baseType: !499, size: 32, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1563, file: !164, line: 1485, baseType: !883, size: 64, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !509, file: !164, line: 3397, baseType: !1569, size: 384)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1569, file: !164, line: 1830, baseType: !545, size: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1569, file: !164, line: 1831, baseType: !631, size: 32, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1569, file: !164, line: 1832, baseType: !506, size: 64, offset: 256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1569, file: !164, line: 1835, baseType: !883, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !509, file: !164, line: 3398, baseType: !1576, size: 704)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1587}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1576, file: !164, line: 1899, baseType: !545, size: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1576, file: !164, line: 1902, baseType: !506, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1576, file: !164, line: 1905, baseType: !830, size: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1576, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1576, file: !164, line: 1911, baseType: !1583, size: 64, offset: 384)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1222, line: 117, size: 128, elements: !1585)
!1585 = !{!1586}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1584, file: !1222, line: 120, baseType: !1390, size: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1576, file: !164, line: 1914, baseType: !871, size: 256, offset: 448)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !509, file: !164, line: 3399, baseType: !1589, size: 704)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1589, file: !164, line: 2009, baseType: !545, size: 192)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1589, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1589, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1589, file: !164, line: 2014, baseType: !631, size: 32, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1589, file: !164, line: 2016, baseType: !506, size: 64, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1589, file: !164, line: 2017, baseType: !1377, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1589, file: !164, line: 2019, baseType: !506, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1589, file: !164, line: 2020, baseType: !506, size: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1589, file: !164, line: 2021, baseType: !506, size: 64, offset: 512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1589, file: !164, line: 2022, baseType: !506, size: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1589, file: !164, line: 2023, baseType: !506, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !509, file: !164, line: 3400, baseType: !1603, size: 832)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1603, file: !164, line: 2431, baseType: !545, size: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1603, file: !164, line: 2433, baseType: !506, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1603, file: !164, line: 2434, baseType: !506, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1603, file: !164, line: 2435, baseType: !506, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1603, file: !164, line: 2436, baseType: !506, size: 64, offset: 384)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1603, file: !164, line: 2437, baseType: !1377, size: 64, offset: 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1603, file: !164, line: 2438, baseType: !506, size: 64, offset: 512)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1603, file: !164, line: 2440, baseType: !506, size: 64, offset: 576)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1603, file: !164, line: 2441, baseType: !506, size: 64, offset: 640)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1603, file: !164, line: 2443, baseType: !1615, size: 128, offset: 704)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1616, file: !164, line: 182, baseType: !1382, size: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !509, file: !164, line: 3401, baseType: !1620, size: 320)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1621)
!1621 = !{!1622, !1623, !1630}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1620, file: !164, line: 3329, baseType: !545, size: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1620, file: !164, line: 3330, baseType: !1624, size: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1626)
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1625, file: !164, line: 3322, baseType: !1624, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1625, file: !164, line: 3323, baseType: !1624, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1625, file: !164, line: 3324, baseType: !506, size: 64, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1620, file: !164, line: 3331, baseType: !1624, size: 64, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !509, file: !164, line: 3402, baseType: !1632, size: 256)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1632, file: !164, line: 1541, baseType: !545, size: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1632, file: !164, line: 1542, baseType: !1636, size: 64, offset: 192)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1639)
!1639 = !{!1640}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1638, file: !164, line: 1538, baseType: !1641, size: 192)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1642, file: !164, line: 1537, baseType: !7, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1642, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1642, file: !164, line: 1537, baseType: !1647, size: 128, offset: 64)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 128, elements: !605)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1649, file: !164, line: 1533, baseType: !506, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1649, file: !164, line: 1534, baseType: !506, size: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !509, file: !164, line: 3403, baseType: !1654, size: 512)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1665, !1666, !1667}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1654, file: !164, line: 1939, baseType: !545, size: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1654, file: !164, line: 1940, baseType: !631, size: 32, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1654, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1654, file: !164, line: 1946, baseType: !1660, size: 32, offset: 256)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1661)
!1661 = !{!1662, !1663, !1664}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1660, file: !164, line: 1943, baseType: !182, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1660, file: !164, line: 1944, baseType: !189, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1660, file: !164, line: 1945, baseType: !196, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1654, file: !164, line: 1950, baseType: !820, size: 64, offset: 320)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1654, file: !164, line: 1951, baseType: !820, size: 64, offset: 384)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1654, file: !164, line: 1953, baseType: !883, size: 64, offset: 448)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !509, file: !164, line: 3404, baseType: !1669, size: 1664)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1669, file: !164, line: 3338, baseType: !545, size: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1669, file: !164, line: 3341, baseType: !1673, size: 1472, offset: 192)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1674, line: 410, size: 1472, elements: !1675)
!1674 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1673, file: !1674, line: 412, baseType: !499, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1673, file: !1674, line: 413, baseType: !499, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1673, file: !1674, line: 414, baseType: !499, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1673, file: !1674, line: 415, baseType: !499, size: 32, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1673, file: !1674, line: 416, baseType: !499, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1673, file: !1674, line: 417, baseType: !499, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1673, file: !1674, line: 418, baseType: !498, size: 8, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1673, file: !1674, line: 419, baseType: !498, size: 8, offset: 200)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1673, file: !1674, line: 420, baseType: !1685, size: 8, offset: 208)
!1685 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1673, file: !1674, line: 421, baseType: !1685, size: 8, offset: 216)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1673, file: !1674, line: 422, baseType: !1685, size: 8, offset: 224)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1673, file: !1674, line: 423, baseType: !1685, size: 8, offset: 232)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1673, file: !1674, line: 424, baseType: !1685, size: 8, offset: 240)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1673, file: !1674, line: 425, baseType: !1685, size: 8, offset: 248)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1673, file: !1674, line: 426, baseType: !1685, size: 8, offset: 256)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1673, file: !1674, line: 427, baseType: !1685, size: 8, offset: 264)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1673, file: !1674, line: 428, baseType: !1685, size: 8, offset: 272)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1673, file: !1674, line: 429, baseType: !1685, size: 8, offset: 280)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1673, file: !1674, line: 430, baseType: !1685, size: 8, offset: 288)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1673, file: !1674, line: 431, baseType: !1685, size: 8, offset: 296)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1673, file: !1674, line: 432, baseType: !1685, size: 8, offset: 304)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1673, file: !1674, line: 433, baseType: !1685, size: 8, offset: 312)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1673, file: !1674, line: 434, baseType: !1685, size: 8, offset: 320)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1673, file: !1674, line: 435, baseType: !1685, size: 8, offset: 328)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1673, file: !1674, line: 436, baseType: !1685, size: 8, offset: 336)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1673, file: !1674, line: 437, baseType: !1685, size: 8, offset: 344)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1673, file: !1674, line: 438, baseType: !1685, size: 8, offset: 352)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1673, file: !1674, line: 439, baseType: !1685, size: 8, offset: 360)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1673, file: !1674, line: 440, baseType: !1685, size: 8, offset: 368)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1673, file: !1674, line: 441, baseType: !1685, size: 8, offset: 376)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1673, file: !1674, line: 442, baseType: !1685, size: 8, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1673, file: !1674, line: 443, baseType: !1685, size: 8, offset: 392)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1673, file: !1674, line: 444, baseType: !1685, size: 8, offset: 400)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1673, file: !1674, line: 445, baseType: !1685, size: 8, offset: 408)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1673, file: !1674, line: 446, baseType: !1685, size: 8, offset: 416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1673, file: !1674, line: 447, baseType: !1685, size: 8, offset: 424)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1673, file: !1674, line: 448, baseType: !1685, size: 8, offset: 432)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1673, file: !1674, line: 449, baseType: !1685, size: 8, offset: 440)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1673, file: !1674, line: 450, baseType: !1685, size: 8, offset: 448)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1673, file: !1674, line: 451, baseType: !1685, size: 8, offset: 456)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1673, file: !1674, line: 452, baseType: !1685, size: 8, offset: 464)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1673, file: !1674, line: 453, baseType: !1685, size: 8, offset: 472)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1673, file: !1674, line: 454, baseType: !1685, size: 8, offset: 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1673, file: !1674, line: 455, baseType: !1685, size: 8, offset: 488)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1673, file: !1674, line: 456, baseType: !1685, size: 8, offset: 496)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1673, file: !1674, line: 457, baseType: !1685, size: 8, offset: 504)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1673, file: !1674, line: 458, baseType: !1685, size: 8, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1673, file: !1674, line: 459, baseType: !1685, size: 8, offset: 520)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1673, file: !1674, line: 460, baseType: !1685, size: 8, offset: 528)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1673, file: !1674, line: 461, baseType: !1685, size: 8, offset: 536)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1673, file: !1674, line: 462, baseType: !1685, size: 8, offset: 544)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1673, file: !1674, line: 463, baseType: !1685, size: 8, offset: 552)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1673, file: !1674, line: 464, baseType: !1685, size: 8, offset: 560)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1673, file: !1674, line: 465, baseType: !1685, size: 8, offset: 568)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1673, file: !1674, line: 466, baseType: !1685, size: 8, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1673, file: !1674, line: 467, baseType: !1685, size: 8, offset: 584)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1673, file: !1674, line: 468, baseType: !1685, size: 8, offset: 592)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1673, file: !1674, line: 469, baseType: !1685, size: 8, offset: 600)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1673, file: !1674, line: 470, baseType: !1685, size: 8, offset: 608)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1673, file: !1674, line: 471, baseType: !1685, size: 8, offset: 616)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1673, file: !1674, line: 472, baseType: !1685, size: 8, offset: 624)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1673, file: !1674, line: 473, baseType: !1685, size: 8, offset: 632)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1673, file: !1674, line: 474, baseType: !1685, size: 8, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1673, file: !1674, line: 475, baseType: !1685, size: 8, offset: 648)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1673, file: !1674, line: 476, baseType: !1685, size: 8, offset: 656)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1673, file: !1674, line: 477, baseType: !1685, size: 8, offset: 664)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1673, file: !1674, line: 478, baseType: !1685, size: 8, offset: 672)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1673, file: !1674, line: 479, baseType: !1685, size: 8, offset: 680)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1673, file: !1674, line: 480, baseType: !1685, size: 8, offset: 688)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1673, file: !1674, line: 481, baseType: !1685, size: 8, offset: 696)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1673, file: !1674, line: 482, baseType: !1685, size: 8, offset: 704)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1673, file: !1674, line: 483, baseType: !1685, size: 8, offset: 712)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1673, file: !1674, line: 484, baseType: !1685, size: 8, offset: 720)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1673, file: !1674, line: 485, baseType: !1685, size: 8, offset: 728)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1673, file: !1674, line: 486, baseType: !1685, size: 8, offset: 736)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1673, file: !1674, line: 487, baseType: !1685, size: 8, offset: 744)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1673, file: !1674, line: 488, baseType: !1685, size: 8, offset: 752)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1673, file: !1674, line: 489, baseType: !1685, size: 8, offset: 760)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1673, file: !1674, line: 490, baseType: !1685, size: 8, offset: 768)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1673, file: !1674, line: 491, baseType: !1685, size: 8, offset: 776)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1673, file: !1674, line: 492, baseType: !1685, size: 8, offset: 784)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1673, file: !1674, line: 493, baseType: !1685, size: 8, offset: 792)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1673, file: !1674, line: 494, baseType: !1685, size: 8, offset: 800)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1673, file: !1674, line: 495, baseType: !1685, size: 8, offset: 808)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1673, file: !1674, line: 496, baseType: !1685, size: 8, offset: 816)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1673, file: !1674, line: 497, baseType: !1685, size: 8, offset: 824)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1673, file: !1674, line: 498, baseType: !1685, size: 8, offset: 832)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1673, file: !1674, line: 499, baseType: !1685, size: 8, offset: 840)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1673, file: !1674, line: 500, baseType: !1685, size: 8, offset: 848)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1673, file: !1674, line: 501, baseType: !1685, size: 8, offset: 856)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1673, file: !1674, line: 502, baseType: !1685, size: 8, offset: 864)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1673, file: !1674, line: 503, baseType: !1685, size: 8, offset: 872)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1673, file: !1674, line: 504, baseType: !1685, size: 8, offset: 880)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1673, file: !1674, line: 505, baseType: !1685, size: 8, offset: 888)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1673, file: !1674, line: 506, baseType: !1685, size: 8, offset: 896)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1673, file: !1674, line: 507, baseType: !1685, size: 8, offset: 904)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1673, file: !1674, line: 508, baseType: !1685, size: 8, offset: 912)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1673, file: !1674, line: 509, baseType: !1685, size: 8, offset: 920)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1673, file: !1674, line: 510, baseType: !1685, size: 8, offset: 928)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1673, file: !1674, line: 511, baseType: !1685, size: 8, offset: 936)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1673, file: !1674, line: 512, baseType: !1685, size: 8, offset: 944)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1673, file: !1674, line: 513, baseType: !1685, size: 8, offset: 952)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1673, file: !1674, line: 514, baseType: !1685, size: 8, offset: 960)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1673, file: !1674, line: 515, baseType: !1685, size: 8, offset: 968)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1673, file: !1674, line: 516, baseType: !1685, size: 8, offset: 976)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1673, file: !1674, line: 517, baseType: !1685, size: 8, offset: 984)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1673, file: !1674, line: 518, baseType: !1685, size: 8, offset: 992)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1673, file: !1674, line: 519, baseType: !1685, size: 8, offset: 1000)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1673, file: !1674, line: 520, baseType: !1685, size: 8, offset: 1008)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1673, file: !1674, line: 521, baseType: !1685, size: 8, offset: 1016)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1673, file: !1674, line: 522, baseType: !1685, size: 8, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1673, file: !1674, line: 523, baseType: !1685, size: 8, offset: 1032)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1673, file: !1674, line: 524, baseType: !1685, size: 8, offset: 1040)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1673, file: !1674, line: 525, baseType: !1685, size: 8, offset: 1048)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1673, file: !1674, line: 526, baseType: !1685, size: 8, offset: 1056)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1673, file: !1674, line: 527, baseType: !1685, size: 8, offset: 1064)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1673, file: !1674, line: 528, baseType: !1685, size: 8, offset: 1072)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1673, file: !1674, line: 529, baseType: !1685, size: 8, offset: 1080)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1673, file: !1674, line: 530, baseType: !1685, size: 8, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1673, file: !1674, line: 531, baseType: !1685, size: 8, offset: 1096)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1673, file: !1674, line: 532, baseType: !1685, size: 8, offset: 1104)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1673, file: !1674, line: 533, baseType: !1685, size: 8, offset: 1112)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1673, file: !1674, line: 534, baseType: !1685, size: 8, offset: 1120)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1673, file: !1674, line: 535, baseType: !1685, size: 8, offset: 1128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1673, file: !1674, line: 536, baseType: !1685, size: 8, offset: 1136)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1673, file: !1674, line: 537, baseType: !1685, size: 8, offset: 1144)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1673, file: !1674, line: 538, baseType: !1685, size: 8, offset: 1152)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1673, file: !1674, line: 539, baseType: !1685, size: 8, offset: 1160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1673, file: !1674, line: 540, baseType: !1685, size: 8, offset: 1168)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1673, file: !1674, line: 541, baseType: !1685, size: 8, offset: 1176)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1673, file: !1674, line: 542, baseType: !1685, size: 8, offset: 1184)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1673, file: !1674, line: 543, baseType: !1685, size: 8, offset: 1192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1673, file: !1674, line: 544, baseType: !1685, size: 8, offset: 1200)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1673, file: !1674, line: 545, baseType: !1685, size: 8, offset: 1208)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1673, file: !1674, line: 546, baseType: !1685, size: 8, offset: 1216)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1673, file: !1674, line: 547, baseType: !1685, size: 8, offset: 1224)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1673, file: !1674, line: 548, baseType: !1685, size: 8, offset: 1232)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1673, file: !1674, line: 549, baseType: !1685, size: 8, offset: 1240)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1673, file: !1674, line: 550, baseType: !1685, size: 8, offset: 1248)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1673, file: !1674, line: 551, baseType: !1685, size: 8, offset: 1256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1673, file: !1674, line: 552, baseType: !1685, size: 8, offset: 1264)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1673, file: !1674, line: 553, baseType: !1685, size: 8, offset: 1272)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1673, file: !1674, line: 554, baseType: !1685, size: 8, offset: 1280)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1673, file: !1674, line: 555, baseType: !1685, size: 8, offset: 1288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1673, file: !1674, line: 556, baseType: !1685, size: 8, offset: 1296)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1673, file: !1674, line: 557, baseType: !1685, size: 8, offset: 1304)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1673, file: !1674, line: 558, baseType: !1685, size: 8, offset: 1312)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1673, file: !1674, line: 559, baseType: !1685, size: 8, offset: 1320)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1673, file: !1674, line: 560, baseType: !1685, size: 8, offset: 1328)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1673, file: !1674, line: 561, baseType: !1685, size: 8, offset: 1336)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1673, file: !1674, line: 562, baseType: !1685, size: 8, offset: 1344)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1673, file: !1674, line: 563, baseType: !1685, size: 8, offset: 1352)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1673, file: !1674, line: 564, baseType: !1685, size: 8, offset: 1360)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1673, file: !1674, line: 565, baseType: !1685, size: 8, offset: 1368)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1673, file: !1674, line: 566, baseType: !1685, size: 8, offset: 1376)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1673, file: !1674, line: 567, baseType: !1685, size: 8, offset: 1384)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1673, file: !1674, line: 568, baseType: !1685, size: 8, offset: 1392)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1673, file: !1674, line: 569, baseType: !1685, size: 8, offset: 1400)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1673, file: !1674, line: 570, baseType: !1685, size: 8, offset: 1408)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1673, file: !1674, line: 571, baseType: !1685, size: 8, offset: 1416)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1673, file: !1674, line: 572, baseType: !1685, size: 8, offset: 1424)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1673, file: !1674, line: 573, baseType: !1685, size: 8, offset: 1432)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1673, file: !1674, line: 574, baseType: !1685, size: 8, offset: 1440)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !509, file: !164, line: 3405, baseType: !1841, size: 384)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1841, file: !164, line: 3353, baseType: !545, size: 192)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1841, file: !164, line: 3356, baseType: !1845, size: 192, offset: 192)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1674, line: 578, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1845, file: !1674, line: 580, baseType: !499, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1845, file: !1674, line: 581, baseType: !499, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1845, file: !1674, line: 582, baseType: !499, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1845, file: !1674, line: 583, baseType: !499, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1845, file: !1674, line: 584, baseType: !498, size: 8, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1845, file: !1674, line: 585, baseType: !498, size: 8, offset: 136)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1845, file: !1674, line: 586, baseType: !498, size: 8, offset: 144)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1845, file: !1674, line: 587, baseType: !498, size: 8, offset: 152)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1845, file: !1674, line: 588, baseType: !498, size: 8, offset: 160)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1845, file: !1674, line: 589, baseType: !498, size: 8, offset: 168)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1845, file: !1674, line: 590, baseType: !498, size: 8, offset: 176)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !391, line: 165, size: 896, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1875, !1885, !1890}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1861, file: !391, line: 168, baseType: !830, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1861, file: !391, line: 171, baseType: !506, size: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1861, file: !391, line: 174, baseType: !503, size: 64, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !1861, file: !391, line: 177, baseType: !498, size: 8, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !1861, file: !391, line: 180, baseType: !1868, size: 320, offset: 256)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !391, line: 51, size: 320, elements: !1869)
!1869 = !{!1870, !1871, !1872, !1873, !1874}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !1868, file: !391, line: 53, baseType: !506, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1868, file: !391, line: 54, baseType: !506, size: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1868, file: !391, line: 55, baseType: !506, size: 64, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1868, file: !391, line: 56, baseType: !506, size: 64, offset: 192)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !1868, file: !391, line: 60, baseType: !506, size: 64, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1861, file: !391, line: 183, baseType: !1876, size: 128, offset: 576)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !391, line: 78, size: 128, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !1876, file: !391, line: 81, baseType: !506, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !1876, file: !391, line: 84, baseType: !1880, size: 64, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !164, line: 184, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !164, line: 184, size: 128, elements: !1883)
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1882, file: !164, line: 184, baseType: !1382, size: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1861, file: !391, line: 186, baseType: !1886, size: 128, offset: 704)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !391, line: 87, size: 128, elements: !1887)
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1886, file: !391, line: 91, baseType: !1583, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1886, file: !391, line: 96, baseType: !1400, size: 64, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !1861, file: !391, line: 189, baseType: !1891, size: 64, offset: 832)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !391, line: 127, size: 256, elements: !1893)
!1893 = !{!1894, !1900, !1901, !1902}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1892, file: !391, line: 129, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !146, line: 86, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !146, line: 86, size: 128, elements: !1898)
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1897, file: !146, line: 86, baseType: !1065, size: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !1892, file: !391, line: 130, baseType: !499, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1892, file: !391, line: 131, baseType: !1880, size: 64, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !1892, file: !391, line: 132, baseType: !1903, size: 64, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !1905, line: 34, baseType: !1906)
!1905 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !1905, line: 34, size: 128, elements: !1907)
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1906, file: !1905, line: 34, baseType: !1909, size: 128)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !1905, line: 32, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !1905, line: 32, size: 128, elements: !1911)
!1911 = !{!1912, !1913, !1914}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1910, file: !1905, line: 32, baseType: !7, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1910, file: !1905, line: 32, baseType: !7, size: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1910, file: !1905, line: 32, baseType: !1915, size: 64, offset: 64)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 64, elements: !605)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !1905, line: 31, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdg_vertex", file: !391, line: 485, size: 128, elements: !1920)
!1920 = !{!1921, !1922, !1923}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1919, file: !391, line: 488, baseType: !830, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "has_mem_write", scope: !1919, file: !391, line: 491, baseType: !498, size: 8, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "has_mem_reads", scope: !1919, file: !391, line: 494, baseType: !498, size: 8, offset: 72)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdg_vertex_info", file: !3, line: 4668, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1925, file: !3, line: 4670, baseType: !830, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1925, file: !3, line: 4671, baseType: !499, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !391, line: 207, baseType: !1860)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !391, line: 331, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !391, line: 282, size: 512, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1967, !1968, !1974, !1975, !1976, !1977, !1978}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1933, file: !391, line: 285, baseType: !1860, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1933, file: !391, line: 286, baseType: !1860, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !1933, file: !391, line: 299, baseType: !506, size: 64, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !1933, file: !391, line: 304, baseType: !1939, size: 64, offset: 192)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !391, line: 272, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !391, line: 272, size: 128, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1941, file: !391, line: 272, baseType: !1944, size: 128)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !391, line: 271, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !391, line: 271, size: 128, elements: !1946)
!1946 = !{!1947, !1948, !1949}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1945, file: !391, line: 271, baseType: !7, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1945, file: !391, line: 271, baseType: !7, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1945, file: !391, line: 271, baseType: !1950, size: 64, offset: 64)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 64, elements: !605)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !391, line: 270, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !391, line: 252, size: 256, elements: !1954)
!1954 = !{!1955, !1964, !1965, !1966}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !1953, file: !391, line: 256, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !391, line: 243, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 239, size: 192, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1958, file: !391, line: 241, baseType: !7, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !1958, file: !391, line: 242, baseType: !1962, size: 128, offset: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 128, elements: !749)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !391, line: 237, baseType: !1880)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !1953, file: !391, line: 257, baseType: !1956, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !1953, file: !391, line: 261, baseType: !506, size: 64, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1953, file: !391, line: 267, baseType: !506, size: 64, offset: 192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1933, file: !391, line: 307, baseType: !1895, size: 64, offset: 256)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !1933, file: !391, line: 310, baseType: !1969, size: 64, offset: 320)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !1905, line: 33, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !1905, line: 33, size: 128, elements: !1972)
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1971, file: !1905, line: 33, baseType: !1909, size: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !1933, file: !391, line: 313, baseType: !1969, size: 64, offset: 384)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !1933, file: !391, line: 317, baseType: !7, size: 32, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !1933, file: !391, line: 320, baseType: !498, size: 8, offset: 480)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !1933, file: !391, line: 324, baseType: !498, size: 8, offset: 488)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !1933, file: !391, line: 328, baseType: !498, size: 8, offset: 496)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !391, line: 333, baseType: !1983)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !391, line: 333, size: 128, elements: !1984)
!1984 = !{!1985}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1983, file: !391, line: 333, baseType: !1986, size: 128)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !391, line: 332, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !391, line: 332, size: 128, elements: !1988)
!1988 = !{!1989, !1990, !1991}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1987, file: !391, line: 332, baseType: !7, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1987, file: !391, line: 332, baseType: !7, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1987, file: !391, line: 332, baseType: !1992, size: 64, offset: 64)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 64, elements: !605)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_ref_loc_heap", file: !391, line: 376, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_ref_loc_heap", file: !391, line: 376, size: 192, elements: !1996)
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1995, file: !391, line: 376, baseType: !1998, size: 192)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_ref_loc_base", file: !391, line: 375, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_ref_loc_base", file: !391, line: 375, size: 192, elements: !2000)
!2000 = !{!2001, !2002, !2003}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1999, file: !391, line: 375, baseType: !7, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1999, file: !391, line: 375, baseType: !7, size: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1999, file: !391, line: 375, baseType: !2004, size: 128, offset: 64)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2005, size: 128, elements: !605)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_ref_loc", file: !391, line: 373, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_ref_loc_d", file: !391, line: 366, size: 128, elements: !2007)
!2007 = !{!2008, !2009}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2006, file: !391, line: 369, baseType: !864, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !2006, file: !391, line: 372, baseType: !498, size: 8, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !391, line: 209, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !391, line: 209, size: 128, elements: !2013)
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2012, file: !391, line: 209, baseType: !2015, size: 128)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !391, line: 208, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !391, line: 208, size: 128, elements: !2017)
!2017 = !{!2018, !2019, !2020}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2016, file: !391, line: 208, baseType: !7, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2016, file: !391, line: 208, baseType: !7, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2016, file: !391, line: 208, baseType: !2021, size: 64, offset: 64)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 64, elements: !605)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !2024, line: 32, baseType: !2025)
!2024 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !2024, line: 32, size: 96, elements: !2026)
!2026 = !{!2027}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2025, file: !2024, line: 32, baseType: !2028, size: 96)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !2024, line: 31, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !2024, line: 31, size: 96, elements: !2030)
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2029, file: !2024, line: 31, baseType: !7, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2029, file: !2024, line: 31, baseType: !7, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2029, file: !2024, line: 31, baseType: !2034, size: 32, offset: 64)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 32, elements: !605)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1925)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !402, line: 34, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !402, line: 34, size: 128, elements: !2040)
!2040 = !{!2041}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2039, file: !402, line: 34, baseType: !1369, size: 128)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdg_edge", file: !391, line: 531, size: 128, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2043, file: !391, line: 534, baseType: !490, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2043, file: !391, line: 538, baseType: !7, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "relation", scope: !2043, file: !391, line: 542, baseType: !1931, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !441, line: 27, baseType: !864)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !441, line: 30, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !164, line: 1893, baseType: !871)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !507, line: 60, baseType: !1979)
!2053 = !{!0}
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "datadep_stats", file: !3, line: 98, size: 608, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "num_dependence_tests", scope: !2054, file: !3, line: 100, baseType: !499, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "num_dependence_dependent", scope: !2054, file: !3, line: 101, baseType: !499, size: 32, offset: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "num_dependence_independent", scope: !2054, file: !3, line: 102, baseType: !499, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "num_dependence_undetermined", scope: !2054, file: !3, line: 103, baseType: !499, size: 32, offset: 96)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "num_subscript_tests", scope: !2054, file: !3, line: 105, baseType: !499, size: 32, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "num_subscript_undetermined", scope: !2054, file: !3, line: 106, baseType: !499, size: 32, offset: 160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "num_same_subscript_function", scope: !2054, file: !3, line: 107, baseType: !499, size: 32, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "num_ziv", scope: !2054, file: !3, line: 109, baseType: !499, size: 32, offset: 224)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "num_ziv_independent", scope: !2054, file: !3, line: 110, baseType: !499, size: 32, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "num_ziv_dependent", scope: !2054, file: !3, line: 111, baseType: !499, size: 32, offset: 288)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "num_ziv_unimplemented", scope: !2054, file: !3, line: 112, baseType: !499, size: 32, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "num_siv", scope: !2054, file: !3, line: 114, baseType: !499, size: 32, offset: 352)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "num_siv_independent", scope: !2054, file: !3, line: 115, baseType: !499, size: 32, offset: 384)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "num_siv_dependent", scope: !2054, file: !3, line: 116, baseType: !499, size: 32, offset: 416)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "num_siv_unimplemented", scope: !2054, file: !3, line: 117, baseType: !499, size: 32, offset: 448)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "num_miv", scope: !2054, file: !3, line: 119, baseType: !499, size: 32, offset: 480)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "num_miv_independent", scope: !2054, file: !3, line: 120, baseType: !499, size: 32, offset: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "num_miv_dependent", scope: !2054, file: !3, line: 121, baseType: !499, size: 32, offset: 544)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "num_miv_unimplemented", scope: !2054, file: !3, line: 122, baseType: !499, size: 32, offset: 576)
!2075 = !{i32 2, !"Dwarf Version", i32 4}
!2076 = !{i32 2, !"Debug Info Version", i32 3}
!2077 = !{i32 1, !"wchar_size", i32 4}
!2078 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2079 = distinct !DISubprogram(name: "vprintf", scope: !2080, file: !2080, line: 39, type: !2081, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2091)
!2080 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!499, !2083, !2084}
!2083 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !504)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2085, file: !3, baseType: !7, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2085, file: !3, baseType: !7, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2085, file: !3, baseType: !503, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2085, file: !3, baseType: !503, size: 64, offset: 128)
!2091 = !{!2092, !2093}
!2092 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2079, file: !2080, line: 39, type: !2083)
!2093 = !DILocalVariable(name: "__arg", arg: 2, scope: !2079, file: !2080, line: 39, type: !2084)
!2094 = !DILocation(line: 0, scope: !2079)
!2095 = !DILocation(line: 41, column: 20, scope: !2079)
!2096 = !DILocation(line: 41, column: 10, scope: !2079)
!2097 = !DILocation(line: 41, column: 3, scope: !2079)
!2098 = distinct !DISubprogram(name: "getchar", scope: !2080, file: !2080, line: 47, type: !2099, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2101)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!499}
!2101 = !{}
!2102 = !DILocation(line: 49, column: 16, scope: !2098)
!2103 = !DILocation(line: 49, column: 10, scope: !2098)
!2104 = !DILocation(line: 49, column: 3, scope: !2098)
!2105 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2080, file: !2080, line: 56, type: !2106, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2159)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!499, !2108}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2110, line: 7, baseType: !2111)
!2110 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2112, line: 49, size: 1728, elements: !2113)
!2112 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2129, !2131, !2132, !2133, !2136, !2138, !2139, !2140, !2143, !2145, !2148, !2151, !2152, !2153, !2154, !2155}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2111, file: !2112, line: 51, baseType: !499, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2111, file: !2112, line: 54, baseType: !501, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2111, file: !2112, line: 55, baseType: !501, size: 64, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2111, file: !2112, line: 56, baseType: !501, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2111, file: !2112, line: 57, baseType: !501, size: 64, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2111, file: !2112, line: 58, baseType: !501, size: 64, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2111, file: !2112, line: 59, baseType: !501, size: 64, offset: 384)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2111, file: !2112, line: 60, baseType: !501, size: 64, offset: 448)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2111, file: !2112, line: 61, baseType: !501, size: 64, offset: 512)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2111, file: !2112, line: 64, baseType: !501, size: 64, offset: 576)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2111, file: !2112, line: 65, baseType: !501, size: 64, offset: 640)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2111, file: !2112, line: 66, baseType: !501, size: 64, offset: 704)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2111, file: !2112, line: 68, baseType: !2127, size: 64, offset: 768)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2112, line: 36, flags: DIFlagFwdDecl)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2111, file: !2112, line: 70, baseType: !2130, size: 64, offset: 832)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2111, file: !2112, line: 72, baseType: !499, size: 32, offset: 896)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2111, file: !2112, line: 73, baseType: !499, size: 32, offset: 928)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2111, file: !2112, line: 74, baseType: !2134, size: 64, offset: 960)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2135, line: 152, baseType: !562)
!2135 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2111, file: !2112, line: 77, baseType: !2137, size: 16, offset: 1024)
!2137 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2111, file: !2112, line: 78, baseType: !1685, size: 8, offset: 1040)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2111, file: !2112, line: 79, baseType: !604, size: 8, offset: 1048)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2111, file: !2112, line: 81, baseType: !2141, size: 64, offset: 1088)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2112, line: 43, baseType: null)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2111, file: !2112, line: 89, baseType: !2144, size: 64, offset: 1152)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2135, line: 153, baseType: !562)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2111, file: !2112, line: 91, baseType: !2146, size: 64, offset: 1216)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2112, line: 37, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2111, file: !2112, line: 92, baseType: !2149, size: 64, offset: 1280)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2112, line: 38, flags: DIFlagFwdDecl)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2111, file: !2112, line: 93, baseType: !2130, size: 64, offset: 1344)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2111, file: !2112, line: 94, baseType: !503, size: 64, offset: 1408)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2111, file: !2112, line: 95, baseType: !975, size: 64, offset: 1472)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2111, file: !2112, line: 96, baseType: !499, size: 32, offset: 1536)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2111, file: !2112, line: 98, baseType: !2156, size: 160, offset: 1568)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 160, elements: !2157)
!2157 = !{!2158}
!2158 = !DISubrange(count: 20)
!2159 = !{!2160}
!2160 = !DILocalVariable(name: "__fp", arg: 1, scope: !2105, file: !2080, line: 56, type: !2108)
!2161 = !DILocation(line: 0, scope: !2105)
!2162 = !DILocation(line: 58, column: 10, scope: !2105)
!2163 = !DILocation(line: 58, column: 3, scope: !2105)
!2164 = distinct !DISubprogram(name: "getc_unlocked", scope: !2080, file: !2080, line: 66, type: !2106, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2165)
!2165 = !{!2166}
!2166 = !DILocalVariable(name: "__fp", arg: 1, scope: !2164, file: !2080, line: 66, type: !2108)
!2167 = !DILocation(line: 0, scope: !2164)
!2168 = !DILocation(line: 68, column: 10, scope: !2164)
!2169 = !DILocation(line: 68, column: 3, scope: !2164)
!2170 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2080, file: !2080, line: 73, type: !2099, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2101)
!2171 = !DILocation(line: 75, column: 10, scope: !2170)
!2172 = !DILocation(line: 75, column: 3, scope: !2170)
!2173 = distinct !DISubprogram(name: "putchar", scope: !2080, file: !2080, line: 82, type: !2174, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{!499, !499}
!2176 = !{!2177}
!2177 = !DILocalVariable(name: "__c", arg: 1, scope: !2173, file: !2080, line: 82, type: !499)
!2178 = !DILocation(line: 0, scope: !2173)
!2179 = !DILocation(line: 84, column: 21, scope: !2173)
!2180 = !DILocation(line: 84, column: 10, scope: !2173)
!2181 = !DILocation(line: 84, column: 3, scope: !2173)
!2182 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2080, file: !2080, line: 91, type: !2183, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2185)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{!499, !499, !2108}
!2185 = !{!2186, !2187}
!2186 = !DILocalVariable(name: "__c", arg: 1, scope: !2182, file: !2080, line: 91, type: !499)
!2187 = !DILocalVariable(name: "__stream", arg: 2, scope: !2182, file: !2080, line: 91, type: !2108)
!2188 = !DILocation(line: 0, scope: !2182)
!2189 = !DILocation(line: 93, column: 10, scope: !2182)
!2190 = !DILocation(line: 93, column: 3, scope: !2182)
!2191 = distinct !DISubprogram(name: "putc_unlocked", scope: !2080, file: !2080, line: 101, type: !2183, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2192)
!2192 = !{!2193, !2194}
!2193 = !DILocalVariable(name: "__c", arg: 1, scope: !2191, file: !2080, line: 101, type: !499)
!2194 = !DILocalVariable(name: "__stream", arg: 2, scope: !2191, file: !2080, line: 101, type: !2108)
!2195 = !DILocation(line: 0, scope: !2191)
!2196 = !DILocation(line: 103, column: 10, scope: !2191)
!2197 = !DILocation(line: 103, column: 3, scope: !2191)
!2198 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2080, file: !2080, line: 108, type: !2174, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2199)
!2199 = !{!2200}
!2200 = !DILocalVariable(name: "__c", arg: 1, scope: !2198, file: !2080, line: 108, type: !499)
!2201 = !DILocation(line: 0, scope: !2198)
!2202 = !DILocation(line: 110, column: 10, scope: !2198)
!2203 = !DILocation(line: 110, column: 3, scope: !2198)
!2204 = distinct !DISubprogram(name: "getline", scope: !2080, file: !2080, line: 118, type: !2205, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2209)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!2207, !500, !2208, !2108}
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2135, line: 193, baseType: !562)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!2209 = !{!2210, !2211, !2212}
!2210 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2204, file: !2080, line: 118, type: !500)
!2211 = !DILocalVariable(name: "__n", arg: 2, scope: !2204, file: !2080, line: 118, type: !2208)
!2212 = !DILocalVariable(name: "__stream", arg: 3, scope: !2204, file: !2080, line: 118, type: !2108)
!2213 = !DILocation(line: 0, scope: !2204)
!2214 = !DILocation(line: 120, column: 10, scope: !2204)
!2215 = !DILocation(line: 120, column: 3, scope: !2204)
!2216 = distinct !DISubprogram(name: "feof_unlocked", scope: !2080, file: !2080, line: 128, type: !2106, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!2217 = !{!2218}
!2218 = !DILocalVariable(name: "__stream", arg: 1, scope: !2216, file: !2080, line: 128, type: !2108)
!2219 = !DILocation(line: 0, scope: !2216)
!2220 = !DILocation(line: 130, column: 10, scope: !2216)
!2221 = !DILocation(line: 130, column: 3, scope: !2216)
!2222 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2080, file: !2080, line: 135, type: !2106, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2223)
!2223 = !{!2224}
!2224 = !DILocalVariable(name: "__stream", arg: 1, scope: !2222, file: !2080, line: 135, type: !2108)
!2225 = !DILocation(line: 0, scope: !2222)
!2226 = !DILocation(line: 137, column: 10, scope: !2222)
!2227 = !DILocation(line: 137, column: 3, scope: !2222)
!2228 = distinct !DISubprogram(name: "tolower", scope: !2229, file: !2229, line: 207, type: !2174, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2230)
!2229 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2230 = !{!2231}
!2231 = !DILocalVariable(name: "__c", arg: 1, scope: !2228, file: !2229, line: 207, type: !499)
!2232 = !DILocation(line: 0, scope: !2228)
!2233 = !DILocation(line: 209, column: 22, scope: !2228)
!2234 = !DILocation(line: 209, column: 39, scope: !2228)
!2235 = !DILocation(line: 209, column: 38, scope: !2228)
!2236 = !DILocation(line: 209, column: 37, scope: !2228)
!2237 = !DILocation(line: 209, column: 10, scope: !2228)
!2238 = !DILocation(line: 209, column: 3, scope: !2228)
!2239 = distinct !DISubprogram(name: "toupper", scope: !2229, file: !2229, line: 213, type: !2174, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2240)
!2240 = !{!2241}
!2241 = !DILocalVariable(name: "__c", arg: 1, scope: !2239, file: !2229, line: 213, type: !499)
!2242 = !DILocation(line: 0, scope: !2239)
!2243 = !DILocation(line: 215, column: 22, scope: !2239)
!2244 = !DILocation(line: 215, column: 39, scope: !2239)
!2245 = !DILocation(line: 215, column: 38, scope: !2239)
!2246 = !DILocation(line: 215, column: 37, scope: !2239)
!2247 = !DILocation(line: 215, column: 10, scope: !2239)
!2248 = !DILocation(line: 215, column: 3, scope: !2239)
!2249 = distinct !DISubprogram(name: "atoi", scope: !2250, file: !2250, line: 361, type: !2251, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2253)
!2250 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!499, !504}
!2253 = !{!2254}
!2254 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2249, file: !2250, line: 361, type: !504)
!2255 = !DILocation(line: 0, scope: !2249)
!2256 = !DILocation(line: 363, column: 16, scope: !2249)
!2257 = !DILocation(line: 363, column: 10, scope: !2249)
!2258 = !DILocation(line: 363, column: 3, scope: !2249)
!2259 = distinct !DISubprogram(name: "atol", scope: !2250, file: !2250, line: 366, type: !2260, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2262)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!562, !504}
!2262 = !{!2263}
!2263 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2259, file: !2250, line: 366, type: !504)
!2264 = !DILocation(line: 0, scope: !2259)
!2265 = !DILocation(line: 368, column: 10, scope: !2259)
!2266 = !DILocation(line: 368, column: 3, scope: !2259)
!2267 = distinct !DISubprogram(name: "atoll", scope: !2250, file: !2250, line: 373, type: !2268, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2271)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!2270, !504}
!2270 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2271 = !{!2272}
!2272 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2267, file: !2250, line: 373, type: !504)
!2273 = !DILocation(line: 0, scope: !2267)
!2274 = !DILocation(line: 375, column: 10, scope: !2267)
!2275 = !DILocation(line: 375, column: 3, scope: !2267)
!2276 = distinct !DISubprogram(name: "bsearch", scope: !2277, file: !2277, line: 20, type: !2278, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2281)
!2277 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!503, !1325, !1325, !975, !975, !2280}
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2250, line: 808, baseType: !1329)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2282 = !DILocalVariable(name: "__key", arg: 1, scope: !2276, file: !2277, line: 20, type: !1325)
!2283 = !DILocalVariable(name: "__base", arg: 2, scope: !2276, file: !2277, line: 20, type: !1325)
!2284 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2276, file: !2277, line: 20, type: !975)
!2285 = !DILocalVariable(name: "__size", arg: 4, scope: !2276, file: !2277, line: 20, type: !975)
!2286 = !DILocalVariable(name: "__compar", arg: 5, scope: !2276, file: !2277, line: 21, type: !2280)
!2287 = !DILocalVariable(name: "__l", scope: !2276, file: !2277, line: 23, type: !975)
!2288 = !DILocalVariable(name: "__u", scope: !2276, file: !2277, line: 23, type: !975)
!2289 = !DILocalVariable(name: "__idx", scope: !2276, file: !2277, line: 23, type: !975)
!2290 = !DILocalVariable(name: "__p", scope: !2276, file: !2277, line: 24, type: !1325)
!2291 = !DILocalVariable(name: "__comparison", scope: !2276, file: !2277, line: 25, type: !499)
!2292 = !DILocation(line: 0, scope: !2276)
!2293 = !DILocation(line: 29, column: 3, scope: !2276)
!2294 = !DILocation(line: 27, column: 7, scope: !2276)
!2295 = !DILocation(line: 29, column: 14, scope: !2276)
!2296 = !DILocation(line: 31, column: 20, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2276, file: !2277, line: 30, column: 5)
!2298 = !DILocation(line: 31, column: 27, scope: !2297)
!2299 = !DILocation(line: 32, column: 56, scope: !2297)
!2300 = !DILocation(line: 32, column: 47, scope: !2297)
!2301 = !DILocation(line: 33, column: 22, scope: !2297)
!2302 = !DILocation(line: 34, column: 24, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2297, file: !2277, line: 34, column: 11)
!2304 = !DILocation(line: 34, column: 11, scope: !2297)
!2305 = !DILocation(line: 36, column: 29, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2303, file: !2277, line: 36, column: 16)
!2307 = !DILocation(line: 36, column: 16, scope: !2303)
!2308 = !DILocation(line: 37, column: 14, scope: !2306)
!2309 = distinct !{!2309, !2293, !2310}
!2310 = !DILocation(line: 40, column: 5, scope: !2276)
!2311 = !DILocation(line: 43, column: 1, scope: !2276)
!2312 = distinct !DISubprogram(name: "atof", scope: !2313, file: !2313, line: 25, type: !2314, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2317)
!2313 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!2316, !504}
!2316 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2317 = !{!2318}
!2318 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2312, file: !2313, line: 25, type: !504)
!2319 = !DILocation(line: 0, scope: !2312)
!2320 = !DILocation(line: 27, column: 10, scope: !2312)
!2321 = !DILocation(line: 27, column: 3, scope: !2312)
!2322 = distinct !DISubprogram(name: "strtoimax", scope: !2323, file: !2323, line: 324, type: !2324, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2330)
!2323 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!2326, !2083, !2329, !499}
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2327, line: 101, baseType: !2328)
!2327 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2135, line: 72, baseType: !562)
!2329 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !500)
!2330 = !{!2331, !2332, !2333}
!2331 = !DILocalVariable(name: "nptr", arg: 1, scope: !2322, file: !2323, line: 324, type: !2083)
!2332 = !DILocalVariable(name: "endptr", arg: 2, scope: !2322, file: !2323, line: 324, type: !2329)
!2333 = !DILocalVariable(name: "base", arg: 3, scope: !2322, file: !2323, line: 324, type: !499)
!2334 = !DILocation(line: 0, scope: !2322)
!2335 = !DILocation(line: 327, column: 10, scope: !2322)
!2336 = !DILocation(line: 327, column: 3, scope: !2322)
!2337 = distinct !DISubprogram(name: "strtoumax", scope: !2323, file: !2323, line: 336, type: !2338, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2342)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!2340, !2083, !2329, !499}
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2327, line: 102, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2135, line: 73, baseType: !560)
!2342 = !{!2343, !2344, !2345}
!2343 = !DILocalVariable(name: "nptr", arg: 1, scope: !2337, file: !2323, line: 336, type: !2083)
!2344 = !DILocalVariable(name: "endptr", arg: 2, scope: !2337, file: !2323, line: 336, type: !2329)
!2345 = !DILocalVariable(name: "base", arg: 3, scope: !2337, file: !2323, line: 336, type: !499)
!2346 = !DILocation(line: 0, scope: !2337)
!2347 = !DILocation(line: 339, column: 10, scope: !2337)
!2348 = !DILocation(line: 339, column: 3, scope: !2337)
!2349 = distinct !DISubprogram(name: "wcstoimax", scope: !2323, file: !2323, line: 348, type: !2350, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2359)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!2326, !2352, !2356, !499}
!2352 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2353)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2355)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2323, line: 34, baseType: !499)
!2356 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2357)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2359 = !{!2360, !2361, !2362}
!2360 = !DILocalVariable(name: "nptr", arg: 1, scope: !2349, file: !2323, line: 348, type: !2352)
!2361 = !DILocalVariable(name: "endptr", arg: 2, scope: !2349, file: !2323, line: 348, type: !2356)
!2362 = !DILocalVariable(name: "base", arg: 3, scope: !2349, file: !2323, line: 348, type: !499)
!2363 = !DILocation(line: 0, scope: !2349)
!2364 = !DILocation(line: 351, column: 10, scope: !2349)
!2365 = !DILocation(line: 351, column: 3, scope: !2349)
!2366 = distinct !DISubprogram(name: "wcstoumax", scope: !2323, file: !2323, line: 362, type: !2367, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2369)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!2340, !2352, !2356, !499}
!2369 = !{!2370, !2371, !2372}
!2370 = !DILocalVariable(name: "nptr", arg: 1, scope: !2366, file: !2323, line: 362, type: !2352)
!2371 = !DILocalVariable(name: "endptr", arg: 2, scope: !2366, file: !2323, line: 362, type: !2356)
!2372 = !DILocalVariable(name: "base", arg: 3, scope: !2366, file: !2323, line: 362, type: !499)
!2373 = !DILocation(line: 0, scope: !2366)
!2374 = !DILocation(line: 365, column: 10, scope: !2366)
!2375 = !DILocation(line: 365, column: 3, scope: !2366)
!2376 = distinct !DISubprogram(name: "stat", scope: !2377, file: !2377, line: 453, type: !2378, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2415)
!2377 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!499, !504, !2380}
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2382, line: 46, size: 1152, elements: !2383)
!2382 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2383 = !{!2384, !2386, !2388, !2390, !2392, !2394, !2396, !2397, !2398, !2399, !2401, !2403, !2411, !2412, !2413}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2381, file: !2382, line: 48, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2135, line: 145, baseType: !560)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2381, file: !2382, line: 53, baseType: !2387, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2135, line: 148, baseType: !560)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2381, file: !2382, line: 61, baseType: !2389, size: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2135, line: 151, baseType: !560)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2381, file: !2382, line: 62, baseType: !2391, size: 32, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2135, line: 150, baseType: !7)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2381, file: !2382, line: 64, baseType: !2393, size: 32, offset: 224)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2135, line: 146, baseType: !7)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2381, file: !2382, line: 65, baseType: !2395, size: 32, offset: 256)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2135, line: 147, baseType: !7)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2381, file: !2382, line: 67, baseType: !499, size: 32, offset: 288)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2381, file: !2382, line: 69, baseType: !2385, size: 64, offset: 320)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2381, file: !2382, line: 74, baseType: !2134, size: 64, offset: 384)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2381, file: !2382, line: 78, baseType: !2400, size: 64, offset: 448)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2135, line: 174, baseType: !562)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2381, file: !2382, line: 80, baseType: !2402, size: 64, offset: 512)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2135, line: 179, baseType: !562)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2381, file: !2382, line: 91, baseType: !2404, size: 128, offset: 576)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2405, line: 10, size: 128, elements: !2406)
!2405 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2406 = !{!2407, !2409}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2404, file: !2405, line: 12, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2135, line: 160, baseType: !562)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2404, file: !2405, line: 16, baseType: !2410, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2135, line: 196, baseType: !562)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2381, file: !2382, line: 92, baseType: !2404, size: 128, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2381, file: !2382, line: 93, baseType: !2404, size: 128, offset: 832)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2381, file: !2382, line: 106, baseType: !2414, size: 192, offset: 960)
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2410, size: 192, elements: !580)
!2415 = !{!2416, !2417}
!2416 = !DILocalVariable(name: "__path", arg: 1, scope: !2376, file: !2377, line: 453, type: !504)
!2417 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2376, file: !2377, line: 453, type: !2380)
!2418 = !DILocation(line: 0, scope: !2376)
!2419 = !DILocation(line: 455, column: 10, scope: !2376)
!2420 = !DILocation(line: 455, column: 3, scope: !2376)
!2421 = distinct !DISubprogram(name: "lstat", scope: !2377, file: !2377, line: 460, type: !2378, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2422)
!2422 = !{!2423, !2424}
!2423 = !DILocalVariable(name: "__path", arg: 1, scope: !2421, file: !2377, line: 460, type: !504)
!2424 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2421, file: !2377, line: 460, type: !2380)
!2425 = !DILocation(line: 0, scope: !2421)
!2426 = !DILocation(line: 462, column: 10, scope: !2421)
!2427 = !DILocation(line: 462, column: 3, scope: !2421)
!2428 = distinct !DISubprogram(name: "fstat", scope: !2377, file: !2377, line: 467, type: !2429, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2431)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!499, !499, !2380}
!2431 = !{!2432, !2433}
!2432 = !DILocalVariable(name: "__fd", arg: 1, scope: !2428, file: !2377, line: 467, type: !499)
!2433 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2428, file: !2377, line: 467, type: !2380)
!2434 = !DILocation(line: 0, scope: !2428)
!2435 = !DILocation(line: 469, column: 10, scope: !2428)
!2436 = !DILocation(line: 469, column: 3, scope: !2428)
!2437 = distinct !DISubprogram(name: "fstatat", scope: !2377, file: !2377, line: 474, type: !2438, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2440)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!499, !499, !504, !2380, !499}
!2440 = !{!2441, !2442, !2443, !2444}
!2441 = !DILocalVariable(name: "__fd", arg: 1, scope: !2437, file: !2377, line: 474, type: !499)
!2442 = !DILocalVariable(name: "__filename", arg: 2, scope: !2437, file: !2377, line: 474, type: !504)
!2443 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2437, file: !2377, line: 474, type: !2380)
!2444 = !DILocalVariable(name: "__flag", arg: 4, scope: !2437, file: !2377, line: 474, type: !499)
!2445 = !DILocation(line: 0, scope: !2437)
!2446 = !DILocation(line: 477, column: 10, scope: !2437)
!2447 = !DILocation(line: 477, column: 3, scope: !2437)
!2448 = distinct !DISubprogram(name: "mknod", scope: !2377, file: !2377, line: 483, type: !2449, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!499, !504, !2391, !2385}
!2451 = !{!2452, !2453, !2454}
!2452 = !DILocalVariable(name: "__path", arg: 1, scope: !2448, file: !2377, line: 483, type: !504)
!2453 = !DILocalVariable(name: "__mode", arg: 2, scope: !2448, file: !2377, line: 483, type: !2391)
!2454 = !DILocalVariable(name: "__dev", arg: 3, scope: !2448, file: !2377, line: 483, type: !2385)
!2455 = !DILocation(line: 0, scope: !2448)
!2456 = !DILocation(line: 485, column: 10, scope: !2448)
!2457 = !DILocation(line: 485, column: 3, scope: !2448)
!2458 = distinct !DISubprogram(name: "mknodat", scope: !2377, file: !2377, line: 491, type: !2459, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2461)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!499, !499, !504, !2391, !2385}
!2461 = !{!2462, !2463, !2464, !2465}
!2462 = !DILocalVariable(name: "__fd", arg: 1, scope: !2458, file: !2377, line: 491, type: !499)
!2463 = !DILocalVariable(name: "__path", arg: 2, scope: !2458, file: !2377, line: 491, type: !504)
!2464 = !DILocalVariable(name: "__mode", arg: 3, scope: !2458, file: !2377, line: 491, type: !2391)
!2465 = !DILocalVariable(name: "__dev", arg: 4, scope: !2458, file: !2377, line: 491, type: !2385)
!2466 = !DILocation(line: 0, scope: !2458)
!2467 = !DILocation(line: 494, column: 10, scope: !2458)
!2468 = !DILocation(line: 494, column: 3, scope: !2458)
!2469 = distinct !DISubprogram(name: "stat64", scope: !2377, file: !2377, line: 502, type: !2470, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2492)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!499, !504, !2472}
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2382, line: 119, size: 1152, elements: !2474)
!2474 = !{!2475, !2476, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2488, !2489, !2490, !2491}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2473, file: !2382, line: 121, baseType: !2385, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2473, file: !2382, line: 123, baseType: !2477, size: 64, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2135, line: 149, baseType: !560)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2473, file: !2382, line: 124, baseType: !2389, size: 64, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2473, file: !2382, line: 125, baseType: !2391, size: 32, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2473, file: !2382, line: 132, baseType: !2393, size: 32, offset: 224)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2473, file: !2382, line: 133, baseType: !2395, size: 32, offset: 256)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2473, file: !2382, line: 135, baseType: !499, size: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2473, file: !2382, line: 136, baseType: !2385, size: 64, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2473, file: !2382, line: 137, baseType: !2134, size: 64, offset: 384)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2473, file: !2382, line: 143, baseType: !2400, size: 64, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2473, file: !2382, line: 144, baseType: !2487, size: 64, offset: 512)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2135, line: 180, baseType: !562)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2473, file: !2382, line: 152, baseType: !2404, size: 128, offset: 576)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2473, file: !2382, line: 153, baseType: !2404, size: 128, offset: 704)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2473, file: !2382, line: 154, baseType: !2404, size: 128, offset: 832)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2473, file: !2382, line: 164, baseType: !2414, size: 192, offset: 960)
!2492 = !{!2493, !2494}
!2493 = !DILocalVariable(name: "__path", arg: 1, scope: !2469, file: !2377, line: 502, type: !504)
!2494 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2469, file: !2377, line: 502, type: !2472)
!2495 = !DILocation(line: 0, scope: !2469)
!2496 = !DILocation(line: 504, column: 10, scope: !2469)
!2497 = !DILocation(line: 504, column: 3, scope: !2469)
!2498 = distinct !DISubprogram(name: "lstat64", scope: !2377, file: !2377, line: 509, type: !2470, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2499)
!2499 = !{!2500, !2501}
!2500 = !DILocalVariable(name: "__path", arg: 1, scope: !2498, file: !2377, line: 509, type: !504)
!2501 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2498, file: !2377, line: 509, type: !2472)
!2502 = !DILocation(line: 0, scope: !2498)
!2503 = !DILocation(line: 511, column: 10, scope: !2498)
!2504 = !DILocation(line: 511, column: 3, scope: !2498)
!2505 = distinct !DISubprogram(name: "fstat64", scope: !2377, file: !2377, line: 516, type: !2506, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2508)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!499, !499, !2472}
!2508 = !{!2509, !2510}
!2509 = !DILocalVariable(name: "__fd", arg: 1, scope: !2505, file: !2377, line: 516, type: !499)
!2510 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2505, file: !2377, line: 516, type: !2472)
!2511 = !DILocation(line: 0, scope: !2505)
!2512 = !DILocation(line: 518, column: 10, scope: !2505)
!2513 = !DILocation(line: 518, column: 3, scope: !2505)
!2514 = distinct !DISubprogram(name: "fstatat64", scope: !2377, file: !2377, line: 523, type: !2515, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2517)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!499, !499, !504, !2472, !499}
!2517 = !{!2518, !2519, !2520, !2521}
!2518 = !DILocalVariable(name: "__fd", arg: 1, scope: !2514, file: !2377, line: 523, type: !499)
!2519 = !DILocalVariable(name: "__filename", arg: 2, scope: !2514, file: !2377, line: 523, type: !504)
!2520 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2514, file: !2377, line: 523, type: !2472)
!2521 = !DILocalVariable(name: "__flag", arg: 4, scope: !2514, file: !2377, line: 523, type: !499)
!2522 = !DILocation(line: 0, scope: !2514)
!2523 = !DILocation(line: 526, column: 10, scope: !2514)
!2524 = !DILocation(line: 526, column: 3, scope: !2514)
!2525 = distinct !DISubprogram(name: "dump_data_references", scope: !3, file: !3, line: 152, type: !2526, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2528)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2108, !2010}
!2528 = !{!2529, !2530, !2531, !2532}
!2529 = !DILocalVariable(name: "file", arg: 1, scope: !2525, file: !3, line: 152, type: !2108)
!2530 = !DILocalVariable(name: "datarefs", arg: 2, scope: !2525, file: !3, line: 152, type: !2010)
!2531 = !DILocalVariable(name: "i", scope: !2525, file: !3, line: 154, type: !7)
!2532 = !DILocalVariable(name: "dr", scope: !2525, file: !3, line: 155, type: !1860)
!2533 = !DILocation(line: 0, scope: !2525)
!2534 = !DILocation(line: 155, column: 3, scope: !2525)
!2535 = !DILocation(line: 0, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 157, column: 3)
!2537 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 157, column: 3)
!2538 = !DILocation(line: 157, column: 8, scope: !2537)
!2539 = !DILocation(line: 0, scope: !2537)
!2540 = !DILocation(line: 157, column: 15, scope: !2536)
!2541 = !DILocation(line: 157, column: 3, scope: !2537)
!2542 = !DILocation(line: 158, column: 32, scope: !2536)
!2543 = !DILocation(line: 158, column: 5, scope: !2536)
!2544 = !DILocation(line: 157, column: 65, scope: !2536)
!2545 = !DILocation(line: 157, column: 3, scope: !2536)
!2546 = distinct !{!2546, !2541, !2547}
!2547 = !DILocation(line: 158, column: 34, scope: !2537)
!2548 = !DILocation(line: 159, column: 1, scope: !2525)
!2549 = distinct !DISubprogram(name: "VEC_data_reference_p_base_iterate", scope: !391, file: !391, line: 208, type: !2550, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2555)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!499, !2552, !7, !2554}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2015)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!2555 = !{!2556, !2557, !2558}
!2556 = !DILocalVariable(name: "vec_", arg: 1, scope: !2549, file: !391, line: 208, type: !2552)
!2557 = !DILocalVariable(name: "ix_", arg: 2, scope: !2549, file: !391, line: 208, type: !7)
!2558 = !DILocalVariable(name: "ptr", arg: 3, scope: !2549, file: !391, line: 208, type: !2554)
!2559 = !DILocation(line: 0, scope: !2549)
!2560 = !DILocation(line: 208, column: 1, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2549, file: !391, line: 208, column: 1)
!2562 = !DILocation(line: 208, column: 1, scope: !2549)
!2563 = !DILocation(line: 208, column: 1, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2561, file: !391, line: 208, column: 1)
!2565 = !DILocation(line: 208, column: 1, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2561, file: !391, line: 208, column: 1)
!2567 = !DILocation(line: 0, scope: !2561)
!2568 = distinct !DISubprogram(name: "dump_data_reference", scope: !3, file: !3, line: 201, type: !2569, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{null, !2108, !1860}
!2571 = !{!2572, !2573, !2574}
!2572 = !DILocalVariable(name: "outf", arg: 1, scope: !2568, file: !3, line: 201, type: !2108)
!2573 = !DILocalVariable(name: "dr", arg: 2, scope: !2568, file: !3, line: 202, type: !1860)
!2574 = !DILocalVariable(name: "i", scope: !2568, file: !3, line: 204, type: !7)
!2575 = !DILocation(line: 0, scope: !2568)
!2576 = !DILocation(line: 206, column: 3, scope: !2568)
!2577 = !DILocation(line: 207, column: 28, scope: !2568)
!2578 = !DILocation(line: 207, column: 3, scope: !2568)
!2579 = !DILocation(line: 208, column: 3, scope: !2568)
!2580 = !DILocation(line: 209, column: 29, scope: !2568)
!2581 = !DILocation(line: 209, column: 3, scope: !2568)
!2582 = !DILocation(line: 210, column: 3, scope: !2568)
!2583 = !DILocation(line: 211, column: 29, scope: !2568)
!2584 = !DILocation(line: 211, column: 3, scope: !2568)
!2585 = !DILocation(line: 0, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 213, column: 3)
!2587 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 213, column: 3)
!2588 = !DILocation(line: 213, column: 8, scope: !2587)
!2589 = !DILocation(line: 0, scope: !2587)
!2590 = !DILocation(line: 213, column: 19, scope: !2586)
!2591 = !DILocation(line: 213, column: 17, scope: !2586)
!2592 = !DILocation(line: 213, column: 3, scope: !2587)
!2593 = !DILocation(line: 215, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 214, column: 5)
!2595 = !DILocation(line: 216, column: 33, scope: !2594)
!2596 = !DILocation(line: 216, column: 7, scope: !2594)
!2597 = !DILocation(line: 213, column: 44, scope: !2586)
!2598 = !DILocation(line: 213, column: 3, scope: !2586)
!2599 = distinct !{!2599, !2592, !2600}
!2600 = !DILocation(line: 217, column: 5, scope: !2587)
!2601 = !DILocation(line: 218, column: 3, scope: !2568)
!2602 = !DILocation(line: 219, column: 1, scope: !2568)
!2603 = distinct !DISubprogram(name: "debug_data_references", scope: !3, file: !3, line: 164, type: !2604, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2606)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !2010}
!2606 = !{!2607}
!2607 = !DILocalVariable(name: "datarefs", arg: 1, scope: !2603, file: !3, line: 164, type: !2010)
!2608 = !DILocation(line: 0, scope: !2603)
!2609 = !DILocation(line: 166, column: 25, scope: !2603)
!2610 = !DILocation(line: 166, column: 3, scope: !2603)
!2611 = !DILocation(line: 167, column: 1, scope: !2603)
!2612 = distinct !DISubprogram(name: "debug_data_dependence_relations", scope: !3, file: !3, line: 172, type: !2613, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2615)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{null, !1981}
!2615 = !{!2616}
!2616 = !DILocalVariable(name: "ddrs", arg: 1, scope: !2612, file: !3, line: 172, type: !1981)
!2617 = !DILocation(line: 0, scope: !2612)
!2618 = !DILocation(line: 174, column: 35, scope: !2612)
!2619 = !DILocation(line: 174, column: 3, scope: !2612)
!2620 = !DILocation(line: 175, column: 1, scope: !2612)
!2621 = distinct !DISubprogram(name: "dump_data_dependence_relations", scope: !3, file: !3, line: 180, type: !2622, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2624)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !2108, !1981}
!2624 = !{!2625, !2626, !2627, !2628}
!2625 = !DILocalVariable(name: "file", arg: 1, scope: !2621, file: !3, line: 180, type: !2108)
!2626 = !DILocalVariable(name: "ddrs", arg: 2, scope: !2621, file: !3, line: 181, type: !1981)
!2627 = !DILocalVariable(name: "i", scope: !2621, file: !3, line: 183, type: !7)
!2628 = !DILocalVariable(name: "ddr", scope: !2621, file: !3, line: 184, type: !1932)
!2629 = !DILocation(line: 0, scope: !2621)
!2630 = !DILocation(line: 184, column: 3, scope: !2621)
!2631 = !DILocation(line: 0, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 186, column: 3)
!2633 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 186, column: 3)
!2634 = !DILocation(line: 186, column: 8, scope: !2633)
!2635 = !DILocation(line: 0, scope: !2633)
!2636 = !DILocation(line: 186, column: 15, scope: !2632)
!2637 = !DILocation(line: 186, column: 3, scope: !2633)
!2638 = !DILocation(line: 187, column: 42, scope: !2632)
!2639 = !DILocation(line: 187, column: 5, scope: !2632)
!2640 = !DILocation(line: 186, column: 51, scope: !2632)
!2641 = !DILocation(line: 186, column: 3, scope: !2632)
!2642 = distinct !{!2642, !2637, !2643}
!2643 = !DILocation(line: 187, column: 45, scope: !2633)
!2644 = !DILocation(line: 188, column: 1, scope: !2621)
!2645 = distinct !DISubprogram(name: "VEC_ddr_p_base_iterate", scope: !391, file: !391, line: 332, type: !2646, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2651)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!499, !2648, !7, !2650}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1986)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!2651 = !{!2652, !2653, !2654}
!2652 = !DILocalVariable(name: "vec_", arg: 1, scope: !2645, file: !391, line: 332, type: !2648)
!2653 = !DILocalVariable(name: "ix_", arg: 2, scope: !2645, file: !391, line: 332, type: !7)
!2654 = !DILocalVariable(name: "ptr", arg: 3, scope: !2645, file: !391, line: 332, type: !2650)
!2655 = !DILocation(line: 0, scope: !2645)
!2656 = !DILocation(line: 332, column: 1, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2645, file: !391, line: 332, column: 1)
!2658 = !DILocation(line: 332, column: 1, scope: !2645)
!2659 = !DILocation(line: 332, column: 1, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2657, file: !391, line: 332, column: 1)
!2661 = !DILocation(line: 332, column: 1, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2657, file: !391, line: 332, column: 1)
!2663 = !DILocation(line: 0, scope: !2657)
!2664 = distinct !DISubprogram(name: "dump_data_dependence_relation", scope: !3, file: !3, line: 375, type: !2665, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2667)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{null, !2108, !1932}
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2676}
!2668 = !DILocalVariable(name: "outf", arg: 1, scope: !2664, file: !3, line: 375, type: !2108)
!2669 = !DILocalVariable(name: "ddr", arg: 2, scope: !2664, file: !3, line: 376, type: !1932)
!2670 = !DILocalVariable(name: "dra", scope: !2664, file: !3, line: 378, type: !1860)
!2671 = !DILocalVariable(name: "drb", scope: !2664, file: !3, line: 378, type: !1860)
!2672 = !DILocalVariable(name: "i", scope: !2673, file: !3, line: 411, type: !7)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 410, column: 5)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 409, column: 12)
!2675 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 406, column: 7)
!2676 = !DILocalVariable(name: "loopi", scope: !2673, file: !3, line: 412, type: !1045)
!2677 = !DILocation(line: 0, scope: !2664)
!2678 = !DILocation(line: 380, column: 3, scope: !2664)
!2679 = !DILocation(line: 382, column: 12, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 382, column: 7)
!2681 = !DILocation(line: 382, column: 15, scope: !2680)
!2682 = !DILocation(line: 382, column: 42, scope: !2680)
!2683 = !DILocation(line: 382, column: 39, scope: !2680)
!2684 = !DILocation(line: 382, column: 7, scope: !2664)
!2685 = !DILocation(line: 386, column: 10, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 385, column: 2)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 384, column: 11)
!2688 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 383, column: 5)
!2689 = !DILocation(line: 387, column: 10, scope: !2686)
!2690 = !DILocation(line: 388, column: 8, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 388, column: 8)
!2692 = !DILocation(line: 388, column: 8, scope: !2686)
!2693 = !DILocation(line: 389, column: 6, scope: !2691)
!2694 = !DILocation(line: 391, column: 6, scope: !2691)
!2695 = !DILocation(line: 392, column: 8, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 392, column: 8)
!2697 = !DILocation(line: 392, column: 8, scope: !2686)
!2698 = !DILocation(line: 393, column: 6, scope: !2696)
!2699 = !DILocation(line: 395, column: 6, scope: !2696)
!2700 = !DILocation(line: 397, column: 7, scope: !2688)
!2701 = !DILocation(line: 398, column: 7, scope: !2688)
!2702 = !DILocation(line: 401, column: 9, scope: !2664)
!2703 = !DILocation(line: 402, column: 9, scope: !2664)
!2704 = !DILocation(line: 403, column: 3, scope: !2664)
!2705 = !DILocation(line: 404, column: 3, scope: !2664)
!2706 = !DILocation(line: 406, column: 7, scope: !2675)
!2707 = !DILocation(line: 406, column: 34, scope: !2675)
!2708 = !DILocation(line: 406, column: 31, scope: !2675)
!2709 = !DILocation(line: 406, column: 7, scope: !2664)
!2710 = !DILocation(line: 407, column: 5, scope: !2675)
!2711 = !DILocation(line: 409, column: 36, scope: !2674)
!2712 = !DILocation(line: 409, column: 12, scope: !2675)
!2713 = !DILocation(line: 412, column: 7, scope: !2673)
!2714 = !DILocation(line: 0, scope: !2673)
!2715 = !DILocation(line: 0, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 414, column: 7)
!2717 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 414, column: 7)
!2718 = !DILocation(line: 0, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 415, column: 2)
!2720 = !DILocation(line: 414, column: 12, scope: !2717)
!2721 = !DILocation(line: 0, scope: !2717)
!2722 = !DILocation(line: 414, column: 23, scope: !2716)
!2723 = !DILocation(line: 414, column: 21, scope: !2716)
!2724 = !DILocation(line: 414, column: 7, scope: !2717)
!2725 = !DILocation(line: 416, column: 4, scope: !2719)
!2726 = !DILocation(line: 417, column: 30, scope: !2719)
!2727 = !DILocation(line: 417, column: 4, scope: !2719)
!2728 = !DILocation(line: 418, column: 4, scope: !2719)
!2729 = !DILocation(line: 419, column: 30, scope: !2719)
!2730 = !DILocation(line: 419, column: 4, scope: !2719)
!2731 = !DILocation(line: 420, column: 26, scope: !2719)
!2732 = !DILocation(line: 420, column: 4, scope: !2719)
!2733 = !DILocation(line: 414, column: 50, scope: !2716)
!2734 = !DILocation(line: 414, column: 7, scope: !2716)
!2735 = distinct !{!2735, !2724, !2736}
!2736 = !DILocation(line: 421, column: 2, scope: !2717)
!2737 = !DILocation(line: 423, column: 50, scope: !2673)
!2738 = !DILocation(line: 423, column: 7, scope: !2673)
!2739 = !DILocation(line: 424, column: 7, scope: !2673)
!2740 = !DILocation(line: 0, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 425, column: 7)
!2742 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 425, column: 7)
!2743 = !DILocation(line: 425, column: 12, scope: !2742)
!2744 = !DILocation(line: 0, scope: !2742)
!2745 = !DILocation(line: 425, column: 19, scope: !2741)
!2746 = !DILocation(line: 425, column: 7, scope: !2742)
!2747 = !DILocation(line: 426, column: 24, scope: !2741)
!2748 = !DILocation(line: 426, column: 31, scope: !2741)
!2749 = !DILocation(line: 426, column: 2, scope: !2741)
!2750 = !DILocation(line: 425, column: 73, scope: !2741)
!2751 = !DILocation(line: 425, column: 7, scope: !2741)
!2752 = distinct !{!2752, !2746, !2753}
!2753 = !DILocation(line: 426, column: 34, scope: !2742)
!2754 = !DILocation(line: 427, column: 7, scope: !2673)
!2755 = !DILocation(line: 0, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 429, column: 7)
!2757 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 429, column: 7)
!2758 = !DILocation(line: 429, column: 12, scope: !2757)
!2759 = !DILocation(line: 0, scope: !2757)
!2760 = !DILocation(line: 429, column: 23, scope: !2756)
!2761 = !DILocation(line: 429, column: 21, scope: !2756)
!2762 = !DILocation(line: 429, column: 7, scope: !2757)
!2763 = !DILocation(line: 0, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 436, column: 7)
!2765 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 436, column: 7)
!2766 = !DILocation(line: 436, column: 7, scope: !2765)
!2767 = !DILocation(line: 431, column: 4, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 430, column: 2)
!2769 = !DILocation(line: 432, column: 31, scope: !2768)
!2770 = !DILocation(line: 433, column: 11, scope: !2768)
!2771 = !DILocation(line: 432, column: 4, scope: !2768)
!2772 = !DILocation(line: 429, column: 50, scope: !2756)
!2773 = !DILocation(line: 429, column: 7, scope: !2756)
!2774 = distinct !{!2774, !2762, !2775}
!2775 = !DILocation(line: 434, column: 2, scope: !2757)
!2776 = !DILocation(line: 0, scope: !2765)
!2777 = !DILocation(line: 436, column: 23, scope: !2764)
!2778 = !DILocation(line: 436, column: 21, scope: !2764)
!2779 = !DILocation(line: 438, column: 4, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 437, column: 2)
!2781 = !DILocation(line: 439, column: 34, scope: !2780)
!2782 = !DILocation(line: 440, column: 7, scope: !2780)
!2783 = !DILocation(line: 439, column: 4, scope: !2780)
!2784 = !DILocation(line: 436, column: 49, scope: !2764)
!2785 = !DILocation(line: 436, column: 7, scope: !2764)
!2786 = distinct !{!2786, !2766, !2787}
!2787 = !DILocation(line: 441, column: 2, scope: !2765)
!2788 = !DILocation(line: 442, column: 5, scope: !2674)
!2789 = !DILocation(line: 442, column: 5, scope: !2673)
!2790 = !DILocation(line: 444, column: 3, scope: !2664)
!2791 = !DILocation(line: 445, column: 1, scope: !2664)
!2792 = distinct !DISubprogram(name: "debug_data_reference", scope: !3, file: !3, line: 193, type: !2793, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2795)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !1860}
!2795 = !{!2796}
!2796 = !DILocalVariable(name: "dr", arg: 1, scope: !2792, file: !3, line: 193, type: !1860)
!2797 = !DILocation(line: 0, scope: !2792)
!2798 = !DILocation(line: 195, column: 24, scope: !2792)
!2799 = !DILocation(line: 195, column: 3, scope: !2792)
!2800 = !DILocation(line: 196, column: 1, scope: !2792)
!2801 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !164, file: !164, line: 182, type: !2802, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2806)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!7, !2804}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!2806 = !{!2807}
!2807 = !DILocalVariable(name: "vec_", arg: 1, scope: !2801, file: !164, line: 182, type: !2804)
!2808 = !DILocation(line: 0, scope: !2801)
!2809 = !DILocation(line: 182, column: 1, scope: !2801)
!2810 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !164, file: !164, line: 182, type: !2811, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2813)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!506, !2804, !7}
!2813 = !{!2814, !2815}
!2814 = !DILocalVariable(name: "vec_", arg: 1, scope: !2810, file: !164, line: 182, type: !2804)
!2815 = !DILocalVariable(name: "ix_", arg: 2, scope: !2810, file: !164, line: 182, type: !7)
!2816 = !DILocation(line: 0, scope: !2810)
!2817 = !DILocation(line: 182, column: 1, scope: !2810)
!2818 = distinct !DISubprogram(name: "dump_subscript", scope: !3, file: !3, line: 263, type: !2819, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2821)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{null, !2108, !1952}
!2821 = !{!2822, !2823, !2824, !2825, !2828}
!2822 = !DILocalVariable(name: "outf", arg: 1, scope: !2818, file: !3, line: 263, type: !2108)
!2823 = !DILocalVariable(name: "subscript", arg: 2, scope: !2818, file: !3, line: 263, type: !1952)
!2824 = !DILocalVariable(name: "cf", scope: !2818, file: !3, line: 265, type: !1956)
!2825 = !DILocalVariable(name: "last_iteration", scope: !2826, file: !3, line: 272, type: !506)
!2826 = distinct !DILexicalBlock(scope: !2827, file: !3, line: 271, column: 5)
!2827 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 270, column: 7)
!2828 = !DILocalVariable(name: "last_iteration", scope: !2829, file: !3, line: 282, type: !506)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 281, column: 5)
!2830 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 280, column: 7)
!2831 = !DILocation(line: 0, scope: !2818)
!2832 = !DILocation(line: 265, column: 27, scope: !2818)
!2833 = !DILocation(line: 267, column: 3, scope: !2818)
!2834 = !DILocation(line: 268, column: 3, scope: !2818)
!2835 = !DILocation(line: 269, column: 3, scope: !2818)
!2836 = !DILocation(line: 270, column: 7, scope: !2827)
!2837 = !DILocation(line: 270, column: 7, scope: !2818)
!2838 = !DILocation(line: 272, column: 29, scope: !2826)
!2839 = !DILocation(line: 0, scope: !2826)
!2840 = !DILocation(line: 273, column: 7, scope: !2826)
!2841 = !DILocation(line: 274, column: 7, scope: !2826)
!2842 = !DILocation(line: 275, column: 5, scope: !2826)
!2843 = !DILocation(line: 277, column: 8, scope: !2818)
!2844 = !DILocation(line: 278, column: 3, scope: !2818)
!2845 = !DILocation(line: 279, column: 3, scope: !2818)
!2846 = !DILocation(line: 280, column: 7, scope: !2830)
!2847 = !DILocation(line: 280, column: 7, scope: !2818)
!2848 = !DILocation(line: 282, column: 29, scope: !2829)
!2849 = !DILocation(line: 0, scope: !2829)
!2850 = !DILocation(line: 283, column: 7, scope: !2829)
!2851 = !DILocation(line: 284, column: 7, scope: !2829)
!2852 = !DILocation(line: 285, column: 5, scope: !2829)
!2853 = !DILocation(line: 287, column: 3, scope: !2818)
!2854 = !DILocation(line: 288, column: 29, scope: !2818)
!2855 = !DILocation(line: 288, column: 3, scope: !2818)
!2856 = !DILocation(line: 289, column: 3, scope: !2818)
!2857 = !DILocation(line: 290, column: 3, scope: !2818)
!2858 = !DILocation(line: 291, column: 1, scope: !2818)
!2859 = distinct !DISubprogram(name: "dump_conflict_function", scope: !3, file: !3, line: 241, type: !2860, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2862)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{null, !2108, !1956}
!2862 = !{!2863, !2864, !2865}
!2863 = !DILocalVariable(name: "outf", arg: 1, scope: !2859, file: !3, line: 241, type: !2108)
!2864 = !DILocalVariable(name: "cf", arg: 2, scope: !2859, file: !3, line: 241, type: !1956)
!2865 = !DILocalVariable(name: "i", scope: !2859, file: !3, line: 243, type: !7)
!2866 = !DILocation(line: 0, scope: !2859)
!2867 = !DILocation(line: 245, column: 11, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 245, column: 7)
!2869 = !DILocation(line: 245, column: 13, scope: !2868)
!2870 = !DILocation(line: 245, column: 7, scope: !2859)
!2871 = !DILocation(line: 246, column: 5, scope: !2868)
!2872 = !DILocation(line: 247, column: 18, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 247, column: 12)
!2874 = !DILocation(line: 247, column: 12, scope: !2868)
!2875 = !DILocation(line: 251, column: 7, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 251, column: 7)
!2877 = distinct !DILexicalBlock(scope: !2873, file: !3, line: 250, column: 5)
!2878 = !DILocation(line: 248, column: 5, scope: !2873)
!2879 = !DILocation(line: 251, column: 27, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 251, column: 7)
!2881 = !DILocation(line: 251, column: 21, scope: !2880)
!2882 = !DILocation(line: 253, column: 4, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 252, column: 2)
!2884 = !DILocation(line: 254, column: 32, scope: !2883)
!2885 = !DILocation(line: 254, column: 4, scope: !2883)
!2886 = !DILocation(line: 255, column: 4, scope: !2883)
!2887 = !DILocation(line: 251, column: 31, scope: !2880)
!2888 = !DILocation(line: 251, column: 7, scope: !2880)
!2889 = distinct !{!2889, !2875, !2890}
!2890 = !DILocation(line: 256, column: 2, scope: !2876)
!2891 = !DILocation(line: 258, column: 1, scope: !2859)
!2892 = distinct !DISubprogram(name: "print_direction_vector", scope: !3, file: !3, line: 296, type: !2893, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2895)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{null, !2108, !1916, !499}
!2895 = !{!2896, !2897, !2898, !2899, !2900}
!2896 = !DILocalVariable(name: "outf", arg: 1, scope: !2892, file: !3, line: 296, type: !2108)
!2897 = !DILocalVariable(name: "dirv", arg: 2, scope: !2892, file: !3, line: 297, type: !1916)
!2898 = !DILocalVariable(name: "length", arg: 3, scope: !2892, file: !3, line: 298, type: !499)
!2899 = !DILocalVariable(name: "eq", scope: !2892, file: !3, line: 300, type: !499)
!2900 = !DILocalVariable(name: "dir", scope: !2901, file: !3, line: 304, type: !390)
!2901 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 303, column: 5)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 302, column: 3)
!2903 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 302, column: 3)
!2904 = !DILocation(line: 0, scope: !2892)
!2905 = !DILocation(line: 302, column: 8, scope: !2903)
!2906 = !DILocation(line: 0, scope: !2903)
!2907 = !DILocation(line: 302, column: 19, scope: !2902)
!2908 = !DILocation(line: 302, column: 3, scope: !2903)
!2909 = !DILocation(line: 305, column: 10, scope: !2901)
!2910 = !DILocation(line: 0, scope: !2901)
!2911 = !DILocation(line: 307, column: 7, scope: !2901)
!2912 = !DILocation(line: 310, column: 4, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 308, column: 2)
!2914 = !DILocation(line: 311, column: 4, scope: !2913)
!2915 = !DILocation(line: 313, column: 4, scope: !2913)
!2916 = !DILocation(line: 314, column: 4, scope: !2913)
!2917 = !DILocation(line: 316, column: 4, scope: !2913)
!2918 = !DILocation(line: 317, column: 4, scope: !2913)
!2919 = !DILocation(line: 319, column: 4, scope: !2913)
!2920 = !DILocation(line: 320, column: 4, scope: !2913)
!2921 = !DILocation(line: 322, column: 4, scope: !2913)
!2922 = !DILocation(line: 323, column: 4, scope: !2913)
!2923 = !DILocation(line: 325, column: 4, scope: !2913)
!2924 = !DILocation(line: 326, column: 4, scope: !2913)
!2925 = !DILocation(line: 328, column: 4, scope: !2913)
!2926 = !DILocation(line: 329, column: 4, scope: !2913)
!2927 = !DILocation(line: 331, column: 4, scope: !2913)
!2928 = !DILocation(line: 332, column: 4, scope: !2913)
!2929 = !DILocation(line: 302, column: 31, scope: !2902)
!2930 = !DILocation(line: 302, column: 3, scope: !2902)
!2931 = distinct !{!2931, !2908, !2932}
!2932 = !DILocation(line: 334, column: 5, scope: !2903)
!2933 = !DILocation(line: 335, column: 3, scope: !2892)
!2934 = !DILocation(line: 336, column: 1, scope: !2892)
!2935 = distinct !DISubprogram(name: "print_dir_vectors", scope: !3, file: !3, line: 341, type: !2936, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2938)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !2108, !1969, !499}
!2938 = !{!2939, !2940, !2941, !2942, !2943}
!2939 = !DILocalVariable(name: "outf", arg: 1, scope: !2935, file: !3, line: 341, type: !2108)
!2940 = !DILocalVariable(name: "dir_vects", arg: 2, scope: !2935, file: !3, line: 341, type: !1969)
!2941 = !DILocalVariable(name: "length", arg: 3, scope: !2935, file: !3, line: 342, type: !499)
!2942 = !DILocalVariable(name: "j", scope: !2935, file: !3, line: 344, type: !7)
!2943 = !DILocalVariable(name: "v", scope: !2935, file: !3, line: 345, type: !1916)
!2944 = !DILocation(line: 0, scope: !2935)
!2945 = !DILocation(line: 345, column: 3, scope: !2935)
!2946 = !DILocation(line: 0, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 347, column: 3)
!2948 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 347, column: 3)
!2949 = !DILocation(line: 347, column: 8, scope: !2948)
!2950 = !DILocation(line: 0, scope: !2948)
!2951 = !DILocation(line: 347, column: 15, scope: !2947)
!2952 = !DILocation(line: 347, column: 3, scope: !2948)
!2953 = !DILocation(line: 348, column: 35, scope: !2947)
!2954 = !DILocation(line: 348, column: 5, scope: !2947)
!2955 = !DILocation(line: 347, column: 62, scope: !2947)
!2956 = !DILocation(line: 347, column: 3, scope: !2947)
!2957 = distinct !{!2957, !2952, !2958}
!2958 = !DILocation(line: 348, column: 44, scope: !2948)
!2959 = !DILocation(line: 349, column: 1, scope: !2935)
!2960 = distinct !DISubprogram(name: "VEC_lambda_vector_base_iterate", scope: !1905, file: !1905, line: 32, type: !2961, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2966)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!499, !2963, !7, !2965}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1909)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!2966 = !{!2967, !2968, !2969}
!2967 = !DILocalVariable(name: "vec_", arg: 1, scope: !2960, file: !1905, line: 32, type: !2963)
!2968 = !DILocalVariable(name: "ix_", arg: 2, scope: !2960, file: !1905, line: 32, type: !7)
!2969 = !DILocalVariable(name: "ptr", arg: 3, scope: !2960, file: !1905, line: 32, type: !2965)
!2970 = !DILocation(line: 0, scope: !2960)
!2971 = !DILocation(line: 32, column: 1, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2960, file: !1905, line: 32, column: 1)
!2973 = !DILocation(line: 32, column: 1, scope: !2960)
!2974 = !DILocation(line: 32, column: 1, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2972, file: !1905, line: 32, column: 1)
!2976 = !DILocation(line: 32, column: 1, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2972, file: !1905, line: 32, column: 1)
!2978 = !DILocation(line: 0, scope: !2972)
!2979 = distinct !DISubprogram(name: "print_dist_vectors", scope: !3, file: !3, line: 354, type: !2936, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2980)
!2980 = !{!2981, !2982, !2983, !2984, !2985}
!2981 = !DILocalVariable(name: "outf", arg: 1, scope: !2979, file: !3, line: 354, type: !2108)
!2982 = !DILocalVariable(name: "dist_vects", arg: 2, scope: !2979, file: !3, line: 354, type: !1969)
!2983 = !DILocalVariable(name: "length", arg: 3, scope: !2979, file: !3, line: 355, type: !499)
!2984 = !DILocalVariable(name: "j", scope: !2979, file: !3, line: 357, type: !7)
!2985 = !DILocalVariable(name: "v", scope: !2979, file: !3, line: 358, type: !1916)
!2986 = !DILocation(line: 0, scope: !2979)
!2987 = !DILocation(line: 358, column: 3, scope: !2979)
!2988 = !DILocation(line: 0, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 360, column: 3)
!2990 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 360, column: 3)
!2991 = !DILocation(line: 360, column: 8, scope: !2990)
!2992 = !DILocation(line: 0, scope: !2990)
!2993 = !DILocation(line: 360, column: 15, scope: !2989)
!2994 = !DILocation(line: 360, column: 3, scope: !2990)
!2995 = !DILocation(line: 361, column: 32, scope: !2989)
!2996 = !DILocation(line: 361, column: 5, scope: !2989)
!2997 = !DILocation(line: 360, column: 63, scope: !2989)
!2998 = !DILocation(line: 360, column: 3, scope: !2989)
!2999 = distinct !{!2999, !2994, !3000}
!3000 = !DILocation(line: 361, column: 41, scope: !2990)
!3001 = !DILocation(line: 362, column: 1, scope: !2979)
!3002 = distinct !DISubprogram(name: "print_lambda_vector", scope: !1905, file: !1905, line: 414, type: !2893, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3003)
!3003 = !{!3004, !3005, !3006, !3007}
!3004 = !DILocalVariable(name: "outfile", arg: 1, scope: !3002, file: !1905, line: 414, type: !2108)
!3005 = !DILocalVariable(name: "vector", arg: 2, scope: !3002, file: !1905, line: 414, type: !1916)
!3006 = !DILocalVariable(name: "n", arg: 3, scope: !3002, file: !1905, line: 414, type: !499)
!3007 = !DILocalVariable(name: "i", scope: !3002, file: !1905, line: 416, type: !499)
!3008 = !DILocation(line: 0, scope: !3002)
!3009 = !DILocation(line: 418, column: 8, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3002, file: !1905, line: 418, column: 3)
!3011 = !DILocation(line: 0, scope: !3010)
!3012 = !DILocation(line: 418, column: 17, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3010, file: !1905, line: 418, column: 3)
!3014 = !DILocation(line: 418, column: 3, scope: !3010)
!3015 = !DILocation(line: 419, column: 31, scope: !3013)
!3016 = !DILocation(line: 419, column: 5, scope: !3013)
!3017 = !DILocation(line: 418, column: 23, scope: !3013)
!3018 = !DILocation(line: 418, column: 3, scope: !3013)
!3019 = distinct !{!3019, !3014, !3020}
!3020 = !DILocation(line: 419, column: 40, scope: !3010)
!3021 = !DILocation(line: 420, column: 3, scope: !3002)
!3022 = !DILocation(line: 421, column: 1, scope: !3002)
!3023 = distinct !DISubprogram(name: "debug_data_dependence_relation", scope: !3, file: !3, line: 367, type: !3024, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3026)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{null, !1932}
!3026 = !{!3027}
!3027 = !DILocalVariable(name: "ddr", arg: 1, scope: !3023, file: !3, line: 367, type: !1932)
!3028 = !DILocation(line: 0, scope: !3023)
!3029 = !DILocation(line: 369, column: 34, scope: !3023)
!3030 = !DILocation(line: 369, column: 3, scope: !3023)
!3031 = !DILocation(line: 370, column: 1, scope: !3023)
!3032 = distinct !DISubprogram(name: "VEC_subscript_p_base_length", scope: !391, file: !391, line: 271, type: !3033, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3037)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!7, !3035}
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!3037 = !{!3038}
!3038 = !DILocalVariable(name: "vec_", arg: 1, scope: !3032, file: !391, line: 271, type: !3035)
!3039 = !DILocation(line: 0, scope: !3032)
!3040 = !DILocation(line: 271, column: 1, scope: !3032)
!3041 = distinct !DISubprogram(name: "VEC_subscript_p_base_index", scope: !391, file: !391, line: 271, type: !3042, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!1951, !3035, !7}
!3044 = !{!3045, !3046}
!3045 = !DILocalVariable(name: "vec_", arg: 1, scope: !3041, file: !391, line: 271, type: !3035)
!3046 = !DILocalVariable(name: "ix_", arg: 2, scope: !3041, file: !391, line: 271, type: !7)
!3047 = !DILocation(line: 0, scope: !3041)
!3048 = !DILocation(line: 271, column: 1, scope: !3041)
!3049 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !146, file: !146, line: 85, type: !3050, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3055)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!499, !3052, !7, !3054}
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!3055 = !{!3056, !3057, !3058}
!3056 = !DILocalVariable(name: "vec_", arg: 1, scope: !3049, file: !146, line: 85, type: !3052)
!3057 = !DILocalVariable(name: "ix_", arg: 2, scope: !3049, file: !146, line: 85, type: !7)
!3058 = !DILocalVariable(name: "ptr", arg: 3, scope: !3049, file: !146, line: 85, type: !3054)
!3059 = !DILocation(line: 0, scope: !3049)
!3060 = !DILocation(line: 85, column: 1, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3049, file: !146, line: 85, column: 1)
!3062 = !DILocation(line: 85, column: 1, scope: !3049)
!3063 = !DILocation(line: 85, column: 1, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3061, file: !146, line: 85, column: 1)
!3065 = !DILocation(line: 85, column: 1, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3061, file: !146, line: 85, column: 1)
!3067 = !DILocation(line: 0, scope: !3061)
!3068 = distinct !DISubprogram(name: "VEC_lambda_vector_base_length", scope: !1905, file: !1905, line: 32, type: !3069, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!7, !2963}
!3071 = !{!3072}
!3072 = !DILocalVariable(name: "vec_", arg: 1, scope: !3068, file: !1905, line: 32, type: !2963)
!3073 = !DILocation(line: 0, scope: !3068)
!3074 = !DILocation(line: 32, column: 1, scope: !3068)
!3075 = distinct !DISubprogram(name: "VEC_lambda_vector_base_index", scope: !1905, file: !1905, line: 32, type: !3076, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!1916, !2963, !7}
!3078 = !{!3079, !3080}
!3079 = !DILocalVariable(name: "vec_", arg: 1, scope: !3075, file: !1905, line: 32, type: !2963)
!3080 = !DILocalVariable(name: "ix_", arg: 2, scope: !3075, file: !1905, line: 32, type: !7)
!3081 = !DILocation(line: 0, scope: !3075)
!3082 = !DILocation(line: 32, column: 1, scope: !3075)
!3083 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !146, file: !146, line: 85, type: !3084, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3086)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!7, !3052}
!3086 = !{!3087}
!3087 = !DILocalVariable(name: "vec_", arg: 1, scope: !3083, file: !146, line: 85, type: !3052)
!3088 = !DILocation(line: 0, scope: !3083)
!3089 = !DILocation(line: 85, column: 1, scope: !3083)
!3090 = distinct !DISubprogram(name: "dump_data_dependence_direction", scope: !3, file: !3, line: 450, type: !3091, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{null, !2108, !390}
!3093 = !{!3094, !3095}
!3094 = !DILocalVariable(name: "file", arg: 1, scope: !3090, file: !3, line: 450, type: !2108)
!3095 = !DILocalVariable(name: "dir", arg: 2, scope: !3090, file: !3, line: 451, type: !390)
!3096 = !DILocation(line: 0, scope: !3090)
!3097 = !DILocation(line: 453, column: 3, scope: !3090)
!3098 = !DILocation(line: 456, column: 7, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 454, column: 5)
!3100 = !DILocation(line: 457, column: 7, scope: !3099)
!3101 = !DILocation(line: 460, column: 7, scope: !3099)
!3102 = !DILocation(line: 461, column: 7, scope: !3099)
!3103 = !DILocation(line: 464, column: 7, scope: !3099)
!3104 = !DILocation(line: 465, column: 7, scope: !3099)
!3105 = !DILocation(line: 468, column: 7, scope: !3099)
!3106 = !DILocation(line: 469, column: 7, scope: !3099)
!3107 = !DILocation(line: 472, column: 7, scope: !3099)
!3108 = !DILocation(line: 473, column: 7, scope: !3099)
!3109 = !DILocation(line: 476, column: 7, scope: !3099)
!3110 = !DILocation(line: 477, column: 7, scope: !3099)
!3111 = !DILocation(line: 480, column: 7, scope: !3099)
!3112 = !DILocation(line: 481, column: 7, scope: !3099)
!3113 = !DILocation(line: 486, column: 1, scope: !3090)
!3114 = distinct !DISubprogram(name: "dump_dist_dir_vectors", scope: !3, file: !3, line: 494, type: !2622, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121}
!3116 = !DILocalVariable(name: "file", arg: 1, scope: !3114, file: !3, line: 494, type: !2108)
!3117 = !DILocalVariable(name: "ddrs", arg: 2, scope: !3114, file: !3, line: 494, type: !1981)
!3118 = !DILocalVariable(name: "i", scope: !3114, file: !3, line: 496, type: !7)
!3119 = !DILocalVariable(name: "j", scope: !3114, file: !3, line: 496, type: !7)
!3120 = !DILocalVariable(name: "ddr", scope: !3114, file: !3, line: 497, type: !1932)
!3121 = !DILocalVariable(name: "v", scope: !3114, file: !3, line: 498, type: !1916)
!3122 = !DILocation(line: 0, scope: !3114)
!3123 = !DILocation(line: 497, column: 3, scope: !3114)
!3124 = !DILocation(line: 498, column: 3, scope: !3114)
!3125 = !DILocation(line: 0, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 500, column: 3)
!3127 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 500, column: 3)
!3128 = !DILocation(line: 500, column: 8, scope: !3127)
!3129 = !DILocation(line: 0, scope: !3127)
!3130 = !DILocation(line: 500, column: 15, scope: !3126)
!3131 = !DILocation(line: 500, column: 3, scope: !3127)
!3132 = !DILocation(line: 501, column: 9, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 501, column: 9)
!3134 = !DILocation(line: 501, column: 33, scope: !3133)
!3135 = !DILocation(line: 501, column: 46, scope: !3133)
!3136 = !DILocation(line: 501, column: 49, scope: !3133)
!3137 = !DILocation(line: 501, column: 9, scope: !3126)
!3138 = !DILocation(line: 503, column: 2, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 503, column: 2)
!3140 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 502, column: 7)
!3141 = !DILocation(line: 503, column: 14, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 503, column: 2)
!3143 = !DILocation(line: 0, scope: !3139)
!3144 = !DILocation(line: 510, column: 2, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 510, column: 2)
!3146 = !DILocation(line: 505, column: 6, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 504, column: 4)
!3148 = !DILocation(line: 506, column: 33, scope: !3147)
!3149 = !DILocation(line: 506, column: 36, scope: !3147)
!3150 = !DILocation(line: 506, column: 6, scope: !3147)
!3151 = !DILocation(line: 507, column: 6, scope: !3147)
!3152 = !DILocation(line: 503, column: 72, scope: !3142)
!3153 = !DILocation(line: 503, column: 2, scope: !3142)
!3154 = distinct !{!3154, !3138, !3155}
!3155 = !DILocation(line: 508, column: 4, scope: !3139)
!3156 = !DILocation(line: 0, scope: !3145)
!3157 = !DILocation(line: 510, column: 14, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 510, column: 2)
!3159 = !DILocation(line: 512, column: 6, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 511, column: 4)
!3161 = !DILocation(line: 513, column: 36, scope: !3160)
!3162 = !DILocation(line: 513, column: 39, scope: !3160)
!3163 = !DILocation(line: 513, column: 6, scope: !3160)
!3164 = !DILocation(line: 514, column: 6, scope: !3160)
!3165 = !DILocation(line: 510, column: 71, scope: !3158)
!3166 = !DILocation(line: 510, column: 2, scope: !3158)
!3167 = distinct !{!3167, !3144, !3168}
!3168 = !DILocation(line: 515, column: 4, scope: !3145)
!3169 = !DILocation(line: 500, column: 51, scope: !3126)
!3170 = !DILocation(line: 500, column: 3, scope: !3126)
!3171 = distinct !{!3171, !3131, !3172}
!3172 = !DILocation(line: 516, column: 7, scope: !3127)
!3173 = !DILocation(line: 518, column: 3, scope: !3114)
!3174 = !DILocation(line: 519, column: 1, scope: !3114)
!3175 = distinct !DISubprogram(name: "dump_ddrs", scope: !3, file: !3, line: 524, type: !2622, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3176)
!3176 = !{!3177, !3178, !3179, !3180}
!3177 = !DILocalVariable(name: "file", arg: 1, scope: !3175, file: !3, line: 524, type: !2108)
!3178 = !DILocalVariable(name: "ddrs", arg: 2, scope: !3175, file: !3, line: 524, type: !1981)
!3179 = !DILocalVariable(name: "i", scope: !3175, file: !3, line: 526, type: !7)
!3180 = !DILocalVariable(name: "ddr", scope: !3175, file: !3, line: 527, type: !1932)
!3181 = !DILocation(line: 0, scope: !3175)
!3182 = !DILocation(line: 527, column: 3, scope: !3175)
!3183 = !DILocation(line: 0, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 529, column: 3)
!3185 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 529, column: 3)
!3186 = !DILocation(line: 529, column: 8, scope: !3185)
!3187 = !DILocation(line: 0, scope: !3185)
!3188 = !DILocation(line: 529, column: 15, scope: !3184)
!3189 = !DILocation(line: 529, column: 3, scope: !3185)
!3190 = !DILocation(line: 530, column: 42, scope: !3184)
!3191 = !DILocation(line: 530, column: 5, scope: !3184)
!3192 = !DILocation(line: 529, column: 51, scope: !3184)
!3193 = !DILocation(line: 529, column: 3, scope: !3184)
!3194 = distinct !{!3194, !3189, !3195}
!3195 = !DILocation(line: 530, column: 45, scope: !3185)
!3196 = !DILocation(line: 532, column: 3, scope: !3175)
!3197 = !DILocation(line: 533, column: 1, scope: !3175)
!3198 = distinct !DISubprogram(name: "split_constant_offset", scope: !3, file: !3, line: 676, type: !3199, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3201)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !506, !864, !864}
!3201 = !{!3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211}
!3202 = !DILocalVariable(name: "exp", arg: 1, scope: !3198, file: !3, line: 676, type: !506)
!3203 = !DILocalVariable(name: "var", arg: 2, scope: !3198, file: !3, line: 676, type: !864)
!3204 = !DILocalVariable(name: "off", arg: 3, scope: !3198, file: !3, line: 676, type: !864)
!3205 = !DILocalVariable(name: "type", scope: !3198, file: !3, line: 678, type: !506)
!3206 = !DILocalVariable(name: "otype", scope: !3198, file: !3, line: 678, type: !506)
!3207 = !DILocalVariable(name: "op0", scope: !3198, file: !3, line: 678, type: !506)
!3208 = !DILocalVariable(name: "op1", scope: !3198, file: !3, line: 678, type: !506)
!3209 = !DILocalVariable(name: "e", scope: !3198, file: !3, line: 678, type: !506)
!3210 = !DILocalVariable(name: "o", scope: !3198, file: !3, line: 678, type: !506)
!3211 = !DILocalVariable(name: "code", scope: !3198, file: !3, line: 679, type: !196)
!3212 = !DILocation(line: 0, scope: !3198)
!3213 = !DILocation(line: 678, column: 15, scope: !3198)
!3214 = !DILocation(line: 678, column: 3, scope: !3198)
!3215 = !DILocation(line: 679, column: 3, scope: !3198)
!3216 = !DILocation(line: 681, column: 8, scope: !3198)
!3217 = !DILocation(line: 682, column: 10, scope: !3198)
!3218 = !DILocation(line: 682, column: 8, scope: !3198)
!3219 = !DILocation(line: 683, column: 3, scope: !3198)
!3220 = !DILocation(line: 685, column: 7, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 685, column: 7)
!3222 = !DILocation(line: 685, column: 7, scope: !3198)
!3223 = !DILocation(line: 688, column: 11, scope: !3198)
!3224 = !DILocation(line: 689, column: 10, scope: !3198)
!3225 = !DILocation(line: 689, column: 8, scope: !3198)
!3226 = !DILocation(line: 690, column: 3, scope: !3198)
!3227 = !DILocation(line: 691, column: 39, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 691, column: 7)
!3229 = !DILocation(line: 691, column: 44, scope: !3228)
!3230 = !DILocation(line: 691, column: 50, scope: !3228)
!3231 = !DILocation(line: 691, column: 7, scope: !3228)
!3232 = !DILocation(line: 691, column: 7, scope: !3198)
!3233 = !DILocation(line: 693, column: 14, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 692, column: 5)
!3235 = !DILocation(line: 693, column: 12, scope: !3234)
!3236 = !DILocation(line: 694, column: 14, scope: !3234)
!3237 = !DILocation(line: 694, column: 12, scope: !3234)
!3238 = !DILocation(line: 695, column: 5, scope: !3234)
!3239 = !DILocation(line: 696, column: 1, scope: !3198)
!3240 = distinct !DISubprogram(name: "automatically_generated_chrec_p", scope: !3241, file: !3241, line: 37, type: !3242, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3245)
!3241 = !DIFile(filename: "./tree-chrec.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!498, !3244}
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !507, line: 59, baseType: !1858)
!3245 = !{!3246}
!3246 = !DILocalVariable(name: "chrec", arg: 1, scope: !3240, file: !3241, line: 37, type: !3244)
!3247 = !DILocation(line: 0, scope: !3240)
!3248 = !DILocation(line: 39, column: 20, scope: !3240)
!3249 = !DILocation(line: 39, column: 17, scope: !3240)
!3250 = !DILocation(line: 40, column: 4, scope: !3240)
!3251 = !DILocation(line: 39, column: 10, scope: !3240)
!3252 = !DILocation(line: 39, column: 3, scope: !3240)
!3253 = distinct !DISubprogram(name: "split_constant_offset_1", scope: !3, file: !3, line: 542, type: !3254, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3256)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!498, !506, !506, !196, !506, !864, !864}
!3256 = !{!3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3279, !3280}
!3257 = !DILocalVariable(name: "type", arg: 1, scope: !3253, file: !3, line: 542, type: !506)
!3258 = !DILocalVariable(name: "op0", arg: 2, scope: !3253, file: !3, line: 542, type: !506)
!3259 = !DILocalVariable(name: "code", arg: 3, scope: !3253, file: !3, line: 542, type: !196)
!3260 = !DILocalVariable(name: "op1", arg: 4, scope: !3253, file: !3, line: 542, type: !506)
!3261 = !DILocalVariable(name: "var", arg: 5, scope: !3253, file: !3, line: 543, type: !864)
!3262 = !DILocalVariable(name: "off", arg: 6, scope: !3253, file: !3, line: 543, type: !864)
!3263 = !DILocalVariable(name: "var0", scope: !3253, file: !3, line: 545, type: !506)
!3264 = !DILocalVariable(name: "var1", scope: !3253, file: !3, line: 545, type: !506)
!3265 = !DILocalVariable(name: "off0", scope: !3253, file: !3, line: 546, type: !506)
!3266 = !DILocalVariable(name: "off1", scope: !3253, file: !3, line: 546, type: !506)
!3267 = !DILocalVariable(name: "ocode", scope: !3253, file: !3, line: 547, type: !196)
!3268 = !DILocalVariable(name: "base", scope: !3269, file: !3, line: 581, type: !506)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 580, column: 7)
!3270 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 553, column: 5)
!3271 = !DILocalVariable(name: "poffset", scope: !3269, file: !3, line: 581, type: !506)
!3272 = !DILocalVariable(name: "pbitsize", scope: !3269, file: !3, line: 582, type: !562)
!3273 = !DILocalVariable(name: "pbitpos", scope: !3269, file: !3, line: 582, type: !562)
!3274 = !DILocalVariable(name: "pmode", scope: !3269, file: !3, line: 583, type: !5)
!3275 = !DILocalVariable(name: "punsignedp", scope: !3269, file: !3, line: 584, type: !499)
!3276 = !DILocalVariable(name: "pvolatilep", scope: !3269, file: !3, line: 584, type: !499)
!3277 = !DILocalVariable(name: "def_stmt", scope: !3278, file: !3, line: 636, type: !830)
!3278 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 635, column: 7)
!3279 = !DILocalVariable(name: "subcode", scope: !3278, file: !3, line: 637, type: !196)
!3280 = !DILocalVariable(name: "itype", scope: !3281, file: !3, line: 654, type: !506)
!3281 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 649, column: 7)
!3282 = !DILocation(line: 0, scope: !3253)
!3283 = !DILocation(line: 545, column: 3, scope: !3253)
!3284 = !DILocation(line: 546, column: 3, scope: !3253)
!3285 = !DILocation(line: 549, column: 8, scope: !3253)
!3286 = !DILocation(line: 550, column: 8, scope: !3253)
!3287 = !DILocation(line: 552, column: 3, scope: !3253)
!3288 = !DILocation(line: 555, column: 14, scope: !3270)
!3289 = !DILocation(line: 555, column: 12, scope: !3270)
!3290 = !DILocation(line: 556, column: 14, scope: !3270)
!3291 = !DILocation(line: 556, column: 12, scope: !3270)
!3292 = !DILocation(line: 557, column: 7, scope: !3270)
!3293 = !DILocation(line: 560, column: 7, scope: !3270)
!3294 = !DILocation(line: 564, column: 7, scope: !3270)
!3295 = !DILocation(line: 565, column: 7, scope: !3270)
!3296 = !DILocation(line: 566, column: 14, scope: !3270)
!3297 = !DILocation(line: 566, column: 12, scope: !3270)
!3298 = !DILocation(line: 567, column: 14, scope: !3270)
!3299 = !DILocation(line: 567, column: 12, scope: !3270)
!3300 = !DILocation(line: 568, column: 7, scope: !3270)
!3301 = !DILocation(line: 571, column: 11, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 571, column: 11)
!3303 = !DILocation(line: 571, column: 27, scope: !3302)
!3304 = !DILocation(line: 571, column: 11, scope: !3270)
!3305 = !DILocation(line: 574, column: 7, scope: !3270)
!3306 = !DILocation(line: 575, column: 14, scope: !3270)
!3307 = !DILocation(line: 575, column: 12, scope: !3270)
!3308 = !DILocation(line: 576, column: 14, scope: !3270)
!3309 = !DILocation(line: 576, column: 12, scope: !3270)
!3310 = !DILocation(line: 577, column: 7, scope: !3270)
!3311 = !DILocation(line: 581, column: 2, scope: !3269)
!3312 = !DILocation(line: 582, column: 2, scope: !3269)
!3313 = !DILocation(line: 583, column: 2, scope: !3269)
!3314 = !DILocation(line: 584, column: 2, scope: !3269)
!3315 = !DILocation(line: 586, column: 8, scope: !3269)
!3316 = !DILocation(line: 587, column: 7, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 587, column: 6)
!3318 = !DILocation(line: 587, column: 6, scope: !3269)
!3319 = !DILocation(line: 0, scope: !3269)
!3320 = !DILocation(line: 590, column: 9, scope: !3269)
!3321 = !DILocation(line: 593, column: 6, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 593, column: 6)
!3323 = !DILocation(line: 593, column: 30, scope: !3322)
!3324 = !DILocation(line: 593, column: 6, scope: !3269)
!3325 = !DILocation(line: 595, column: 9, scope: !3269)
!3326 = !DILocation(line: 596, column: 9, scope: !3269)
!3327 = !DILocation(line: 596, column: 7, scope: !3269)
!3328 = !DILocation(line: 598, column: 6, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 598, column: 6)
!3330 = !DILocation(line: 598, column: 6, scope: !3269)
!3331 = !DILocation(line: 600, column: 6, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 599, column: 4)
!3333 = !DILocation(line: 601, column: 13, scope: !3332)
!3334 = !DILocation(line: 601, column: 11, scope: !3332)
!3335 = !DILocation(line: 602, column: 10, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 602, column: 10)
!3337 = !DILocation(line: 602, column: 10, scope: !3332)
!3338 = !DILocation(line: 603, column: 15, scope: !3336)
!3339 = !DILocation(line: 603, column: 8, scope: !3336)
!3340 = !DILocation(line: 606, column: 15, scope: !3336)
!3341 = !DILocation(line: 610, column: 9, scope: !3269)
!3342 = !DILocation(line: 610, column: 7, scope: !3269)
!3343 = !DILocation(line: 624, column: 2, scope: !3269)
!3344 = !DILocation(line: 624, column: 9, scope: !3269)
!3345 = !DILocation(line: 625, column: 11, scope: !3269)
!3346 = distinct !{!3346, !3343, !3345}
!3347 = !DILocation(line: 626, column: 6, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 626, column: 6)
!3349 = !DILocation(line: 626, column: 31, scope: !3348)
!3350 = !DILocation(line: 626, column: 6, scope: !3269)
!3351 = !DILocation(line: 629, column: 9, scope: !3269)
!3352 = !DILocation(line: 629, column: 7, scope: !3269)
!3353 = !DILocation(line: 630, column: 9, scope: !3269)
!3354 = !DILocation(line: 630, column: 7, scope: !3269)
!3355 = !DILocation(line: 631, column: 2, scope: !3269)
!3356 = !DILocation(line: 632, column: 7, scope: !3270)
!3357 = !DILocation(line: 636, column: 20, scope: !3278)
!3358 = !DILocation(line: 0, scope: !3278)
!3359 = !DILocation(line: 639, column: 6, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 639, column: 6)
!3361 = !DILocation(line: 639, column: 29, scope: !3360)
!3362 = !DILocation(line: 639, column: 6, scope: !3278)
!3363 = !DILocation(line: 642, column: 9, scope: !3278)
!3364 = !DILocation(line: 642, column: 7, scope: !3278)
!3365 = !DILocation(line: 643, column: 12, scope: !3278)
!3366 = !DILocation(line: 644, column: 9, scope: !3278)
!3367 = !DILocation(line: 644, column: 7, scope: !3278)
!3368 = !DILocation(line: 646, column: 9, scope: !3278)
!3369 = !DILocation(line: 646, column: 2, scope: !3278)
!3370 = !DILocation(line: 654, column: 15, scope: !3281)
!3371 = !DILocation(line: 0, scope: !3281)
!3372 = !DILocation(line: 655, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 655, column: 6)
!3374 = !DILocation(line: 656, column: 7, scope: !3373)
!3375 = !DILocation(line: 656, column: 11, scope: !3373)
!3376 = !DILocation(line: 656, column: 35, scope: !3373)
!3377 = !DILocation(line: 656, column: 38, scope: !3373)
!3378 = !DILocation(line: 657, column: 9, scope: !3373)
!3379 = !DILocation(line: 657, column: 34, scope: !3373)
!3380 = !DILocation(line: 657, column: 31, scope: !3373)
!3381 = !DILocation(line: 658, column: 6, scope: !3373)
!3382 = !DILocation(line: 658, column: 10, scope: !3373)
!3383 = !DILocation(line: 658, column: 32, scope: !3373)
!3384 = !DILocation(line: 658, column: 35, scope: !3373)
!3385 = !DILocation(line: 655, column: 6, scope: !3281)
!3386 = !DILocation(line: 660, column: 6, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 659, column: 4)
!3388 = !DILocation(line: 661, column: 13, scope: !3387)
!3389 = !DILocation(line: 661, column: 11, scope: !3387)
!3390 = !DILocation(line: 662, column: 6, scope: !3387)
!3391 = !DILocation(line: 0, scope: !3270)
!3392 = !DILocation(line: 670, column: 1, scope: !3253)
!3393 = distinct !DISubprogram(name: "dr_analyze_innermost", scope: !3, file: !3, line: 724, type: !3394, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!498, !1860}
!3396 = !{!3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3415, !3416, !3417, !3418, !3419}
!3397 = !DILocalVariable(name: "dr", arg: 1, scope: !3393, file: !3, line: 724, type: !1860)
!3398 = !DILocalVariable(name: "stmt", scope: !3393, file: !3, line: 726, type: !830)
!3399 = !DILocalVariable(name: "loop", scope: !3393, file: !3, line: 727, type: !1045)
!3400 = !DILocalVariable(name: "ref", scope: !3393, file: !3, line: 728, type: !506)
!3401 = !DILocalVariable(name: "pbitsize", scope: !3393, file: !3, line: 729, type: !562)
!3402 = !DILocalVariable(name: "pbitpos", scope: !3393, file: !3, line: 729, type: !562)
!3403 = !DILocalVariable(name: "base", scope: !3393, file: !3, line: 730, type: !506)
!3404 = !DILocalVariable(name: "poffset", scope: !3393, file: !3, line: 730, type: !506)
!3405 = !DILocalVariable(name: "pmode", scope: !3393, file: !3, line: 731, type: !5)
!3406 = !DILocalVariable(name: "punsignedp", scope: !3393, file: !3, line: 732, type: !499)
!3407 = !DILocalVariable(name: "pvolatilep", scope: !3393, file: !3, line: 732, type: !499)
!3408 = !DILocalVariable(name: "base_iv", scope: !3393, file: !3, line: 733, type: !3409)
!3409 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !1222, line: 651, baseType: !3410)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1222, line: 644, size: 192, elements: !3411)
!3411 = !{!3412, !3413, !3414}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3410, file: !1222, line: 647, baseType: !506, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3410, file: !1222, line: 647, baseType: !506, size: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !3410, file: !1222, line: 650, baseType: !498, size: 8, offset: 128)
!3415 = !DILocalVariable(name: "offset_iv", scope: !3393, file: !3, line: 733, type: !3409)
!3416 = !DILocalVariable(name: "init", scope: !3393, file: !3, line: 734, type: !506)
!3417 = !DILocalVariable(name: "dinit", scope: !3393, file: !3, line: 734, type: !506)
!3418 = !DILocalVariable(name: "step", scope: !3393, file: !3, line: 734, type: !506)
!3419 = !DILocalVariable(name: "in_loop", scope: !3393, file: !3, line: 735, type: !498)
!3420 = !DILocation(line: 0, scope: !3393)
!3421 = !DILocation(line: 726, column: 17, scope: !3393)
!3422 = !DILocation(line: 727, column: 23, scope: !3393)
!3423 = !DILocation(line: 728, column: 14, scope: !3393)
!3424 = !DILocation(line: 729, column: 3, scope: !3393)
!3425 = !DILocation(line: 730, column: 3, scope: !3393)
!3426 = !DILocation(line: 731, column: 3, scope: !3393)
!3427 = !DILocation(line: 732, column: 3, scope: !3393)
!3428 = !DILocation(line: 733, column: 3, scope: !3393)
!3429 = !DILocation(line: 734, column: 3, scope: !3393)
!3430 = !DILocation(line: 735, column: 19, scope: !3393)
!3431 = !DILocation(line: 735, column: 24, scope: !3393)
!3432 = !DILocation(line: 735, column: 33, scope: !3393)
!3433 = !DILocation(line: 737, column: 7, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 737, column: 7)
!3435 = !DILocation(line: 737, column: 17, scope: !3434)
!3436 = !DILocation(line: 737, column: 21, scope: !3434)
!3437 = !DILocation(line: 737, column: 32, scope: !3434)
!3438 = !DILocation(line: 737, column: 7, scope: !3393)
!3439 = !DILocation(line: 738, column: 5, scope: !3434)
!3440 = !DILocation(line: 740, column: 10, scope: !3393)
!3441 = !DILocation(line: 742, column: 3, scope: !3393)
!3442 = !DILocation(line: 744, column: 7, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 744, column: 7)
!3444 = !DILocation(line: 744, column: 31, scope: !3443)
!3445 = !DILocation(line: 744, column: 7, scope: !3393)
!3446 = !DILocation(line: 746, column: 11, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 746, column: 11)
!3448 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 745, column: 5)
!3449 = !DILocation(line: 746, column: 21, scope: !3447)
!3450 = !DILocation(line: 746, column: 25, scope: !3447)
!3451 = !DILocation(line: 746, column: 36, scope: !3447)
!3452 = !DILocation(line: 746, column: 11, scope: !3448)
!3453 = !DILocation(line: 747, column: 2, scope: !3447)
!3454 = !DILocation(line: 751, column: 10, scope: !3393)
!3455 = !DILocation(line: 752, column: 7, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 752, column: 7)
!3457 = !DILocation(line: 752, column: 7, scope: !3393)
!3458 = !DILocation(line: 754, column: 29, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 754, column: 11)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 753, column: 5)
!3461 = !DILocation(line: 754, column: 12, scope: !3459)
!3462 = !DILocation(line: 754, column: 11, scope: !3460)
!3463 = !DILocation(line: 757, column: 15, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 757, column: 15)
!3465 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 756, column: 9)
!3466 = !DILocation(line: 757, column: 25, scope: !3464)
!3467 = !DILocation(line: 757, column: 29, scope: !3464)
!3468 = !DILocation(line: 757, column: 40, scope: !3464)
!3469 = !DILocation(line: 757, column: 15, scope: !3465)
!3470 = !DILocation(line: 758, column: 6, scope: !3464)
!3471 = !DILocation(line: 764, column: 15, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 763, column: 5)
!3473 = !DILocation(line: 764, column: 20, scope: !3472)
!3474 = !DILocation(line: 765, column: 22, scope: !3472)
!3475 = !DILocation(line: 765, column: 15, scope: !3472)
!3476 = !DILocation(line: 765, column: 20, scope: !3472)
!3477 = !DILocation(line: 766, column: 15, scope: !3472)
!3478 = !DILocation(line: 766, column: 27, scope: !3472)
!3479 = !DILocation(line: 769, column: 8, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 769, column: 7)
!3481 = !DILocation(line: 769, column: 7, scope: !3393)
!3482 = !DILocation(line: 771, column: 24, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 770, column: 5)
!3484 = !DILocation(line: 771, column: 17, scope: !3483)
!3485 = !DILocation(line: 771, column: 22, scope: !3483)
!3486 = !DILocation(line: 772, column: 24, scope: !3483)
!3487 = !DILocation(line: 772, column: 17, scope: !3483)
!3488 = !DILocation(line: 772, column: 22, scope: !3483)
!3489 = !DILocation(line: 773, column: 5, scope: !3483)
!3490 = !DILocation(line: 776, column: 11, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 775, column: 5)
!3492 = !DILocation(line: 778, column: 26, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 777, column: 9)
!3494 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 776, column: 11)
!3495 = !DILocation(line: 779, column: 28, scope: !3493)
!3496 = !DILocation(line: 779, column: 21, scope: !3493)
!3497 = !DILocation(line: 779, column: 26, scope: !3493)
!3498 = !DILocation(line: 780, column: 9, scope: !3493)
!3499 = !DILocation(line: 781, column: 34, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 781, column: 16)
!3501 = !DILocation(line: 782, column: 28, scope: !3500)
!3502 = !DILocation(line: 781, column: 17, scope: !3500)
!3503 = !DILocation(line: 781, column: 16, scope: !3494)
!3504 = !DILocation(line: 784, column: 15, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 784, column: 15)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 783, column: 9)
!3507 = !DILocation(line: 784, column: 25, scope: !3505)
!3508 = !DILocation(line: 784, column: 29, scope: !3505)
!3509 = !DILocation(line: 784, column: 40, scope: !3505)
!3510 = !DILocation(line: 784, column: 15, scope: !3506)
!3511 = !DILocation(line: 785, column: 13, scope: !3505)
!3512 = !DILocation(line: 791, column: 10, scope: !3393)
!3513 = !DILocation(line: 792, column: 34, scope: !3393)
!3514 = !DILocation(line: 792, column: 3, scope: !3393)
!3515 = !DILocation(line: 793, column: 11, scope: !3393)
!3516 = !DILocation(line: 794, column: 36, scope: !3393)
!3517 = !DILocation(line: 794, column: 3, scope: !3393)
!3518 = !DILocation(line: 795, column: 11, scope: !3393)
!3519 = !DILocation(line: 797, column: 10, scope: !3393)
!3520 = !DILocation(line: 801, column: 68, scope: !3393)
!3521 = !DILocation(line: 801, column: 26, scope: !3393)
!3522 = !DILocation(line: 801, column: 3, scope: !3393)
!3523 = !DILocation(line: 801, column: 24, scope: !3393)
!3524 = !DILocation(line: 803, column: 20, scope: !3393)
!3525 = !DILocation(line: 803, column: 3, scope: !3393)
!3526 = !DILocation(line: 803, column: 18, scope: !3393)
!3527 = !DILocation(line: 804, column: 3, scope: !3393)
!3528 = !DILocation(line: 804, column: 16, scope: !3393)
!3529 = !DILocation(line: 805, column: 3, scope: !3393)
!3530 = !DILocation(line: 805, column: 16, scope: !3393)
!3531 = !DILocation(line: 807, column: 24, scope: !3393)
!3532 = !DILocation(line: 807, column: 3, scope: !3393)
!3533 = !DILocation(line: 807, column: 22, scope: !3393)
!3534 = !DILocation(line: 809, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 809, column: 7)
!3536 = !DILocation(line: 809, column: 17, scope: !3535)
!3537 = !DILocation(line: 809, column: 21, scope: !3535)
!3538 = !DILocation(line: 809, column: 32, scope: !3535)
!3539 = !DILocation(line: 809, column: 7, scope: !3393)
!3540 = !DILocation(line: 810, column: 5, scope: !3535)
!3541 = !DILocation(line: 813, column: 1, scope: !3393)
!3542 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !3543, file: !3543, line: 617, type: !3544, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3546)
!3543 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!1045, !830}
!3546 = !{!3547, !3548}
!3547 = !DILocalVariable(name: "stmt", arg: 1, scope: !3542, file: !3543, line: 617, type: !830)
!3548 = !DILocalVariable(name: "bb", scope: !3542, file: !3543, line: 619, type: !1282)
!3549 = !DILocation(line: 0, scope: !3542)
!3550 = !DILocation(line: 619, column: 20, scope: !3542)
!3551 = !DILocation(line: 620, column: 8, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3542, file: !3543, line: 620, column: 7)
!3553 = !DILocation(line: 620, column: 7, scope: !3542)
!3554 = !DILocation(line: 623, column: 14, scope: !3542)
!3555 = !DILocation(line: 623, column: 3, scope: !3542)
!3556 = !DILocation(line: 624, column: 1, scope: !3542)
!3557 = distinct !DISubprogram(name: "canonicalize_base_object_address", scope: !3, file: !3, line: 702, type: !3558, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3560)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!506, !506}
!3560 = !{!3561, !3562}
!3561 = !DILocalVariable(name: "addr", arg: 1, scope: !3557, file: !3, line: 702, type: !506)
!3562 = !DILocalVariable(name: "orig", scope: !3557, file: !3, line: 704, type: !506)
!3563 = !DILocation(line: 0, scope: !3557)
!3564 = !DILocation(line: 706, column: 3, scope: !3557)
!3565 = !DILocation(line: 710, column: 8, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 710, column: 7)
!3567 = !DILocation(line: 710, column: 7, scope: !3557)
!3568 = !DILocation(line: 713, column: 7, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 713, column: 7)
!3570 = !DILocation(line: 713, column: 24, scope: !3569)
!3571 = !DILocation(line: 713, column: 7, scope: !3557)
!3572 = !DILocation(line: 716, column: 10, scope: !3557)
!3573 = !DILocation(line: 716, column: 3, scope: !3557)
!3574 = !DILocation(line: 717, column: 1, scope: !3557)
!3575 = distinct !DISubprogram(name: "free_data_ref", scope: !3, file: !3, line: 901, type: !3576, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3578)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{null, !1930}
!3578 = !{!3579}
!3579 = !DILocalVariable(name: "dr", arg: 1, scope: !3575, file: !3, line: 901, type: !1930)
!3580 = !DILocation(line: 0, scope: !3575)
!3581 = !DILocation(line: 903, column: 3, scope: !3575)
!3582 = !DILocation(line: 904, column: 9, scope: !3575)
!3583 = !DILocation(line: 904, column: 3, scope: !3575)
!3584 = !DILocation(line: 905, column: 1, scope: !3575)
!3585 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !164, file: !164, line: 184, type: !3586, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3589)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !3588}
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!3589 = !{!3590}
!3590 = !DILocalVariable(name: "vec_", arg: 1, scope: !3585, file: !164, line: 184, type: !3588)
!3591 = !DILocation(line: 0, scope: !3585)
!3592 = !DILocation(line: 184, column: 1, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3585, file: !164, line: 184, column: 1)
!3594 = !DILocation(line: 184, column: 1, scope: !3585)
!3595 = distinct !DISubprogram(name: "create_data_ref", scope: !3, file: !3, line: 913, type: !3596, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3598)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!1860, !1045, !506, !830, !498}
!3598 = !{!3599, !3600, !3601, !3602, !3603}
!3599 = !DILocalVariable(name: "nest", arg: 1, scope: !3595, file: !3, line: 913, type: !1045)
!3600 = !DILocalVariable(name: "memref", arg: 2, scope: !3595, file: !3, line: 913, type: !506)
!3601 = !DILocalVariable(name: "stmt", arg: 3, scope: !3595, file: !3, line: 913, type: !830)
!3602 = !DILocalVariable(name: "is_read", arg: 4, scope: !3595, file: !3, line: 913, type: !498)
!3603 = !DILocalVariable(name: "dr", scope: !3595, file: !3, line: 915, type: !1860)
!3604 = !DILocation(line: 0, scope: !3595)
!3605 = !DILocation(line: 917, column: 7, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 917, column: 7)
!3607 = !DILocation(line: 917, column: 17, scope: !3606)
!3608 = !DILocation(line: 917, column: 21, scope: !3606)
!3609 = !DILocation(line: 917, column: 32, scope: !3606)
!3610 = !DILocation(line: 917, column: 7, scope: !3595)
!3611 = !DILocation(line: 919, column: 7, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 918, column: 5)
!3613 = !DILocation(line: 920, column: 27, scope: !3612)
!3614 = !DILocation(line: 920, column: 7, scope: !3612)
!3615 = !DILocation(line: 921, column: 16, scope: !3612)
!3616 = !DILocation(line: 921, column: 7, scope: !3612)
!3617 = !DILocation(line: 922, column: 5, scope: !3612)
!3618 = !DILocation(line: 924, column: 8, scope: !3595)
!3619 = !DILocation(line: 925, column: 3, scope: !3595)
!3620 = !DILocation(line: 925, column: 16, scope: !3595)
!3621 = !DILocation(line: 926, column: 3, scope: !3595)
!3622 = !DILocation(line: 926, column: 15, scope: !3595)
!3623 = !DILocation(line: 927, column: 3, scope: !3595)
!3624 = !DILocation(line: 927, column: 19, scope: !3595)
!3625 = !DILocation(line: 929, column: 3, scope: !3595)
!3626 = !DILocation(line: 930, column: 3, scope: !3595)
!3627 = !DILocation(line: 931, column: 3, scope: !3595)
!3628 = !DILocation(line: 933, column: 7, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 933, column: 7)
!3630 = !DILocation(line: 933, column: 17, scope: !3629)
!3631 = !DILocation(line: 933, column: 21, scope: !3629)
!3632 = !DILocation(line: 933, column: 32, scope: !3629)
!3633 = !DILocation(line: 933, column: 7, scope: !3595)
!3634 = !DILocation(line: 935, column: 7, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 934, column: 5)
!3636 = !DILocation(line: 936, column: 27, scope: !3635)
!3637 = !DILocation(line: 936, column: 38, scope: !3635)
!3638 = !DILocation(line: 936, column: 7, scope: !3635)
!3639 = !DILocation(line: 937, column: 16, scope: !3635)
!3640 = !DILocation(line: 937, column: 7, scope: !3635)
!3641 = !DILocation(line: 938, column: 27, scope: !3635)
!3642 = !DILocation(line: 938, column: 38, scope: !3635)
!3643 = !DILocation(line: 938, column: 7, scope: !3635)
!3644 = !DILocation(line: 939, column: 16, scope: !3635)
!3645 = !DILocation(line: 939, column: 7, scope: !3635)
!3646 = !DILocation(line: 940, column: 27, scope: !3635)
!3647 = !DILocation(line: 940, column: 38, scope: !3635)
!3648 = !DILocation(line: 940, column: 7, scope: !3635)
!3649 = !DILocation(line: 941, column: 16, scope: !3635)
!3650 = !DILocation(line: 941, column: 7, scope: !3635)
!3651 = !DILocation(line: 942, column: 27, scope: !3635)
!3652 = !DILocation(line: 942, column: 38, scope: !3635)
!3653 = !DILocation(line: 942, column: 7, scope: !3635)
!3654 = !DILocation(line: 943, column: 16, scope: !3635)
!3655 = !DILocation(line: 943, column: 7, scope: !3635)
!3656 = !DILocation(line: 944, column: 27, scope: !3635)
!3657 = !DILocation(line: 944, column: 38, scope: !3635)
!3658 = !DILocation(line: 944, column: 7, scope: !3635)
!3659 = !DILocation(line: 945, column: 16, scope: !3635)
!3660 = !DILocation(line: 945, column: 7, scope: !3635)
!3661 = !DILocation(line: 946, column: 27, scope: !3635)
!3662 = !DILocation(line: 946, column: 38, scope: !3635)
!3663 = !DILocation(line: 946, column: 7, scope: !3635)
!3664 = !DILocation(line: 947, column: 16, scope: !3635)
!3665 = !DILocation(line: 947, column: 7, scope: !3635)
!3666 = !DILocation(line: 948, column: 5, scope: !3635)
!3667 = !DILocation(line: 950, column: 3, scope: !3595)
!3668 = distinct !DISubprogram(name: "dr_analyze_indices", scope: !3, file: !3, line: 819, type: !3669, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3671)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{null, !1860, !1045}
!3671 = !{!3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683}
!3672 = !DILocalVariable(name: "dr", arg: 1, scope: !3668, file: !3, line: 819, type: !1860)
!3673 = !DILocalVariable(name: "nest", arg: 2, scope: !3668, file: !3, line: 819, type: !1045)
!3674 = !DILocalVariable(name: "stmt", scope: !3668, file: !3, line: 821, type: !830)
!3675 = !DILocalVariable(name: "loop", scope: !3668, file: !3, line: 822, type: !1045)
!3676 = !DILocalVariable(name: "access_fns", scope: !3668, file: !3, line: 823, type: !1880)
!3677 = !DILocalVariable(name: "ref", scope: !3668, file: !3, line: 824, type: !506)
!3678 = !DILocalVariable(name: "aref", scope: !3668, file: !3, line: 824, type: !506)
!3679 = !DILocalVariable(name: "op", scope: !3668, file: !3, line: 824, type: !506)
!3680 = !DILocalVariable(name: "base", scope: !3668, file: !3, line: 825, type: !506)
!3681 = !DILocalVariable(name: "off", scope: !3668, file: !3, line: 825, type: !506)
!3682 = !DILocalVariable(name: "access_fn", scope: !3668, file: !3, line: 825, type: !506)
!3683 = !DILocalVariable(name: "before_loop", scope: !3668, file: !3, line: 826, type: !1282)
!3684 = !DILocation(line: 0, scope: !3668)
!3685 = !DILocation(line: 821, column: 17, scope: !3668)
!3686 = !DILocation(line: 822, column: 23, scope: !3668)
!3687 = !DILocation(line: 823, column: 3, scope: !3668)
!3688 = !DILocation(line: 823, column: 21, scope: !3668)
!3689 = !DILocation(line: 824, column: 28, scope: !3668)
!3690 = !DILocation(line: 824, column: 14, scope: !3668)
!3691 = !DILocation(line: 825, column: 3, scope: !3668)
!3692 = !DILocation(line: 828, column: 7, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 828, column: 7)
!3694 = !DILocation(line: 828, column: 7, scope: !3668)
!3695 = !DILocation(line: 829, column: 19, scope: !3693)
!3696 = !DILocation(line: 829, column: 5, scope: !3693)
!3697 = !DILocation(line: 831, column: 3, scope: !3668)
!3698 = !DILocation(line: 831, column: 10, scope: !3668)
!3699 = !DILocation(line: 833, column: 11, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 833, column: 11)
!3701 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 832, column: 5)
!3702 = !DILocation(line: 833, column: 28, scope: !3700)
!3703 = !DILocation(line: 833, column: 11, scope: !3701)
!3704 = !DILocation(line: 835, column: 9, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 834, column: 2)
!3706 = !DILocation(line: 843, column: 44, scope: !3705)
!3707 = !DILocation(line: 843, column: 29, scope: !3705)
!3708 = !DILocation(line: 843, column: 27, scope: !3705)
!3709 = !DILocation(line: 844, column: 2, scope: !3705)
!3710 = !DILocation(line: 846, column: 14, scope: !3701)
!3711 = distinct !{!3711, !3697, !3712}
!3712 = !DILocation(line: 847, column: 5, scope: !3668)
!3713 = !DILocation(line: 849, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 849, column: 7)
!3715 = !DILocation(line: 838, column: 22, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 837, column: 6)
!3717 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 836, column: 8)
!3718 = !DILocation(line: 839, column: 20, scope: !3716)
!3719 = !DILocation(line: 840, column: 8, scope: !3716)
!3720 = !DILocation(line: 849, column: 12, scope: !3714)
!3721 = !DILocation(line: 849, column: 15, scope: !3714)
!3722 = !DILocation(line: 849, column: 7, scope: !3668)
!3723 = !DILocation(line: 851, column: 12, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 850, column: 5)
!3725 = !DILocation(line: 852, column: 19, scope: !3724)
!3726 = !DILocation(line: 853, column: 19, scope: !3724)
!3727 = !DILocation(line: 854, column: 14, scope: !3724)
!3728 = !DILocation(line: 854, column: 12, scope: !3724)
!3729 = !DILocation(line: 855, column: 7, scope: !3724)
!3730 = !DILocation(line: 857, column: 4, scope: !3724)
!3731 = !DILocation(line: 856, column: 19, scope: !3724)
!3732 = !DILocation(line: 859, column: 32, scope: !3724)
!3733 = !DILocation(line: 859, column: 30, scope: !3724)
!3734 = !DILocation(line: 860, column: 7, scope: !3724)
!3735 = !DILocation(line: 861, column: 5, scope: !3724)
!3736 = !DILocation(line: 863, column: 3, scope: !3668)
!3737 = !DILocation(line: 863, column: 23, scope: !3668)
!3738 = !DILocation(line: 864, column: 24, scope: !3668)
!3739 = !DILocation(line: 864, column: 3, scope: !3668)
!3740 = !DILocation(line: 864, column: 22, scope: !3668)
!3741 = !DILocation(line: 865, column: 1, scope: !3668)
!3742 = distinct !DISubprogram(name: "dr_analyze_alias", scope: !3, file: !3, line: 870, type: !2793, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3743)
!3743 = !{!3744, !3745, !3746, !3747}
!3744 = !DILocalVariable(name: "dr", arg: 1, scope: !3742, file: !3, line: 870, type: !1860)
!3745 = !DILocalVariable(name: "ref", scope: !3742, file: !3, line: 872, type: !506)
!3746 = !DILocalVariable(name: "base", scope: !3742, file: !3, line: 873, type: !506)
!3747 = !DILocalVariable(name: "addr", scope: !3742, file: !3, line: 873, type: !506)
!3748 = !DILocation(line: 0, scope: !3742)
!3749 = !DILocation(line: 872, column: 14, scope: !3742)
!3750 = !DILocation(line: 873, column: 15, scope: !3742)
!3751 = !DILocation(line: 875, column: 7, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 875, column: 7)
!3753 = !DILocation(line: 875, column: 7, scope: !3742)
!3754 = !DILocation(line: 877, column: 14, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 876, column: 5)
!3756 = !DILocation(line: 878, column: 11, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 878, column: 11)
!3758 = !DILocation(line: 878, column: 28, scope: !3757)
!3759 = !DILocation(line: 878, column: 11, scope: !3755)
!3760 = !DILocation(line: 879, column: 21, scope: !3757)
!3761 = !DILocation(line: 879, column: 2, scope: !3757)
!3762 = !DILocation(line: 879, column: 19, scope: !3757)
!3763 = !DILocation(line: 881, column: 1, scope: !3742)
!3764 = distinct !DISubprogram(name: "dr_may_alias_p", scope: !3, file: !3, line: 1289, type: !3765, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!498, !3767, !3767}
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!3769 = !{!3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777}
!3770 = !DILocalVariable(name: "a", arg: 1, scope: !3764, file: !3, line: 1289, type: !3767)
!3771 = !DILocalVariable(name: "b", arg: 2, scope: !3764, file: !3, line: 1289, type: !3767)
!3772 = !DILocalVariable(name: "addr_a", scope: !3764, file: !3, line: 1291, type: !3244)
!3773 = !DILocalVariable(name: "addr_b", scope: !3764, file: !3, line: 1292, type: !3244)
!3774 = !DILocalVariable(name: "type_a", scope: !3764, file: !3, line: 1293, type: !3244)
!3775 = !DILocalVariable(name: "type_b", scope: !3764, file: !3, line: 1293, type: !3244)
!3776 = !DILocalVariable(name: "decl_a", scope: !3764, file: !3, line: 1294, type: !3244)
!3777 = !DILocalVariable(name: "decl_b", scope: !3764, file: !3, line: 1294, type: !3244)
!3778 = !DILocation(line: 0, scope: !3764)
!3779 = !DILocation(line: 1291, column: 23, scope: !3764)
!3780 = !DILocation(line: 1292, column: 23, scope: !3764)
!3781 = !DILocation(line: 1298, column: 27, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1298, column: 7)
!3783 = !DILocation(line: 1298, column: 47, scope: !3782)
!3784 = !DILocation(line: 1298, column: 7, scope: !3782)
!3785 = !DILocation(line: 1298, column: 7, scope: !3764)
!3786 = !DILocation(line: 1302, column: 8, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1302, column: 7)
!3788 = !DILocation(line: 1302, column: 23, scope: !3787)
!3789 = !DILocation(line: 1302, column: 27, scope: !3787)
!3790 = !DILocation(line: 1302, column: 7, scope: !3764)
!3791 = !DILocation(line: 1304, column: 37, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1304, column: 11)
!3793 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1303, column: 5)
!3794 = !DILocation(line: 1304, column: 49, scope: !3792)
!3795 = !DILocation(line: 1304, column: 12, scope: !3792)
!3796 = !DILocation(line: 1304, column: 11, scope: !3793)
!3797 = !DILocation(line: 1307, column: 27, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1307, column: 12)
!3799 = !DILocation(line: 1307, column: 31, scope: !3798)
!3800 = !DILocation(line: 1307, column: 12, scope: !3787)
!3801 = !DILocation(line: 1309, column: 35, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1309, column: 11)
!3803 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1308, column: 5)
!3804 = !DILocation(line: 1309, column: 47, scope: !3802)
!3805 = !DILocation(line: 1309, column: 12, scope: !3802)
!3806 = !DILocation(line: 1309, column: 11, scope: !3803)
!3807 = !DILocation(line: 1312, column: 31, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1312, column: 12)
!3809 = !DILocation(line: 1312, column: 43, scope: !3808)
!3810 = !DILocation(line: 1312, column: 13, scope: !3808)
!3811 = !DILocation(line: 1312, column: 12, scope: !3798)
!3812 = !DILocation(line: 1315, column: 8, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1315, column: 7)
!3814 = !DILocation(line: 1315, column: 19, scope: !3813)
!3815 = !DILocation(line: 1315, column: 15, scope: !3813)
!3816 = !DILocation(line: 1321, column: 7, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1321, column: 7)
!3818 = !DILocation(line: 1321, column: 26, scope: !3817)
!3819 = !DILocation(line: 1322, column: 7, scope: !3817)
!3820 = !DILocation(line: 1322, column: 10, scope: !3817)
!3821 = !DILocation(line: 1322, column: 29, scope: !3817)
!3822 = !DILocation(line: 1321, column: 7, scope: !3764)
!3823 = !DILocation(line: 1323, column: 12, scope: !3817)
!3824 = !DILocation(line: 1323, column: 40, scope: !3817)
!3825 = !DILocation(line: 1323, column: 37, scope: !3817)
!3826 = !DILocation(line: 1323, column: 5, scope: !3817)
!3827 = !DILocation(line: 1329, column: 12, scope: !3764)
!3828 = !DILocation(line: 1330, column: 12, scope: !3764)
!3829 = !DILocation(line: 1331, column: 3, scope: !3764)
!3830 = !DILocation(line: 1333, column: 7, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1333, column: 7)
!3832 = !DILocation(line: 1333, column: 26, scope: !3831)
!3833 = !DILocation(line: 1333, column: 7, scope: !3764)
!3834 = !DILocation(line: 1334, column: 14, scope: !3831)
!3835 = !DILocation(line: 1334, column: 5, scope: !3831)
!3836 = !DILocation(line: 1335, column: 7, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1335, column: 7)
!3838 = !DILocation(line: 1335, column: 26, scope: !3837)
!3839 = !DILocation(line: 1335, column: 7, scope: !3764)
!3840 = !DILocation(line: 1336, column: 14, scope: !3837)
!3841 = !DILocation(line: 1336, column: 5, scope: !3837)
!3842 = !DILocation(line: 1338, column: 7, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1338, column: 7)
!3844 = !DILocation(line: 1338, column: 30, scope: !3843)
!3845 = !DILocation(line: 1338, column: 33, scope: !3843)
!3846 = !DILocation(line: 1339, column: 7, scope: !3843)
!3847 = !DILocation(line: 1339, column: 12, scope: !3843)
!3848 = !DILocation(line: 1339, column: 27, scope: !3843)
!3849 = !DILocation(line: 1339, column: 31, scope: !3843)
!3850 = !DILocation(line: 1340, column: 10, scope: !3843)
!3851 = !DILocation(line: 1340, column: 7, scope: !3843)
!3852 = !DILocation(line: 1340, column: 17, scope: !3843)
!3853 = !DILocation(line: 1340, column: 20, scope: !3843)
!3854 = !DILocation(line: 1341, column: 10, scope: !3843)
!3855 = !DILocation(line: 1341, column: 7, scope: !3843)
!3856 = !DILocation(line: 1341, column: 20, scope: !3843)
!3857 = !DILocation(line: 1342, column: 17, scope: !3843)
!3858 = !DILocation(line: 1342, column: 7, scope: !3843)
!3859 = !DILocation(line: 1343, column: 10, scope: !3843)
!3860 = !DILocation(line: 1343, column: 44, scope: !3843)
!3861 = !DILocation(line: 1344, column: 7, scope: !3843)
!3862 = !DILocation(line: 1344, column: 35, scope: !3843)
!3863 = !DILocation(line: 1344, column: 32, scope: !3843)
!3864 = !DILocation(line: 1338, column: 7, scope: !3764)
!3865 = !DILocation(line: 1347, column: 3, scope: !3764)
!3866 = !DILocation(line: 1348, column: 1, scope: !3764)
!3867 = distinct !DISubprogram(name: "disjoint_objects_p", scope: !3, file: !3, line: 1204, type: !3868, scopeLine: 1205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!498, !506, !506}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877}
!3871 = !DILocalVariable(name: "a", arg: 1, scope: !3867, file: !3, line: 1204, type: !506)
!3872 = !DILocalVariable(name: "b", arg: 2, scope: !3867, file: !3, line: 1204, type: !506)
!3873 = !DILocalVariable(name: "base_a", scope: !3867, file: !3, line: 1206, type: !506)
!3874 = !DILocalVariable(name: "base_b", scope: !3867, file: !3, line: 1206, type: !506)
!3875 = !DILocalVariable(name: "comp_a", scope: !3867, file: !3, line: 1207, type: !1880)
!3876 = !DILocalVariable(name: "comp_b", scope: !3867, file: !3, line: 1207, type: !1880)
!3877 = !DILocalVariable(name: "ret", scope: !3867, file: !3, line: 1208, type: !498)
!3878 = !DILocation(line: 0, scope: !3867)
!3879 = !DILocation(line: 1207, column: 3, scope: !3867)
!3880 = !DILocation(line: 1207, column: 21, scope: !3867)
!3881 = !DILocation(line: 1207, column: 37, scope: !3867)
!3882 = !DILocation(line: 1210, column: 12, scope: !3867)
!3883 = !DILocation(line: 1211, column: 12, scope: !3867)
!3884 = !DILocation(line: 1213, column: 7, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1213, column: 7)
!3886 = !DILocation(line: 1214, column: 7, scope: !3885)
!3887 = !DILocation(line: 1214, column: 10, scope: !3885)
!3888 = !DILocation(line: 1215, column: 17, scope: !3885)
!3889 = !DILocation(line: 1215, column: 7, scope: !3885)
!3890 = !DILocation(line: 1218, column: 8, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1218, column: 7)
!3892 = !DILocation(line: 1218, column: 7, scope: !3867)
!3893 = !DILocation(line: 1223, column: 3, scope: !3867)
!3894 = !DILocation(line: 1223, column: 10, scope: !3867)
!3895 = !DILocation(line: 1228, column: 3, scope: !3867)
!3896 = !DILocation(line: 1225, column: 7, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1224, column: 5)
!3898 = !DILocation(line: 1226, column: 11, scope: !3897)
!3899 = distinct !{!3899, !3893, !3900}
!3900 = !DILocation(line: 1227, column: 5, scope: !3867)
!3901 = !DILocation(line: 1228, column: 10, scope: !3867)
!3902 = !DILocation(line: 1235, column: 3, scope: !3867)
!3903 = !DILocation(line: 1230, column: 7, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1229, column: 5)
!3905 = !DILocation(line: 1231, column: 11, scope: !3904)
!3906 = distinct !{!3906, !3895, !3907}
!3907 = !DILocation(line: 1232, column: 5, scope: !3867)
!3908 = !DILocation(line: 1237, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1237, column: 11)
!3910 = distinct !DILexicalBlock(scope: !3867, file: !3, line: 1236, column: 5)
!3911 = !DILocation(line: 1237, column: 37, scope: !3909)
!3912 = !DILocation(line: 1238, column: 4, scope: !3909)
!3913 = !DILocation(line: 1238, column: 7, scope: !3909)
!3914 = !DILocation(line: 1238, column: 33, scope: !3909)
!3915 = !DILocation(line: 1237, column: 11, scope: !3910)
!3916 = !DILocation(line: 1241, column: 11, scope: !3910)
!3917 = !DILocation(line: 1242, column: 11, scope: !3910)
!3918 = !DILocation(line: 1245, column: 12, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1245, column: 11)
!3920 = !DILocation(line: 1245, column: 26, scope: !3919)
!3921 = !DILocation(line: 1246, column: 5, scope: !3919)
!3922 = !DILocation(line: 1246, column: 8, scope: !3919)
!3923 = !DILocation(line: 1246, column: 22, scope: !3919)
!3924 = !DILocation(line: 1247, column: 4, scope: !3919)
!3925 = !DILocation(line: 1247, column: 22, scope: !3919)
!3926 = !DILocation(line: 1248, column: 8, scope: !3919)
!3927 = !DILocation(line: 0, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1254, column: 11)
!3929 = !DILocation(line: 1254, column: 28, scope: !3928)
!3930 = !DILocation(line: 1248, column: 11, scope: !3919)
!3931 = !DILocation(line: 1248, column: 25, scope: !3919)
!3932 = !DILocation(line: 1245, column: 11, scope: !3910)
!3933 = !DILocation(line: 1254, column: 25, scope: !3928)
!3934 = !DILocation(line: 1254, column: 11, scope: !3910)
!3935 = !DILocation(line: 1259, column: 25, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 1259, column: 11)
!3937 = !DILocation(line: 1259, column: 11, scope: !3910)
!3938 = distinct !{!3938, !3902, !3939}
!3939 = !DILocation(line: 1277, column: 5, scope: !3867)
!3940 = !DILocation(line: 1261, column: 30, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1261, column: 16)
!3942 = !DILocation(line: 1261, column: 16, scope: !3936)
!3943 = !DILocation(line: 1263, column: 25, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1263, column: 8)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1262, column: 2)
!3946 = !DILocation(line: 1263, column: 46, scope: !3944)
!3947 = !DILocation(line: 1263, column: 8, scope: !3944)
!3948 = !DILocation(line: 1263, column: 8, scope: !3945)
!3949 = !DILocation(line: 1267, column: 13, scope: !3945)
!3950 = !DILocation(line: 1268, column: 8, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3945, file: !3, line: 1268, column: 8)
!3952 = !DILocation(line: 1268, column: 39, scope: !3951)
!3953 = !DILocation(line: 0, scope: !3945)
!3954 = !DILocation(line: 1279, column: 3, scope: !3867)
!3955 = !DILocation(line: 1280, column: 3, scope: !3867)
!3956 = !DILocation(line: 1282, column: 3, scope: !3867)
!3957 = !DILocation(line: 1283, column: 1, scope: !3867)
!3958 = distinct !DISubprogram(name: "estimated_loop_iterations", scope: !3, file: !3, line: 1673, type: !3959, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3962)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!498, !1045, !498, !3961}
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!3962 = !{!3963, !3964, !3965}
!3963 = !DILocalVariable(name: "loop", arg: 1, scope: !3958, file: !3, line: 1673, type: !1045)
!3964 = !DILocalVariable(name: "conservative", arg: 2, scope: !3958, file: !3, line: 1673, type: !498)
!3965 = !DILocalVariable(name: "nit", arg: 3, scope: !3958, file: !3, line: 1674, type: !3961)
!3966 = !DILocation(line: 0, scope: !3958)
!3967 = !DILocation(line: 1676, column: 3, scope: !3958)
!3968 = !DILocation(line: 1677, column: 7, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3958, file: !3, line: 1677, column: 7)
!3970 = !DILocation(line: 1677, column: 7, scope: !3958)
!3971 = !DILocation(line: 1679, column: 18, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1679, column: 11)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1678, column: 5)
!3974 = !DILocation(line: 1679, column: 12, scope: !3972)
!3975 = !DILocation(line: 1679, column: 11, scope: !3973)
!3976 = !DILocation(line: 1682, column: 20, scope: !3973)
!3977 = !DILocation(line: 1683, column: 5, scope: !3973)
!3978 = !DILocation(line: 1686, column: 18, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1686, column: 11)
!3980 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1685, column: 5)
!3981 = !DILocation(line: 1686, column: 12, scope: !3979)
!3982 = !DILocation(line: 1686, column: 11, scope: !3980)
!3983 = !DILocation(line: 1689, column: 20, scope: !3980)
!3984 = !DILocation(line: 1693, column: 1, scope: !3958)
!3985 = distinct !DISubprogram(name: "estimated_loop_iterations_int", scope: !3, file: !3, line: 1700, type: !3986, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3988)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!562, !1045, !498}
!3988 = !{!3989, !3990, !3991, !3992}
!3989 = !DILocalVariable(name: "loop", arg: 1, scope: !3985, file: !3, line: 1700, type: !1045)
!3990 = !DILocalVariable(name: "conservative", arg: 2, scope: !3985, file: !3, line: 1700, type: !498)
!3991 = !DILocalVariable(name: "nit", scope: !3985, file: !3, line: 1702, type: !555)
!3992 = !DILocalVariable(name: "hwi_nit", scope: !3985, file: !3, line: 1703, type: !562)
!3993 = !DILocation(line: 0, scope: !3985)
!3994 = !DILocation(line: 1702, column: 3, scope: !3985)
!3995 = !DILocation(line: 1705, column: 8, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1705, column: 7)
!3997 = !DILocation(line: 1705, column: 7, scope: !3985)
!3998 = !DILocation(line: 1708, column: 8, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1708, column: 7)
!4000 = !DILocation(line: 1708, column: 7, scope: !3985)
!4001 = !DILocation(line: 1710, column: 13, scope: !3985)
!4002 = !DILocation(line: 1712, column: 18, scope: !3985)
!4003 = !DILocation(line: 1712, column: 10, scope: !3985)
!4004 = !DILocation(line: 1712, column: 3, scope: !3985)
!4005 = !DILocation(line: 1713, column: 1, scope: !3985)
!4006 = distinct !DISubprogram(name: "compute_all_dependences", scope: !3, file: !3, line: 4052, type: !4007, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4010)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{null, !2010, !4009, !1895, !498}
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!4010 = !{!4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019}
!4011 = !DILocalVariable(name: "datarefs", arg: 1, scope: !4006, file: !3, line: 4052, type: !2010)
!4012 = !DILocalVariable(name: "dependence_relations", arg: 2, scope: !4006, file: !3, line: 4053, type: !4009)
!4013 = !DILocalVariable(name: "loop_nest", arg: 3, scope: !4006, file: !3, line: 4054, type: !1895)
!4014 = !DILocalVariable(name: "compute_self_and_rr", arg: 4, scope: !4006, file: !3, line: 4055, type: !498)
!4015 = !DILocalVariable(name: "ddr", scope: !4006, file: !3, line: 4057, type: !1932)
!4016 = !DILocalVariable(name: "a", scope: !4006, file: !3, line: 4058, type: !1860)
!4017 = !DILocalVariable(name: "b", scope: !4006, file: !3, line: 4058, type: !1860)
!4018 = !DILocalVariable(name: "i", scope: !4006, file: !3, line: 4059, type: !7)
!4019 = !DILocalVariable(name: "j", scope: !4006, file: !3, line: 4059, type: !7)
!4020 = !DILocation(line: 0, scope: !4006)
!4021 = !DILocation(line: 4058, column: 3, scope: !4006)
!4022 = !DILocation(line: 0, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 4061, column: 3)
!4024 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 4061, column: 3)
!4025 = !DILocation(line: 0, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 4063, column: 11)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 4062, column: 5)
!4028 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 4062, column: 5)
!4029 = !DILocation(line: 0, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 4067, column: 15)
!4031 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 4064, column: 2)
!4032 = !DILocation(line: 4061, column: 8, scope: !4024)
!4033 = !DILocation(line: 0, scope: !4024)
!4034 = !DILocation(line: 4061, column: 15, scope: !4023)
!4035 = !DILocation(line: 4061, column: 3, scope: !4024)
!4036 = !DILocation(line: 4062, column: 10, scope: !4028)
!4037 = !DILocation(line: 0, scope: !4028)
!4038 = !DILocation(line: 4062, column: 21, scope: !4027)
!4039 = !DILocation(line: 4062, column: 5, scope: !4028)
!4040 = !DILocation(line: 4063, column: 27, scope: !4026)
!4041 = !DILocation(line: 4063, column: 46, scope: !4026)
!4042 = !DILocation(line: 4063, column: 12, scope: !4026)
!4043 = !DILocation(line: 4065, column: 50, scope: !4031)
!4044 = !DILocation(line: 4065, column: 10, scope: !4031)
!4045 = !DILocation(line: 4066, column: 4, scope: !4031)
!4046 = !DILocation(line: 4067, column: 15, scope: !4031)
!4047 = !DILocation(line: 4068, column: 41, scope: !4030)
!4048 = !DILocation(line: 4068, column: 9, scope: !4030)
!4049 = !DILocation(line: 4062, column: 5, scope: !4027)
!4050 = distinct !{!4050, !4039, !4051}
!4051 = !DILocation(line: 4069, column: 2, scope: !4028)
!4052 = !DILocation(line: 4061, column: 64, scope: !4023)
!4053 = !DILocation(line: 4063, column: 31, scope: !4026)
!4054 = !DILocation(line: 4061, column: 3, scope: !4023)
!4055 = distinct !{!4055, !4035, !4056}
!4056 = !DILocation(line: 4069, column: 2, scope: !4024)
!4057 = !DILocation(line: 4071, column: 7, scope: !4006)
!4058 = !DILocation(line: 4072, column: 5, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 4072, column: 5)
!4060 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 4071, column: 7)
!4061 = !DILocation(line: 0, scope: !4059)
!4062 = !DILocation(line: 4072, column: 17, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 4072, column: 5)
!4064 = !DILocation(line: 4074, column: 45, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 4073, column: 7)
!4066 = !DILocation(line: 4074, column: 8, scope: !4065)
!4067 = !DILocation(line: 4075, column: 2, scope: !4065)
!4068 = !DILocation(line: 4076, column: 2, scope: !4065)
!4069 = !DILocation(line: 4072, column: 66, scope: !4063)
!4070 = !DILocation(line: 4072, column: 5, scope: !4063)
!4071 = distinct !{!4071, !4058, !4072}
!4072 = !DILocation(line: 4077, column: 7, scope: !4059)
!4073 = !DILocation(line: 4078, column: 1, scope: !4006)
!4074 = distinct !DISubprogram(name: "initialize_data_dependence_relation", scope: !3, file: !3, line: 1357, type: !4075, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4077)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!1932, !1860, !1860, !1895}
!4077 = !{!4078, !4079, !4080, !4081, !4082, !4083}
!4078 = !DILocalVariable(name: "a", arg: 1, scope: !4074, file: !3, line: 1357, type: !1860)
!4079 = !DILocalVariable(name: "b", arg: 2, scope: !4074, file: !3, line: 1358, type: !1860)
!4080 = !DILocalVariable(name: "loop_nest", arg: 3, scope: !4074, file: !3, line: 1359, type: !1895)
!4081 = !DILocalVariable(name: "res", scope: !4074, file: !3, line: 1361, type: !1932)
!4082 = !DILocalVariable(name: "i", scope: !4074, file: !3, line: 1362, type: !7)
!4083 = !DILocalVariable(name: "subscript", scope: !4084, file: !3, line: 1430, type: !1952)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1429, column: 5)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 1428, column: 3)
!4086 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1428, column: 3)
!4087 = !DILocation(line: 0, scope: !4074)
!4088 = !DILocation(line: 1364, column: 9, scope: !4074)
!4089 = !DILocation(line: 1365, column: 3, scope: !4074)
!4090 = !DILocation(line: 1365, column: 15, scope: !4074)
!4091 = !DILocation(line: 1366, column: 3, scope: !4074)
!4092 = !DILocation(line: 1366, column: 15, scope: !4074)
!4093 = !DILocation(line: 1367, column: 3, scope: !4074)
!4094 = !DILocation(line: 1367, column: 23, scope: !4074)
!4095 = !DILocation(line: 1368, column: 3, scope: !4074)
!4096 = !DILocation(line: 1368, column: 24, scope: !4074)
!4097 = !DILocation(line: 1369, column: 3, scope: !4074)
!4098 = !DILocation(line: 1369, column: 24, scope: !4074)
!4099 = !DILocation(line: 1370, column: 3, scope: !4074)
!4100 = !DILocation(line: 1370, column: 23, scope: !4074)
!4101 = !DILocation(line: 1371, column: 3, scope: !4074)
!4102 = !DILocation(line: 1371, column: 24, scope: !4074)
!4103 = !DILocation(line: 1373, column: 9, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1373, column: 7)
!4105 = !DILocation(line: 1373, column: 22, scope: !4104)
!4106 = !DILocation(line: 1373, column: 17, scope: !4104)
!4107 = !DILocation(line: 1375, column: 33, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1374, column: 5)
!4109 = !DILocation(line: 1375, column: 7, scope: !4108)
!4110 = !DILocation(line: 1375, column: 31, scope: !4108)
!4111 = !DILocation(line: 1376, column: 7, scope: !4108)
!4112 = !DILocation(line: 1380, column: 8, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1380, column: 7)
!4114 = !DILocation(line: 1380, column: 7, scope: !4074)
!4115 = !DILocation(line: 1382, column: 33, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 1381, column: 5)
!4117 = !DILocation(line: 1382, column: 7, scope: !4116)
!4118 = !DILocation(line: 1382, column: 31, scope: !4116)
!4119 = !DILocation(line: 1383, column: 7, scope: !4116)
!4120 = !DILocation(line: 1388, column: 24, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1388, column: 7)
!4122 = !DILocation(line: 1388, column: 36, scope: !4121)
!4123 = !DILocation(line: 1388, column: 7, scope: !4121)
!4124 = !DILocation(line: 1388, column: 7, scope: !4074)
!4125 = !DILocation(line: 1390, column: 7, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 1389, column: 5)
!4127 = !DILocation(line: 1390, column: 26, scope: !4126)
!4128 = !DILocation(line: 1391, column: 7, scope: !4126)
!4129 = !DILocation(line: 1391, column: 31, scope: !4126)
!4130 = !DILocation(line: 1392, column: 30, scope: !4126)
!4131 = !DILocation(line: 1392, column: 28, scope: !4126)
!4132 = !DILocation(line: 1393, column: 27, scope: !4126)
!4133 = !DILocation(line: 1394, column: 7, scope: !4126)
!4134 = !DILocation(line: 1394, column: 28, scope: !4126)
!4135 = !DILocation(line: 1395, column: 7, scope: !4126)
!4136 = !DILocation(line: 1395, column: 32, scope: !4126)
!4137 = !DILocation(line: 1396, column: 7, scope: !4126)
!4138 = !DILocation(line: 1397, column: 7, scope: !4126)
!4139 = !DILocation(line: 1402, column: 25, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1402, column: 7)
!4141 = !DILocation(line: 1402, column: 45, scope: !4140)
!4142 = !DILocation(line: 1402, column: 8, scope: !4140)
!4143 = !DILocation(line: 1402, column: 7, scope: !4074)
!4144 = !DILocation(line: 1404, column: 33, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1403, column: 5)
!4146 = !DILocation(line: 1404, column: 7, scope: !4145)
!4147 = !DILocation(line: 1404, column: 31, scope: !4145)
!4148 = !DILocation(line: 1405, column: 7, scope: !4145)
!4149 = !DILocation(line: 1411, column: 7, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1411, column: 7)
!4151 = !DILocation(line: 1412, column: 7, scope: !4150)
!4152 = !DILocation(line: 1412, column: 47, scope: !4150)
!4153 = !DILocation(line: 1413, column: 17, scope: !4150)
!4154 = !DILocation(line: 1412, column: 11, scope: !4150)
!4155 = !DILocation(line: 1411, column: 7, scope: !4074)
!4156 = !DILocation(line: 1415, column: 33, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1414, column: 5)
!4158 = !DILocation(line: 1415, column: 7, scope: !4157)
!4159 = !DILocation(line: 1415, column: 31, scope: !4157)
!4160 = !DILocation(line: 1416, column: 7, scope: !4157)
!4161 = !DILocation(line: 1419, column: 3, scope: !4074)
!4162 = !DILocation(line: 1421, column: 3, scope: !4074)
!4163 = !DILocation(line: 1421, column: 22, scope: !4074)
!4164 = !DILocation(line: 1422, column: 3, scope: !4074)
!4165 = !DILocation(line: 1422, column: 27, scope: !4074)
!4166 = !DILocation(line: 1423, column: 26, scope: !4074)
!4167 = !DILocation(line: 1423, column: 24, scope: !4074)
!4168 = !DILocation(line: 1424, column: 23, scope: !4074)
!4169 = !DILocation(line: 1425, column: 3, scope: !4074)
!4170 = !DILocation(line: 1425, column: 24, scope: !4074)
!4171 = !DILocation(line: 1426, column: 3, scope: !4074)
!4172 = !DILocation(line: 1426, column: 28, scope: !4074)
!4173 = !DILocation(line: 1428, column: 8, scope: !4086)
!4174 = !DILocation(line: 0, scope: !4086)
!4175 = !DILocation(line: 1428, column: 19, scope: !4085)
!4176 = !DILocation(line: 1428, column: 17, scope: !4085)
!4177 = !DILocation(line: 1428, column: 3, scope: !4086)
!4178 = !DILocation(line: 1432, column: 19, scope: !4084)
!4179 = !DILocation(line: 0, scope: !4084)
!4180 = !DILocation(line: 1433, column: 40, scope: !4084)
!4181 = !DILocation(line: 1433, column: 7, scope: !4084)
!4182 = !DILocation(line: 1433, column: 38, scope: !4084)
!4183 = !DILocation(line: 1434, column: 40, scope: !4084)
!4184 = !DILocation(line: 1434, column: 7, scope: !4084)
!4185 = !DILocation(line: 1434, column: 38, scope: !4084)
!4186 = !DILocation(line: 1435, column: 39, scope: !4084)
!4187 = !DILocation(line: 1435, column: 7, scope: !4084)
!4188 = !DILocation(line: 1435, column: 37, scope: !4084)
!4189 = !DILocation(line: 1436, column: 7, scope: !4084)
!4190 = !DILocation(line: 1436, column: 32, scope: !4084)
!4191 = !DILocation(line: 1437, column: 7, scope: !4084)
!4192 = !DILocation(line: 1428, column: 43, scope: !4085)
!4193 = !DILocation(line: 1428, column: 3, scope: !4085)
!4194 = distinct !{!4194, !4177, !4195}
!4195 = !DILocation(line: 1438, column: 5, scope: !4086)
!4196 = !DILocation(line: 1441, column: 1, scope: !4074)
!4197 = distinct !DISubprogram(name: "VEC_ddr_p_heap_safe_push", scope: !391, file: !391, line: 333, type: !4198, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4200)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!2650, !4009, !1931}
!4200 = !{!4201, !4202}
!4201 = !DILocalVariable(name: "vec_", arg: 1, scope: !4197, file: !391, line: 333, type: !4009)
!4202 = !DILocalVariable(name: "obj_", arg: 2, scope: !4197, file: !391, line: 333, type: !1931)
!4203 = !DILocation(line: 0, scope: !4197)
!4204 = !DILocation(line: 333, column: 1, scope: !4197)
!4205 = distinct !DISubprogram(name: "compute_affine_dependence", scope: !3, file: !3, line: 3920, type: !4206, scopeLine: 3922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4208)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{null, !1932, !1045}
!4208 = !{!4209, !4210, !4211, !4212, !4213, !4222, !4223, !4224}
!4209 = !DILocalVariable(name: "ddr", arg: 1, scope: !4205, file: !3, line: 3920, type: !1932)
!4210 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !4205, file: !3, line: 3921, type: !1045)
!4211 = !DILocalVariable(name: "dra", scope: !4205, file: !3, line: 3923, type: !1860)
!4212 = !DILocalVariable(name: "drb", scope: !4205, file: !3, line: 3924, type: !1860)
!4213 = !DILocalVariable(name: "maybe_dependent", scope: !4214, file: !3, line: 3958, type: !498)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 3957, column: 3)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 3956, column: 12)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 3946, column: 6)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 3945, column: 8)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 3944, column: 2)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 3942, column: 11)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 3939, column: 5)
!4221 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 3937, column: 7)
!4222 = !DILocalVariable(name: "dir_vects", scope: !4214, file: !3, line: 3959, type: !1969)
!4223 = !DILocalVariable(name: "dist_vects", scope: !4214, file: !3, line: 3959, type: !1969)
!4224 = !DILabel(scope: !4225, name: "csys_dont_know", file: !3, line: 3994)
!4225 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 3993, column: 2)
!4226 = !DILocation(line: 0, scope: !4205)
!4227 = !DILocation(line: 3923, column: 32, scope: !4205)
!4228 = !DILocation(line: 3924, column: 32, scope: !4205)
!4229 = !DILocation(line: 3926, column: 7, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 3926, column: 7)
!4231 = !DILocation(line: 3926, column: 17, scope: !4230)
!4232 = !DILocation(line: 3926, column: 21, scope: !4230)
!4233 = !DILocation(line: 3926, column: 32, scope: !4230)
!4234 = !DILocation(line: 3926, column: 7, scope: !4205)
!4235 = !DILocation(line: 3928, column: 7, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 3927, column: 5)
!4237 = !DILocation(line: 3929, column: 16, scope: !4236)
!4238 = !DILocation(line: 3929, column: 7, scope: !4236)
!4239 = !DILocation(line: 3930, column: 26, scope: !4236)
!4240 = !DILocation(line: 3930, column: 37, scope: !4236)
!4241 = !DILocation(line: 3930, column: 7, scope: !4236)
!4242 = !DILocation(line: 3931, column: 16, scope: !4236)
!4243 = !DILocation(line: 3931, column: 7, scope: !4236)
!4244 = !DILocation(line: 3932, column: 26, scope: !4236)
!4245 = !DILocation(line: 3932, column: 37, scope: !4236)
!4246 = !DILocation(line: 3932, column: 7, scope: !4236)
!4247 = !DILocation(line: 3933, column: 16, scope: !4236)
!4248 = !DILocation(line: 3933, column: 7, scope: !4236)
!4249 = !DILocation(line: 3934, column: 5, scope: !4236)
!4250 = !DILocation(line: 3937, column: 7, scope: !4221)
!4251 = !DILocation(line: 3937, column: 31, scope: !4221)
!4252 = !DILocation(line: 3938, column: 7, scope: !4221)
!4253 = !DILocation(line: 3938, column: 11, scope: !4221)
!4254 = !DILocation(line: 3937, column: 7, scope: !4205)
!4255 = !DILocation(line: 3940, column: 44, scope: !4220)
!4256 = !DILocation(line: 3942, column: 11, scope: !4219)
!4257 = !DILocation(line: 3943, column: 4, scope: !4219)
!4258 = !DILocation(line: 3943, column: 7, scope: !4219)
!4259 = !DILocation(line: 3942, column: 11, scope: !4220)
!4260 = !DILocation(line: 3945, column: 8, scope: !4217)
!4261 = !DILocation(line: 0, scope: !4217)
!4262 = !DILocation(line: 3945, column: 8, scope: !4218)
!4263 = !DILocation(line: 3950, column: 12, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 3950, column: 12)
!4265 = !DILocation(line: 3950, column: 22, scope: !4264)
!4266 = !DILocation(line: 3950, column: 26, scope: !4264)
!4267 = !DILocation(line: 3950, column: 37, scope: !4264)
!4268 = !DILocation(line: 3950, column: 12, scope: !4216)
!4269 = !DILocation(line: 3952, column: 5, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 3951, column: 3)
!4271 = !DILocation(line: 3953, column: 36, scope: !4270)
!4272 = !DILocation(line: 3953, column: 5, scope: !4270)
!4273 = !DILocation(line: 3954, column: 3, scope: !4270)
!4274 = !DILocation(line: 3956, column: 12, scope: !4215)
!4275 = !DILocation(line: 3956, column: 36, scope: !4215)
!4276 = !DILocation(line: 3956, column: 12, scope: !4216)
!4277 = !DILocation(line: 0, scope: !4214)
!4278 = !DILocation(line: 3958, column: 5, scope: !4214)
!4279 = !DILocation(line: 3962, column: 18, scope: !4214)
!4280 = !DILocation(line: 3963, column: 17, scope: !4214)
!4281 = !DILocation(line: 3966, column: 26, scope: !4214)
!4282 = !DILocation(line: 3967, column: 25, scope: !4214)
!4283 = !DILocation(line: 3970, column: 10, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 3970, column: 9)
!4285 = !DILocation(line: 3970, column: 9, scope: !4214)
!4286 = !DILocation(line: 3973, column: 9, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 3973, column: 9)
!4288 = !DILocation(line: 3973, column: 19, scope: !4287)
!4289 = !DILocation(line: 3973, column: 23, scope: !4287)
!4290 = !DILocation(line: 3973, column: 34, scope: !4287)
!4291 = !DILocation(line: 3973, column: 9, scope: !4214)
!4292 = !DILocation(line: 3975, column: 9, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 3974, column: 7)
!4294 = !DILocation(line: 3976, column: 40, scope: !4293)
!4295 = !DILocation(line: 3976, column: 9, scope: !4293)
!4296 = !DILocation(line: 3977, column: 7, scope: !4293)
!4297 = !DILocation(line: 3980, column: 9, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 3980, column: 9)
!4299 = !DILocation(line: 3980, column: 9, scope: !4214)
!4300 = !DILocation(line: 3981, column: 7, scope: !4298)
!4301 = !DILocation(line: 3983, column: 3, scope: !4215)
!4302 = !DILocation(line: 3994, column: 2, scope: !4225)
!4303 = !DILocation(line: 3995, column: 48, scope: !4225)
!4304 = !DILocation(line: 3997, column: 8, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 3997, column: 8)
!4306 = !DILocation(line: 3997, column: 18, scope: !4305)
!4307 = !DILocation(line: 3997, column: 22, scope: !4305)
!4308 = !DILocation(line: 3997, column: 33, scope: !4305)
!4309 = !DILocation(line: 3997, column: 8, scope: !4225)
!4310 = !DILocation(line: 3999, column: 8, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 3998, column: 6)
!4312 = !DILocation(line: 4000, column: 29, scope: !4311)
!4313 = !DILocation(line: 4000, column: 8, scope: !4311)
!4314 = !DILocation(line: 4001, column: 17, scope: !4311)
!4315 = !DILocation(line: 4001, column: 8, scope: !4311)
!4316 = !DILocation(line: 4002, column: 29, scope: !4311)
!4317 = !DILocation(line: 4002, column: 8, scope: !4311)
!4318 = !DILocation(line: 4003, column: 17, scope: !4311)
!4319 = !DILocation(line: 4003, column: 8, scope: !4311)
!4320 = !DILocation(line: 4004, column: 6, scope: !4311)
!4321 = !DILocation(line: 4005, column: 33, scope: !4225)
!4322 = !DILocation(line: 4005, column: 4, scope: !4225)
!4323 = !DILocation(line: 4009, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 4009, column: 7)
!4325 = !DILocation(line: 4009, column: 17, scope: !4324)
!4326 = !DILocation(line: 4009, column: 21, scope: !4324)
!4327 = !DILocation(line: 4009, column: 32, scope: !4324)
!4328 = !DILocation(line: 4009, column: 7, scope: !4205)
!4329 = !DILocation(line: 4010, column: 5, scope: !4324)
!4330 = !DILocation(line: 4011, column: 1, scope: !4205)
!4331 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !146, file: !146, line: 85, type: !4332, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4334)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!1072, !3052, !7}
!4334 = !{!4335, !4336}
!4335 = !DILocalVariable(name: "vec_", arg: 1, scope: !4331, file: !146, line: 85, type: !3052)
!4336 = !DILocalVariable(name: "ix_", arg: 2, scope: !4331, file: !146, line: 85, type: !7)
!4337 = !DILocation(line: 0, scope: !4331)
!4338 = !DILocation(line: 85, column: 1, scope: !4331)
!4339 = distinct !DISubprogram(name: "compute_self_dependence", scope: !3, file: !3, line: 4017, type: !3024, scopeLine: 4018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4340)
!4340 = !{!4341, !4342, !4343}
!4341 = !DILocalVariable(name: "ddr", arg: 1, scope: !4339, file: !3, line: 4017, type: !1932)
!4342 = !DILocalVariable(name: "i", scope: !4339, file: !3, line: 4019, type: !7)
!4343 = !DILocalVariable(name: "subscript", scope: !4339, file: !3, line: 4020, type: !1952)
!4344 = !DILocation(line: 0, scope: !4339)
!4345 = !DILocation(line: 4020, column: 3, scope: !4339)
!4346 = !DILocation(line: 4022, column: 7, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 4022, column: 7)
!4348 = !DILocation(line: 4022, column: 31, scope: !4347)
!4349 = !DILocation(line: 4022, column: 7, scope: !4339)
!4350 = !DILocation(line: 0, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 4025, column: 3)
!4352 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 4025, column: 3)
!4353 = !DILocation(line: 4025, column: 3, scope: !4352)
!4354 = !DILocation(line: 0, scope: !4352)
!4355 = !DILocation(line: 4025, column: 15, scope: !4351)
!4356 = !DILocation(line: 4028, column: 11, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 4028, column: 11)
!4358 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 4027, column: 5)
!4359 = !DILocation(line: 4028, column: 11, scope: !4358)
!4360 = !DILocation(line: 4029, column: 2, scope: !4357)
!4361 = !DILocation(line: 4030, column: 11, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 4030, column: 11)
!4363 = !DILocation(line: 4030, column: 11, scope: !4358)
!4364 = !DILocation(line: 4031, column: 2, scope: !4362)
!4365 = !DILocation(line: 4035, column: 35, scope: !4358)
!4366 = !DILocation(line: 4035, column: 20, scope: !4358)
!4367 = !DILocation(line: 4035, column: 4, scope: !4358)
!4368 = !DILocation(line: 4034, column: 7, scope: !4358)
!4369 = !DILocation(line: 4035, column: 2, scope: !4358)
!4370 = !DILocation(line: 4037, column: 35, scope: !4358)
!4371 = !DILocation(line: 4037, column: 20, scope: !4358)
!4372 = !DILocation(line: 4037, column: 4, scope: !4358)
!4373 = !DILocation(line: 4036, column: 7, scope: !4358)
!4374 = !DILocation(line: 4037, column: 2, scope: !4358)
!4375 = !DILocation(line: 4038, column: 39, scope: !4358)
!4376 = !DILocation(line: 4038, column: 7, scope: !4358)
!4377 = !DILocation(line: 4038, column: 37, scope: !4358)
!4378 = !DILocation(line: 4026, column: 9, scope: !4351)
!4379 = !DILocation(line: 4025, column: 3, scope: !4351)
!4380 = distinct !{!4380, !4353, !4381}
!4381 = !DILocation(line: 4039, column: 5, scope: !4352)
!4382 = !DILocation(line: 4042, column: 40, scope: !4339)
!4383 = !DILocation(line: 4042, column: 21, scope: !4339)
!4384 = !DILocation(line: 4042, column: 3, scope: !4339)
!4385 = !DILocation(line: 4043, column: 39, scope: !4339)
!4386 = !DILocation(line: 4043, column: 20, scope: !4339)
!4387 = !DILocation(line: 4043, column: 3, scope: !4339)
!4388 = !DILocation(line: 4044, column: 1, scope: !4339)
!4389 = distinct !DISubprogram(name: "get_references_in_stmt", scope: !3, file: !3, line: 4084, type: !4390, scopeLine: 4085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4393)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!498, !830, !4392}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!4393 = !{!4394, !4395, !4396, !4397, !4399, !4400, !4401, !4402, !4405, !4408}
!4394 = !DILocalVariable(name: "stmt", arg: 1, scope: !4389, file: !3, line: 4084, type: !830)
!4395 = !DILocalVariable(name: "references", arg: 2, scope: !4389, file: !3, line: 4084, type: !4392)
!4396 = !DILocalVariable(name: "clobbers_memory", scope: !4389, file: !3, line: 4086, type: !498)
!4397 = !DILocalVariable(name: "ref", scope: !4389, file: !3, line: 4087, type: !4398)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!4399 = !DILocalVariable(name: "op0", scope: !4389, file: !3, line: 4088, type: !864)
!4400 = !DILocalVariable(name: "op1", scope: !4389, file: !3, line: 4088, type: !864)
!4401 = !DILocalVariable(name: "stmt_code", scope: !4389, file: !3, line: 4089, type: !401)
!4402 = !DILocalVariable(name: "base", scope: !4403, file: !3, line: 4107, type: !506)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 4106, column: 5)
!4404 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 4105, column: 7)
!4405 = !DILocalVariable(name: "i", scope: !4406, file: !3, line: 4131, type: !7)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4130, column: 5)
!4407 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 4129, column: 12)
!4408 = !DILocalVariable(name: "n", scope: !4406, file: !3, line: 4131, type: !7)
!4409 = !DILocation(line: 0, scope: !4389)
!4410 = !DILocation(line: 4089, column: 32, scope: !4389)
!4411 = !DILocation(line: 4091, column: 15, scope: !4389)
!4412 = !DILocation(line: 4097, column: 8, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 4096, column: 7)
!4414 = !DILocation(line: 4097, column: 13, scope: !4413)
!4415 = !DILocation(line: 4097, column: 38, scope: !4413)
!4416 = !DILocation(line: 4098, column: 7, scope: !4413)
!4417 = !DILocation(line: 4099, column: 4, scope: !4413)
!4418 = !DILocation(line: 4099, column: 7, scope: !4413)
!4419 = !DILocation(line: 4096, column: 7, scope: !4389)
!4420 = !DILocation(line: 4100, column: 5, scope: !4413)
!4421 = !DILocation(line: 4102, column: 8, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 4102, column: 7)
!4423 = !DILocation(line: 4102, column: 7, scope: !4389)
!4424 = !DILocation(line: 4105, column: 7, scope: !4389)
!4425 = !DILocation(line: 4108, column: 13, scope: !4403)
!4426 = !DILocation(line: 4109, column: 13, scope: !4403)
!4427 = !DILocation(line: 4111, column: 11, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 4111, column: 11)
!4429 = !DILocation(line: 4112, column: 4, scope: !4428)
!4430 = !DILocation(line: 4112, column: 8, scope: !4428)
!4431 = !DILocation(line: 4113, column: 8, scope: !4428)
!4432 = !DILocation(line: 4113, column: 19, scope: !4428)
!4433 = !DILocation(line: 0, scope: !4403)
!4434 = !DILocation(line: 4113, column: 17, scope: !4428)
!4435 = !DILocation(line: 4114, column: 8, scope: !4428)
!4436 = !DILocation(line: 4114, column: 11, scope: !4428)
!4437 = !DILocation(line: 4114, column: 28, scope: !4428)
!4438 = !DILocation(line: 4111, column: 11, scope: !4403)
!4439 = !DILocation(line: 4116, column: 10, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 4115, column: 2)
!4441 = !DILocation(line: 4117, column: 9, scope: !4440)
!4442 = !DILocation(line: 4117, column: 13, scope: !4440)
!4443 = !DILocation(line: 4118, column: 9, scope: !4440)
!4444 = !DILocation(line: 4118, column: 17, scope: !4440)
!4445 = !DILocation(line: 4119, column: 2, scope: !4440)
!4446 = !DILocation(line: 4121, column: 11, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 4121, column: 11)
!4448 = !DILocation(line: 4122, column: 4, scope: !4447)
!4449 = !DILocation(line: 4122, column: 8, scope: !4447)
!4450 = !DILocation(line: 4122, column: 33, scope: !4447)
!4451 = !DILocation(line: 4122, column: 36, scope: !4447)
!4452 = !DILocation(line: 4121, column: 11, scope: !4403)
!4453 = !DILocation(line: 4124, column: 10, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 4123, column: 2)
!4455 = !DILocation(line: 4125, column: 9, scope: !4454)
!4456 = !DILocation(line: 4125, column: 13, scope: !4454)
!4457 = !DILocation(line: 4126, column: 9, scope: !4454)
!4458 = !DILocation(line: 4126, column: 17, scope: !4454)
!4459 = !DILocation(line: 4127, column: 2, scope: !4454)
!4460 = !DILocation(line: 4131, column: 23, scope: !4406)
!4461 = !DILocation(line: 0, scope: !4406)
!4462 = !DILocation(line: 4133, column: 12, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 4133, column: 7)
!4464 = !DILocation(line: 0, scope: !4463)
!4465 = !DILocation(line: 4133, column: 21, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 4133, column: 7)
!4467 = !DILocation(line: 4133, column: 7, scope: !4463)
!4468 = !DILocation(line: 4135, column: 10, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 4134, column: 2)
!4470 = !DILocation(line: 4137, column: 8, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 4137, column: 8)
!4472 = !DILocation(line: 4138, column: 8, scope: !4471)
!4473 = !DILocation(line: 4138, column: 12, scope: !4471)
!4474 = !DILocation(line: 4138, column: 37, scope: !4471)
!4475 = !DILocation(line: 4138, column: 40, scope: !4471)
!4476 = !DILocation(line: 4137, column: 8, scope: !4469)
!4477 = !DILocation(line: 4140, column: 14, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 4139, column: 6)
!4479 = !DILocation(line: 4141, column: 13, scope: !4478)
!4480 = !DILocation(line: 4141, column: 17, scope: !4478)
!4481 = !DILocation(line: 4142, column: 13, scope: !4478)
!4482 = !DILocation(line: 4142, column: 21, scope: !4478)
!4483 = !DILocation(line: 4143, column: 6, scope: !4478)
!4484 = !DILocation(line: 4133, column: 27, scope: !4466)
!4485 = !DILocation(line: 4133, column: 7, scope: !4466)
!4486 = distinct !{!4486, !4467, !4487}
!4487 = !DILocation(line: 4144, column: 2, scope: !4463)
!4488 = !DILocation(line: 4148, column: 1, scope: !4389)
!4489 = distinct !DISubprogram(name: "gimple_code", scope: !402, file: !402, line: 1052, type: !4490, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4492)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!401, !2052}
!4492 = !{!4493}
!4493 = !DILocalVariable(name: "g", arg: 1, scope: !4489, file: !402, line: 1052, type: !2052)
!4494 = !DILocation(line: 0, scope: !4489)
!4495 = !DILocation(line: 1054, column: 20, scope: !4489)
!4496 = !DILocation(line: 1054, column: 3, scope: !4489)
!4497 = distinct !DISubprogram(name: "gimple_asm_volatile_p", scope: !402, file: !402, line: 2739, type: !4498, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!498, !2052}
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "gs", arg: 1, scope: !4497, file: !402, line: 2739, type: !2052)
!4502 = !DILocation(line: 0, scope: !4497)
!4503 = !DILocation(line: 2742, column: 22, scope: !4497)
!4504 = !DILocation(line: 2742, column: 10, scope: !4497)
!4505 = !DILocation(line: 2742, column: 3, scope: !4497)
!4506 = distinct !DISubprogram(name: "gimple_vuse", scope: !402, file: !402, line: 1365, type: !4507, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4509)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!506, !2052}
!4509 = !{!4510}
!4510 = !DILocalVariable(name: "g", arg: 1, scope: !4506, file: !402, line: 1365, type: !2052)
!4511 = !DILocation(line: 0, scope: !4506)
!4512 = !DILocation(line: 1367, column: 8, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4506, file: !402, line: 1367, column: 7)
!4514 = !DILocation(line: 1367, column: 7, scope: !4506)
!4515 = !DILocation(line: 1369, column: 23, scope: !4506)
!4516 = !DILocation(line: 1369, column: 3, scope: !4506)
!4517 = !DILocation(line: 1370, column: 1, scope: !4506)
!4518 = distinct !DISubprogram(name: "gimple_assign_lhs_ptr", scope: !402, file: !402, line: 1704, type: !4519, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4521)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!864, !2052}
!4521 = !{!4522}
!4522 = !DILocalVariable(name: "gs", arg: 1, scope: !4518, file: !402, line: 1704, type: !2052)
!4523 = !DILocation(line: 0, scope: !4518)
!4524 = !DILocation(line: 1707, column: 10, scope: !4518)
!4525 = !DILocation(line: 1707, column: 3, scope: !4518)
!4526 = distinct !DISubprogram(name: "gimple_assign_rhs1_ptr", scope: !402, file: !402, line: 1738, type: !4519, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4527)
!4527 = !{!4528}
!4528 = !DILocalVariable(name: "gs", arg: 1, scope: !4526, file: !402, line: 1738, type: !2052)
!4529 = !DILocation(line: 0, scope: !4526)
!4530 = !DILocation(line: 1741, column: 10, scope: !4526)
!4531 = !DILocation(line: 1741, column: 3, scope: !4526)
!4532 = distinct !DISubprogram(name: "VEC_data_ref_loc_heap_safe_push", scope: !391, file: !391, line: 376, type: !4533, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4537)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!4398, !4392, !4535}
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2005)
!4537 = !{!4538, !4539}
!4538 = !DILocalVariable(name: "vec_", arg: 1, scope: !4532, file: !391, line: 376, type: !4392)
!4539 = !DILocalVariable(name: "obj_", arg: 2, scope: !4532, file: !391, line: 376, type: !4535)
!4540 = !DILocation(line: 0, scope: !4532)
!4541 = !DILocation(line: 376, column: 1, scope: !4532)
!4542 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !402, file: !402, line: 2013, type: !4543, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4545)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!7, !2052}
!4545 = !{!4546, !4547}
!4546 = !DILocalVariable(name: "gs", arg: 1, scope: !4542, file: !402, line: 2013, type: !2052)
!4547 = !DILocalVariable(name: "num_ops", scope: !4542, file: !402, line: 2015, type: !7)
!4548 = !DILocation(line: 0, scope: !4542)
!4549 = !DILocation(line: 2017, column: 13, scope: !4542)
!4550 = !DILocation(line: 2018, column: 18, scope: !4542)
!4551 = !DILocation(line: 2018, column: 3, scope: !4542)
!4552 = distinct !DISubprogram(name: "gimple_call_arg_ptr", scope: !402, file: !402, line: 2036, type: !4553, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4555)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!864, !2052, !7}
!4555 = !{!4556, !4557}
!4556 = !DILocalVariable(name: "gs", arg: 1, scope: !4552, file: !402, line: 2036, type: !2052)
!4557 = !DILocalVariable(name: "index", arg: 2, scope: !4552, file: !402, line: 2036, type: !7)
!4558 = !DILocation(line: 0, scope: !4552)
!4559 = !DILocation(line: 2039, column: 35, scope: !4552)
!4560 = !DILocation(line: 2039, column: 10, scope: !4552)
!4561 = !DILocation(line: 2039, column: 3, scope: !4552)
!4562 = distinct !DISubprogram(name: "find_data_references_in_stmt", scope: !3, file: !3, line: 4155, type: !4563, scopeLine: 4157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4566)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!498, !1045, !830, !4565}
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574}
!4567 = !DILocalVariable(name: "nest", arg: 1, scope: !4562, file: !3, line: 4155, type: !1045)
!4568 = !DILocalVariable(name: "stmt", arg: 2, scope: !4562, file: !3, line: 4155, type: !830)
!4569 = !DILocalVariable(name: "datarefs", arg: 3, scope: !4562, file: !3, line: 4156, type: !4565)
!4570 = !DILocalVariable(name: "i", scope: !4562, file: !3, line: 4158, type: !7)
!4571 = !DILocalVariable(name: "references", scope: !4562, file: !3, line: 4159, type: !1993)
!4572 = !DILocalVariable(name: "ref", scope: !4562, file: !3, line: 4160, type: !4398)
!4573 = !DILocalVariable(name: "ret", scope: !4562, file: !3, line: 4161, type: !498)
!4574 = !DILocalVariable(name: "dr", scope: !4562, file: !3, line: 4162, type: !1930)
!4575 = !DILocation(line: 0, scope: !4562)
!4576 = !DILocation(line: 4159, column: 3, scope: !4562)
!4577 = !DILocation(line: 4160, column: 3, scope: !4562)
!4578 = !DILocation(line: 4164, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 4164, column: 7)
!4580 = !DILocation(line: 4164, column: 7, scope: !4562)
!4581 = !DILocation(line: 0, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 4178, column: 11)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 4171, column: 5)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 4170, column: 3)
!4585 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 4170, column: 3)
!4586 = !DILocation(line: 4170, column: 3, scope: !4585)
!4587 = !DILocation(line: 0, scope: !4585)
!4588 = !DILocation(line: 4170, column: 15, scope: !4584)
!4589 = !DILocation(line: 4172, column: 36, scope: !4583)
!4590 = !DILocation(line: 4172, column: 41, scope: !4583)
!4591 = !DILocation(line: 4172, column: 35, scope: !4583)
!4592 = !DILocation(line: 4172, column: 57, scope: !4583)
!4593 = !DILocation(line: 4172, column: 12, scope: !4583)
!4594 = !DILocation(line: 4173, column: 7, scope: !4583)
!4595 = !DILocation(line: 4178, column: 11, scope: !4582)
!4596 = !DILocation(line: 4178, column: 39, scope: !4582)
!4597 = !DILocation(line: 4187, column: 7, scope: !4583)
!4598 = !DILocation(line: 4170, column: 64, scope: !4584)
!4599 = !DILocation(line: 4170, column: 3, scope: !4584)
!4600 = distinct !{!4600, !4586, !4601}
!4601 = !DILocation(line: 4188, column: 5, scope: !4585)
!4602 = !DILocation(line: 4189, column: 3, scope: !4562)
!4603 = !DILocation(line: 4180, column: 4, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 4179, column: 2)
!4605 = !DILocation(line: 4181, column: 8, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 4181, column: 8)
!4607 = !DILocation(line: 4181, column: 18, scope: !4606)
!4608 = !DILocation(line: 4166, column: 7, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 4165, column: 5)
!4610 = !DILocation(line: 4167, column: 7, scope: !4609)
!4611 = !DILocation(line: 4181, column: 22, scope: !4606)
!4612 = !DILocation(line: 4181, column: 33, scope: !4606)
!4613 = !DILocation(line: 4181, column: 8, scope: !4604)
!4614 = !DILocation(line: 4182, column: 6, scope: !4606)
!4615 = !DILocation(line: 4190, column: 3, scope: !4562)
!4616 = !DILocation(line: 4191, column: 1, scope: !4562)
!4617 = distinct !DISubprogram(name: "VEC_data_ref_loc_heap_free", scope: !391, file: !391, line: 376, type: !4618, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4620)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{null, !4392}
!4620 = !{!4621}
!4621 = !DILocalVariable(name: "vec_", arg: 1, scope: !4617, file: !391, line: 376, type: !4392)
!4622 = !DILocation(line: 0, scope: !4617)
!4623 = !DILocation(line: 376, column: 1, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4617, file: !391, line: 376, column: 1)
!4625 = !DILocation(line: 376, column: 1, scope: !4617)
!4626 = distinct !DISubprogram(name: "VEC_data_ref_loc_base_iterate", scope: !391, file: !391, line: 375, type: !4627, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4631)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{!499, !4629, !7, !4630}
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4631 = !{!4632, !4633, !4634}
!4632 = !DILocalVariable(name: "vec_", arg: 1, scope: !4626, file: !391, line: 375, type: !4629)
!4633 = !DILocalVariable(name: "ix_", arg: 2, scope: !4626, file: !391, line: 375, type: !7)
!4634 = !DILocalVariable(name: "ptr", arg: 3, scope: !4626, file: !391, line: 375, type: !4630)
!4635 = !DILocation(line: 0, scope: !4626)
!4636 = !DILocation(line: 375, column: 1, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4626, file: !391, line: 375, column: 1)
!4638 = !DILocation(line: 375, column: 1, scope: !4626)
!4639 = !DILocation(line: 375, column: 1, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4637, file: !391, line: 375, column: 1)
!4641 = !DILocation(line: 375, column: 1, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !391, line: 375, column: 1)
!4643 = !DILocation(line: 0, scope: !4637)
!4644 = distinct !DISubprogram(name: "dr_address_invariant_p", scope: !3, file: !3, line: 886, type: !3394, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4645)
!4645 = !{!4646, !4647, !4648}
!4646 = !DILocalVariable(name: "dr", arg: 1, scope: !4644, file: !3, line: 886, type: !1860)
!4647 = !DILocalVariable(name: "i", scope: !4644, file: !3, line: 888, type: !7)
!4648 = !DILocalVariable(name: "idx", scope: !4644, file: !3, line: 889, type: !506)
!4649 = !DILocation(line: 0, scope: !4644)
!4650 = !DILocation(line: 889, column: 3, scope: !4644)
!4651 = !DILocation(line: 0, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 891, column: 3)
!4653 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 891, column: 3)
!4654 = !DILocation(line: 891, column: 8, scope: !4653)
!4655 = !DILocation(line: 0, scope: !4653)
!4656 = !DILocation(line: 891, column: 15, scope: !4652)
!4657 = !DILocation(line: 891, column: 3, scope: !4653)
!4658 = !DILocation(line: 892, column: 31, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 892, column: 9)
!4660 = !DILocation(line: 892, column: 9, scope: !4659)
!4661 = !DILocation(line: 892, column: 9, scope: !4652)
!4662 = !DILocation(line: 891, column: 64, scope: !4652)
!4663 = !DILocation(line: 891, column: 3, scope: !4652)
!4664 = distinct !{!4664, !4657, !4665}
!4665 = !DILocation(line: 893, column: 14, scope: !4653)
!4666 = !DILocation(line: 896, column: 1, scope: !4644)
!4667 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_safe_push", scope: !391, file: !391, line: 209, type: !4668, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4670)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!2554, !4565, !1930}
!4670 = !{!4671, !4672}
!4671 = !DILocalVariable(name: "vec_", arg: 1, scope: !4667, file: !391, line: 209, type: !4565)
!4672 = !DILocalVariable(name: "obj_", arg: 2, scope: !4667, file: !391, line: 209, type: !1930)
!4673 = !DILocation(line: 0, scope: !4667)
!4674 = !DILocation(line: 209, column: 1, scope: !4667)
!4675 = distinct !DISubprogram(name: "graphite_find_data_references_in_stmt", scope: !3, file: !3, line: 4198, type: !4563, scopeLine: 4200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4676)
!4676 = !{!4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684}
!4677 = !DILocalVariable(name: "nest", arg: 1, scope: !4675, file: !3, line: 4198, type: !1045)
!4678 = !DILocalVariable(name: "stmt", arg: 2, scope: !4675, file: !3, line: 4198, type: !830)
!4679 = !DILocalVariable(name: "datarefs", arg: 3, scope: !4675, file: !3, line: 4199, type: !4565)
!4680 = !DILocalVariable(name: "i", scope: !4675, file: !3, line: 4201, type: !7)
!4681 = !DILocalVariable(name: "references", scope: !4675, file: !3, line: 4202, type: !1993)
!4682 = !DILocalVariable(name: "ref", scope: !4675, file: !3, line: 4203, type: !4398)
!4683 = !DILocalVariable(name: "ret", scope: !4675, file: !3, line: 4204, type: !498)
!4684 = !DILocalVariable(name: "dr", scope: !4675, file: !3, line: 4205, type: !1930)
!4685 = !DILocation(line: 0, scope: !4675)
!4686 = !DILocation(line: 4202, column: 3, scope: !4675)
!4687 = !DILocation(line: 4203, column: 3, scope: !4675)
!4688 = !DILocation(line: 4207, column: 7, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 4207, column: 7)
!4690 = !DILocation(line: 4207, column: 7, scope: !4675)
!4691 = !DILocation(line: 4213, column: 3, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 4213, column: 3)
!4693 = !DILocation(line: 4209, column: 7, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 4208, column: 5)
!4695 = !DILocation(line: 4210, column: 7, scope: !4694)
!4696 = !DILocation(line: 0, scope: !4692)
!4697 = !DILocation(line: 4213, column: 15, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 4213, column: 3)
!4699 = !DILocation(line: 4215, column: 36, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 4214, column: 5)
!4701 = !DILocation(line: 4215, column: 41, scope: !4700)
!4702 = !DILocation(line: 4215, column: 35, scope: !4700)
!4703 = !DILocation(line: 4215, column: 57, scope: !4700)
!4704 = !DILocation(line: 4215, column: 12, scope: !4700)
!4705 = !DILocation(line: 4216, column: 7, scope: !4700)
!4706 = !DILocation(line: 4217, column: 7, scope: !4700)
!4707 = !DILocation(line: 4213, column: 64, scope: !4698)
!4708 = !DILocation(line: 4213, column: 3, scope: !4698)
!4709 = distinct !{!4709, !4691, !4710}
!4710 = !DILocation(line: 4218, column: 5, scope: !4692)
!4711 = !DILocation(line: 4220, column: 3, scope: !4675)
!4712 = !DILocation(line: 4221, column: 3, scope: !4675)
!4713 = !DILocation(line: 4222, column: 1, scope: !4675)
!4714 = distinct !DISubprogram(name: "find_data_references_in_loop", scope: !3, file: !3, line: 4259, type: !4715, scopeLine: 4261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4717)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!506, !1045, !4565}
!4717 = !{!4718, !4719, !4720, !4721, !4723}
!4718 = !DILocalVariable(name: "loop", arg: 1, scope: !4714, file: !3, line: 4259, type: !1045)
!4719 = !DILocalVariable(name: "datarefs", arg: 2, scope: !4714, file: !3, line: 4260, type: !4565)
!4720 = !DILocalVariable(name: "bb", scope: !4714, file: !3, line: 4262, type: !1282)
!4721 = !DILocalVariable(name: "bbs", scope: !4714, file: !3, line: 4262, type: !4722)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!4723 = !DILocalVariable(name: "i", scope: !4714, file: !3, line: 4263, type: !7)
!4724 = !DILocation(line: 0, scope: !4714)
!4725 = !DILocation(line: 4265, column: 9, scope: !4714)
!4726 = !DILocation(line: 0, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 4267, column: 3)
!4728 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 4267, column: 3)
!4729 = !DILocation(line: 4267, column: 8, scope: !4728)
!4730 = !DILocation(line: 0, scope: !4728)
!4731 = !DILocation(line: 4267, column: 25, scope: !4727)
!4732 = !DILocation(line: 4267, column: 17, scope: !4727)
!4733 = !DILocation(line: 4267, column: 3, scope: !4728)
!4734 = !DILocation(line: 4269, column: 12, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 4268, column: 5)
!4736 = !DILocation(line: 4271, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 4271, column: 11)
!4738 = !DILocation(line: 4271, column: 62, scope: !4737)
!4739 = !DILocation(line: 4271, column: 59, scope: !4737)
!4740 = !DILocation(line: 4271, column: 11, scope: !4735)
!4741 = !DILocation(line: 4273, column: 17, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 4272, column: 9)
!4743 = !DILocation(line: 4273, column: 11, scope: !4742)
!4744 = !DILocation(line: 4274, column: 18, scope: !4742)
!4745 = !DILocation(line: 4274, column: 11, scope: !4742)
!4746 = !DILocation(line: 4267, column: 37, scope: !4727)
!4747 = !DILocation(line: 4267, column: 3, scope: !4727)
!4748 = distinct !{!4748, !4733, !4749}
!4749 = !DILocation(line: 4276, column: 5, scope: !4728)
!4750 = !DILocation(line: 4277, column: 9, scope: !4714)
!4751 = !DILocation(line: 4277, column: 3, scope: !4714)
!4752 = !DILocation(line: 4279, column: 3, scope: !4714)
!4753 = !DILocation(line: 4280, column: 1, scope: !4714)
!4754 = distinct !DISubprogram(name: "find_data_references_in_bb", scope: !3, file: !3, line: 4229, type: !4755, scopeLine: 4231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!506, !1045, !1282, !4565}
!4757 = !{!4758, !4759, !4760, !4761, !4768, !4772}
!4758 = !DILocalVariable(name: "loop", arg: 1, scope: !4754, file: !3, line: 4229, type: !1045)
!4759 = !DILocalVariable(name: "bb", arg: 2, scope: !4754, file: !3, line: 4229, type: !1282)
!4760 = !DILocalVariable(name: "datarefs", arg: 3, scope: !4754, file: !3, line: 4230, type: !4565)
!4761 = !DILocalVariable(name: "bsi", scope: !4754, file: !3, line: 4232, type: !4762)
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !402, line: 265, baseType: !4763)
!4763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 254, size: 192, elements: !4764)
!4764 = !{!4765, !4766, !4767}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4763, file: !402, line: 257, baseType: !825, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4763, file: !402, line: 263, baseType: !820, size: 64, offset: 64)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4763, file: !402, line: 264, baseType: !1282, size: 64, offset: 128)
!4768 = !DILocalVariable(name: "stmt", scope: !4769, file: !3, line: 4236, type: !830)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 4235, column: 5)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 4234, column: 3)
!4771 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 4234, column: 3)
!4772 = !DILocalVariable(name: "res", scope: !4773, file: !3, line: 4240, type: !1860)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 4239, column: 9)
!4774 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 4238, column: 11)
!4775 = !DILocation(line: 0, scope: !4754)
!4776 = !DILocation(line: 4232, column: 3, scope: !4754)
!4777 = !DILocation(line: 4234, column: 14, scope: !4771)
!4778 = !DILocation(line: 4234, column: 8, scope: !4771)
!4779 = !DILocation(line: 4234, column: 34, scope: !4770)
!4780 = !DILocation(line: 4234, column: 33, scope: !4770)
!4781 = !DILocation(line: 4234, column: 3, scope: !4771)
!4782 = !DILocation(line: 4236, column: 21, scope: !4769)
!4783 = !DILocation(line: 0, scope: !4769)
!4784 = !DILocation(line: 4238, column: 12, scope: !4774)
!4785 = !DILocation(line: 4238, column: 11, scope: !4769)
!4786 = !DILocation(line: 4241, column: 17, scope: !4773)
!4787 = !DILocation(line: 0, scope: !4773)
!4788 = !DILocation(line: 4242, column: 11, scope: !4773)
!4789 = !DILocation(line: 4244, column: 18, scope: !4773)
!4790 = !DILocation(line: 4234, column: 51, scope: !4770)
!4791 = !DILocation(line: 4234, column: 3, scope: !4770)
!4792 = distinct !{!4792, !4781, !4793}
!4793 = !DILocation(line: 4246, column: 5, scope: !4771)
!4794 = !DILocation(line: 4249, column: 1, scope: !4754)
!4795 = distinct !DISubprogram(name: "find_loop_nest", scope: !3, file: !3, line: 4316, type: !4796, scopeLine: 4317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4799)
!4796 = !DISubroutineType(types: !4797)
!4797 = !{!498, !1045, !4798}
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!4799 = !{!4800, !4801}
!4800 = !DILocalVariable(name: "loop", arg: 1, scope: !4795, file: !3, line: 4316, type: !1045)
!4801 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !4795, file: !3, line: 4316, type: !4798)
!4802 = !DILocation(line: 0, scope: !4795)
!4803 = !DILocation(line: 4318, column: 3, scope: !4795)
!4804 = !DILocation(line: 4319, column: 13, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 4319, column: 7)
!4806 = !DILocation(line: 4319, column: 7, scope: !4805)
!4807 = !DILocation(line: 4319, column: 7, scope: !4795)
!4808 = !DILocation(line: 4320, column: 12, scope: !4805)
!4809 = !DILocation(line: 4320, column: 5, scope: !4805)
!4810 = !DILocation(line: 4322, column: 1, scope: !4795)
!4811 = distinct !DISubprogram(name: "VEC_loop_p_heap_safe_push", scope: !146, file: !146, line: 86, type: !4812, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4814)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!3054, !4798, !1072}
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "vec_", arg: 1, scope: !4811, file: !146, line: 86, type: !4798)
!4816 = !DILocalVariable(name: "obj_", arg: 2, scope: !4811, file: !146, line: 86, type: !1072)
!4817 = !DILocation(line: 0, scope: !4811)
!4818 = !DILocation(line: 86, column: 1, scope: !4811)
!4819 = distinct !DISubprogram(name: "find_loop_nest_1", scope: !3, file: !3, line: 4285, type: !4796, scopeLine: 4286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4820)
!4820 = !{!4821, !4822}
!4821 = !DILocalVariable(name: "loop", arg: 1, scope: !4819, file: !3, line: 4285, type: !1045)
!4822 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !4819, file: !3, line: 4285, type: !4798)
!4823 = !DILocation(line: 4306, column: 12, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 4305, column: 7)
!4825 = !DILocation(line: 0, scope: !4819)
!4826 = !DILocation(line: 4301, column: 13, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 4301, column: 7)
!4828 = !DILocation(line: 4301, column: 7, scope: !4827)
!4829 = !DILocation(line: 4301, column: 7, scope: !4819)
!4830 = !DILocation(line: 4304, column: 3, scope: !4819)
!4831 = !DILocation(line: 4305, column: 13, scope: !4824)
!4832 = !DILocation(line: 4305, column: 7, scope: !4824)
!4833 = !DILocation(line: 4305, column: 7, scope: !4819)
!4834 = !DILocation(line: 4308, column: 1, scope: !4819)
!4835 = distinct !DISubprogram(name: "compute_data_dependences_for_loop", scope: !3, file: !3, line: 4332, type: !4836, scopeLine: 4336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4838)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!498, !1045, !498, !4565, !4009}
!4838 = !{!4839, !4840, !4841, !4842, !4843, !4844, !4845}
!4839 = !DILocalVariable(name: "loop", arg: 1, scope: !4835, file: !3, line: 4332, type: !1045)
!4840 = !DILocalVariable(name: "compute_self_and_read_read_dependences", arg: 2, scope: !4835, file: !3, line: 4333, type: !498)
!4841 = !DILocalVariable(name: "datarefs", arg: 3, scope: !4835, file: !3, line: 4334, type: !4565)
!4842 = !DILocalVariable(name: "dependence_relations", arg: 4, scope: !4835, file: !3, line: 4335, type: !4009)
!4843 = !DILocalVariable(name: "res", scope: !4835, file: !3, line: 4337, type: !498)
!4844 = !DILocalVariable(name: "vloops", scope: !4835, file: !3, line: 4338, type: !1895)
!4845 = !DILocalVariable(name: "ddr", scope: !4846, file: !3, line: 4349, type: !1932)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 4348, column: 5)
!4847 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 4345, column: 7)
!4848 = !DILocation(line: 0, scope: !4835)
!4849 = !DILocation(line: 4338, column: 3, scope: !4835)
!4850 = !DILocation(line: 4338, column: 32, scope: !4835)
!4851 = !DILocation(line: 4338, column: 23, scope: !4835)
!4852 = !DILocation(line: 4340, column: 3, scope: !4835)
!4853 = !DILocation(line: 4345, column: 8, scope: !4847)
!4854 = !DILocation(line: 4346, column: 7, scope: !4847)
!4855 = !DILocation(line: 4346, column: 11, scope: !4847)
!4856 = !DILocation(line: 4347, column: 7, scope: !4847)
!4857 = !DILocation(line: 4347, column: 10, scope: !4847)
!4858 = !DILocation(line: 4347, column: 59, scope: !4847)
!4859 = !DILocation(line: 4347, column: 56, scope: !4847)
!4860 = !DILocation(line: 4345, column: 7, scope: !4835)
!4861 = !DILocation(line: 4353, column: 62, scope: !4846)
!4862 = !DILocation(line: 4353, column: 13, scope: !4846)
!4863 = !DILocation(line: 0, scope: !4846)
!4864 = !DILocation(line: 4354, column: 7, scope: !4846)
!4865 = !DILocation(line: 4356, column: 5, scope: !4846)
!4866 = !DILocation(line: 4358, column: 30, scope: !4847)
!4867 = !DILocation(line: 4358, column: 63, scope: !4847)
!4868 = !DILocation(line: 4358, column: 5, scope: !4847)
!4869 = !DILocation(line: 4361, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 4361, column: 7)
!4871 = !DILocation(line: 4361, column: 17, scope: !4870)
!4872 = !DILocation(line: 4361, column: 21, scope: !4870)
!4873 = !DILocation(line: 4361, column: 32, scope: !4870)
!4874 = !DILocation(line: 4361, column: 7, scope: !4835)
!4875 = !DILocation(line: 4363, column: 7, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 4362, column: 5)
!4877 = !DILocation(line: 4365, column: 16, scope: !4876)
!4878 = !DILocation(line: 4366, column: 26, scope: !4876)
!4879 = !DILocation(line: 4365, column: 7, scope: !4876)
!4880 = !DILocation(line: 4367, column: 16, scope: !4876)
!4881 = !DILocation(line: 4368, column: 26, scope: !4876)
!4882 = !DILocation(line: 4367, column: 7, scope: !4876)
!4883 = !DILocation(line: 4369, column: 16, scope: !4876)
!4884 = !DILocation(line: 4370, column: 26, scope: !4876)
!4885 = !DILocation(line: 4369, column: 7, scope: !4876)
!4886 = !DILocation(line: 4371, column: 16, scope: !4876)
!4887 = !DILocation(line: 4372, column: 26, scope: !4876)
!4888 = !DILocation(line: 4371, column: 7, scope: !4876)
!4889 = !DILocation(line: 4374, column: 16, scope: !4876)
!4890 = !DILocation(line: 4375, column: 26, scope: !4876)
!4891 = !DILocation(line: 4374, column: 7, scope: !4876)
!4892 = !DILocation(line: 4376, column: 16, scope: !4876)
!4893 = !DILocation(line: 4377, column: 26, scope: !4876)
!4894 = !DILocation(line: 4376, column: 7, scope: !4876)
!4895 = !DILocation(line: 4378, column: 16, scope: !4876)
!4896 = !DILocation(line: 4379, column: 26, scope: !4876)
!4897 = !DILocation(line: 4378, column: 7, scope: !4876)
!4898 = !DILocation(line: 4381, column: 16, scope: !4876)
!4899 = !DILocation(line: 4382, column: 26, scope: !4876)
!4900 = !DILocation(line: 4381, column: 7, scope: !4876)
!4901 = !DILocation(line: 4383, column: 16, scope: !4876)
!4902 = !DILocation(line: 4384, column: 26, scope: !4876)
!4903 = !DILocation(line: 4383, column: 7, scope: !4876)
!4904 = !DILocation(line: 4385, column: 16, scope: !4876)
!4905 = !DILocation(line: 4386, column: 26, scope: !4876)
!4906 = !DILocation(line: 4385, column: 7, scope: !4876)
!4907 = !DILocation(line: 4387, column: 16, scope: !4876)
!4908 = !DILocation(line: 4388, column: 26, scope: !4876)
!4909 = !DILocation(line: 4387, column: 7, scope: !4876)
!4910 = !DILocation(line: 4390, column: 16, scope: !4876)
!4911 = !DILocation(line: 4391, column: 26, scope: !4876)
!4912 = !DILocation(line: 4390, column: 7, scope: !4876)
!4913 = !DILocation(line: 4392, column: 16, scope: !4876)
!4914 = !DILocation(line: 4393, column: 26, scope: !4876)
!4915 = !DILocation(line: 4392, column: 7, scope: !4876)
!4916 = !DILocation(line: 4394, column: 16, scope: !4876)
!4917 = !DILocation(line: 4395, column: 26, scope: !4876)
!4918 = !DILocation(line: 4394, column: 7, scope: !4876)
!4919 = !DILocation(line: 4396, column: 16, scope: !4876)
!4920 = !DILocation(line: 4397, column: 26, scope: !4876)
!4921 = !DILocation(line: 4396, column: 7, scope: !4876)
!4922 = !DILocation(line: 4399, column: 16, scope: !4876)
!4923 = !DILocation(line: 4400, column: 26, scope: !4876)
!4924 = !DILocation(line: 4399, column: 7, scope: !4876)
!4925 = !DILocation(line: 4401, column: 16, scope: !4876)
!4926 = !DILocation(line: 4402, column: 26, scope: !4876)
!4927 = !DILocation(line: 4401, column: 7, scope: !4876)
!4928 = !DILocation(line: 4403, column: 16, scope: !4876)
!4929 = !DILocation(line: 4404, column: 26, scope: !4876)
!4930 = !DILocation(line: 4403, column: 7, scope: !4876)
!4931 = !DILocation(line: 4405, column: 16, scope: !4876)
!4932 = !DILocation(line: 4406, column: 26, scope: !4876)
!4933 = !DILocation(line: 4405, column: 7, scope: !4876)
!4934 = !DILocation(line: 4407, column: 5, scope: !4876)
!4935 = !DILocation(line: 4410, column: 1, scope: !4835)
!4936 = !DILocation(line: 4409, column: 3, scope: !4835)
!4937 = distinct !DISubprogram(name: "VEC_loop_p_heap_alloc", scope: !146, file: !146, line: 86, type: !4938, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4940)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!1895, !499}
!4940 = !{!4941}
!4941 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4937, file: !146, line: 86, type: !499)
!4942 = !DILocation(line: 0, scope: !4937)
!4943 = !DILocation(line: 86, column: 1, scope: !4937)
!4944 = distinct !DISubprogram(name: "compute_data_dependences_for_bb", scope: !3, file: !3, line: 4419, type: !4945, scopeLine: 4423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4947)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!498, !1282, !498, !4565, !4009}
!4947 = !{!4948, !4949, !4950, !4951}
!4948 = !DILocalVariable(name: "bb", arg: 1, scope: !4944, file: !3, line: 4419, type: !1282)
!4949 = !DILocalVariable(name: "compute_self_and_read_read_dependences", arg: 2, scope: !4944, file: !3, line: 4420, type: !498)
!4950 = !DILocalVariable(name: "datarefs", arg: 3, scope: !4944, file: !3, line: 4421, type: !4565)
!4951 = !DILocalVariable(name: "dependence_relations", arg: 4, scope: !4944, file: !3, line: 4422, type: !4009)
!4952 = !DILocation(line: 0, scope: !4944)
!4953 = !DILocation(line: 4424, column: 7, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 4424, column: 7)
!4955 = !DILocation(line: 4424, column: 58, scope: !4954)
!4956 = !DILocation(line: 4424, column: 55, scope: !4954)
!4957 = !DILocation(line: 4424, column: 7, scope: !4944)
!4958 = !DILocation(line: 4427, column: 28, scope: !4944)
!4959 = !DILocation(line: 4427, column: 3, scope: !4944)
!4960 = !DILocation(line: 4429, column: 3, scope: !4944)
!4961 = !DILocation(line: 4430, column: 1, scope: !4944)
!4962 = distinct !DISubprogram(name: "tree_check_data_deps", scope: !3, file: !3, line: 4506, type: !4963, scopeLine: 4507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{null}
!4965 = !{!4966, !4972}
!4966 = !DILocalVariable(name: "li", scope: !4962, file: !3, line: 4508, type: !4967)
!4967 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !146, line: 515, baseType: !4968)
!4968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 508, size: 128, elements: !4969)
!4969 = !{!4970, !4971}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !4968, file: !146, line: 511, baseType: !2022, size: 64)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4968, file: !146, line: 514, baseType: !7, size: 32, offset: 64)
!4972 = !DILocalVariable(name: "loop_nest", scope: !4962, file: !3, line: 4509, type: !1045)
!4973 = !DILocation(line: 4508, column: 3, scope: !4962)
!4974 = !DILocation(line: 4509, column: 3, scope: !4962)
!4975 = !DILocation(line: 0, scope: !4962)
!4976 = !DILocation(line: 4511, column: 3, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 4511, column: 3)
!4978 = !DILocation(line: 4511, column: 3, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 4511, column: 3)
!4980 = !DILocation(line: 4512, column: 5, scope: !4979)
!4981 = distinct !{!4981, !4976, !4982}
!4982 = !DILocation(line: 4512, column: 44, scope: !4977)
!4983 = !DILocation(line: 4513, column: 1, scope: !4962)
!4984 = distinct !DISubprogram(name: "fel_init", scope: !146, file: !146, line: 535, type: !4985, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4988)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{null, !4987, !3054, !7}
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4988 = !{!4989, !4990, !4991, !4992, !4993, !4994}
!4989 = !DILocalVariable(name: "li", arg: 1, scope: !4984, file: !146, line: 535, type: !4987)
!4990 = !DILocalVariable(name: "loop", arg: 2, scope: !4984, file: !146, line: 535, type: !3054)
!4991 = !DILocalVariable(name: "flags", arg: 3, scope: !4984, file: !146, line: 535, type: !7)
!4992 = !DILocalVariable(name: "aloop", scope: !4984, file: !146, line: 537, type: !1045)
!4993 = !DILocalVariable(name: "i", scope: !4984, file: !146, line: 538, type: !7)
!4994 = !DILocalVariable(name: "mn", scope: !4984, file: !146, line: 539, type: !499)
!4995 = !DILocation(line: 0, scope: !4984)
!4996 = !DILocation(line: 541, column: 7, scope: !4984)
!4997 = !DILocation(line: 541, column: 11, scope: !4984)
!4998 = !DILocation(line: 542, column: 8, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4984, file: !146, line: 542, column: 7)
!5000 = !DILocation(line: 542, column: 7, scope: !4984)
!5001 = !DILocation(line: 544, column: 11, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4999, file: !146, line: 543, column: 5)
!5003 = !DILocation(line: 544, column: 20, scope: !5002)
!5004 = !DILocation(line: 545, column: 13, scope: !5002)
!5005 = !DILocation(line: 546, column: 7, scope: !5002)
!5006 = !DILocation(line: 549, column: 18, scope: !4984)
!5007 = !DILocation(line: 549, column: 7, scope: !4984)
!5008 = !DILocation(line: 549, column: 16, scope: !4984)
!5009 = !DILocation(line: 0, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !146, line: 560, column: 12)
!5011 = distinct !DILexicalBlock(scope: !4984, file: !146, line: 552, column: 7)
!5012 = !DILocation(line: 590, column: 7, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !146, line: 587, column: 5)
!5014 = !DILocation(line: 592, column: 8, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !146, line: 592, column: 8)
!5016 = distinct !DILexicalBlock(scope: !5013, file: !146, line: 591, column: 2)
!5017 = !DILocation(line: 592, column: 15, scope: !5015)
!5018 = !DILocation(line: 592, column: 19, scope: !5015)
!5019 = !DILocation(line: 592, column: 8, scope: !5016)
!5020 = !DILocation(line: 593, column: 6, scope: !5015)
!5021 = !DILocation(line: 595, column: 15, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5016, file: !146, line: 595, column: 8)
!5023 = !DILocation(line: 595, column: 21, scope: !5022)
!5024 = !DILocation(line: 595, column: 8, scope: !5016)
!5025 = !DILocation(line: 599, column: 8, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !146, line: 598, column: 6)
!5027 = !DILocation(line: 596, column: 21, scope: !5022)
!5028 = !DILocation(line: 596, column: 6, scope: !5022)
!5029 = !DILocation(line: 599, column: 15, scope: !5026)
!5030 = !DILocation(line: 599, column: 21, scope: !5026)
!5031 = !DILocation(line: 599, column: 29, scope: !5026)
!5032 = !DILocation(line: 599, column: 39, scope: !5026)
!5033 = !DILocation(line: 599, column: 44, scope: !5026)
!5034 = !DILocation(line: 0, scope: !5026)
!5035 = !DILocation(line: 600, column: 11, scope: !5026)
!5036 = distinct !{!5036, !5025, !5037}
!5037 = !DILocation(line: 600, column: 28, scope: !5026)
!5038 = !DILocation(line: 601, column: 18, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5026, file: !146, line: 601, column: 12)
!5040 = !DILocation(line: 601, column: 12, scope: !5026)
!5041 = !DILocation(line: 603, column: 23, scope: !5026)
!5042 = distinct !{!5042, !5012, !5043}
!5043 = !DILocation(line: 605, column: 2, scope: !5013)
!5044 = !DILocation(line: 608, column: 3, scope: !4984)
!5045 = !DILocation(line: 609, column: 1, scope: !4984)
!5046 = distinct !DISubprogram(name: "analyze_all_data_dependences", scope: !3, file: !3, line: 4454, type: !5047, scopeLine: 4455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5049)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{null, !1045}
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5060, !5061, !5062}
!5050 = !DILocalVariable(name: "loop", arg: 1, scope: !5046, file: !3, line: 4454, type: !1045)
!5051 = !DILocalVariable(name: "i", scope: !5046, file: !3, line: 4456, type: !7)
!5052 = !DILocalVariable(name: "nb_data_refs", scope: !5046, file: !3, line: 4457, type: !499)
!5053 = !DILocalVariable(name: "datarefs", scope: !5046, file: !3, line: 4458, type: !2010)
!5054 = !DILocalVariable(name: "dependence_relations", scope: !5046, file: !3, line: 4460, type: !1981)
!5055 = !DILocalVariable(name: "nb_top_relations", scope: !5056, file: !3, line: 4477, type: !7)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 4476, column: 2)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 4475, column: 11)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 4468, column: 5)
!5059 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 4467, column: 7)
!5060 = !DILocalVariable(name: "nb_bot_relations", scope: !5056, file: !3, line: 4478, type: !7)
!5061 = !DILocalVariable(name: "nb_chrec_relations", scope: !5056, file: !3, line: 4479, type: !7)
!5062 = !DILocalVariable(name: "ddr", scope: !5056, file: !3, line: 4480, type: !1932)
!5063 = !DILocation(line: 0, scope: !5046)
!5064 = !DILocation(line: 4458, column: 3, scope: !5046)
!5065 = !DILocation(line: 4459, column: 5, scope: !5046)
!5066 = !DILocation(line: 4458, column: 33, scope: !5046)
!5067 = !DILocation(line: 4460, column: 3, scope: !5046)
!5068 = !DILocation(line: 4461, column: 5, scope: !5046)
!5069 = !DILocation(line: 4460, column: 22, scope: !5046)
!5070 = !DILocation(line: 4464, column: 3, scope: !5046)
!5071 = !DILocation(line: 4467, column: 7, scope: !5059)
!5072 = !DILocation(line: 4467, column: 7, scope: !5046)
!5073 = !DILocation(line: 4469, column: 50, scope: !5058)
!5074 = !DILocation(line: 4469, column: 7, scope: !5058)
!5075 = !DILocation(line: 4470, column: 16, scope: !5058)
!5076 = !DILocation(line: 4470, column: 7, scope: !5058)
!5077 = !DILocation(line: 4472, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 4472, column: 11)
!5079 = !DILocation(line: 4472, column: 22, scope: !5078)
!5080 = !DILocation(line: 4472, column: 11, scope: !5058)
!5081 = !DILocation(line: 4473, column: 25, scope: !5078)
!5082 = !DILocation(line: 4473, column: 36, scope: !5078)
!5083 = !DILocation(line: 4473, column: 2, scope: !5078)
!5084 = !DILocation(line: 4475, column: 11, scope: !5057)
!5085 = !DILocation(line: 4475, column: 22, scope: !5057)
!5086 = !DILocation(line: 4475, column: 11, scope: !5058)
!5087 = !DILocation(line: 0, scope: !5056)
!5088 = !DILocation(line: 4480, column: 4, scope: !5056)
!5089 = !DILocation(line: 4482, column: 9, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 4482, column: 4)
!5091 = !DILocation(line: 0, scope: !5090)
!5092 = !DILocation(line: 4482, column: 16, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 4482, column: 4)
!5094 = !DILocation(line: 4482, column: 4, scope: !5090)
!5095 = !DILocation(line: 4484, column: 41, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 4484, column: 12)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 4483, column: 6)
!5098 = !DILocation(line: 4484, column: 12, scope: !5096)
!5099 = !DILocation(line: 4484, column: 12, scope: !5097)
!5100 = !DILocation(line: 4485, column: 3, scope: !5096)
!5101 = !DILocation(line: 4487, column: 17, scope: !5096)
!5102 = !DILocation(line: 4482, column: 68, scope: !5093)
!5103 = !DILocation(line: 4482, column: 4, scope: !5093)
!5104 = distinct !{!5104, !5094, !5105}
!5105 = !DILocation(line: 4492, column: 6, scope: !5090)
!5106 = !DILocation(line: 4494, column: 4, scope: !5056)
!5107 = !DILocation(line: 4495, column: 2, scope: !5057)
!5108 = !DILocation(line: 4495, column: 2, scope: !5056)
!5109 = !DILocation(line: 4498, column: 30, scope: !5046)
!5110 = !DILocation(line: 4498, column: 3, scope: !5046)
!5111 = !DILocation(line: 4499, column: 19, scope: !5046)
!5112 = !DILocation(line: 4499, column: 3, scope: !5046)
!5113 = !DILocation(line: 4500, column: 1, scope: !5046)
!5114 = distinct !DISubprogram(name: "fel_next", scope: !146, file: !146, line: 518, type: !5115, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5117)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{null, !4987, !3054}
!5117 = !{!5118, !5119, !5120}
!5118 = !DILocalVariable(name: "li", arg: 1, scope: !5114, file: !146, line: 518, type: !4987)
!5119 = !DILocalVariable(name: "loop", arg: 2, scope: !5114, file: !146, line: 518, type: !3054)
!5120 = !DILocalVariable(name: "anum", scope: !5114, file: !146, line: 520, type: !499)
!5121 = !DILocation(line: 0, scope: !5114)
!5122 = !DILocation(line: 520, column: 3, scope: !5114)
!5123 = !DILocation(line: 522, column: 3, scope: !5114)
!5124 = !DILocation(line: 522, column: 10, scope: !5114)
!5125 = !DILocation(line: 524, column: 14, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5114, file: !146, line: 523, column: 5)
!5127 = !DILocation(line: 525, column: 25, scope: !5126)
!5128 = !DILocation(line: 525, column: 15, scope: !5126)
!5129 = !DILocation(line: 525, column: 13, scope: !5126)
!5130 = !DILocation(line: 526, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5126, file: !146, line: 526, column: 11)
!5132 = !DILocation(line: 526, column: 11, scope: !5126)
!5133 = distinct !{!5133, !5123, !5134}
!5134 = !DILocation(line: 528, column: 5, scope: !5114)
!5135 = !DILocation(line: 530, column: 3, scope: !5114)
!5136 = !DILocation(line: 531, column: 9, scope: !5114)
!5137 = !DILocation(line: 532, column: 1, scope: !5114)
!5138 = distinct !DISubprogram(name: "free_dependence_relation", scope: !3, file: !3, line: 4518, type: !3024, scopeLine: 4519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5139)
!5139 = !{!5140}
!5140 = !DILocalVariable(name: "ddr", arg: 1, scope: !5138, file: !3, line: 4518, type: !1932)
!5141 = !DILocation(line: 0, scope: !5138)
!5142 = !DILocation(line: 4520, column: 11, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 4520, column: 7)
!5144 = !DILocation(line: 4520, column: 7, scope: !5138)
!5145 = !DILocation(line: 4523, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 4523, column: 7)
!5147 = !DILocation(line: 4523, column: 7, scope: !5138)
!5148 = !DILocation(line: 4524, column: 5, scope: !5146)
!5149 = !DILocation(line: 4525, column: 7, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 4525, column: 7)
!5151 = !DILocation(line: 4525, column: 7, scope: !5138)
!5152 = !DILocation(line: 4526, column: 5, scope: !5150)
!5153 = !DILocation(line: 4527, column: 7, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 4527, column: 7)
!5155 = !DILocation(line: 4527, column: 7, scope: !5138)
!5156 = !DILocation(line: 4528, column: 5, scope: !5154)
!5157 = !DILocation(line: 4530, column: 9, scope: !5138)
!5158 = !DILocation(line: 4530, column: 3, scope: !5138)
!5159 = !DILocation(line: 4531, column: 1, scope: !5138)
!5160 = distinct !DISubprogram(name: "free_subscripts", scope: !3, file: !3, line: 1461, type: !5161, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5163)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{null, !1939}
!5163 = !{!5164, !5165, !5166}
!5164 = !DILocalVariable(name: "subscripts", arg: 1, scope: !5160, file: !3, line: 1461, type: !1939)
!5165 = !DILocalVariable(name: "i", scope: !5160, file: !3, line: 1463, type: !7)
!5166 = !DILocalVariable(name: "s", scope: !5160, file: !3, line: 1464, type: !1951)
!5167 = !DILocation(line: 0, scope: !5160)
!5168 = !DILocation(line: 1464, column: 3, scope: !5160)
!5169 = !DILocation(line: 0, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 1467, column: 5)
!5171 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 1466, column: 3)
!5172 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1466, column: 3)
!5173 = !DILocation(line: 1466, column: 8, scope: !5172)
!5174 = !DILocation(line: 1466, column: 15, scope: !5171)
!5175 = !DILocation(line: 0, scope: !5172)
!5176 = !DILocation(line: 1466, column: 3, scope: !5172)
!5177 = !DILocation(line: 1468, column: 31, scope: !5170)
!5178 = !DILocation(line: 1468, column: 34, scope: !5170)
!5179 = !DILocation(line: 1468, column: 7, scope: !5170)
!5180 = !DILocation(line: 1469, column: 31, scope: !5170)
!5181 = !DILocation(line: 1469, column: 34, scope: !5170)
!5182 = !DILocation(line: 1469, column: 7, scope: !5170)
!5183 = !DILocation(line: 1470, column: 13, scope: !5170)
!5184 = !DILocation(line: 1470, column: 7, scope: !5170)
!5185 = !DILocation(line: 1466, column: 61, scope: !5171)
!5186 = !DILocation(line: 1466, column: 3, scope: !5171)
!5187 = distinct !{!5187, !5176, !5188}
!5188 = !DILocation(line: 1471, column: 5, scope: !5172)
!5189 = !DILocation(line: 1472, column: 3, scope: !5160)
!5190 = !DILocation(line: 1473, column: 1, scope: !5160)
!5191 = distinct !DISubprogram(name: "VEC_lambda_vector_heap_free", scope: !1905, file: !1905, line: 33, type: !5192, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5195)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{null, !5194}
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!5195 = !{!5196}
!5196 = !DILocalVariable(name: "vec_", arg: 1, scope: !5191, file: !1905, line: 33, type: !5194)
!5197 = !DILocation(line: 0, scope: !5191)
!5198 = !DILocation(line: 33, column: 1, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5191, file: !1905, line: 33, column: 1)
!5200 = !DILocation(line: 33, column: 1, scope: !5191)
!5201 = distinct !DISubprogram(name: "free_dependence_relations", scope: !3, file: !3, line: 4537, type: !2613, scopeLine: 4538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5202)
!5202 = !{!5203, !5204, !5205, !5206}
!5203 = !DILocalVariable(name: "dependence_relations", arg: 1, scope: !5201, file: !3, line: 4537, type: !1981)
!5204 = !DILocalVariable(name: "i", scope: !5201, file: !3, line: 4539, type: !7)
!5205 = !DILocalVariable(name: "ddr", scope: !5201, file: !3, line: 4540, type: !1932)
!5206 = !DILocalVariable(name: "loop_nest", scope: !5201, file: !3, line: 4541, type: !1895)
!5207 = !DILocation(line: 0, scope: !5201)
!5208 = !DILocation(line: 4540, column: 3, scope: !5201)
!5209 = !DILocation(line: 4541, column: 3, scope: !5201)
!5210 = !DILocation(line: 4541, column: 23, scope: !5201)
!5211 = !DILocation(line: 4543, column: 8, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 4543, column: 3)
!5213 = !DILocation(line: 4543, column: 15, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 4543, column: 3)
!5215 = !DILocation(line: 0, scope: !5212)
!5216 = !DILocation(line: 4543, column: 3, scope: !5212)
!5217 = !DILocation(line: 4545, column: 11, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 4545, column: 11)
!5219 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4544, column: 5)
!5220 = !DILocation(line: 4545, column: 15, scope: !5218)
!5221 = !DILocation(line: 4545, column: 11, scope: !5219)
!5222 = !DILocation(line: 4547, column: 11, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 4547, column: 11)
!5224 = !DILocation(line: 4547, column: 21, scope: !5223)
!5225 = !DILocation(line: 0, scope: !5223)
!5226 = !DILocation(line: 4547, column: 11, scope: !5219)
!5227 = !DILocation(line: 4548, column: 12, scope: !5223)
!5228 = !DILocation(line: 4548, column: 2, scope: !5223)
!5229 = !DILocation(line: 4550, column: 2, scope: !5223)
!5230 = !DILocation(line: 4552, column: 33, scope: !5219)
!5231 = !DILocation(line: 4552, column: 7, scope: !5219)
!5232 = !DILocation(line: 4553, column: 5, scope: !5219)
!5233 = !DILocation(line: 4543, column: 67, scope: !5214)
!5234 = !DILocation(line: 4543, column: 3, scope: !5214)
!5235 = distinct !{!5235, !5216, !5236}
!5236 = !DILocation(line: 4553, column: 5, scope: !5212)
!5237 = !DILocation(line: 4555, column: 7, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 4555, column: 7)
!5239 = !DILocation(line: 4555, column: 7, scope: !5201)
!5240 = !DILocation(line: 4556, column: 5, scope: !5238)
!5241 = !DILocation(line: 4557, column: 3, scope: !5201)
!5242 = !DILocation(line: 4558, column: 1, scope: !5201)
!5243 = distinct !DISubprogram(name: "VEC_loop_p_heap_free", scope: !146, file: !146, line: 86, type: !5244, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !4798}
!5246 = !{!5247}
!5247 = !DILocalVariable(name: "vec_", arg: 1, scope: !5243, file: !146, line: 86, type: !4798)
!5248 = !DILocation(line: 0, scope: !5243)
!5249 = !DILocation(line: 86, column: 1, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5243, file: !146, line: 86, column: 1)
!5251 = !DILocation(line: 86, column: 1, scope: !5243)
!5252 = distinct !DISubprogram(name: "VEC_ddr_p_heap_free", scope: !391, file: !391, line: 333, type: !5253, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5255)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{null, !4009}
!5255 = !{!5256}
!5256 = !DILocalVariable(name: "vec_", arg: 1, scope: !5252, file: !391, line: 333, type: !4009)
!5257 = !DILocation(line: 0, scope: !5252)
!5258 = !DILocation(line: 333, column: 1, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5252, file: !391, line: 333, column: 1)
!5260 = !DILocation(line: 333, column: 1, scope: !5252)
!5261 = distinct !DISubprogram(name: "free_data_refs", scope: !3, file: !3, line: 4563, type: !2604, scopeLine: 4564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5262)
!5262 = !{!5263, !5264, !5265}
!5263 = !DILocalVariable(name: "datarefs", arg: 1, scope: !5261, file: !3, line: 4563, type: !2010)
!5264 = !DILocalVariable(name: "i", scope: !5261, file: !3, line: 4565, type: !7)
!5265 = !DILocalVariable(name: "dr", scope: !5261, file: !3, line: 4566, type: !1860)
!5266 = !DILocation(line: 0, scope: !5261)
!5267 = !DILocation(line: 4566, column: 3, scope: !5261)
!5268 = !DILocation(line: 4568, column: 8, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 4568, column: 3)
!5270 = !DILocation(line: 4568, column: 15, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 4568, column: 3)
!5272 = !DILocation(line: 0, scope: !5269)
!5273 = !DILocation(line: 4568, column: 3, scope: !5269)
!5274 = !DILocation(line: 4569, column: 20, scope: !5271)
!5275 = !DILocation(line: 4569, column: 5, scope: !5271)
!5276 = !DILocation(line: 4568, column: 65, scope: !5271)
!5277 = !DILocation(line: 4568, column: 3, scope: !5271)
!5278 = distinct !{!5278, !5273, !5279}
!5279 = !DILocation(line: 4569, column: 22, scope: !5269)
!5280 = !DILocation(line: 4570, column: 3, scope: !5261)
!5281 = !DILocation(line: 4571, column: 1, scope: !5261)
!5282 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_free", scope: !391, file: !391, line: 209, type: !5283, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5285)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{null, !4565}
!5285 = !{!5286}
!5286 = !DILocalVariable(name: "vec_", arg: 1, scope: !5282, file: !391, line: 209, type: !4565)
!5287 = !DILocation(line: 0, scope: !5282)
!5288 = !DILocation(line: 209, column: 1, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5282, file: !391, line: 209, column: 1)
!5290 = !DILocation(line: 209, column: 1, scope: !5282)
!5291 = distinct !DISubprogram(name: "dump_rdg_vertex", scope: !3, file: !3, line: 4578, type: !5292, scopeLine: 4579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5317)
!5292 = !DISubroutineType(types: !5293)
!5293 = !{null, !2108, !5294, !499}
!5294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5295, size: 64)
!5295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "graph", file: !5296, line: 45, size: 192, elements: !5297)
!5296 = !DIFile(filename: "./graphds.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5297 = !{!5298, !5299, !5316}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "n_vertices", scope: !5295, file: !5296, line: 47, baseType: !499, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "vertices", scope: !5295, file: !5296, line: 48, baseType: !5300, size: 64, offset: 64)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 64)
!5301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vertex", file: !5296, line: 33, size: 256, elements: !5302)
!5302 = !{!5303, !5312, !5313, !5314, !5315}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !5301, file: !5296, line: 35, baseType: !5304, size: 64)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "graph_edge", file: !5296, line: 23, size: 256, elements: !5306)
!5306 = !{!5307, !5308, !5309, !5310, !5311}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5305, file: !5296, line: 25, baseType: !499, size: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !5305, file: !5296, line: 25, baseType: !499, size: 32, offset: 32)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "pred_next", scope: !5305, file: !5296, line: 26, baseType: !5304, size: 64, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "succ_next", scope: !5305, file: !5296, line: 26, baseType: !5304, size: 64, offset: 128)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5305, file: !5296, line: 28, baseType: !503, size: 64, offset: 192)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "succ", scope: !5301, file: !5296, line: 35, baseType: !5304, size: 64, offset: 64)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !5301, file: !5296, line: 37, baseType: !499, size: 32, offset: 128)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "post", scope: !5301, file: !5296, line: 39, baseType: !499, size: 32, offset: 160)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5301, file: !5296, line: 40, baseType: !503, size: 64, offset: 192)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !5295, file: !5296, line: 50, baseType: !1314, size: 64, offset: 128)
!5317 = !{!5318, !5319, !5320, !5321, !5322}
!5318 = !DILocalVariable(name: "file", arg: 1, scope: !5291, file: !3, line: 4578, type: !2108)
!5319 = !DILocalVariable(name: "rdg", arg: 2, scope: !5291, file: !3, line: 4578, type: !5294)
!5320 = !DILocalVariable(name: "i", arg: 3, scope: !5291, file: !3, line: 4578, type: !499)
!5321 = !DILocalVariable(name: "v", scope: !5291, file: !3, line: 4580, type: !5300)
!5322 = !DILocalVariable(name: "e", scope: !5291, file: !3, line: 4581, type: !5304)
!5323 = !DILocation(line: 0, scope: !5291)
!5324 = !DILocation(line: 4580, column: 29, scope: !5291)
!5325 = !DILocation(line: 4580, column: 24, scope: !5291)
!5326 = !DILocation(line: 4584, column: 5, scope: !5291)
!5327 = !DILocation(line: 4585, column: 5, scope: !5291)
!5328 = !DILocation(line: 4583, column: 3, scope: !5291)
!5329 = !DILocation(line: 4587, column: 10, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 4587, column: 7)
!5331 = !DILocation(line: 4587, column: 7, scope: !5330)
!5332 = !DILocation(line: 4587, column: 7, scope: !5291)
!5333 = !DILocation(line: 4588, column: 10, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 4588, column: 5)
!5335 = !DILocation(line: 0, scope: !5334)
!5336 = !DILocation(line: 4588, column: 5, scope: !5334)
!5337 = !DILocation(line: 4589, column: 32, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 4588, column: 5)
!5339 = !DILocation(line: 4589, column: 7, scope: !5338)
!5340 = !DILocation(line: 4588, column: 33, scope: !5338)
!5341 = !DILocation(line: 4588, column: 5, scope: !5338)
!5342 = distinct !{!5342, !5336, !5343}
!5343 = !DILocation(line: 4589, column: 35, scope: !5334)
!5344 = !DILocation(line: 4591, column: 3, scope: !5291)
!5345 = !DILocation(line: 4593, column: 10, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 4593, column: 7)
!5347 = !DILocation(line: 4593, column: 7, scope: !5346)
!5348 = !DILocation(line: 4593, column: 7, scope: !5291)
!5349 = !DILocation(line: 4594, column: 10, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 4594, column: 5)
!5351 = !DILocation(line: 0, scope: !5350)
!5352 = !DILocation(line: 4594, column: 5, scope: !5350)
!5353 = !DILocation(line: 4595, column: 32, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 4594, column: 5)
!5355 = !DILocation(line: 4595, column: 7, scope: !5354)
!5356 = !DILocation(line: 4594, column: 33, scope: !5354)
!5357 = !DILocation(line: 4594, column: 5, scope: !5354)
!5358 = distinct !{!5358, !5352, !5359}
!5359 = !DILocation(line: 4595, column: 36, scope: !5350)
!5360 = !DILocation(line: 4597, column: 3, scope: !5291)
!5361 = !DILocation(line: 4598, column: 28, scope: !5291)
!5362 = !DILocation(line: 4598, column: 3, scope: !5291)
!5363 = !DILocation(line: 4599, column: 3, scope: !5291)
!5364 = !DILocation(line: 4600, column: 1, scope: !5291)
!5365 = distinct !DISubprogram(name: "debug_rdg_vertex", scope: !3, file: !3, line: 4605, type: !5366, scopeLine: 4606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5368)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !5294, !499}
!5368 = !{!5369, !5370}
!5369 = !DILocalVariable(name: "rdg", arg: 1, scope: !5365, file: !3, line: 4605, type: !5294)
!5370 = !DILocalVariable(name: "i", arg: 2, scope: !5365, file: !3, line: 4605, type: !499)
!5371 = !DILocation(line: 0, scope: !5365)
!5372 = !DILocation(line: 4607, column: 20, scope: !5365)
!5373 = !DILocation(line: 4607, column: 3, scope: !5365)
!5374 = !DILocation(line: 4608, column: 1, scope: !5365)
!5375 = distinct !DISubprogram(name: "dump_rdg_component", scope: !3, file: !3, line: 4613, type: !5376, scopeLine: 4614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5378)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{null, !2108, !5294, !499, !1400}
!5378 = !{!5379, !5380, !5381, !5382, !5383}
!5379 = !DILocalVariable(name: "file", arg: 1, scope: !5375, file: !3, line: 4613, type: !2108)
!5380 = !DILocalVariable(name: "rdg", arg: 2, scope: !5375, file: !3, line: 4613, type: !5294)
!5381 = !DILocalVariable(name: "c", arg: 3, scope: !5375, file: !3, line: 4613, type: !499)
!5382 = !DILocalVariable(name: "dumped", arg: 4, scope: !5375, file: !3, line: 4613, type: !1400)
!5383 = !DILocalVariable(name: "i", scope: !5375, file: !3, line: 4615, type: !499)
!5384 = !DILocation(line: 0, scope: !5375)
!5385 = !DILocation(line: 4617, column: 3, scope: !5375)
!5386 = !DILocation(line: 0, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 4619, column: 3)
!5388 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 4619, column: 3)
!5389 = !DILocation(line: 0, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 4620, column: 9)
!5391 = !DILocation(line: 0, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4622, column: 6)
!5393 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 4621, column: 7)
!5394 = !DILocation(line: 4619, column: 8, scope: !5388)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 4619, column: 24, scope: !5387)
!5397 = !DILocation(line: 4619, column: 17, scope: !5387)
!5398 = !DILocation(line: 4619, column: 3, scope: !5388)
!5399 = !DILocation(line: 4620, column: 14, scope: !5390)
!5400 = !DILocation(line: 4620, column: 26, scope: !5390)
!5401 = !DILocation(line: 4620, column: 36, scope: !5390)
!5402 = !DILocation(line: 4620, column: 9, scope: !5387)
!5403 = !DILocation(line: 4625, column: 2, scope: !5393)
!5404 = !DILocation(line: 4626, column: 7, scope: !5393)
!5405 = !DILocation(line: 4619, column: 37, scope: !5387)
!5406 = !DILocation(line: 4619, column: 3, scope: !5387)
!5407 = distinct !{!5407, !5398, !5408}
!5408 = !DILocation(line: 4626, column: 7, scope: !5388)
!5409 = !DILocation(line: 4628, column: 3, scope: !5375)
!5410 = !DILocation(line: 4623, column: 4, scope: !5392)
!5411 = !DILocation(line: 4629, column: 1, scope: !5375)
!5412 = distinct !DISubprogram(name: "debug_rdg_component", scope: !3, file: !3, line: 4634, type: !5366, scopeLine: 4635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5413)
!5413 = !{!5414, !5415}
!5414 = !DILocalVariable(name: "rdg", arg: 1, scope: !5412, file: !3, line: 4634, type: !5294)
!5415 = !DILocalVariable(name: "c", arg: 2, scope: !5412, file: !3, line: 4634, type: !499)
!5416 = !DILocation(line: 0, scope: !5412)
!5417 = !DILocation(line: 4636, column: 23, scope: !5412)
!5418 = !DILocation(line: 4636, column: 3, scope: !5412)
!5419 = !DILocation(line: 4637, column: 1, scope: !5412)
!5420 = distinct !DISubprogram(name: "dump_rdg", scope: !3, file: !3, line: 4642, type: !5421, scopeLine: 4643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{null, !2108, !5294}
!5423 = !{!5424, !5425, !5426, !5427}
!5424 = !DILocalVariable(name: "file", arg: 1, scope: !5420, file: !3, line: 4642, type: !2108)
!5425 = !DILocalVariable(name: "rdg", arg: 2, scope: !5420, file: !3, line: 4642, type: !5294)
!5426 = !DILocalVariable(name: "i", scope: !5420, file: !3, line: 4644, type: !499)
!5427 = !DILocalVariable(name: "dumped", scope: !5420, file: !3, line: 4645, type: !1400)
!5428 = !DILocation(line: 0, scope: !5420)
!5429 = !DILocation(line: 4645, column: 19, scope: !5420)
!5430 = !DILocation(line: 4647, column: 3, scope: !5420)
!5431 = !DILocation(line: 0, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 4649, column: 3)
!5433 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 4649, column: 3)
!5434 = !DILocation(line: 0, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 4650, column: 9)
!5436 = !DILocation(line: 4649, column: 8, scope: !5433)
!5437 = !DILocation(line: 0, scope: !5433)
!5438 = !DILocation(line: 4649, column: 24, scope: !5432)
!5439 = !DILocation(line: 4649, column: 17, scope: !5432)
!5440 = !DILocation(line: 4649, column: 3, scope: !5433)
!5441 = !DILocation(line: 4650, column: 10, scope: !5435)
!5442 = !DILocation(line: 4650, column: 9, scope: !5432)
!5443 = !DILocation(line: 4651, column: 43, scope: !5435)
!5444 = !DILocation(line: 4651, column: 55, scope: !5435)
!5445 = !DILocation(line: 4651, column: 7, scope: !5435)
!5446 = !DILocation(line: 4649, column: 37, scope: !5432)
!5447 = !DILocation(line: 4649, column: 3, scope: !5432)
!5448 = distinct !{!5448, !5440, !5449}
!5449 = !DILocation(line: 4651, column: 72, scope: !5433)
!5450 = !DILocation(line: 4653, column: 3, scope: !5420)
!5451 = !DILocation(line: 4654, column: 3, scope: !5420)
!5452 = !DILocation(line: 4655, column: 1, scope: !5420)
!5453 = distinct !DISubprogram(name: "debug_rdg", scope: !3, file: !3, line: 4660, type: !5454, scopeLine: 4661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !5294}
!5456 = !{!5457}
!5457 = !DILocalVariable(name: "rdg", arg: 1, scope: !5453, file: !3, line: 4660, type: !5294)
!5458 = !DILocation(line: 0, scope: !5453)
!5459 = !DILocation(line: 4662, column: 13, scope: !5453)
!5460 = !DILocation(line: 4662, column: 3, scope: !5453)
!5461 = !DILocation(line: 4663, column: 1, scope: !5453)
!5462 = distinct !DISubprogram(name: "rdg_vertex_for_stmt", scope: !3, file: !3, line: 4677, type: !5463, scopeLine: 4678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5465)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!499, !5294, !830}
!5465 = !{!5466, !5467, !5468, !5469}
!5466 = !DILocalVariable(name: "rdg", arg: 1, scope: !5462, file: !3, line: 4677, type: !5294)
!5467 = !DILocalVariable(name: "stmt", arg: 2, scope: !5462, file: !3, line: 4677, type: !830)
!5468 = !DILocalVariable(name: "rvi", scope: !5462, file: !3, line: 4679, type: !1925)
!5469 = !DILocalVariable(name: "slot", scope: !5462, file: !3, line: 4679, type: !1924)
!5470 = !DILocation(line: 0, scope: !5462)
!5471 = !DILocation(line: 4679, column: 3, scope: !5462)
!5472 = !DILocation(line: 4681, column: 7, scope: !5462)
!5473 = !DILocation(line: 4681, column: 12, scope: !5462)
!5474 = !DILocation(line: 4682, column: 53, scope: !5462)
!5475 = !DILocation(line: 4682, column: 37, scope: !5462)
!5476 = !DILocation(line: 4684, column: 8, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 4684, column: 7)
!5478 = !DILocation(line: 4684, column: 7, scope: !5462)
!5479 = !DILocation(line: 4687, column: 16, scope: !5462)
!5480 = !DILocation(line: 4687, column: 3, scope: !5462)
!5481 = !DILocation(line: 4688, column: 1, scope: !5462)
!5482 = distinct !DISubprogram(name: "create_rdg_vertices", scope: !3, file: !3, line: 4783, type: !5483, scopeLine: 4784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5485)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{null, !5294, !2037}
!5485 = !{!5486, !5487, !5488, !5489, !5490, !5491, !5495, !5496, !5497, !5498}
!5486 = !DILocalVariable(name: "rdg", arg: 1, scope: !5482, file: !3, line: 4783, type: !5294)
!5487 = !DILocalVariable(name: "stmts", arg: 2, scope: !5482, file: !3, line: 4783, type: !2037)
!5488 = !DILocalVariable(name: "i", scope: !5482, file: !3, line: 4785, type: !499)
!5489 = !DILocalVariable(name: "j", scope: !5482, file: !3, line: 4785, type: !499)
!5490 = !DILocalVariable(name: "stmt", scope: !5482, file: !3, line: 4786, type: !830)
!5491 = !DILocalVariable(name: "references", scope: !5492, file: !3, line: 4790, type: !1993)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 4789, column: 5)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 4788, column: 3)
!5494 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 4788, column: 3)
!5495 = !DILocalVariable(name: "ref", scope: !5492, file: !3, line: 4791, type: !4398)
!5496 = !DILocalVariable(name: "v", scope: !5492, file: !3, line: 4792, type: !5300)
!5497 = !DILocalVariable(name: "rvi", scope: !5492, file: !3, line: 4793, type: !1924)
!5498 = !DILocalVariable(name: "slot", scope: !5492, file: !3, line: 4794, type: !1929)
!5499 = !DILocation(line: 0, scope: !5482)
!5500 = !DILocation(line: 4786, column: 3, scope: !5482)
!5501 = !DILocation(line: 0, scope: !5493)
!5502 = !DILocation(line: 0, scope: !5492)
!5503 = !DILocation(line: 4788, column: 8, scope: !5494)
!5504 = !DILocation(line: 0, scope: !5494)
!5505 = !DILocation(line: 4788, column: 15, scope: !5493)
!5506 = !DILocation(line: 4788, column: 3, scope: !5494)
!5507 = !DILocation(line: 4790, column: 7, scope: !5492)
!5508 = !DILocation(line: 4791, column: 7, scope: !5492)
!5509 = !DILocation(line: 4792, column: 33, scope: !5492)
!5510 = !DILocation(line: 4793, column: 37, scope: !5492)
!5511 = !DILocation(line: 4796, column: 19, scope: !5492)
!5512 = !DILocation(line: 4796, column: 17, scope: !5492)
!5513 = !DILocation(line: 4797, column: 12, scope: !5492)
!5514 = !DILocation(line: 4797, column: 18, scope: !5492)
!5515 = !DILocation(line: 4798, column: 63, scope: !5492)
!5516 = !DILocation(line: 4798, column: 42, scope: !5492)
!5517 = !DILocation(line: 4798, column: 14, scope: !5492)
!5518 = !DILocation(line: 4800, column: 12, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 4800, column: 11)
!5520 = !DILocation(line: 4800, column: 11, scope: !5492)
!5521 = !DILocation(line: 4801, column: 8, scope: !5519)
!5522 = !DILocation(line: 4801, column: 2, scope: !5519)
!5523 = !DILocation(line: 4803, column: 2, scope: !5519)
!5524 = !DILocation(line: 4805, column: 17, scope: !5492)
!5525 = !DILocation(line: 4805, column: 10, scope: !5492)
!5526 = !DILocation(line: 4805, column: 15, scope: !5492)
!5527 = !DILocation(line: 4806, column: 27, scope: !5492)
!5528 = !DILocation(line: 4806, column: 7, scope: !5492)
!5529 = !DILocation(line: 4806, column: 25, scope: !5492)
!5530 = !DILocation(line: 4808, column: 7, scope: !5492)
!5531 = !DILocation(line: 4808, column: 35, scope: !5492)
!5532 = !DILocation(line: 4809, column: 7, scope: !5492)
!5533 = !DILocation(line: 4809, column: 35, scope: !5492)
!5534 = !DILocation(line: 4810, column: 24, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 4810, column: 11)
!5536 = !DILocation(line: 4810, column: 11, scope: !5535)
!5537 = !DILocation(line: 4810, column: 30, scope: !5535)
!5538 = !DILocation(line: 4810, column: 11, scope: !5492)
!5539 = !DILocation(line: 4813, column: 31, scope: !5492)
!5540 = !DILocation(line: 4813, column: 7, scope: !5492)
!5541 = !DILocation(line: 4814, column: 12, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 4814, column: 7)
!5543 = !DILocation(line: 0, scope: !5542)
!5544 = !DILocation(line: 4814, column: 19, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 4814, column: 7)
!5546 = !DILocation(line: 4814, column: 7, scope: !5542)
!5547 = !DILocation(line: 4815, column: 7, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 4815, column: 6)
!5549 = !DILocation(line: 4815, column: 12, scope: !5548)
!5550 = !DILocation(line: 0, scope: !5548)
!5551 = !DILocation(line: 4815, column: 6, scope: !5545)
!5552 = !DILocation(line: 4816, column: 4, scope: !5548)
!5553 = !DILocation(line: 4816, column: 32, scope: !5548)
!5554 = !DILocation(line: 4818, column: 4, scope: !5548)
!5555 = !DILocation(line: 4818, column: 32, scope: !5548)
!5556 = !DILocation(line: 4814, column: 68, scope: !5545)
!5557 = !DILocation(line: 4814, column: 7, scope: !5545)
!5558 = distinct !{!5558, !5546, !5559}
!5559 = !DILocation(line: 4818, column: 34, scope: !5542)
!5560 = !DILocation(line: 4820, column: 7, scope: !5492)
!5561 = !DILocation(line: 4821, column: 5, scope: !5493)
!5562 = !DILocation(line: 4788, column: 54, scope: !5493)
!5563 = !DILocation(line: 4788, column: 3, scope: !5493)
!5564 = distinct !{!5564, !5506, !5565}
!5565 = !DILocation(line: 4821, column: 5, scope: !5494)
!5566 = !DILocation(line: 4822, column: 1, scope: !5482)
!5567 = distinct !DISubprogram(name: "VEC_gimple_base_iterate", scope: !402, file: !402, line: 33, type: !5568, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5573)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!499, !5570, !7, !5572}
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!5573 = !{!5574, !5575, !5576}
!5574 = !DILocalVariable(name: "vec_", arg: 1, scope: !5567, file: !402, line: 33, type: !5570)
!5575 = !DILocalVariable(name: "ix_", arg: 2, scope: !5567, file: !402, line: 33, type: !7)
!5576 = !DILocalVariable(name: "ptr", arg: 3, scope: !5567, file: !402, line: 33, type: !5572)
!5577 = !DILocation(line: 0, scope: !5567)
!5578 = !DILocation(line: 33, column: 1, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5567, file: !402, line: 33, column: 1)
!5580 = !DILocation(line: 33, column: 1, scope: !5567)
!5581 = !DILocation(line: 33, column: 1, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5579, file: !402, line: 33, column: 1)
!5583 = !DILocation(line: 33, column: 1, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5579, file: !402, line: 33, column: 1)
!5585 = !DILocation(line: 0, scope: !5579)
!5586 = distinct !DISubprogram(name: "build_empty_rdg", scope: !3, file: !3, line: 4907, type: !5587, scopeLine: 4908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5589)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!5294, !499}
!5589 = !{!5590, !5591, !5592}
!5590 = !DILocalVariable(name: "n_stmts", arg: 1, scope: !5586, file: !3, line: 4907, type: !499)
!5591 = !DILocalVariable(name: "nb_data_refs", scope: !5586, file: !3, line: 4909, type: !499)
!5592 = !DILocalVariable(name: "rdg", scope: !5586, file: !3, line: 4910, type: !5294)
!5593 = !DILocation(line: 0, scope: !5586)
!5594 = !DILocation(line: 4910, column: 23, scope: !5586)
!5595 = !DILocation(line: 4912, column: 18, scope: !5586)
!5596 = !DILocation(line: 4912, column: 8, scope: !5586)
!5597 = !DILocation(line: 4912, column: 16, scope: !5586)
!5598 = !DILocation(line: 4914, column: 3, scope: !5586)
!5599 = distinct !DISubprogram(name: "hash_stmt_vertex_info", scope: !3, file: !3, line: 4874, type: !1322, scopeLine: 4875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5600)
!5600 = !{!5601, !5602, !5604}
!5601 = !DILocalVariable(name: "elt", arg: 1, scope: !5599, file: !3, line: 4874, type: !1325)
!5602 = !DILocalVariable(name: "rvi", scope: !5599, file: !3, line: 4876, type: !5603)
!5603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2035)
!5604 = !DILocalVariable(name: "stmt", scope: !5599, file: !3, line: 4878, type: !830)
!5605 = !DILocation(line: 0, scope: !5599)
!5606 = !DILocation(line: 4878, column: 22, scope: !5599)
!5607 = !DILocation(line: 4880, column: 10, scope: !5599)
!5608 = !DILocation(line: 4880, column: 3, scope: !5599)
!5609 = distinct !DISubprogram(name: "eq_stmt_vertex_info", scope: !3, file: !3, line: 4886, type: !1330, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5610)
!5610 = !{!5611, !5612, !5613, !5614}
!5611 = !DILocalVariable(name: "e1", arg: 1, scope: !5609, file: !3, line: 4886, type: !1325)
!5612 = !DILocalVariable(name: "e2", arg: 2, scope: !5609, file: !3, line: 4886, type: !1325)
!5613 = !DILocalVariable(name: "elt1", scope: !5609, file: !3, line: 4888, type: !2035)
!5614 = !DILocalVariable(name: "elt2", scope: !5609, file: !3, line: 4889, type: !2035)
!5615 = !DILocation(line: 0, scope: !5609)
!5616 = !DILocation(line: 4891, column: 16, scope: !5609)
!5617 = !DILocation(line: 4891, column: 30, scope: !5609)
!5618 = !DILocation(line: 4891, column: 21, scope: !5609)
!5619 = !DILocation(line: 4891, column: 3, scope: !5609)
!5620 = distinct !DISubprogram(name: "hash_stmt_vertex_del", scope: !3, file: !3, line: 4897, type: !1335, scopeLine: 4898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5621)
!5621 = !{!5622}
!5622 = !DILocalVariable(name: "e", arg: 1, scope: !5620, file: !3, line: 4897, type: !503)
!5623 = !DILocation(line: 0, scope: !5620)
!5624 = !DILocation(line: 4899, column: 3, scope: !5620)
!5625 = !DILocation(line: 4900, column: 1, scope: !5620)
!5626 = distinct !DISubprogram(name: "build_rdg", scope: !3, file: !3, line: 4922, type: !5627, scopeLine: 4923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5629)
!5627 = !DISubroutineType(types: !5628)
!5628 = !{!5294, !1045}
!5629 = !{!5630, !5631, !5632, !5633, !5634, !5635}
!5630 = !DILocalVariable(name: "loop", arg: 1, scope: !5626, file: !3, line: 4922, type: !1045)
!5631 = !DILocalVariable(name: "nb_data_refs", scope: !5626, file: !3, line: 4924, type: !499)
!5632 = !DILocalVariable(name: "rdg", scope: !5626, file: !3, line: 4925, type: !5294)
!5633 = !DILocalVariable(name: "dependence_relations", scope: !5626, file: !3, line: 4926, type: !1981)
!5634 = !DILocalVariable(name: "datarefs", scope: !5626, file: !3, line: 4927, type: !2010)
!5635 = !DILocalVariable(name: "stmts", scope: !5626, file: !3, line: 4928, type: !2037)
!5636 = !DILocation(line: 0, scope: !5626)
!5637 = !DILocation(line: 4926, column: 3, scope: !5626)
!5638 = !DILocation(line: 4927, column: 3, scope: !5626)
!5639 = !DILocation(line: 4928, column: 3, scope: !5626)
!5640 = !DILocation(line: 4928, column: 31, scope: !5626)
!5641 = !DILocation(line: 4928, column: 23, scope: !5626)
!5642 = !DILocation(line: 4930, column: 26, scope: !5626)
!5643 = !DILocation(line: 4930, column: 24, scope: !5626)
!5644 = !DILocation(line: 4931, column: 14, scope: !5626)
!5645 = !DILocation(line: 4931, column: 12, scope: !5626)
!5646 = !DILocation(line: 4932, column: 3, scope: !5626)
!5647 = !DILocation(line: 4937, column: 29, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 4937, column: 7)
!5649 = !DILocation(line: 4937, column: 8, scope: !5648)
!5650 = !DILocation(line: 4937, column: 7, scope: !5626)
!5651 = !DILocation(line: 4939, column: 34, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 4938, column: 5)
!5653 = !DILocation(line: 4939, column: 7, scope: !5652)
!5654 = !DILocation(line: 4940, column: 23, scope: !5652)
!5655 = !DILocation(line: 4940, column: 7, scope: !5652)
!5656 = !DILocation(line: 4941, column: 7, scope: !5652)
!5657 = !DILocation(line: 4943, column: 7, scope: !5652)
!5658 = !DILocation(line: 4946, column: 3, scope: !5626)
!5659 = !DILocation(line: 4947, column: 26, scope: !5626)
!5660 = !DILocation(line: 4947, column: 9, scope: !5626)
!5661 = !DILocation(line: 4949, column: 18, scope: !5626)
!5662 = !DILocation(line: 4949, column: 8, scope: !5626)
!5663 = !DILocation(line: 4949, column: 16, scope: !5626)
!5664 = !DILocation(line: 4951, column: 29, scope: !5626)
!5665 = !DILocation(line: 4951, column: 3, scope: !5626)
!5666 = !DILocation(line: 4952, column: 26, scope: !5626)
!5667 = !DILocation(line: 4952, column: 3, scope: !5626)
!5668 = !DILocation(line: 4954, column: 3, scope: !5626)
!5669 = !DILocation(line: 4955, column: 3, scope: !5626)
!5670 = !DILocation(line: 4956, column: 1, scope: !5626)
!5671 = distinct !DISubprogram(name: "VEC_gimple_heap_alloc", scope: !402, file: !402, line: 34, type: !5672, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5674)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{!2037, !499}
!5674 = !{!5675}
!5675 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5671, file: !402, line: 34, type: !499)
!5676 = !DILocation(line: 0, scope: !5671)
!5677 = !DILocation(line: 34, column: 1, scope: !5671)
!5678 = distinct !DISubprogram(name: "VEC_ddr_p_heap_alloc", scope: !391, file: !391, line: 333, type: !5679, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5681)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{!1981, !499}
!5681 = !{!5682}
!5682 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5678, file: !391, line: 333, type: !499)
!5683 = !DILocation(line: 0, scope: !5678)
!5684 = !DILocation(line: 333, column: 1, scope: !5678)
!5685 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_alloc", scope: !391, file: !391, line: 209, type: !5686, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5688)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!2010, !499}
!5688 = !{!5689}
!5689 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5685, file: !391, line: 209, type: !499)
!5690 = !DILocation(line: 0, scope: !5685)
!5691 = !DILocation(line: 209, column: 1, scope: !5685)
!5692 = distinct !DISubprogram(name: "known_dependences_p", scope: !3, file: !3, line: 4859, type: !5693, scopeLine: 4860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5695)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!498, !1981}
!5695 = !{!5696, !5697, !5698}
!5696 = !DILocalVariable(name: "dependence_relations", arg: 1, scope: !5692, file: !3, line: 4859, type: !1981)
!5697 = !DILocalVariable(name: "ddr", scope: !5692, file: !3, line: 4861, type: !1931)
!5698 = !DILocalVariable(name: "i", scope: !5692, file: !3, line: 4862, type: !7)
!5699 = !DILocation(line: 0, scope: !5692)
!5700 = !DILocation(line: 4861, column: 3, scope: !5692)
!5701 = !DILocation(line: 0, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 4864, column: 3)
!5703 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 4864, column: 3)
!5704 = !DILocation(line: 4864, column: 8, scope: !5703)
!5705 = !DILocation(line: 0, scope: !5703)
!5706 = !DILocation(line: 4864, column: 15, scope: !5702)
!5707 = !DILocation(line: 4864, column: 3, scope: !5703)
!5708 = !DILocation(line: 4865, column: 9, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 4865, column: 9)
!5710 = !DILocation(line: 4865, column: 36, scope: !5709)
!5711 = !DILocation(line: 4865, column: 33, scope: !5709)
!5712 = !DILocation(line: 4865, column: 9, scope: !5702)
!5713 = !DILocation(line: 4864, column: 67, scope: !5702)
!5714 = !DILocation(line: 4864, column: 3, scope: !5702)
!5715 = distinct !{!5715, !5707, !5716}
!5716 = !DILocation(line: 4866, column: 14, scope: !5703)
!5717 = !DILocation(line: 4869, column: 1, scope: !5692)
!5718 = distinct !DISubprogram(name: "VEC_gimple_heap_free", scope: !402, file: !402, line: 34, type: !5719, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5722)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !5721}
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!5722 = !{!5723}
!5723 = !DILocalVariable(name: "vec_", arg: 1, scope: !5718, file: !402, line: 34, type: !5721)
!5724 = !DILocation(line: 0, scope: !5718)
!5725 = !DILocation(line: 34, column: 1, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5718, file: !402, line: 34, column: 1)
!5727 = !DILocation(line: 34, column: 1, scope: !5718)
!5728 = distinct !DISubprogram(name: "stmts_from_loop", scope: !3, file: !3, line: 4831, type: !5729, scopeLine: 4832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{null, !1045, !5721}
!5731 = !{!5732, !5733, !5734, !5735, !5736, !5740, !5741}
!5732 = !DILocalVariable(name: "loop", arg: 1, scope: !5728, file: !3, line: 4831, type: !1045)
!5733 = !DILocalVariable(name: "stmts", arg: 2, scope: !5728, file: !3, line: 4831, type: !5721)
!5734 = !DILocalVariable(name: "i", scope: !5728, file: !3, line: 4833, type: !7)
!5735 = !DILocalVariable(name: "bbs", scope: !5728, file: !3, line: 4834, type: !4722)
!5736 = !DILocalVariable(name: "bb", scope: !5737, file: !3, line: 4838, type: !1282)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 4837, column: 5)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 4836, column: 3)
!5739 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 4836, column: 3)
!5740 = !DILocalVariable(name: "bsi", scope: !5737, file: !3, line: 4839, type: !4762)
!5741 = !DILocalVariable(name: "stmt", scope: !5737, file: !3, line: 4840, type: !830)
!5742 = !DILocation(line: 0, scope: !5728)
!5743 = !DILocation(line: 4834, column: 22, scope: !5728)
!5744 = !DILocation(line: 0, scope: !5738)
!5745 = !DILocation(line: 0, scope: !5737)
!5746 = !DILocation(line: 0, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 4842, column: 7)
!5748 = !DILocation(line: 0, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 4845, column: 7)
!5750 = !DILocation(line: 4836, column: 8, scope: !5739)
!5751 = !DILocation(line: 0, scope: !5739)
!5752 = !DILocation(line: 4836, column: 25, scope: !5738)
!5753 = !DILocation(line: 4836, column: 17, scope: !5738)
!5754 = !DILocation(line: 4836, column: 3, scope: !5739)
!5755 = !DILocation(line: 4838, column: 24, scope: !5737)
!5756 = !DILocation(line: 4839, column: 7, scope: !5737)
!5757 = !DILocation(line: 4842, column: 18, scope: !5747)
!5758 = !DILocation(line: 4842, column: 12, scope: !5747)
!5759 = !DILocation(line: 4842, column: 40, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 4842, column: 7)
!5761 = !DILocation(line: 4842, column: 39, scope: !5760)
!5762 = !DILocation(line: 4842, column: 7, scope: !5747)
!5763 = !DILocation(line: 4843, column: 2, scope: !5760)
!5764 = !DILocation(line: 4842, column: 57, scope: !5760)
!5765 = !DILocation(line: 4842, column: 7, scope: !5760)
!5766 = distinct !{!5766, !5762, !5767}
!5767 = !DILocation(line: 4843, column: 2, scope: !5747)
!5768 = !DILocation(line: 4845, column: 18, scope: !5749)
!5769 = !DILocation(line: 4845, column: 12, scope: !5749)
!5770 = !DILocation(line: 4845, column: 38, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 4845, column: 7)
!5772 = !DILocation(line: 4845, column: 37, scope: !5771)
!5773 = !DILocation(line: 4845, column: 7, scope: !5749)
!5774 = !DILocation(line: 4847, column: 11, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 4846, column: 2)
!5776 = !DILocation(line: 4848, column: 8, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 4848, column: 8)
!5778 = !DILocation(line: 4848, column: 27, scope: !5777)
!5779 = !DILocation(line: 4848, column: 8, scope: !5775)
!5780 = !DILocation(line: 4849, column: 6, scope: !5777)
!5781 = !DILocation(line: 4845, column: 55, scope: !5771)
!5782 = !DILocation(line: 4845, column: 7, scope: !5771)
!5783 = distinct !{!5783, !5773, !5784}
!5784 = !DILocation(line: 4850, column: 2, scope: !5749)
!5785 = !DILocation(line: 4851, column: 5, scope: !5738)
!5786 = !DILocation(line: 4836, column: 37, scope: !5738)
!5787 = !DILocation(line: 4836, column: 3, scope: !5738)
!5788 = distinct !{!5788, !5754, !5789}
!5789 = !DILocation(line: 4851, column: 5, scope: !5739)
!5790 = !DILocation(line: 4853, column: 9, scope: !5728)
!5791 = !DILocation(line: 4853, column: 3, scope: !5728)
!5792 = !DILocation(line: 4854, column: 1, scope: !5728)
!5793 = distinct !DISubprogram(name: "VEC_gimple_base_length", scope: !402, file: !402, line: 33, type: !5794, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5796)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{!7, !5570}
!5796 = !{!5797}
!5797 = !DILocalVariable(name: "vec_", arg: 1, scope: !5793, file: !402, line: 33, type: !5570)
!5798 = !DILocation(line: 0, scope: !5793)
!5799 = !DILocation(line: 33, column: 1, scope: !5793)
!5800 = distinct !DISubprogram(name: "create_rdg_edges", scope: !3, file: !3, line: 4763, type: !5801, scopeLine: 4764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5803)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{null, !5294, !1981}
!5803 = !{!5804, !5805, !5806, !5807, !5808, !5809}
!5804 = !DILocalVariable(name: "rdg", arg: 1, scope: !5800, file: !3, line: 4763, type: !5294)
!5805 = !DILocalVariable(name: "ddrs", arg: 2, scope: !5800, file: !3, line: 4763, type: !1981)
!5806 = !DILocalVariable(name: "i", scope: !5800, file: !3, line: 4765, type: !499)
!5807 = !DILocalVariable(name: "ddr", scope: !5800, file: !3, line: 4766, type: !1932)
!5808 = !DILocalVariable(name: "def_p", scope: !5800, file: !3, line: 4767, type: !2048)
!5809 = !DILocalVariable(name: "iter", scope: !5800, file: !3, line: 4768, type: !5810)
!5810 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !441, line: 140, baseType: !5811)
!5811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !441, line: 131, size: 320, elements: !5812)
!5812 = !{!5813, !5814, !5815, !5817, !5819, !5820, !5821}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5811, file: !441, line: 133, baseType: !498, size: 8)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5811, file: !441, line: 134, baseType: !440, size: 32, offset: 32)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5811, file: !441, line: 135, baseType: !5816, size: 64, offset: 64)
!5816 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !441, line: 42, baseType: !859)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5811, file: !441, line: 136, baseType: !5818, size: 64, offset: 128)
!5818 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !441, line: 50, baseType: !866)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5811, file: !441, line: 137, baseType: !499, size: 32, offset: 192)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5811, file: !441, line: 138, baseType: !499, size: 32, offset: 224)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5811, file: !441, line: 139, baseType: !830, size: 64, offset: 256)
!5822 = !DILocation(line: 0, scope: !5800)
!5823 = !DILocation(line: 4766, column: 3, scope: !5800)
!5824 = !DILocation(line: 4768, column: 3, scope: !5800)
!5825 = !DILocation(line: 0, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 4770, column: 3)
!5827 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 4770, column: 3)
!5828 = !DILocation(line: 4770, column: 8, scope: !5827)
!5829 = !DILocation(line: 0, scope: !5827)
!5830 = !DILocation(line: 4770, column: 15, scope: !5826)
!5831 = !DILocation(line: 4770, column: 3, scope: !5827)
!5832 = !DILocation(line: 0, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 4774, column: 3)
!5834 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 4774, column: 3)
!5835 = !DILocation(line: 0, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 4775, column: 5)
!5837 = !DILocation(line: 4774, column: 3, scope: !5834)
!5838 = !DILocation(line: 4771, column: 9, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 4771, column: 9)
!5840 = !DILocation(line: 4771, column: 33, scope: !5839)
!5841 = !DILocation(line: 4771, column: 9, scope: !5826)
!5842 = !DILocation(line: 4772, column: 7, scope: !5839)
!5843 = !DILocation(line: 4770, column: 51, scope: !5826)
!5844 = !DILocation(line: 4770, column: 3, scope: !5826)
!5845 = distinct !{!5845, !5831, !5846}
!5846 = !DILocation(line: 4772, column: 40, scope: !5827)
!5847 = !DILocation(line: 0, scope: !5834)
!5848 = !DILocation(line: 4774, column: 24, scope: !5833)
!5849 = !DILocation(line: 4774, column: 17, scope: !5833)
!5850 = !DILocation(line: 4775, column: 5, scope: !5836)
!5851 = !DILocation(line: 4775, column: 5, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 4775, column: 5)
!5853 = !DILocation(line: 4777, column: 41, scope: !5852)
!5854 = !DILocation(line: 4777, column: 7, scope: !5852)
!5855 = distinct !{!5855, !5850, !5856}
!5856 = !DILocation(line: 4777, column: 64, scope: !5836)
!5857 = !DILocation(line: 4774, column: 37, scope: !5833)
!5858 = !DILocation(line: 4774, column: 3, scope: !5833)
!5859 = distinct !{!5859, !5837, !5860}
!5860 = !DILocation(line: 4777, column: 64, scope: !5834)
!5861 = !DILocation(line: 4778, column: 1, scope: !5800)
!5862 = distinct !DISubprogram(name: "free_rdg", scope: !3, file: !3, line: 4961, type: !5454, scopeLine: 4962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5863)
!5863 = !{!5864, !5865}
!5864 = !DILocalVariable(name: "rdg", arg: 1, scope: !5862, file: !3, line: 4961, type: !5294)
!5865 = !DILocalVariable(name: "i", scope: !5862, file: !3, line: 4963, type: !499)
!5866 = !DILocation(line: 0, scope: !5862)
!5867 = !DILocation(line: 0, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 4965, column: 3)
!5869 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 4965, column: 3)
!5870 = !DILocation(line: 4965, column: 8, scope: !5869)
!5871 = !DILocation(line: 0, scope: !5869)
!5872 = !DILocation(line: 4965, column: 24, scope: !5868)
!5873 = !DILocation(line: 4965, column: 17, scope: !5868)
!5874 = !DILocation(line: 4965, column: 3, scope: !5869)
!5875 = !DILocation(line: 4966, column: 16, scope: !5868)
!5876 = !DILocation(line: 4966, column: 28, scope: !5868)
!5877 = !DILocation(line: 4966, column: 5, scope: !5868)
!5878 = !DILocation(line: 4965, column: 37, scope: !5868)
!5879 = !DILocation(line: 4965, column: 3, scope: !5868)
!5880 = distinct !{!5880, !5874, !5881}
!5881 = !DILocation(line: 4966, column: 32, scope: !5869)
!5882 = !DILocation(line: 4968, column: 21, scope: !5862)
!5883 = !DILocation(line: 4968, column: 3, scope: !5862)
!5884 = !DILocation(line: 4969, column: 3, scope: !5862)
!5885 = !DILocation(line: 4970, column: 1, scope: !5862)
!5886 = distinct !DISubprogram(name: "stores_from_loop", scope: !3, file: !3, line: 4976, type: !5729, scopeLine: 4977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5887)
!5887 = !{!5888, !5889, !5890, !5891, !5892, !5896}
!5888 = !DILocalVariable(name: "loop", arg: 1, scope: !5886, file: !3, line: 4976, type: !1045)
!5889 = !DILocalVariable(name: "stmts", arg: 2, scope: !5886, file: !3, line: 4976, type: !5721)
!5890 = !DILocalVariable(name: "i", scope: !5886, file: !3, line: 4978, type: !7)
!5891 = !DILocalVariable(name: "bbs", scope: !5886, file: !3, line: 4979, type: !4722)
!5892 = !DILocalVariable(name: "bb", scope: !5893, file: !3, line: 4983, type: !1282)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 4982, column: 5)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 4981, column: 3)
!5895 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 4981, column: 3)
!5896 = !DILocalVariable(name: "bsi", scope: !5893, file: !3, line: 4984, type: !4762)
!5897 = !DILocation(line: 0, scope: !5886)
!5898 = !DILocation(line: 4979, column: 22, scope: !5886)
!5899 = !DILocation(line: 0, scope: !5894)
!5900 = !DILocation(line: 0, scope: !5893)
!5901 = !DILocation(line: 0, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4986, column: 7)
!5903 = !DILocation(line: 4981, column: 8, scope: !5895)
!5904 = !DILocation(line: 0, scope: !5895)
!5905 = !DILocation(line: 4981, column: 25, scope: !5894)
!5906 = !DILocation(line: 4981, column: 17, scope: !5894)
!5907 = !DILocation(line: 4981, column: 3, scope: !5895)
!5908 = !DILocation(line: 4983, column: 24, scope: !5893)
!5909 = !DILocation(line: 4984, column: 7, scope: !5893)
!5910 = !DILocation(line: 4986, column: 18, scope: !5902)
!5911 = !DILocation(line: 4986, column: 12, scope: !5902)
!5912 = !DILocation(line: 4986, column: 38, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 4986, column: 7)
!5914 = !DILocation(line: 4986, column: 37, scope: !5913)
!5915 = !DILocation(line: 4986, column: 7, scope: !5902)
!5916 = !DILocation(line: 4987, column: 19, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 4987, column: 6)
!5918 = !DILocation(line: 4987, column: 6, scope: !5917)
!5919 = !DILocation(line: 4987, column: 6, scope: !5913)
!5920 = !DILocation(line: 4988, column: 4, scope: !5917)
!5921 = !DILocation(line: 4986, column: 55, scope: !5913)
!5922 = !DILocation(line: 4986, column: 7, scope: !5913)
!5923 = distinct !{!5923, !5915, !5924}
!5924 = !DILocation(line: 4988, column: 4, scope: !5902)
!5925 = !DILocation(line: 4989, column: 5, scope: !5894)
!5926 = !DILocation(line: 4981, column: 37, scope: !5894)
!5927 = !DILocation(line: 4981, column: 3, scope: !5894)
!5928 = distinct !{!5928, !5907, !5929}
!5929 = !DILocation(line: 4989, column: 5, scope: !5895)
!5930 = !DILocation(line: 4991, column: 9, scope: !5886)
!5931 = !DILocation(line: 4991, column: 3, scope: !5886)
!5932 = !DILocation(line: 4992, column: 1, scope: !5886)
!5933 = distinct !DISubprogram(name: "gsi_start_bb", scope: !402, file: !402, line: 4418, type: !5934, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!4762, !1282}
!5936 = !{!5937, !5938, !5939}
!5937 = !DILocalVariable(name: "bb", arg: 1, scope: !5933, file: !402, line: 4418, type: !1282)
!5938 = !DILocalVariable(name: "i", scope: !5933, file: !402, line: 4420, type: !4762)
!5939 = !DILocalVariable(name: "seq", scope: !5933, file: !402, line: 4421, type: !820)
!5940 = !DILocation(line: 0, scope: !5933)
!5941 = !DILocation(line: 4420, column: 24, scope: !5933)
!5942 = !DILocation(line: 4423, column: 9, scope: !5933)
!5943 = !DILocation(line: 4424, column: 11, scope: !5933)
!5944 = !DILocation(line: 4424, column: 5, scope: !5933)
!5945 = !DILocation(line: 4424, column: 9, scope: !5933)
!5946 = !DILocation(line: 4425, column: 5, scope: !5933)
!5947 = !DILocation(line: 4425, column: 9, scope: !5933)
!5948 = !DILocation(line: 4426, column: 5, scope: !5933)
!5949 = !DILocation(line: 4426, column: 8, scope: !5933)
!5950 = !DILocation(line: 4429, column: 1, scope: !5933)
!5951 = distinct !DISubprogram(name: "gsi_end_p", scope: !402, file: !402, line: 4467, type: !5952, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5954)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!498, !4762}
!5954 = !{!5955}
!5955 = !DILocalVariable(name: "i", arg: 1, scope: !5951, file: !402, line: 4467, type: !4762)
!5956 = !DILocation(line: 4467, column: 33, scope: !5951)
!5957 = !DILocation(line: 4469, column: 12, scope: !5951)
!5958 = !DILocation(line: 4469, column: 16, scope: !5951)
!5959 = !DILocation(line: 4469, column: 10, scope: !5951)
!5960 = !DILocation(line: 4469, column: 3, scope: !5951)
!5961 = distinct !DISubprogram(name: "gimple_vdef", scope: !402, file: !402, line: 1375, type: !4507, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5962)
!5962 = !{!5963}
!5963 = !DILocalVariable(name: "g", arg: 1, scope: !5961, file: !402, line: 1375, type: !2052)
!5964 = !DILocation(line: 0, scope: !5961)
!5965 = !DILocation(line: 1377, column: 8, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !402, line: 1377, column: 7)
!5967 = !DILocation(line: 1377, column: 7, scope: !5961)
!5968 = !DILocation(line: 1379, column: 23, scope: !5961)
!5969 = !DILocation(line: 1379, column: 3, scope: !5961)
!5970 = !DILocation(line: 1380, column: 1, scope: !5961)
!5971 = distinct !DISubprogram(name: "gsi_stmt", scope: !402, file: !402, line: 4501, type: !5972, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5974)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!830, !4762}
!5974 = !{!5975}
!5975 = !DILocalVariable(name: "i", arg: 1, scope: !5971, file: !402, line: 4501, type: !4762)
!5976 = !DILocation(line: 4501, column: 32, scope: !5971)
!5977 = !DILocation(line: 4503, column: 12, scope: !5971)
!5978 = !DILocation(line: 4503, column: 17, scope: !5971)
!5979 = !DILocation(line: 4503, column: 3, scope: !5971)
!5980 = distinct !DISubprogram(name: "VEC_gimple_heap_safe_push", scope: !402, file: !402, line: 34, type: !5981, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5983)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{!5572, !5721, !830}
!5983 = !{!5984, !5985}
!5984 = !DILocalVariable(name: "vec_", arg: 1, scope: !5980, file: !402, line: 34, type: !5721)
!5985 = !DILocalVariable(name: "obj_", arg: 2, scope: !5980, file: !402, line: 34, type: !830)
!5986 = !DILocation(line: 0, scope: !5980)
!5987 = !DILocation(line: 34, column: 1, scope: !5980)
!5988 = distinct !DISubprogram(name: "gsi_next", scope: !402, file: !402, line: 4485, type: !5989, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5992)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !5991}
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 64)
!5992 = !{!5993}
!5993 = !DILocalVariable(name: "i", arg: 1, scope: !5988, file: !402, line: 4485, type: !5991)
!5994 = !DILocation(line: 0, scope: !5988)
!5995 = !DILocation(line: 4487, column: 15, scope: !5988)
!5996 = !DILocation(line: 4487, column: 20, scope: !5988)
!5997 = !DILocation(line: 4487, column: 10, scope: !5988)
!5998 = !DILocation(line: 4488, column: 1, scope: !5988)
!5999 = distinct !DISubprogram(name: "rdg_defs_used_in_other_loops_p", scope: !3, file: !3, line: 5032, type: !6000, scopeLine: 5033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6002)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!498, !5294, !499}
!6002 = !{!6003, !6004, !6005, !6006, !6007, !6008, !6016, !6017}
!6003 = !DILocalVariable(name: "rdg", arg: 1, scope: !5999, file: !3, line: 5032, type: !5294)
!6004 = !DILocalVariable(name: "v", arg: 2, scope: !5999, file: !3, line: 5032, type: !499)
!6005 = !DILocalVariable(name: "stmt", scope: !5999, file: !3, line: 5034, type: !830)
!6006 = !DILocalVariable(name: "loop", scope: !5999, file: !3, line: 5035, type: !1045)
!6007 = !DILocalVariable(name: "imm_use_p", scope: !5999, file: !3, line: 5036, type: !2049)
!6008 = !DILocalVariable(name: "iterator", scope: !5999, file: !3, line: 5037, type: !6009)
!6009 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1222, line: 249, baseType: !6010)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1222, line: 238, size: 448, elements: !6011)
!6011 = !{!6012, !6013, !6014, !6015}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !6010, file: !1222, line: 241, baseType: !2050, size: 64)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !6010, file: !1222, line: 243, baseType: !2050, size: 64, offset: 64)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !6010, file: !1222, line: 245, baseType: !2051, size: 256, offset: 128)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !6010, file: !1222, line: 248, baseType: !2050, size: 64, offset: 384)
!6016 = !DILocalVariable(name: "it", scope: !5999, file: !3, line: 5038, type: !5810)
!6017 = !DILocalVariable(name: "def_p", scope: !5999, file: !3, line: 5039, type: !2048)
!6018 = !DILocation(line: 0, scope: !5999)
!6019 = !DILocation(line: 5034, column: 17, scope: !5999)
!6020 = !DILocation(line: 5035, column: 23, scope: !5999)
!6021 = !DILocation(line: 5037, column: 3, scope: !5999)
!6022 = !DILocation(line: 5038, column: 3, scope: !5999)
!6023 = !DILocation(line: 5041, column: 8, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 5041, column: 7)
!6025 = !DILocation(line: 5041, column: 7, scope: !5999)
!6026 = !DILocation(line: 5044, column: 3, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 5044, column: 3)
!6028 = !DILocation(line: 0, scope: !6027)
!6029 = !DILocation(line: 5044, column: 3, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 5044, column: 3)
!6031 = !DILocation(line: 5046, column: 7, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 5046, column: 7)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 5045, column: 5)
!6034 = !DILocation(line: 0, scope: !6032)
!6035 = !DILocation(line: 5046, column: 7, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 5046, column: 7)
!6037 = !DILocation(line: 5048, column: 30, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 5048, column: 8)
!6039 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 5047, column: 2)
!6040 = !DILocation(line: 5048, column: 8, scope: !6038)
!6041 = !DILocation(line: 5048, column: 52, scope: !6038)
!6042 = !DILocation(line: 5048, column: 8, scope: !6039)
!6043 = distinct !{!6043, !6031, !6044}
!6044 = !DILocation(line: 5050, column: 2, scope: !6032)
!6045 = distinct !{!6045, !6026, !6046}
!6046 = !DILocation(line: 5051, column: 5, scope: !6027)
!6047 = !DILocation(line: 5054, column: 1, scope: !5999)
!6048 = distinct !DISubprogram(name: "op_iter_init_phidef", scope: !3543, file: !3543, line: 939, type: !6049, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6052)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!2048, !6051, !830, !499}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!6052 = !{!6053, !6054, !6055, !6056, !6057}
!6053 = !DILocalVariable(name: "ptr", arg: 1, scope: !6048, file: !3543, line: 939, type: !6051)
!6054 = !DILocalVariable(name: "phi", arg: 2, scope: !6048, file: !3543, line: 939, type: !830)
!6055 = !DILocalVariable(name: "flags", arg: 3, scope: !6048, file: !3543, line: 939, type: !499)
!6056 = !DILocalVariable(name: "phi_def", scope: !6048, file: !3543, line: 941, type: !506)
!6057 = !DILocalVariable(name: "comp", scope: !6048, file: !3543, line: 942, type: !499)
!6058 = !DILocation(line: 0, scope: !6048)
!6059 = !DILocation(line: 941, column: 18, scope: !6048)
!6060 = !DILocation(line: 944, column: 3, scope: !6048)
!6061 = !DILocation(line: 945, column: 8, scope: !6048)
!6062 = !DILocation(line: 945, column: 13, scope: !6048)
!6063 = !DILocation(line: 949, column: 11, scope: !6048)
!6064 = !DILocation(line: 953, column: 7, scope: !6048)
!6065 = !DILocation(line: 955, column: 17, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3543, line: 954, column: 5)
!6067 = distinct !DILexicalBlock(scope: !6048, file: !3543, line: 953, column: 7)
!6068 = !DILocation(line: 956, column: 7, scope: !6066)
!6069 = !DILocation(line: 959, column: 8, scope: !6048)
!6070 = !DILocation(line: 959, column: 18, scope: !6048)
!6071 = !DILocation(line: 963, column: 10, scope: !6048)
!6072 = !DILocation(line: 963, column: 3, scope: !6048)
!6073 = !DILocation(line: 964, column: 1, scope: !6048)
!6074 = distinct !DISubprogram(name: "op_iter_init_def", scope: !3543, file: !3543, line: 780, type: !6049, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6075)
!6075 = !{!6076, !6077, !6078}
!6076 = !DILocalVariable(name: "ptr", arg: 1, scope: !6074, file: !3543, line: 780, type: !6051)
!6077 = !DILocalVariable(name: "stmt", arg: 2, scope: !6074, file: !3543, line: 780, type: !830)
!6078 = !DILocalVariable(name: "flags", arg: 3, scope: !6074, file: !3543, line: 780, type: !499)
!6079 = !DILocation(line: 0, scope: !6074)
!6080 = !DILocation(line: 784, column: 3, scope: !6074)
!6081 = !DILocation(line: 785, column: 8, scope: !6074)
!6082 = !DILocation(line: 785, column: 18, scope: !6074)
!6083 = !DILocation(line: 786, column: 10, scope: !6074)
!6084 = !DILocation(line: 786, column: 3, scope: !6074)
!6085 = distinct !DISubprogram(name: "op_iter_done", scope: !3543, file: !3543, line: 652, type: !6086, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6090)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!498, !6088}
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 64)
!6089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5810)
!6090 = !{!6091}
!6091 = !DILocalVariable(name: "ptr", arg: 1, scope: !6085, file: !3543, line: 652, type: !6088)
!6092 = !DILocation(line: 0, scope: !6085)
!6093 = !DILocation(line: 654, column: 15, scope: !6085)
!6094 = !DILocation(line: 654, column: 3, scope: !6085)
!6095 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !3543, file: !3543, line: 292, type: !6096, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6099)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{!2049, !6098, !506}
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6009, size: 64)
!6099 = !{!6100, !6101}
!6100 = !DILocalVariable(name: "imm", arg: 1, scope: !6095, file: !3543, line: 292, type: !6098)
!6101 = !DILocalVariable(name: "var", arg: 2, scope: !6095, file: !3543, line: 292, type: !506)
!6102 = !DILocation(line: 0, scope: !6095)
!6103 = !DILocation(line: 294, column: 18, scope: !6095)
!6104 = !DILocation(line: 294, column: 8, scope: !6095)
!6105 = !DILocation(line: 294, column: 14, scope: !6095)
!6106 = !DILocation(line: 295, column: 30, scope: !6095)
!6107 = !DILocation(line: 295, column: 16, scope: !6095)
!6108 = !DILocation(line: 299, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6095, file: !3543, line: 299, column: 7)
!6110 = !DILocation(line: 299, column: 7, scope: !6095)
!6111 = !DILocation(line: 301, column: 15, scope: !6095)
!6112 = !DILocation(line: 301, column: 3, scope: !6095)
!6113 = !DILocation(line: 302, column: 1, scope: !6095)
!6114 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !3543, file: !3543, line: 434, type: !6115, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6117)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!506, !2048}
!6117 = !{!6118}
!6118 = !DILocalVariable(name: "def", arg: 1, scope: !6114, file: !3543, line: 434, type: !2048)
!6119 = !DILocation(line: 0, scope: !6114)
!6120 = !DILocation(line: 436, column: 10, scope: !6114)
!6121 = !DILocation(line: 436, column: 3, scope: !6114)
!6122 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !3543, file: !3543, line: 285, type: !6123, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6127)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{!498, !6125}
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6009)
!6127 = !{!6128}
!6128 = !DILocalVariable(name: "imm", arg: 1, scope: !6122, file: !3543, line: 285, type: !6125)
!6129 = !DILocation(line: 0, scope: !6122)
!6130 = !DILocation(line: 287, column: 16, scope: !6122)
!6131 = !DILocation(line: 287, column: 32, scope: !6122)
!6132 = !DILocation(line: 287, column: 24, scope: !6122)
!6133 = !DILocation(line: 287, column: 10, scope: !6122)
!6134 = !DILocation(line: 287, column: 3, scope: !6122)
!6135 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !3543, file: !3543, line: 306, type: !6136, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6138)
!6136 = !DISubroutineType(types: !6137)
!6137 = !{!2049, !6098}
!6138 = !{!6139, !6140}
!6139 = !DILocalVariable(name: "imm", arg: 1, scope: !6135, file: !3543, line: 306, type: !6098)
!6140 = !DILocalVariable(name: "old", scope: !6135, file: !3543, line: 308, type: !2049)
!6141 = !DILocation(line: 0, scope: !6135)
!6142 = !DILocation(line: 308, column: 28, scope: !6135)
!6143 = !DILocation(line: 319, column: 23, scope: !6135)
!6144 = !DILocation(line: 319, column: 16, scope: !6135)
!6145 = !DILocation(line: 320, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6135, file: !3543, line: 320, column: 7)
!6147 = !DILocation(line: 320, column: 7, scope: !6135)
!6148 = !DILocation(line: 322, column: 15, scope: !6135)
!6149 = !DILocation(line: 322, column: 3, scope: !6135)
!6150 = !DILocation(line: 323, column: 1, scope: !6135)
!6151 = distinct !DISubprogram(name: "op_iter_next_def", scope: !3543, file: !3543, line: 681, type: !6152, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!2048, !6051}
!6154 = !{!6155, !6156}
!6155 = !DILocalVariable(name: "ptr", arg: 1, scope: !6151, file: !3543, line: 681, type: !6051)
!6156 = !DILocalVariable(name: "def_p", scope: !6151, file: !3543, line: 683, type: !2048)
!6157 = !DILocation(line: 0, scope: !6151)
!6158 = !DILocation(line: 687, column: 12, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6151, file: !3543, line: 687, column: 7)
!6160 = !DILocation(line: 687, column: 7, scope: !6159)
!6161 = !DILocation(line: 687, column: 7, scope: !6151)
!6162 = !DILocation(line: 689, column: 15, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6159, file: !3543, line: 688, column: 5)
!6164 = !DILocation(line: 690, column: 30, scope: !6163)
!6165 = !DILocation(line: 690, column: 17, scope: !6163)
!6166 = !DILocation(line: 691, column: 7, scope: !6163)
!6167 = !DILocation(line: 693, column: 8, scope: !6151)
!6168 = !DILocation(line: 693, column: 13, scope: !6151)
!6169 = !DILocation(line: 694, column: 3, scope: !6151)
!6170 = !DILocation(line: 695, column: 1, scope: !6151)
!6171 = distinct !DISubprogram(name: "have_similar_memory_accesses", scope: !3, file: !3, line: 5062, type: !6172, scopeLine: 5063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6174)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!498, !830, !830}
!6174 = !{!6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6188}
!6175 = !DILocalVariable(name: "s1", arg: 1, scope: !6171, file: !3, line: 5062, type: !830)
!6176 = !DILocalVariable(name: "s2", arg: 2, scope: !6171, file: !3, line: 5062, type: !830)
!6177 = !DILocalVariable(name: "res", scope: !6171, file: !3, line: 5064, type: !498)
!6178 = !DILocalVariable(name: "i", scope: !6171, file: !3, line: 5065, type: !7)
!6179 = !DILocalVariable(name: "j", scope: !6171, file: !3, line: 5065, type: !7)
!6180 = !DILocalVariable(name: "refs1", scope: !6171, file: !3, line: 5066, type: !1993)
!6181 = !DILocalVariable(name: "refs2", scope: !6171, file: !3, line: 5066, type: !1993)
!6182 = !DILocalVariable(name: "ref1", scope: !6171, file: !3, line: 5067, type: !4398)
!6183 = !DILocalVariable(name: "ref2", scope: !6171, file: !3, line: 5067, type: !4398)
!6184 = !DILocalVariable(name: "base1", scope: !6185, file: !3, line: 5074, type: !506)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 5073, column: 5)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 5072, column: 3)
!6187 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 5072, column: 3)
!6188 = !DILabel(scope: !6171, name: "end", file: !3, line: 5085)
!6189 = !DILocation(line: 0, scope: !6171)
!6190 = !DILocation(line: 5066, column: 3, scope: !6171)
!6191 = !DILocation(line: 5067, column: 3, scope: !6171)
!6192 = !DILocation(line: 5069, column: 3, scope: !6171)
!6193 = !DILocation(line: 5070, column: 3, scope: !6171)
!6194 = !DILocation(line: 5072, column: 8, scope: !6187)
!6195 = !DILocation(line: 0, scope: !6187)
!6196 = !DILocation(line: 5072, column: 15, scope: !6186)
!6197 = !DILocation(line: 5072, column: 3, scope: !6187)
!6198 = !DILocation(line: 5074, column: 42, scope: !6185)
!6199 = !DILocation(line: 5074, column: 20, scope: !6185)
!6200 = !DILocation(line: 0, scope: !6185)
!6201 = !DILocation(line: 5076, column: 11, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 5076, column: 11)
!6203 = !DILocation(line: 5076, column: 11, scope: !6185)
!6204 = !DILocation(line: 5077, column: 2, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 5077, column: 2)
!6206 = !DILocation(line: 0, scope: !6205)
!6207 = !DILocation(line: 5077, column: 14, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 5077, column: 2)
!6209 = !DILocation(line: 5078, column: 39, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 5078, column: 8)
!6211 = !DILocation(line: 5078, column: 17, scope: !6210)
!6212 = !DILocation(line: 5078, column: 14, scope: !6210)
!6213 = !DILocation(line: 5078, column: 8, scope: !6208)
!6214 = !DILocation(line: 5077, column: 59, scope: !6208)
!6215 = !DILocation(line: 5077, column: 2, scope: !6208)
!6216 = distinct !{!6216, !6204, !6217}
!6217 = !DILocation(line: 5082, column: 6, scope: !6205)
!6218 = !DILocation(line: 5072, column: 60, scope: !6186)
!6219 = !DILocation(line: 5072, column: 3, scope: !6186)
!6220 = distinct !{!6220, !6197, !6221}
!6221 = !DILocation(line: 5083, column: 5, scope: !6187)
!6222 = !DILocation(line: 5085, column: 2, scope: !6171)
!6223 = !DILocation(line: 5086, column: 3, scope: !6171)
!6224 = !DILocation(line: 5087, column: 3, scope: !6171)
!6225 = !DILocation(line: 5089, column: 1, scope: !6171)
!6226 = distinct !DISubprogram(name: "ref_base_address", scope: !3, file: !3, line: 4998, type: !6227, scopeLine: 4999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6229)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!506, !830, !4398}
!6229 = !{!6230, !6231, !6232, !6233, !6234, !6235}
!6230 = !DILocalVariable(name: "stmt", arg: 1, scope: !6226, file: !3, line: 4998, type: !830)
!6231 = !DILocalVariable(name: "ref", arg: 2, scope: !6226, file: !3, line: 4998, type: !4398)
!6232 = !DILocalVariable(name: "base", scope: !6226, file: !3, line: 5000, type: !506)
!6233 = !DILocalVariable(name: "base_address", scope: !6226, file: !3, line: 5001, type: !506)
!6234 = !DILocalVariable(name: "dr", scope: !6226, file: !3, line: 5002, type: !1860)
!6235 = !DILabel(scope: !6226, name: "end", file: !3, line: 5023)
!6236 = !DILocation(line: 0, scope: !6226)
!6237 = !DILocation(line: 5002, column: 31, scope: !6226)
!6238 = !DILocation(line: 5004, column: 3, scope: !6226)
!6239 = !DILocation(line: 5004, column: 16, scope: !6226)
!6240 = !DILocation(line: 5005, column: 23, scope: !6226)
!6241 = !DILocation(line: 5005, column: 17, scope: !6226)
!6242 = !DILocation(line: 5005, column: 3, scope: !6226)
!6243 = !DILocation(line: 5005, column: 15, scope: !6226)
!6244 = !DILocation(line: 5006, column: 3, scope: !6226)
!6245 = !DILocation(line: 5007, column: 18, scope: !6226)
!6246 = !DILocation(line: 5009, column: 8, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 5009, column: 7)
!6248 = !DILocation(line: 5009, column: 7, scope: !6226)
!6249 = !DILocation(line: 5012, column: 11, scope: !6226)
!6250 = !DILocation(line: 5012, column: 3, scope: !6226)
!6251 = !DILocation(line: 5015, column: 14, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 5013, column: 5)
!6253 = !DILocation(line: 5016, column: 7, scope: !6252)
!6254 = !DILocation(line: 5023, column: 2, scope: !6226)
!6255 = !DILocation(line: 5024, column: 3, scope: !6226)
!6256 = !DILocation(line: 5025, column: 3, scope: !6226)
!6257 = distinct !DISubprogram(name: "remove_similar_memory_refs", scope: !3, file: !3, line: 5127, type: !5719, scopeLine: 5128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6258)
!6258 = !{!6259, !6260, !6261, !6262, !6263}
!6259 = !DILocalVariable(name: "stmts", arg: 1, scope: !6257, file: !3, line: 5127, type: !5721)
!6260 = !DILocalVariable(name: "i", scope: !6257, file: !3, line: 5129, type: !7)
!6261 = !DILocalVariable(name: "stmt", scope: !6257, file: !3, line: 5130, type: !830)
!6262 = !DILocalVariable(name: "seen", scope: !6257, file: !3, line: 5131, type: !1314)
!6263 = !DILocalVariable(name: "slot", scope: !6264, file: !3, line: 5136, type: !1338)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 5135, column: 5)
!6265 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 5134, column: 3)
!6266 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 5134, column: 3)
!6267 = !DILocation(line: 0, scope: !6257)
!6268 = !DILocation(line: 5130, column: 3, scope: !6257)
!6269 = !DILocation(line: 5131, column: 30, scope: !6257)
!6270 = !DILocation(line: 5131, column: 17, scope: !6257)
!6271 = !DILocation(line: 0, scope: !6264)
!6272 = !DILocation(line: 0, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 5143, column: 2)
!6274 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 5140, column: 11)
!6275 = !DILocation(line: 5134, column: 8, scope: !6266)
!6276 = !DILocation(line: 5134, column: 10, scope: !6266)
!6277 = !DILocation(line: 5134, column: 15, scope: !6265)
!6278 = !DILocation(line: 5134, column: 3, scope: !6266)
!6279 = !DILocation(line: 5138, column: 36, scope: !6264)
!6280 = !DILocation(line: 5138, column: 14, scope: !6264)
!6281 = !DILocation(line: 5140, column: 11, scope: !6274)
!6282 = !DILocation(line: 5140, column: 11, scope: !6264)
!6283 = !DILocation(line: 5141, column: 2, scope: !6274)
!6284 = !DILocation(line: 5144, column: 21, scope: !6273)
!6285 = !DILocation(line: 5144, column: 10, scope: !6273)
!6286 = !DILocation(line: 5145, column: 5, scope: !6273)
!6287 = !DILocation(line: 0, scope: !6266)
!6288 = !DILocation(line: 5134, column: 3, scope: !6265)
!6289 = distinct !{!6289, !6278, !6290}
!6290 = !DILocation(line: 5147, column: 5, scope: !6266)
!6291 = !DILocation(line: 5149, column: 3, scope: !6257)
!6292 = !DILocation(line: 5150, column: 1, scope: !6257)
!6293 = distinct !DISubprogram(name: "ref_base_address_1", scope: !3, file: !3, line: 5103, type: !1322, scopeLine: 5104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6294)
!6294 = !{!6295, !6296, !6297, !6298, !6299, !6300}
!6295 = !DILocalVariable(name: "s", arg: 1, scope: !6293, file: !3, line: 5103, type: !1325)
!6296 = !DILocalVariable(name: "stmt", scope: !6293, file: !3, line: 5105, type: !830)
!6297 = !DILocalVariable(name: "i", scope: !6293, file: !3, line: 5106, type: !7)
!6298 = !DILocalVariable(name: "refs", scope: !6293, file: !3, line: 5107, type: !1993)
!6299 = !DILocalVariable(name: "ref", scope: !6293, file: !3, line: 5108, type: !4398)
!6300 = !DILocalVariable(name: "res", scope: !6293, file: !3, line: 5109, type: !1324)
!6301 = !DILocation(line: 0, scope: !6293)
!6302 = !DILocation(line: 5105, column: 17, scope: !6293)
!6303 = !DILocation(line: 5107, column: 3, scope: !6293)
!6304 = !DILocation(line: 5108, column: 3, scope: !6293)
!6305 = !DILocation(line: 5111, column: 3, scope: !6293)
!6306 = !DILocation(line: 5113, column: 8, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 5113, column: 3)
!6308 = !DILocation(line: 0, scope: !6307)
!6309 = !DILocation(line: 5113, column: 15, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 5113, column: 3)
!6311 = !DILocation(line: 5113, column: 3, scope: !6307)
!6312 = !DILocation(line: 5114, column: 10, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 5114, column: 9)
!6314 = !DILocation(line: 5114, column: 15, scope: !6313)
!6315 = !DILocation(line: 5114, column: 9, scope: !6310)
!6316 = !DILocation(line: 5116, column: 8, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 5115, column: 7)
!6318 = !DILocation(line: 5116, column: 27, scope: !6317)
!6319 = !DILocation(line: 5117, column: 2, scope: !6317)
!6320 = !DILocation(line: 5113, column: 58, scope: !6310)
!6321 = !DILocation(line: 5113, column: 3, scope: !6310)
!6322 = distinct !{!6322, !6311, !6323}
!6323 = !DILocation(line: 5118, column: 7, scope: !6307)
!6324 = !DILocation(line: 5120, column: 3, scope: !6293)
!6325 = !DILocation(line: 5122, column: 1, scope: !6293)
!6326 = !DILocation(line: 5121, column: 3, scope: !6293)
!6327 = distinct !DISubprogram(name: "have_similar_memory_accesses_1", scope: !3, file: !3, line: 5094, type: !1330, scopeLine: 5095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6328)
!6328 = !{!6329, !6330}
!6329 = !DILocalVariable(name: "s1", arg: 1, scope: !6327, file: !3, line: 5094, type: !1325)
!6330 = !DILocalVariable(name: "s2", arg: 2, scope: !6327, file: !3, line: 5094, type: !1325)
!6331 = !DILocation(line: 0, scope: !6327)
!6332 = !DILocation(line: 5096, column: 40, scope: !6327)
!6333 = !DILocation(line: 5097, column: 12, scope: !6327)
!6334 = !DILocation(line: 5096, column: 10, scope: !6327)
!6335 = !DILocation(line: 5096, column: 3, scope: !6327)
!6336 = distinct !DISubprogram(name: "VEC_gimple_base_ordered_remove", scope: !402, file: !402, line: 33, type: !6337, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6340)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!830, !6339, !7}
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!6340 = !{!6341, !6342, !6343, !6344}
!6341 = !DILocalVariable(name: "vec_", arg: 1, scope: !6336, file: !402, line: 33, type: !6339)
!6342 = !DILocalVariable(name: "ix_", arg: 2, scope: !6336, file: !402, line: 33, type: !7)
!6343 = !DILocalVariable(name: "slot_", scope: !6336, file: !402, line: 33, type: !5572)
!6344 = !DILocalVariable(name: "obj_", scope: !6336, file: !402, line: 33, type: !830)
!6345 = !DILocation(line: 0, scope: !6336)
!6346 = !DILocation(line: 33, column: 1, scope: !6336)
!6347 = distinct !DISubprogram(name: "access_matrix_get_index_for_parameter", scope: !3, file: !3, line: 5156, type: !6348, scopeLine: 5158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6350)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{!499, !506, !1891}
!6350 = !{!6351, !6352, !6353, !6354, !6355}
!6351 = !DILocalVariable(name: "parameter", arg: 1, scope: !6347, file: !3, line: 5156, type: !506)
!6352 = !DILocalVariable(name: "access_matrix", arg: 2, scope: !6347, file: !3, line: 5157, type: !1891)
!6353 = !DILocalVariable(name: "i", scope: !6347, file: !3, line: 5159, type: !499)
!6354 = !DILocalVariable(name: "lambda_parameters", scope: !6347, file: !3, line: 5160, type: !1880)
!6355 = !DILocalVariable(name: "lambda_parameter", scope: !6347, file: !3, line: 5161, type: !506)
!6356 = !DILocation(line: 0, scope: !6347)
!6357 = !DILocation(line: 5160, column: 40, scope: !6347)
!6358 = !DILocation(line: 5161, column: 3, scope: !6347)
!6359 = !DILocation(line: 0, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 5163, column: 3)
!6361 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 5163, column: 3)
!6362 = !DILocation(line: 5163, column: 8, scope: !6361)
!6363 = !DILocation(line: 0, scope: !6361)
!6364 = !DILocation(line: 5163, column: 15, scope: !6360)
!6365 = !DILocation(line: 5163, column: 3, scope: !6361)
!6366 = !DILocation(line: 5164, column: 9, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 5164, column: 9)
!6368 = !DILocation(line: 5164, column: 26, scope: !6367)
!6369 = !DILocation(line: 5164, column: 9, scope: !6360)
!6370 = !DILocation(line: 5165, column: 18, scope: !6367)
!6371 = !DILocation(line: 5165, column: 16, scope: !6367)
!6372 = !DILocation(line: 5165, column: 7, scope: !6367)
!6373 = !DILocation(line: 5163, column: 76, scope: !6360)
!6374 = !DILocation(line: 5163, column: 3, scope: !6360)
!6375 = distinct !{!6375, !6365, !6376}
!6376 = !DILocation(line: 5165, column: 18, scope: !6361)
!6377 = !DILocation(line: 5168, column: 1, scope: !6347)
!6378 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !164, file: !164, line: 182, type: !6379, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6381)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{!499, !2804, !7, !864}
!6381 = !{!6382, !6383, !6384}
!6382 = !DILocalVariable(name: "vec_", arg: 1, scope: !6378, file: !164, line: 182, type: !2804)
!6383 = !DILocalVariable(name: "ix_", arg: 2, scope: !6378, file: !164, line: 182, type: !7)
!6384 = !DILocalVariable(name: "ptr", arg: 3, scope: !6378, file: !164, line: 182, type: !864)
!6385 = !DILocation(line: 0, scope: !6378)
!6386 = !DILocation(line: 182, column: 1, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6378, file: !164, line: 182, column: 1)
!6388 = !DILocation(line: 182, column: 1, scope: !6378)
!6389 = !DILocation(line: 182, column: 1, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !164, line: 182, column: 1)
!6391 = !DILocation(line: 182, column: 1, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !164, line: 182, column: 1)
!6393 = !DILocation(line: 0, scope: !6387)
!6394 = distinct !DISubprogram(name: "dump_affine_function", scope: !3, file: !3, line: 224, type: !6395, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{null, !2108, !1963}
!6397 = !{!6398, !6399, !6400, !6401}
!6398 = !DILocalVariable(name: "outf", arg: 1, scope: !6394, file: !3, line: 224, type: !2108)
!6399 = !DILocalVariable(name: "fn", arg: 2, scope: !6394, file: !3, line: 224, type: !1963)
!6400 = !DILocalVariable(name: "i", scope: !6394, file: !3, line: 226, type: !7)
!6401 = !DILocalVariable(name: "coef", scope: !6394, file: !3, line: 227, type: !506)
!6402 = !DILocation(line: 0, scope: !6394)
!6403 = !DILocation(line: 227, column: 3, scope: !6394)
!6404 = !DILocation(line: 229, column: 29, scope: !6394)
!6405 = !DILocation(line: 229, column: 3, scope: !6394)
!6406 = !DILocation(line: 230, column: 8, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 230, column: 3)
!6408 = !DILocation(line: 0, scope: !6407)
!6409 = !DILocation(line: 230, column: 15, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 230, column: 3)
!6411 = !DILocation(line: 230, column: 3, scope: !6407)
!6412 = !DILocation(line: 232, column: 7, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 231, column: 5)
!6414 = !DILocation(line: 233, column: 33, scope: !6413)
!6415 = !DILocation(line: 233, column: 7, scope: !6413)
!6416 = !DILocation(line: 234, column: 7, scope: !6413)
!6417 = !DILocation(line: 230, column: 49, scope: !6410)
!6418 = !DILocation(line: 230, column: 3, scope: !6410)
!6419 = distinct !{!6419, !6411, !6420}
!6420 = !DILocation(line: 235, column: 5, scope: !6407)
!6421 = !DILocation(line: 236, column: 1, scope: !6394)
!6422 = distinct !DISubprogram(name: "handled_component_p", scope: !164, file: !164, line: 4551, type: !3242, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6423)
!6423 = !{!6424}
!6424 = !DILocalVariable(name: "t", arg: 1, scope: !6422, file: !164, line: 4551, type: !3244)
!6425 = !DILocation(line: 0, scope: !6422)
!6426 = !DILocation(line: 4553, column: 11, scope: !6422)
!6427 = !DILocation(line: 4553, column: 3, scope: !6422)
!6428 = !DILocation(line: 4565, column: 7, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !164, line: 4554, column: 5)
!6430 = !DILocation(line: 0, scope: !6429)
!6431 = !DILocation(line: 4567, column: 1, scope: !6422)
!6432 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !402, file: !402, line: 1727, type: !4507, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6433)
!6433 = !{!6434}
!6434 = !DILocalVariable(name: "gs", arg: 1, scope: !6432, file: !402, line: 1727, type: !2052)
!6435 = !DILocation(line: 0, scope: !6432)
!6436 = !DILocation(line: 1730, column: 10, scope: !6432)
!6437 = !DILocation(line: 1730, column: 3, scope: !6432)
!6438 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !402, file: !402, line: 1815, type: !6439, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6441)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{!196, !2052}
!6441 = !{!6442, !6443}
!6442 = !DILocalVariable(name: "gs", arg: 1, scope: !6438, file: !402, line: 1815, type: !2052)
!6443 = !DILocalVariable(name: "code", scope: !6438, file: !402, line: 1817, type: !196)
!6444 = !DILocation(line: 0, scope: !6438)
!6445 = !DILocation(line: 1820, column: 10, scope: !6438)
!6446 = !DILocation(line: 1821, column: 7, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6438, file: !402, line: 1821, column: 7)
!6448 = !DILocation(line: 1821, column: 35, scope: !6447)
!6449 = !DILocation(line: 1821, column: 7, scope: !6438)
!6450 = !DILocation(line: 1822, column: 12, scope: !6447)
!6451 = !DILocation(line: 1822, column: 5, scope: !6447)
!6452 = !DILocation(line: 1824, column: 3, scope: !6438)
!6453 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !402, file: !402, line: 1759, type: !4507, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6454)
!6454 = !{!6455}
!6455 = !DILocalVariable(name: "gs", arg: 1, scope: !6453, file: !402, line: 1759, type: !2052)
!6456 = !DILocation(line: 0, scope: !6453)
!6457 = !DILocation(line: 1763, column: 7, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !402, line: 1763, column: 7)
!6459 = !DILocation(line: 1763, column: 27, scope: !6458)
!6460 = !DILocation(line: 1763, column: 7, scope: !6453)
!6461 = !DILocation(line: 1764, column: 12, scope: !6458)
!6462 = !DILocation(line: 1764, column: 5, scope: !6458)
!6463 = !DILocation(line: 0, scope: !6458)
!6464 = !DILocation(line: 1767, column: 1, scope: !6453)
!6465 = distinct !DISubprogram(name: "gimple_op", scope: !402, file: !402, line: 1631, type: !6466, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6468)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{!506, !2052, !7}
!6468 = !{!6469, !6470}
!6469 = !DILocalVariable(name: "gs", arg: 1, scope: !6465, file: !402, line: 1631, type: !2052)
!6470 = !DILocalVariable(name: "i", arg: 2, scope: !6465, file: !402, line: 1631, type: !7)
!6471 = !DILocation(line: 0, scope: !6465)
!6472 = !DILocation(line: 1633, column: 7, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6465, file: !402, line: 1633, column: 7)
!6474 = !DILocation(line: 1633, column: 7, scope: !6465)
!6475 = !DILocation(line: 1638, column: 14, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !402, line: 1634, column: 5)
!6477 = !DILocation(line: 1638, column: 7, scope: !6476)
!6478 = !DILocation(line: 0, scope: !6473)
!6479 = !DILocation(line: 1642, column: 1, scope: !6465)
!6480 = distinct !DISubprogram(name: "gimple_has_ops", scope: !402, file: !402, line: 1274, type: !4498, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6481)
!6481 = !{!6482}
!6482 = !DILocalVariable(name: "g", arg: 1, scope: !6480, file: !402, line: 1274, type: !2052)
!6483 = !DILocation(line: 0, scope: !6480)
!6484 = !DILocation(line: 1276, column: 10, scope: !6480)
!6485 = !DILocation(line: 1276, column: 26, scope: !6480)
!6486 = !DILocation(line: 1276, column: 41, scope: !6480)
!6487 = !DILocation(line: 1276, column: 44, scope: !6480)
!6488 = !DILocation(line: 1276, column: 60, scope: !6480)
!6489 = !DILocation(line: 1276, column: 3, scope: !6480)
!6490 = distinct !DISubprogram(name: "gimple_ops", scope: !402, file: !402, line: 1614, type: !6491, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!864, !830}
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "gs", arg: 1, scope: !6490, file: !402, line: 1614, type: !830)
!6495 = !DILocalVariable(name: "off", scope: !6490, file: !402, line: 1616, type: !975)
!6496 = !DILocation(line: 0, scope: !6490)
!6497 = !DILocation(line: 1621, column: 28, scope: !6490)
!6498 = !DILocation(line: 1621, column: 9, scope: !6490)
!6499 = !DILocation(line: 1622, column: 3, scope: !6490)
!6500 = !DILocation(line: 1624, column: 20, scope: !6490)
!6501 = !DILocation(line: 1624, column: 32, scope: !6490)
!6502 = !DILocation(line: 1624, column: 10, scope: !6490)
!6503 = !DILocation(line: 1624, column: 3, scope: !6490)
!6504 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !402, file: !402, line: 1073, type: !6505, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6507)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!447, !830}
!6507 = !{!6508}
!6508 = !DILocalVariable(name: "gs", arg: 1, scope: !6504, file: !402, line: 1073, type: !830)
!6509 = !DILocation(line: 0, scope: !6504)
!6510 = !DILocation(line: 1075, column: 24, scope: !6504)
!6511 = !DILocation(line: 1075, column: 10, scope: !6504)
!6512 = !DILocation(line: 1075, column: 3, scope: !6504)
!6513 = distinct !DISubprogram(name: "gss_for_code", scope: !402, file: !402, line: 1061, type: !6514, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!447, !401}
!6516 = !{!6517}
!6517 = !DILocalVariable(name: "code", arg: 1, scope: !6513, file: !402, line: 1061, type: !401)
!6518 = !DILocation(line: 0, scope: !6513)
!6519 = !DILocation(line: 1066, column: 10, scope: !6513)
!6520 = !DILocation(line: 1066, column: 3, scope: !6513)
!6521 = distinct !DISubprogram(name: "gimple_expr_code", scope: !402, file: !402, line: 1438, type: !6439, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6522)
!6522 = !{!6523, !6524}
!6523 = !DILocalVariable(name: "stmt", arg: 1, scope: !6521, file: !402, line: 1438, type: !2052)
!6524 = !DILocalVariable(name: "code", scope: !6521, file: !402, line: 1440, type: !401)
!6525 = !DILocation(line: 0, scope: !6521)
!6526 = !DILocation(line: 1440, column: 27, scope: !6521)
!6527 = !DILocation(line: 1441, column: 29, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !402, line: 1441, column: 7)
!6529 = !DILocation(line: 1442, column: 42, scope: !6528)
!6530 = !DILocation(line: 1442, column: 5, scope: !6528)
!6531 = !DILocation(line: 1446, column: 5, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !402, line: 1443, column: 12)
!6533 = !DILocation(line: 1448, column: 5, scope: !6521)
!6534 = !DILocation(line: 1450, column: 1, scope: !6521)
!6535 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !402, file: !402, line: 1686, type: !6536, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!473, !196}
!6538 = !{!6539}
!6539 = !DILocalVariable(name: "code", arg: 1, scope: !6535, file: !402, line: 1686, type: !196)
!6540 = !DILocation(line: 0, scope: !6535)
!6541 = !DILocation(line: 1688, column: 34, scope: !6535)
!6542 = !DILocation(line: 1688, column: 10, scope: !6535)
!6543 = !DILocation(line: 1688, column: 3, scope: !6535)
!6544 = distinct !DISubprogram(name: "gimple_num_ops", scope: !402, file: !402, line: 1596, type: !4543, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6545)
!6545 = !{!6546}
!6546 = !DILocalVariable(name: "gs", arg: 1, scope: !6544, file: !402, line: 1596, type: !2052)
!6547 = !DILocation(line: 0, scope: !6544)
!6548 = !DILocation(line: 1598, column: 21, scope: !6544)
!6549 = !DILocation(line: 1598, column: 3, scope: !6544)
!6550 = distinct !DISubprogram(name: "gimple_bb", scope: !402, file: !402, line: 1112, type: !6551, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6553)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!794, !2052}
!6553 = !{!6554}
!6554 = !DILocalVariable(name: "g", arg: 1, scope: !6550, file: !402, line: 1112, type: !2052)
!6555 = !DILocation(line: 0, scope: !6550)
!6556 = !DILocation(line: 1114, column: 20, scope: !6550)
!6557 = !DILocation(line: 1114, column: 3, scope: !6550)
!6558 = distinct !DISubprogram(name: "block_before_loop", scope: !6559, file: !6559, line: 46, type: !6560, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6562)
!6559 = !DIFile(filename: "./tree-scalar-evolution.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!1282, !1072}
!6562 = !{!6563, !6564}
!6563 = !DILocalVariable(name: "loop", arg: 1, scope: !6558, file: !6559, line: 46, type: !1072)
!6564 = !DILocalVariable(name: "preheader", scope: !6558, file: !6559, line: 48, type: !810)
!6565 = !DILocation(line: 0, scope: !6558)
!6566 = !DILocation(line: 48, column: 20, scope: !6558)
!6567 = !DILocation(line: 49, column: 11, scope: !6558)
!6568 = !DILocation(line: 49, column: 34, scope: !6558)
!6569 = !DILocation(line: 49, column: 40, scope: !6558)
!6570 = !DILocation(line: 49, column: 3, scope: !6558)
!6571 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !164, file: !164, line: 184, type: !6572, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6574)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!864, !3588, !506}
!6574 = !{!6575, !6576}
!6575 = !DILocalVariable(name: "vec_", arg: 1, scope: !6571, file: !164, line: 184, type: !3588)
!6576 = !DILocalVariable(name: "obj_", arg: 2, scope: !6571, file: !164, line: 184, type: !506)
!6577 = !DILocation(line: 0, scope: !6571)
!6578 = !DILocation(line: 184, column: 1, scope: !6571)
!6579 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !164, file: !164, line: 184, type: !6580, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6582)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!499, !3588, !499}
!6582 = !{!6583, !6584, !6585}
!6583 = !DILocalVariable(name: "vec_", arg: 1, scope: !6579, file: !164, line: 184, type: !3588)
!6584 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6579, file: !164, line: 184, type: !499)
!6585 = !DILocalVariable(name: "extend", scope: !6579, file: !164, line: 184, type: !499)
!6586 = !DILocation(line: 0, scope: !6579)
!6587 = !DILocation(line: 184, column: 1, scope: !6579)
!6588 = !DILocation(line: 184, column: 1, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6579, file: !164, line: 184, column: 1)
!6590 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !164, file: !164, line: 182, type: !6591, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6594)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!864, !6593, !506}
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!6594 = !{!6595, !6596, !6597}
!6595 = !DILocalVariable(name: "vec_", arg: 1, scope: !6590, file: !164, line: 182, type: !6593)
!6596 = !DILocalVariable(name: "obj_", arg: 2, scope: !6590, file: !164, line: 182, type: !506)
!6597 = !DILocalVariable(name: "slot_", scope: !6590, file: !164, line: 182, type: !864)
!6598 = !DILocation(line: 0, scope: !6590)
!6599 = !DILocation(line: 182, column: 1, scope: !6590)
!6600 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !164, file: !164, line: 182, type: !6601, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6603)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{!499, !6593, !499}
!6603 = !{!6604, !6605}
!6604 = !DILocalVariable(name: "vec_", arg: 1, scope: !6600, file: !164, line: 182, type: !6593)
!6605 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6600, file: !164, line: 182, type: !499)
!6606 = !DILocation(line: 0, scope: !6600)
!6607 = !DILocation(line: 182, column: 1, scope: !6600)
!6608 = distinct !DISubprogram(name: "VEC_tree_base_pop", scope: !164, file: !164, line: 182, type: !6609, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6611)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{!506, !6593}
!6611 = !{!6612, !6613}
!6612 = !DILocalVariable(name: "vec_", arg: 1, scope: !6608, file: !164, line: 182, type: !6593)
!6613 = !DILocalVariable(name: "obj_", scope: !6608, file: !164, line: 182, type: !506)
!6614 = !DILocation(line: 0, scope: !6608)
!6615 = !DILocation(line: 182, column: 1, scope: !6608)
!6616 = distinct !DISubprogram(name: "VEC_subscript_p_heap_alloc", scope: !391, file: !391, line: 272, type: !6617, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6619)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{!1939, !499}
!6619 = !{!6620}
!6620 = !DILocalVariable(name: "alloc_", arg: 1, scope: !6616, file: !391, line: 272, type: !499)
!6621 = !DILocation(line: 0, scope: !6616)
!6622 = !DILocation(line: 272, column: 1, scope: !6616)
!6623 = distinct !DISubprogram(name: "object_address_invariant_in_loop_p", scope: !3, file: !3, line: 1170, type: !6624, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6628)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!498, !6626, !3244}
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 64)
!6627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!6628 = !{!6629, !6630}
!6629 = !DILocalVariable(name: "loop", arg: 1, scope: !6623, file: !3, line: 1170, type: !6626)
!6630 = !DILocalVariable(name: "obj", arg: 2, scope: !6623, file: !3, line: 1170, type: !3244)
!6631 = !DILocation(line: 0, scope: !6623)
!6632 = !DILocation(line: 0, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1186, column: 8)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1185, column: 2)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1184, column: 16)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 1174, column: 11)
!6637 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1173, column: 5)
!6638 = !DILocation(line: 1172, column: 3, scope: !6623)
!6639 = !DILocation(line: 1172, column: 10, scope: !6623)
!6640 = !DILocation(line: 1174, column: 27, scope: !6636)
!6641 = !DILocation(line: 1174, column: 11, scope: !6637)
!6642 = !DILocation(line: 1178, column: 48, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 1178, column: 8)
!6644 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1175, column: 2)
!6645 = !DILocation(line: 1179, column: 19, scope: !6643)
!6646 = !DILocation(line: 1178, column: 8, scope: !6643)
!6647 = !DILocation(line: 1180, column: 8, scope: !6643)
!6648 = !DILocation(line: 1180, column: 51, scope: !6643)
!6649 = !DILocation(line: 1181, column: 15, scope: !6643)
!6650 = !DILocation(line: 1180, column: 11, scope: !6643)
!6651 = !DILocation(line: 1178, column: 8, scope: !6644)
!6652 = !DILocation(line: 1184, column: 32, scope: !6635)
!6653 = !DILocation(line: 1184, column: 16, scope: !6636)
!6654 = !DILocation(line: 1186, column: 48, scope: !6633)
!6655 = !DILocation(line: 1187, column: 19, scope: !6633)
!6656 = !DILocation(line: 1186, column: 8, scope: !6633)
!6657 = !DILocation(line: 1186, column: 8, scope: !6634)
!6658 = !DILocation(line: 1190, column: 13, scope: !6637)
!6659 = distinct !{!6659, !6638, !6660}
!6660 = !DILocation(line: 1191, column: 5, scope: !6623)
!6661 = !DILocation(line: 1193, column: 8, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1193, column: 7)
!6663 = !DILocation(line: 1193, column: 7, scope: !6623)
!6664 = !DILocation(line: 1196, column: 51, scope: !6623)
!6665 = !DILocation(line: 1197, column: 15, scope: !6623)
!6666 = !DILocation(line: 1196, column: 11, scope: !6623)
!6667 = !DILocation(line: 1196, column: 10, scope: !6623)
!6668 = !DILocation(line: 1196, column: 3, scope: !6623)
!6669 = !DILocation(line: 1198, column: 1, scope: !6623)
!6670 = distinct !DISubprogram(name: "conflict_fn_not_known", scope: !3, file: !3, line: 1148, type: !6671, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6673)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!1956}
!6673 = !{!6674}
!6674 = !DILocalVariable(name: "fn", scope: !6670, file: !3, line: 1150, type: !1956)
!6675 = !DILocation(line: 1150, column: 27, scope: !6670)
!6676 = !DILocation(line: 0, scope: !6670)
!6677 = !DILocation(line: 1151, column: 7, scope: !6670)
!6678 = !DILocation(line: 1151, column: 9, scope: !6670)
!6679 = !DILocation(line: 1153, column: 3, scope: !6670)
!6680 = distinct !DISubprogram(name: "VEC_subscript_p_heap_safe_push", scope: !391, file: !391, line: 272, type: !6681, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6685)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!6683, !6684, !1951}
!6683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!6684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!6685 = !{!6686, !6687}
!6686 = !DILocalVariable(name: "vec_", arg: 1, scope: !6680, file: !391, line: 272, type: !6684)
!6687 = !DILocalVariable(name: "obj_", arg: 2, scope: !6680, file: !391, line: 272, type: !1951)
!6688 = !DILocation(line: 0, scope: !6680)
!6689 = !DILocation(line: 272, column: 1, scope: !6680)
!6690 = distinct !DISubprogram(name: "VEC_subscript_p_heap_reserve", scope: !391, file: !391, line: 272, type: !6691, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6693)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{!499, !6684, !499}
!6693 = !{!6694, !6695, !6696}
!6694 = !DILocalVariable(name: "vec_", arg: 1, scope: !6690, file: !391, line: 272, type: !6684)
!6695 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6690, file: !391, line: 272, type: !499)
!6696 = !DILocalVariable(name: "extend", scope: !6690, file: !391, line: 272, type: !499)
!6697 = !DILocation(line: 0, scope: !6690)
!6698 = !DILocation(line: 272, column: 1, scope: !6690)
!6699 = !DILocation(line: 272, column: 1, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6690, file: !391, line: 272, column: 1)
!6701 = distinct !DISubprogram(name: "VEC_subscript_p_base_quick_push", scope: !391, file: !391, line: 271, type: !6702, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6705)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{!6683, !6704, !1951}
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!6705 = !{!6706, !6707, !6708}
!6706 = !DILocalVariable(name: "vec_", arg: 1, scope: !6701, file: !391, line: 271, type: !6704)
!6707 = !DILocalVariable(name: "obj_", arg: 2, scope: !6701, file: !391, line: 271, type: !1951)
!6708 = !DILocalVariable(name: "slot_", scope: !6701, file: !391, line: 271, type: !6683)
!6709 = !DILocation(line: 0, scope: !6701)
!6710 = !DILocation(line: 271, column: 1, scope: !6701)
!6711 = distinct !DISubprogram(name: "VEC_subscript_p_base_space", scope: !391, file: !391, line: 271, type: !6712, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6714)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!499, !6704, !499}
!6714 = !{!6715, !6716}
!6715 = !DILocalVariable(name: "vec_", arg: 1, scope: !6711, file: !391, line: 271, type: !6704)
!6716 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6711, file: !391, line: 271, type: !499)
!6717 = !DILocation(line: 0, scope: !6711)
!6718 = !DILocation(line: 271, column: 1, scope: !6711)
!6719 = distinct !DISubprogram(name: "VEC_ddr_p_heap_reserve", scope: !391, file: !391, line: 333, type: !6720, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6722)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{!499, !4009, !499}
!6722 = !{!6723, !6724, !6725}
!6723 = !DILocalVariable(name: "vec_", arg: 1, scope: !6719, file: !391, line: 333, type: !4009)
!6724 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6719, file: !391, line: 333, type: !499)
!6725 = !DILocalVariable(name: "extend", scope: !6719, file: !391, line: 333, type: !499)
!6726 = !DILocation(line: 0, scope: !6719)
!6727 = !DILocation(line: 333, column: 1, scope: !6719)
!6728 = !DILocation(line: 333, column: 1, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6719, file: !391, line: 333, column: 1)
!6730 = distinct !DISubprogram(name: "VEC_ddr_p_base_quick_push", scope: !391, file: !391, line: 332, type: !6731, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6734)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!2650, !6733, !1931}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!6734 = !{!6735, !6736, !6737}
!6735 = !DILocalVariable(name: "vec_", arg: 1, scope: !6730, file: !391, line: 332, type: !6733)
!6736 = !DILocalVariable(name: "obj_", arg: 2, scope: !6730, file: !391, line: 332, type: !1931)
!6737 = !DILocalVariable(name: "slot_", scope: !6730, file: !391, line: 332, type: !2650)
!6738 = !DILocation(line: 0, scope: !6730)
!6739 = !DILocation(line: 332, column: 1, scope: !6730)
!6740 = distinct !DISubprogram(name: "VEC_ddr_p_base_space", scope: !391, file: !391, line: 332, type: !6741, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6743)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!499, !6733, !499}
!6743 = !{!6744, !6745}
!6744 = !DILocalVariable(name: "vec_", arg: 1, scope: !6740, file: !391, line: 332, type: !6733)
!6745 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6740, file: !391, line: 332, type: !499)
!6746 = !DILocation(line: 0, scope: !6740)
!6747 = !DILocation(line: 332, column: 1, scope: !6740)
!6748 = distinct !DISubprogram(name: "access_functions_are_affine_or_constant_p", scope: !3, file: !3, line: 3370, type: !6749, scopeLine: 3372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!498, !3767, !6626}
!6751 = !{!6752, !6753, !6754, !6755, !6756}
!6752 = !DILocalVariable(name: "a", arg: 1, scope: !6748, file: !3, line: 3370, type: !3767)
!6753 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !6748, file: !3, line: 3371, type: !6626)
!6754 = !DILocalVariable(name: "i", scope: !6748, file: !3, line: 3373, type: !7)
!6755 = !DILocalVariable(name: "fns", scope: !6748, file: !3, line: 3374, type: !1880)
!6756 = !DILocalVariable(name: "t", scope: !6748, file: !3, line: 3375, type: !506)
!6757 = !DILocation(line: 0, scope: !6748)
!6758 = !DILocation(line: 3374, column: 25, scope: !6748)
!6759 = !DILocation(line: 3375, column: 3, scope: !6748)
!6760 = !DILocation(line: 0, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3377, column: 3)
!6762 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3377, column: 3)
!6763 = !DILocation(line: 0, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 3378, column: 9)
!6765 = !DILocation(line: 3377, column: 8, scope: !6762)
!6766 = !DILocation(line: 0, scope: !6762)
!6767 = !DILocation(line: 3377, column: 15, scope: !6761)
!6768 = !DILocation(line: 3377, column: 3, scope: !6762)
!6769 = !DILocation(line: 3378, column: 45, scope: !6764)
!6770 = !DILocation(line: 3378, column: 59, scope: !6764)
!6771 = !DILocation(line: 3378, column: 10, scope: !6764)
!6772 = !DILocation(line: 3379, column: 2, scope: !6764)
!6773 = !DILocation(line: 3379, column: 51, scope: !6764)
!6774 = !DILocation(line: 3379, column: 65, scope: !6764)
!6775 = !DILocation(line: 3379, column: 6, scope: !6764)
!6776 = !DILocation(line: 3378, column: 9, scope: !6761)
!6777 = !DILocation(line: 3377, column: 47, scope: !6761)
!6778 = !DILocation(line: 3377, column: 3, scope: !6761)
!6779 = distinct !{!6779, !6768, !6780}
!6780 = !DILocation(line: 3380, column: 14, scope: !6762)
!6781 = !DILocation(line: 3383, column: 1, scope: !6748)
!6782 = distinct !DISubprogram(name: "subscript_dependence_tester", scope: !3, file: !3, line: 3348, type: !4206, scopeLine: 3350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6783)
!6783 = !{!6784, !6785}
!6784 = !DILocalVariable(name: "ddr", arg: 1, scope: !6782, file: !3, line: 3348, type: !1932)
!6785 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !6782, file: !3, line: 3349, type: !1045)
!6786 = !DILocation(line: 0, scope: !6782)
!6787 = !DILocation(line: 3352, column: 7, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 3352, column: 7)
!6789 = !DILocation(line: 3352, column: 17, scope: !6788)
!6790 = !DILocation(line: 3352, column: 21, scope: !6788)
!6791 = !DILocation(line: 3352, column: 32, scope: !6788)
!6792 = !DILocation(line: 3352, column: 7, scope: !6782)
!6793 = !DILocation(line: 3353, column: 5, scope: !6788)
!6794 = !DILocation(line: 3355, column: 43, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 3355, column: 7)
!6796 = !DILocation(line: 3355, column: 56, scope: !6795)
!6797 = !DILocation(line: 3355, column: 7, scope: !6795)
!6798 = !DILocation(line: 3355, column: 7, scope: !6782)
!6799 = !DILocation(line: 3356, column: 46, scope: !6795)
!6800 = !DILocation(line: 3356, column: 5, scope: !6795)
!6801 = !DILocation(line: 3358, column: 3, scope: !6782)
!6802 = !DILocation(line: 3359, column: 7, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 3359, column: 7)
!6804 = !DILocation(line: 3359, column: 7, scope: !6782)
!6805 = !DILocation(line: 3360, column: 5, scope: !6803)
!6806 = !DILocation(line: 3362, column: 7, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 3362, column: 7)
!6808 = !DILocation(line: 3362, column: 17, scope: !6807)
!6809 = !DILocation(line: 3362, column: 21, scope: !6807)
!6810 = !DILocation(line: 3362, column: 32, scope: !6807)
!6811 = !DILocation(line: 3362, column: 7, scope: !6782)
!6812 = !DILocation(line: 3363, column: 5, scope: !6807)
!6813 = !DILocation(line: 3364, column: 1, scope: !6782)
!6814 = distinct !DISubprogram(name: "init_omega_for_ddr", scope: !3, file: !3, line: 3766, type: !6815, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6817)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{!498, !1932, !497}
!6817 = !{!6818, !6819, !6820, !6846, !6847, !6850}
!6818 = !DILocalVariable(name: "ddr", arg: 1, scope: !6814, file: !3, line: 3766, type: !1932)
!6819 = !DILocalVariable(name: "maybe_dependent", arg: 2, scope: !6814, file: !3, line: 3767, type: !497)
!6820 = !DILocalVariable(name: "pb", scope: !6814, file: !3, line: 3769, type: !6821)
!6821 = !DIDerivedType(tag: DW_TAG_typedef, name: "omega_pb", file: !480, line: 115, baseType: !6822)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 64)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omega_pb_d", file: !480, line: 75, size: 576, elements: !6824)
!6824 = !{!6825, !6826, !6827, !6828, !6829, !6830, !6831, !6832, !6833, !6834, !6835, !6844, !6845}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "num_vars", scope: !6823, file: !480, line: 78, baseType: !499, size: 32)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "safe_vars", scope: !6823, file: !480, line: 85, baseType: !499, size: 32, offset: 32)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "num_eqs", scope: !6823, file: !480, line: 88, baseType: !499, size: 32, offset: 64)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "num_geqs", scope: !6823, file: !480, line: 90, baseType: !499, size: 32, offset: 96)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "num_subs", scope: !6823, file: !480, line: 92, baseType: !499, size: 32, offset: 128)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "hash_version", scope: !6823, file: !480, line: 94, baseType: !499, size: 32, offset: 160)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "variables_initialized", scope: !6823, file: !480, line: 95, baseType: !498, size: 8, offset: 192)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "variables_freed", scope: !6823, file: !480, line: 96, baseType: !498, size: 8, offset: 200)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !6823, file: !480, line: 103, baseType: !1917, size: 64, offset: 256)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding_address", scope: !6823, file: !480, line: 105, baseType: !1917, size: 64, offset: 320)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "geqs", scope: !6823, file: !480, line: 108, baseType: !6836, size: 64, offset: 384)
!6836 = !DIDerivedType(tag: DW_TAG_typedef, name: "eqn", file: !480, line: 73, baseType: !6837)
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eqn_d", file: !480, line: 61, size: 192, elements: !6839)
!6839 = !{!6840, !6841, !6842, !6843}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6838, file: !480, line: 63, baseType: !499, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "touched", scope: !6838, file: !480, line: 64, baseType: !499, size: 32, offset: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !6838, file: !480, line: 65, baseType: !479, size: 32, offset: 64)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !6838, file: !480, line: 72, baseType: !1917, size: 64, offset: 128)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "eqs", scope: !6823, file: !480, line: 111, baseType: !6836, size: 64, offset: 448)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "subs", scope: !6823, file: !480, line: 114, baseType: !6836, size: 64, offset: 512)
!6846 = !DILocalVariable(name: "res", scope: !6814, file: !3, line: 3770, type: !498)
!6847 = !DILocalVariable(name: "j", scope: !6848, file: !3, line: 3776, type: !7)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 3775, column: 5)
!6849 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3774, column: 7)
!6850 = !DILocalVariable(name: "dir_v", scope: !6848, file: !3, line: 3777, type: !1916)
!6851 = !DILocation(line: 0, scope: !6814)
!6852 = !DILocation(line: 3772, column: 20, scope: !6814)
!6853 = !DILocation(line: 3774, column: 7, scope: !6849)
!6854 = !DILocation(line: 3774, column: 7, scope: !6814)
!6855 = !DILocation(line: 3780, column: 44, scope: !6848)
!6856 = !DILocation(line: 3780, column: 25, scope: !6848)
!6857 = !DILocation(line: 3780, column: 7, scope: !6848)
!6858 = !DILocation(line: 3781, column: 34, scope: !6848)
!6859 = !DILocation(line: 3781, column: 15, scope: !6848)
!6860 = !DILocation(line: 0, scope: !6848)
!6861 = !DILocation(line: 3782, column: 12, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 3782, column: 7)
!6863 = !DILocation(line: 0, scope: !6862)
!6864 = !DILocation(line: 3782, column: 23, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 3782, column: 7)
!6866 = !DILocation(line: 3782, column: 21, scope: !6865)
!6867 = !DILocation(line: 3782, column: 7, scope: !6862)
!6868 = !DILocation(line: 3783, column: 2, scope: !6865)
!6869 = !DILocation(line: 3783, column: 11, scope: !6865)
!6870 = !DILocation(line: 3782, column: 44, scope: !6865)
!6871 = !DILocation(line: 3782, column: 7, scope: !6865)
!6872 = distinct !{!6872, !6867, !6873}
!6873 = !DILocation(line: 3783, column: 13, scope: !6862)
!6874 = !DILocation(line: 3784, column: 7, scope: !6848)
!6875 = !DILocation(line: 3787, column: 37, scope: !6848)
!6876 = !DILocation(line: 3787, column: 35, scope: !6848)
!6877 = !DILocation(line: 3787, column: 57, scope: !6848)
!6878 = !DILocation(line: 3787, column: 12, scope: !6848)
!6879 = !DILocation(line: 3788, column: 35, scope: !6848)
!6880 = !DILocation(line: 3788, column: 48, scope: !6848)
!6881 = !DILocation(line: 3788, column: 13, scope: !6848)
!6882 = !DILocation(line: 3790, column: 7, scope: !6848)
!6883 = !DILocation(line: 3799, column: 33, scope: !6814)
!6884 = !DILocation(line: 3799, column: 31, scope: !6814)
!6885 = !DILocation(line: 3799, column: 53, scope: !6814)
!6886 = !DILocation(line: 3799, column: 8, scope: !6814)
!6887 = !DILocation(line: 3800, column: 31, scope: !6814)
!6888 = !DILocation(line: 3800, column: 44, scope: !6814)
!6889 = !DILocation(line: 3800, column: 9, scope: !6814)
!6890 = !DILocation(line: 3802, column: 3, scope: !6814)
!6891 = !DILocation(line: 3805, column: 11, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3805, column: 7)
!6893 = !DILocation(line: 3805, column: 20, scope: !6892)
!6894 = !DILocation(line: 3805, column: 23, scope: !6892)
!6895 = !DILocation(line: 3805, column: 40, scope: !6892)
!6896 = !DILocation(line: 3805, column: 7, scope: !6814)
!6897 = !DILocation(line: 3808, column: 33, scope: !6814)
!6898 = !DILocation(line: 3808, column: 31, scope: !6814)
!6899 = !DILocation(line: 3808, column: 53, scope: !6814)
!6900 = !DILocation(line: 3808, column: 8, scope: !6814)
!6901 = !DILocation(line: 3809, column: 31, scope: !6814)
!6902 = !DILocation(line: 3809, column: 44, scope: !6814)
!6903 = !DILocation(line: 3809, column: 9, scope: !6814)
!6904 = !DILocation(line: 3811, column: 3, scope: !6814)
!6905 = !DILocation(line: 3813, column: 3, scope: !6814)
!6906 = !DILocation(line: 3814, column: 1, scope: !6814)
!6907 = distinct !DISubprogram(name: "ddr_consistent_p", scope: !3, file: !3, line: 3820, type: !6908, scopeLine: 3824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6910)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!498, !2108, !1932, !1969, !1969}
!6910 = !{!6911, !6912, !6913, !6914, !6915, !6916, !6917, !6920, !6924, !6925, !6929}
!6911 = !DILocalVariable(name: "file", arg: 1, scope: !6907, file: !3, line: 3820, type: !2108)
!6912 = !DILocalVariable(name: "ddr", arg: 2, scope: !6907, file: !3, line: 3821, type: !1932)
!6913 = !DILocalVariable(name: "dist_vects", arg: 3, scope: !6907, file: !3, line: 3822, type: !1969)
!6914 = !DILocalVariable(name: "dir_vects", arg: 4, scope: !6907, file: !3, line: 3823, type: !1969)
!6915 = !DILocalVariable(name: "i", scope: !6907, file: !3, line: 3825, type: !7)
!6916 = !DILocalVariable(name: "j", scope: !6907, file: !3, line: 3825, type: !7)
!6917 = !DILocalVariable(name: "b_dist_v", scope: !6918, file: !3, line: 3833, type: !1916)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 3832, column: 5)
!6919 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 3831, column: 7)
!6920 = !DILocalVariable(name: "a_dist_v", scope: !6921, file: !3, line: 3863, type: !1916)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 3862, column: 5)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3861, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 3861, column: 3)
!6924 = !DILocalVariable(name: "b_dist_v", scope: !6921, file: !3, line: 3864, type: !1916)
!6925 = !DILocalVariable(name: "a_dir_v", scope: !6926, file: !3, line: 3886, type: !1916)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 3885, column: 5)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 3884, column: 3)
!6928 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 3884, column: 3)
!6929 = !DILocalVariable(name: "b_dir_v", scope: !6926, file: !3, line: 3887, type: !1916)
!6930 = !DILocation(line: 0, scope: !6907)
!6931 = !DILocation(line: 3828, column: 7, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 3828, column: 7)
!6933 = !DILocation(line: 3828, column: 17, scope: !6932)
!6934 = !DILocation(line: 3828, column: 21, scope: !6932)
!6935 = !DILocation(line: 3828, column: 32, scope: !6932)
!6936 = !DILocation(line: 3828, column: 7, scope: !6907)
!6937 = !DILocation(line: 3831, column: 7, scope: !6919)
!6938 = !DILocation(line: 3831, column: 49, scope: !6919)
!6939 = !DILocation(line: 3831, column: 46, scope: !6919)
!6940 = !DILocation(line: 3831, column: 7, scope: !6907)
!6941 = !DILocation(line: 3833, column: 7, scope: !6918)
!6942 = !DILocation(line: 3835, column: 9, scope: !6918)
!6943 = !DILocation(line: 3836, column: 9, scope: !6918)
!6944 = !DILocation(line: 3834, column: 7, scope: !6918)
!6945 = !DILocation(line: 3838, column: 7, scope: !6918)
!6946 = !DILocation(line: 0, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 3839, column: 7)
!6948 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 3839, column: 7)
!6949 = !DILocation(line: 3839, column: 12, scope: !6948)
!6950 = !DILocation(line: 0, scope: !6948)
!6951 = !DILocation(line: 0, scope: !6918)
!6952 = !DILocation(line: 3839, column: 19, scope: !6947)
!6953 = !DILocation(line: 3839, column: 7, scope: !6948)
!6954 = !DILocation(line: 3840, column: 29, scope: !6947)
!6955 = !DILocation(line: 3840, column: 39, scope: !6947)
!6956 = !DILocation(line: 3840, column: 2, scope: !6947)
!6957 = !DILocation(line: 3839, column: 74, scope: !6947)
!6958 = !DILocation(line: 3839, column: 7, scope: !6947)
!6959 = distinct !{!6959, !6953, !6960}
!6960 = !DILocation(line: 3840, column: 57, scope: !6948)
!6961 = !DILocation(line: 3842, column: 7, scope: !6918)
!6962 = !DILocation(line: 3843, column: 12, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 3843, column: 7)
!6964 = !DILocation(line: 0, scope: !6963)
!6965 = !DILocation(line: 3843, column: 23, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 3843, column: 7)
!6967 = !DILocation(line: 3843, column: 21, scope: !6966)
!6968 = !DILocation(line: 3843, column: 7, scope: !6963)
!6969 = !DILocation(line: 3844, column: 29, scope: !6966)
!6970 = !DILocation(line: 3844, column: 53, scope: !6966)
!6971 = !DILocation(line: 3844, column: 2, scope: !6966)
!6972 = !DILocation(line: 3843, column: 50, scope: !6966)
!6973 = !DILocation(line: 3843, column: 7, scope: !6966)
!6974 = distinct !{!6974, !6968, !6975}
!6975 = !DILocation(line: 3844, column: 71, scope: !6963)
!6976 = !DILocation(line: 3846, column: 7, scope: !6918)
!6977 = !DILocation(line: 3847, column: 7, scope: !6918)
!6978 = !DILocation(line: 3849, column: 7, scope: !6918)
!6979 = !DILocation(line: 3851, column: 5, scope: !6919)
!6980 = !DILocation(line: 3853, column: 7, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 3853, column: 7)
!6982 = !DILocation(line: 3853, column: 48, scope: !6981)
!6983 = !DILocation(line: 3853, column: 45, scope: !6981)
!6984 = !DILocation(line: 3853, column: 7, scope: !6907)
!6985 = !DILocation(line: 0, scope: !6921)
!6986 = !DILocation(line: 0, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 3869, column: 6)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 3868, column: 7)
!6989 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 3868, column: 7)
!6990 = !DILocation(line: 3861, column: 3, scope: !6923)
!6991 = !DILocation(line: 3856, column: 9, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 3854, column: 5)
!6993 = !DILocation(line: 3857, column: 9, scope: !6992)
!6994 = !DILocation(line: 3855, column: 7, scope: !6992)
!6995 = !DILocation(line: 3858, column: 7, scope: !6992)
!6996 = !DILocation(line: 0, scope: !6923)
!6997 = !DILocation(line: 3861, column: 19, scope: !6922)
!6998 = !DILocation(line: 3861, column: 17, scope: !6922)
!6999 = !DILocation(line: 0, scope: !6926)
!7000 = !DILocation(line: 3884, column: 3, scope: !6928)
!7001 = !DILocation(line: 3863, column: 7, scope: !6921)
!7002 = !DILocation(line: 3864, column: 32, scope: !6921)
!7003 = !DILocation(line: 3868, column: 12, scope: !6989)
!7004 = !DILocation(line: 0, scope: !6989)
!7005 = !DILocation(line: 3868, column: 19, scope: !6988)
!7006 = !DILocation(line: 3868, column: 7, scope: !6989)
!7007 = !DILocation(line: 3869, column: 27, scope: !6987)
!7008 = !DILocation(line: 3869, column: 47, scope: !6987)
!7009 = !DILocation(line: 3869, column: 6, scope: !6987)
!7010 = !DILocation(line: 3869, column: 6, scope: !6988)
!7011 = !DILocation(line: 3868, column: 74, scope: !6988)
!7012 = !DILocation(line: 3868, column: 7, scope: !6988)
!7013 = distinct !{!7013, !7006, !7014}
!7014 = !DILocation(line: 3870, column: 4, scope: !6989)
!7015 = !DILocation(line: 3872, column: 16, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 3872, column: 11)
!7017 = !DILocation(line: 3872, column: 13, scope: !7016)
!7018 = !DILocation(line: 3872, column: 11, scope: !6921)
!7019 = !DILocation(line: 3874, column: 4, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 3873, column: 2)
!7021 = !DILocation(line: 3875, column: 42, scope: !7020)
!7022 = !DILocation(line: 3875, column: 4, scope: !7020)
!7023 = !DILocation(line: 3876, column: 4, scope: !7020)
!7024 = !DILocation(line: 3877, column: 30, scope: !7020)
!7025 = !DILocation(line: 3877, column: 52, scope: !7020)
!7026 = !DILocation(line: 3877, column: 4, scope: !7020)
!7027 = !DILocation(line: 3878, column: 4, scope: !7020)
!7028 = !DILocation(line: 3879, column: 4, scope: !7020)
!7029 = !DILocation(line: 3880, column: 4, scope: !7020)
!7030 = !DILocation(line: 3881, column: 2, scope: !7020)
!7031 = !DILocation(line: 3882, column: 5, scope: !6922)
!7032 = !DILocation(line: 3861, column: 46, scope: !6922)
!7033 = !DILocation(line: 3861, column: 3, scope: !6922)
!7034 = distinct !{!7034, !6990, !7035}
!7035 = !DILocation(line: 3882, column: 5, scope: !6923)
!7036 = !DILocation(line: 0, scope: !6928)
!7037 = !DILocation(line: 3884, column: 19, scope: !6927)
!7038 = !DILocation(line: 3884, column: 17, scope: !6927)
!7039 = !DILocation(line: 3886, column: 7, scope: !6926)
!7040 = !DILocation(line: 3887, column: 31, scope: !6926)
!7041 = !DILocation(line: 3891, column: 12, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 3891, column: 7)
!7043 = !DILocation(line: 0, scope: !7042)
!7044 = !DILocation(line: 3891, column: 19, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 3891, column: 7)
!7046 = !DILocation(line: 3891, column: 7, scope: !7042)
!7047 = !DILocation(line: 3892, column: 27, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3892, column: 6)
!7049 = !DILocation(line: 3892, column: 45, scope: !7048)
!7050 = !DILocation(line: 3892, column: 6, scope: !7048)
!7051 = !DILocation(line: 3892, column: 6, scope: !7045)
!7052 = !DILocation(line: 3891, column: 72, scope: !7045)
!7053 = !DILocation(line: 3891, column: 7, scope: !7045)
!7054 = distinct !{!7054, !7046, !7055}
!7055 = !DILocation(line: 3893, column: 4, scope: !7042)
!7056 = !DILocation(line: 3895, column: 16, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 3895, column: 11)
!7058 = !DILocation(line: 3895, column: 13, scope: !7057)
!7059 = !DILocation(line: 3895, column: 11, scope: !6926)
!7060 = !DILocation(line: 3897, column: 4, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 3896, column: 2)
!7062 = !DILocation(line: 3898, column: 40, scope: !7061)
!7063 = !DILocation(line: 3898, column: 4, scope: !7061)
!7064 = !DILocation(line: 3899, column: 4, scope: !7061)
!7065 = !DILocation(line: 3900, column: 29, scope: !7061)
!7066 = !DILocation(line: 3900, column: 50, scope: !7061)
!7067 = !DILocation(line: 3900, column: 4, scope: !7061)
!7068 = !DILocation(line: 3901, column: 4, scope: !7061)
!7069 = !DILocation(line: 3902, column: 4, scope: !7061)
!7070 = !DILocation(line: 3903, column: 4, scope: !7061)
!7071 = !DILocation(line: 3904, column: 2, scope: !7061)
!7072 = !DILocation(line: 3905, column: 5, scope: !6927)
!7073 = !DILocation(line: 3884, column: 45, scope: !6927)
!7074 = !DILocation(line: 3884, column: 3, scope: !6927)
!7075 = distinct !{!7075, !7000, !7076}
!7076 = !DILocation(line: 3905, column: 5, scope: !6928)
!7077 = !DILocation(line: 3908, column: 1, scope: !6907)
!7078 = distinct !DISubprogram(name: "finalize_ddr_dependent", scope: !3, file: !3, line: 1479, type: !7079, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7081)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{null, !1932, !506}
!7081 = !{!7082, !7083}
!7082 = !DILocalVariable(name: "ddr", arg: 1, scope: !7078, file: !3, line: 1479, type: !1932)
!7083 = !DILocalVariable(name: "chrec", arg: 2, scope: !7078, file: !3, line: 1480, type: !506)
!7084 = !DILocation(line: 0, scope: !7078)
!7085 = !DILocation(line: 1482, column: 7, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1482, column: 7)
!7087 = !DILocation(line: 1482, column: 17, scope: !7086)
!7088 = !DILocation(line: 1482, column: 21, scope: !7086)
!7089 = !DILocation(line: 1482, column: 32, scope: !7086)
!7090 = !DILocation(line: 1482, column: 7, scope: !7078)
!7091 = !DILocation(line: 1484, column: 7, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1483, column: 5)
!7093 = !DILocation(line: 1485, column: 27, scope: !7092)
!7094 = !DILocation(line: 1485, column: 7, scope: !7092)
!7095 = !DILocation(line: 1486, column: 16, scope: !7092)
!7096 = !DILocation(line: 1486, column: 7, scope: !7092)
!7097 = !DILocation(line: 1487, column: 5, scope: !7092)
!7098 = !DILocation(line: 1489, column: 3, scope: !7078)
!7099 = !DILocation(line: 1489, column: 27, scope: !7078)
!7100 = !DILocation(line: 1490, column: 20, scope: !7078)
!7101 = !DILocation(line: 1490, column: 3, scope: !7078)
!7102 = !DILocation(line: 1491, column: 24, scope: !7078)
!7103 = !DILocation(line: 1492, column: 1, scope: !7078)
!7104 = distinct !DISubprogram(name: "subscript_dependence_tester_1", scope: !3, file: !3, line: 3290, type: !7105, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7107)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!498, !1932, !1860, !1860, !1045}
!7107 = !{!7108, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7119}
!7108 = !DILocalVariable(name: "ddr", arg: 1, scope: !7104, file: !3, line: 3290, type: !1932)
!7109 = !DILocalVariable(name: "dra", arg: 2, scope: !7104, file: !3, line: 3291, type: !1860)
!7110 = !DILocalVariable(name: "drb", arg: 3, scope: !7104, file: !3, line: 3292, type: !1860)
!7111 = !DILocalVariable(name: "loop_nest", arg: 4, scope: !7104, file: !3, line: 3293, type: !1045)
!7112 = !DILocalVariable(name: "i", scope: !7104, file: !3, line: 3295, type: !7)
!7113 = !DILocalVariable(name: "last_conflicts", scope: !7104, file: !3, line: 3296, type: !506)
!7114 = !DILocalVariable(name: "subscript", scope: !7104, file: !3, line: 3297, type: !1952)
!7115 = !DILocalVariable(name: "overlaps_a", scope: !7116, file: !3, line: 3302, type: !1956)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 3301, column: 5)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 3299, column: 3)
!7118 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 3299, column: 3)
!7119 = !DILocalVariable(name: "overlaps_b", scope: !7116, file: !3, line: 3302, type: !1956)
!7120 = !DILocation(line: 0, scope: !7104)
!7121 = !DILocation(line: 3296, column: 3, scope: !7104)
!7122 = !DILocation(line: 3297, column: 3, scope: !7104)
!7123 = !DILocation(line: 0, scope: !7117)
!7124 = !DILocation(line: 0, scope: !7116)
!7125 = !DILocation(line: 0, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3330, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 3319, column: 16)
!7128 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 3309, column: 11)
!7129 = !DILocation(line: 3299, column: 8, scope: !7118)
!7130 = !DILocation(line: 0, scope: !7118)
!7131 = !DILocation(line: 3299, column: 15, scope: !7117)
!7132 = !DILocation(line: 3299, column: 3, scope: !7118)
!7133 = !DILocation(line: 3302, column: 7, scope: !7116)
!7134 = !DILocation(line: 3304, column: 39, scope: !7116)
!7135 = !DILocation(line: 3305, column: 11, scope: !7116)
!7136 = !DILocation(line: 3304, column: 7, scope: !7116)
!7137 = !DILocation(line: 3309, column: 11, scope: !7128)
!7138 = !DILocation(line: 3310, column: 5, scope: !7128)
!7139 = !DILocation(line: 3310, column: 8, scope: !7128)
!7140 = !DILocation(line: 3309, column: 11, scope: !7116)
!7141 = !DILocation(line: 3312, column: 34, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 3311, column: 3)
!7143 = !DILocation(line: 3312, column: 5, scope: !7142)
!7144 = !DILocation(line: 3313, column: 48, scope: !7142)
!7145 = !DILocation(line: 3314, column: 28, scope: !7142)
!7146 = !DILocation(line: 3314, column: 4, scope: !7142)
!7147 = !DILocation(line: 3315, column: 28, scope: !7142)
!7148 = !DILocation(line: 3315, column: 4, scope: !7142)
!7149 = !DILocation(line: 3316, column: 4, scope: !7142)
!7150 = !DILocation(line: 3319, column: 16, scope: !7127)
!7151 = !DILocation(line: 3320, column: 10, scope: !7127)
!7152 = !DILocation(line: 3320, column: 13, scope: !7127)
!7153 = !DILocation(line: 3319, column: 16, scope: !7128)
!7154 = !DILocation(line: 3322, column: 34, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3321, column: 3)
!7156 = !DILocation(line: 3322, column: 5, scope: !7155)
!7157 = !DILocation(line: 3323, column: 47, scope: !7155)
!7158 = !DILocation(line: 3324, column: 28, scope: !7155)
!7159 = !DILocation(line: 3324, column: 4, scope: !7155)
!7160 = !DILocation(line: 3325, column: 28, scope: !7155)
!7161 = !DILocation(line: 3325, column: 4, scope: !7155)
!7162 = !DILocation(line: 3326, column: 4, scope: !7155)
!7163 = !DILocation(line: 3331, column: 8, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 3331, column: 8)
!7165 = !DILocation(line: 3331, column: 8, scope: !7126)
!7166 = !DILocation(line: 3332, column: 6, scope: !7164)
!7167 = !DILocation(line: 3333, column: 8, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 3333, column: 8)
!7169 = !DILocation(line: 3333, column: 8, scope: !7126)
!7170 = !DILocation(line: 3334, column: 6, scope: !7168)
!7171 = !DILocation(line: 3336, column: 5, scope: !7126)
!7172 = !DILocation(line: 3336, column: 38, scope: !7126)
!7173 = !DILocation(line: 3336, column: 36, scope: !7126)
!7174 = !DILocation(line: 3337, column: 38, scope: !7126)
!7175 = !DILocation(line: 3337, column: 5, scope: !7126)
!7176 = !DILocation(line: 3337, column: 36, scope: !7126)
!7177 = !DILocation(line: 3338, column: 36, scope: !7126)
!7178 = !DILocation(line: 3338, column: 4, scope: !7126)
!7179 = !DILocation(line: 3338, column: 34, scope: !7126)
!7180 = !DILocation(line: 3340, column: 5, scope: !7117)
!7181 = !DILocation(line: 3300, column: 9, scope: !7117)
!7182 = !DILocation(line: 3299, column: 3, scope: !7117)
!7183 = distinct !{!7183, !7132, !7184}
!7184 = !DILocation(line: 3340, column: 5, scope: !7118)
!7185 = !DILocation(line: 3343, column: 1, scope: !7104)
!7186 = distinct !DISubprogram(name: "compute_subscript_distance", scope: !3, file: !3, line: 1109, type: !3024, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7187)
!7187 = !{!7188, !7189, !7190, !7191, !7192, !7193, !7194, !7197}
!7188 = !DILocalVariable(name: "ddr", arg: 1, scope: !7186, file: !3, line: 1109, type: !1932)
!7189 = !DILocalVariable(name: "cf_a", scope: !7186, file: !3, line: 1111, type: !1956)
!7190 = !DILocalVariable(name: "cf_b", scope: !7186, file: !3, line: 1111, type: !1956)
!7191 = !DILocalVariable(name: "fn_a", scope: !7186, file: !3, line: 1112, type: !1963)
!7192 = !DILocalVariable(name: "fn_b", scope: !7186, file: !3, line: 1112, type: !1963)
!7193 = !DILocalVariable(name: "diff", scope: !7186, file: !3, line: 1112, type: !1963)
!7194 = !DILocalVariable(name: "i", scope: !7195, file: !3, line: 1116, type: !7)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 1115, column: 5)
!7196 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 1114, column: 7)
!7197 = !DILocalVariable(name: "subscript", scope: !7198, file: !3, line: 1120, type: !1952)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 1119, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 1118, column: 7)
!7200 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 1118, column: 7)
!7201 = !DILocation(line: 0, scope: !7186)
!7202 = !DILocation(line: 1114, column: 7, scope: !7196)
!7203 = !DILocation(line: 1114, column: 31, scope: !7196)
!7204 = !DILocation(line: 1114, column: 7, scope: !7186)
!7205 = !DILocation(line: 0, scope: !7199)
!7206 = !DILocation(line: 1118, column: 7, scope: !7200)
!7207 = !DILocation(line: 0, scope: !7200)
!7208 = !DILocation(line: 0, scope: !7195)
!7209 = !DILocation(line: 1118, column: 23, scope: !7199)
!7210 = !DILocation(line: 1118, column: 21, scope: !7199)
!7211 = !DILocation(line: 1122, column: 17, scope: !7198)
!7212 = !DILocation(line: 0, scope: !7198)
!7213 = !DILocation(line: 1123, column: 12, scope: !7198)
!7214 = !DILocation(line: 1124, column: 12, scope: !7198)
!7215 = !DILocation(line: 1126, column: 11, scope: !7198)
!7216 = !DILocation(line: 1127, column: 11, scope: !7198)
!7217 = !DILocation(line: 1128, column: 9, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1128, column: 8)
!7219 = !DILocation(line: 1128, column: 18, scope: !7218)
!7220 = !DILocation(line: 1128, column: 14, scope: !7218)
!7221 = !DILocation(line: 1130, column: 35, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1129, column: 6)
!7223 = !DILocation(line: 1130, column: 8, scope: !7222)
!7224 = !DILocation(line: 1130, column: 33, scope: !7222)
!7225 = !DILocation(line: 1131, column: 8, scope: !7222)
!7226 = !DILocation(line: 1133, column: 11, scope: !7198)
!7227 = !DILocation(line: 1135, column: 9, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1135, column: 9)
!7229 = !DILocation(line: 1135, column: 9, scope: !7198)
!7230 = !DILocation(line: 1136, column: 34, scope: !7228)
!7231 = !DILocation(line: 1136, column: 7, scope: !7228)
!7232 = !DILocation(line: 1136, column: 32, scope: !7228)
!7233 = !DILocation(line: 1138, column: 34, scope: !7228)
!7234 = !DILocation(line: 1138, column: 7, scope: !7228)
!7235 = !DILocation(line: 1138, column: 32, scope: !7228)
!7236 = !DILocation(line: 1140, column: 4, scope: !7198)
!7237 = !DILocation(line: 1141, column: 3, scope: !7199)
!7238 = !DILocation(line: 1118, column: 50, scope: !7199)
!7239 = !DILocation(line: 1118, column: 7, scope: !7199)
!7240 = distinct !{!7240, !7206, !7241}
!7241 = !DILocation(line: 1141, column: 3, scope: !7200)
!7242 = !DILocation(line: 1143, column: 1, scope: !7186)
!7243 = distinct !DISubprogram(name: "build_classic_dist_vector", scope: !3, file: !3, line: 3101, type: !7244, scopeLine: 3103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7246)
!7244 = !DISubroutineType(types: !7245)
!7245 = !{!498, !1932, !1045}
!7246 = !{!7247, !7248, !7249, !7250, !7251, !7252, !7257, !7259, !7262}
!7247 = !DILocalVariable(name: "ddr", arg: 1, scope: !7243, file: !3, line: 3101, type: !1932)
!7248 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !7243, file: !3, line: 3102, type: !1045)
!7249 = !DILocalVariable(name: "init_b", scope: !7243, file: !3, line: 3104, type: !498)
!7250 = !DILocalVariable(name: "index_carry", scope: !7243, file: !3, line: 3105, type: !499)
!7251 = !DILocalVariable(name: "dist_v", scope: !7243, file: !3, line: 3106, type: !1916)
!7252 = !DILocalVariable(name: "save_v", scope: !7253, file: !3, line: 3160, type: !1916)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 3159, column: 2)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 3158, column: 11)
!7255 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 3133, column: 5)
!7256 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3132, column: 7)
!7257 = !DILocalVariable(name: "save_v", scope: !7258, file: !3, line: 3195, type: !1916)
!7258 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 3194, column: 2)
!7259 = !DILocalVariable(name: "opposite_v", scope: !7260, file: !3, line: 3200, type: !1916)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 3199, column: 6)
!7261 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 3198, column: 8)
!7262 = !DILocalVariable(name: "i", scope: !7263, file: !3, line: 3235, type: !7)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 3234, column: 5)
!7264 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3233, column: 7)
!7265 = !DILocation(line: 0, scope: !7243)
!7266 = !DILocation(line: 3104, column: 3, scope: !7243)
!7267 = !DILocation(line: 3104, column: 8, scope: !7243)
!7268 = !DILocation(line: 3105, column: 3, scope: !7243)
!7269 = !DILocation(line: 3105, column: 21, scope: !7243)
!7270 = !DILocation(line: 3105, column: 7, scope: !7243)
!7271 = !DILocation(line: 3108, column: 7, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3108, column: 7)
!7273 = !DILocation(line: 3108, column: 31, scope: !7272)
!7274 = !DILocation(line: 3108, column: 7, scope: !7243)
!7275 = !DILocation(line: 3111, column: 7, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3111, column: 7)
!7277 = !DILocation(line: 3111, column: 7, scope: !7243)
!7278 = !DILocation(line: 3114, column: 35, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 3112, column: 5)
!7280 = !DILocation(line: 3114, column: 16, scope: !7279)
!7281 = !DILocation(line: 3115, column: 7, scope: !7279)
!7282 = !DILocation(line: 3117, column: 11, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 3117, column: 11)
!7284 = !DILocation(line: 3117, column: 11, scope: !7279)
!7285 = !DILocation(line: 3118, column: 2, scope: !7283)
!7286 = !DILocation(line: 3120, column: 11, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 3120, column: 11)
!7288 = !DILocation(line: 3120, column: 30, scope: !7287)
!7289 = !DILocation(line: 3120, column: 11, scope: !7279)
!7290 = !DILocation(line: 3121, column: 2, scope: !7287)
!7291 = !DILocation(line: 3126, column: 31, scope: !7243)
!7292 = !DILocation(line: 3126, column: 12, scope: !7243)
!7293 = !DILocation(line: 3127, column: 42, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 3127, column: 7)
!7295 = !DILocation(line: 3127, column: 55, scope: !7294)
!7296 = !DILocation(line: 3127, column: 8, scope: !7294)
!7297 = !DILocation(line: 3127, column: 7, scope: !7243)
!7298 = !DILocation(line: 3132, column: 7, scope: !7256)
!7299 = !DILocation(line: 0, scope: !7256)
!7300 = !DILocation(line: 3132, column: 7, scope: !7243)
!7301 = !DILocation(line: 3158, column: 46, scope: !7254)
!7302 = !DILocation(line: 3158, column: 12, scope: !7254)
!7303 = !DILocation(line: 0, scope: !7254)
!7304 = !DILocation(line: 3158, column: 11, scope: !7255)
!7305 = !DILocation(line: 3160, column: 46, scope: !7253)
!7306 = !DILocation(line: 3160, column: 27, scope: !7253)
!7307 = !DILocation(line: 0, scope: !7253)
!7308 = !DILocation(line: 3161, column: 45, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 3161, column: 8)
!7310 = !DILocation(line: 3161, column: 58, scope: !7309)
!7311 = !DILocation(line: 3161, column: 9, scope: !7309)
!7312 = !DILocation(line: 3161, column: 8, scope: !7253)
!7313 = !DILocation(line: 3164, column: 4, scope: !7253)
!7314 = !DILocation(line: 3165, column: 43, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 3165, column: 8)
!7316 = !DILocation(line: 3165, column: 56, scope: !7315)
!7317 = !DILocation(line: 3165, column: 9, scope: !7315)
!7318 = !DILocation(line: 3165, column: 8, scope: !7253)
!7319 = !DILocation(line: 3168, column: 4, scope: !7253)
!7320 = !DILocation(line: 3169, column: 4, scope: !7253)
!7321 = !DILocation(line: 3169, column: 25, scope: !7253)
!7322 = !DILocation(line: 3187, column: 8, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 3187, column: 8)
!7324 = !DILocation(line: 3187, column: 27, scope: !7323)
!7325 = !DILocation(line: 3187, column: 8, scope: !7253)
!7326 = !DILocation(line: 3189, column: 43, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 3188, column: 6)
!7328 = !DILocation(line: 3189, column: 9, scope: !7327)
!7329 = !DILocation(line: 3190, column: 42, scope: !7327)
!7330 = !DILocation(line: 3190, column: 8, scope: !7327)
!7331 = !DILocation(line: 3191, column: 6, scope: !7327)
!7332 = !DILocation(line: 3195, column: 46, scope: !7258)
!7333 = !DILocation(line: 3195, column: 27, scope: !7258)
!7334 = !DILocation(line: 0, scope: !7258)
!7335 = !DILocation(line: 3196, column: 40, scope: !7258)
!7336 = !DILocation(line: 3196, column: 4, scope: !7258)
!7337 = !DILocation(line: 3198, column: 8, scope: !7261)
!7338 = !DILocation(line: 3198, column: 27, scope: !7261)
!7339 = !DILocation(line: 3198, column: 8, scope: !7258)
!7340 = !DILocation(line: 3200, column: 54, scope: !7260)
!7341 = !DILocation(line: 3200, column: 35, scope: !7260)
!7342 = !DILocation(line: 0, scope: !7260)
!7343 = !DILocation(line: 3202, column: 49, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3202, column: 12)
!7345 = !DILocation(line: 3203, column: 9, scope: !7344)
!7346 = !DILocation(line: 3202, column: 13, scope: !7344)
!7347 = !DILocation(line: 3202, column: 12, scope: !7260)
!7348 = !DILocation(line: 3205, column: 8, scope: !7260)
!7349 = !DILocation(line: 3206, column: 47, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3206, column: 12)
!7351 = !DILocation(line: 3206, column: 60, scope: !7350)
!7352 = !DILocation(line: 3206, column: 13, scope: !7350)
!7353 = !DILocation(line: 3206, column: 12, scope: !7260)
!7354 = !DILocation(line: 3211, column: 8, scope: !7260)
!7355 = !DILocation(line: 3212, column: 42, scope: !7260)
!7356 = !DILocation(line: 3212, column: 8, scope: !7260)
!7357 = !DILocation(line: 3213, column: 46, scope: !7260)
!7358 = !DILocation(line: 3213, column: 8, scope: !7260)
!7359 = !DILocation(line: 3214, column: 6, scope: !7261)
!7360 = !DILocation(line: 3216, column: 6, scope: !7261)
!7361 = !DILocation(line: 3217, column: 2, scope: !7254)
!7362 = !DILocation(line: 3230, column: 10, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 3220, column: 5)
!7364 = !DILocation(line: 3229, column: 7, scope: !7363)
!7365 = !DILocation(line: 3228, column: 7, scope: !7363)
!7366 = !DILocation(line: 3233, column: 7, scope: !7264)
!7367 = !DILocation(line: 3233, column: 17, scope: !7264)
!7368 = !DILocation(line: 3233, column: 21, scope: !7264)
!7369 = !DILocation(line: 3233, column: 32, scope: !7264)
!7370 = !DILocation(line: 3233, column: 7, scope: !7243)
!7371 = !DILocation(line: 3237, column: 7, scope: !7263)
!7372 = !DILocation(line: 0, scope: !7263)
!7373 = !DILocation(line: 0, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 3238, column: 7)
!7375 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3238, column: 7)
!7376 = !DILocation(line: 3238, column: 12, scope: !7375)
!7377 = !DILocation(line: 0, scope: !7375)
!7378 = !DILocation(line: 3238, column: 23, scope: !7374)
!7379 = !DILocation(line: 3238, column: 21, scope: !7374)
!7380 = !DILocation(line: 3238, column: 7, scope: !7375)
!7381 = !DILocation(line: 3240, column: 4, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 3239, column: 2)
!7383 = !DILocation(line: 3241, column: 25, scope: !7382)
!7384 = !DILocation(line: 3241, column: 36, scope: !7382)
!7385 = !DILocation(line: 3242, column: 11, scope: !7382)
!7386 = !DILocation(line: 3241, column: 4, scope: !7382)
!7387 = !DILocation(line: 3243, column: 13, scope: !7382)
!7388 = !DILocation(line: 3243, column: 4, scope: !7382)
!7389 = !DILocation(line: 3238, column: 50, scope: !7374)
!7390 = !DILocation(line: 3238, column: 7, scope: !7374)
!7391 = distinct !{!7391, !7380, !7392}
!7392 = !DILocation(line: 3244, column: 2, scope: !7375)
!7393 = !DILocation(line: 3245, column: 7, scope: !7263)
!7394 = !DILocation(line: 3246, column: 5, scope: !7263)
!7395 = !DILocation(line: 3249, column: 1, scope: !7243)
!7396 = distinct !DISubprogram(name: "build_classic_dir_vector", scope: !3, file: !3, line: 3270, type: !3024, scopeLine: 3271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7397)
!7397 = !{!7398, !7399, !7400, !7401, !7402}
!7398 = !DILocalVariable(name: "ddr", arg: 1, scope: !7396, file: !3, line: 3270, type: !1932)
!7399 = !DILocalVariable(name: "i", scope: !7396, file: !3, line: 3272, type: !7)
!7400 = !DILocalVariable(name: "j", scope: !7396, file: !3, line: 3272, type: !7)
!7401 = !DILocalVariable(name: "dist_v", scope: !7396, file: !3, line: 3273, type: !1916)
!7402 = !DILocalVariable(name: "dir_v", scope: !7403, file: !3, line: 3277, type: !1916)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 3276, column: 5)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 3275, column: 3)
!7405 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 3275, column: 3)
!7406 = !DILocation(line: 0, scope: !7396)
!7407 = !DILocation(line: 3273, column: 3, scope: !7396)
!7408 = !DILocation(line: 0, scope: !7404)
!7409 = !DILocation(line: 0, scope: !7403)
!7410 = !DILocation(line: 3275, column: 8, scope: !7405)
!7411 = !DILocation(line: 0, scope: !7405)
!7412 = !DILocation(line: 3275, column: 15, scope: !7404)
!7413 = !DILocation(line: 3275, column: 3, scope: !7405)
!7414 = !DILocation(line: 3277, column: 48, scope: !7403)
!7415 = !DILocation(line: 3277, column: 29, scope: !7403)
!7416 = !DILocation(line: 3279, column: 12, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 3279, column: 7)
!7418 = !DILocation(line: 0, scope: !7417)
!7419 = !DILocation(line: 3279, column: 23, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 3279, column: 7)
!7421 = !DILocation(line: 3279, column: 21, scope: !7420)
!7422 = !DILocation(line: 3279, column: 7, scope: !7417)
!7423 = !DILocation(line: 3280, column: 28, scope: !7420)
!7424 = !DILocation(line: 3280, column: 13, scope: !7420)
!7425 = !DILocation(line: 3280, column: 2, scope: !7420)
!7426 = !DILocation(line: 3280, column: 11, scope: !7420)
!7427 = !DILocation(line: 3279, column: 44, scope: !7420)
!7428 = !DILocation(line: 3279, column: 7, scope: !7420)
!7429 = distinct !{!7429, !7422, !7430}
!7430 = !DILocation(line: 3280, column: 37, scope: !7417)
!7431 = !DILocation(line: 3282, column: 7, scope: !7403)
!7432 = !DILocation(line: 3275, column: 78, scope: !7404)
!7433 = !DILocation(line: 3275, column: 3, scope: !7404)
!7434 = distinct !{!7434, !7413, !7435}
!7435 = !DILocation(line: 3283, column: 5, scope: !7405)
!7436 = !DILocation(line: 3284, column: 1, scope: !7396)
!7437 = distinct !DISubprogram(name: "VEC_subscript_p_base_iterate", scope: !391, file: !391, line: 271, type: !7438, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7440)
!7438 = !DISubroutineType(types: !7439)
!7439 = !{!499, !3035, !7, !6683}
!7440 = !{!7441, !7442, !7443}
!7441 = !DILocalVariable(name: "vec_", arg: 1, scope: !7437, file: !391, line: 271, type: !3035)
!7442 = !DILocalVariable(name: "ix_", arg: 2, scope: !7437, file: !391, line: 271, type: !7)
!7443 = !DILocalVariable(name: "ptr", arg: 3, scope: !7437, file: !391, line: 271, type: !6683)
!7444 = !DILocation(line: 0, scope: !7437)
!7445 = !DILocation(line: 271, column: 1, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7437, file: !391, line: 271, column: 1)
!7447 = !DILocation(line: 271, column: 1, scope: !7437)
!7448 = !DILocation(line: 271, column: 1, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7446, file: !391, line: 271, column: 1)
!7450 = !DILocation(line: 271, column: 1, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7446, file: !391, line: 271, column: 1)
!7452 = !DILocation(line: 0, scope: !7446)
!7453 = distinct !DISubprogram(name: "analyze_overlapping_iterations", scope: !3, file: !3, line: 2709, type: !7454, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7457)
!7454 = !DISubroutineType(types: !7455)
!7455 = !{null, !506, !506, !7456, !7456, !864, !1045}
!7456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!7457 = !{!7458, !7459, !7460, !7461, !7462, !7463, !7464}
!7458 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7453, file: !3, line: 2709, type: !506)
!7459 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7453, file: !3, line: 2710, type: !506)
!7460 = !DILocalVariable(name: "overlap_iterations_a", arg: 3, scope: !7453, file: !3, line: 2711, type: !7456)
!7461 = !DILocalVariable(name: "overlap_iterations_b", arg: 4, scope: !7453, file: !3, line: 2712, type: !7456)
!7462 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !7453, file: !3, line: 2713, type: !864)
!7463 = !DILocalVariable(name: "loop_nest", arg: 6, scope: !7453, file: !3, line: 2713, type: !1045)
!7464 = !DILocalVariable(name: "lnn", scope: !7453, file: !3, line: 2715, type: !7)
!7465 = !DILocation(line: 0, scope: !7453)
!7466 = !DILocation(line: 2715, column: 33, scope: !7453)
!7467 = !DILocation(line: 2717, column: 39, scope: !7453)
!7468 = !DILocation(line: 2719, column: 7, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2719, column: 7)
!7470 = !DILocation(line: 2719, column: 17, scope: !7469)
!7471 = !DILocation(line: 2719, column: 21, scope: !7469)
!7472 = !DILocation(line: 2719, column: 32, scope: !7469)
!7473 = !DILocation(line: 2719, column: 7, scope: !7453)
!7474 = !DILocation(line: 2721, column: 7, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 2720, column: 5)
!7476 = !DILocation(line: 2722, column: 16, scope: !7475)
!7477 = !DILocation(line: 2722, column: 7, scope: !7475)
!7478 = !DILocation(line: 2723, column: 27, scope: !7475)
!7479 = !DILocation(line: 2723, column: 7, scope: !7475)
!7480 = !DILocation(line: 2724, column: 16, scope: !7475)
!7481 = !DILocation(line: 2724, column: 7, scope: !7475)
!7482 = !DILocation(line: 2725, column: 27, scope: !7475)
!7483 = !DILocation(line: 2725, column: 7, scope: !7475)
!7484 = !DILocation(line: 2726, column: 16, scope: !7475)
!7485 = !DILocation(line: 2726, column: 7, scope: !7475)
!7486 = !DILocation(line: 2727, column: 5, scope: !7475)
!7487 = !DILocation(line: 2729, column: 15, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2729, column: 7)
!7489 = !DILocation(line: 2730, column: 18, scope: !7488)
!7490 = !DILocation(line: 2730, column: 7, scope: !7488)
!7491 = !DILocation(line: 2731, column: 10, scope: !7488)
!7492 = !DILocation(line: 2732, column: 7, scope: !7488)
!7493 = !DILocation(line: 2732, column: 10, scope: !7488)
!7494 = !DILocation(line: 2729, column: 7, scope: !7453)
!7495 = !DILocation(line: 2734, column: 50, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 2733, column: 5)
!7497 = !DILocation(line: 2736, column: 31, scope: !7496)
!7498 = !DILocation(line: 2736, column: 29, scope: !7496)
!7499 = !DILocation(line: 2737, column: 31, scope: !7496)
!7500 = !DILocation(line: 2737, column: 29, scope: !7496)
!7501 = !DILocation(line: 2738, column: 5, scope: !7496)
!7502 = !DILocation(line: 2742, column: 12, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 2742, column: 12)
!7504 = !DILocation(line: 2743, column: 5, scope: !7503)
!7505 = !DILocation(line: 2743, column: 8, scope: !7503)
!7506 = !DILocation(line: 2742, column: 12, scope: !7488)
!7507 = !DILocation(line: 2745, column: 51, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 2744, column: 5)
!7509 = !DILocation(line: 2746, column: 62, scope: !7508)
!7510 = !DILocation(line: 2746, column: 47, scope: !7508)
!7511 = !DILocation(line: 2746, column: 31, scope: !7508)
!7512 = !DILocation(line: 2746, column: 29, scope: !7508)
!7513 = !DILocation(line: 2747, column: 62, scope: !7508)
!7514 = !DILocation(line: 2747, column: 47, scope: !7508)
!7515 = !DILocation(line: 2747, column: 31, scope: !7508)
!7516 = !DILocation(line: 2747, column: 29, scope: !7508)
!7517 = !DILocation(line: 2748, column: 25, scope: !7508)
!7518 = !DILocation(line: 2748, column: 23, scope: !7508)
!7519 = !DILocation(line: 2749, column: 5, scope: !7508)
!7520 = !DILocation(line: 2753, column: 13, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 2753, column: 12)
!7522 = !DILocation(line: 2754, column: 6, scope: !7521)
!7523 = !DILocation(line: 2754, column: 9, scope: !7521)
!7524 = !DILocation(line: 2755, column: 5, scope: !7521)
!7525 = !DILocation(line: 2755, column: 10, scope: !7521)
!7526 = !DILocation(line: 2756, column: 9, scope: !7521)
!7527 = !DILocation(line: 2756, column: 13, scope: !7521)
!7528 = !DILocation(line: 2753, column: 12, scope: !7503)
!7529 = !DILocation(line: 2758, column: 50, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 2757, column: 5)
!7531 = !DILocation(line: 2759, column: 31, scope: !7530)
!7532 = !DILocation(line: 2759, column: 29, scope: !7530)
!7533 = !DILocation(line: 2760, column: 31, scope: !7530)
!7534 = !DILocation(line: 2760, column: 29, scope: !7530)
!7535 = !DILocation(line: 2761, column: 5, scope: !7530)
!7536 = !DILocation(line: 2763, column: 12, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 2763, column: 12)
!7538 = !DILocation(line: 2763, column: 12, scope: !7521)
!7539 = !DILocation(line: 2764, column: 5, scope: !7537)
!7540 = !DILocation(line: 2768, column: 12, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 2768, column: 12)
!7542 = !DILocation(line: 2768, column: 12, scope: !7537)
!7543 = !DILocation(line: 2769, column: 5, scope: !7541)
!7544 = !DILocation(line: 2774, column: 5, scope: !7541)
!7545 = !DILocation(line: 2778, column: 7, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 2778, column: 7)
!7547 = !DILocation(line: 2778, column: 17, scope: !7546)
!7548 = !DILocation(line: 2778, column: 21, scope: !7546)
!7549 = !DILocation(line: 2778, column: 32, scope: !7546)
!7550 = !DILocation(line: 2778, column: 7, scope: !7453)
!7551 = !DILocation(line: 2780, column: 7, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2779, column: 5)
!7553 = !DILocation(line: 2781, column: 31, scope: !7552)
!7554 = !DILocation(line: 2781, column: 42, scope: !7552)
!7555 = !DILocation(line: 2781, column: 7, scope: !7552)
!7556 = !DILocation(line: 2782, column: 16, scope: !7552)
!7557 = !DILocation(line: 2782, column: 7, scope: !7552)
!7558 = !DILocation(line: 2783, column: 31, scope: !7552)
!7559 = !DILocation(line: 2783, column: 42, scope: !7552)
!7560 = !DILocation(line: 2783, column: 7, scope: !7552)
!7561 = !DILocation(line: 2784, column: 16, scope: !7552)
!7562 = !DILocation(line: 2784, column: 7, scope: !7552)
!7563 = !DILocation(line: 2785, column: 16, scope: !7552)
!7564 = !DILocation(line: 2785, column: 7, scope: !7552)
!7565 = !DILocation(line: 2786, column: 5, scope: !7552)
!7566 = !DILocation(line: 2787, column: 1, scope: !7453)
!7567 = distinct !DISubprogram(name: "free_conflict_function", scope: !3, file: !3, line: 1446, type: !7568, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7570)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{null, !1956}
!7570 = !{!7571, !7572}
!7571 = !DILocalVariable(name: "f", arg: 1, scope: !7567, file: !3, line: 1446, type: !1956)
!7572 = !DILocalVariable(name: "i", scope: !7567, file: !3, line: 1448, type: !7)
!7573 = !DILocation(line: 0, scope: !7567)
!7574 = !DILocation(line: 1450, column: 7, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 1450, column: 7)
!7576 = !DILocation(line: 1450, column: 7, scope: !7567)
!7577 = !DILocation(line: 1452, column: 7, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1452, column: 7)
!7579 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1451, column: 5)
!7580 = !DILocation(line: 1452, column: 26, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 1452, column: 7)
!7582 = !DILocation(line: 1452, column: 21, scope: !7581)
!7583 = !DILocation(line: 1453, column: 18, scope: !7581)
!7584 = !DILocation(line: 1453, column: 2, scope: !7581)
!7585 = !DILocation(line: 1452, column: 30, scope: !7581)
!7586 = !DILocation(line: 1452, column: 7, scope: !7581)
!7587 = distinct !{!7587, !7577, !7588}
!7588 = !DILocation(line: 1453, column: 27, scope: !7578)
!7589 = !DILocation(line: 1455, column: 9, scope: !7567)
!7590 = !DILocation(line: 1455, column: 3, scope: !7567)
!7591 = !DILocation(line: 1456, column: 1, scope: !7567)
!7592 = distinct !DISubprogram(name: "conflict_fn", scope: !3, file: !3, line: 1560, type: !7593, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7595)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!1956, !7, null}
!7595 = !{!7596, !7597, !7598, !7599}
!7596 = !DILocalVariable(name: "n", arg: 1, scope: !7592, file: !3, line: 1560, type: !7)
!7597 = !DILocalVariable(name: "i", scope: !7592, file: !3, line: 1562, type: !7)
!7598 = !DILocalVariable(name: "ret", scope: !7592, file: !3, line: 1563, type: !1956)
!7599 = !DILocalVariable(name: "ap", scope: !7592, file: !3, line: 1564, type: !7600)
!7600 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7601, line: 52, baseType: !7602)
!7601 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!7602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7603, line: 32, baseType: !7604)
!7603 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!7604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 1564, baseType: !7605)
!7605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 192, elements: !605)
!7606 = !DILocation(line: 0, scope: !7592)
!7607 = !DILocation(line: 1563, column: 28, scope: !7592)
!7608 = !DILocation(line: 1564, column: 3, scope: !7592)
!7609 = !DILocation(line: 1564, column: 11, scope: !7592)
!7610 = !DILocation(line: 1566, column: 3, scope: !7592)
!7611 = !DILocation(line: 1567, column: 3, scope: !7592)
!7612 = !DILocation(line: 1569, column: 8, scope: !7592)
!7613 = !DILocation(line: 1569, column: 10, scope: !7592)
!7614 = !DILocation(line: 0, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7616, file: !3, line: 1570, column: 3)
!7616 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 1570, column: 3)
!7617 = !DILocation(line: 1570, column: 17, scope: !7615)
!7618 = !DILocation(line: 1570, column: 8, scope: !7616)
!7619 = !DILocation(line: 0, scope: !7616)
!7620 = !DILocation(line: 1570, column: 3, scope: !7616)
!7621 = !DILocation(line: 1571, column: 19, scope: !7615)
!7622 = !DILocation(line: 1571, column: 5, scope: !7615)
!7623 = !DILocation(line: 1571, column: 17, scope: !7615)
!7624 = !DILocation(line: 1570, column: 23, scope: !7615)
!7625 = !DILocation(line: 1570, column: 3, scope: !7615)
!7626 = distinct !{!7626, !7620, !7627}
!7627 = !DILocation(line: 1571, column: 19, scope: !7616)
!7628 = !DILocation(line: 1572, column: 3, scope: !7592)
!7629 = !DILocation(line: 1575, column: 1, scope: !7592)
!7630 = !DILocation(line: 1574, column: 3, scope: !7592)
!7631 = distinct !DISubprogram(name: "affine_fn_cst", scope: !3, file: !3, line: 1580, type: !7632, scopeLine: 1581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7634)
!7632 = !DISubroutineType(types: !7633)
!7633 = !{!1963, !506}
!7634 = !{!7635, !7636}
!7635 = !DILocalVariable(name: "cst", arg: 1, scope: !7631, file: !3, line: 1580, type: !506)
!7636 = !DILocalVariable(name: "fn", scope: !7631, file: !3, line: 1582, type: !1963)
!7637 = !DILocation(line: 0, scope: !7631)
!7638 = !DILocation(line: 1582, column: 18, scope: !7631)
!7639 = !DILocation(line: 1583, column: 3, scope: !7631)
!7640 = !DILocation(line: 1584, column: 3, scope: !7631)
!7641 = distinct !DISubprogram(name: "ziv_subscript_p", scope: !3, file: !3, line: 1514, type: !7642, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!498, !3244, !3244}
!7644 = !{!7645, !7646}
!7645 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7641, file: !3, line: 1514, type: !3244)
!7646 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7641, file: !3, line: 1514, type: !3244)
!7647 = !DILocation(line: 0, scope: !7641)
!7648 = !DILocation(line: 1516, column: 11, scope: !7641)
!7649 = !DILocation(line: 1517, column: 4, scope: !7641)
!7650 = !DILocation(line: 1517, column: 7, scope: !7641)
!7651 = !DILocation(line: 1516, column: 3, scope: !7641)
!7652 = distinct !DISubprogram(name: "analyze_ziv_subscript", scope: !3, file: !3, line: 1611, type: !7653, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7655)
!7653 = !DISubroutineType(types: !7654)
!7654 = !{null, !506, !506, !7456, !7456, !864}
!7655 = !{!7656, !7657, !7658, !7659, !7660, !7661, !7662}
!7656 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7652, file: !3, line: 1611, type: !506)
!7657 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7652, file: !3, line: 1612, type: !506)
!7658 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !7652, file: !3, line: 1613, type: !7456)
!7659 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !7652, file: !3, line: 1614, type: !7456)
!7660 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !7652, file: !3, line: 1615, type: !864)
!7661 = !DILocalVariable(name: "type", scope: !7652, file: !3, line: 1617, type: !506)
!7662 = !DILocalVariable(name: "difference", scope: !7652, file: !3, line: 1617, type: !506)
!7663 = !DILocation(line: 0, scope: !7652)
!7664 = !DILocation(line: 1618, column: 27, scope: !7652)
!7665 = !DILocation(line: 1620, column: 7, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1620, column: 7)
!7667 = !DILocation(line: 1620, column: 17, scope: !7666)
!7668 = !DILocation(line: 1620, column: 21, scope: !7666)
!7669 = !DILocation(line: 1620, column: 32, scope: !7666)
!7670 = !DILocation(line: 1620, column: 7, scope: !7652)
!7671 = !DILocation(line: 1621, column: 5, scope: !7666)
!7672 = !DILocation(line: 1623, column: 33, scope: !7652)
!7673 = !DILocation(line: 1623, column: 54, scope: !7652)
!7674 = !DILocation(line: 1623, column: 10, scope: !7652)
!7675 = !DILocation(line: 1624, column: 13, scope: !7652)
!7676 = !DILocation(line: 1625, column: 13, scope: !7652)
!7677 = !DILocation(line: 1626, column: 16, scope: !7652)
!7678 = !DILocation(line: 1628, column: 11, scope: !7652)
!7679 = !DILocation(line: 1628, column: 3, scope: !7652)
!7680 = !DILocation(line: 1631, column: 11, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 1631, column: 11)
!7682 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1629, column: 5)
!7683 = !DILocation(line: 1631, column: 11, scope: !7682)
!7684 = !DILocation(line: 1635, column: 49, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1632, column: 2)
!7686 = !DILocation(line: 1635, column: 34, scope: !7685)
!7687 = !DILocation(line: 1635, column: 18, scope: !7685)
!7688 = !DILocation(line: 1635, column: 16, scope: !7685)
!7689 = !DILocation(line: 1636, column: 49, scope: !7685)
!7690 = !DILocation(line: 1636, column: 34, scope: !7685)
!7691 = !DILocation(line: 1636, column: 18, scope: !7685)
!7692 = !DILocation(line: 1636, column: 16, scope: !7685)
!7693 = !DILocation(line: 1637, column: 22, scope: !7685)
!7694 = !DILocation(line: 1637, column: 20, scope: !7685)
!7695 = !DILocation(line: 1638, column: 38, scope: !7685)
!7696 = !DILocation(line: 1639, column: 2, scope: !7685)
!7697 = !DILocation(line: 1643, column: 18, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1641, column: 2)
!7699 = !DILocation(line: 1643, column: 16, scope: !7698)
!7700 = !DILocation(line: 1644, column: 18, scope: !7698)
!7701 = !DILocation(line: 1644, column: 16, scope: !7698)
!7702 = !DILocation(line: 1645, column: 22, scope: !7698)
!7703 = !DILocation(line: 1645, column: 20, scope: !7698)
!7704 = !DILocation(line: 1646, column: 40, scope: !7698)
!7705 = !DILocation(line: 1653, column: 11, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 1653, column: 11)
!7707 = !DILocation(line: 1653, column: 21, scope: !7706)
!7708 = !DILocation(line: 1653, column: 25, scope: !7706)
!7709 = !DILocation(line: 1653, column: 36, scope: !7706)
!7710 = !DILocation(line: 1653, column: 11, scope: !7682)
!7711 = !DILocation(line: 1654, column: 2, scope: !7706)
!7712 = !DILocation(line: 1656, column: 21, scope: !7682)
!7713 = !DILocation(line: 1656, column: 19, scope: !7682)
!7714 = !DILocation(line: 1657, column: 21, scope: !7682)
!7715 = !DILocation(line: 1657, column: 19, scope: !7682)
!7716 = !DILocation(line: 1658, column: 25, scope: !7682)
!7717 = !DILocation(line: 1658, column: 23, scope: !7682)
!7718 = !DILocation(line: 1659, column: 45, scope: !7682)
!7719 = !DILocation(line: 1660, column: 7, scope: !7682)
!7720 = !DILocation(line: 1663, column: 7, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1663, column: 7)
!7722 = !DILocation(line: 1663, column: 17, scope: !7721)
!7723 = !DILocation(line: 1663, column: 21, scope: !7721)
!7724 = !DILocation(line: 1663, column: 32, scope: !7721)
!7725 = !DILocation(line: 1663, column: 7, scope: !7652)
!7726 = !DILocation(line: 1664, column: 5, scope: !7721)
!7727 = !DILocation(line: 1665, column: 1, scope: !7652)
!7728 = distinct !DISubprogram(name: "siv_subscript_p", scope: !3, file: !3, line: 1524, type: !7642, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7729)
!7729 = !{!7730, !7731}
!7730 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7728, file: !3, line: 1524, type: !3244)
!7731 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7728, file: !3, line: 1524, type: !3244)
!7732 = !DILocation(line: 0, scope: !7728)
!7733 = !DILocation(line: 1526, column: 8, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 1526, column: 7)
!7735 = !DILocation(line: 1527, column: 8, scope: !7734)
!7736 = !DILocation(line: 1527, column: 11, scope: !7734)
!7737 = !DILocation(line: 1528, column: 7, scope: !7734)
!7738 = !DILocation(line: 1528, column: 11, scope: !7734)
!7739 = !DILocation(line: 1529, column: 4, scope: !7734)
!7740 = !DILocation(line: 1529, column: 7, scope: !7734)
!7741 = !DILocation(line: 1526, column: 7, scope: !7728)
!7742 = !DILocation(line: 1532, column: 7, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 1532, column: 7)
!7744 = !DILocation(line: 1533, column: 7, scope: !7743)
!7745 = !DILocation(line: 1533, column: 10, scope: !7743)
!7746 = !DILocation(line: 1532, column: 7, scope: !7728)
!7747 = !DILocation(line: 1535, column: 15, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1534, column: 5)
!7749 = !DILocation(line: 1535, column: 7, scope: !7748)
!7750 = !DILocation(line: 1538, column: 12, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 1536, column: 2)
!7752 = !DILocation(line: 1538, column: 4, scope: !7751)
!7753 = !DILocation(line: 1541, column: 12, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 1541, column: 12)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 1539, column: 6)
!7756 = !DILocation(line: 1541, column: 40, scope: !7754)
!7757 = !DILocation(line: 1541, column: 37, scope: !7754)
!7758 = !DILocation(line: 1541, column: 12, scope: !7755)
!7759 = !DILocation(line: 1545, column: 8, scope: !7755)
!7760 = !DILocation(line: 1554, column: 1, scope: !7728)
!7761 = distinct !DISubprogram(name: "analyze_siv_subscript", scope: !3, file: !3, line: 2486, type: !7762, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{null, !506, !506, !7456, !7456, !864, !499}
!7764 = !{!7765, !7766, !7767, !7768, !7769, !7770, !7771}
!7765 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7761, file: !3, line: 2486, type: !506)
!7766 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7761, file: !3, line: 2487, type: !506)
!7767 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !7761, file: !3, line: 2488, type: !7456)
!7768 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !7761, file: !3, line: 2489, type: !7456)
!7769 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !7761, file: !3, line: 2490, type: !864)
!7770 = !DILocalVariable(name: "loop_nest_num", arg: 6, scope: !7761, file: !3, line: 2491, type: !499)
!7771 = !DILabel(scope: !7772, name: "siv_subscript_dontknow", file: !3, line: 2549)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2548, column: 5)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 2508, column: 12)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 2503, column: 12)
!7775 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2498, column: 7)
!7776 = !DILocation(line: 0, scope: !7761)
!7777 = !DILocation(line: 2493, column: 27, scope: !7761)
!7778 = !DILocation(line: 2495, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2495, column: 7)
!7780 = !DILocation(line: 2495, column: 17, scope: !7779)
!7781 = !DILocation(line: 2495, column: 21, scope: !7779)
!7782 = !DILocation(line: 2495, column: 32, scope: !7779)
!7783 = !DILocation(line: 2495, column: 7, scope: !7761)
!7784 = !DILocation(line: 2496, column: 5, scope: !7779)
!7785 = !DILocation(line: 2498, column: 7, scope: !7775)
!7786 = !DILocation(line: 2499, column: 7, scope: !7775)
!7787 = !DILocation(line: 2499, column: 10, scope: !7775)
!7788 = !DILocation(line: 2498, column: 7, scope: !7761)
!7789 = !DILocation(line: 2500, column: 5, scope: !7775)
!7790 = !DILocation(line: 2503, column: 12, scope: !7774)
!7791 = !DILocation(line: 2504, column: 5, scope: !7774)
!7792 = !DILocation(line: 2504, column: 8, scope: !7774)
!7793 = !DILocation(line: 2503, column: 12, scope: !7775)
!7794 = !DILocation(line: 2505, column: 5, scope: !7774)
!7795 = !DILocation(line: 2508, column: 12, scope: !7773)
!7796 = !DILocation(line: 2509, column: 5, scope: !7773)
!7797 = !DILocation(line: 2509, column: 8, scope: !7773)
!7798 = !DILocation(line: 2508, column: 12, scope: !7774)
!7799 = !DILocation(line: 2511, column: 12, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2511, column: 11)
!7801 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2510, column: 5)
!7802 = !DILocation(line: 2512, column: 4, scope: !7800)
!7803 = !DILocation(line: 2512, column: 8, scope: !7800)
!7804 = !DILocation(line: 2511, column: 11, scope: !7801)
!7805 = !DILocation(line: 2514, column: 4, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2513, column: 2)
!7807 = !DILocation(line: 2518, column: 8, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 2518, column: 8)
!7809 = !DILocation(line: 2519, column: 8, scope: !7808)
!7810 = !DILocation(line: 2519, column: 11, scope: !7808)
!7811 = !DILocation(line: 2518, column: 8, scope: !7806)
!7812 = !DILocation(line: 2520, column: 44, scope: !7808)
!7813 = !DILocation(line: 2520, column: 6, scope: !7808)
!7814 = !DILocation(line: 2521, column: 13, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2521, column: 13)
!7816 = !DILocation(line: 2522, column: 6, scope: !7815)
!7817 = !DILocation(line: 2522, column: 9, scope: !7815)
!7818 = !DILocation(line: 2521, column: 13, scope: !7808)
!7819 = !DILocation(line: 2523, column: 42, scope: !7815)
!7820 = !DILocation(line: 2523, column: 6, scope: !7815)
!7821 = !DILocation(line: 2525, column: 40, scope: !7815)
!7822 = !DILocation(line: 2527, column: 16, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2527, column: 16)
!7824 = !DILocation(line: 2527, column: 16, scope: !7800)
!7825 = !DILocation(line: 2530, column: 37, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2529, column: 2)
!7827 = !DILocation(line: 2530, column: 46, scope: !7826)
!7828 = !DILocation(line: 2530, column: 4, scope: !7826)
!7829 = !DILocation(line: 2534, column: 8, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2534, column: 8)
!7831 = !DILocation(line: 2535, column: 8, scope: !7830)
!7832 = !DILocation(line: 2535, column: 11, scope: !7830)
!7833 = !DILocation(line: 2534, column: 8, scope: !7826)
!7834 = !DILocation(line: 2536, column: 44, scope: !7830)
!7835 = !DILocation(line: 2536, column: 6, scope: !7830)
!7836 = !DILocation(line: 2537, column: 13, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 2537, column: 13)
!7838 = !DILocation(line: 2538, column: 6, scope: !7837)
!7839 = !DILocation(line: 2538, column: 9, scope: !7837)
!7840 = !DILocation(line: 2537, column: 13, scope: !7830)
!7841 = !DILocation(line: 2539, column: 42, scope: !7837)
!7842 = !DILocation(line: 2539, column: 6, scope: !7837)
!7843 = !DILocation(line: 2541, column: 40, scope: !7837)
!7844 = !DILocation(line: 2549, column: 5, scope: !7772)
!7845 = !DILocation(line: 2550, column: 11, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2550, column: 11)
!7847 = !DILocation(line: 2550, column: 21, scope: !7846)
!7848 = !DILocation(line: 2550, column: 25, scope: !7846)
!7849 = !DILocation(line: 2550, column: 36, scope: !7846)
!7850 = !DILocation(line: 2550, column: 11, scope: !7772)
!7851 = !DILocation(line: 2551, column: 2, scope: !7846)
!7852 = !DILocation(line: 2552, column: 21, scope: !7772)
!7853 = !DILocation(line: 2552, column: 19, scope: !7772)
!7854 = !DILocation(line: 2553, column: 21, scope: !7772)
!7855 = !DILocation(line: 2553, column: 19, scope: !7772)
!7856 = !DILocation(line: 2554, column: 25, scope: !7772)
!7857 = !DILocation(line: 2554, column: 23, scope: !7772)
!7858 = !DILocation(line: 2555, column: 45, scope: !7772)
!7859 = !DILocation(line: 2558, column: 7, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2558, column: 7)
!7861 = !DILocation(line: 2558, column: 17, scope: !7860)
!7862 = !DILocation(line: 2558, column: 21, scope: !7860)
!7863 = !DILocation(line: 2558, column: 32, scope: !7860)
!7864 = !DILocation(line: 2558, column: 7, scope: !7761)
!7865 = !DILocation(line: 2559, column: 5, scope: !7860)
!7866 = !DILocation(line: 2560, column: 1, scope: !7761)
!7867 = distinct !DISubprogram(name: "analyze_miv_subscript", scope: !3, file: !3, line: 2596, type: !7454, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7868)
!7868 = !{!7869, !7870, !7871, !7872, !7873, !7874, !7875, !7876}
!7869 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !7867, file: !3, line: 2596, type: !506)
!7870 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !7867, file: !3, line: 2597, type: !506)
!7871 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !7867, file: !3, line: 2598, type: !7456)
!7872 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !7867, file: !3, line: 2599, type: !7456)
!7873 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !7867, file: !3, line: 2600, type: !864)
!7874 = !DILocalVariable(name: "loop_nest", arg: 6, scope: !7867, file: !3, line: 2601, type: !1045)
!7875 = !DILocalVariable(name: "type", scope: !7867, file: !3, line: 2611, type: !506)
!7876 = !DILocalVariable(name: "difference", scope: !7867, file: !3, line: 2611, type: !506)
!7877 = !DILocation(line: 0, scope: !7867)
!7878 = !DILocation(line: 2613, column: 27, scope: !7867)
!7879 = !DILocation(line: 2614, column: 7, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2614, column: 7)
!7881 = !DILocation(line: 2614, column: 17, scope: !7880)
!7882 = !DILocation(line: 2614, column: 21, scope: !7880)
!7883 = !DILocation(line: 2614, column: 32, scope: !7880)
!7884 = !DILocation(line: 2614, column: 7, scope: !7867)
!7885 = !DILocation(line: 2615, column: 5, scope: !7880)
!7886 = !DILocation(line: 2617, column: 33, scope: !7867)
!7887 = !DILocation(line: 2617, column: 54, scope: !7867)
!7888 = !DILocation(line: 2617, column: 10, scope: !7867)
!7889 = !DILocation(line: 2618, column: 13, scope: !7867)
!7890 = !DILocation(line: 2619, column: 13, scope: !7867)
!7891 = !DILocation(line: 2620, column: 16, scope: !7867)
!7892 = !DILocation(line: 2622, column: 7, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2622, column: 7)
!7894 = !DILocation(line: 2622, column: 7, scope: !7867)
!7895 = !DILocation(line: 2626, column: 52, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 2623, column: 5)
!7897 = !DILocation(line: 2626, column: 37, scope: !7896)
!7898 = !DILocation(line: 2626, column: 21, scope: !7896)
!7899 = !DILocation(line: 2626, column: 19, scope: !7896)
!7900 = !DILocation(line: 2627, column: 52, scope: !7896)
!7901 = !DILocation(line: 2627, column: 37, scope: !7896)
!7902 = !DILocation(line: 2627, column: 21, scope: !7896)
!7903 = !DILocation(line: 2627, column: 19, scope: !7896)
!7904 = !DILocation(line: 2629, column: 6, scope: !7896)
!7905 = !DILocation(line: 2628, column: 25, scope: !7896)
!7906 = !DILocation(line: 2628, column: 23, scope: !7896)
!7907 = !DILocation(line: 2630, column: 41, scope: !7896)
!7908 = !DILocation(line: 2631, column: 5, scope: !7896)
!7909 = !DILocation(line: 2633, column: 12, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 2633, column: 12)
!7911 = !DILocation(line: 2637, column: 5, scope: !7910)
!7912 = !DILocation(line: 2637, column: 9, scope: !7910)
!7913 = !DILocation(line: 2633, column: 12, scope: !7893)
!7914 = !DILocation(line: 2644, column: 21, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2638, column: 5)
!7916 = !DILocation(line: 2644, column: 19, scope: !7915)
!7917 = !DILocation(line: 2645, column: 21, scope: !7915)
!7918 = !DILocation(line: 2645, column: 19, scope: !7915)
!7919 = !DILocation(line: 2646, column: 25, scope: !7915)
!7920 = !DILocation(line: 2646, column: 23, scope: !7915)
!7921 = !DILocation(line: 2647, column: 43, scope: !7915)
!7922 = !DILocation(line: 2648, column: 5, scope: !7915)
!7923 = !DILocation(line: 2650, column: 77, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2650, column: 12)
!7925 = !DILocation(line: 2650, column: 12, scope: !7924)
!7926 = !DILocation(line: 2651, column: 5, scope: !7924)
!7927 = !DILocation(line: 2651, column: 9, scope: !7924)
!7928 = !DILocation(line: 2652, column: 5, scope: !7924)
!7929 = !DILocation(line: 2652, column: 73, scope: !7924)
!7930 = !DILocation(line: 2652, column: 8, scope: !7924)
!7931 = !DILocation(line: 2653, column: 5, scope: !7924)
!7932 = !DILocation(line: 2653, column: 9, scope: !7924)
!7933 = !DILocation(line: 2650, column: 12, scope: !7910)
!7934 = !DILocation(line: 2669, column: 7, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 2654, column: 5)
!7936 = !DILocation(line: 2672, column: 11, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2672, column: 11)
!7938 = !DILocation(line: 2673, column: 5, scope: !7937)
!7939 = !DILocation(line: 2673, column: 8, scope: !7937)
!7940 = !DILocation(line: 2672, column: 11, scope: !7935)
!7941 = !DILocation(line: 2674, column: 40, scope: !7937)
!7942 = !DILocation(line: 2674, column: 2, scope: !7937)
!7943 = !DILocation(line: 2675, column: 16, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2675, column: 16)
!7945 = !DILocation(line: 2676, column: 9, scope: !7944)
!7946 = !DILocation(line: 2676, column: 12, scope: !7944)
!7947 = !DILocation(line: 2675, column: 16, scope: !7937)
!7948 = !DILocation(line: 2677, column: 38, scope: !7944)
!7949 = !DILocation(line: 2677, column: 2, scope: !7944)
!7950 = !DILocation(line: 2679, column: 36, scope: !7944)
!7951 = !DILocation(line: 2685, column: 11, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 2685, column: 11)
!7953 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 2683, column: 5)
!7954 = !DILocation(line: 2685, column: 21, scope: !7952)
!7955 = !DILocation(line: 2685, column: 25, scope: !7952)
!7956 = !DILocation(line: 2685, column: 36, scope: !7952)
!7957 = !DILocation(line: 2685, column: 11, scope: !7953)
!7958 = !DILocation(line: 2686, column: 2, scope: !7952)
!7959 = !DILocation(line: 2688, column: 21, scope: !7953)
!7960 = !DILocation(line: 2688, column: 19, scope: !7953)
!7961 = !DILocation(line: 2689, column: 21, scope: !7953)
!7962 = !DILocation(line: 2689, column: 19, scope: !7953)
!7963 = !DILocation(line: 2690, column: 25, scope: !7953)
!7964 = !DILocation(line: 2690, column: 23, scope: !7953)
!7965 = !DILocation(line: 2691, column: 45, scope: !7953)
!7966 = !DILocation(line: 2694, column: 7, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2694, column: 7)
!7968 = !DILocation(line: 2694, column: 17, scope: !7967)
!7969 = !DILocation(line: 2694, column: 21, scope: !7967)
!7970 = !DILocation(line: 2694, column: 32, scope: !7967)
!7971 = !DILocation(line: 2694, column: 7, scope: !7867)
!7972 = !DILocation(line: 2695, column: 5, scope: !7967)
!7973 = !DILocation(line: 2696, column: 1, scope: !7867)
!7974 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !164, file: !164, line: 184, type: !7975, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7977)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{!1880, !499}
!7977 = !{!7978}
!7978 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7974, file: !164, line: 184, type: !499)
!7979 = !DILocation(line: 0, scope: !7974)
!7980 = !DILocation(line: 184, column: 1, scope: !7974)
!7981 = distinct !DISubprogram(name: "evolution_function_is_constant_p", scope: !3241, file: !3241, line: 161, type: !3242, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7982)
!7982 = !{!7983}
!7983 = !DILocalVariable(name: "chrec", arg: 1, scope: !7981, file: !3241, line: 161, type: !3244)
!7984 = !DILocation(line: 0, scope: !7981)
!7985 = !DILocation(line: 163, column: 13, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7981, file: !3241, line: 163, column: 7)
!7987 = !DILocation(line: 163, column: 7, scope: !7981)
!7988 = !DILocation(line: 166, column: 11, scope: !7981)
!7989 = !DILocation(line: 166, column: 3, scope: !7981)
!7990 = !DILocation(line: 0, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7981, file: !3241, line: 167, column: 5)
!7992 = !DILocation(line: 175, column: 1, scope: !7981)
!7993 = distinct !DISubprogram(name: "signed_type_for_types", scope: !3, file: !3, line: 1028, type: !7994, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7996)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{!506, !506, !506}
!7996 = !{!7997, !7998}
!7997 = !DILocalVariable(name: "ta", arg: 1, scope: !7993, file: !3, line: 1028, type: !506)
!7998 = !DILocalVariable(name: "tb", arg: 2, scope: !7993, file: !3, line: 1028, type: !506)
!7999 = !DILocation(line: 0, scope: !7993)
!8000 = !DILocation(line: 1030, column: 7, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1030, column: 7)
!8002 = !DILocation(line: 1030, column: 29, scope: !8001)
!8003 = !DILocation(line: 1030, column: 27, scope: !8001)
!8004 = !DILocation(line: 1030, column: 7, scope: !7993)
!8005 = !DILocation(line: 1031, column: 12, scope: !8001)
!8006 = !DILocation(line: 1031, column: 5, scope: !8001)
!8007 = !DILocation(line: 1033, column: 12, scope: !8001)
!8008 = !DILocation(line: 1033, column: 5, scope: !8001)
!8009 = !DILocation(line: 0, scope: !8001)
!8010 = !DILocation(line: 1034, column: 1, scope: !7993)
!8011 = distinct !DISubprogram(name: "conflict_fn_no_dependence", scope: !3, file: !3, line: 1159, type: !6671, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8012)
!8012 = !{!8013}
!8013 = !DILocalVariable(name: "fn", scope: !8011, file: !3, line: 1161, type: !1956)
!8014 = !DILocation(line: 1161, column: 27, scope: !8011)
!8015 = !DILocation(line: 0, scope: !8011)
!8016 = !DILocation(line: 1162, column: 7, scope: !8011)
!8017 = !DILocation(line: 1162, column: 9, scope: !8011)
!8018 = !DILocation(line: 1164, column: 3, scope: !8011)
!8019 = distinct !DISubprogram(name: "evolution_function_is_affine_in_loop", scope: !3241, file: !3241, line: 180, type: !8020, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8022)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!498, !3244, !499}
!8022 = !{!8023, !8024}
!8023 = !DILocalVariable(name: "chrec", arg: 1, scope: !8019, file: !3241, line: 180, type: !3244)
!8024 = !DILocalVariable(name: "loopnum", arg: 2, scope: !8019, file: !3241, line: 180, type: !499)
!8025 = !DILocation(line: 0, scope: !8019)
!8026 = !DILocation(line: 182, column: 13, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8019, file: !3241, line: 182, column: 7)
!8028 = !DILocation(line: 182, column: 7, scope: !8019)
!8029 = !DILocation(line: 185, column: 11, scope: !8019)
!8030 = !DILocation(line: 185, column: 3, scope: !8019)
!8031 = !DILocation(line: 188, column: 46, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !3241, line: 188, column: 11)
!8033 = distinct !DILexicalBlock(scope: !8019, file: !3241, line: 186, column: 5)
!8034 = !DILocation(line: 188, column: 11, scope: !8032)
!8035 = !DILocation(line: 189, column: 4, scope: !8032)
!8036 = !DILocation(line: 189, column: 42, scope: !8032)
!8037 = !DILocation(line: 189, column: 7, scope: !8032)
!8038 = !DILocation(line: 188, column: 11, scope: !8033)
!8039 = !DILocation(line: 192, column: 2, scope: !8032)
!8040 = !DILocation(line: 197, column: 1, scope: !8019)
!8041 = distinct !DISubprogram(name: "analyze_siv_subscript_cst_affine", scope: !3, file: !3, line: 1745, type: !7653, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8042)
!8042 = !{!8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054, !8065, !8066, !8074}
!8043 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !8041, file: !3, line: 1745, type: !506)
!8044 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !8041, file: !3, line: 1746, type: !506)
!8045 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !8041, file: !3, line: 1747, type: !7456)
!8046 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !8041, file: !3, line: 1748, type: !7456)
!8047 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !8041, file: !3, line: 1749, type: !864)
!8048 = !DILocalVariable(name: "value0", scope: !8041, file: !3, line: 1751, type: !498)
!8049 = !DILocalVariable(name: "value1", scope: !8041, file: !3, line: 1751, type: !498)
!8050 = !DILocalVariable(name: "value2", scope: !8041, file: !3, line: 1751, type: !498)
!8051 = !DILocalVariable(name: "type", scope: !8041, file: !3, line: 1752, type: !506)
!8052 = !DILocalVariable(name: "difference", scope: !8041, file: !3, line: 1752, type: !506)
!8053 = !DILocalVariable(name: "tmp", scope: !8041, file: !3, line: 1752, type: !506)
!8054 = !DILocalVariable(name: "numiter", scope: !8055, file: !3, line: 1796, type: !562)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1795, column: 7)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 1794, column: 9)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1788, column: 3)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 1787, column: 12)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 1786, column: 6)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 1774, column: 8)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1773, column: 2)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1772, column: 11)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1771, column: 5)
!8064 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1759, column: 7)
!8065 = !DILocalVariable(name: "loop", scope: !8055, file: !3, line: 1797, type: !1045)
!8066 = !DILocalVariable(name: "numiter", scope: !8067, file: !3, line: 1876, type: !562)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1875, column: 7)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 1874, column: 9)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 1869, column: 3)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1868, column: 12)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 1867, column: 6)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 1855, column: 8)
!8073 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1854, column: 2)
!8074 = !DILocalVariable(name: "loop", scope: !8067, file: !3, line: 1877, type: !1045)
!8075 = !DILocation(line: 0, scope: !8041)
!8076 = !DILocation(line: 1751, column: 3, scope: !8041)
!8077 = !DILocation(line: 1754, column: 33, scope: !8041)
!8078 = !DILocation(line: 1754, column: 54, scope: !8041)
!8079 = !DILocation(line: 1754, column: 10, scope: !8041)
!8080 = !DILocation(line: 1755, column: 13, scope: !8041)
!8081 = !DILocation(line: 1756, column: 13, scope: !8041)
!8082 = !DILocation(line: 1757, column: 40, scope: !8041)
!8083 = !DILocation(line: 1757, column: 16, scope: !8041)
!8084 = !DILocation(line: 1759, column: 27, scope: !8064)
!8085 = !DILocation(line: 1759, column: 8, scope: !8064)
!8086 = !DILocation(line: 1759, column: 7, scope: !8041)
!8087 = !DILocation(line: 1761, column: 11, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1761, column: 11)
!8089 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1760, column: 5)
!8090 = !DILocation(line: 1761, column: 21, scope: !8088)
!8091 = !DILocation(line: 1761, column: 25, scope: !8088)
!8092 = !DILocation(line: 1761, column: 36, scope: !8088)
!8093 = !DILocation(line: 1761, column: 11, scope: !8089)
!8094 = !DILocation(line: 1762, column: 2, scope: !8088)
!8095 = !DILocation(line: 1764, column: 45, scope: !8089)
!8096 = !DILocation(line: 1765, column: 21, scope: !8089)
!8097 = !DILocation(line: 1765, column: 19, scope: !8089)
!8098 = !DILocation(line: 1766, column: 21, scope: !8089)
!8099 = !DILocation(line: 1766, column: 19, scope: !8089)
!8100 = !DILocation(line: 1767, column: 25, scope: !8089)
!8101 = !DILocation(line: 1767, column: 23, scope: !8089)
!8102 = !DILocation(line: 1768, column: 7, scope: !8089)
!8103 = !DILocation(line: 1772, column: 11, scope: !8062)
!8104 = !DILocation(line: 1772, column: 18, scope: !8062)
!8105 = !DILocation(line: 0, scope: !8062)
!8106 = !DILocation(line: 1772, column: 11, scope: !8063)
!8107 = !DILocation(line: 1774, column: 9, scope: !8060)
!8108 = !DILocation(line: 1774, column: 8, scope: !8061)
!8109 = !DILocation(line: 1776, column: 12, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 1776, column: 12)
!8111 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 1775, column: 6)
!8112 = !DILocation(line: 1776, column: 22, scope: !8110)
!8113 = !DILocation(line: 1776, column: 26, scope: !8110)
!8114 = !DILocation(line: 1776, column: 37, scope: !8110)
!8115 = !DILocation(line: 1776, column: 12, scope: !8111)
!8116 = !DILocation(line: 1777, column: 3, scope: !8110)
!8117 = !DILocation(line: 1779, column: 22, scope: !8111)
!8118 = !DILocation(line: 1779, column: 20, scope: !8111)
!8119 = !DILocation(line: 1780, column: 22, scope: !8111)
!8120 = !DILocation(line: 1780, column: 20, scope: !8111)
!8121 = !DILocation(line: 1781, column: 26, scope: !8111)
!8122 = !DILocation(line: 1781, column: 24, scope: !8111)
!8123 = !DILocation(line: 1782, column: 46, scope: !8111)
!8124 = !DILocation(line: 1783, column: 8, scope: !8111)
!8125 = !DILocation(line: 1787, column: 12, scope: !8058)
!8126 = !DILocation(line: 1787, column: 19, scope: !8058)
!8127 = !DILocation(line: 1787, column: 12, scope: !8059)
!8128 = !DILocation(line: 1794, column: 30, scope: !8056)
!8129 = !DILocation(line: 1794, column: 9, scope: !8056)
!8130 = !DILocation(line: 1794, column: 9, scope: !8057)
!8131 = !DILocation(line: 1797, column: 29, scope: !8055)
!8132 = !DILocation(line: 0, scope: !8055)
!8133 = !DILocation(line: 1799, column: 54, scope: !8055)
!8134 = !DILocation(line: 1799, column: 39, scope: !8055)
!8135 = !DILocation(line: 1799, column: 23, scope: !8055)
!8136 = !DILocation(line: 1799, column: 21, scope: !8055)
!8137 = !DILocation(line: 1800, column: 15, scope: !8055)
!8138 = !DILocation(line: 1803, column: 39, scope: !8055)
!8139 = !DILocation(line: 1803, column: 23, scope: !8055)
!8140 = !DILocation(line: 1803, column: 21, scope: !8055)
!8141 = !DILocation(line: 1804, column: 27, scope: !8055)
!8142 = !DILocation(line: 1804, column: 25, scope: !8055)
!8143 = !DILocation(line: 1809, column: 19, scope: !8055)
!8144 = !DILocation(line: 1811, column: 21, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 1811, column: 13)
!8146 = !DILocation(line: 1812, column: 6, scope: !8145)
!8147 = !DILocation(line: 1812, column: 9, scope: !8145)
!8148 = !DILocation(line: 1812, column: 41, scope: !8145)
!8149 = !DILocation(line: 1811, column: 13, scope: !8055)
!8150 = !DILocation(line: 1814, column: 30, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 1813, column: 4)
!8152 = !DILocation(line: 1814, column: 6, scope: !8151)
!8153 = !DILocation(line: 1815, column: 30, scope: !8151)
!8154 = !DILocation(line: 1815, column: 6, scope: !8151)
!8155 = !DILocation(line: 1816, column: 20, scope: !8151)
!8156 = !DILocation(line: 1816, column: 18, scope: !8151)
!8157 = !DILocation(line: 1817, column: 20, scope: !8151)
!8158 = !DILocation(line: 1817, column: 18, scope: !8151)
!8159 = !DILocation(line: 1818, column: 24, scope: !8151)
!8160 = !DILocation(line: 1818, column: 22, scope: !8151)
!8161 = !DILocation(line: 1819, column: 42, scope: !8151)
!8162 = !DILocation(line: 1820, column: 6, scope: !8151)
!8163 = !DILocation(line: 1822, column: 43, scope: !8055)
!8164 = !DILocation(line: 1823, column: 9, scope: !8055)
!8165 = !DILocation(line: 1830, column: 23, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1829, column: 7)
!8167 = !DILocation(line: 1830, column: 21, scope: !8166)
!8168 = !DILocation(line: 1831, column: 23, scope: !8166)
!8169 = !DILocation(line: 1831, column: 21, scope: !8166)
!8170 = !DILocation(line: 1832, column: 27, scope: !8166)
!8171 = !DILocation(line: 1832, column: 25, scope: !8166)
!8172 = !DILocation(line: 1833, column: 45, scope: !8166)
!8173 = !DILocation(line: 1834, column: 9, scope: !8166)
!8174 = !DILocation(line: 1845, column: 19, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1839, column: 3)
!8176 = !DILocation(line: 1845, column: 17, scope: !8175)
!8177 = !DILocation(line: 1846, column: 19, scope: !8175)
!8178 = !DILocation(line: 1846, column: 17, scope: !8175)
!8179 = !DILocation(line: 1847, column: 23, scope: !8175)
!8180 = !DILocation(line: 1847, column: 21, scope: !8175)
!8181 = !DILocation(line: 1848, column: 41, scope: !8175)
!8182 = !DILocation(line: 1849, column: 5, scope: !8175)
!8183 = !DILocation(line: 1855, column: 9, scope: !8072)
!8184 = !DILocation(line: 1855, column: 8, scope: !8073)
!8185 = !DILocation(line: 1857, column: 12, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 1857, column: 12)
!8187 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 1856, column: 6)
!8188 = !DILocation(line: 1857, column: 22, scope: !8186)
!8189 = !DILocation(line: 1857, column: 26, scope: !8186)
!8190 = !DILocation(line: 1857, column: 37, scope: !8186)
!8191 = !DILocation(line: 1857, column: 12, scope: !8187)
!8192 = !DILocation(line: 1858, column: 3, scope: !8186)
!8193 = !DILocation(line: 1860, column: 22, scope: !8187)
!8194 = !DILocation(line: 1860, column: 20, scope: !8187)
!8195 = !DILocation(line: 1861, column: 22, scope: !8187)
!8196 = !DILocation(line: 1861, column: 20, scope: !8187)
!8197 = !DILocation(line: 1862, column: 26, scope: !8187)
!8198 = !DILocation(line: 1862, column: 24, scope: !8187)
!8199 = !DILocation(line: 1863, column: 46, scope: !8187)
!8200 = !DILocation(line: 1864, column: 8, scope: !8187)
!8201 = !DILocation(line: 1868, column: 12, scope: !8070)
!8202 = !DILocation(line: 1868, column: 19, scope: !8070)
!8203 = !DILocation(line: 1868, column: 12, scope: !8071)
!8204 = !DILocation(line: 1874, column: 30, scope: !8068)
!8205 = !DILocation(line: 1874, column: 9, scope: !8068)
!8206 = !DILocation(line: 1874, column: 9, scope: !8069)
!8207 = !DILocation(line: 1877, column: 29, scope: !8067)
!8208 = !DILocation(line: 0, scope: !8067)
!8209 = !DILocation(line: 1879, column: 54, scope: !8067)
!8210 = !DILocation(line: 1879, column: 39, scope: !8067)
!8211 = !DILocation(line: 1879, column: 23, scope: !8067)
!8212 = !DILocation(line: 1879, column: 21, scope: !8067)
!8213 = !DILocation(line: 1880, column: 15, scope: !8067)
!8214 = !DILocation(line: 1882, column: 39, scope: !8067)
!8215 = !DILocation(line: 1882, column: 23, scope: !8067)
!8216 = !DILocation(line: 1882, column: 21, scope: !8067)
!8217 = !DILocation(line: 1883, column: 27, scope: !8067)
!8218 = !DILocation(line: 1883, column: 25, scope: !8067)
!8219 = !DILocation(line: 1887, column: 19, scope: !8067)
!8220 = !DILocation(line: 1889, column: 21, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1889, column: 13)
!8222 = !DILocation(line: 1890, column: 6, scope: !8221)
!8223 = !DILocation(line: 1890, column: 9, scope: !8221)
!8224 = !DILocation(line: 1890, column: 41, scope: !8221)
!8225 = !DILocation(line: 1889, column: 13, scope: !8067)
!8226 = !DILocation(line: 1892, column: 30, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 1891, column: 4)
!8228 = !DILocation(line: 1892, column: 6, scope: !8227)
!8229 = !DILocation(line: 1893, column: 30, scope: !8227)
!8230 = !DILocation(line: 1893, column: 6, scope: !8227)
!8231 = !DILocation(line: 1894, column: 20, scope: !8227)
!8232 = !DILocation(line: 1894, column: 18, scope: !8227)
!8233 = !DILocation(line: 1895, column: 20, scope: !8227)
!8234 = !DILocation(line: 1895, column: 18, scope: !8227)
!8235 = !DILocation(line: 1896, column: 24, scope: !8227)
!8236 = !DILocation(line: 1896, column: 22, scope: !8227)
!8237 = !DILocation(line: 1897, column: 42, scope: !8227)
!8238 = !DILocation(line: 1898, column: 6, scope: !8227)
!8239 = !DILocation(line: 1900, column: 43, scope: !8067)
!8240 = !DILocation(line: 1901, column: 9, scope: !8067)
!8241 = !DILocation(line: 1908, column: 23, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1907, column: 7)
!8243 = !DILocation(line: 1908, column: 21, scope: !8242)
!8244 = !DILocation(line: 1909, column: 23, scope: !8242)
!8245 = !DILocation(line: 1909, column: 21, scope: !8242)
!8246 = !DILocation(line: 1910, column: 27, scope: !8242)
!8247 = !DILocation(line: 1910, column: 25, scope: !8242)
!8248 = !DILocation(line: 1911, column: 45, scope: !8242)
!8249 = !DILocation(line: 1912, column: 9, scope: !8242)
!8250 = !DILocation(line: 1922, column: 19, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 1916, column: 3)
!8252 = !DILocation(line: 1922, column: 17, scope: !8251)
!8253 = !DILocation(line: 1923, column: 19, scope: !8251)
!8254 = !DILocation(line: 1923, column: 17, scope: !8251)
!8255 = !DILocation(line: 1924, column: 23, scope: !8251)
!8256 = !DILocation(line: 1924, column: 21, scope: !8251)
!8257 = !DILocation(line: 1925, column: 41, scope: !8251)
!8258 = !DILocation(line: 1926, column: 5, scope: !8251)
!8259 = !DILocation(line: 1931, column: 1, scope: !8041)
!8260 = distinct !DISubprogram(name: "analyze_subscript_affine_affine", scope: !3, file: !3, line: 2170, type: !7653, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8261)
!8261 = !{!8262, !8263, !8264, !8265, !8266, !8267, !8268, !8269, !8270, !8271, !8272, !8273, !8274, !8276, !8277, !8278, !8283, !8284, !8285, !8286, !8287, !8288, !8289, !8295, !8296, !8297, !8298, !8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308, !8309, !8312, !8313}
!8262 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !8260, file: !3, line: 2170, type: !506)
!8263 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !8260, file: !3, line: 2171, type: !506)
!8264 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !8260, file: !3, line: 2172, type: !7456)
!8265 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !8260, file: !3, line: 2173, type: !7456)
!8266 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !8260, file: !3, line: 2174, type: !864)
!8267 = !DILocalVariable(name: "nb_vars_a", scope: !8260, file: !3, line: 2176, type: !7)
!8268 = !DILocalVariable(name: "nb_vars_b", scope: !8260, file: !3, line: 2176, type: !7)
!8269 = !DILocalVariable(name: "dim", scope: !8260, file: !3, line: 2176, type: !7)
!8270 = !DILocalVariable(name: "init_a", scope: !8260, file: !3, line: 2177, type: !562)
!8271 = !DILocalVariable(name: "init_b", scope: !8260, file: !3, line: 2177, type: !562)
!8272 = !DILocalVariable(name: "gamma", scope: !8260, file: !3, line: 2177, type: !562)
!8273 = !DILocalVariable(name: "gcd_alpha_beta", scope: !8260, file: !3, line: 2177, type: !562)
!8274 = !DILocalVariable(name: "A", scope: !8260, file: !3, line: 2178, type: !8275)
!8275 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_matrix", file: !1905, line: 42, baseType: !2965)
!8276 = !DILocalVariable(name: "U", scope: !8260, file: !3, line: 2178, type: !8275)
!8277 = !DILocalVariable(name: "S", scope: !8260, file: !3, line: 2178, type: !8275)
!8278 = !DILocalVariable(name: "step_a", scope: !8279, file: !3, line: 2227, type: !562)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2226, column: 2)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2225, column: 11)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2224, column: 5)
!8282 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2223, column: 7)
!8283 = !DILocalVariable(name: "step_b", scope: !8279, file: !3, line: 2227, type: !562)
!8284 = !DILocalVariable(name: "niter", scope: !8279, file: !3, line: 2228, type: !562)
!8285 = !DILocalVariable(name: "niter_a", scope: !8279, file: !3, line: 2228, type: !562)
!8286 = !DILocalVariable(name: "niter_b", scope: !8279, file: !3, line: 2228, type: !562)
!8287 = !DILocalVariable(name: "ova", scope: !8279, file: !3, line: 2229, type: !1963)
!8288 = !DILocalVariable(name: "ovb", scope: !8279, file: !3, line: 2229, type: !1963)
!8289 = !DILocalVariable(name: "i0", scope: !8290, file: !3, line: 2319, type: !562)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 2302, column: 2)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2300, column: 11)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 2298, column: 5)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 2297, column: 12)
!8294 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2287, column: 7)
!8295 = !DILocalVariable(name: "j0", scope: !8290, file: !3, line: 2319, type: !562)
!8296 = !DILocalVariable(name: "i1", scope: !8290, file: !3, line: 2319, type: !562)
!8297 = !DILocalVariable(name: "j1", scope: !8290, file: !3, line: 2319, type: !562)
!8298 = !DILocalVariable(name: "niter_a", scope: !8299, file: !3, line: 2341, type: !562)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 2340, column: 6)
!8300 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 2339, column: 8)
!8301 = !DILocalVariable(name: "niter_b", scope: !8299, file: !3, line: 2343, type: !562)
!8302 = !DILocalVariable(name: "niter", scope: !8299, file: !3, line: 2345, type: !562)
!8303 = !DILocalVariable(name: "tau1", scope: !8299, file: !3, line: 2349, type: !562)
!8304 = !DILocalVariable(name: "x0", scope: !8299, file: !3, line: 2351, type: !562)
!8305 = !DILocalVariable(name: "y0", scope: !8299, file: !3, line: 2352, type: !562)
!8306 = !DILocalVariable(name: "min_multiple", scope: !8299, file: !3, line: 2357, type: !562)
!8307 = !DILocalVariable(name: "x1", scope: !8299, file: !3, line: 2358, type: !562)
!8308 = !DILocalVariable(name: "y1", scope: !8299, file: !3, line: 2359, type: !562)
!8309 = !DILocalVariable(name: "tau2", scope: !8310, file: !3, line: 2363, type: !562)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2362, column: 3)
!8311 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 2361, column: 12)
!8312 = !DILocalVariable(name: "last_conflict", scope: !8310, file: !3, line: 2365, type: !562)
!8313 = !DILabel(scope: !8260, name: "end_analyze_subs_aa", file: !3, line: 2422)
!8314 = !DILocation(line: 0, scope: !8260)
!8315 = !DILocation(line: 2180, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2180, column: 7)
!8317 = !DILocation(line: 2180, column: 7, scope: !8260)
!8318 = !DILocation(line: 2184, column: 52, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 2181, column: 5)
!8320 = !DILocation(line: 2184, column: 37, scope: !8319)
!8321 = !DILocation(line: 2184, column: 21, scope: !8319)
!8322 = !DILocation(line: 2184, column: 19, scope: !8319)
!8323 = !DILocation(line: 2185, column: 52, scope: !8319)
!8324 = !DILocation(line: 2185, column: 37, scope: !8319)
!8325 = !DILocation(line: 2185, column: 21, scope: !8319)
!8326 = !DILocation(line: 2185, column: 19, scope: !8319)
!8327 = !DILocation(line: 2186, column: 25, scope: !8319)
!8328 = !DILocation(line: 2186, column: 23, scope: !8319)
!8329 = !DILocation(line: 2187, column: 7, scope: !8319)
!8330 = !DILocation(line: 2189, column: 7, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2189, column: 7)
!8332 = !DILocation(line: 2189, column: 17, scope: !8331)
!8333 = !DILocation(line: 2189, column: 21, scope: !8331)
!8334 = !DILocation(line: 2189, column: 32, scope: !8331)
!8335 = !DILocation(line: 2189, column: 7, scope: !8260)
!8336 = !DILocation(line: 2190, column: 5, scope: !8331)
!8337 = !DILocation(line: 2203, column: 15, scope: !8260)
!8338 = !DILocation(line: 2204, column: 15, scope: !8260)
!8339 = !DILocation(line: 2206, column: 19, scope: !8260)
!8340 = !DILocation(line: 2207, column: 7, scope: !8260)
!8341 = !DILocation(line: 2208, column: 7, scope: !8260)
!8342 = !DILocation(line: 2209, column: 7, scope: !8260)
!8343 = !DILocation(line: 2211, column: 27, scope: !8260)
!8344 = !DILocation(line: 2211, column: 12, scope: !8260)
!8345 = !DILocation(line: 2212, column: 27, scope: !8260)
!8346 = !DILocation(line: 2212, column: 12, scope: !8260)
!8347 = !DILocation(line: 2213, column: 18, scope: !8260)
!8348 = !DILocation(line: 2223, column: 13, scope: !8282)
!8349 = !DILocation(line: 2223, column: 7, scope: !8260)
!8350 = !DILocation(line: 2225, column: 21, scope: !8280)
!8351 = !DILocation(line: 2225, column: 39, scope: !8280)
!8352 = !DILocation(line: 2225, column: 26, scope: !8280)
!8353 = !DILocation(line: 2229, column: 4, scope: !8279)
!8354 = !DILocation(line: 2231, column: 45, scope: !8279)
!8355 = !DILocation(line: 2231, column: 14, scope: !8279)
!8356 = !DILocation(line: 0, scope: !8279)
!8357 = !DILocation(line: 2233, column: 45, scope: !8279)
!8358 = !DILocation(line: 2233, column: 14, scope: !8279)
!8359 = !DILocation(line: 2235, column: 12, scope: !8279)
!8360 = !DILocation(line: 2236, column: 28, scope: !8279)
!8361 = !DILocation(line: 2236, column: 13, scope: !8279)
!8362 = !DILocation(line: 2237, column: 28, scope: !8279)
!8363 = !DILocation(line: 2237, column: 13, scope: !8279)
!8364 = !DILocation(line: 2239, column: 45, scope: !8279)
!8365 = !DILocation(line: 2239, column: 52, scope: !8279)
!8366 = !DILocation(line: 2239, column: 60, scope: !8279)
!8367 = !DILocation(line: 2239, column: 4, scope: !8279)
!8368 = !DILocation(line: 2242, column: 34, scope: !8279)
!8369 = !DILocation(line: 2242, column: 18, scope: !8279)
!8370 = !DILocation(line: 2242, column: 16, scope: !8279)
!8371 = !DILocation(line: 2243, column: 34, scope: !8279)
!8372 = !DILocation(line: 2243, column: 18, scope: !8279)
!8373 = !DILocation(line: 2243, column: 16, scope: !8279)
!8374 = !DILocation(line: 2244, column: 2, scope: !8280)
!8375 = !DILocation(line: 2244, column: 2, scope: !8279)
!8376 = !DILocation(line: 2246, column: 26, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2246, column: 16)
!8378 = !DILocation(line: 2246, column: 31, scope: !8377)
!8379 = !DILocation(line: 2247, column: 2, scope: !8377)
!8380 = !DILocation(line: 2250, column: 44, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 2250, column: 16)
!8382 = !DILocation(line: 2250, column: 31, scope: !8381)
!8383 = !DILocation(line: 2251, column: 2, scope: !8381)
!8384 = !DILocation(line: 2256, column: 8, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 2256, column: 8)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2255, column: 2)
!8387 = !DILocation(line: 2256, column: 18, scope: !8385)
!8388 = !DILocation(line: 2256, column: 22, scope: !8385)
!8389 = !DILocation(line: 2256, column: 33, scope: !8385)
!8390 = !DILocation(line: 2256, column: 8, scope: !8386)
!8391 = !DILocation(line: 2257, column: 6, scope: !8385)
!8392 = !DILocation(line: 2258, column: 18, scope: !8386)
!8393 = !DILocation(line: 2258, column: 16, scope: !8386)
!8394 = !DILocation(line: 2259, column: 18, scope: !8386)
!8395 = !DILocation(line: 2259, column: 16, scope: !8386)
!8396 = !DILocation(line: 2260, column: 22, scope: !8386)
!8397 = !DILocation(line: 2260, column: 20, scope: !8386)
!8398 = !DILocation(line: 2266, column: 3, scope: !8260)
!8399 = !DILocation(line: 2268, column: 7, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2268, column: 7)
!8401 = !DILocation(line: 2268, column: 15, scope: !8400)
!8402 = !DILocation(line: 2268, column: 7, scope: !8260)
!8403 = !DILocation(line: 2270, column: 15, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 2269, column: 5)
!8405 = !DILocation(line: 2271, column: 7, scope: !8404)
!8406 = !DILocation(line: 2273, column: 20, scope: !8260)
!8407 = !DILocation(line: 2272, column: 5, scope: !8404)
!8408 = !DILocation(line: 2278, column: 22, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2278, column: 7)
!8410 = !DILocation(line: 2278, column: 7, scope: !8260)
!8411 = !DILocation(line: 2280, column: 21, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2279, column: 5)
!8413 = !DILocation(line: 2280, column: 19, scope: !8412)
!8414 = !DILocation(line: 2281, column: 21, scope: !8412)
!8415 = !DILocation(line: 2281, column: 19, scope: !8412)
!8416 = !DILocation(line: 2282, column: 25, scope: !8412)
!8417 = !DILocation(line: 2282, column: 23, scope: !8412)
!8418 = !DILocation(line: 2283, column: 7, scope: !8412)
!8419 = !DILocation(line: 2287, column: 39, scope: !8294)
!8420 = !DILocation(line: 2287, column: 8, scope: !8294)
!8421 = !DILocation(line: 2287, column: 7, scope: !8260)
!8422 = !DILocation(line: 2291, column: 21, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 2288, column: 5)
!8424 = !DILocation(line: 2291, column: 19, scope: !8423)
!8425 = !DILocation(line: 2292, column: 21, scope: !8423)
!8426 = !DILocation(line: 2292, column: 19, scope: !8423)
!8427 = !DILocation(line: 2293, column: 25, scope: !8423)
!8428 = !DILocation(line: 2293, column: 23, scope: !8423)
!8429 = !DILocation(line: 2294, column: 5, scope: !8423)
!8430 = !DILocation(line: 2297, column: 22, scope: !8293)
!8431 = !DILocation(line: 2297, column: 40, scope: !8293)
!8432 = !DILocation(line: 2297, column: 27, scope: !8293)
!8433 = !DILocation(line: 2300, column: 13, scope: !8291)
!8434 = !DILocation(line: 2300, column: 21, scope: !8291)
!8435 = !DILocation(line: 2300, column: 25, scope: !8291)
!8436 = !DILocation(line: 2300, column: 29, scope: !8291)
!8437 = !DILocation(line: 2300, column: 37, scope: !8291)
!8438 = !DILocation(line: 2301, column: 5, scope: !8291)
!8439 = !DILocation(line: 2301, column: 17, scope: !8291)
!8440 = !DILocation(line: 2301, column: 21, scope: !8291)
!8441 = !DILocation(line: 2301, column: 25, scope: !8291)
!8442 = !DILocation(line: 2301, column: 33, scope: !8291)
!8443 = !DILocation(line: 2300, column: 11, scope: !8292)
!8444 = !DILocation(line: 2321, column: 9, scope: !8290)
!8445 = !DILocation(line: 2321, column: 17, scope: !8290)
!8446 = !DILocation(line: 2321, column: 25, scope: !8290)
!8447 = !DILocation(line: 0, scope: !8290)
!8448 = !DILocation(line: 2322, column: 9, scope: !8290)
!8449 = !DILocation(line: 2322, column: 17, scope: !8290)
!8450 = !DILocation(line: 2322, column: 25, scope: !8290)
!8451 = !DILocation(line: 2323, column: 9, scope: !8290)
!8452 = !DILocation(line: 2324, column: 9, scope: !8290)
!8453 = !DILocation(line: 2326, column: 12, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 2326, column: 8)
!8455 = !DILocation(line: 2326, column: 23, scope: !8454)
!8456 = !DILocation(line: 2326, column: 17, scope: !8454)
!8457 = !DILocation(line: 2327, column: 15, scope: !8454)
!8458 = !DILocation(line: 2327, column: 26, scope: !8454)
!8459 = !DILocation(line: 2327, column: 20, scope: !8454)
!8460 = !DILocation(line: 2333, column: 22, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 2328, column: 6)
!8462 = !DILocation(line: 2333, column: 20, scope: !8461)
!8463 = !DILocation(line: 2334, column: 22, scope: !8461)
!8464 = !DILocation(line: 2334, column: 20, scope: !8461)
!8465 = !DILocation(line: 2335, column: 26, scope: !8461)
!8466 = !DILocation(line: 2335, column: 24, scope: !8461)
!8467 = !DILocation(line: 2336, column: 8, scope: !8461)
!8468 = !DILocation(line: 2339, column: 11, scope: !8300)
!8469 = !DILocation(line: 2339, column: 21, scope: !8300)
!8470 = !DILocation(line: 2339, column: 15, scope: !8300)
!8471 = !DILocation(line: 2342, column: 4, scope: !8299)
!8472 = !DILocation(line: 2341, column: 32, scope: !8299)
!8473 = !DILocation(line: 0, scope: !8299)
!8474 = !DILocation(line: 2344, column: 4, scope: !8299)
!8475 = !DILocation(line: 2343, column: 32, scope: !8299)
!8476 = !DILocation(line: 2345, column: 30, scope: !8299)
!8477 = !DILocation(line: 2349, column: 29, scope: !8299)
!8478 = !DILocation(line: 2351, column: 30, scope: !8299)
!8479 = !DILocation(line: 2351, column: 37, scope: !8299)
!8480 = !DILocation(line: 2352, column: 30, scope: !8299)
!8481 = !DILocation(line: 2352, column: 37, scope: !8299)
!8482 = !DILocation(line: 2357, column: 37, scope: !8299)
!8483 = !DILocation(line: 2358, column: 35, scope: !8299)
!8484 = !DILocation(line: 2358, column: 30, scope: !8299)
!8485 = !DILocation(line: 2359, column: 35, scope: !8299)
!8486 = !DILocation(line: 2359, column: 30, scope: !8299)
!8487 = !DILocation(line: 2361, column: 18, scope: !8311)
!8488 = !DILocation(line: 2361, column: 12, scope: !8299)
!8489 = !DILocation(line: 2363, column: 26, scope: !8310)
!8490 = !DILocation(line: 0, scope: !8310)
!8491 = !DILocation(line: 2369, column: 12, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2369, column: 9)
!8493 = !DILocation(line: 2369, column: 27, scope: !8492)
!8494 = !DILocation(line: 2369, column: 21, scope: !8492)
!8495 = !DILocation(line: 2371, column: 23, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 2370, column: 7)
!8497 = !DILocation(line: 2371, column: 21, scope: !8496)
!8498 = !DILocation(line: 2372, column: 23, scope: !8496)
!8499 = !DILocation(line: 2372, column: 21, scope: !8496)
!8500 = !DILocation(line: 2373, column: 27, scope: !8496)
!8501 = !DILocation(line: 2374, column: 9, scope: !8496)
!8502 = !DILocation(line: 2365, column: 46, scope: !8310)
!8503 = !DILocation(line: 2365, column: 51, scope: !8310)
!8504 = !DILocation(line: 2365, column: 40, scope: !8310)
!8505 = !DILocation(line: 2377, column: 25, scope: !8492)
!8506 = !DILocation(line: 2378, column: 3, scope: !8311)
!8507 = !DILocation(line: 0, scope: !8492)
!8508 = !DILocation(line: 2380, column: 21, scope: !8311)
!8509 = !DILocation(line: 2380, column: 19, scope: !8311)
!8510 = !DILocation(line: 2384, column: 29, scope: !8299)
!8511 = !DILocation(line: 2386, column: 8, scope: !8299)
!8512 = !DILocation(line: 2384, column: 11, scope: !8299)
!8513 = !DILocation(line: 2383, column: 5, scope: !8299)
!8514 = !DILocation(line: 2383, column: 3, scope: !8299)
!8515 = !DILocation(line: 2389, column: 29, scope: !8299)
!8516 = !DILocation(line: 2391, column: 8, scope: !8299)
!8517 = !DILocation(line: 2389, column: 11, scope: !8299)
!8518 = !DILocation(line: 2388, column: 5, scope: !8299)
!8519 = !DILocation(line: 2388, column: 3, scope: !8299)
!8520 = !DILocation(line: 2392, column: 6, scope: !8300)
!8521 = !DILocation(line: 2397, column: 12, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 2397, column: 12)
!8523 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 2394, column: 6)
!8524 = !DILocation(line: 2397, column: 22, scope: !8522)
!8525 = !DILocation(line: 2397, column: 26, scope: !8522)
!8526 = !DILocation(line: 2397, column: 37, scope: !8522)
!8527 = !DILocation(line: 2397, column: 12, scope: !8523)
!8528 = !DILocation(line: 2398, column: 3, scope: !8522)
!8529 = !DILocation(line: 2399, column: 22, scope: !8523)
!8530 = !DILocation(line: 2399, column: 20, scope: !8523)
!8531 = !DILocation(line: 2400, column: 22, scope: !8523)
!8532 = !DILocation(line: 2400, column: 20, scope: !8523)
!8533 = !DILocation(line: 2401, column: 26, scope: !8523)
!8534 = !DILocation(line: 2401, column: 24, scope: !8523)
!8535 = !DILocation(line: 2403, column: 2, scope: !8291)
!8536 = !DILocation(line: 2406, column: 8, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 2406, column: 8)
!8538 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 2405, column: 2)
!8539 = !DILocation(line: 2406, column: 18, scope: !8537)
!8540 = !DILocation(line: 2406, column: 22, scope: !8537)
!8541 = !DILocation(line: 2406, column: 33, scope: !8537)
!8542 = !DILocation(line: 2406, column: 8, scope: !8538)
!8543 = !DILocation(line: 2407, column: 6, scope: !8537)
!8544 = !DILocation(line: 2408, column: 18, scope: !8538)
!8545 = !DILocation(line: 2408, column: 16, scope: !8538)
!8546 = !DILocation(line: 2409, column: 18, scope: !8538)
!8547 = !DILocation(line: 2409, column: 16, scope: !8538)
!8548 = !DILocation(line: 2410, column: 22, scope: !8538)
!8549 = !DILocation(line: 2410, column: 20, scope: !8538)
!8550 = !DILocation(line: 2415, column: 11, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 2415, column: 11)
!8552 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 2414, column: 5)
!8553 = !DILocation(line: 2415, column: 21, scope: !8551)
!8554 = !DILocation(line: 2415, column: 25, scope: !8551)
!8555 = !DILocation(line: 2415, column: 36, scope: !8551)
!8556 = !DILocation(line: 2415, column: 11, scope: !8552)
!8557 = !DILocation(line: 2416, column: 2, scope: !8551)
!8558 = !DILocation(line: 2417, column: 21, scope: !8552)
!8559 = !DILocation(line: 2417, column: 19, scope: !8552)
!8560 = !DILocation(line: 2418, column: 21, scope: !8552)
!8561 = !DILocation(line: 2418, column: 19, scope: !8552)
!8562 = !DILocation(line: 2419, column: 25, scope: !8552)
!8563 = !DILocation(line: 2419, column: 23, scope: !8552)
!8564 = !DILocation(line: 2422, column: 1, scope: !8260)
!8565 = !DILocation(line: 2423, column: 7, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2423, column: 7)
!8567 = !DILocation(line: 2423, column: 17, scope: !8566)
!8568 = !DILocation(line: 2423, column: 21, scope: !8566)
!8569 = !DILocation(line: 2423, column: 32, scope: !8566)
!8570 = !DILocation(line: 2423, column: 7, scope: !8260)
!8571 = !DILocation(line: 2425, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 2424, column: 5)
!8573 = !DILocation(line: 2426, column: 31, scope: !8572)
!8574 = !DILocation(line: 2426, column: 42, scope: !8572)
!8575 = !DILocation(line: 2426, column: 7, scope: !8572)
!8576 = !DILocation(line: 2427, column: 16, scope: !8572)
!8577 = !DILocation(line: 2427, column: 7, scope: !8572)
!8578 = !DILocation(line: 2428, column: 31, scope: !8572)
!8579 = !DILocation(line: 2428, column: 42, scope: !8572)
!8580 = !DILocation(line: 2428, column: 7, scope: !8572)
!8581 = !DILocation(line: 2429, column: 16, scope: !8572)
!8582 = !DILocation(line: 2429, column: 7, scope: !8572)
!8583 = !DILocation(line: 2430, column: 16, scope: !8572)
!8584 = !DILocation(line: 2430, column: 7, scope: !8572)
!8585 = !DILocation(line: 2431, column: 5, scope: !8572)
!8586 = !DILocation(line: 2432, column: 1, scope: !8260)
!8587 = distinct !DISubprogram(name: "can_use_analyze_subscript_affine_affine", scope: !3, file: !3, line: 2449, type: !8588, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!498, !864, !864}
!8590 = !{!8591, !8592, !8593, !8594, !8595, !8596, !8597}
!8591 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !8587, file: !3, line: 2449, type: !864)
!8592 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !8587, file: !3, line: 2449, type: !864)
!8593 = !DILocalVariable(name: "diff", scope: !8587, file: !3, line: 2451, type: !506)
!8594 = !DILocalVariable(name: "type", scope: !8587, file: !3, line: 2451, type: !506)
!8595 = !DILocalVariable(name: "left_a", scope: !8587, file: !3, line: 2451, type: !506)
!8596 = !DILocalVariable(name: "left_b", scope: !8587, file: !3, line: 2451, type: !506)
!8597 = !DILocalVariable(name: "right_b", scope: !8587, file: !3, line: 2451, type: !506)
!8598 = !DILocation(line: 0, scope: !8587)
!8599 = !DILocation(line: 2453, column: 31, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 2453, column: 7)
!8601 = !DILocation(line: 2453, column: 7, scope: !8600)
!8602 = !DILocation(line: 2454, column: 7, scope: !8600)
!8603 = !DILocation(line: 2454, column: 34, scope: !8600)
!8604 = !DILocation(line: 2454, column: 10, scope: !8600)
!8605 = !DILocation(line: 2453, column: 7, scope: !8587)
!8606 = !DILocation(line: 2458, column: 22, scope: !8587)
!8607 = !DILocation(line: 2458, column: 10, scope: !8587)
!8608 = !DILocation(line: 2459, column: 12, scope: !8587)
!8609 = !DILocation(line: 2460, column: 33, scope: !8587)
!8610 = !DILocation(line: 2460, column: 12, scope: !8587)
!8611 = !DILocation(line: 2461, column: 10, scope: !8587)
!8612 = !DILocation(line: 2463, column: 8, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 2463, column: 7)
!8614 = !DILocation(line: 2463, column: 7, scope: !8587)
!8615 = !DILocation(line: 2466, column: 7, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 2466, column: 7)
!8617 = !DILocation(line: 2466, column: 17, scope: !8616)
!8618 = !DILocation(line: 2466, column: 21, scope: !8616)
!8619 = !DILocation(line: 2466, column: 32, scope: !8616)
!8620 = !DILocation(line: 2466, column: 7, scope: !8587)
!8621 = !DILocation(line: 2467, column: 5, scope: !8616)
!8622 = !DILocation(line: 2469, column: 38, scope: !8587)
!8623 = !DILocation(line: 2470, column: 16, scope: !8587)
!8624 = !DILocation(line: 2469, column: 14, scope: !8587)
!8625 = !DILocation(line: 2469, column: 12, scope: !8587)
!8626 = !DILocation(line: 2471, column: 34, scope: !8587)
!8627 = !DILocation(line: 2471, column: 13, scope: !8587)
!8628 = !DILocation(line: 2472, column: 38, scope: !8587)
!8629 = !DILocation(line: 2473, column: 10, scope: !8587)
!8630 = !DILocation(line: 2472, column: 14, scope: !8587)
!8631 = !DILocation(line: 2472, column: 12, scope: !8587)
!8632 = !DILocation(line: 2475, column: 3, scope: !8587)
!8633 = !DILocation(line: 2476, column: 1, scope: !8587)
!8634 = distinct !DISubprogram(name: "tree_fold_divides_p", scope: !3, file: !3, line: 132, type: !7642, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8635)
!8635 = !{!8636, !8637}
!8636 = !DILocalVariable(name: "a", arg: 1, scope: !8634, file: !3, line: 132, type: !3244)
!8637 = !DILocalVariable(name: "b", arg: 2, scope: !8634, file: !3, line: 132, type: !3244)
!8638 = !DILocation(line: 0, scope: !8634)
!8639 = !DILocation(line: 134, column: 3, scope: !8634)
!8640 = !DILocation(line: 135, column: 3, scope: !8634)
!8641 = !DILocation(line: 136, column: 25, scope: !8634)
!8642 = !DILocation(line: 136, column: 10, scope: !8634)
!8643 = !DILocation(line: 136, column: 3, scope: !8634)
!8644 = distinct !DISubprogram(name: "get_chrec_loop", scope: !6559, file: !6559, line: 65, type: !8645, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{!1045, !3244}
!8647 = !{!8648}
!8648 = !DILocalVariable(name: "chrec", arg: 1, scope: !8644, file: !6559, line: 65, type: !3244)
!8649 = !DILocation(line: 0, scope: !8644)
!8650 = !DILocation(line: 67, column: 20, scope: !8644)
!8651 = !DILocation(line: 67, column: 10, scope: !8644)
!8652 = !DILocation(line: 67, column: 3, scope: !8644)
!8653 = distinct !DISubprogram(name: "get_loop", scope: !146, file: !146, line: 417, type: !8654, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8656)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{!1045, !7}
!8656 = !{!8657}
!8657 = !DILocalVariable(name: "num", arg: 1, scope: !8653, file: !146, line: 417, type: !7)
!8658 = !DILocation(line: 0, scope: !8653)
!8659 = !DILocation(line: 419, column: 10, scope: !8653)
!8660 = !DILocation(line: 419, column: 3, scope: !8653)
!8661 = distinct !DISubprogram(name: "initialize_matrix_A", scope: !3, file: !3, line: 1937, type: !8662, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!506, !8275, !506, !7, !499}
!8664 = !{!8665, !8666, !8667, !8668, !8669, !8672, !8673, !8675}
!8665 = !DILocalVariable(name: "A", arg: 1, scope: !8661, file: !3, line: 1937, type: !8275)
!8666 = !DILocalVariable(name: "chrec", arg: 2, scope: !8661, file: !3, line: 1937, type: !506)
!8667 = !DILocalVariable(name: "index", arg: 3, scope: !8661, file: !3, line: 1937, type: !7)
!8668 = !DILocalVariable(name: "mult", arg: 4, scope: !8661, file: !3, line: 1937, type: !499)
!8669 = !DILocalVariable(name: "op0", scope: !8670, file: !3, line: 1953, type: !506)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 1952, column: 7)
!8671 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 1942, column: 5)
!8672 = !DILocalVariable(name: "op1", scope: !8670, file: !3, line: 1954, type: !506)
!8673 = !DILocalVariable(name: "op", scope: !8674, file: !3, line: 1961, type: !506)
!8674 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 1960, column: 7)
!8675 = !DILocalVariable(name: "op", scope: !8676, file: !3, line: 1968, type: !506)
!8676 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 1966, column: 7)
!8677 = !DILocation(line: 1947, column: 14, scope: !8671)
!8678 = !DILocation(line: 0, scope: !8661)
!8679 = !DILocation(line: 1939, column: 3, scope: !8661)
!8680 = !DILocation(line: 1941, column: 11, scope: !8661)
!8681 = !DILocation(line: 1941, column: 3, scope: !8661)
!8682 = !DILocation(line: 1944, column: 7, scope: !8671)
!8683 = !DILocation(line: 1946, column: 43, scope: !8671)
!8684 = !DILocation(line: 1946, column: 28, scope: !8671)
!8685 = !DILocation(line: 1946, column: 21, scope: !8671)
!8686 = !DILocation(line: 1946, column: 7, scope: !8671)
!8687 = !DILocation(line: 1946, column: 19, scope: !8671)
!8688 = !DILocation(line: 1947, column: 38, scope: !8671)
!8689 = !DILocation(line: 1947, column: 64, scope: !8671)
!8690 = !DILocation(line: 1953, column: 37, scope: !8670)
!8691 = !DILocation(line: 1953, column: 13, scope: !8670)
!8692 = !DILocation(line: 0, scope: !8670)
!8693 = !DILocation(line: 1954, column: 37, scope: !8670)
!8694 = !DILocation(line: 1954, column: 13, scope: !8670)
!8695 = !DILocation(line: 1956, column: 24, scope: !8670)
!8696 = !DILocation(line: 1956, column: 43, scope: !8670)
!8697 = !DILocation(line: 1956, column: 9, scope: !8670)
!8698 = !DILocation(line: 1980, column: 1, scope: !8661)
!8699 = !DILocation(line: 1961, column: 36, scope: !8674)
!8700 = !DILocation(line: 1961, column: 12, scope: !8674)
!8701 = !DILocation(line: 0, scope: !8674)
!8702 = !DILocation(line: 1962, column: 24, scope: !8674)
!8703 = !DILocation(line: 1962, column: 9, scope: !8674)
!8704 = !DILocation(line: 1968, column: 36, scope: !8676)
!8705 = !DILocation(line: 1968, column: 12, scope: !8676)
!8706 = !DILocation(line: 0, scope: !8676)
!8707 = !DILocation(line: 1969, column: 36, scope: !8676)
!8708 = !DILocation(line: 1970, column: 25, scope: !8676)
!8709 = !DILocation(line: 1970, column: 10, scope: !8676)
!8710 = !DILocation(line: 1969, column: 9, scope: !8676)
!8711 = !DILocation(line: 1977, column: 7, scope: !8671)
!8712 = !DILocation(line: 1978, column: 7, scope: !8671)
!8713 = !DILocation(line: 0, scope: !8671)
!8714 = distinct !DISubprogram(name: "compute_overlap_steps_for_affine_univar", scope: !3, file: !3, line: 1992, type: !8715, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8718)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !499, !499, !499, !8717, !8717, !864, !499}
!8717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!8718 = !{!8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8729, !8730, !8731, !8732}
!8719 = !DILocalVariable(name: "niter", arg: 1, scope: !8714, file: !3, line: 1992, type: !499)
!8720 = !DILocalVariable(name: "step_a", arg: 2, scope: !8714, file: !3, line: 1992, type: !499)
!8721 = !DILocalVariable(name: "step_b", arg: 3, scope: !8714, file: !3, line: 1992, type: !499)
!8722 = !DILocalVariable(name: "overlaps_a", arg: 4, scope: !8714, file: !3, line: 1993, type: !8717)
!8723 = !DILocalVariable(name: "overlaps_b", arg: 5, scope: !8714, file: !3, line: 1994, type: !8717)
!8724 = !DILocalVariable(name: "last_conflicts", arg: 6, scope: !8714, file: !3, line: 1995, type: !864)
!8725 = !DILocalVariable(name: "dim", arg: 7, scope: !8714, file: !3, line: 1995, type: !499)
!8726 = !DILocalVariable(name: "step_overlaps_a", scope: !8727, file: !3, line: 2000, type: !499)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 1999, column: 5)
!8728 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 1997, column: 7)
!8729 = !DILocalVariable(name: "step_overlaps_b", scope: !8727, file: !3, line: 2000, type: !499)
!8730 = !DILocalVariable(name: "gcd_steps_a_b", scope: !8727, file: !3, line: 2001, type: !499)
!8731 = !DILocalVariable(name: "last_conflict", scope: !8727, file: !3, line: 2001, type: !499)
!8732 = !DILocalVariable(name: "tau2", scope: !8727, file: !3, line: 2001, type: !499)
!8733 = !DILocation(line: 0, scope: !8714)
!8734 = !DILocation(line: 1997, column: 16, scope: !8728)
!8735 = !DILocation(line: 1997, column: 30, scope: !8728)
!8736 = !DILocation(line: 1997, column: 20, scope: !8728)
!8737 = !DILocation(line: 1998, column: 23, scope: !8728)
!8738 = !DILocation(line: 2003, column: 23, scope: !8727)
!8739 = !DILocation(line: 0, scope: !8727)
!8740 = !DILocation(line: 2004, column: 32, scope: !8727)
!8741 = !DILocation(line: 2005, column: 32, scope: !8727)
!8742 = !DILocation(line: 2007, column: 17, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 2007, column: 11)
!8744 = !DILocation(line: 2007, column: 11, scope: !8727)
!8745 = !DILocation(line: 2009, column: 11, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 2008, column: 2)
!8747 = !DILocation(line: 2010, column: 11, scope: !8746)
!8748 = !DILocation(line: 2012, column: 48, scope: !8746)
!8749 = !DILocation(line: 2012, column: 22, scope: !8746)
!8750 = !DILocation(line: 2012, column: 20, scope: !8746)
!8751 = !DILocation(line: 2013, column: 2, scope: !8746)
!8752 = !DILocation(line: 2015, column: 20, scope: !8743)
!8753 = !DILocation(line: 2015, column: 18, scope: !8743)
!8754 = !DILocation(line: 2017, column: 39, scope: !8727)
!8755 = !DILocation(line: 2019, column: 12, scope: !8727)
!8756 = !DILocation(line: 2018, column: 11, scope: !8727)
!8757 = !DILocation(line: 2017, column: 21, scope: !8727)
!8758 = !DILocation(line: 2017, column: 19, scope: !8727)
!8759 = !DILocation(line: 2020, column: 39, scope: !8727)
!8760 = !DILocation(line: 2022, column: 12, scope: !8727)
!8761 = !DILocation(line: 2021, column: 11, scope: !8727)
!8762 = !DILocation(line: 2020, column: 21, scope: !8727)
!8763 = !DILocation(line: 2020, column: 19, scope: !8727)
!8764 = !DILocation(line: 2023, column: 5, scope: !8727)
!8765 = !DILocation(line: 2027, column: 36, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 2026, column: 5)
!8767 = !DILocation(line: 2027, column: 21, scope: !8766)
!8768 = !DILocation(line: 2027, column: 19, scope: !8766)
!8769 = !DILocation(line: 2028, column: 36, scope: !8766)
!8770 = !DILocation(line: 2028, column: 21, scope: !8766)
!8771 = !DILocation(line: 2028, column: 19, scope: !8766)
!8772 = !DILocation(line: 2029, column: 25, scope: !8766)
!8773 = !DILocation(line: 2029, column: 23, scope: !8766)
!8774 = !DILocation(line: 2031, column: 1, scope: !8714)
!8775 = distinct !DISubprogram(name: "compute_overlap_steps_for_affine_1_2", scope: !3, file: !3, line: 2049, type: !7653, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779, !8780, !8781, !8782, !8783, !8784, !8785, !8786, !8787, !8788, !8789, !8790, !8791, !8792, !8793, !8794, !8795, !8796, !8797, !8798, !8799, !8800, !8801, !8802, !8803, !8804, !8809, !8810, !8813, !8814, !8817, !8818}
!8777 = !DILocalVariable(name: "chrec_a", arg: 1, scope: !8775, file: !3, line: 2049, type: !506)
!8778 = !DILocalVariable(name: "chrec_b", arg: 2, scope: !8775, file: !3, line: 2049, type: !506)
!8779 = !DILocalVariable(name: "overlaps_a", arg: 3, scope: !8775, file: !3, line: 2050, type: !7456)
!8780 = !DILocalVariable(name: "overlaps_b", arg: 4, scope: !8775, file: !3, line: 2051, type: !7456)
!8781 = !DILocalVariable(name: "last_conflicts", arg: 5, scope: !8775, file: !3, line: 2052, type: !864)
!8782 = !DILocalVariable(name: "xz_p", scope: !8775, file: !3, line: 2054, type: !498)
!8783 = !DILocalVariable(name: "yz_p", scope: !8775, file: !3, line: 2054, type: !498)
!8784 = !DILocalVariable(name: "xyz_p", scope: !8775, file: !3, line: 2054, type: !498)
!8785 = !DILocalVariable(name: "step_x", scope: !8775, file: !3, line: 2055, type: !499)
!8786 = !DILocalVariable(name: "step_y", scope: !8775, file: !3, line: 2055, type: !499)
!8787 = !DILocalVariable(name: "step_z", scope: !8775, file: !3, line: 2055, type: !499)
!8788 = !DILocalVariable(name: "niter_x", scope: !8775, file: !3, line: 2056, type: !562)
!8789 = !DILocalVariable(name: "niter_y", scope: !8775, file: !3, line: 2056, type: !562)
!8790 = !DILocalVariable(name: "niter_z", scope: !8775, file: !3, line: 2056, type: !562)
!8791 = !DILocalVariable(name: "niter", scope: !8775, file: !3, line: 2056, type: !562)
!8792 = !DILocalVariable(name: "overlaps_a_xz", scope: !8775, file: !3, line: 2057, type: !1963)
!8793 = !DILocalVariable(name: "overlaps_b_xz", scope: !8775, file: !3, line: 2057, type: !1963)
!8794 = !DILocalVariable(name: "overlaps_a_yz", scope: !8775, file: !3, line: 2058, type: !1963)
!8795 = !DILocalVariable(name: "overlaps_b_yz", scope: !8775, file: !3, line: 2058, type: !1963)
!8796 = !DILocalVariable(name: "overlaps_a_xyz", scope: !8775, file: !3, line: 2059, type: !1963)
!8797 = !DILocalVariable(name: "overlaps_b_xyz", scope: !8775, file: !3, line: 2059, type: !1963)
!8798 = !DILocalVariable(name: "ova1", scope: !8775, file: !3, line: 2060, type: !1963)
!8799 = !DILocalVariable(name: "ova2", scope: !8775, file: !3, line: 2060, type: !1963)
!8800 = !DILocalVariable(name: "ovb", scope: !8775, file: !3, line: 2060, type: !1963)
!8801 = !DILocalVariable(name: "last_conflicts_xz", scope: !8775, file: !3, line: 2061, type: !506)
!8802 = !DILocalVariable(name: "last_conflicts_yz", scope: !8775, file: !3, line: 2061, type: !506)
!8803 = !DILocalVariable(name: "last_conflicts_xyz", scope: !8775, file: !3, line: 2061, type: !506)
!8804 = !DILocalVariable(name: "t0", scope: !8805, file: !3, line: 2112, type: !1963)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 2111, column: 2)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 2110, column: 11)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 2106, column: 5)
!8808 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2105, column: 7)
!8809 = !DILocalVariable(name: "t2", scope: !8805, file: !3, line: 2113, type: !1963)
!8810 = !DILocalVariable(name: "t0", scope: !8811, file: !3, line: 2123, type: !1963)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 2122, column: 2)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 2121, column: 11)
!8813 = !DILocalVariable(name: "t2", scope: !8811, file: !3, line: 2124, type: !1963)
!8814 = !DILocalVariable(name: "t0", scope: !8815, file: !3, line: 2134, type: !1963)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 2133, column: 2)
!8816 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 2132, column: 11)
!8817 = !DILocalVariable(name: "t2", scope: !8815, file: !3, line: 2135, type: !1963)
!8818 = !DILocalVariable(name: "t4", scope: !8815, file: !3, line: 2136, type: !1963)
!8819 = !DILocation(line: 0, scope: !8775)
!8820 = !DILocation(line: 2057, column: 3, scope: !8775)
!8821 = !DILocation(line: 2058, column: 3, scope: !8775)
!8822 = !DILocation(line: 2059, column: 3, scope: !8775)
!8823 = !DILocation(line: 2061, column: 3, scope: !8775)
!8824 = !DILocation(line: 2063, column: 27, scope: !8775)
!8825 = !DILocation(line: 2063, column: 12, scope: !8775)
!8826 = !DILocation(line: 2064, column: 27, scope: !8775)
!8827 = !DILocation(line: 2064, column: 12, scope: !8775)
!8828 = !DILocation(line: 2065, column: 27, scope: !8775)
!8829 = !DILocation(line: 2065, column: 12, scope: !8775)
!8830 = !DILocation(line: 2068, column: 52, scope: !8775)
!8831 = !DILocation(line: 2068, column: 36, scope: !8775)
!8832 = !DILocation(line: 2068, column: 5, scope: !8775)
!8833 = !DILocation(line: 2070, column: 44, scope: !8775)
!8834 = !DILocation(line: 2070, column: 13, scope: !8775)
!8835 = !DILocation(line: 2071, column: 44, scope: !8775)
!8836 = !DILocation(line: 2071, column: 13, scope: !8775)
!8837 = !DILocation(line: 2073, column: 19, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2073, column: 7)
!8839 = !DILocation(line: 2075, column: 11, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 2075, column: 11)
!8841 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2074, column: 5)
!8842 = !DILocation(line: 2075, column: 21, scope: !8840)
!8843 = !DILocation(line: 2075, column: 25, scope: !8840)
!8844 = !DILocation(line: 2075, column: 36, scope: !8840)
!8845 = !DILocation(line: 2075, column: 11, scope: !8841)
!8846 = !DILocation(line: 2076, column: 2, scope: !8840)
!8847 = !DILocation(line: 2078, column: 21, scope: !8841)
!8848 = !DILocation(line: 2078, column: 19, scope: !8841)
!8849 = !DILocation(line: 2079, column: 21, scope: !8841)
!8850 = !DILocation(line: 2079, column: 19, scope: !8841)
!8851 = !DILocation(line: 2080, column: 25, scope: !8841)
!8852 = !DILocation(line: 2080, column: 23, scope: !8841)
!8853 = !DILocation(line: 2081, column: 7, scope: !8841)
!8854 = !DILocation(line: 2084, column: 11, scope: !8775)
!8855 = !DILocation(line: 2085, column: 44, scope: !8775)
!8856 = !DILocation(line: 2085, column: 3, scope: !8775)
!8857 = !DILocation(line: 2089, column: 11, scope: !8775)
!8858 = !DILocation(line: 2090, column: 44, scope: !8775)
!8859 = !DILocation(line: 2090, column: 3, scope: !8775)
!8860 = !DILocation(line: 2095, column: 11, scope: !8775)
!8861 = !DILocation(line: 2096, column: 44, scope: !8775)
!8862 = !DILocation(line: 2096, column: 58, scope: !8775)
!8863 = !DILocation(line: 2096, column: 3, scope: !8775)
!8864 = !DILocation(line: 2101, column: 26, scope: !8775)
!8865 = !DILocation(line: 2101, column: 11, scope: !8775)
!8866 = !DILocation(line: 2101, column: 10, scope: !8775)
!8867 = !DILocation(line: 2102, column: 26, scope: !8775)
!8868 = !DILocation(line: 2102, column: 11, scope: !8775)
!8869 = !DILocation(line: 2102, column: 10, scope: !8775)
!8870 = !DILocation(line: 2103, column: 27, scope: !8775)
!8871 = !DILocation(line: 2103, column: 12, scope: !8775)
!8872 = !DILocation(line: 2103, column: 11, scope: !8775)
!8873 = !DILocation(line: 2105, column: 12, scope: !8808)
!8874 = !DILocation(line: 0, scope: !8808)
!8875 = !DILocation(line: 2108, column: 29, scope: !8807)
!8876 = !DILocation(line: 2108, column: 14, scope: !8807)
!8877 = !DILocation(line: 2109, column: 28, scope: !8807)
!8878 = !DILocation(line: 2109, column: 13, scope: !8807)
!8879 = !DILocation(line: 2110, column: 11, scope: !8807)
!8880 = !DILocation(line: 0, scope: !8805)
!8881 = !DILocation(line: 2115, column: 33, scope: !8805)
!8882 = !DILocation(line: 2115, column: 11, scope: !8805)
!8883 = !DILocation(line: 2116, column: 31, scope: !8805)
!8884 = !DILocation(line: 2116, column: 10, scope: !8805)
!8885 = !DILocation(line: 2117, column: 4, scope: !8805)
!8886 = !DILocation(line: 2118, column: 4, scope: !8805)
!8887 = !DILocation(line: 2119, column: 22, scope: !8805)
!8888 = !DILocation(line: 2119, column: 20, scope: !8805)
!8889 = !DILocation(line: 2120, column: 2, scope: !8805)
!8890 = !DILocation(line: 0, scope: !8807)
!8891 = !DILocation(line: 2121, column: 11, scope: !8807)
!8892 = !DILocation(line: 0, scope: !8811)
!8893 = !DILocation(line: 2126, column: 33, scope: !8811)
!8894 = !DILocation(line: 2126, column: 11, scope: !8811)
!8895 = !DILocation(line: 2127, column: 31, scope: !8811)
!8896 = !DILocation(line: 2127, column: 10, scope: !8811)
!8897 = !DILocation(line: 2128, column: 4, scope: !8811)
!8898 = !DILocation(line: 2129, column: 4, scope: !8811)
!8899 = !DILocation(line: 2130, column: 22, scope: !8811)
!8900 = !DILocation(line: 2130, column: 20, scope: !8811)
!8901 = !DILocation(line: 2131, column: 2, scope: !8811)
!8902 = !DILocation(line: 2132, column: 11, scope: !8807)
!8903 = !DILocation(line: 0, scope: !8815)
!8904 = !DILocation(line: 2138, column: 33, scope: !8815)
!8905 = !DILocation(line: 2138, column: 11, scope: !8815)
!8906 = !DILocation(line: 2139, column: 33, scope: !8815)
!8907 = !DILocation(line: 2139, column: 11, scope: !8815)
!8908 = !DILocation(line: 2140, column: 31, scope: !8815)
!8909 = !DILocation(line: 2140, column: 10, scope: !8815)
!8910 = !DILocation(line: 2141, column: 4, scope: !8815)
!8911 = !DILocation(line: 2142, column: 4, scope: !8815)
!8912 = !DILocation(line: 2143, column: 4, scope: !8815)
!8913 = !DILocation(line: 2144, column: 22, scope: !8815)
!8914 = !DILocation(line: 2144, column: 20, scope: !8815)
!8915 = !DILocation(line: 2145, column: 2, scope: !8815)
!8916 = !DILocation(line: 2146, column: 21, scope: !8807)
!8917 = !DILocation(line: 2146, column: 19, scope: !8807)
!8918 = !DILocation(line: 2147, column: 21, scope: !8807)
!8919 = !DILocation(line: 2147, column: 19, scope: !8807)
!8920 = !DILocation(line: 2148, column: 5, scope: !8807)
!8921 = !DILocation(line: 2151, column: 21, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 2150, column: 5)
!8923 = !DILocation(line: 2151, column: 19, scope: !8922)
!8924 = !DILocation(line: 2152, column: 52, scope: !8922)
!8925 = !DILocation(line: 2152, column: 37, scope: !8922)
!8926 = !DILocation(line: 2152, column: 21, scope: !8922)
!8927 = !DILocation(line: 2152, column: 19, scope: !8922)
!8928 = !DILocation(line: 2153, column: 25, scope: !8922)
!8929 = !DILocation(line: 2153, column: 23, scope: !8922)
!8930 = !DILocation(line: 2156, column: 19, scope: !8775)
!8931 = !DILocation(line: 2156, column: 3, scope: !8775)
!8932 = !DILocation(line: 2157, column: 19, scope: !8775)
!8933 = !DILocation(line: 2157, column: 3, scope: !8775)
!8934 = !DILocation(line: 2158, column: 19, scope: !8775)
!8935 = !DILocation(line: 2158, column: 3, scope: !8775)
!8936 = !DILocation(line: 2159, column: 19, scope: !8775)
!8937 = !DILocation(line: 2159, column: 3, scope: !8775)
!8938 = !DILocation(line: 2160, column: 19, scope: !8775)
!8939 = !DILocation(line: 2160, column: 3, scope: !8775)
!8940 = !DILocation(line: 2161, column: 19, scope: !8775)
!8941 = !DILocation(line: 2161, column: 3, scope: !8775)
!8942 = !DILocation(line: 2162, column: 1, scope: !8775)
!8943 = distinct !DISubprogram(name: "int_divides_p", scope: !3, file: !3, line: 142, type: !8944, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8946)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!498, !499, !499}
!8946 = !{!8947, !8948}
!8947 = !DILocalVariable(name: "a", arg: 1, scope: !8943, file: !3, line: 142, type: !499)
!8948 = !DILocalVariable(name: "b", arg: 2, scope: !8943, file: !3, line: 142, type: !499)
!8949 = !DILocation(line: 0, scope: !8943)
!8950 = !DILocation(line: 144, column: 14, scope: !8943)
!8951 = !DILocation(line: 144, column: 19, scope: !8943)
!8952 = !DILocation(line: 144, column: 10, scope: !8943)
!8953 = !DILocation(line: 144, column: 3, scope: !8943)
!8954 = distinct !DISubprogram(name: "affine_fn_univar", scope: !3, file: !3, line: 1590, type: !8955, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8957)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!1963, !506, !7, !506}
!8957 = !{!8958, !8959, !8960, !8961, !8962}
!8958 = !DILocalVariable(name: "cst", arg: 1, scope: !8954, file: !3, line: 1590, type: !506)
!8959 = !DILocalVariable(name: "dim", arg: 2, scope: !8954, file: !3, line: 1590, type: !7)
!8960 = !DILocalVariable(name: "coef", arg: 3, scope: !8954, file: !3, line: 1590, type: !506)
!8961 = !DILocalVariable(name: "fn", scope: !8954, file: !3, line: 1592, type: !1963)
!8962 = !DILocalVariable(name: "i", scope: !8954, file: !3, line: 1593, type: !7)
!8963 = !DILocation(line: 0, scope: !8954)
!8964 = !DILocation(line: 1592, column: 18, scope: !8954)
!8965 = !DILocation(line: 1595, column: 3, scope: !8954)
!8966 = !DILocation(line: 1596, column: 3, scope: !8954)
!8967 = !DILocation(line: 1597, column: 8, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 1597, column: 3)
!8969 = !DILocation(line: 0, scope: !8968)
!8970 = !DILocation(line: 1597, column: 17, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 1597, column: 3)
!8972 = !DILocation(line: 1597, column: 3, scope: !8968)
!8973 = !DILocation(line: 1598, column: 5, scope: !8971)
!8974 = !DILocation(line: 1597, column: 25, scope: !8971)
!8975 = !DILocation(line: 1597, column: 3, scope: !8971)
!8976 = distinct !{!8976, !8972, !8977}
!8977 = !DILocation(line: 1598, column: 5, scope: !8968)
!8978 = !DILocation(line: 1599, column: 3, scope: !8954)
!8979 = !DILocation(line: 1600, column: 3, scope: !8954)
!8980 = distinct !DISubprogram(name: "chrec_fold_op", scope: !3241, file: !3241, line: 243, type: !8981, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8983)
!8981 = !DISubroutineType(types: !8982)
!8982 = !{!506, !196, !506, !506, !506}
!8983 = !{!8984, !8985, !8986, !8987}
!8984 = !DILocalVariable(name: "code", arg: 1, scope: !8980, file: !3241, line: 243, type: !196)
!8985 = !DILocalVariable(name: "type", arg: 2, scope: !8980, file: !3241, line: 243, type: !506)
!8986 = !DILocalVariable(name: "op0", arg: 3, scope: !8980, file: !3241, line: 243, type: !506)
!8987 = !DILocalVariable(name: "op1", arg: 4, scope: !8980, file: !3241, line: 243, type: !506)
!8988 = !DILocation(line: 0, scope: !8980)
!8989 = !DILocation(line: 245, column: 3, scope: !8980)
!8990 = !DILocation(line: 248, column: 14, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8980, file: !3241, line: 246, column: 5)
!8992 = !DILocation(line: 248, column: 7, scope: !8991)
!8993 = !DILocation(line: 251, column: 14, scope: !8991)
!8994 = !DILocation(line: 251, column: 7, scope: !8991)
!8995 = !DILocation(line: 254, column: 14, scope: !8991)
!8996 = !DILocation(line: 254, column: 7, scope: !8991)
!8997 = !DILocation(line: 257, column: 7, scope: !8991)
!8998 = !DILocation(line: 260, column: 5, scope: !8980)
!8999 = !DILocation(line: 263, column: 1, scope: !8980)
!9000 = distinct !DISubprogram(name: "chrec_type", scope: !3241, file: !3241, line: 234, type: !9001, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9003)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!506, !3244}
!9003 = !{!9004}
!9004 = !DILocalVariable(name: "chrec", arg: 1, scope: !9000, file: !3241, line: 234, type: !3244)
!9005 = !DILocation(line: 0, scope: !9000)
!9006 = !DILocation(line: 236, column: 7, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9000, file: !3241, line: 236, column: 7)
!9008 = !DILocation(line: 236, column: 7, scope: !9000)
!9009 = !DILocation(line: 239, column: 10, scope: !9000)
!9010 = !DILocation(line: 239, column: 3, scope: !9000)
!9011 = !DILocation(line: 240, column: 1, scope: !9000)
!9012 = distinct !DISubprogram(name: "gcd", scope: !1905, file: !1905, line: 427, type: !9013, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9015)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{!499, !499, !499}
!9015 = !{!9016, !9017, !9018, !9019, !9020}
!9016 = !DILocalVariable(name: "a", arg: 1, scope: !9012, file: !1905, line: 427, type: !499)
!9017 = !DILocalVariable(name: "b", arg: 2, scope: !9012, file: !1905, line: 427, type: !499)
!9018 = !DILocalVariable(name: "x", scope: !9012, file: !1905, line: 429, type: !499)
!9019 = !DILocalVariable(name: "y", scope: !9012, file: !1905, line: 429, type: !499)
!9020 = !DILocalVariable(name: "z", scope: !9012, file: !1905, line: 429, type: !499)
!9021 = !DILocation(line: 0, scope: !9012)
!9022 = !DILocation(line: 431, column: 7, scope: !9012)
!9023 = !DILocation(line: 432, column: 7, scope: !9012)
!9024 = !DILocation(line: 434, column: 3, scope: !9012)
!9025 = !DILocation(line: 434, column: 12, scope: !9012)
!9026 = !DILocation(line: 436, column: 13, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9012, file: !1905, line: 435, column: 5)
!9028 = distinct !{!9028, !9024, !9029}
!9029 = !DILocation(line: 439, column: 5, scope: !9012)
!9030 = !DILocation(line: 441, column: 3, scope: !9012)
!9031 = distinct !DISubprogram(name: "affine_fn_plus", scope: !3, file: !3, line: 1084, type: !9032, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9034)
!9032 = !DISubroutineType(types: !9033)
!9033 = !{!1963, !1963, !1963}
!9034 = !{!9035, !9036}
!9035 = !DILocalVariable(name: "fna", arg: 1, scope: !9031, file: !3, line: 1084, type: !1963)
!9036 = !DILocalVariable(name: "fnb", arg: 2, scope: !9031, file: !3, line: 1084, type: !1963)
!9037 = !DILocation(line: 0, scope: !9031)
!9038 = !DILocation(line: 1086, column: 10, scope: !9031)
!9039 = !DILocation(line: 1086, column: 3, scope: !9031)
!9040 = distinct !DISubprogram(name: "affine_fn_free", scope: !3, file: !3, line: 1100, type: !9041, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9043)
!9041 = !DISubroutineType(types: !9042)
!9042 = !{null, !1963}
!9043 = !{!9044}
!9044 = !DILocalVariable(name: "fn", arg: 1, scope: !9040, file: !3, line: 1100, type: !1963)
!9045 = !DILocation(line: 0, scope: !9040)
!9046 = !DILocation(line: 1102, column: 3, scope: !9040)
!9047 = !DILocation(line: 1103, column: 1, scope: !9040)
!9048 = distinct !DISubprogram(name: "affine_fn_op", scope: !3, file: !3, line: 1040, type: !9049, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!1963, !196, !1963, !1963}
!9051 = !{!9052, !9053, !9054, !9055, !9056, !9057, !9058, !9059, !9060}
!9052 = !DILocalVariable(name: "op", arg: 1, scope: !9048, file: !3, line: 1040, type: !196)
!9053 = !DILocalVariable(name: "fna", arg: 2, scope: !9048, file: !3, line: 1040, type: !1963)
!9054 = !DILocalVariable(name: "fnb", arg: 3, scope: !9048, file: !3, line: 1040, type: !1963)
!9055 = !DILocalVariable(name: "i", scope: !9048, file: !3, line: 1042, type: !7)
!9056 = !DILocalVariable(name: "n", scope: !9048, file: !3, line: 1042, type: !7)
!9057 = !DILocalVariable(name: "m", scope: !9048, file: !3, line: 1042, type: !7)
!9058 = !DILocalVariable(name: "ret", scope: !9048, file: !3, line: 1043, type: !1963)
!9059 = !DILocalVariable(name: "coef", scope: !9048, file: !3, line: 1044, type: !506)
!9060 = !DILocalVariable(name: "type", scope: !9061, file: !3, line: 1060, type: !506)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1059, column: 5)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1058, column: 3)
!9063 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1058, column: 3)
!9064 = !DILocation(line: 0, scope: !9048)
!9065 = !DILocation(line: 1044, column: 3, scope: !9048)
!9066 = !DILocation(line: 1046, column: 7, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1046, column: 7)
!9068 = !DILocation(line: 1046, column: 32, scope: !9067)
!9069 = !DILocation(line: 1046, column: 30, scope: !9067)
!9070 = !DILocation(line: 1046, column: 7, scope: !9048)
!9071 = !DILocation(line: 1048, column: 11, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1047, column: 5)
!9073 = !DILocation(line: 1049, column: 11, scope: !9072)
!9074 = !DILocation(line: 1050, column: 5, scope: !9072)
!9075 = !DILocation(line: 1053, column: 11, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1052, column: 5)
!9077 = !DILocation(line: 1054, column: 11, scope: !9076)
!9078 = !DILocation(line: 0, scope: !9067)
!9079 = !DILocation(line: 1057, column: 9, scope: !9048)
!9080 = !DILocation(line: 0, scope: !9061)
!9081 = !DILocation(line: 1058, column: 8, scope: !9063)
!9082 = !DILocation(line: 0, scope: !9063)
!9083 = !DILocation(line: 1058, column: 17, scope: !9062)
!9084 = !DILocation(line: 1058, column: 3, scope: !9063)
!9085 = !DILocation(line: 0, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1069, column: 3)
!9087 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1069, column: 3)
!9088 = !DILocation(line: 1069, column: 3, scope: !9087)
!9089 = !DILocation(line: 1060, column: 42, scope: !9061)
!9090 = !DILocation(line: 1061, column: 7, scope: !9061)
!9091 = !DILocation(line: 1060, column: 19, scope: !9061)
!9092 = !DILocation(line: 1063, column: 7, scope: !9061)
!9093 = !DILocation(line: 1058, column: 23, scope: !9062)
!9094 = !DILocation(line: 1058, column: 3, scope: !9062)
!9095 = distinct !{!9095, !9084, !9096}
!9096 = !DILocation(line: 1067, column: 5, scope: !9063)
!9097 = !DILocation(line: 1069, column: 10, scope: !9086)
!9098 = !DILocation(line: 1073, column: 3, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1073, column: 3)
!9100 = !DILocation(line: 1070, column: 5, scope: !9086)
!9101 = !DILocation(line: 1069, column: 45, scope: !9086)
!9102 = !DILocation(line: 1069, column: 3, scope: !9086)
!9103 = distinct !{!9103, !9088, !9104}
!9104 = !DILocation(line: 1070, column: 5, scope: !9087)
!9105 = !DILocation(line: 1073, column: 10, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1073, column: 3)
!9107 = !DILocation(line: 1074, column: 5, scope: !9106)
!9108 = !DILocation(line: 1073, column: 45, scope: !9106)
!9109 = !DILocation(line: 1073, column: 3, scope: !9106)
!9110 = distinct !{!9110, !9098, !9111}
!9111 = !DILocation(line: 1074, column: 5, scope: !9099)
!9112 = !DILocation(line: 1079, column: 1, scope: !9048)
!9113 = !DILocation(line: 1078, column: 3, scope: !9048)
!9114 = distinct !DISubprogram(name: "build_polynomial_chrec", scope: !3241, file: !3241, line: 127, type: !9115, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!506, !7, !506, !506}
!9117 = !{!9118, !9119, !9120, !9121}
!9118 = !DILocalVariable(name: "loop_num", arg: 1, scope: !9114, file: !3241, line: 127, type: !7)
!9119 = !DILocalVariable(name: "left", arg: 2, scope: !9114, file: !3241, line: 128, type: !506)
!9120 = !DILocalVariable(name: "right", arg: 3, scope: !9114, file: !3241, line: 129, type: !506)
!9121 = !DILocalVariable(name: "val", scope: !9114, file: !3241, line: 131, type: !498)
!9122 = !DILocation(line: 0, scope: !9114)
!9123 = !DILocation(line: 131, column: 3, scope: !9114)
!9124 = !DILocation(line: 133, column: 15, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9114, file: !3241, line: 133, column: 7)
!9126 = !DILocation(line: 133, column: 12, scope: !9125)
!9127 = !DILocation(line: 134, column: 16, scope: !9125)
!9128 = !DILocation(line: 134, column: 7, scope: !9125)
!9129 = !DILocation(line: 135, column: 5, scope: !9125)
!9130 = !DILocation(line: 137, column: 8, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9114, file: !3241, line: 137, column: 7)
!9132 = !DILocation(line: 138, column: 11, scope: !9131)
!9133 = !DILocation(line: 138, column: 7, scope: !9131)
!9134 = !DILocation(line: 139, column: 12, scope: !9131)
!9135 = !DILocation(line: 139, column: 5, scope: !9131)
!9136 = !DILocation(line: 143, column: 3, scope: !9114)
!9137 = !DILocation(line: 146, column: 7, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9114, file: !3241, line: 146, column: 7)
!9139 = !DILocation(line: 146, column: 7, scope: !9114)
!9140 = !DILocation(line: 147, column: 5, scope: !9138)
!9141 = !DILocation(line: 149, column: 5, scope: !9138)
!9142 = !DILocation(line: 151, column: 7, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9114, file: !3241, line: 151, column: 7)
!9144 = !DILocation(line: 151, column: 7, scope: !9114)
!9145 = !DILocation(line: 154, column: 10, scope: !9114)
!9146 = !DILocation(line: 154, column: 3, scope: !9114)
!9147 = !DILocation(line: 156, column: 1, scope: !9114)
!9148 = distinct !DISubprogram(name: "no_evolution_in_loop_p", scope: !3241, file: !3241, line: 109, type: !9149, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9151)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{!498, !506, !7, !497}
!9151 = !{!9152, !9153, !9154, !9155}
!9152 = !DILocalVariable(name: "chrec", arg: 1, scope: !9148, file: !3241, line: 109, type: !506)
!9153 = !DILocalVariable(name: "loop_num", arg: 2, scope: !9148, file: !3241, line: 109, type: !7)
!9154 = !DILocalVariable(name: "res", arg: 3, scope: !9148, file: !3241, line: 109, type: !497)
!9155 = !DILocalVariable(name: "scev", scope: !9148, file: !3241, line: 111, type: !506)
!9156 = !DILocation(line: 0, scope: !9148)
!9157 = !DILocation(line: 113, column: 16, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9148, file: !3241, line: 113, column: 7)
!9159 = !DILocation(line: 113, column: 13, scope: !9158)
!9160 = !DILocation(line: 114, column: 19, scope: !9158)
!9161 = !DILocation(line: 114, column: 16, scope: !9158)
!9162 = !DILocation(line: 114, column: 7, scope: !9158)
!9163 = !DILocation(line: 115, column: 10, scope: !9158)
!9164 = !DILocation(line: 113, column: 7, scope: !9148)
!9165 = !DILocation(line: 118, column: 3, scope: !9148)
!9166 = !DILocation(line: 119, column: 10, scope: !9148)
!9167 = !DILocation(line: 120, column: 11, scope: !9148)
!9168 = !DILocation(line: 120, column: 10, scope: !9148)
!9169 = !DILocation(line: 120, column: 8, scope: !9148)
!9170 = !DILocation(line: 121, column: 3, scope: !9148)
!9171 = !DILocation(line: 122, column: 1, scope: !9148)
!9172 = distinct !DISubprogram(name: "chrec_zerop", scope: !3241, file: !3241, line: 94, type: !3242, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9173)
!9173 = !{!9174}
!9174 = !DILocalVariable(name: "chrec", arg: 1, scope: !9172, file: !3241, line: 94, type: !3244)
!9175 = !DILocation(line: 0, scope: !9172)
!9176 = !DILocation(line: 96, column: 13, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !3241, line: 96, column: 7)
!9178 = !DILocation(line: 96, column: 7, scope: !9172)
!9179 = !DILocation(line: 99, column: 7, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9172, file: !3241, line: 99, column: 7)
!9181 = !DILocation(line: 99, column: 25, scope: !9180)
!9182 = !DILocation(line: 99, column: 7, scope: !9172)
!9183 = !DILocation(line: 100, column: 12, scope: !9180)
!9184 = !DILocation(line: 100, column: 5, scope: !9180)
!9185 = !DILocation(line: 103, column: 1, scope: !9172)
!9186 = distinct !DISubprogram(name: "tree_is_chrec", scope: !3241, file: !3241, line: 46, type: !3242, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9187)
!9187 = !{!9188}
!9188 = !DILocalVariable(name: "expr", arg: 1, scope: !9186, file: !3241, line: 46, type: !3244)
!9189 = !DILocation(line: 0, scope: !9186)
!9190 = !DILocation(line: 48, column: 7, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9186, file: !3241, line: 48, column: 7)
!9192 = !DILocation(line: 48, column: 24, scope: !9191)
!9193 = !DILocation(line: 49, column: 7, scope: !9191)
!9194 = !DILocation(line: 49, column: 10, scope: !9191)
!9195 = !DILocation(line: 48, column: 7, scope: !9186)
!9196 = !DILocation(line: 53, column: 1, scope: !9186)
!9197 = distinct !DISubprogram(name: "estimated_loop_iterations_tree", scope: !3, file: !3, line: 1721, type: !9198, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9200)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{!506, !1045, !498}
!9200 = !{!9201, !9202, !9203, !9204}
!9201 = !DILocalVariable(name: "loop", arg: 1, scope: !9197, file: !3, line: 1721, type: !1045)
!9202 = !DILocalVariable(name: "conservative", arg: 2, scope: !9197, file: !3, line: 1721, type: !498)
!9203 = !DILocalVariable(name: "nit", scope: !9197, file: !3, line: 1723, type: !555)
!9204 = !DILocalVariable(name: "type", scope: !9197, file: !3, line: 1724, type: !506)
!9205 = !DILocation(line: 0, scope: !9197)
!9206 = !DILocation(line: 1723, column: 3, scope: !9197)
!9207 = !DILocation(line: 1726, column: 8, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1726, column: 7)
!9209 = !DILocation(line: 1726, column: 7, scope: !9197)
!9210 = !DILocation(line: 1727, column: 12, scope: !9208)
!9211 = !DILocation(line: 1727, column: 5, scope: !9208)
!9212 = !DILocation(line: 1729, column: 27, scope: !9197)
!9213 = !DILocation(line: 1729, column: 10, scope: !9197)
!9214 = !DILocation(line: 1730, column: 8, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1730, column: 7)
!9216 = !DILocation(line: 1730, column: 7, scope: !9197)
!9217 = !DILocation(line: 1731, column: 12, scope: !9215)
!9218 = !DILocation(line: 1731, column: 5, scope: !9215)
!9219 = !DILocation(line: 1733, column: 10, scope: !9197)
!9220 = !DILocation(line: 1733, column: 3, scope: !9197)
!9221 = !DILocation(line: 1734, column: 1, scope: !9197)
!9222 = distinct !DISubprogram(name: "gcd_of_steps_may_divide_p", scope: !3, file: !3, line: 2566, type: !7642, scopeLine: 2567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9223)
!9223 = !{!9224, !9225, !9226, !9227, !9228}
!9224 = !DILocalVariable(name: "chrec", arg: 1, scope: !9222, file: !3, line: 2566, type: !3244)
!9225 = !DILocalVariable(name: "cst", arg: 2, scope: !9222, file: !3, line: 2566, type: !3244)
!9226 = !DILocalVariable(name: "cd", scope: !9222, file: !3, line: 2568, type: !562)
!9227 = !DILocalVariable(name: "val", scope: !9222, file: !3, line: 2568, type: !562)
!9228 = !DILocalVariable(name: "step", scope: !9222, file: !3, line: 2569, type: !506)
!9229 = !DILocation(line: 0, scope: !9222)
!9230 = !DILocation(line: 2571, column: 8, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2571, column: 7)
!9232 = !DILocation(line: 2571, column: 7, scope: !9222)
!9233 = !DILocation(line: 2573, column: 9, scope: !9222)
!9234 = !DILocation(line: 2575, column: 3, scope: !9222)
!9235 = !DILocation(line: 2575, column: 10, scope: !9222)
!9236 = !DILocation(line: 2575, column: 28, scope: !9222)
!9237 = !DILocation(line: 2577, column: 14, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2576, column: 5)
!9239 = !DILocation(line: 2578, column: 12, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 2578, column: 11)
!9241 = !DILocation(line: 2578, column: 11, scope: !9238)
!9242 = !DILocation(line: 2580, column: 17, scope: !9238)
!9243 = !DILocation(line: 2580, column: 21, scope: !9238)
!9244 = !DILocation(line: 2580, column: 12, scope: !9238)
!9245 = !DILocation(line: 2581, column: 15, scope: !9238)
!9246 = distinct !{!9246, !9234, !9247}
!9247 = !DILocation(line: 2582, column: 5, scope: !9222)
!9248 = !DILocation(line: 2584, column: 14, scope: !9222)
!9249 = !DILocation(line: 2584, column: 19, scope: !9222)
!9250 = !DILocation(line: 2584, column: 10, scope: !9222)
!9251 = !DILocation(line: 2584, column: 3, scope: !9222)
!9252 = !DILocation(line: 2585, column: 1, scope: !9222)
!9253 = distinct !DISubprogram(name: "common_affine_function", scope: !3, file: !3, line: 975, type: !9254, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9256)
!9254 = !DISubroutineType(types: !9255)
!9255 = !{!1963, !1956}
!9256 = !{!9257, !9258, !9259}
!9257 = !DILocalVariable(name: "cf", arg: 1, scope: !9253, file: !3, line: 975, type: !1956)
!9258 = !DILocalVariable(name: "i", scope: !9253, file: !3, line: 977, type: !7)
!9259 = !DILocalVariable(name: "comm", scope: !9253, file: !3, line: 978, type: !1963)
!9260 = !DILocation(line: 0, scope: !9253)
!9261 = !DILocation(line: 980, column: 8, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 980, column: 7)
!9263 = !DILocation(line: 980, column: 7, scope: !9253)
!9264 = !DILocation(line: 983, column: 10, scope: !9253)
!9265 = !DILocation(line: 985, column: 8, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 985, column: 3)
!9267 = !DILocation(line: 985, column: 23, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 985, column: 3)
!9269 = !DILocation(line: 985, column: 17, scope: !9268)
!9270 = !DILocation(line: 985, column: 3, scope: !9266)
!9271 = !DILocation(line: 986, column: 41, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 986, column: 9)
!9273 = !DILocation(line: 986, column: 10, scope: !9272)
!9274 = !DILocation(line: 986, column: 9, scope: !9268)
!9275 = !DILocation(line: 985, column: 27, scope: !9268)
!9276 = !DILocation(line: 985, column: 3, scope: !9268)
!9277 = distinct !{!9277, !9270, !9278}
!9278 = !DILocation(line: 987, column: 14, scope: !9266)
!9279 = !DILocation(line: 990, column: 1, scope: !9253)
!9280 = distinct !DISubprogram(name: "affine_fn_minus", scope: !3, file: !3, line: 1092, type: !9032, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9281)
!9281 = !{!9282, !9283}
!9282 = !DILocalVariable(name: "fna", arg: 1, scope: !9280, file: !3, line: 1092, type: !1963)
!9283 = !DILocalVariable(name: "fnb", arg: 2, scope: !9280, file: !3, line: 1092, type: !1963)
!9284 = !DILocation(line: 0, scope: !9280)
!9285 = !DILocation(line: 1094, column: 10, scope: !9280)
!9286 = !DILocation(line: 1094, column: 3, scope: !9280)
!9287 = distinct !DISubprogram(name: "affine_function_constant_p", scope: !3, file: !3, line: 1003, type: !9288, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9290)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!498, !1963}
!9290 = !{!9291, !9292, !9293}
!9291 = !DILocalVariable(name: "fn", arg: 1, scope: !9287, file: !3, line: 1003, type: !1963)
!9292 = !DILocalVariable(name: "i", scope: !9287, file: !3, line: 1005, type: !7)
!9293 = !DILocalVariable(name: "coef", scope: !9287, file: !3, line: 1006, type: !506)
!9294 = !DILocation(line: 0, scope: !9287)
!9295 = !DILocation(line: 1006, column: 3, scope: !9287)
!9296 = !DILocation(line: 0, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !3, line: 1008, column: 3)
!9298 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 1008, column: 3)
!9299 = !DILocation(line: 1008, column: 8, scope: !9298)
!9300 = !DILocation(line: 0, scope: !9298)
!9301 = !DILocation(line: 1008, column: 15, scope: !9297)
!9302 = !DILocation(line: 1008, column: 3, scope: !9298)
!9303 = !DILocation(line: 1009, column: 25, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 1009, column: 9)
!9305 = !DILocation(line: 1009, column: 10, scope: !9304)
!9306 = !DILocation(line: 1009, column: 9, scope: !9297)
!9307 = !DILocation(line: 1008, column: 49, scope: !9297)
!9308 = !DILocation(line: 1008, column: 3, scope: !9297)
!9309 = distinct !{!9309, !9302, !9310}
!9310 = !DILocation(line: 1010, column: 14, scope: !9298)
!9311 = !DILocation(line: 1013, column: 1, scope: !9287)
!9312 = distinct !DISubprogram(name: "affine_function_base", scope: !3, file: !3, line: 995, type: !9313, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!506, !1963}
!9315 = !{!9316}
!9316 = !DILocalVariable(name: "fn", arg: 1, scope: !9312, file: !3, line: 995, type: !1963)
!9317 = !DILocation(line: 0, scope: !9312)
!9318 = !DILocation(line: 997, column: 10, scope: !9312)
!9319 = !DILocation(line: 997, column: 3, scope: !9312)
!9320 = distinct !DISubprogram(name: "affine_function_equal_p", scope: !3, file: !3, line: 956, type: !9321, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{!498, !1963, !1963}
!9323 = !{!9324, !9325, !9326, !9327}
!9324 = !DILocalVariable(name: "fna", arg: 1, scope: !9320, file: !3, line: 956, type: !1963)
!9325 = !DILocalVariable(name: "fnb", arg: 2, scope: !9320, file: !3, line: 956, type: !1963)
!9326 = !DILocalVariable(name: "i", scope: !9320, file: !3, line: 958, type: !7)
!9327 = !DILocalVariable(name: "n", scope: !9320, file: !3, line: 958, type: !7)
!9328 = !DILocation(line: 0, scope: !9320)
!9329 = !DILocation(line: 958, column: 19, scope: !9320)
!9330 = !DILocation(line: 960, column: 12, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 960, column: 7)
!9332 = !DILocation(line: 960, column: 9, scope: !9331)
!9333 = !DILocation(line: 960, column: 7, scope: !9320)
!9334 = !DILocation(line: 963, column: 3, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 963, column: 3)
!9336 = !DILocation(line: 0, scope: !9335)
!9337 = !DILocation(line: 963, column: 17, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 963, column: 3)
!9339 = !DILocation(line: 964, column: 27, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 964, column: 9)
!9341 = !DILocation(line: 965, column: 6, scope: !9340)
!9342 = !DILocation(line: 964, column: 10, scope: !9340)
!9343 = !DILocation(line: 964, column: 9, scope: !9338)
!9344 = !DILocation(line: 963, column: 23, scope: !9338)
!9345 = !DILocation(line: 963, column: 3, scope: !9338)
!9346 = distinct !{!9346, !9334, !9347}
!9347 = !DILocation(line: 966, column: 14, scope: !9335)
!9348 = !DILocation(line: 969, column: 1, scope: !9320)
!9349 = distinct !DISubprogram(name: "same_access_functions", scope: !391, file: !391, line: 427, type: !9350, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9354)
!9350 = !DISubroutineType(types: !9351)
!9351 = !{!498, !9352}
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 64)
!9353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1933)
!9354 = !{!9355, !9356}
!9355 = !DILocalVariable(name: "ddr", arg: 1, scope: !9349, file: !391, line: 427, type: !9352)
!9356 = !DILocalVariable(name: "i", scope: !9349, file: !391, line: 429, type: !7)
!9357 = !DILocation(line: 0, scope: !9349)
!9358 = !DILocation(line: 0, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !391, line: 431, column: 3)
!9360 = distinct !DILexicalBlock(scope: !9349, file: !391, line: 431, column: 3)
!9361 = !DILocation(line: 0, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9359, file: !391, line: 432, column: 9)
!9363 = !DILocation(line: 431, column: 8, scope: !9360)
!9364 = !DILocation(line: 0, scope: !9360)
!9365 = !DILocation(line: 431, column: 19, scope: !9359)
!9366 = !DILocation(line: 431, column: 17, scope: !9359)
!9367 = !DILocation(line: 431, column: 3, scope: !9360)
!9368 = !DILocation(line: 432, column: 27, scope: !9362)
!9369 = !DILocation(line: 433, column: 6, scope: !9362)
!9370 = !DILocation(line: 432, column: 10, scope: !9362)
!9371 = !DILocation(line: 432, column: 9, scope: !9359)
!9372 = !DILocation(line: 431, column: 46, scope: !9359)
!9373 = !DILocation(line: 431, column: 3, scope: !9359)
!9374 = distinct !{!9374, !9367, !9375}
!9375 = !DILocation(line: 434, column: 14, scope: !9360)
!9376 = !DILocation(line: 437, column: 1, scope: !9349)
!9377 = distinct !DISubprogram(name: "lambda_vector_new", scope: !1905, file: !1905, line: 240, type: !9378, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!1916, !499}
!9380 = !{!9381}
!9381 = !DILocalVariable(name: "size", arg: 1, scope: !9377, file: !1905, line: 240, type: !499)
!9382 = !DILocation(line: 0, scope: !9377)
!9383 = !DILocation(line: 242, column: 10, scope: !9377)
!9384 = !DILocation(line: 242, column: 3, scope: !9377)
!9385 = distinct !DISubprogram(name: "save_dist_v", scope: !3, file: !3, line: 2792, type: !9386, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9388)
!9386 = !DISubroutineType(types: !9387)
!9387 = !{null, !1932, !1916}
!9388 = !{!9389, !9390, !9391, !9392}
!9389 = !DILocalVariable(name: "ddr", arg: 1, scope: !9385, file: !3, line: 2792, type: !1932)
!9390 = !DILocalVariable(name: "dist_v", arg: 2, scope: !9385, file: !3, line: 2792, type: !1916)
!9391 = !DILocalVariable(name: "i", scope: !9385, file: !3, line: 2794, type: !7)
!9392 = !DILocalVariable(name: "v", scope: !9385, file: !3, line: 2795, type: !1916)
!9393 = !DILocation(line: 0, scope: !9385)
!9394 = !DILocation(line: 2795, column: 3, scope: !9385)
!9395 = !DILocation(line: 0, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 2797, column: 3)
!9397 = distinct !DILexicalBlock(scope: !9385, file: !3, line: 2797, column: 3)
!9398 = !DILocation(line: 0, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2798, column: 9)
!9400 = !DILocation(line: 2797, column: 8, scope: !9397)
!9401 = !DILocation(line: 0, scope: !9397)
!9402 = !DILocation(line: 2797, column: 15, scope: !9396)
!9403 = !DILocation(line: 2797, column: 3, scope: !9397)
!9404 = !DILocation(line: 2798, column: 30, scope: !9399)
!9405 = !DILocation(line: 2798, column: 41, scope: !9399)
!9406 = !DILocation(line: 2798, column: 9, scope: !9399)
!9407 = !DILocation(line: 2798, column: 9, scope: !9396)
!9408 = !DILocation(line: 2797, column: 73, scope: !9396)
!9409 = !DILocation(line: 2797, column: 3, scope: !9396)
!9410 = distinct !{!9410, !9403, !9411}
!9411 = !DILocation(line: 2799, column: 7, scope: !9397)
!9412 = !DILocation(line: 2801, column: 3, scope: !9385)
!9413 = !DILocation(line: 2802, column: 1, scope: !9385)
!9414 = distinct !DISubprogram(name: "constant_access_functions", scope: !3, file: !3, line: 2941, type: !9350, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9415)
!9415 = !{!9416, !9417}
!9416 = !DILocalVariable(name: "ddr", arg: 1, scope: !9414, file: !3, line: 2941, type: !9352)
!9417 = !DILocalVariable(name: "i", scope: !9414, file: !3, line: 2943, type: !7)
!9418 = !DILocation(line: 0, scope: !9414)
!9419 = !DILocation(line: 0, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 2945, column: 3)
!9421 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 2945, column: 3)
!9422 = !DILocation(line: 0, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 2946, column: 9)
!9424 = !DILocation(line: 2945, column: 8, scope: !9421)
!9425 = !DILocation(line: 0, scope: !9421)
!9426 = !DILocation(line: 2945, column: 19, scope: !9420)
!9427 = !DILocation(line: 2945, column: 17, scope: !9420)
!9428 = !DILocation(line: 2945, column: 3, scope: !9421)
!9429 = !DILocation(line: 2946, column: 44, scope: !9423)
!9430 = !DILocation(line: 2946, column: 10, scope: !9423)
!9431 = !DILocation(line: 2947, column: 2, scope: !9423)
!9432 = !DILocation(line: 2947, column: 40, scope: !9423)
!9433 = !DILocation(line: 2947, column: 6, scope: !9423)
!9434 = !DILocation(line: 2946, column: 9, scope: !9420)
!9435 = !DILocation(line: 2945, column: 46, scope: !9420)
!9436 = !DILocation(line: 2945, column: 3, scope: !9420)
!9437 = distinct !{!9437, !9428, !9438}
!9438 = !DILocation(line: 2948, column: 14, scope: !9421)
!9439 = !DILocation(line: 2951, column: 1, scope: !9414)
!9440 = distinct !DISubprogram(name: "add_distance_for_zero_overlaps", scope: !3, file: !3, line: 3070, type: !3024, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9441)
!9441 = !{!9442, !9443, !9444, !9445, !9449, !9450}
!9442 = !DILocalVariable(name: "ddr", arg: 1, scope: !9440, file: !3, line: 3070, type: !1932)
!9443 = !DILocalVariable(name: "i", scope: !9440, file: !3, line: 3072, type: !7)
!9444 = !DILocalVariable(name: "j", scope: !9440, file: !3, line: 3072, type: !7)
!9445 = !DILocalVariable(name: "sub", scope: !9446, file: !3, line: 3076, type: !1951)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 3075, column: 5)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 3074, column: 3)
!9448 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 3074, column: 3)
!9449 = !DILocalVariable(name: "ca", scope: !9446, file: !3, line: 3077, type: !1956)
!9450 = !DILocalVariable(name: "cb", scope: !9446, file: !3, line: 3078, type: !1956)
!9451 = !DILocation(line: 0, scope: !9440)
!9452 = !DILocation(line: 0, scope: !9447)
!9453 = !DILocation(line: 3074, column: 8, scope: !9448)
!9454 = !DILocation(line: 0, scope: !9448)
!9455 = !DILocation(line: 3074, column: 19, scope: !9447)
!9456 = !DILocation(line: 3074, column: 17, scope: !9447)
!9457 = !DILocation(line: 3074, column: 3, scope: !9448)
!9458 = !DILocation(line: 3076, column: 25, scope: !9446)
!9459 = !DILocation(line: 0, scope: !9446)
!9460 = !DILocation(line: 3077, column: 31, scope: !9446)
!9461 = !DILocation(line: 3078, column: 31, scope: !9446)
!9462 = !DILocation(line: 0, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 3080, column: 7)
!9464 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 3080, column: 7)
!9465 = !DILocation(line: 3080, column: 12, scope: !9464)
!9466 = !DILocation(line: 0, scope: !9464)
!9467 = !DILocation(line: 3080, column: 27, scope: !9463)
!9468 = !DILocation(line: 3080, column: 21, scope: !9463)
!9469 = !DILocation(line: 3080, column: 7, scope: !9464)
!9470 = !DILocation(line: 0, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3087, column: 7)
!9472 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 3087, column: 7)
!9473 = !DILocation(line: 3087, column: 7, scope: !9472)
!9474 = !DILocation(line: 3081, column: 30, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 3081, column: 6)
!9476 = !DILocation(line: 3081, column: 6, scope: !9475)
!9477 = !DILocation(line: 3081, column: 6, scope: !9463)
!9478 = !DILocation(line: 3083, column: 6, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 3082, column: 4)
!9480 = !DILocation(line: 3084, column: 6, scope: !9479)
!9481 = !DILocation(line: 3080, column: 31, scope: !9463)
!9482 = !DILocation(line: 3080, column: 7, scope: !9463)
!9483 = distinct !{!9483, !9469, !9484}
!9484 = !DILocation(line: 3085, column: 4, scope: !9464)
!9485 = !DILocation(line: 0, scope: !9472)
!9486 = !DILocation(line: 3087, column: 27, scope: !9471)
!9487 = !DILocation(line: 3087, column: 21, scope: !9471)
!9488 = !DILocation(line: 3088, column: 30, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 3088, column: 6)
!9490 = !DILocation(line: 3088, column: 6, scope: !9489)
!9491 = !DILocation(line: 3088, column: 6, scope: !9471)
!9492 = !DILocation(line: 3090, column: 6, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 3089, column: 4)
!9494 = !DILocation(line: 3091, column: 6, scope: !9493)
!9495 = !DILocation(line: 3087, column: 31, scope: !9471)
!9496 = !DILocation(line: 3087, column: 7, scope: !9471)
!9497 = distinct !{!9497, !9473, !9498}
!9498 = !DILocation(line: 3092, column: 4, scope: !9472)
!9499 = !DILocation(line: 3074, column: 46, scope: !9447)
!9500 = !DILocation(line: 3074, column: 3, scope: !9447)
!9501 = distinct !{!9501, !9457, !9502}
!9502 = !DILocation(line: 3093, column: 5, scope: !9448)
!9503 = !DILocation(line: 3094, column: 1, scope: !9440)
!9504 = distinct !DISubprogram(name: "add_other_self_distances", scope: !3, file: !3, line: 3005, type: !3024, scopeLine: 3006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9505)
!9505 = !{!9506, !9507, !9508, !9509, !9510}
!9506 = !DILocalVariable(name: "ddr", arg: 1, scope: !9504, file: !3, line: 3005, type: !1932)
!9507 = !DILocalVariable(name: "dist_v", scope: !9504, file: !3, line: 3007, type: !1916)
!9508 = !DILocalVariable(name: "i", scope: !9504, file: !3, line: 3008, type: !7)
!9509 = !DILocalVariable(name: "index_carry", scope: !9504, file: !3, line: 3009, type: !499)
!9510 = !DILocalVariable(name: "access_fun", scope: !9511, file: !3, line: 3013, type: !506)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 3012, column: 5)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 3011, column: 3)
!9513 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 3011, column: 3)
!9514 = !DILocation(line: 0, scope: !9504)
!9515 = !DILocation(line: 3009, column: 21, scope: !9504)
!9516 = !DILocation(line: 0, scope: !9512)
!9517 = !DILocation(line: 0, scope: !9511)
!9518 = !DILocation(line: 0, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3020, column: 3)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 3019, column: 12)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !3, line: 3018, column: 6)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3017, column: 8)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3016, column: 2)
!9524 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 3015, column: 11)
!9525 = !DILocation(line: 0, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 3027, column: 12)
!9527 = !DILocation(line: 3011, column: 8, scope: !9513)
!9528 = !DILocation(line: 0, scope: !9513)
!9529 = !DILocation(line: 3011, column: 19, scope: !9512)
!9530 = !DILocation(line: 3011, column: 17, scope: !9512)
!9531 = !DILocation(line: 3011, column: 3, scope: !9513)
!9532 = !DILocation(line: 3013, column: 25, scope: !9511)
!9533 = !DILocation(line: 3015, column: 11, scope: !9524)
!9534 = !DILocation(line: 3015, column: 34, scope: !9524)
!9535 = !DILocation(line: 3015, column: 11, scope: !9511)
!9536 = !DILocation(line: 3017, column: 9, scope: !9522)
!9537 = !DILocation(line: 3017, column: 8, scope: !9523)
!9538 = !DILocation(line: 3019, column: 12, scope: !9520)
!9539 = !DILocation(line: 3019, column: 37, scope: !9520)
!9540 = !DILocation(line: 3019, column: 12, scope: !9521)
!9541 = !DILocation(line: 3021, column: 31, scope: !9519)
!9542 = !DILocation(line: 3021, column: 29, scope: !9519)
!9543 = !DILocation(line: 3022, column: 5, scope: !9519)
!9544 = !DILocation(line: 3025, column: 21, scope: !9521)
!9545 = !DILocation(line: 3027, column: 12, scope: !9526)
!9546 = !DILocation(line: 3027, column: 48, scope: !9526)
!9547 = !DILocation(line: 3027, column: 12, scope: !9521)
!9548 = !DILocation(line: 3028, column: 3, scope: !9526)
!9549 = !DILocation(line: 3034, column: 22, scope: !9526)
!9550 = !DILocation(line: 3039, column: 18, scope: !9523)
!9551 = !DILocation(line: 3011, column: 46, scope: !9512)
!9552 = !DILocation(line: 3011, column: 3, scope: !9512)
!9553 = distinct !{!9553, !9531, !9554}
!9554 = !DILocation(line: 3043, column: 5, scope: !9513)
!9555 = !DILocation(line: 3045, column: 31, scope: !9504)
!9556 = !DILocation(line: 3045, column: 12, scope: !9504)
!9557 = !DILocation(line: 3046, column: 3, scope: !9504)
!9558 = !DILocation(line: 3047, column: 1, scope: !9504)
!9559 = distinct !DISubprogram(name: "build_classic_dist_vector_1", scope: !3, file: !3, line: 2854, type: !9560, scopeLine: 2859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!498, !1932, !1860, !1860, !1916, !497, !1917}
!9562 = !{!9563, !9564, !9565, !9566, !9567, !9568, !9569, !9570, !9571, !9575, !9576, !9577, !9580, !9581, !9582}
!9563 = !DILocalVariable(name: "ddr", arg: 1, scope: !9559, file: !3, line: 2854, type: !1932)
!9564 = !DILocalVariable(name: "ddr_a", arg: 2, scope: !9559, file: !3, line: 2855, type: !1860)
!9565 = !DILocalVariable(name: "ddr_b", arg: 3, scope: !9559, file: !3, line: 2856, type: !1860)
!9566 = !DILocalVariable(name: "dist_v", arg: 4, scope: !9559, file: !3, line: 2857, type: !1916)
!9567 = !DILocalVariable(name: "init_b", arg: 5, scope: !9559, file: !3, line: 2857, type: !497)
!9568 = !DILocalVariable(name: "index_carry", arg: 6, scope: !9559, file: !3, line: 2858, type: !1917)
!9569 = !DILocalVariable(name: "i", scope: !9559, file: !3, line: 2860, type: !7)
!9570 = !DILocalVariable(name: "init_v", scope: !9559, file: !3, line: 2861, type: !1916)
!9571 = !DILocalVariable(name: "access_fn_a", scope: !9572, file: !3, line: 2865, type: !506)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 2864, column: 5)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 2863, column: 3)
!9574 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 2863, column: 3)
!9575 = !DILocalVariable(name: "access_fn_b", scope: !9572, file: !3, line: 2865, type: !506)
!9576 = !DILocalVariable(name: "subscript", scope: !9572, file: !3, line: 2866, type: !1952)
!9577 = !DILocalVariable(name: "dist", scope: !9578, file: !3, line: 2880, type: !499)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 2879, column: 2)
!9579 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2877, column: 11)
!9580 = !DILocalVariable(name: "index", scope: !9578, file: !3, line: 2880, type: !499)
!9581 = !DILocalVariable(name: "index_a", scope: !9578, file: !3, line: 2881, type: !499)
!9582 = !DILocalVariable(name: "index_b", scope: !9578, file: !3, line: 2883, type: !499)
!9583 = !DILocation(line: 0, scope: !9559)
!9584 = !DILocation(line: 2861, column: 45, scope: !9559)
!9585 = !DILocation(line: 2861, column: 26, scope: !9559)
!9586 = !DILocation(line: 0, scope: !9573)
!9587 = !DILocation(line: 0, scope: !9572)
!9588 = !DILocation(line: 2863, column: 8, scope: !9574)
!9589 = !DILocation(line: 0, scope: !9574)
!9590 = !DILocation(line: 2863, column: 19, scope: !9573)
!9591 = !DILocation(line: 2863, column: 17, scope: !9573)
!9592 = !DILocation(line: 2863, column: 3, scope: !9574)
!9593 = !DILocation(line: 2866, column: 37, scope: !9572)
!9594 = !DILocation(line: 2868, column: 40, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2868, column: 11)
!9596 = !DILocation(line: 2868, column: 11, scope: !9595)
!9597 = !DILocation(line: 2868, column: 11, scope: !9572)
!9598 = !DILocation(line: 2870, column: 4, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2869, column: 2)
!9600 = !DILocation(line: 2871, column: 4, scope: !9599)
!9601 = !DILocation(line: 2874, column: 21, scope: !9572)
!9602 = !DILocation(line: 2875, column: 21, scope: !9572)
!9603 = !DILocation(line: 2877, column: 11, scope: !9579)
!9604 = !DILocation(line: 2877, column: 35, scope: !9579)
!9605 = !DILocation(line: 2878, column: 4, scope: !9579)
!9606 = !DILocation(line: 2878, column: 7, scope: !9579)
!9607 = !DILocation(line: 2878, column: 31, scope: !9579)
!9608 = !DILocation(line: 2877, column: 11, scope: !9572)
!9609 = !DILocation(line: 2881, column: 38, scope: !9578)
!9610 = !DILocation(line: 2882, column: 10, scope: !9578)
!9611 = !DILocation(line: 2881, column: 18, scope: !9578)
!9612 = !DILocation(line: 0, scope: !9578)
!9613 = !DILocation(line: 2883, column: 38, scope: !9578)
!9614 = !DILocation(line: 2884, column: 10, scope: !9578)
!9615 = !DILocation(line: 2883, column: 18, scope: !9578)
!9616 = !DILocation(line: 2894, column: 20, scope: !9578)
!9617 = !DILocation(line: 2894, column: 12, scope: !9578)
!9618 = !DILocation(line: 2895, column: 19, scope: !9578)
!9619 = !DILocation(line: 2895, column: 17, scope: !9578)
!9620 = !DILocation(line: 2897, column: 37, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 2897, column: 8)
!9622 = !DILocation(line: 2897, column: 8, scope: !9621)
!9623 = !DILocation(line: 2897, column: 8, scope: !9578)
!9624 = !DILocation(line: 2899, column: 8, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2898, column: 6)
!9626 = !DILocation(line: 2900, column: 8, scope: !9625)
!9627 = !DILocation(line: 2903, column: 26, scope: !9578)
!9628 = !DILocation(line: 2903, column: 11, scope: !9578)
!9629 = !DILocation(line: 2915, column: 8, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 2915, column: 8)
!9631 = !DILocation(line: 2915, column: 22, scope: !9630)
!9632 = !DILocation(line: 2915, column: 27, scope: !9630)
!9633 = !DILocation(line: 2915, column: 30, scope: !9630)
!9634 = !DILocation(line: 2915, column: 44, scope: !9630)
!9635 = !DILocation(line: 2915, column: 8, scope: !9578)
!9636 = !DILocation(line: 2917, column: 37, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 2916, column: 6)
!9638 = !DILocation(line: 2917, column: 8, scope: !9637)
!9639 = !DILocation(line: 2918, column: 8, scope: !9637)
!9640 = !DILocation(line: 2921, column: 4, scope: !9578)
!9641 = !DILocation(line: 2921, column: 18, scope: !9578)
!9642 = !DILocation(line: 2922, column: 18, scope: !9578)
!9643 = !DILocation(line: 2923, column: 12, scope: !9578)
!9644 = !DILocation(line: 2924, column: 2, scope: !9579)
!9645 = !DILocation(line: 2925, column: 17, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 2925, column: 16)
!9647 = !DILocation(line: 2925, column: 16, scope: !9579)
!9648 = !DILocation(line: 2930, column: 4, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 2926, column: 2)
!9650 = !DILocation(line: 2931, column: 4, scope: !9649)
!9651 = !DILocation(line: 2933, column: 5, scope: !9573)
!9652 = !DILocation(line: 2863, column: 46, scope: !9573)
!9653 = !DILocation(line: 2863, column: 3, scope: !9573)
!9654 = distinct !{!9654, !9592, !9655}
!9655 = !DILocation(line: 2933, column: 5, scope: !9574)
!9656 = !DILocation(line: 2936, column: 1, scope: !9559)
!9657 = distinct !DISubprogram(name: "lambda_vector_lexico_pos", scope: !1905, file: !1905, line: 465, type: !9658, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!498, !1916, !7}
!9660 = !{!9661, !9662, !9663}
!9661 = !DILocalVariable(name: "v", arg: 1, scope: !9657, file: !1905, line: 465, type: !1916)
!9662 = !DILocalVariable(name: "n", arg: 2, scope: !9657, file: !1905, line: 466, type: !7)
!9663 = !DILocalVariable(name: "i", scope: !9657, file: !1905, line: 468, type: !7)
!9664 = !DILocation(line: 0, scope: !9657)
!9665 = !DILocation(line: 469, column: 17, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9667, file: !1905, line: 469, column: 3)
!9667 = distinct !DILexicalBlock(scope: !9657, file: !1905, line: 469, column: 3)
!9668 = !DILocation(line: 469, column: 8, scope: !9667)
!9669 = !DILocation(line: 0, scope: !9667)
!9670 = !DILocation(line: 469, column: 3, scope: !9667)
!9671 = !DILocation(line: 471, column: 11, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9673, file: !1905, line: 471, column: 11)
!9673 = distinct !DILexicalBlock(scope: !9666, file: !1905, line: 470, column: 5)
!9674 = !DILocation(line: 471, column: 16, scope: !9672)
!9675 = !DILocation(line: 471, column: 11, scope: !9673)
!9676 = !DILocation(line: 473, column: 16, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9673, file: !1905, line: 473, column: 11)
!9678 = !DILocation(line: 473, column: 11, scope: !9673)
!9679 = !DILocation(line: 475, column: 16, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9673, file: !1905, line: 475, column: 11)
!9681 = !DILocation(line: 475, column: 11, scope: !9673)
!9682 = !DILocation(line: 469, column: 23, scope: !9666)
!9683 = !DILocation(line: 469, column: 3, scope: !9666)
!9684 = distinct !{!9684, !9670, !9685}
!9685 = !DILocation(line: 477, column: 5, scope: !9667)
!9686 = !DILocation(line: 479, column: 1, scope: !9657)
!9687 = distinct !DISubprogram(name: "add_outer_distances", scope: !3, file: !3, line: 2834, type: !9688, scopeLine: 2836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9690)
!9688 = !DISubroutineType(types: !9689)
!9689 = !{null, !1932, !1916, !499}
!9690 = !{!9691, !9692, !9693, !9694}
!9691 = !DILocalVariable(name: "ddr", arg: 1, scope: !9687, file: !3, line: 2834, type: !1932)
!9692 = !DILocalVariable(name: "dist_v", arg: 2, scope: !9687, file: !3, line: 2835, type: !1916)
!9693 = !DILocalVariable(name: "index", arg: 3, scope: !9687, file: !3, line: 2835, type: !499)
!9694 = !DILocalVariable(name: "save_v", scope: !9695, file: !3, line: 2841, type: !1916)
!9695 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2840, column: 5)
!9696 = !DILocation(line: 0, scope: !9687)
!9697 = !DILocation(line: 0, scope: !9695)
!9698 = !DILocation(line: 2839, column: 3, scope: !9687)
!9699 = !DILocation(line: 2839, column: 10, scope: !9687)
!9700 = !DILocation(line: 2839, column: 18, scope: !9687)
!9701 = !DILocation(line: 2841, column: 49, scope: !9695)
!9702 = !DILocation(line: 2841, column: 30, scope: !9695)
!9703 = !DILocation(line: 2842, column: 43, scope: !9695)
!9704 = !DILocation(line: 2842, column: 7, scope: !9695)
!9705 = !DILocation(line: 2843, column: 7, scope: !9695)
!9706 = !DILocation(line: 2843, column: 21, scope: !9695)
!9707 = !DILocation(line: 2844, column: 7, scope: !9695)
!9708 = distinct !{!9708, !9698, !9709}
!9709 = !DILocation(line: 2845, column: 5, scope: !9687)
!9710 = !DILocation(line: 2846, column: 1, scope: !9687)
!9711 = distinct !DISubprogram(name: "lambda_vector_copy", scope: !1905, file: !1905, line: 298, type: !9712, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9714)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{null, !1916, !1916, !499}
!9714 = !{!9715, !9716, !9717}
!9715 = !DILocalVariable(name: "vec1", arg: 1, scope: !9711, file: !1905, line: 298, type: !1916)
!9716 = !DILocalVariable(name: "vec2", arg: 2, scope: !9711, file: !1905, line: 298, type: !1916)
!9717 = !DILocalVariable(name: "size", arg: 3, scope: !9711, file: !1905, line: 299, type: !499)
!9718 = !DILocation(line: 0, scope: !9711)
!9719 = !DILocation(line: 301, column: 11, scope: !9711)
!9720 = !DILocation(line: 301, column: 17, scope: !9711)
!9721 = !DILocation(line: 301, column: 23, scope: !9711)
!9722 = !DILocation(line: 301, column: 28, scope: !9711)
!9723 = !DILocation(line: 301, column: 3, scope: !9711)
!9724 = !DILocation(line: 302, column: 1, scope: !9711)
!9725 = distinct !DISubprogram(name: "lambda_vector_first_nz", scope: !1905, file: !1905, line: 361, type: !9726, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9728)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!499, !1916, !499, !499}
!9728 = !{!9729, !9730, !9731, !9732}
!9729 = !DILocalVariable(name: "vec1", arg: 1, scope: !9725, file: !1905, line: 361, type: !1916)
!9730 = !DILocalVariable(name: "n", arg: 2, scope: !9725, file: !1905, line: 361, type: !499)
!9731 = !DILocalVariable(name: "start", arg: 3, scope: !9725, file: !1905, line: 361, type: !499)
!9732 = !DILocalVariable(name: "j", scope: !9725, file: !1905, line: 363, type: !499)
!9733 = !DILocation(line: 0, scope: !9725)
!9734 = !DILocation(line: 364, column: 3, scope: !9725)
!9735 = !DILocation(line: 364, column: 12, scope: !9725)
!9736 = !DILocation(line: 364, column: 16, scope: !9725)
!9737 = !DILocation(line: 364, column: 19, scope: !9725)
!9738 = !DILocation(line: 364, column: 27, scope: !9725)
!9739 = !DILocation(line: 365, column: 6, scope: !9725)
!9740 = distinct !{!9740, !9734, !9739}
!9741 = !DILocation(line: 366, column: 3, scope: !9725)
!9742 = distinct !DISubprogram(name: "lambda_vector_equal", scope: !1905, file: !1905, line: 327, type: !9743, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9745)
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!498, !1916, !1916, !499}
!9745 = !{!9746, !9747, !9748, !9749}
!9746 = !DILocalVariable(name: "vec1", arg: 1, scope: !9742, file: !1905, line: 327, type: !1916)
!9747 = !DILocalVariable(name: "vec2", arg: 2, scope: !9742, file: !1905, line: 327, type: !1916)
!9748 = !DILocalVariable(name: "size", arg: 3, scope: !9742, file: !1905, line: 327, type: !499)
!9749 = !DILocalVariable(name: "i", scope: !9742, file: !1905, line: 329, type: !499)
!9750 = !DILocation(line: 0, scope: !9742)
!9751 = !DILocation(line: 330, column: 8, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9742, file: !1905, line: 330, column: 3)
!9753 = !DILocation(line: 0, scope: !9752)
!9754 = !DILocation(line: 330, column: 17, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9752, file: !1905, line: 330, column: 3)
!9756 = !DILocation(line: 330, column: 3, scope: !9752)
!9757 = !DILocation(line: 331, column: 9, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9755, file: !1905, line: 331, column: 9)
!9759 = !DILocation(line: 331, column: 20, scope: !9758)
!9760 = !DILocation(line: 331, column: 17, scope: !9758)
!9761 = !DILocation(line: 331, column: 9, scope: !9755)
!9762 = !DILocation(line: 330, column: 26, scope: !9755)
!9763 = !DILocation(line: 330, column: 3, scope: !9755)
!9764 = distinct !{!9764, !9756, !9765}
!9765 = !DILocation(line: 332, column: 14, scope: !9752)
!9766 = !DILocation(line: 334, column: 1, scope: !9742)
!9767 = distinct !DISubprogram(name: "VEC_lambda_vector_heap_safe_push", scope: !1905, file: !1905, line: 33, type: !9768, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9770)
!9768 = !DISubroutineType(types: !9769)
!9769 = !{!2965, !5194, !1916}
!9770 = !{!9771, !9772}
!9771 = !DILocalVariable(name: "vec_", arg: 1, scope: !9767, file: !1905, line: 33, type: !5194)
!9772 = !DILocalVariable(name: "obj_", arg: 2, scope: !9767, file: !1905, line: 33, type: !1916)
!9773 = !DILocation(line: 0, scope: !9767)
!9774 = !DILocation(line: 33, column: 1, scope: !9767)
!9775 = distinct !DISubprogram(name: "VEC_lambda_vector_heap_reserve", scope: !1905, file: !1905, line: 33, type: !9776, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{!499, !5194, !499}
!9778 = !{!9779, !9780, !9781}
!9779 = !DILocalVariable(name: "vec_", arg: 1, scope: !9775, file: !1905, line: 33, type: !5194)
!9780 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9775, file: !1905, line: 33, type: !499)
!9781 = !DILocalVariable(name: "extend", scope: !9775, file: !1905, line: 33, type: !499)
!9782 = !DILocation(line: 0, scope: !9775)
!9783 = !DILocation(line: 33, column: 1, scope: !9775)
!9784 = !DILocation(line: 33, column: 1, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9775, file: !1905, line: 33, column: 1)
!9786 = distinct !DISubprogram(name: "VEC_lambda_vector_base_quick_push", scope: !1905, file: !1905, line: 32, type: !9787, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9790)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{!2965, !9789, !1916}
!9789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!9790 = !{!9791, !9792, !9793}
!9791 = !DILocalVariable(name: "vec_", arg: 1, scope: !9786, file: !1905, line: 32, type: !9789)
!9792 = !DILocalVariable(name: "obj_", arg: 2, scope: !9786, file: !1905, line: 32, type: !1916)
!9793 = !DILocalVariable(name: "slot_", scope: !9786, file: !1905, line: 32, type: !2965)
!9794 = !DILocation(line: 0, scope: !9786)
!9795 = !DILocation(line: 32, column: 1, scope: !9786)
!9796 = distinct !DISubprogram(name: "VEC_lambda_vector_base_space", scope: !1905, file: !1905, line: 32, type: !9797, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9799)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{!499, !9789, !499}
!9799 = !{!9800, !9801}
!9800 = !DILocalVariable(name: "vec_", arg: 1, scope: !9796, file: !1905, line: 32, type: !9789)
!9801 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9796, file: !1905, line: 32, type: !499)
!9802 = !DILocation(line: 0, scope: !9796)
!9803 = !DILocation(line: 32, column: 1, scope: !9796)
!9804 = distinct !DISubprogram(name: "affine_function_zero_p", scope: !3, file: !3, line: 1018, type: !9288, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9805)
!9805 = !{!9806}
!9806 = !DILocalVariable(name: "fn", arg: 1, scope: !9804, file: !3, line: 1018, type: !1963)
!9807 = !DILocation(line: 0, scope: !9804)
!9808 = !DILocation(line: 1020, column: 26, scope: !9804)
!9809 = !DILocation(line: 1020, column: 11, scope: !9804)
!9810 = !DILocation(line: 1021, column: 4, scope: !9804)
!9811 = !DILocation(line: 1021, column: 7, scope: !9804)
!9812 = !DILocation(line: 1020, column: 3, scope: !9804)
!9813 = distinct !DISubprogram(name: "insert_innermost_unit_dist_vector", scope: !3, file: !3, line: 3050, type: !3024, scopeLine: 3051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9814)
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "ddr", arg: 1, scope: !9813, file: !3, line: 3050, type: !1932)
!9816 = !DILocalVariable(name: "dist_v", scope: !9813, file: !3, line: 3052, type: !1916)
!9817 = !DILocation(line: 0, scope: !9813)
!9818 = !DILocation(line: 3052, column: 45, scope: !9813)
!9819 = !DILocation(line: 3052, column: 26, scope: !9813)
!9820 = !DILocation(line: 3054, column: 10, scope: !9813)
!9821 = !DILocation(line: 3054, column: 3, scope: !9813)
!9822 = !DILocation(line: 3054, column: 32, scope: !9813)
!9823 = !DILocation(line: 3055, column: 3, scope: !9813)
!9824 = !DILocation(line: 3056, column: 1, scope: !9813)
!9825 = distinct !DISubprogram(name: "add_multivariate_self_dist", scope: !3, file: !3, line: 2958, type: !7079, scopeLine: 2959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836}
!9827 = !DILocalVariable(name: "ddr", arg: 1, scope: !9825, file: !3, line: 2958, type: !1932)
!9828 = !DILocalVariable(name: "c_2", arg: 2, scope: !9825, file: !3, line: 2958, type: !506)
!9829 = !DILocalVariable(name: "x_1", scope: !9825, file: !3, line: 2960, type: !499)
!9830 = !DILocalVariable(name: "x_2", scope: !9825, file: !3, line: 2960, type: !499)
!9831 = !DILocalVariable(name: "c_1", scope: !9825, file: !3, line: 2961, type: !506)
!9832 = !DILocalVariable(name: "c_0", scope: !9825, file: !3, line: 2962, type: !506)
!9833 = !DILocalVariable(name: "dist_v", scope: !9825, file: !3, line: 2963, type: !1916)
!9834 = !DILocalVariable(name: "v1", scope: !9825, file: !3, line: 2964, type: !499)
!9835 = !DILocalVariable(name: "v2", scope: !9825, file: !3, line: 2964, type: !499)
!9836 = !DILocalVariable(name: "cd", scope: !9825, file: !3, line: 2964, type: !499)
!9837 = !DILocation(line: 0, scope: !9825)
!9838 = !DILocation(line: 2961, column: 14, scope: !9825)
!9839 = !DILocation(line: 2962, column: 14, scope: !9825)
!9840 = !DILocation(line: 2969, column: 7, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 2969, column: 7)
!9842 = !DILocation(line: 2969, column: 23, scope: !9841)
!9843 = !DILocation(line: 2970, column: 7, scope: !9841)
!9844 = !DILocation(line: 2970, column: 10, scope: !9841)
!9845 = !DILocation(line: 2970, column: 40, scope: !9841)
!9846 = !DILocation(line: 2971, column: 7, scope: !9841)
!9847 = !DILocation(line: 2971, column: 10, scope: !9841)
!9848 = !DILocation(line: 2971, column: 40, scope: !9841)
!9849 = !DILocation(line: 2969, column: 7, scope: !9825)
!9850 = !DILocation(line: 2973, column: 7, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 2972, column: 5)
!9852 = !DILocation(line: 2973, column: 26, scope: !9851)
!9853 = !DILocation(line: 2974, column: 7, scope: !9851)
!9854 = !DILocation(line: 2977, column: 29, scope: !9825)
!9855 = !DILocation(line: 2977, column: 51, scope: !9825)
!9856 = !DILocation(line: 2977, column: 9, scope: !9825)
!9857 = !DILocation(line: 2978, column: 29, scope: !9825)
!9858 = !DILocation(line: 2978, column: 51, scope: !9825)
!9859 = !DILocation(line: 2978, column: 9, scope: !9825)
!9860 = !DILocation(line: 2981, column: 31, scope: !9825)
!9861 = !DILocation(line: 2981, column: 12, scope: !9825)
!9862 = !DILocation(line: 2982, column: 23, scope: !9825)
!9863 = !DILocation(line: 2982, column: 8, scope: !9825)
!9864 = !DILocation(line: 2983, column: 23, scope: !9825)
!9865 = !DILocation(line: 2983, column: 8, scope: !9825)
!9866 = !DILocation(line: 2984, column: 8, scope: !9825)
!9867 = !DILocation(line: 2985, column: 6, scope: !9825)
!9868 = !DILocation(line: 2986, column: 6, scope: !9825)
!9869 = !DILocation(line: 2988, column: 10, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 2988, column: 7)
!9871 = !DILocation(line: 2988, column: 7, scope: !9825)
!9872 = !DILocation(line: 2994, column: 3, scope: !9825)
!9873 = !DILocation(line: 2994, column: 15, scope: !9825)
!9874 = !DILocation(line: 2995, column: 17, scope: !9825)
!9875 = !DILocation(line: 2995, column: 3, scope: !9825)
!9876 = !DILocation(line: 2995, column: 15, scope: !9825)
!9877 = !DILocation(line: 2996, column: 3, scope: !9825)
!9878 = !DILocation(line: 2998, column: 3, scope: !9825)
!9879 = !DILocation(line: 2999, column: 1, scope: !9825)
!9880 = distinct !DISubprogram(name: "index_in_loop_nest", scope: !391, file: !391, line: 556, type: !9881, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9883)
!9881 = !DISubroutineType(types: !9882)
!9882 = !{!499, !499, !1895}
!9883 = !{!9884, !9885, !9886, !9887}
!9884 = !DILocalVariable(name: "var", arg: 1, scope: !9880, file: !391, line: 556, type: !499)
!9885 = !DILocalVariable(name: "loop_nest", arg: 2, scope: !9880, file: !391, line: 556, type: !1895)
!9886 = !DILocalVariable(name: "loopi", scope: !9880, file: !391, line: 558, type: !1045)
!9887 = !DILocalVariable(name: "var_index", scope: !9880, file: !391, line: 559, type: !499)
!9888 = !DILocation(line: 0, scope: !9880)
!9889 = !DILocation(line: 558, column: 3, scope: !9880)
!9890 = !DILocation(line: 0, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !391, line: 561, column: 3)
!9892 = distinct !DILexicalBlock(scope: !9880, file: !391, line: 561, column: 3)
!9893 = !DILocation(line: 561, column: 8, scope: !9892)
!9894 = !DILocation(line: 0, scope: !9892)
!9895 = !DILocation(line: 561, column: 23, scope: !9891)
!9896 = !DILocation(line: 561, column: 3, scope: !9892)
!9897 = !DILocation(line: 563, column: 9, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9891, file: !391, line: 563, column: 9)
!9899 = !DILocation(line: 563, column: 16, scope: !9898)
!9900 = !DILocation(line: 563, column: 20, scope: !9898)
!9901 = !DILocation(line: 563, column: 9, scope: !9891)
!9902 = !DILocation(line: 562, column: 17, scope: !9891)
!9903 = !DILocation(line: 561, column: 3, scope: !9891)
!9904 = distinct !{!9904, !9896, !9905}
!9905 = !DILocation(line: 564, column: 7, scope: !9892)
!9906 = !DILocation(line: 567, column: 1, scope: !9880)
!9907 = !DILocation(line: 566, column: 3, scope: !9880)
!9908 = distinct !DISubprogram(name: "non_affine_dependence_relation", scope: !3, file: !3, line: 1498, type: !3024, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9909)
!9909 = !{!9910}
!9910 = !DILocalVariable(name: "ddr", arg: 1, scope: !9908, file: !3, line: 1498, type: !1932)
!9911 = !DILocation(line: 0, scope: !9908)
!9912 = !DILocation(line: 1500, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9908, file: !3, line: 1500, column: 7)
!9914 = !DILocation(line: 1500, column: 17, scope: !9913)
!9915 = !DILocation(line: 1500, column: 21, scope: !9913)
!9916 = !DILocation(line: 1500, column: 32, scope: !9913)
!9917 = !DILocation(line: 1500, column: 7, scope: !9908)
!9918 = !DILocation(line: 1501, column: 5, scope: !9913)
!9919 = !DILocation(line: 1503, column: 3, scope: !9908)
!9920 = !DILocation(line: 1503, column: 22, scope: !9908)
!9921 = !DILocation(line: 1504, column: 1, scope: !9908)
!9922 = distinct !DISubprogram(name: "dir_from_dist", scope: !3, file: !3, line: 3256, type: !9923, scopeLine: 3257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9925)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!390, !499}
!9925 = !{!9926}
!9926 = !DILocalVariable(name: "dist", arg: 1, scope: !9922, file: !3, line: 3256, type: !499)
!9927 = !DILocation(line: 0, scope: !9922)
!9928 = !DILocation(line: 3258, column: 12, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3258, column: 7)
!9930 = !DILocation(line: 3258, column: 7, scope: !9922)
!9931 = !DILocation(line: 3264, column: 1, scope: !9922)
!9932 = distinct !DISubprogram(name: "save_dir_v", scope: !3, file: !3, line: 2807, type: !9386, scopeLine: 2808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9933)
!9933 = !{!9934, !9935, !9936, !9937}
!9934 = !DILocalVariable(name: "ddr", arg: 1, scope: !9932, file: !3, line: 2807, type: !1932)
!9935 = !DILocalVariable(name: "dir_v", arg: 2, scope: !9932, file: !3, line: 2807, type: !1916)
!9936 = !DILocalVariable(name: "i", scope: !9932, file: !3, line: 2809, type: !7)
!9937 = !DILocalVariable(name: "v", scope: !9932, file: !3, line: 2810, type: !1916)
!9938 = !DILocation(line: 0, scope: !9932)
!9939 = !DILocation(line: 2810, column: 3, scope: !9932)
!9940 = !DILocation(line: 0, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 2812, column: 3)
!9942 = distinct !DILexicalBlock(scope: !9932, file: !3, line: 2812, column: 3)
!9943 = !DILocation(line: 0, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 2813, column: 9)
!9945 = !DILocation(line: 2812, column: 8, scope: !9942)
!9946 = !DILocation(line: 0, scope: !9942)
!9947 = !DILocation(line: 2812, column: 15, scope: !9941)
!9948 = !DILocation(line: 2812, column: 3, scope: !9942)
!9949 = !DILocation(line: 2813, column: 30, scope: !9944)
!9950 = !DILocation(line: 2813, column: 40, scope: !9944)
!9951 = !DILocation(line: 2813, column: 9, scope: !9944)
!9952 = !DILocation(line: 2813, column: 9, scope: !9941)
!9953 = !DILocation(line: 2812, column: 72, scope: !9941)
!9954 = !DILocation(line: 2812, column: 3, scope: !9941)
!9955 = distinct !{!9955, !9948, !9956}
!9956 = !DILocation(line: 2814, column: 7, scope: !9942)
!9957 = !DILocation(line: 2816, column: 3, scope: !9932)
!9958 = !DILocation(line: 2817, column: 1, scope: !9932)
!9959 = distinct !DISubprogram(name: "init_omega_for_ddr_1", scope: !3, file: !3, line: 3614, type: !9960, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9962)
!9960 = !DISubroutineType(types: !9961)
!9961 = !{!498, !1860, !1860, !1932, !6821, !497}
!9962 = !{!9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972}
!9963 = !DILocalVariable(name: "dra", arg: 1, scope: !9959, file: !3, line: 3614, type: !1860)
!9964 = !DILocalVariable(name: "drb", arg: 2, scope: !9959, file: !3, line: 3614, type: !1860)
!9965 = !DILocalVariable(name: "ddr", arg: 3, scope: !9959, file: !3, line: 3615, type: !1932)
!9966 = !DILocalVariable(name: "pb", arg: 4, scope: !9959, file: !3, line: 3616, type: !6821)
!9967 = !DILocalVariable(name: "maybe_dependent", arg: 5, scope: !9959, file: !3, line: 3616, type: !497)
!9968 = !DILocalVariable(name: "i", scope: !9959, file: !3, line: 3618, type: !7)
!9969 = !DILocalVariable(name: "ineq", scope: !9959, file: !3, line: 3619, type: !499)
!9970 = !DILocalVariable(name: "loopi", scope: !9959, file: !3, line: 3620, type: !1045)
!9971 = !DILocalVariable(name: "nb_loops", scope: !9959, file: !3, line: 3621, type: !7)
!9972 = !DILocalVariable(name: "nbi", scope: !9973, file: !3, line: 3649, type: !562)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 3648, column: 5)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 3646, column: 3)
!9975 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3646, column: 3)
!9976 = !DILocation(line: 0, scope: !9959)
!9977 = !DILocation(line: 3620, column: 3, scope: !9959)
!9978 = !DILocation(line: 3621, column: 23, scope: !9959)
!9979 = !DILocation(line: 0, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 3624, column: 3)
!9981 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3624, column: 3)
!9982 = !DILocation(line: 0, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 3626, column: 11)
!9984 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 3625, column: 5)
!9985 = !DILocation(line: 3624, column: 8, scope: !9981)
!9986 = !DILocation(line: 0, scope: !9981)
!9987 = !DILocation(line: 3624, column: 19, scope: !9980)
!9988 = !DILocation(line: 3624, column: 17, scope: !9980)
!9989 = !DILocation(line: 3624, column: 3, scope: !9981)
!9990 = !DILocation(line: 0, scope: !9974)
!9991 = !DILocation(line: 0, scope: !9973)
!9992 = !DILocation(line: 3646, column: 3, scope: !9975)
!9993 = !DILocation(line: 3626, column: 35, scope: !9983)
!9994 = !DILocation(line: 3626, column: 58, scope: !9983)
!9995 = !DILocation(line: 3626, column: 12, scope: !9983)
!9996 = !DILocation(line: 3626, column: 11, scope: !9984)
!9997 = !DILocation(line: 3629, column: 16, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9983, file: !3, line: 3629, column: 16)
!9999 = !DILocation(line: 3629, column: 33, scope: !9998)
!10000 = !DILocation(line: 3629, column: 16, scope: !9983)
!10001 = !DILocation(line: 3632, column: 30, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3630, column: 2)
!10003 = !DILocation(line: 3632, column: 4, scope: !10002)
!10004 = !DILocation(line: 3632, column: 28, scope: !10002)
!10005 = !DILocation(line: 3633, column: 4, scope: !10002)
!10006 = !DILocation(line: 3624, column: 46, scope: !9980)
!10007 = !DILocation(line: 3624, column: 3, scope: !9980)
!10008 = distinct !{!10008, !9989, !10009}
!10009 = !DILocation(line: 3635, column: 5, scope: !9981)
!10010 = !DILocation(line: 0, scope: !9975)
!10011 = !DILocation(line: 3646, column: 20, scope: !9974)
!10012 = !DILocation(line: 3646, column: 17, scope: !9974)
!10013 = !DILocation(line: 3647, column: 3, scope: !9974)
!10014 = !DILocation(line: 3647, column: 6, scope: !9974)
!10015 = !DILocation(line: 3649, column: 58, scope: !9973)
!10016 = !DILocation(line: 3649, column: 27, scope: !9973)
!10017 = !DILocation(line: 3652, column: 14, scope: !9973)
!10018 = !DILocation(line: 3653, column: 11, scope: !9973)
!10019 = !DILocation(line: 3653, column: 7, scope: !9973)
!10020 = !DILocation(line: 3653, column: 22, scope: !9973)
!10021 = !DILocation(line: 3653, column: 29, scope: !9973)
!10022 = !DILocation(line: 3653, column: 40, scope: !9973)
!10023 = !DILocation(line: 3653, column: 45, scope: !9973)
!10024 = !DILocation(line: 3656, column: 14, scope: !9973)
!10025 = !DILocation(line: 3657, column: 11, scope: !9973)
!10026 = !DILocation(line: 3657, column: 7, scope: !9973)
!10027 = !DILocation(line: 3657, column: 22, scope: !9973)
!10028 = !DILocation(line: 3657, column: 45, scope: !9973)
!10029 = !DILocation(line: 3658, column: 11, scope: !9973)
!10030 = !DILocation(line: 3658, column: 22, scope: !9973)
!10031 = !DILocation(line: 3658, column: 29, scope: !9973)
!10032 = !DILocation(line: 3658, column: 7, scope: !9973)
!10033 = !DILocation(line: 3658, column: 34, scope: !9973)
!10034 = !DILocation(line: 3660, column: 15, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 3660, column: 11)
!10036 = !DILocation(line: 3660, column: 11, scope: !9973)
!10037 = !DILocation(line: 3663, column: 11, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 3661, column: 2)
!10039 = !DILocation(line: 3664, column: 8, scope: !10038)
!10040 = !DILocation(line: 3664, column: 4, scope: !10038)
!10041 = !DILocation(line: 3664, column: 19, scope: !10038)
!10042 = !DILocation(line: 3664, column: 42, scope: !10038)
!10043 = !DILocation(line: 3665, column: 29, scope: !10038)
!10044 = !DILocation(line: 3665, column: 8, scope: !10038)
!10045 = !DILocation(line: 3665, column: 19, scope: !10038)
!10046 = !DILocation(line: 3665, column: 27, scope: !10038)
!10047 = !DILocation(line: 3668, column: 11, scope: !10038)
!10048 = !DILocation(line: 3669, column: 8, scope: !10038)
!10049 = !DILocation(line: 3669, column: 4, scope: !10038)
!10050 = !DILocation(line: 3669, column: 19, scope: !10038)
!10051 = !DILocation(line: 3669, column: 42, scope: !10038)
!10052 = !DILocation(line: 3670, column: 8, scope: !10038)
!10053 = !DILocation(line: 3670, column: 19, scope: !10038)
!10054 = !DILocation(line: 3670, column: 4, scope: !10038)
!10055 = !DILocation(line: 3670, column: 31, scope: !10038)
!10056 = !DILocation(line: 3671, column: 8, scope: !10038)
!10057 = !DILocation(line: 3671, column: 19, scope: !10038)
!10058 = !DILocation(line: 3671, column: 27, scope: !10038)
!10059 = !DILocation(line: 3675, column: 11, scope: !10038)
!10060 = !DILocation(line: 3676, column: 8, scope: !10038)
!10061 = !DILocation(line: 3676, column: 4, scope: !10038)
!10062 = !DILocation(line: 3676, column: 19, scope: !10038)
!10063 = !DILocation(line: 3676, column: 31, scope: !10038)
!10064 = !DILocation(line: 3677, column: 8, scope: !10038)
!10065 = !DILocation(line: 3677, column: 19, scope: !10038)
!10066 = !DILocation(line: 3677, column: 27, scope: !10038)
!10067 = !DILocation(line: 3679, column: 11, scope: !10038)
!10068 = !DILocation(line: 3680, column: 8, scope: !10038)
!10069 = !DILocation(line: 3680, column: 4, scope: !10038)
!10070 = !DILocation(line: 3680, column: 19, scope: !10038)
!10071 = !DILocation(line: 3680, column: 31, scope: !10038)
!10072 = !DILocation(line: 3681, column: 8, scope: !10038)
!10073 = !DILocation(line: 3681, column: 19, scope: !10038)
!10074 = !DILocation(line: 3681, column: 27, scope: !10038)
!10075 = !DILocation(line: 3682, column: 2, scope: !10038)
!10076 = !DILocation(line: 3646, column: 3, scope: !9974)
!10077 = distinct !{!10077, !9992, !10078}
!10078 = !DILocation(line: 3683, column: 5, scope: !9975)
!10079 = !DILocation(line: 3685, column: 3, scope: !9959)
!10080 = !DILocation(line: 3687, column: 3, scope: !9959)
!10081 = !DILocation(line: 3688, column: 1, scope: !9959)
!10082 = distinct !DISubprogram(name: "omega_free_problem", scope: !480, file: !480, line: 297, type: !10083, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10085)
!10083 = !DISubroutineType(types: !10084)
!10084 = !{null, !6821}
!10085 = !{!10086}
!10086 = !DILocalVariable(name: "pb", arg: 1, scope: !10082, file: !480, line: 297, type: !6821)
!10087 = !DILocation(line: 0, scope: !10082)
!10088 = !DILocation(line: 299, column: 13, scope: !10082)
!10089 = !DILocation(line: 299, column: 3, scope: !10082)
!10090 = !DILocation(line: 300, column: 13, scope: !10082)
!10091 = !DILocation(line: 300, column: 3, scope: !10082)
!10092 = !DILocation(line: 301, column: 24, scope: !10082)
!10093 = !DILocation(line: 301, column: 30, scope: !10082)
!10094 = !DILocation(line: 301, column: 3, scope: !10082)
!10095 = !DILocation(line: 302, column: 24, scope: !10082)
!10096 = !DILocation(line: 302, column: 29, scope: !10082)
!10097 = !DILocation(line: 302, column: 3, scope: !10082)
!10098 = !DILocation(line: 303, column: 24, scope: !10082)
!10099 = !DILocation(line: 303, column: 30, scope: !10082)
!10100 = !DILocation(line: 303, column: 45, scope: !10082)
!10101 = !DILocation(line: 303, column: 3, scope: !10082)
!10102 = !DILocation(line: 304, column: 9, scope: !10082)
!10103 = !DILocation(line: 304, column: 3, scope: !10082)
!10104 = !DILocation(line: 305, column: 1, scope: !10082)
!10105 = distinct !DISubprogram(name: "omega_setup_subscript", scope: !3, file: !3, line: 3562, type: !10106, scopeLine: 3565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!498, !506, !506, !1932, !6821, !497}
!10108 = !{!10109, !10110, !10111, !10112, !10113, !10114, !10115, !10116, !10117, !10118}
!10109 = !DILocalVariable(name: "access_fun_a", arg: 1, scope: !10105, file: !3, line: 3562, type: !506)
!10110 = !DILocalVariable(name: "access_fun_b", arg: 2, scope: !10105, file: !3, line: 3562, type: !506)
!10111 = !DILocalVariable(name: "ddr", arg: 3, scope: !10105, file: !3, line: 3563, type: !1932)
!10112 = !DILocalVariable(name: "pb", arg: 4, scope: !10105, file: !3, line: 3564, type: !6821)
!10113 = !DILocalVariable(name: "maybe_dependent", arg: 5, scope: !10105, file: !3, line: 3564, type: !497)
!10114 = !DILocalVariable(name: "eq", scope: !10105, file: !3, line: 3566, type: !499)
!10115 = !DILocalVariable(name: "type", scope: !10105, file: !3, line: 3567, type: !506)
!10116 = !DILocalVariable(name: "fun_a", scope: !10105, file: !3, line: 3569, type: !506)
!10117 = !DILocalVariable(name: "fun_b", scope: !10105, file: !3, line: 3570, type: !506)
!10118 = !DILocalVariable(name: "difference", scope: !10105, file: !3, line: 3571, type: !506)
!10119 = !DILocation(line: 0, scope: !10105)
!10120 = !DILocation(line: 3567, column: 38, scope: !10105)
!10121 = !DILocation(line: 3568, column: 10, scope: !10105)
!10122 = !DILocation(line: 3567, column: 15, scope: !10105)
!10123 = !DILocation(line: 3569, column: 16, scope: !10105)
!10124 = !DILocation(line: 3570, column: 16, scope: !10105)
!10125 = !DILocation(line: 3571, column: 21, scope: !10105)
!10126 = !DILocation(line: 3575, column: 7, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 3575, column: 7)
!10128 = !DILocation(line: 3575, column: 30, scope: !10127)
!10129 = !DILocation(line: 3575, column: 7, scope: !10105)
!10130 = !DILocation(line: 3579, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 3579, column: 7)
!10132 = !DILocation(line: 3579, column: 38, scope: !10131)
!10133 = !DILocation(line: 3579, column: 42, scope: !10131)
!10134 = !DILocation(line: 3579, column: 7, scope: !10105)
!10135 = !DILocation(line: 3582, column: 24, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 3580, column: 5)
!10137 = !DILocation(line: 3583, column: 7, scope: !10136)
!10138 = !DILocation(line: 3586, column: 45, scope: !10105)
!10139 = !DILocation(line: 3586, column: 11, scope: !10105)
!10140 = !DILocation(line: 3588, column: 8, scope: !10105)
!10141 = !DILocation(line: 3589, column: 39, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 3589, column: 7)
!10143 = !DILocation(line: 3589, column: 8, scope: !10142)
!10144 = !DILocation(line: 3590, column: 7, scope: !10142)
!10145 = !DILocation(line: 3590, column: 11, scope: !10142)
!10146 = !DILocation(line: 3589, column: 7, scope: !10105)
!10147 = !DILocation(line: 3596, column: 7, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 3596, column: 7)
!10149 = !DILocation(line: 3596, column: 26, scope: !10148)
!10150 = !DILocation(line: 3596, column: 31, scope: !10148)
!10151 = !DILocation(line: 3596, column: 38, scope: !10148)
!10152 = !DILocation(line: 3596, column: 34, scope: !10148)
!10153 = !DILocation(line: 3596, column: 46, scope: !10148)
!10154 = !DILocation(line: 3597, column: 7, scope: !10148)
!10155 = !DILocation(line: 3598, column: 24, scope: !10148)
!10156 = !DILocation(line: 3599, column: 10, scope: !10148)
!10157 = !DILocation(line: 3599, column: 8, scope: !10148)
!10158 = !DILocation(line: 3597, column: 26, scope: !10148)
!10159 = !DILocation(line: 3600, column: 9, scope: !10148)
!10160 = !DILocation(line: 3600, column: 17, scope: !10148)
!10161 = !DILocation(line: 3600, column: 5, scope: !10148)
!10162 = !DILocation(line: 3597, column: 11, scope: !10148)
!10163 = !DILocation(line: 3596, column: 7, scope: !10105)
!10164 = !DILocation(line: 3603, column: 24, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 3601, column: 5)
!10166 = !DILocation(line: 3604, column: 7, scope: !10165)
!10167 = !DILocation(line: 3608, column: 1, scope: !10105)
!10168 = distinct !DISubprogram(name: "omega_add_zero_geq", scope: !480, file: !480, line: 269, type: !10169, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!499, !6821, !479}
!10171 = !{!10172, !10173, !10174}
!10172 = !DILocalVariable(name: "pb", arg: 1, scope: !10168, file: !480, line: 269, type: !6821)
!10173 = !DILocalVariable(name: "color", arg: 2, scope: !10168, file: !480, line: 269, type: !479)
!10174 = !DILocalVariable(name: "idx", scope: !10168, file: !480, line: 271, type: !499)
!10175 = !DILocation(line: 0, scope: !10168)
!10176 = !DILocation(line: 271, column: 17, scope: !10168)
!10177 = !DILocation(line: 273, column: 15, scope: !10168)
!10178 = !DILocation(line: 274, column: 3, scope: !10168)
!10179 = !DILocation(line: 275, column: 29, scope: !10168)
!10180 = !DILocation(line: 275, column: 25, scope: !10168)
!10181 = !DILocation(line: 275, column: 44, scope: !10168)
!10182 = !DILocation(line: 275, column: 3, scope: !10168)
!10183 = !DILocation(line: 276, column: 7, scope: !10168)
!10184 = !DILocation(line: 276, column: 17, scope: !10168)
!10185 = !DILocation(line: 276, column: 25, scope: !10168)
!10186 = !DILocation(line: 277, column: 7, scope: !10168)
!10187 = !DILocation(line: 277, column: 17, scope: !10168)
!10188 = !DILocation(line: 277, column: 23, scope: !10168)
!10189 = !DILocation(line: 278, column: 3, scope: !10168)
!10190 = distinct !DISubprogram(name: "omega_extract_distance_vectors", scope: !3, file: !3, line: 3453, type: !10191, scopeLine: 3455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10193)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{null, !6821, !1932}
!10193 = !{!10194, !10195, !10196, !10197, !10198, !10199, !10200, !10201, !10202, !10203, !10207, !10208, !10211, !10212, !10213}
!10194 = !DILocalVariable(name: "pb", arg: 1, scope: !10190, file: !3, line: 3453, type: !6821)
!10195 = !DILocalVariable(name: "ddr", arg: 2, scope: !10190, file: !3, line: 3454, type: !1932)
!10196 = !DILocalVariable(name: "eq", scope: !10190, file: !3, line: 3456, type: !499)
!10197 = !DILocalVariable(name: "geq", scope: !10190, file: !3, line: 3456, type: !499)
!10198 = !DILocalVariable(name: "i", scope: !10190, file: !3, line: 3457, type: !7)
!10199 = !DILocalVariable(name: "j", scope: !10190, file: !3, line: 3457, type: !7)
!10200 = !DILocalVariable(name: "loopi", scope: !10190, file: !3, line: 3458, type: !1045)
!10201 = !DILocalVariable(name: "loopj", scope: !10190, file: !3, line: 3458, type: !1045)
!10202 = !DILocalVariable(name: "res", scope: !10190, file: !3, line: 3459, type: !484)
!10203 = !DILocalVariable(name: "dist", scope: !10204, file: !3, line: 3467, type: !499)
!10204 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 3466, column: 5)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 3464, column: 3)
!10206 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 3464, column: 3)
!10207 = !DILocalVariable(name: "copy", scope: !10204, file: !3, line: 3468, type: !6821)
!10208 = !DILocalVariable(name: "dist_v", scope: !10209, file: !3, line: 3534, type: !1916)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 3533, column: 2)
!10210 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3532, column: 11)
!10211 = !DILocalVariable(name: "dir_v", scope: !10209, file: !3, line: 3535, type: !1916)
!10212 = !DILabel(scope: !10204, name: "found_dist", file: !3, line: 3530)
!10213 = !DILabel(scope: !10204, name: "next_problem", file: !3, line: 3553)
!10214 = !DILocation(line: 0, scope: !10190)
!10215 = !DILocation(line: 3458, column: 3, scope: !10190)
!10216 = !DILocation(line: 0, scope: !10205)
!10217 = !DILocation(line: 3464, column: 8, scope: !10206)
!10218 = !DILocation(line: 0, scope: !10206)
!10219 = !DILocation(line: 3464, column: 20, scope: !10205)
!10220 = !DILocation(line: 3464, column: 17, scope: !10205)
!10221 = !DILocation(line: 3465, column: 3, scope: !10205)
!10222 = !DILocation(line: 3465, column: 6, scope: !10205)
!10223 = !DILocation(line: 3464, column: 3, scope: !10206)
!10224 = !DILocation(line: 0, scope: !10204)
!10225 = !DILocation(line: 3468, column: 48, scope: !10204)
!10226 = !DILocation(line: 3468, column: 46, scope: !10204)
!10227 = !DILocation(line: 3469, column: 9, scope: !10204)
!10228 = !DILocation(line: 3468, column: 23, scope: !10204)
!10229 = !DILocation(line: 3471, column: 7, scope: !10204)
!10230 = !DILocation(line: 0, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 3476, column: 2)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 3474, column: 7)
!10233 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3474, column: 7)
!10234 = !DILocation(line: 3475, column: 7, scope: !10232)
!10235 = !DILocation(line: 3474, column: 12, scope: !10233)
!10236 = !DILocation(line: 0, scope: !10233)
!10237 = !DILocation(line: 3475, column: 11, scope: !10232)
!10238 = !DILocation(line: 3475, column: 14, scope: !10232)
!10239 = !DILocation(line: 3474, column: 7, scope: !10233)
!10240 = !DILocation(line: 3477, column: 9, scope: !10231)
!10241 = !DILocation(line: 3478, column: 10, scope: !10231)
!10242 = !DILocation(line: 3478, column: 4, scope: !10231)
!10243 = !DILocation(line: 3478, column: 18, scope: !10231)
!10244 = !DILocation(line: 3478, column: 25, scope: !10231)
!10245 = !DILocation(line: 3478, column: 30, scope: !10231)
!10246 = !DILocation(line: 3474, column: 7, scope: !10232)
!10247 = distinct !{!10247, !10239, !10248}
!10248 = !DILocation(line: 3479, column: 2, scope: !10233)
!10249 = !DILocation(line: 3482, column: 13, scope: !10204)
!10250 = !DILocation(line: 3483, column: 13, scope: !10204)
!10251 = !DILocation(line: 3483, column: 7, scope: !10204)
!10252 = !DILocation(line: 3483, column: 23, scope: !10204)
!10253 = !DILocation(line: 3483, column: 30, scope: !10204)
!10254 = !DILocation(line: 3483, column: 35, scope: !10204)
!10255 = !DILocation(line: 3487, column: 13, scope: !10204)
!10256 = !DILocation(line: 3489, column: 4, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3488, column: 11)
!10258 = !DILocation(line: 3490, column: 13, scope: !10257)
!10259 = !DILocation(line: 3490, column: 30, scope: !10257)
!10260 = !DILocation(line: 3490, column: 22, scope: !10257)
!10261 = !DILocation(line: 3488, column: 11, scope: !10204)
!10262 = !DILocation(line: 0, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 3493, column: 7)
!10264 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3493, column: 7)
!10265 = !DILocation(line: 0, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 3494, column: 6)
!10267 = !DILocation(line: 3493, column: 7, scope: !10264)
!10268 = !DILocation(line: 0, scope: !10264)
!10269 = !DILocation(line: 3493, column: 23, scope: !10263)
!10270 = !DILocation(line: 3494, column: 12, scope: !10266)
!10271 = !DILocation(line: 3494, column: 21, scope: !10266)
!10272 = !DILocation(line: 3494, column: 25, scope: !10266)
!10273 = !DILocation(line: 3494, column: 6, scope: !10263)
!10274 = !DILocation(line: 3496, column: 28, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 3495, column: 4)
!10276 = !DILocation(line: 3496, column: 13, scope: !10275)
!10277 = !DILocation(line: 3497, column: 6, scope: !10275)
!10278 = !DILocation(line: 3493, column: 43, scope: !10263)
!10279 = !DILocation(line: 3493, column: 7, scope: !10263)
!10280 = distinct !{!10280, !10267, !10281}
!10281 = !DILocation(line: 3498, column: 4, scope: !10264)
!10282 = !DILocation(line: 3503, column: 4, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 3501, column: 2)
!10284 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 3500, column: 11)
!10285 = !DILocation(line: 3504, column: 9, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3504, column: 4)
!10287 = !DILocation(line: 0, scope: !10286)
!10288 = !DILocation(line: 3505, column: 11, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 3504, column: 4)
!10290 = !DILocation(line: 3505, column: 15, scope: !10289)
!10291 = !DILocation(line: 3505, column: 18, scope: !10289)
!10292 = !DILocation(line: 0, scope: !10289)
!10293 = !DILocation(line: 0, scope: !10283)
!10294 = !DILocation(line: 3504, column: 4, scope: !10286)
!10295 = !DILocation(line: 3508, column: 29, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 3506, column: 6)
!10297 = !DILocation(line: 3508, column: 8, scope: !10296)
!10298 = !DILocation(line: 3508, column: 34, scope: !10296)
!10299 = !DILocation(line: 3504, column: 4, scope: !10289)
!10300 = distinct !{!10300, !10294, !10301}
!10301 = !DILocation(line: 3509, column: 6, scope: !10286)
!10302 = !DILocation(line: 3513, column: 4, scope: !10283)
!10303 = !DILocation(line: 3513, column: 30, scope: !10283)
!10304 = !DILocation(line: 3514, column: 10, scope: !10283)
!10305 = !DILocation(line: 3514, column: 18, scope: !10283)
!10306 = !DILocation(line: 3514, column: 26, scope: !10283)
!10307 = !DILocation(line: 3516, column: 10, scope: !10283)
!10308 = !DILocation(line: 3518, column: 8, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3517, column: 8)
!10310 = !DILocation(line: 3519, column: 17, scope: !10309)
!10311 = !DILocation(line: 3519, column: 34, scope: !10309)
!10312 = !DILocation(line: 3519, column: 26, scope: !10309)
!10313 = !DILocation(line: 3517, column: 8, scope: !10283)
!10314 = !DILocation(line: 0, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 3522, column: 4)
!10316 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 3522, column: 4)
!10317 = !DILocation(line: 3522, column: 4, scope: !10316)
!10318 = !DILocation(line: 0, scope: !10316)
!10319 = !DILocation(line: 3522, column: 20, scope: !10315)
!10320 = !DILocation(line: 3523, column: 16, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 3523, column: 10)
!10322 = !DILocation(line: 3523, column: 25, scope: !10321)
!10323 = !DILocation(line: 3523, column: 29, scope: !10321)
!10324 = !DILocation(line: 3523, column: 10, scope: !10315)
!10325 = !DILocation(line: 3525, column: 25, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 3524, column: 8)
!10327 = !DILocation(line: 3525, column: 10, scope: !10326)
!10328 = !DILocation(line: 3526, column: 3, scope: !10326)
!10329 = !DILocation(line: 3522, column: 40, scope: !10315)
!10330 = !DILocation(line: 3522, column: 4, scope: !10315)
!10331 = distinct !{!10331, !10317, !10332}
!10332 = !DILocation(line: 3527, column: 8, scope: !10316)
!10333 = !DILocation(line: 3532, column: 16, scope: !10210)
!10334 = !DILocation(line: 3530, column: 5, scope: !10204)
!10335 = !DILocation(line: 3532, column: 11, scope: !10204)
!10336 = !DILocation(line: 3534, column: 46, scope: !10209)
!10337 = !DILocation(line: 3534, column: 27, scope: !10209)
!10338 = !DILocation(line: 0, scope: !10209)
!10339 = !DILocation(line: 3535, column: 45, scope: !10209)
!10340 = !DILocation(line: 3535, column: 26, scope: !10209)
!10341 = !DILocation(line: 3537, column: 4, scope: !10209)
!10342 = !DILocation(line: 3537, column: 14, scope: !10209)
!10343 = !DILocation(line: 3539, column: 9, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 3539, column: 4)
!10345 = !DILocation(line: 0, scope: !10344)
!10346 = !DILocation(line: 3539, column: 28, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10344, file: !3, line: 3539, column: 4)
!10348 = !DILocation(line: 3539, column: 20, scope: !10347)
!10349 = !DILocation(line: 3539, column: 4, scope: !10344)
!10350 = !DILocation(line: 3546, column: 4, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 3546, column: 4)
!10352 = !DILocation(line: 3540, column: 16, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 3540, column: 10)
!10354 = !DILocation(line: 3540, column: 25, scope: !10353)
!10355 = !DILocation(line: 3540, column: 29, scope: !10353)
!10356 = !DILocation(line: 3540, column: 10, scope: !10347)
!10357 = !DILocation(line: 3542, column: 25, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 3541, column: 8)
!10359 = !DILocation(line: 3542, column: 10, scope: !10358)
!10360 = !DILocation(line: 3543, column: 29, scope: !10358)
!10361 = !DILocation(line: 3543, column: 3, scope: !10358)
!10362 = !DILocation(line: 3543, column: 34, scope: !10358)
!10363 = !DILocation(line: 3544, column: 8, scope: !10358)
!10364 = !DILocation(line: 3539, column: 40, scope: !10347)
!10365 = !DILocation(line: 3539, column: 4, scope: !10347)
!10366 = distinct !{!10366, !10349, !10367}
!10367 = !DILocation(line: 3544, column: 8, scope: !10344)
!10368 = !DILocation(line: 0, scope: !10351)
!10369 = !DILocation(line: 3546, column: 20, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3546, column: 4)
!10371 = !DILocation(line: 3546, column: 18, scope: !10370)
!10372 = !DILocation(line: 3547, column: 32, scope: !10370)
!10373 = !DILocation(line: 3547, column: 17, scope: !10370)
!10374 = !DILocation(line: 3547, column: 6, scope: !10370)
!10375 = !DILocation(line: 3547, column: 15, scope: !10370)
!10376 = !DILocation(line: 3546, column: 41, scope: !10370)
!10377 = !DILocation(line: 3546, column: 4, scope: !10370)
!10378 = distinct !{!10378, !10350, !10379}
!10379 = !DILocation(line: 3547, column: 41, scope: !10351)
!10380 = !DILocation(line: 3549, column: 4, scope: !10209)
!10381 = !DILocation(line: 3550, column: 4, scope: !10209)
!10382 = !DILocation(line: 3551, column: 2, scope: !10209)
!10383 = !DILocation(line: 3553, column: 5, scope: !10204)
!10384 = !DILocation(line: 3554, column: 7, scope: !10204)
!10385 = !DILocation(line: 3464, column: 3, scope: !10205)
!10386 = distinct !{!10386, !10223, !10387}
!10387 = !DILocation(line: 3555, column: 5, scope: !10206)
!10388 = !DILocation(line: 3556, column: 1, scope: !10190)
!10389 = distinct !DISubprogram(name: "omega_add_zero_eq", scope: !480, file: !480, line: 255, type: !10169, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10390)
!10390 = !{!10391, !10392, !10393}
!10391 = !DILocalVariable(name: "pb", arg: 1, scope: !10389, file: !480, line: 255, type: !6821)
!10392 = !DILocalVariable(name: "color", arg: 2, scope: !10389, file: !480, line: 255, type: !479)
!10393 = !DILocalVariable(name: "idx", scope: !10389, file: !480, line: 257, type: !499)
!10394 = !DILocation(line: 0, scope: !10389)
!10395 = !DILocation(line: 257, column: 17, scope: !10389)
!10396 = !DILocation(line: 257, column: 24, scope: !10389)
!10397 = !DILocation(line: 259, column: 3, scope: !10389)
!10398 = !DILocation(line: 260, column: 29, scope: !10389)
!10399 = !DILocation(line: 260, column: 25, scope: !10389)
!10400 = !DILocation(line: 260, column: 43, scope: !10389)
!10401 = !DILocation(line: 260, column: 3, scope: !10389)
!10402 = !DILocation(line: 261, column: 7, scope: !10389)
!10403 = !DILocation(line: 261, column: 16, scope: !10389)
!10404 = !DILocation(line: 261, column: 22, scope: !10389)
!10405 = !DILocation(line: 262, column: 3, scope: !10389)
!10406 = distinct !DISubprogram(name: "init_omega_eq_with_af", scope: !3, file: !3, line: 3398, type: !10407, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{!498, !6821, !7, !7, !506, !1932}
!10409 = !{!10410, !10411, !10412, !10413, !10414, !10415, !10418, !10419, !10420}
!10410 = !DILocalVariable(name: "pb", arg: 1, scope: !10406, file: !3, line: 3398, type: !6821)
!10411 = !DILocalVariable(name: "eq", arg: 2, scope: !10406, file: !3, line: 3398, type: !7)
!10412 = !DILocalVariable(name: "offset", arg: 3, scope: !10406, file: !3, line: 3399, type: !7)
!10413 = !DILocalVariable(name: "access_fun", arg: 4, scope: !10406, file: !3, line: 3399, type: !506)
!10414 = !DILocalVariable(name: "ddr", arg: 5, scope: !10406, file: !3, line: 3400, type: !1932)
!10415 = !DILocalVariable(name: "left", scope: !10416, file: !3, line: 3406, type: !506)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 3405, column: 7)
!10417 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 3403, column: 5)
!10418 = !DILocalVariable(name: "right", scope: !10416, file: !3, line: 3407, type: !506)
!10419 = !DILocalVariable(name: "var", scope: !10416, file: !3, line: 3408, type: !499)
!10420 = !DILocalVariable(name: "var_idx", scope: !10416, file: !3, line: 3409, type: !7)
!10421 = !DILocation(line: 0, scope: !10416)
!10422 = !DILocation(line: 0, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3420, column: 6)
!10424 = !DILocation(line: 3427, column: 13, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3425, column: 4)
!10426 = !DILocation(line: 0, scope: !10406)
!10427 = !DILocation(line: 3402, column: 11, scope: !10406)
!10428 = !DILocation(line: 3402, column: 3, scope: !10406)
!10429 = !DILocation(line: 3406, column: 14, scope: !10416)
!10430 = !DILocation(line: 3407, column: 15, scope: !10416)
!10431 = !DILocation(line: 3411, column: 6, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 3411, column: 6)
!10433 = !DILocation(line: 3411, column: 24, scope: !10432)
!10434 = !DILocation(line: 3411, column: 6, scope: !10416)
!10435 = !DILocation(line: 3408, column: 12, scope: !10416)
!10436 = !DILocation(line: 3414, column: 37, scope: !10416)
!10437 = !DILocation(line: 3414, column: 12, scope: !10416)
!10438 = !DILocation(line: 3415, column: 43, scope: !10416)
!10439 = !DILocation(line: 3415, column: 6, scope: !10416)
!10440 = !DILocation(line: 3415, column: 14, scope: !10416)
!10441 = !DILocation(line: 3415, column: 36, scope: !10416)
!10442 = !DILocation(line: 3415, column: 2, scope: !10416)
!10443 = !DILocation(line: 3415, column: 41, scope: !10416)
!10444 = !DILocation(line: 3418, column: 25, scope: !10416)
!10445 = !DILocation(line: 3418, column: 23, scope: !10416)
!10446 = !DILocation(line: 3422, column: 9, scope: !10423)
!10447 = !DILocation(line: 3421, column: 8, scope: !10423)
!10448 = !DILocation(line: 3421, column: 16, scope: !10423)
!10449 = !DILocation(line: 3421, column: 31, scope: !10423)
!10450 = !DILocation(line: 3421, column: 29, scope: !10423)
!10451 = !DILocation(line: 3421, column: 50, scope: !10423)
!10452 = !DILocation(line: 3421, column: 4, scope: !10423)
!10453 = !DILocation(line: 3422, column: 6, scope: !10423)
!10454 = !DILocation(line: 3424, column: 10, scope: !10416)
!10455 = !DILocation(line: 3424, column: 2, scope: !10416)
!10456 = !DILocation(line: 3445, column: 1, scope: !10406)
!10457 = !DILocation(line: 3439, column: 30, scope: !10417)
!10458 = !DILocation(line: 3430, column: 29, scope: !10425)
!10459 = !DILocation(line: 3415, column: 26, scope: !10416)
!10460 = !DILocation(line: 3430, column: 10, scope: !10425)
!10461 = !DILocation(line: 3430, column: 18, scope: !10425)
!10462 = !DILocation(line: 3430, column: 26, scope: !10425)
!10463 = !DILocation(line: 3431, column: 6, scope: !10425)
!10464 = !DILocation(line: 3439, column: 11, scope: !10417)
!10465 = !DILocation(line: 3439, column: 19, scope: !10417)
!10466 = !DILocation(line: 3439, column: 27, scope: !10417)
!10467 = !DILocation(line: 3440, column: 7, scope: !10417)
!10468 = !DILocation(line: 0, scope: !10417)
!10469 = distinct !DISubprogram(name: "lambda_vector_gcd", scope: !1905, file: !1905, line: 447, type: !10470, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10472)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{!499, !1916, !499}
!10472 = !{!10473, !10474, !10475, !10476}
!10473 = !DILocalVariable(name: "vector", arg: 1, scope: !10469, file: !1905, line: 447, type: !1916)
!10474 = !DILocalVariable(name: "size", arg: 2, scope: !10469, file: !1905, line: 447, type: !499)
!10475 = !DILocalVariable(name: "i", scope: !10469, file: !1905, line: 449, type: !499)
!10476 = !DILocalVariable(name: "gcd1", scope: !10469, file: !1905, line: 450, type: !499)
!10477 = !DILocation(line: 0, scope: !10469)
!10478 = !DILocation(line: 452, column: 12, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10469, file: !1905, line: 452, column: 7)
!10480 = !DILocation(line: 452, column: 7, scope: !10469)
!10481 = !DILocation(line: 454, column: 14, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !1905, line: 453, column: 5)
!10483 = !DILocation(line: 455, column: 21, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1905, line: 455, column: 7)
!10485 = distinct !DILexicalBlock(scope: !10482, file: !1905, line: 455, column: 7)
!10486 = !DILocation(line: 455, column: 12, scope: !10485)
!10487 = !DILocation(line: 0, scope: !10485)
!10488 = !DILocation(line: 0, scope: !10482)
!10489 = !DILocation(line: 455, column: 7, scope: !10485)
!10490 = !DILocation(line: 456, column: 20, scope: !10484)
!10491 = !DILocation(line: 456, column: 9, scope: !10484)
!10492 = !DILocation(line: 455, column: 30, scope: !10484)
!10493 = !DILocation(line: 455, column: 7, scope: !10484)
!10494 = distinct !{!10494, !10489, !10495}
!10495 = !DILocation(line: 456, column: 29, scope: !10485)
!10496 = !DILocation(line: 458, column: 3, scope: !10469)
!10497 = distinct !DISubprogram(name: "omega_init_eqn_zero", scope: !480, file: !480, line: 203, type: !10498, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10500)
!10498 = !DISubroutineType(types: !10499)
!10499 = !{null, !6836, !499}
!10500 = !{!10501, !10502}
!10501 = !DILocalVariable(name: "e", arg: 1, scope: !10497, file: !480, line: 203, type: !6836)
!10502 = !DILocalVariable(name: "s", arg: 2, scope: !10497, file: !480, line: 203, type: !499)
!10503 = !DILocation(line: 0, scope: !10497)
!10504 = !DILocation(line: 205, column: 6, scope: !10497)
!10505 = !DILocation(line: 205, column: 10, scope: !10497)
!10506 = !DILocation(line: 206, column: 6, scope: !10497)
!10507 = !DILocation(line: 206, column: 14, scope: !10497)
!10508 = !DILocation(line: 207, column: 6, scope: !10497)
!10509 = !DILocation(line: 207, column: 12, scope: !10497)
!10510 = !DILocation(line: 209, column: 14, scope: !10497)
!10511 = !DILocation(line: 209, column: 26, scope: !10497)
!10512 = !DILocation(line: 209, column: 23, scope: !10497)
!10513 = !DILocation(line: 209, column: 31, scope: !10497)
!10514 = !DILocation(line: 209, column: 3, scope: !10497)
!10515 = !DILocation(line: 210, column: 1, scope: !10497)
!10516 = distinct !DISubprogram(name: "omega_copy_problem", scope: !480, file: !480, line: 310, type: !10517, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10519)
!10517 = !DISubroutineType(types: !10518)
!10518 = !{null, !6821, !6821}
!10519 = !{!10520, !10521, !10522, !10523}
!10520 = !DILocalVariable(name: "p1", arg: 1, scope: !10516, file: !480, line: 310, type: !6821)
!10521 = !DILocalVariable(name: "p2", arg: 2, scope: !10516, file: !480, line: 310, type: !6821)
!10522 = !DILocalVariable(name: "e", scope: !10516, file: !480, line: 312, type: !499)
!10523 = !DILocalVariable(name: "i", scope: !10516, file: !480, line: 312, type: !499)
!10524 = !DILocation(line: 0, scope: !10516)
!10525 = !DILocation(line: 314, column: 22, scope: !10516)
!10526 = !DILocation(line: 314, column: 7, scope: !10516)
!10527 = !DILocation(line: 314, column: 16, scope: !10516)
!10528 = !DILocation(line: 315, column: 26, scope: !10516)
!10529 = !DILocation(line: 315, column: 7, scope: !10516)
!10530 = !DILocation(line: 315, column: 20, scope: !10516)
!10531 = !DILocation(line: 316, column: 35, scope: !10516)
!10532 = !DILocation(line: 316, column: 7, scope: !10516)
!10533 = !DILocation(line: 316, column: 29, scope: !10516)
!10534 = !DILocation(line: 317, column: 29, scope: !10516)
!10535 = !DILocation(line: 317, column: 7, scope: !10516)
!10536 = !DILocation(line: 317, column: 23, scope: !10516)
!10537 = !DILocation(line: 318, column: 23, scope: !10516)
!10538 = !DILocation(line: 318, column: 7, scope: !10516)
!10539 = !DILocation(line: 318, column: 17, scope: !10516)
!10540 = !DILocation(line: 319, column: 21, scope: !10516)
!10541 = !DILocation(line: 319, column: 7, scope: !10516)
!10542 = !DILocation(line: 319, column: 15, scope: !10516)
!10543 = !DILocation(line: 320, column: 22, scope: !10516)
!10544 = !DILocation(line: 320, column: 7, scope: !10516)
!10545 = !DILocation(line: 320, column: 16, scope: !10516)
!10546 = !DILocation(line: 321, column: 22, scope: !10516)
!10547 = !DILocation(line: 321, column: 7, scope: !10516)
!10548 = !DILocation(line: 321, column: 16, scope: !10516)
!10549 = !DILocation(line: 323, column: 16, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10516, file: !480, line: 323, column: 3)
!10551 = !DILocation(line: 0, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10550, file: !480, line: 323, column: 3)
!10553 = !DILocation(line: 323, column: 8, scope: !10550)
!10554 = !DILocation(line: 0, scope: !10550)
!10555 = !DILocation(line: 323, column: 31, scope: !10552)
!10556 = !DILocation(line: 323, column: 3, scope: !10550)
!10557 = !DILocation(line: 324, column: 27, scope: !10552)
!10558 = !DILocation(line: 324, column: 23, scope: !10552)
!10559 = !DILocation(line: 324, column: 42, scope: !10552)
!10560 = !DILocation(line: 324, column: 38, scope: !10552)
!10561 = !DILocation(line: 324, column: 55, scope: !10552)
!10562 = !DILocation(line: 324, column: 5, scope: !10552)
!10563 = !DILocation(line: 323, column: 3, scope: !10552)
!10564 = distinct !{!10564, !10556, !10565}
!10565 = !DILocation(line: 324, column: 63, scope: !10550)
!10566 = !DILocation(line: 326, column: 16, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10516, file: !480, line: 326, column: 3)
!10568 = !DILocation(line: 0, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10567, file: !480, line: 326, column: 3)
!10570 = !DILocation(line: 326, column: 8, scope: !10567)
!10571 = !DILocation(line: 0, scope: !10567)
!10572 = !DILocation(line: 326, column: 32, scope: !10569)
!10573 = !DILocation(line: 326, column: 3, scope: !10567)
!10574 = !DILocation(line: 327, column: 27, scope: !10569)
!10575 = !DILocation(line: 327, column: 23, scope: !10569)
!10576 = !DILocation(line: 327, column: 43, scope: !10569)
!10577 = !DILocation(line: 327, column: 39, scope: !10569)
!10578 = !DILocation(line: 327, column: 57, scope: !10569)
!10579 = !DILocation(line: 327, column: 5, scope: !10569)
!10580 = !DILocation(line: 326, column: 3, scope: !10569)
!10581 = distinct !{!10581, !10573, !10582}
!10582 = !DILocation(line: 327, column: 65, scope: !10567)
!10583 = !DILocation(line: 329, column: 16, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10516, file: !480, line: 329, column: 3)
!10585 = !DILocation(line: 0, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10584, file: !480, line: 329, column: 3)
!10587 = !DILocation(line: 329, column: 8, scope: !10584)
!10588 = !DILocation(line: 0, scope: !10584)
!10589 = !DILocation(line: 329, column: 32, scope: !10586)
!10590 = !DILocation(line: 329, column: 3, scope: !10584)
!10591 = !DILocation(line: 330, column: 27, scope: !10586)
!10592 = !DILocation(line: 330, column: 23, scope: !10586)
!10593 = !DILocation(line: 330, column: 43, scope: !10586)
!10594 = !DILocation(line: 330, column: 39, scope: !10586)
!10595 = !DILocation(line: 330, column: 57, scope: !10586)
!10596 = !DILocation(line: 330, column: 5, scope: !10586)
!10597 = !DILocation(line: 329, column: 3, scope: !10586)
!10598 = distinct !{!10598, !10590, !10599}
!10599 = !DILocation(line: 330, column: 65, scope: !10584)
!10600 = !DILocation(line: 332, column: 16, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10516, file: !480, line: 332, column: 3)
!10602 = !DILocation(line: 0, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10601, file: !480, line: 332, column: 3)
!10604 = !DILocation(line: 332, column: 8, scope: !10601)
!10605 = !DILocation(line: 0, scope: !10601)
!10606 = !DILocation(line: 332, column: 28, scope: !10603)
!10607 = !DILocation(line: 332, column: 3, scope: !10601)
!10608 = !DILocation(line: 333, column: 22, scope: !10603)
!10609 = !DILocation(line: 333, column: 18, scope: !10603)
!10610 = !DILocation(line: 333, column: 9, scope: !10603)
!10611 = !DILocation(line: 333, column: 5, scope: !10603)
!10612 = !DILocation(line: 333, column: 16, scope: !10603)
!10613 = !DILocation(line: 332, column: 35, scope: !10603)
!10614 = !DILocation(line: 332, column: 3, scope: !10603)
!10615 = distinct !{!10615, !10607, !10616}
!10616 = !DILocation(line: 333, column: 27, scope: !10601)
!10617 = !DILocation(line: 335, column: 12, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10516, file: !480, line: 335, column: 3)
!10619 = !DILocation(line: 0, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10618, file: !480, line: 335, column: 3)
!10621 = !DILocation(line: 335, column: 8, scope: !10618)
!10622 = !DILocation(line: 0, scope: !10618)
!10623 = !DILocation(line: 335, column: 30, scope: !10620)
!10624 = !DILocation(line: 335, column: 3, scope: !10618)
!10625 = !DILocation(line: 336, column: 37, scope: !10620)
!10626 = !DILocation(line: 336, column: 33, scope: !10620)
!10627 = !DILocation(line: 336, column: 9, scope: !10620)
!10628 = !DILocation(line: 336, column: 5, scope: !10620)
!10629 = !DILocation(line: 336, column: 31, scope: !10620)
!10630 = !DILocation(line: 335, column: 37, scope: !10620)
!10631 = !DILocation(line: 335, column: 3, scope: !10620)
!10632 = distinct !{!10632, !10624, !10633}
!10633 = !DILocation(line: 336, column: 57, scope: !10618)
!10634 = !DILocation(line: 337, column: 1, scope: !10516)
!10635 = distinct !DISubprogram(name: "omega_copy_eqn", scope: !480, file: !480, line: 191, type: !10636, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10638)
!10636 = !DISubroutineType(types: !10637)
!10637 = !{null, !6836, !6836, !499}
!10638 = !{!10639, !10640, !10641}
!10639 = !DILocalVariable(name: "e1", arg: 1, scope: !10635, file: !480, line: 191, type: !6836)
!10640 = !DILocalVariable(name: "e2", arg: 2, scope: !10635, file: !480, line: 191, type: !6836)
!10641 = !DILocalVariable(name: "s", arg: 3, scope: !10635, file: !480, line: 191, type: !499)
!10642 = !DILocation(line: 0, scope: !10635)
!10643 = !DILocation(line: 193, column: 17, scope: !10635)
!10644 = !DILocation(line: 193, column: 7, scope: !10635)
!10645 = !DILocation(line: 193, column: 11, scope: !10635)
!10646 = !DILocation(line: 194, column: 21, scope: !10635)
!10647 = !DILocation(line: 194, column: 7, scope: !10635)
!10648 = !DILocation(line: 194, column: 15, scope: !10635)
!10649 = !DILocation(line: 195, column: 19, scope: !10635)
!10650 = !DILocation(line: 195, column: 7, scope: !10635)
!10651 = !DILocation(line: 195, column: 13, scope: !10635)
!10652 = !DILocation(line: 197, column: 15, scope: !10635)
!10653 = !DILocation(line: 197, column: 25, scope: !10635)
!10654 = !DILocation(line: 197, column: 34, scope: !10635)
!10655 = !DILocation(line: 197, column: 31, scope: !10635)
!10656 = !DILocation(line: 197, column: 39, scope: !10635)
!10657 = !DILocation(line: 197, column: 3, scope: !10635)
!10658 = !DILocation(line: 198, column: 1, scope: !10635)
!10659 = distinct !DISubprogram(name: "omega_free_eqns", scope: !480, file: !480, line: 232, type: !10498, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10660)
!10660 = !{!10661, !10662, !10663}
!10661 = !DILocalVariable(name: "eq", arg: 1, scope: !10659, file: !480, line: 232, type: !6836)
!10662 = !DILocalVariable(name: "n", arg: 2, scope: !10659, file: !480, line: 232, type: !499)
!10663 = !DILocalVariable(name: "i", scope: !10659, file: !480, line: 234, type: !499)
!10664 = !DILocation(line: 0, scope: !10659)
!10665 = !DILocation(line: 236, column: 8, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10659, file: !480, line: 236, column: 3)
!10667 = !DILocation(line: 0, scope: !10666)
!10668 = !DILocation(line: 236, column: 21, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !480, line: 236, column: 3)
!10670 = !DILocation(line: 236, column: 3, scope: !10666)
!10671 = !DILocation(line: 237, column: 17, scope: !10669)
!10672 = !DILocation(line: 237, column: 5, scope: !10669)
!10673 = !DILocation(line: 236, column: 3, scope: !10669)
!10674 = distinct !{!10674, !10670, !10675}
!10675 = !DILocation(line: 237, column: 21, scope: !10666)
!10676 = !DILocation(line: 239, column: 9, scope: !10659)
!10677 = !DILocation(line: 239, column: 3, scope: !10659)
!10678 = !DILocation(line: 240, column: 1, scope: !10659)
!10679 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !402, file: !402, line: 1283, type: !4498, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10680)
!10680 = !{!10681}
!10681 = !DILocalVariable(name: "g", arg: 1, scope: !10679, file: !402, line: 1283, type: !2052)
!10682 = !DILocation(line: 0, scope: !10679)
!10683 = !DILocation(line: 1285, column: 10, scope: !10679)
!10684 = !DILocation(line: 1285, column: 26, scope: !10679)
!10685 = !DILocation(line: 1285, column: 43, scope: !10679)
!10686 = !DILocation(line: 1285, column: 46, scope: !10679)
!10687 = !DILocation(line: 1285, column: 62, scope: !10679)
!10688 = !DILocation(line: 1285, column: 3, scope: !10679)
!10689 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !402, file: !402, line: 1647, type: !4553, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10690)
!10690 = !{!10691, !10692}
!10691 = !DILocalVariable(name: "gs", arg: 1, scope: !10689, file: !402, line: 1647, type: !2052)
!10692 = !DILocalVariable(name: "i", arg: 2, scope: !10689, file: !402, line: 1647, type: !7)
!10693 = !DILocation(line: 0, scope: !10689)
!10694 = !DILocation(line: 1649, column: 7, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10689, file: !402, line: 1649, column: 7)
!10696 = !DILocation(line: 1649, column: 7, scope: !10689)
!10697 = !DILocation(line: 1654, column: 14, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10695, file: !402, line: 1650, column: 5)
!10699 = !DILocation(line: 1654, column: 50, scope: !10698)
!10700 = !DILocation(line: 1654, column: 7, scope: !10698)
!10701 = !DILocation(line: 0, scope: !10695)
!10702 = !DILocation(line: 1658, column: 1, scope: !10689)
!10703 = distinct !DISubprogram(name: "VEC_data_ref_loc_heap_reserve", scope: !391, file: !391, line: 376, type: !10704, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10706)
!10704 = !DISubroutineType(types: !10705)
!10705 = !{!499, !4392, !499}
!10706 = !{!10707, !10708, !10709}
!10707 = !DILocalVariable(name: "vec_", arg: 1, scope: !10703, file: !391, line: 376, type: !4392)
!10708 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10703, file: !391, line: 376, type: !499)
!10709 = !DILocalVariable(name: "extend", scope: !10703, file: !391, line: 376, type: !499)
!10710 = !DILocation(line: 0, scope: !10703)
!10711 = !DILocation(line: 376, column: 1, scope: !10703)
!10712 = !DILocation(line: 376, column: 1, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10703, file: !391, line: 376, column: 1)
!10714 = distinct !DISubprogram(name: "VEC_data_ref_loc_base_quick_push", scope: !391, file: !391, line: 375, type: !10715, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10717)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{!4398, !4629, !4535}
!10717 = !{!10718, !10719, !10720}
!10718 = !DILocalVariable(name: "vec_", arg: 1, scope: !10714, file: !391, line: 375, type: !4629)
!10719 = !DILocalVariable(name: "obj_", arg: 2, scope: !10714, file: !391, line: 375, type: !4535)
!10720 = !DILocalVariable(name: "slot_", scope: !10714, file: !391, line: 375, type: !4398)
!10721 = !DILocation(line: 0, scope: !10714)
!10722 = !DILocation(line: 375, column: 1, scope: !10714)
!10723 = distinct !DISubprogram(name: "VEC_data_ref_loc_base_space", scope: !391, file: !391, line: 375, type: !10724, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10726)
!10724 = !DISubroutineType(types: !10725)
!10725 = !{!499, !4629, !499}
!10726 = !{!10727, !10728}
!10727 = !DILocalVariable(name: "vec_", arg: 1, scope: !10723, file: !391, line: 375, type: !4629)
!10728 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10723, file: !391, line: 375, type: !499)
!10729 = !DILocation(line: 0, scope: !10723)
!10730 = !DILocation(line: 375, column: 1, scope: !10723)
!10731 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_reserve", scope: !391, file: !391, line: 209, type: !10732, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10734)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{!499, !4565, !499}
!10734 = !{!10735, !10736, !10737}
!10735 = !DILocalVariable(name: "vec_", arg: 1, scope: !10731, file: !391, line: 209, type: !4565)
!10736 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10731, file: !391, line: 209, type: !499)
!10737 = !DILocalVariable(name: "extend", scope: !10731, file: !391, line: 209, type: !499)
!10738 = !DILocation(line: 0, scope: !10731)
!10739 = !DILocation(line: 209, column: 1, scope: !10731)
!10740 = !DILocation(line: 209, column: 1, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10731, file: !391, line: 209, column: 1)
!10742 = distinct !DISubprogram(name: "VEC_data_reference_p_base_quick_push", scope: !391, file: !391, line: 208, type: !10743, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10746)
!10743 = !DISubroutineType(types: !10744)
!10744 = !{!2554, !10745, !1930}
!10745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!10746 = !{!10747, !10748, !10749}
!10747 = !DILocalVariable(name: "vec_", arg: 1, scope: !10742, file: !391, line: 208, type: !10745)
!10748 = !DILocalVariable(name: "obj_", arg: 2, scope: !10742, file: !391, line: 208, type: !1930)
!10749 = !DILocalVariable(name: "slot_", scope: !10742, file: !391, line: 208, type: !2554)
!10750 = !DILocation(line: 0, scope: !10742)
!10751 = !DILocation(line: 208, column: 1, scope: !10742)
!10752 = distinct !DISubprogram(name: "VEC_data_reference_p_base_space", scope: !391, file: !391, line: 208, type: !10753, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!499, !10745, !499}
!10755 = !{!10756, !10757}
!10756 = !DILocalVariable(name: "vec_", arg: 1, scope: !10752, file: !391, line: 208, type: !10745)
!10757 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10752, file: !391, line: 208, type: !499)
!10758 = !DILocation(line: 0, scope: !10752)
!10759 = !DILocation(line: 208, column: 1, scope: !10752)
!10760 = distinct !DISubprogram(name: "VEC_loop_p_heap_reserve", scope: !146, file: !146, line: 86, type: !10761, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10763)
!10761 = !DISubroutineType(types: !10762)
!10762 = !{!499, !4798, !499}
!10763 = !{!10764, !10765, !10766}
!10764 = !DILocalVariable(name: "vec_", arg: 1, scope: !10760, file: !146, line: 86, type: !4798)
!10765 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10760, file: !146, line: 86, type: !499)
!10766 = !DILocalVariable(name: "extend", scope: !10760, file: !146, line: 86, type: !499)
!10767 = !DILocation(line: 0, scope: !10760)
!10768 = !DILocation(line: 86, column: 1, scope: !10760)
!10769 = !DILocation(line: 86, column: 1, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10760, file: !146, line: 86, column: 1)
!10771 = distinct !DISubprogram(name: "VEC_loop_p_base_quick_push", scope: !146, file: !146, line: 85, type: !10772, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10775)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!3054, !10774, !1072}
!10774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!10775 = !{!10776, !10777, !10778}
!10776 = !DILocalVariable(name: "vec_", arg: 1, scope: !10771, file: !146, line: 85, type: !10774)
!10777 = !DILocalVariable(name: "obj_", arg: 2, scope: !10771, file: !146, line: 85, type: !1072)
!10778 = !DILocalVariable(name: "slot_", scope: !10771, file: !146, line: 85, type: !3054)
!10779 = !DILocation(line: 0, scope: !10771)
!10780 = !DILocation(line: 85, column: 1, scope: !10771)
!10781 = distinct !DISubprogram(name: "VEC_loop_p_base_space", scope: !146, file: !146, line: 85, type: !10782, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10784)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!499, !10774, !499}
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "vec_", arg: 1, scope: !10781, file: !146, line: 85, type: !10774)
!10786 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10781, file: !146, line: 85, type: !499)
!10787 = !DILocation(line: 0, scope: !10781)
!10788 = !DILocation(line: 85, column: 1, scope: !10781)
!10789 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !2024, file: !2024, line: 32, type: !10790, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10792)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!2022, !499}
!10792 = !{!10793}
!10793 = !DILocalVariable(name: "alloc_", arg: 1, scope: !10789, file: !2024, line: 32, type: !499)
!10794 = !DILocation(line: 0, scope: !10789)
!10795 = !DILocation(line: 32, column: 1, scope: !10789)
!10796 = distinct !DISubprogram(name: "number_of_loops", scope: !146, file: !146, line: 459, type: !10797, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2101)
!10797 = !DISubroutineType(types: !10798)
!10798 = !{!7}
!10799 = !DILocation(line: 461, column: 8, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !146, line: 461, column: 7)
!10801 = !DILocation(line: 461, column: 7, scope: !10796)
!10802 = !DILocation(line: 464, column: 10, scope: !10796)
!10803 = !DILocation(line: 464, column: 3, scope: !10796)
!10804 = !DILocation(line: 0, scope: !10796)
!10805 = !DILocation(line: 465, column: 1, scope: !10796)
!10806 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !2024, file: !2024, line: 31, type: !10807, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10810)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{!1917, !10809, !499}
!10809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!10810 = !{!10811, !10812, !10813}
!10811 = !DILocalVariable(name: "vec_", arg: 1, scope: !10806, file: !2024, line: 31, type: !10809)
!10812 = !DILocalVariable(name: "obj_", arg: 2, scope: !10806, file: !2024, line: 31, type: !499)
!10813 = !DILocalVariable(name: "slot_", scope: !10806, file: !2024, line: 31, type: !1917)
!10814 = !DILocation(line: 0, scope: !10806)
!10815 = !DILocation(line: 31, column: 1, scope: !10806)
!10816 = distinct !DISubprogram(name: "loop_outer", scope: !146, file: !146, line: 434, type: !10817, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10819)
!10817 = !DISubroutineType(types: !10818)
!10818 = !{!1045, !6626}
!10819 = !{!10820, !10821}
!10820 = !DILocalVariable(name: "loop", arg: 1, scope: !10816, file: !146, line: 434, type: !6626)
!10821 = !DILocalVariable(name: "n", scope: !10816, file: !146, line: 436, type: !7)
!10822 = !DILocation(line: 0, scope: !10816)
!10823 = !DILocation(line: 436, column: 16, scope: !10816)
!10824 = !DILocation(line: 438, column: 9, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10816, file: !146, line: 438, column: 7)
!10826 = !DILocation(line: 438, column: 7, scope: !10816)
!10827 = !DILocation(line: 441, column: 10, scope: !10816)
!10828 = !DILocation(line: 441, column: 3, scope: !10816)
!10829 = !DILocation(line: 442, column: 1, scope: !10816)
!10830 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !2024, file: !2024, line: 31, type: !10831, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10835)
!10831 = !DISubroutineType(types: !10832)
!10832 = !{!499, !10833, !7, !1917}
!10833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10834, size: 64)
!10834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2028)
!10835 = !{!10836, !10837, !10838}
!10836 = !DILocalVariable(name: "vec_", arg: 1, scope: !10830, file: !2024, line: 31, type: !10833)
!10837 = !DILocalVariable(name: "ix_", arg: 2, scope: !10830, file: !2024, line: 31, type: !7)
!10838 = !DILocalVariable(name: "ptr", arg: 3, scope: !10830, file: !2024, line: 31, type: !1917)
!10839 = !DILocation(line: 0, scope: !10830)
!10840 = !DILocation(line: 31, column: 1, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10830, file: !2024, line: 31, column: 1)
!10842 = !DILocation(line: 31, column: 1, scope: !10830)
!10843 = !DILocation(line: 31, column: 1, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10841, file: !2024, line: 31, column: 1)
!10845 = !DILocation(line: 31, column: 1, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10841, file: !2024, line: 31, column: 1)
!10847 = !DILocation(line: 0, scope: !10841)
!10848 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !2024, file: !2024, line: 32, type: !10849, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10852)
!10849 = !DISubroutineType(types: !10850)
!10850 = !{null, !10851}
!10851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!10852 = !{!10853}
!10853 = !DILocalVariable(name: "vec_", arg: 1, scope: !10848, file: !2024, line: 32, type: !10851)
!10854 = !DILocation(line: 0, scope: !10848)
!10855 = !DILocation(line: 32, column: 1, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10848, file: !2024, line: 32, column: 1)
!10857 = !DILocation(line: 32, column: 1, scope: !10848)
!10858 = distinct !DISubprogram(name: "VEC_subscript_p_heap_free", scope: !391, file: !391, line: 272, type: !10859, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10861)
!10859 = !DISubroutineType(types: !10860)
!10860 = !{null, !6684}
!10861 = !{!10862}
!10862 = !DILocalVariable(name: "vec_", arg: 1, scope: !10858, file: !391, line: 272, type: !6684)
!10863 = !DILocation(line: 0, scope: !10858)
!10864 = !DILocation(line: 272, column: 1, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10858, file: !391, line: 272, column: 1)
!10866 = !DILocation(line: 272, column: 1, scope: !10858)
!10867 = distinct !DISubprogram(name: "create_rdg_edge_for_ddr", scope: !3, file: !3, line: 4695, type: !10868, scopeLine: 4696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10870)
!10868 = !DISubroutineType(types: !10869)
!10869 = !{null, !5294, !1931}
!10870 = !{!10871, !10872, !10873, !10874, !10875, !10876, !10877, !10878, !10879}
!10871 = !DILocalVariable(name: "rdg", arg: 1, scope: !10867, file: !3, line: 4695, type: !5294)
!10872 = !DILocalVariable(name: "ddr", arg: 2, scope: !10867, file: !3, line: 4695, type: !1931)
!10873 = !DILocalVariable(name: "e", scope: !10867, file: !3, line: 4697, type: !5304)
!10874 = !DILocalVariable(name: "va", scope: !10867, file: !3, line: 4698, type: !499)
!10875 = !DILocalVariable(name: "vb", scope: !10867, file: !3, line: 4698, type: !499)
!10876 = !DILocalVariable(name: "dra", scope: !10867, file: !3, line: 4699, type: !1930)
!10877 = !DILocalVariable(name: "drb", scope: !10867, file: !3, line: 4700, type: !1930)
!10878 = !DILocalVariable(name: "level", scope: !10867, file: !3, line: 4701, type: !7)
!10879 = !DILocalVariable(name: "tmp", scope: !10880, file: !3, line: 4708, type: !1930)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 4707, column: 5)
!10881 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 4705, column: 7)
!10882 = !DILocation(line: 0, scope: !10867)
!10883 = !DILocation(line: 4699, column: 26, scope: !10867)
!10884 = !DILocation(line: 4700, column: 26, scope: !10867)
!10885 = !DILocation(line: 4701, column: 20, scope: !10867)
!10886 = !DILocation(line: 4705, column: 13, scope: !10881)
!10887 = !DILocation(line: 4706, column: 7, scope: !10881)
!10888 = !DILocation(line: 4706, column: 11, scope: !10881)
!10889 = !DILocation(line: 4705, column: 7, scope: !10867)
!10890 = !DILocation(line: 4713, column: 34, scope: !10867)
!10891 = !DILocation(line: 4713, column: 8, scope: !10867)
!10892 = !DILocation(line: 4714, column: 34, scope: !10867)
!10893 = !DILocation(line: 4714, column: 8, scope: !10867)
!10894 = !DILocation(line: 4716, column: 14, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 4716, column: 7)
!10896 = !DILocation(line: 4719, column: 7, scope: !10867)
!10897 = !DILocation(line: 4720, column: 13, scope: !10867)
!10898 = !DILocation(line: 4720, column: 6, scope: !10867)
!10899 = !DILocation(line: 4720, column: 11, scope: !10867)
!10900 = !DILocation(line: 4722, column: 3, scope: !10867)
!10901 = !DILocation(line: 4722, column: 18, scope: !10867)
!10902 = !DILocation(line: 4723, column: 3, scope: !10867)
!10903 = !DILocation(line: 4723, column: 21, scope: !10867)
!10904 = !DILocation(line: 4726, column: 7, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 4726, column: 7)
!10906 = !DILocation(line: 4726, column: 24, scope: !10905)
!10907 = !DILocation(line: 4726, column: 27, scope: !10905)
!10908 = !DILocation(line: 4726, column: 7, scope: !10867)
!10909 = !DILocation(line: 4727, column: 5, scope: !10905)
!10910 = !DILocation(line: 4727, column: 19, scope: !10905)
!10911 = !DILocation(line: 4728, column: 30, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 4728, column: 12)
!10913 = !DILocation(line: 4728, column: 34, scope: !10912)
!10914 = !DILocation(line: 4728, column: 12, scope: !10905)
!10915 = !DILocation(line: 4729, column: 5, scope: !10912)
!10916 = !DILocation(line: 4729, column: 19, scope: !10912)
!10917 = !DILocation(line: 4730, column: 30, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 4730, column: 12)
!10919 = !DILocation(line: 4730, column: 33, scope: !10918)
!10920 = !DILocation(line: 4730, column: 12, scope: !10912)
!10921 = !DILocation(line: 4731, column: 5, scope: !10918)
!10922 = !DILocation(line: 4731, column: 19, scope: !10918)
!10923 = !DILocation(line: 4732, column: 29, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 4732, column: 12)
!10925 = !DILocation(line: 4732, column: 33, scope: !10924)
!10926 = !DILocation(line: 4732, column: 12, scope: !10918)
!10927 = !DILocation(line: 4733, column: 5, scope: !10924)
!10928 = !DILocation(line: 4733, column: 19, scope: !10924)
!10929 = !DILocation(line: 4734, column: 1, scope: !10867)
!10930 = distinct !DISubprogram(name: "create_rdg_edges_for_scalar", scope: !3, file: !3, line: 4740, type: !10931, scopeLine: 4741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10933)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{null, !5294, !506, !499}
!10933 = !{!10934, !10935, !10936, !10937, !10938, !10939, !10943}
!10934 = !DILocalVariable(name: "rdg", arg: 1, scope: !10930, file: !3, line: 4740, type: !5294)
!10935 = !DILocalVariable(name: "def", arg: 2, scope: !10930, file: !3, line: 4740, type: !506)
!10936 = !DILocalVariable(name: "idef", arg: 3, scope: !10930, file: !3, line: 4740, type: !499)
!10937 = !DILocalVariable(name: "imm_use_p", scope: !10930, file: !3, line: 4742, type: !2049)
!10938 = !DILocalVariable(name: "iterator", scope: !10930, file: !3, line: 4743, type: !6009)
!10939 = !DILocalVariable(name: "e", scope: !10940, file: !3, line: 4747, type: !5304)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !3, line: 4746, column: 5)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 4745, column: 3)
!10942 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 4745, column: 3)
!10943 = !DILocalVariable(name: "use", scope: !10940, file: !3, line: 4748, type: !499)
!10944 = !DILocation(line: 0, scope: !10930)
!10945 = !DILocation(line: 4743, column: 3, scope: !10930)
!10946 = !DILocation(line: 4745, column: 3, scope: !10942)
!10947 = !DILocation(line: 0, scope: !10942)
!10948 = !DILocation(line: 4745, column: 3, scope: !10941)
!10949 = !DILocation(line: 4748, column: 43, scope: !10940)
!10950 = !DILocation(line: 4748, column: 17, scope: !10940)
!10951 = !DILocation(line: 0, scope: !10940)
!10952 = !DILocation(line: 4750, column: 15, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 4750, column: 11)
!10954 = !DILocation(line: 4750, column: 11, scope: !10940)
!10955 = !DILocation(line: 4753, column: 11, scope: !10940)
!10956 = !DILocation(line: 4754, column: 17, scope: !10940)
!10957 = !DILocation(line: 4754, column: 10, scope: !10940)
!10958 = !DILocation(line: 4754, column: 15, scope: !10940)
!10959 = !DILocation(line: 4755, column: 7, scope: !10940)
!10960 = !DILocation(line: 4755, column: 21, scope: !10940)
!10961 = !DILocation(line: 4756, column: 7, scope: !10940)
!10962 = !DILocation(line: 4756, column: 25, scope: !10940)
!10963 = !DILocation(line: 4757, column: 5, scope: !10941)
!10964 = distinct !{!10964, !10946, !10965}
!10965 = !DILocation(line: 4757, column: 5, scope: !10942)
!10966 = !DILocation(line: 4758, column: 1, scope: !10930)
!10967 = distinct !DISubprogram(name: "ddr_dependence_level", scope: !391, file: !391, line: 468, type: !10968, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{!7, !1931}
!10970 = !{!10971, !10972, !10973}
!10971 = !DILocalVariable(name: "ddr", arg: 1, scope: !10967, file: !391, line: 468, type: !1931)
!10972 = !DILocalVariable(name: "vector", scope: !10967, file: !391, line: 470, type: !7)
!10973 = !DILocalVariable(name: "level", scope: !10967, file: !391, line: 471, type: !7)
!10974 = !DILocation(line: 0, scope: !10967)
!10975 = !DILocation(line: 473, column: 7, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10967, file: !391, line: 473, column: 7)
!10977 = !DILocation(line: 473, column: 7, scope: !10967)
!10978 = !DILocation(line: 474, column: 31, scope: !10976)
!10979 = !DILocation(line: 474, column: 55, scope: !10976)
!10980 = !DILocation(line: 474, column: 13, scope: !10976)
!10981 = !DILocation(line: 474, column: 5, scope: !10976)
!10982 = !DILocation(line: 0, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !391, line: 476, column: 3)
!10984 = distinct !DILexicalBlock(scope: !10967, file: !391, line: 476, column: 3)
!10985 = !DILocation(line: 476, column: 8, scope: !10984)
!10986 = !DILocation(line: 0, scope: !10984)
!10987 = !DILocation(line: 476, column: 29, scope: !10983)
!10988 = !DILocation(line: 476, column: 27, scope: !10983)
!10989 = !DILocation(line: 476, column: 3, scope: !10984)
!10990 = !DILocation(line: 477, column: 13, scope: !10983)
!10991 = !DILocation(line: 476, column: 61, scope: !10983)
!10992 = !DILocation(line: 476, column: 3, scope: !10983)
!10993 = distinct !{!10993, !10989, !10994}
!10994 = !DILocation(line: 477, column: 13, scope: !10984)
!10995 = !DILocation(line: 479, column: 3, scope: !10967)
!10996 = distinct !DISubprogram(name: "dependence_level", scope: !1905, file: !1905, line: 514, type: !10997, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!7, !1916, !499}
!10999 = !{!11000, !11001, !11002}
!11000 = !DILocalVariable(name: "dist_vect", arg: 1, scope: !10996, file: !1905, line: 514, type: !1916)
!11001 = !DILocalVariable(name: "length", arg: 2, scope: !10996, file: !1905, line: 514, type: !499)
!11002 = !DILocalVariable(name: "i", scope: !10996, file: !1905, line: 516, type: !499)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 518, column: 8, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10996, file: !1905, line: 518, column: 3)
!11006 = !DILocation(line: 0, scope: !11005)
!11007 = !DILocation(line: 518, column: 17, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11005, file: !1905, line: 518, column: 3)
!11009 = !DILocation(line: 518, column: 3, scope: !11005)
!11010 = !DILocation(line: 519, column: 9, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11008, file: !1905, line: 519, column: 9)
!11012 = !DILocation(line: 519, column: 22, scope: !11011)
!11013 = !DILocation(line: 0, scope: !11008)
!11014 = !DILocation(line: 519, column: 9, scope: !11008)
!11015 = distinct !{!11015, !11009, !11016}
!11016 = !DILocation(line: 520, column: 18, scope: !11005)
!11017 = !DILocation(line: 523, column: 1, scope: !10996)
!11018 = distinct !DISubprogram(name: "bb_seq", scope: !402, file: !402, line: 237, type: !11019, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11024)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!820, !11021}
!11021 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !507, line: 112, baseType: !11022)
!11022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11023, size: 64)
!11023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!11024 = !{!11025}
!11025 = !DILocalVariable(name: "bb", arg: 1, scope: !11018, file: !402, line: 237, type: !11021)
!11026 = !DILocation(line: 0, scope: !11018)
!11027 = !DILocation(line: 239, column: 17, scope: !11018)
!11028 = !DILocation(line: 239, column: 23, scope: !11018)
!11029 = !DILocation(line: 239, column: 33, scope: !11018)
!11030 = !DILocation(line: 239, column: 43, scope: !11018)
!11031 = !DILocation(line: 239, column: 36, scope: !11018)
!11032 = !DILocation(line: 239, column: 10, scope: !11018)
!11033 = !DILocation(line: 239, column: 68, scope: !11018)
!11034 = !DILocation(line: 239, column: 3, scope: !11018)
!11035 = distinct !DISubprogram(name: "gimple_seq_first", scope: !402, file: !402, line: 159, type: !11036, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11041)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{!825, !11038}
!11038 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !507, line: 67, baseType: !11039)
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 64)
!11040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!11041 = !{!11042}
!11042 = !DILocalVariable(name: "s", arg: 1, scope: !11035, file: !402, line: 159, type: !11038)
!11043 = !DILocation(line: 0, scope: !11035)
!11044 = !DILocation(line: 161, column: 10, scope: !11035)
!11045 = !DILocation(line: 161, column: 17, scope: !11035)
!11046 = !DILocation(line: 161, column: 3, scope: !11035)
!11047 = distinct !DISubprogram(name: "VEC_gimple_heap_reserve", scope: !402, file: !402, line: 34, type: !11048, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11050)
!11048 = !DISubroutineType(types: !11049)
!11049 = !{!499, !5721, !499}
!11050 = !{!11051, !11052, !11053}
!11051 = !DILocalVariable(name: "vec_", arg: 1, scope: !11047, file: !402, line: 34, type: !5721)
!11052 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11047, file: !402, line: 34, type: !499)
!11053 = !DILocalVariable(name: "extend", scope: !11047, file: !402, line: 34, type: !499)
!11054 = !DILocation(line: 0, scope: !11047)
!11055 = !DILocation(line: 34, column: 1, scope: !11047)
!11056 = !DILocation(line: 34, column: 1, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11047, file: !402, line: 34, column: 1)
!11058 = distinct !DISubprogram(name: "VEC_gimple_base_quick_push", scope: !402, file: !402, line: 33, type: !11059, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11061)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{!5572, !6339, !830}
!11061 = !{!11062, !11063, !11064}
!11062 = !DILocalVariable(name: "vec_", arg: 1, scope: !11058, file: !402, line: 33, type: !6339)
!11063 = !DILocalVariable(name: "obj_", arg: 2, scope: !11058, file: !402, line: 33, type: !830)
!11064 = !DILocalVariable(name: "slot_", scope: !11058, file: !402, line: 33, type: !5572)
!11065 = !DILocation(line: 0, scope: !11058)
!11066 = !DILocation(line: 33, column: 1, scope: !11058)
!11067 = distinct !DISubprogram(name: "VEC_gimple_base_space", scope: !402, file: !402, line: 33, type: !11068, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11070)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!499, !6339, !499}
!11070 = !{!11071, !11072}
!11071 = !DILocalVariable(name: "vec_", arg: 1, scope: !11067, file: !402, line: 33, type: !6339)
!11072 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11067, file: !402, line: 33, type: !499)
!11073 = !DILocation(line: 0, scope: !11067)
!11074 = !DILocation(line: 33, column: 1, scope: !11067)
!11075 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !402, file: !402, line: 3080, type: !6491, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11076)
!11076 = !{!11077}
!11077 = !DILocalVariable(name: "gs", arg: 1, scope: !11075, file: !402, line: 3080, type: !830)
!11078 = !DILocation(line: 0, scope: !11075)
!11079 = !DILocation(line: 3083, column: 26, scope: !11075)
!11080 = !DILocation(line: 3083, column: 3, scope: !11075)
!11081 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !3543, file: !3543, line: 729, type: !11082, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11084)
!11082 = !DISubroutineType(types: !11083)
!11083 = !{null, !6051}
!11084 = !{!11085}
!11085 = !DILocalVariable(name: "ptr", arg: 1, scope: !11081, file: !3543, line: 729, type: !6051)
!11086 = !DILocation(line: 0, scope: !11081)
!11087 = !DILocation(line: 731, column: 8, scope: !11081)
!11088 = !DILocation(line: 731, column: 13, scope: !11081)
!11089 = !DILocation(line: 732, column: 8, scope: !11081)
!11090 = !DILocation(line: 732, column: 13, scope: !11081)
!11091 = !DILocation(line: 733, column: 8, scope: !11081)
!11092 = !DILocation(line: 733, column: 18, scope: !11081)
!11093 = !DILocation(line: 734, column: 8, scope: !11081)
!11094 = !DILocation(line: 734, column: 14, scope: !11081)
!11095 = !DILocation(line: 735, column: 8, scope: !11081)
!11096 = !DILocation(line: 735, column: 16, scope: !11081)
!11097 = !DILocation(line: 736, column: 8, scope: !11081)
!11098 = !DILocation(line: 736, column: 17, scope: !11081)
!11099 = !DILocation(line: 737, column: 8, scope: !11081)
!11100 = !DILocation(line: 737, column: 13, scope: !11081)
!11101 = !DILocation(line: 738, column: 1, scope: !11081)
!11102 = distinct !DISubprogram(name: "op_iter_init", scope: !3543, file: !3543, line: 742, type: !11103, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11105)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{null, !6051, !830, !499}
!11105 = !{!11106, !11107, !11108}
!11106 = !DILocalVariable(name: "ptr", arg: 1, scope: !11102, file: !3543, line: 742, type: !6051)
!11107 = !DILocalVariable(name: "stmt", arg: 2, scope: !11102, file: !3543, line: 742, type: !830)
!11108 = !DILocalVariable(name: "flags", arg: 3, scope: !11102, file: !3543, line: 742, type: !499)
!11109 = !DILocation(line: 0, scope: !11102)
!11110 = !DILocation(line: 748, column: 15, scope: !11102)
!11111 = !DILocation(line: 748, column: 52, scope: !11102)
!11112 = !DILocation(line: 748, column: 8, scope: !11102)
!11113 = !DILocation(line: 748, column: 13, scope: !11102)
!11114 = !DILocation(line: 750, column: 7, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11102, file: !3543, line: 749, column: 7)
!11116 = !DILocation(line: 750, column: 10, scope: !11115)
!11117 = !DILocation(line: 751, column: 7, scope: !11115)
!11118 = !DILocation(line: 751, column: 10, scope: !11115)
!11119 = !DILocation(line: 751, column: 29, scope: !11115)
!11120 = !DILocation(line: 749, column: 7, scope: !11102)
!11121 = !DILocation(line: 752, column: 22, scope: !11115)
!11122 = !DILocation(line: 752, column: 28, scope: !11115)
!11123 = !DILocation(line: 752, column: 15, scope: !11115)
!11124 = !DILocation(line: 752, column: 5, scope: !11115)
!11125 = !DILocation(line: 753, column: 8, scope: !11102)
!11126 = !DILocation(line: 753, column: 13, scope: !11102)
!11127 = !DILocation(line: 755, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11102, file: !3543, line: 754, column: 7)
!11129 = !DILocation(line: 756, column: 7, scope: !11128)
!11130 = !DILocation(line: 754, column: 7, scope: !11102)
!11131 = !DILocation(line: 757, column: 5, scope: !11128)
!11132 = !DILocation(line: 758, column: 8, scope: !11102)
!11133 = !DILocation(line: 758, column: 13, scope: !11102)
!11134 = !DILocation(line: 760, column: 8, scope: !11102)
!11135 = !DILocation(line: 760, column: 14, scope: !11102)
!11136 = !DILocation(line: 761, column: 8, scope: !11102)
!11137 = !DILocation(line: 761, column: 16, scope: !11102)
!11138 = !DILocation(line: 762, column: 8, scope: !11102)
!11139 = !DILocation(line: 762, column: 17, scope: !11102)
!11140 = !DILocation(line: 763, column: 1, scope: !11102)
!11141 = distinct !DISubprogram(name: "gimple_def_ops", scope: !402, file: !402, line: 1292, type: !11142, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11144)
!11142 = !DISubroutineType(types: !11143)
!11143 = !{!859, !2052}
!11144 = !{!11145}
!11145 = !DILocalVariable(name: "g", arg: 1, scope: !11141, file: !402, line: 1292, type: !2052)
!11146 = !DILocation(line: 0, scope: !11141)
!11147 = !DILocation(line: 1294, column: 8, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11141, file: !402, line: 1294, column: 7)
!11149 = !DILocation(line: 1294, column: 7, scope: !11141)
!11150 = !DILocation(line: 1296, column: 26, scope: !11141)
!11151 = !DILocation(line: 1296, column: 3, scope: !11141)
!11152 = !DILocation(line: 1297, column: 1, scope: !11141)
!11153 = distinct !DISubprogram(name: "gimple_use_ops", scope: !402, file: !402, line: 1313, type: !11154, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11156)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{!866, !2052}
!11156 = !{!11157}
!11157 = !DILocalVariable(name: "g", arg: 1, scope: !11153, file: !402, line: 1313, type: !2052)
!11158 = !DILocation(line: 0, scope: !11153)
