; ModuleID = 'ifcvt.bc'
source_filename = "ifcvt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.ce_if_block = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.noce_if_info = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [4 x i8] c"ce1\00", align 1
@pass_rtl_ifcvt = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_handle_if_conversion, i32 ()* @rest_of_handle_if_conversion, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 141, i32 0, i32 0, i32 0, i32 0, i32 132097 } }, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"ce2\00", align 1
@pass_if_after_combine = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8 ()* @gate_handle_if_after_combine, i32 ()* @rest_of_handle_if_after_combine, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 141, i32 0, i32 0, i32 0, i32 0, i32 132099 } }, align 8, !dbg !3489
@.str.2 = private unnamed_addr constant [4 x i8] c"ce3\00", align 1
@pass_if_after_reload = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8 ()* @gate_handle_if_after_reload, i32 ()* @rest_of_handle_if_after_reload, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 154, i32 0, i32 0, i32 0, i32 0, i32 132099 } }, align 8, !dbg !3517
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_if_conversion = external dso_local local_unnamed_addr global i32, align 4
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@num_possible_if_blocks = internal unnamed_addr global i32 0, align 4, !dbg !3519
@num_updated_if_blocks = internal unnamed_addr global i32 0, align 4, !dbg !3521
@num_true_changes = internal unnamed_addr global i32 0, align 4, !dbg !3523
@cond_exec_changed_p = internal unnamed_addr global i1 false, align 4, !dbg !3527
@.str.3 = private unnamed_addr constant [33 x i8] c"\0A\0A========== Pass %d ==========\0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.4 = private unnamed_addr constant [30 x i8] c"\0A\0A========== no more changes\0A\00", align 1
@max_regno = external dso_local local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [34 x i8] c"\0A%d possible IF blocks searched.\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"%d IF blocks converted.\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"%d true changes made.\0A\0A\0A\00", align 1
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.8 = private unnamed_addr constant [34 x i8] c"Conversion succeeded on pass %d.\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"ifcvt.c\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"\0AIF-THEN%s-JOIN block found, pass %d, test %d, then %d\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"-ELSE\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [10 x i8] c", else %d\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c", join %d\0A\00", align 1
@ix86_branch_cost = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@mode_mask_array = external dso_local local_unnamed_addr constant [87 x i64], align 16
@const_tiny_rtx = external dso_local local_unnamed_addr global [3 x [87 x %struct.rtx_def*]], align 16
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@cse_not_expected = external dso_local local_unnamed_addr global i32, align 4
@code_to_optab = external dso_local local_unnamed_addr global [140 x %struct.optab_d*], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@epilogue_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.17 = private unnamed_addr constant [72 x i8] c"\0AIF-THEN%s block found, pass %d, start block %d [insn %d], then %d [%d]\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c", else %d [%d]\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c", join %d [%d]\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c", %d %s block%s last test %d [%d]\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.24 = private unnamed_addr constant [47 x i8] c"%d insn%s converted to conditional execution.\0A\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c" was\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"s were\00", align 1
@const_true_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.27 = private unnamed_addr constant [41 x i8] c"\0ATRAP-IF block found, start %d, trap %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"\0AIF-CASE-1 found, start %d, then %d\0A\00", align 1
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@global_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.29 = private unnamed_addr constant [37 x i8] c"\0AIF-CASE-2 found, start %d, else %d\0A\00", align 1
@flag_if_conversion2 = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3532 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3545, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3546, metadata !DIExpression()), !dbg !3547
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3548
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !3549
  ret i32 %call, !dbg !3550
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3551 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3555
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !3556
  ret i32 %call, !dbg !3557
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3558 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3612, metadata !DIExpression()), !dbg !3613
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3614
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3614
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3614
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3614
  %cmp = icmp uge i8* %0, %1, !dbg !3614
  %conv1 = zext i1 %cmp to i64, !dbg !3614
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3614
  %tobool = icmp eq i64 %expval, 0, !dbg !3614
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3614

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3614
  br label %cond.end, !dbg !3614

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3614
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3614
  %2 = load i8, i8* %0, align 1, !dbg !3614
  %conv3 = zext i8 %2 to i32, !dbg !3614
  br label %cond.end, !dbg !3614

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3614
  ret i32 %cond, !dbg !3615
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3616 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3618, metadata !DIExpression()), !dbg !3619
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3620
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3620
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3620
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3620
  %cmp = icmp uge i8* %0, %1, !dbg !3620
  %conv1 = zext i1 %cmp to i64, !dbg !3620
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3620
  %tobool = icmp eq i64 %expval, 0, !dbg !3620
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3620

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !3620
  br label %cond.end, !dbg !3620

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3620
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3620
  %2 = load i8, i8* %0, align 1, !dbg !3620
  %conv3 = zext i8 %2 to i32, !dbg !3620
  br label %cond.end, !dbg !3620

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3620
  ret i32 %cond, !dbg !3621
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3622 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3623
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3623
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3623
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3623
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3623
  %cmp = icmp uge i8* %1, %2, !dbg !3623
  %conv1 = zext i1 %cmp to i64, !dbg !3623
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3623
  %tobool = icmp eq i64 %expval, 0, !dbg !3623
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3623

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !3623
  br label %cond.end, !dbg !3623

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3623
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3623
  %3 = load i8, i8* %1, align 1, !dbg !3623
  %conv3 = zext i8 %3 to i32, !dbg !3623
  br label %cond.end, !dbg !3623

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3623
  ret i32 %cond, !dbg !3624
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3625 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3629, metadata !DIExpression()), !dbg !3630
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3631
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !3632
  ret i32 %call, !dbg !3633
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3634 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3638, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3639, metadata !DIExpression()), !dbg !3640
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3641
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3641
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3641
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3641
  %cmp = icmp uge i8* %0, %1, !dbg !3641
  %conv1 = zext i1 %cmp to i64, !dbg !3641
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3641
  %tobool = icmp eq i64 %expval, 0, !dbg !3641
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3641

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3641
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3641
  br label %cond.end, !dbg !3641

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3641
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3641
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3641
  store i8 %conv2, i8* %0, align 1, !dbg !3641
  %conv6 = and i32 %__c, 255, !dbg !3641
  br label %cond.end, !dbg !3641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3641
  ret i32 %cond, !dbg !3642
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3643 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3645, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3646, metadata !DIExpression()), !dbg !3647
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3648
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3648
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3648
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3648
  %cmp = icmp uge i8* %0, %1, !dbg !3648
  %conv1 = zext i1 %cmp to i64, !dbg !3648
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3648
  %tobool = icmp eq i64 %expval, 0, !dbg !3648
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3648

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3648
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !3648
  br label %cond.end, !dbg !3648

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3648
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3648
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3648
  store i8 %conv2, i8* %0, align 1, !dbg !3648
  %conv6 = and i32 %__c, 255, !dbg !3648
  br label %cond.end, !dbg !3648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3648
  ret i32 %cond, !dbg !3649
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3650 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3652, metadata !DIExpression()), !dbg !3653
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3654
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3654
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3654
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3654
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3654
  %cmp = icmp uge i8* %1, %2, !dbg !3654
  %conv1 = zext i1 %cmp to i64, !dbg !3654
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3654
  %tobool = icmp eq i64 %expval, 0, !dbg !3654
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3654

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3654
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !3654
  br label %cond.end, !dbg !3654

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3654
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3654
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3654
  store i8 %conv4, i8* %1, align 1, !dbg !3654
  %conv6 = and i32 %__c, 255, !dbg !3654
  br label %cond.end, !dbg !3654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3654
  ret i32 %cond, !dbg !3655
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3656 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3662, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3663, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3664, metadata !DIExpression()), !dbg !3665
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !3666
  ret i64 %call, !dbg !3667
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3668 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3670, metadata !DIExpression()), !dbg !3671
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3672
  %0 = load i32, i32* %_flags, align 8, !dbg !3672
  %and = lshr i32 %0, 4, !dbg !3672
  %and.lobit = and i32 %and, 1, !dbg !3672
  ret i32 %and.lobit, !dbg !3673
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3674 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3676, metadata !DIExpression()), !dbg !3677
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3678
  %0 = load i32, i32* %_flags, align 8, !dbg !3678
  %and = lshr i32 %0, 5, !dbg !3678
  %and.lobit = and i32 %and, 1, !dbg !3678
  ret i32 %and.lobit, !dbg !3679
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3680 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3683, metadata !DIExpression()), !dbg !3684
  %__c.off = add i32 %__c, 128, !dbg !3685
  %0 = icmp ult i32 %__c.off, 384, !dbg !3685
  br i1 %0, label %cond.true, label %cond.end, !dbg !3685

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !3686
  %1 = load i32*, i32** %call, align 8, !dbg !3687
  %idxprom = sext i32 %__c to i64, !dbg !3688
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3688
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3688
  br label %cond.end, !dbg !3689

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3689
  ret i32 %cond, !dbg !3690
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3691 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3693, metadata !DIExpression()), !dbg !3694
  %__c.off = add i32 %__c, 128, !dbg !3695
  %0 = icmp ult i32 %__c.off, 384, !dbg !3695
  br i1 %0, label %cond.true, label %cond.end, !dbg !3695

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !3696
  %1 = load i32*, i32** %call, align 8, !dbg !3697
  %idxprom = sext i32 %__c to i64, !dbg !3698
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3698
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3698
  br label %cond.end, !dbg !3699

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3699
  ret i32 %cond, !dbg !3700
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3701 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3706, metadata !DIExpression()), !dbg !3707
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3708
  %conv = trunc i64 %call to i32, !dbg !3709
  ret i32 %conv, !dbg !3710
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3711 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3715, metadata !DIExpression()), !dbg !3716
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !3717
  ret i64 %call, !dbg !3718
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3719 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3724, metadata !DIExpression()), !dbg !3725
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !3726
  ret i64 %call, !dbg !3727
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3728 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3734, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3735, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3736, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3737, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3738, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 0, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3740, metadata !DIExpression()), !dbg !3744
  br label %while.cond, !dbg !3745

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3746
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3740, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3739, metadata !DIExpression()), !dbg !3744
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3747
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3745

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3748
  %div = lshr i64 %add, 1, !dbg !3750
  call void @llvm.dbg.value(metadata i64 %div, metadata !3741, metadata !DIExpression()), !dbg !3744
  %mul = mul i64 %div, %__size, !dbg !3751
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3752
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3742, metadata !DIExpression()), !dbg !3744
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %call, metadata !3743, metadata !DIExpression()), !dbg !3744
  %cmp1 = icmp slt i32 %call, 0, !dbg !3754
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3756

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3757
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3759

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3760
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3739, metadata !DIExpression()), !dbg !3744
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3744
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3740, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3739, metadata !DIExpression()), !dbg !3744
  br label %while.cond, !dbg !3745, !llvm.loop !3761

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3744
  ret i8* %retval.0, !dbg !3763
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3764 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3770, metadata !DIExpression()), !dbg !3771
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !3772
  ret double %call, !dbg !3773
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3774 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3783, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %base, metadata !3785, metadata !DIExpression()), !dbg !3786
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3787
  ret i64 %call, !dbg !3788
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3789 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3795, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3796, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %base, metadata !3797, metadata !DIExpression()), !dbg !3798
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !3799
  ret i64 %call, !dbg !3800
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3801 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3812, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3813, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %base, metadata !3814, metadata !DIExpression()), !dbg !3815
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3816
  ret i64 %call, !dbg !3817
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3818 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3822, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3823, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i32 %base, metadata !3824, metadata !DIExpression()), !dbg !3825
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !3826
  ret i64 %call, !dbg !3827
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3828 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3868, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3869, metadata !DIExpression()), !dbg !3870
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3871
  ret i32 %call, !dbg !3872
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3873 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3875, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3876, metadata !DIExpression()), !dbg !3877
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !3878
  ret i32 %call, !dbg !3879
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3880 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3885, metadata !DIExpression()), !dbg !3886
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !3887
  ret i32 %call, !dbg !3888
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3889 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3893, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3896, metadata !DIExpression()), !dbg !3897
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !3898
  ret i32 %call, !dbg !3899
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3900 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3904, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3905, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3906, metadata !DIExpression()), !dbg !3907
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3906, metadata !DIExpression(DW_OP_deref)), !dbg !3907
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3908
  ret i32 %call, !dbg !3909
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3910 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3914, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3915, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3916, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3917, metadata !DIExpression()), !dbg !3918
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3917, metadata !DIExpression(DW_OP_deref)), !dbg !3918
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !3919
  ret i32 %call, !dbg !3920
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3921 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3945, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3946, metadata !DIExpression()), !dbg !3947
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3948
  ret i32 %call, !dbg !3949
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3950 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3952, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3953, metadata !DIExpression()), !dbg !3954
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !3955
  ret i32 %call, !dbg !3956
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3957 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3961, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3962, metadata !DIExpression()), !dbg !3963
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !3964
  ret i32 %call, !dbg !3965
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3966 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3970, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3971, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3972, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3973, metadata !DIExpression()), !dbg !3974
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !3975
  ret i32 %call, !dbg !3976
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_if_conversion() #4 !dbg !3977 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !3978
  %cmp = icmp sgt i32 %0, 0, !dbg !3979
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3980

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 18) #6, !dbg !3981
  %tobool = icmp ne i8 %call, 0, !dbg !3980
  %phitmp = zext i1 %tobool to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !3982
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_if_conversion() #4 !dbg !3983 {
entry:
  %0 = load i32, i32* @flag_if_conversion, align 4, !dbg !3984
  %tobool = icmp eq i32 %0, 0, !dbg !3984
  br i1 %tobool, label %if.end3, label %if.then, !dbg !3986

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3987
  %tobool1 = icmp eq %struct._IO_FILE* %1, null, !dbg !3987
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !3990

if.then2:                                         ; preds = %if.then
  %2 = load i32, i32* @dump_flags, align 4, !dbg !3991
  tail call void @dump_flow_info(%struct._IO_FILE* nonnull %1, i32 %2) #6, !dbg !3992
  br label %if.end, !dbg !3992

if.end:                                           ; preds = %if.then, %if.then2
  %call = tail call zeroext i8 @cleanup_cfg(i32 1) #6, !dbg !3993
  tail call fastcc void @if_convert() #7, !dbg !3994
  br label %if.end3, !dbg !3995

if.end3:                                          ; preds = %entry, %if.end
  %call4 = tail call zeroext i8 @cleanup_cfg(i32 0) #6, !dbg !3996
  ret i32 0, !dbg !3997
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_if_after_combine() #4 !dbg !3998 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !3999
  %cmp = icmp sgt i32 %0, 0, !dbg !4000
  %1 = load i32, i32* @flag_if_conversion, align 4, !dbg !4001
  %tobool = icmp ne i32 %1, 0, !dbg !4001
  %or.cond = and i1 %cmp, %tobool, !dbg !4002
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !4002

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 19) #6, !dbg !4003
  %tobool1 = icmp ne i8 %call, 0, !dbg !4004
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !4005
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_if_after_combine() #4 !dbg !4006 {
entry:
  tail call fastcc void @if_convert() #7, !dbg !4007
  ret i32 0, !dbg !4008
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_handle_if_after_reload() #4 !dbg !4009 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4010
  %cmp = icmp sgt i32 %0, 0, !dbg !4011
  %1 = load i32, i32* @flag_if_conversion2, align 4, !dbg !4012
  %tobool = icmp ne i32 %1, 0, !dbg !4012
  %or.cond = and i1 %cmp, %tobool, !dbg !4013
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !4013

land.rhs:                                         ; preds = %entry
  %call = tail call zeroext i8 @dbg_cnt(i32 20) #6, !dbg !4014
  %tobool1 = icmp ne i8 %call, 0, !dbg !4015
  %phitmp = zext i1 %tobool1 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !4016
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_if_after_reload() #4 !dbg !4017 {
entry:
  tail call fastcc void @if_convert() #7, !dbg !4018
  ret i32 0, !dbg !4019
}

declare dso_local zeroext i8 @dbg_cnt(i32) local_unnamed_addr #1

declare dso_local void @dump_flow_info(%struct._IO_FILE*, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @cleanup_cfg(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @if_convert() unnamed_addr #4 !dbg !4020 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4031
  %cmp = icmp eq i32 %0, 1, !dbg !4033
  br i1 %cmp, label %if.then, label %if.end, !dbg !4034

if.then:                                          ; preds = %entry
  tail call void @df_live_add_problem() #6, !dbg !4035
  tail call void @df_live_set_all_dirty() #6, !dbg !4037
  br label %if.end, !dbg !4038

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* @num_possible_if_blocks, align 4, !dbg !4039
  store i32 0, i32* @num_updated_if_blocks, align 4, !dbg !4040
  store i32 0, i32* @num_true_changes, align 4, !dbg !4041
  tail call void @loop_optimizer_init(i32 16) #6, !dbg !4042
  tail call void @mark_loop_exit_edges() #6, !dbg !4043
  tail call void @loop_optimizer_finalize() #6, !dbg !4044
  tail call void @free_dominance_info(i32 1) #6, !dbg !4045
  tail call void @calculate_dominance_info(i32 2) #6, !dbg !4046
  %call = tail call i32 @df_set_flags(i32 1) #6, !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !4025, metadata !DIExpression()), !dbg !4048
  br label %do.body, !dbg !4049

do.body:                                          ; preds = %do.cond, %if.end
  %new_bb.0 = phi %struct.basic_block_def* [ undef, %if.end ], [ %new_bb.1.lcssa, %do.cond ]
  %pass.0 = phi i32 [ 0, %if.end ], [ %inc, %do.cond ], !dbg !4048
  call void @llvm.dbg.value(metadata i32 %pass.0, metadata !4025, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !4026, metadata !DIExpression()), !dbg !4050
  tail call void @df_analyze() #6, !dbg !4051
  %call1 = tail call i32 @df_clear_flags(i32 1) #6, !dbg !4052
  store i1 false, i1* @cond_exec_changed_p, align 4, !dbg !4053
  %inc = add nuw nsw i32 %pass.0, 1, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4025, metadata !DIExpression()), !dbg !4048
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4055
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !4055
  %cmp2 = icmp ne i32 %pass.0, 0, !dbg !4057
  %or.cond = and i1 %tobool, %cmp2, !dbg !4058
  br i1 %or.cond, label %if.then3, label %if.end5, !dbg !4058

if.then3:                                         ; preds = %do.body
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 %inc) #6, !dbg !4059
  br label %if.end5, !dbg !4059

if.end5:                                          ; preds = %if.then3, %do.body
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4060
  %cfg = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 1, !dbg !4060
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4060
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 0, !dbg !4060
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4060
  br label %for.cond, !dbg !4060

for.cond:                                         ; preds = %for.inc, %if.end5
  %5 = phi %struct.control_flow_graph* [ %3, %if.end5 ], [ %.pre4, %for.inc ], !dbg !4061
  %new_bb.1 = phi %struct.basic_block_def* [ %new_bb.0, %if.end5 ], [ %new_bb.3.lcssa, %for.inc ]
  %.pn = phi %struct.basic_block_def* [ %4, %if.end5 ], [ %bb.1.lcssa, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4062
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4024, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.1, metadata !4026, metadata !DIExpression()), !dbg !4050
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 1, !dbg !4061
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4061
  %cmp8 = icmp eq %struct.basic_block_def* %bb.0, %6, !dbg !4061
  br i1 %cmp8, label %for.end, label %while.cond.preheader, !dbg !4060

while.cond.preheader:                             ; preds = %for.cond
  br label %while.cond, !dbg !4063

while.cond:                                       ; preds = %while.cond.preheader, %land.end
  %new_bb.2 = phi %struct.basic_block_def* [ %new_bb.3, %land.end ], [ %new_bb.1, %while.cond.preheader ]
  %bb.1 = phi %struct.basic_block_def* [ %new_bb.3, %land.end ], [ %bb.0, %while.cond.preheader ], !dbg !4062
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4024, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.2, metadata !4026, metadata !DIExpression()), !dbg !4050
  %call9 = tail call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %bb.1) #6, !dbg !4064
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4064
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !4065

land.rhs:                                         ; preds = %while.cond
  %call11 = tail call fastcc %struct.basic_block_def* @find_if_header(%struct.basic_block_def* %bb.1, i32 %inc) #7, !dbg !4066
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !4026, metadata !DIExpression()), !dbg !4050
  %cmp12 = icmp ne %struct.basic_block_def* %call11, null, !dbg !4067
  br label %land.end

land.end:                                         ; preds = %while.cond, %land.rhs
  %new_bb.3 = phi %struct.basic_block_def* [ %new_bb.2, %while.cond ], [ %call11, %land.rhs ]
  %7 = phi i1 [ false, %while.cond ], [ %cmp12, %land.rhs ], !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.3, metadata !4026, metadata !DIExpression()), !dbg !4050
  br i1 %7, label %while.cond, label %for.inc, !dbg !4063, !llvm.loop !4068

for.inc:                                          ; preds = %land.end
  %new_bb.3.lcssa = phi %struct.basic_block_def* [ %new_bb.3, %land.end ]
  %bb.1.lcssa = phi %struct.basic_block_def* [ %bb.1, %land.end ], !dbg !4062
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.3.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa, metadata !4024, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.3.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa, metadata !4024, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.3.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1.lcssa, metadata !4024, metadata !DIExpression()), !dbg !4048
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4061
  %cfg7.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !4070
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg7.phi.trans.insert, align 8, !dbg !4061
  br label %for.cond, !dbg !4061, !llvm.loop !4071

for.end:                                          ; preds = %for.cond
  %new_bb.1.lcssa = phi %struct.basic_block_def* [ %new_bb.1, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.1.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.1.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.1.lcssa, metadata !4026, metadata !DIExpression()), !dbg !4050
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4073
  %tobool14 = icmp ne %struct._IO_FILE* %8, null, !dbg !4073
  %.b = load i1, i1* @cond_exec_changed_p, align 4, !dbg !4075
  %or.cond1 = and i1 %tobool14, %.b, !dbg !4076
  br i1 %or.cond1, label %if.then17, label %do.cond, !dbg !4076

if.then17:                                        ; preds = %for.end
  %9 = load i32, i32* @dump_flags, align 4, !dbg !4077
  %and = and i32 %9, 2, !dbg !4080
  %tobool18 = icmp eq i32 %and, 0, !dbg !4080
  %call20 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4081
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !4082

if.then19:                                        ; preds = %if.then17
  %10 = load i32, i32* @dump_flags, align 4, !dbg !4083
  tail call void @print_rtl_slim_with_bb(%struct._IO_FILE* nonnull %8, %struct.rtx_def* %call20, i32 %10) #6, !dbg !4084
  br label %do.cond, !dbg !4084

if.else:                                          ; preds = %if.then17
  tail call void @print_rtl_with_bb(%struct._IO_FILE* nonnull %8, %struct.rtx_def* %call20) #6, !dbg !4085
  br label %do.cond

do.cond:                                          ; preds = %for.end, %if.else, %if.then19
  %.b3 = load i1, i1* @cond_exec_changed_p, align 4, !dbg !4086
  br i1 %.b3, label %do.body, label %do.end, !dbg !4087, !llvm.loop !4088

do.end:                                           ; preds = %do.cond
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4090
  %tobool25 = icmp eq %struct._IO_FILE* %11, null, !dbg !4090
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !4092

if.then26:                                        ; preds = %do.end
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4093
  br label %if.end28, !dbg !4093

if.end28:                                         ; preds = %do.end, %if.then26
  tail call void @free_dominance_info(i32 2) #6, !dbg !4094
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4095
  %tobool29 = icmp eq %struct._IO_FILE* %12, null, !dbg !4095
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !4097

if.then30:                                        ; preds = %if.end28
  %call31 = tail call i32 @fflush(%struct._IO_FILE* nonnull %12) #6, !dbg !4098
  br label %if.end32, !dbg !4098

if.end32:                                         ; preds = %if.end28, %if.then30
  tail call void @clear_aux_for_blocks() #6, !dbg !4099
  %13 = load i32, i32* @max_regno, align 4, !dbg !4100
  %call33 = tail call i32 @max_reg_num() #6, !dbg !4102
  %cmp34 = icmp slt i32 %13, %call33, !dbg !4103
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !4104

if.then35:                                        ; preds = %if.end32
  %call36 = tail call i32 @max_reg_num() #6, !dbg !4105
  store i32 %call36, i32* @max_regno, align 4, !dbg !4106
  br label %if.end37, !dbg !4107

if.end37:                                         ; preds = %if.then35, %if.end32
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4108
  %tobool38 = icmp ne %struct._IO_FILE* %14, null, !dbg !4108
  %15 = load i32, i32* @num_possible_if_blocks, align 4, !dbg !4110
  %cmp40 = icmp sgt i32 %15, 0, !dbg !4111
  %or.cond2 = and i1 %tobool38, %cmp40, !dbg !4112
  br i1 %or.cond2, label %if.then41, label %if.end45, !dbg !4112

if.then41:                                        ; preds = %if.end37
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 %15) #6, !dbg !4113
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4115
  %17 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !4116
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i32 %17) #6, !dbg !4117
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4118
  %19 = load i32, i32* @num_true_changes, align 4, !dbg !4119
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i32 %19) #6, !dbg !4120
  br label %if.end45, !dbg !4121

if.end45:                                         ; preds = %if.then41, %if.end37
  %20 = load i32, i32* @optimize, align 4, !dbg !4122
  %cmp46 = icmp eq i32 %20, 1, !dbg !4124
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !4125

if.then47:                                        ; preds = %if.end45
  %21 = load %struct.df*, %struct.df** @df, align 8, !dbg !4126
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %21, i64 0, i32 1, i64 2, !dbg !4126
  %22 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4126
  tail call void @df_remove_problem(%struct.dataflow* %22) #6, !dbg !4127
  br label %if.end48, !dbg !4127

if.end48:                                         ; preds = %if.then47, %if.end45
  ret void, !dbg !4128
}

declare dso_local void @df_live_add_problem() local_unnamed_addr #1

declare dso_local void @df_live_set_all_dirty() local_unnamed_addr #1

declare dso_local void @loop_optimizer_init(i32) local_unnamed_addr #1

declare dso_local void @mark_loop_exit_edges() local_unnamed_addr #1

declare dso_local void @loop_optimizer_finalize() local_unnamed_addr #1

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #1

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #1

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #1

declare dso_local void @df_analyze() local_unnamed_addr #1

declare dso_local i32 @df_clear_flags(i32) local_unnamed_addr #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

declare dso_local zeroext i8 @df_get_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @find_if_header(%struct.basic_block_def* %test_bb, i32 %pass) unnamed_addr #4 !dbg !4129 {
entry:
  %ce_info = alloca %struct.ce_if_block, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !4133, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %pass, metadata !4134, metadata !DIExpression()), !dbg !4159
  %0 = bitcast %struct.ce_if_block* %ce_info to i8*, !dbg !4160
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #8, !dbg !4160
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 1, !dbg !4161
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4161
  %tobool = icmp eq %struct.VEC_edge_gc* %1, null, !dbg !4161
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4161

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !4161
  br label %cond.end, !dbg !4161

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4161
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4161
  %cmp = icmp eq i32 %call, 2, !dbg !4163
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4164

if.end:                                           ; preds = %cond.end
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4165
  %tobool3 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !4165
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !4165

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !4165
  br label %cond.end8, !dbg !4165

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_edge_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !4165
  %call10 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond9, i32 0) #7, !dbg !4165
  call void @llvm.dbg.value(metadata %struct.edge_def* %call10, metadata !4152, metadata !DIExpression()), !dbg !4159
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4166
  %tobool12 = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !4166
  br i1 %tobool12, label %cond.end17, label %cond.true13, !dbg !4166

cond.true13:                                      ; preds = %cond.end8
  %base15 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !4166
  br label %cond.end17, !dbg !4166

cond.end17:                                       ; preds = %cond.end8, %cond.true13
  %cond18 = phi %struct.VEC_edge_base* [ %base15, %cond.true13 ], [ null, %cond.end8 ], !dbg !4166
  %call19 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond18, i32 1) #7, !dbg !4166
  call void @llvm.dbg.value(metadata %struct.edge_def* %call19, metadata !4153, metadata !DIExpression()), !dbg !4159
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 1, !dbg !4167
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4167
  %call20 = tail call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %4) #6, !dbg !4169
  %tobool21 = icmp eq i8 %call20, 0, !dbg !4169
  br i1 %tobool21, label %if.end23, label %cleanup, !dbg !4170

if.end23:                                         ; preds = %cond.end17
  %dest24 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 1, !dbg !4171
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest24, align 8, !dbg !4171
  %call25 = tail call zeroext i8 @df_get_bb_dirty(%struct.basic_block_def* %5) #6, !dbg !4173
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4173
  br i1 %tobool26, label %if.end28, label %cleanup, !dbg !4174

if.end28:                                         ; preds = %if.end23
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call10, i64 0, i32 7, !dbg !4175
  %6 = load i32, i32* %flags, align 8, !dbg !4175
  %and = and i32 %6, 14, !dbg !4177
  %tobool29 = icmp eq i32 %and, 0, !dbg !4177
  br i1 %tobool29, label %lor.lhs.false, label %cleanup, !dbg !4178

lor.lhs.false:                                    ; preds = %if.end28
  %flags30 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call19, i64 0, i32 7, !dbg !4179
  %7 = load i32, i32* %flags30, align 8, !dbg !4179
  %and31 = and i32 %7, 14, !dbg !4180
  %tobool32 = icmp eq i32 %and31, 0, !dbg !4180
  br i1 %tobool32, label %if.end34, label %cleanup, !dbg !4181

if.end34:                                         ; preds = %lor.lhs.false
  %and36 = and i32 %6, 512, !dbg !4182
  %tobool37 = icmp eq i32 %and36, 0, !dbg !4182
  br i1 %tobool37, label %lor.lhs.false38, label %cleanup, !dbg !4184

lor.lhs.false38:                                  ; preds = %if.end34
  %and40 = and i32 %7, 512, !dbg !4185
  %tobool41 = icmp eq i32 %and40, 0, !dbg !4185
  br i1 %tobool41, label %if.end43, label %cleanup, !dbg !4186

if.end43:                                         ; preds = %lor.lhs.false38
  %and45 = and i32 %6, 1, !dbg !4187
  %tobool46 = icmp eq i32 %and45, 0, !dbg !4187
  br i1 %tobool46, label %if.else, label %if.end54, !dbg !4188

if.else:                                          ; preds = %if.end43
  %and49 = and i32 %7, 1, !dbg !4189
  %tobool50 = icmp eq i32 %and49, 0, !dbg !4189
  br i1 %tobool50, label %cleanup, label %if.end54, !dbg !4190

if.end54:                                         ; preds = %if.else, %if.end43
  %then_edge.0 = phi %struct.edge_def* [ %call10, %if.end43 ], [ %call19, %if.else ], !dbg !4159
  %else_edge.0 = phi %struct.edge_def* [ %call19, %if.end43 ], [ %call10, %if.else ], !dbg !4159
  call void @llvm.dbg.value(metadata %struct.edge_def* %else_edge.0, metadata !4153, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata %struct.edge_def* %then_edge.0, metadata !4152, metadata !DIExpression()), !dbg !4159
  %call55 = call i8* @memset(i8* nonnull %0, i32 0, i64 72) #6, !dbg !4191
  %test_bb56 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 0, !dbg !4192
  store %struct.basic_block_def* %test_bb, %struct.basic_block_def** %test_bb56, align 8, !dbg !4193
  %dest57 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge.0, i64 0, i32 1, !dbg !4194
  %8 = bitcast %struct.basic_block_def** %dest57 to i64*, !dbg !4194
  %9 = load i64, i64* %8, align 8, !dbg !4194
  %then_bb = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 1, !dbg !4195
  %10 = bitcast %struct.basic_block_def** %then_bb to i64*, !dbg !4196
  store i64 %9, i64* %10, align 8, !dbg !4196
  %dest58 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge.0, i64 0, i32 1, !dbg !4197
  %11 = bitcast %struct.basic_block_def** %dest58 to i64*, !dbg !4197
  %12 = load i64, i64* %11, align 8, !dbg !4197
  %else_bb = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 2, !dbg !4198
  %13 = bitcast %struct.basic_block_def** %else_bb to i64*, !dbg !4199
  store i64 %12, i64* %13, align 8, !dbg !4199
  %pass59 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 12, !dbg !4200
  store i32 %pass, i32* %pass59, align 4, !dbg !4201
  %14 = load i32, i32* @reload_completed, align 4, !dbg !4202
  %tobool60 = icmp eq i32 %14, 0, !dbg !4202
  br i1 %tobool60, label %land.lhs.true, label %if.end64, !dbg !4204

land.lhs.true:                                    ; preds = %if.end54
  %call61 = call fastcc i32 @noce_find_if_block(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge.0, %struct.edge_def* %else_edge.0, i32 %pass) #7, !dbg !4205
  %tobool62 = icmp eq i32 %call61, 0, !dbg !4205
  br i1 %tobool62, label %if.end64, label %success, !dbg !4206

if.end64:                                         ; preds = %land.lhs.true, %if.end54
  %15 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !4207
  %call65 = call zeroext i8 %15() #6, !dbg !4209
  %tobool66 = icmp ne i8 %call65, 0, !dbg !4209
  %16 = load i32, i32* @reload_completed, align 4, !dbg !4210
  %tobool68 = icmp ne i32 %16, 0, !dbg !4210
  %or.cond = and i1 %tobool66, %tobool68, !dbg !4211
  br i1 %or.cond, label %land.lhs.true69, label %if.end73, !dbg !4211

land.lhs.true69:                                  ; preds = %if.end64
  call void @llvm.dbg.value(metadata %struct.ce_if_block* %ce_info, metadata !4135, metadata !DIExpression(DW_OP_deref)), !dbg !4159
  %call70 = call fastcc i32 @cond_exec_find_if_block(%struct.ce_if_block* nonnull %ce_info) #7, !dbg !4212
  %tobool71 = icmp eq i32 %call70, 0, !dbg !4212
  br i1 %tobool71, label %if.end73, label %success, !dbg !4213

if.end73:                                         ; preds = %land.lhs.true69, %if.end64
  %17 = load i32, i32* @word_mode, align 4, !dbg !4214
  %idxprom = sext i32 %17 to i64, !dbg !4214
  %insn_code = getelementptr inbounds [159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 118, i32 4, i64 %idxprom, i32 0, !dbg !4216
  %18 = load i32, i32* %insn_code, align 4, !dbg !4216
  %cmp74 = icmp eq i32 %18, 2956, !dbg !4217
  br i1 %cmp74, label %if.end80, label %land.lhs.true76, !dbg !4218

land.lhs.true76:                                  ; preds = %if.end73
  %call77 = call fastcc i32 @find_cond_trap(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge.0, %struct.edge_def* %else_edge.0) #7, !dbg !4219
  %tobool78 = icmp eq i32 %call77, 0, !dbg !4219
  br i1 %tobool78, label %if.end80, label %success, !dbg !4220

if.end80:                                         ; preds = %land.lhs.true76, %if.end73
  %call81 = call i32 @dom_info_state(i32 2) #6, !dbg !4221
  %cmp82 = icmp eq i32 %call81, 0, !dbg !4223
  br i1 %cmp82, label %cleanup, label %land.lhs.true84, !dbg !4224

land.lhs.true84:                                  ; preds = %if.end80
  %19 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !4225
  %call85 = call zeroext i8 %19() #6, !dbg !4226
  %tobool86 = icmp eq i8 %call85, 0, !dbg !4226
  %20 = load i32, i32* @reload_completed, align 4, !dbg !4227
  %tobool88 = icmp ne i32 %20, 0, !dbg !4227
  %or.cond1 = or i1 %tobool86, %tobool88, !dbg !4228
  br i1 %or.cond1, label %if.then89, label %cleanup, !dbg !4228

if.then89:                                        ; preds = %land.lhs.true84
  %call90 = call fastcc i32 @find_if_case_1(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge.0, %struct.edge_def* %else_edge.0) #7, !dbg !4229
  %tobool91 = icmp eq i32 %call90, 0, !dbg !4229
  br i1 %tobool91, label %if.end93, label %success, !dbg !4232

if.end93:                                         ; preds = %if.then89
  %call94 = call fastcc i32 @find_if_case_2(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge.0, %struct.edge_def* %else_edge.0) #7, !dbg !4233
  %tobool95 = icmp eq i32 %call94, 0, !dbg !4233
  br i1 %tobool95, label %cleanup, label %success, !dbg !4235

success:                                          ; preds = %land.lhs.true69, %land.lhs.true76, %if.end93, %if.then89, %land.lhs.true
  call void @llvm.dbg.label(metadata !4158), !dbg !4236
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4237
  %tobool99 = icmp eq %struct._IO_FILE* %21, null, !dbg !4237
  br i1 %tobool99, label %if.end102, label %if.then100, !dbg !4239

if.then100:                                       ; preds = %success
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %21, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 %pass) #6, !dbg !4240
  br label %if.end102, !dbg !4240

if.end102:                                        ; preds = %success, %if.then100
  store i1 true, i1* @cond_exec_changed_p, align 4, !dbg !4241
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb56, align 8, !dbg !4242
  br label %cleanup, !dbg !4243

cleanup:                                          ; preds = %if.end93, %if.end80, %if.else, %lor.lhs.false38, %if.end34, %lor.lhs.false, %if.end28, %if.end23, %cond.end17, %cond.end, %land.lhs.true84, %if.end102
  %retval.0 = phi %struct.basic_block_def* [ %22, %if.end102 ], [ null, %cond.end ], [ null, %cond.end17 ], [ null, %if.end23 ], [ null, %lor.lhs.false ], [ null, %if.end28 ], [ null, %lor.lhs.false38 ], [ null, %if.end34 ], [ null, %if.else ], [ null, %if.end93 ], [ null, %land.lhs.true84 ], [ null, %if.end80 ], !dbg !4159
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8, !dbg !4244
  ret %struct.basic_block_def* %retval.0, !dbg !4244
}

declare dso_local void @print_rtl_slim_with_bb(%struct._IO_FILE*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #1

declare dso_local void @print_rtl_with_bb(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @fflush(%struct._IO_FILE*) local_unnamed_addr #1

declare dso_local void @clear_aux_for_blocks() local_unnamed_addr #1

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

declare dso_local void @df_remove_problem(%struct.dataflow*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4245 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4251, metadata !DIExpression()), !dbg !4252
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4253
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4253

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4253
  %0 = load i32, i32* %num, align 8, !dbg !4253
  br label %cond.end, !dbg !4253

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4253
  ret i32 %cond, !dbg !4253
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4254 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4259, metadata !DIExpression()), !dbg !4260
  br label %land.end, !dbg !4261

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4261
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4261
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4261
  ret %struct.edge_def* %0, !dbg !4261
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_find_if_block(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge, %struct.edge_def* %else_edge, i32 %pass) unnamed_addr #4 !dbg !4262 {
entry:
  %cond_earliest = alloca %struct.rtx_def*, align 8
  %if_info = alloca %struct.noce_if_info, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !4266, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.edge_def* %then_edge, metadata !4267, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.edge_def* %else_edge, metadata !4268, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 %pass, metadata !4269, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8 0, metadata !4273, metadata !DIExpression()), !dbg !4294
  %0 = bitcast %struct.rtx_def** %cond_earliest to i8*, !dbg !4295
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4295
  %1 = bitcast %struct.noce_if_info* %if_info to i8*, !dbg !4296
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %1) #8, !dbg !4296
  %2 = load i32, i32* @reload_completed, align 4, !dbg !4297
  %tobool = icmp eq i32 %2, 0, !dbg !4297
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4297

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4297
  br label %cond.end, !dbg !4297

cond.end:                                         ; preds = %entry, %cond.true
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge, i64 0, i32 1, !dbg !4298
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4298
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %3) #7, !dbg !4300
  %tobool2 = icmp eq i8 %call, 0, !dbg !4300
  br i1 %tobool2, label %if.else, label %land.lhs.true, !dbg !4301

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4302
  %call4 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %4) #7, !dbg !4303
  %tobool6 = icmp eq i8 %call4, 0, !dbg !4303
  br i1 %tobool6, label %if.else, label %land.lhs.true7, !dbg !4304

land.lhs.true7:                                   ; preds = %land.lhs.true
  %dest8 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4305
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !4305
  %call9 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %5) #7, !dbg !4306
  %tobool11 = icmp eq i8 %call9, 0, !dbg !4306
  br i1 %tobool11, label %if.else, label %land.lhs.true12, !dbg !4307

land.lhs.true12:                                  ; preds = %land.lhs.true7
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !4308
  %call14 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %6) #7, !dbg !4309
  %tobool16 = icmp eq i8 %call14, 0, !dbg !4309
  br i1 %tobool16, label %if.else, label %land.lhs.true17, !dbg !4310

land.lhs.true17:                                  ; preds = %land.lhs.true12
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4311
  %call19 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %7) #7, !dbg !4312
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !4313
  %call21 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %8) #7, !dbg !4314
  %cmp = icmp eq %struct.basic_block_def* %call19, %call21, !dbg !4315
  br i1 %cmp, label %if.then, label %if.else, !dbg !4316

if.then:                                          ; preds = %land.lhs.true17
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !4270, metadata !DIExpression()), !dbg !4294
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %dest8, align 8, !dbg !4319
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %10, metadata !4271, metadata !DIExpression()), !dbg !4294
  %call25 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %9) #7, !dbg !4320
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call25, metadata !4272, metadata !DIExpression()), !dbg !4294
  br label %if.end65, !dbg !4321

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true7, %land.lhs.true, %cond.end, %land.lhs.true17
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4322
  %call27 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %11) #7, !dbg !4324
  %tobool29 = icmp eq i8 %call27, 0, !dbg !4324
  br i1 %tobool29, label %if.else44, label %land.lhs.true30, !dbg !4325

land.lhs.true30:                                  ; preds = %if.else
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4326
  %call32 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %12) #7, !dbg !4327
  %tobool34 = icmp eq i8 %call32, 0, !dbg !4327
  br i1 %tobool34, label %if.else44, label %land.lhs.true35, !dbg !4328

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4329
  %call37 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %13) #7, !dbg !4330
  %dest38 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4331
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest38, align 8, !dbg !4331
  %cmp39 = icmp eq %struct.basic_block_def* %call37, %14, !dbg !4332
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !4333

if.then41:                                        ; preds = %land.lhs.true35
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4334
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !4270, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4271, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %14, metadata !4272, metadata !DIExpression()), !dbg !4294
  br label %if.end65, !dbg !4336

if.else44:                                        ; preds = %land.lhs.true30, %if.else, %land.lhs.true35
  %dest45 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4337
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest45, align 8, !dbg !4337
  %call46 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %16) #7, !dbg !4339
  %tobool48 = icmp eq i8 %call46, 0, !dbg !4339
  br i1 %tobool48, label %cleanup, label %land.lhs.true49, !dbg !4340

land.lhs.true49:                                  ; preds = %if.else44
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %dest45, align 8, !dbg !4341
  %call51 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %17) #7, !dbg !4342
  %tobool53 = icmp eq i8 %call51, 0, !dbg !4342
  br i1 %tobool53, label %cleanup, label %land.lhs.true54, !dbg !4343

land.lhs.true54:                                  ; preds = %land.lhs.true49
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest45, align 8, !dbg !4344
  %call56 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %18) #7, !dbg !4345
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4346
  %cmp58 = icmp eq %struct.basic_block_def* %call56, %19, !dbg !4347
  br i1 %cmp58, label %if.then60, label %cleanup, !dbg !4348

if.then60:                                        ; preds = %land.lhs.true54
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest45, align 8, !dbg !4349
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %20, metadata !4270, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4271, metadata !DIExpression()), !dbg !4294
  %call62 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %20) #7, !dbg !4351
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call62, metadata !4272, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8 1, metadata !4273, metadata !DIExpression()), !dbg !4294
  br label %if.end65

if.end65:                                         ; preds = %if.then41, %if.then60, %if.then
  %then_bb.1 = phi %struct.basic_block_def* [ %9, %if.then ], [ %15, %if.then41 ], [ %20, %if.then60 ], !dbg !4352
  %else_bb.1 = phi %struct.basic_block_def* [ %10, %if.then ], [ null, %if.then41 ], [ null, %if.then60 ], !dbg !4352
  %join_bb.1 = phi %struct.basic_block_def* [ %call25, %if.then ], [ %call37, %if.then41 ], [ %call62, %if.then60 ], !dbg !4352
  %then_else_reversed.1 = phi i8 [ 0, %if.then ], [ 0, %if.then41 ], [ 1, %if.then60 ], !dbg !4353
  call void @llvm.dbg.value(metadata i8 %then_else_reversed.1, metadata !4273, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %join_bb.1, metadata !4272, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %else_bb.1, metadata !4271, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %then_bb.1, metadata !4270, metadata !DIExpression()), !dbg !4294
  %call66 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %then_bb.1) #7, !dbg !4354
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call66, i64 0, i32 7, !dbg !4356
  %21 = load i32, i32* %flags, align 8, !dbg !4356
  %and = and i32 %21, 14, !dbg !4357
  %tobool67 = icmp eq i32 %and, 0, !dbg !4357
  br i1 %tobool67, label %if.end69, label %cleanup, !dbg !4358

if.end69:                                         ; preds = %if.end65
  %tobool70 = icmp eq %struct.basic_block_def* %else_bb.1, null, !dbg !4359
  br i1 %tobool70, label %if.end77, label %land.lhs.true71, !dbg !4361

land.lhs.true71:                                  ; preds = %if.end69
  %call72 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* nonnull %else_bb.1) #7, !dbg !4362
  %flags73 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call72, i64 0, i32 7, !dbg !4363
  %22 = load i32, i32* %flags73, align 8, !dbg !4363
  %and74 = and i32 %22, 14, !dbg !4364
  %tobool75 = icmp eq i32 %and74, 0, !dbg !4364
  br i1 %tobool75, label %if.end77, label %cleanup, !dbg !4365

if.end77:                                         ; preds = %land.lhs.true71, %if.end69
  %23 = load i32, i32* @num_possible_if_blocks, align 4, !dbg !4366
  %inc = add nsw i32 %23, 1, !dbg !4366
  store i32 %inc, i32* @num_possible_if_blocks, align 4, !dbg !4366
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4367
  %tobool78 = icmp eq %struct._IO_FILE* %24, null, !dbg !4367
  br i1 %tobool78, label %if.end91, label %if.then79, !dbg !4369

if.then79:                                        ; preds = %if.end77
  %cond81 = select i1 %tobool70, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), !dbg !4370
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 9, !dbg !4372
  %25 = load i32, i32* %index, align 8, !dbg !4372
  %index82 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %then_bb.1, i64 0, i32 9, !dbg !4373
  %26 = load i32, i32* %index82, align 8, !dbg !4373
  %call83 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i8* %cond81, i32 %pass, i32 %25, i32 %26) #6, !dbg !4374
  br i1 %tobool70, label %if.end88, label %if.then85, !dbg !4375

if.then85:                                        ; preds = %if.then79
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4376
  %index86 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %else_bb.1, i64 0, i32 9, !dbg !4378
  %28 = load i32, i32* %index86, align 8, !dbg !4378
  %call87 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i32 %28) #6, !dbg !4379
  br label %if.end88, !dbg !4379

if.end88:                                         ; preds = %if.then79, %if.then85
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4380
  %index89 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %join_bb.1, i64 0, i32 9, !dbg !4381
  %30 = load i32, i32* %index89, align 8, !dbg !4381
  %call90 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32 %30) #6, !dbg !4382
  br label %if.end91, !dbg !4383

if.end91:                                         ; preds = %if.end77, %if.end88
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 7, !dbg !4384
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4384
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4384
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 1, !dbg !4384
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4384
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !4274, metadata !DIExpression()), !dbg !4294
  %call92 = tail call i32 @onlyjump_p(%struct.rtx_def* %32) #6, !dbg !4385
  %tobool93 = icmp eq i32 %call92, 0, !dbg !4385
  br i1 %tobool93, label %cleanup, label %if.end95, !dbg !4387

if.end95:                                         ; preds = %if.end91
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond_earliest, metadata !4276, metadata !DIExpression(DW_OP_deref)), !dbg !4294
  %call96 = call fastcc %struct.rtx_def* @noce_get_condition(%struct.rtx_def* %32, %struct.rtx_def** nonnull %cond_earliest, i8 zeroext %then_else_reversed.1) #7, !dbg !4388
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call96, metadata !4275, metadata !DIExpression()), !dbg !4294
  %tobool97 = icmp eq %struct.rtx_def* %call96, null, !dbg !4389
  br i1 %tobool97, label %cleanup, label %if.end99, !dbg !4391

if.end99:                                         ; preds = %if.end95
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call96, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4392
  %33 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4392
  %34 = load i32*, i32** %33, align 8, !dbg !4392
  %bf.load = load i32, i32* %34, align 8, !dbg !4392
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4392
  %cmp100 = icmp eq i32 %bf.clear, 65536, !dbg !4394
  br i1 %cmp100, label %cleanup, label %if.end103, !dbg !4395

if.end103:                                        ; preds = %if.end99
  %call104 = call i8* @memset(i8* nonnull %1, i32 0, i64 104) #6, !dbg !4396
  %test_bb105 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 0, !dbg !4397
  store %struct.basic_block_def* %test_bb, %struct.basic_block_def** %test_bb105, align 8, !dbg !4398
  %then_bb106 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 1, !dbg !4399
  store %struct.basic_block_def* %then_bb.1, %struct.basic_block_def** %then_bb106, align 8, !dbg !4400
  %else_bb107 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 2, !dbg !4401
  store %struct.basic_block_def* %else_bb.1, %struct.basic_block_def** %else_bb107, align 8, !dbg !4402
  %join_bb108 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 3, !dbg !4403
  store %struct.basic_block_def* %join_bb.1, %struct.basic_block_def** %join_bb108, align 8, !dbg !4404
  %cond109 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !4405
  store %struct.rtx_def* %call96, %struct.rtx_def** %cond109, align 8, !dbg !4406
  %35 = bitcast %struct.rtx_def** %cond_earliest to i64*, !dbg !4407
  %36 = load i64, i64* %35, align 8, !dbg !4407
  %cond_earliest110 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !4408
  %37 = bitcast %struct.rtx_def** %cond_earliest110 to i64*, !dbg !4409
  store i64 %36, i64* %37, align 8, !dbg !4409
  %jump111 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !4410
  store %struct.rtx_def* %32, %struct.rtx_def** %jump111, align 8, !dbg !4411
  %then_else_reversed112 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 12, !dbg !4412
  store i8 %then_else_reversed.1, i8* %then_else_reversed112, align 8, !dbg !4413
  %call113 = call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %test_bb) #6, !dbg !4414
  %tobool114 = icmp eq i8 %call113, 0, !dbg !4414
  br i1 %tobool114, label %cond.end124, label %cond.false116, !dbg !4414

cond.false116:                                    ; preds = %if.end103
  %call117 = call zeroext i8 @predictable_edge_p(%struct.edge_def* %then_edge) #6, !dbg !4414
  %tobool119 = icmp eq i8 %call117, 0, !dbg !4414
  %38 = load i32, i32* @ix86_branch_cost, align 4, !dbg !4414
  %cond123 = select i1 %tobool119, i32 %38, i32 0, !dbg !4414
  br label %cond.end124, !dbg !4414

cond.end124:                                      ; preds = %if.end103, %cond.false116
  %cond125 = phi i32 [ 2, %if.end103 ], [ %cond123, %cond.false116 ], !dbg !4414
  %branch_cost = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !4415
  store i32 %cond125, i32* %branch_cost, align 4, !dbg !4416
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !4277, metadata !DIExpression(DW_OP_deref)), !dbg !4294
  %call126 = call fastcc i32 @noce_process_if_block(%struct.noce_if_info* nonnull %if_info) #7, !dbg !4417
  %tobool127 = icmp eq i32 %call126, 0, !dbg !4417
  br i1 %tobool127, label %if.end129, label %cleanup, !dbg !4419

if.end129:                                        ; preds = %cond.end124
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !4277, metadata !DIExpression(DW_OP_deref)), !dbg !4294
  %call130 = call fastcc i32 @cond_move_process_if_block(%struct.noce_if_info* nonnull %if_info) #7, !dbg !4420
  %tobool131 = icmp ne i32 %call130, 0, !dbg !4420
  %. = zext i1 %tobool131 to i32, !dbg !4294
  br label %cleanup, !dbg !4294

cleanup:                                          ; preds = %land.lhs.true71, %cond.end124, %if.end95, %if.end91, %if.end65, %land.lhs.true49, %if.else44, %if.end129, %if.end99, %land.lhs.true54
  %retval.0 = phi i32 [ 0, %land.lhs.true54 ], [ 0, %land.lhs.true49 ], [ 0, %if.else44 ], [ 0, %if.end65 ], [ 0, %land.lhs.true71 ], [ 0, %if.end91 ], [ 0, %if.end95 ], [ 0, %if.end99 ], [ 1, %cond.end124 ], [ %., %if.end129 ], !dbg !4294
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %1) #8, !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4422
  ret i32 %retval.0, !dbg !4422
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cond_exec_find_if_block(%struct.ce_if_block* %ce_info) unnamed_addr #4 !dbg !4423 {
entry:
  %cur_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp75 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ce_if_block* %ce_info, metadata !4428, metadata !DIExpression()), !dbg !4457
  %test_bb1 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 0, !dbg !4458
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb1, align 8, !dbg !4458
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4429, metadata !DIExpression()), !dbg !4457
  %then_bb2 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 1, !dbg !4459
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %then_bb2, align 8, !dbg !4459
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4430, metadata !DIExpression()), !dbg !4457
  %else_bb3 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 2, !dbg !4460
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %else_bb3, align 8, !dbg !4460
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4431, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4432, metadata !DIExpression()), !dbg !4457
  %3 = bitcast %struct.edge_def** %cur_edge to i8*, !dbg !4461
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4461
  %4 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4462
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4462
  %last_test_bb = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 4, !dbg !4463
  store %struct.basic_block_def* %0, %struct.basic_block_def** %last_test_bb, align 8, !dbg !4464
  %5 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !4465
  %call = tail call zeroext i8 %5() #6, !dbg !4465
  %tobool = icmp ne i8 %call, 0, !dbg !4465
  %6 = load i32, i32* @reload_completed, align 4, !dbg !4465
  %tobool4 = icmp ne i32 %6, 0, !dbg !4465
  %or.cond = and i1 %tobool, %tobool4, !dbg !4465
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !4465

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 3188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !4465
  br label %cond.end, !dbg !4465

cond.end:                                         ; preds = %entry, %cond.true
  %call5 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %0) #7, !dbg !4466
  %tobool7 = icmp eq i8 %call5, 0, !dbg !4466
  br i1 %tobool7, label %if.end54, label %land.lhs.true8, !dbg !4467

land.lhs.true8:                                   ; preds = %cond.end
  %call9 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %0) #7, !dbg !4468
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call9, i64 0, i32 7, !dbg !4469
  %7 = load i32, i32* %flags, align 8, !dbg !4469
  %cmp = icmp eq i32 %7, 1, !dbg !4470
  br i1 %cmp, label %if.then, label %if.end54, !dbg !4471

if.then:                                          ; preds = %land.lhs.true8
  %call11 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %0) #7, !dbg !4472
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !4442, metadata !DIExpression()), !dbg !4473
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4474
  %call12 = tail call zeroext i8 @optimize_function_for_speed_p(%struct.function* %8) #6, !dbg !4474
  %tobool13 = icmp eq i8 %call12, 0, !dbg !4474
  %9 = load i32, i32* @ix86_branch_cost, align 4, !dbg !4474
  %.op = add i32 %9, 1, !dbg !4474
  %add = select i1 %tobool13, i32 3, i32 %.op, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %add, metadata !4446, metadata !DIExpression()), !dbg !4473
  %call18 = tail call fastcc i32 @block_jumps_and_fallthru_p(%struct.basic_block_def* %call11, %struct.basic_block_def* %2) #7, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %call18, metadata !4447, metadata !DIExpression()), !dbg !4473
  %cmp19 = icmp sgt i32 %call18, -1, !dbg !4477
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !4478

if.then21:                                        ; preds = %if.then
  %and_and_p = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !4479
  store i32 1, i32* %and_and_p, align 8, !dbg !4481
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4445, metadata !DIExpression()), !dbg !4473
  br label %if.end28, !dbg !4482

if.else:                                          ; preds = %if.then
  %call22 = tail call fastcc i32 @block_jumps_and_fallthru_p(%struct.basic_block_def* %call11, %struct.basic_block_def* %1) #7, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %call22, metadata !4447, metadata !DIExpression()), !dbg !4473
  %cmp23 = icmp sgt i32 %call22, -1, !dbg !4485
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !4486

if.then25:                                        ; preds = %if.else
  %and_and_p26 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !4487
  store i32 0, i32* %and_and_p26, align 8, !dbg !4489
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4445, metadata !DIExpression()), !dbg !4473
  br label %if.end28, !dbg !4490

if.end28:                                         ; preds = %if.then25, %if.else, %if.then21
  %n_insns.0 = phi i32 [ %call18, %if.then21 ], [ %call22, %if.else ], [ %call22, %if.then25 ], !dbg !4491
  %target_bb.1 = phi %struct.basic_block_def* [ %2, %if.then21 ], [ null, %if.else ], [ %1, %if.then25 ], !dbg !4491
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target_bb.1, metadata !4445, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 %n_insns.0, metadata !4447, metadata !DIExpression()), !dbg !4473
  %tobool29 = icmp ne %struct.basic_block_def* %target_bb.1, null, !dbg !4492
  %cmp31 = icmp sle i32 %n_insns.0, %add, !dbg !4493
  %or.cond2 = and i1 %tobool29, %cmp31, !dbg !4494
  br i1 %or.cond2, label %if.then33, label %if.end54, !dbg !4494

if.then33:                                        ; preds = %if.end28
  call void @llvm.dbg.value(metadata i32 0, metadata !4448, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i32 0, metadata !4451, metadata !DIExpression()), !dbg !4495
  store %struct.basic_block_def* %0, %struct.basic_block_def** %last_test_bb, align 8, !dbg !4496
  br label %do.body, !dbg !4497

do.body:                                          ; preds = %if.end40, %if.then33
  %total_insns.0 = phi i32 [ 0, %if.then33 ], [ %add36, %if.end40 ], !dbg !4495
  %n_insns.1 = phi i32 [ %n_insns.0, %if.then33 ], [ %call42, %if.end40 ], !dbg !4473
  %blocks.0 = phi i32 [ 0, %if.then33 ], [ %inc, %if.end40 ], !dbg !4495
  %bb.0 = phi %struct.basic_block_def* [ %call11, %if.then33 ], [ %call41, %if.end40 ], !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 %blocks.0, metadata !4451, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata i32 %n_insns.1, metadata !4447, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 %total_insns.0, metadata !4448, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4429, metadata !DIExpression()), !dbg !4457
  store %struct.basic_block_def* %bb.0, %struct.basic_block_def** %test_bb1, align 8, !dbg !4498
  %add36 = add nsw i32 %total_insns.0, %n_insns.1, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %add36, metadata !4448, metadata !DIExpression()), !dbg !4495
  %inc = add nuw nsw i32 %blocks.0, 1, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4451, metadata !DIExpression()), !dbg !4495
  %call37 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb.0) #7, !dbg !4502
  %tobool38 = icmp eq i8 %call37, 0, !dbg !4502
  br i1 %tobool38, label %do.end, label %if.end40, !dbg !4504

if.end40:                                         ; preds = %do.body
  %call41 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb.0) #7, !dbg !4505
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call41, metadata !4442, metadata !DIExpression()), !dbg !4473
  %call42 = tail call fastcc i32 @block_jumps_and_fallthru_p(%struct.basic_block_def* %call41, %struct.basic_block_def* nonnull %target_bb.1) #7, !dbg !4506
  call void @llvm.dbg.value(metadata i32 %call42, metadata !4447, metadata !DIExpression()), !dbg !4473
  %cmp43 = icmp sgt i32 %call42, -1, !dbg !4507
  %add45 = add nsw i32 %add36, %call42, !dbg !4508
  %cmp46 = icmp sle i32 %add45, %add, !dbg !4508
  %10 = and i1 %cmp43, %cmp46, !dbg !4508
  br i1 %10, label %do.body, label %do.end, !dbg !4509, !llvm.loop !4510

do.end:                                           ; preds = %do.body, %if.end40
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %do.body ], [ %bb.0, %if.end40 ], !dbg !4473
  %add36.lcssa = phi i32 [ %add36, %do.body ], [ %add36, %if.end40 ], !dbg !4500
  %inc.lcssa = phi i32 [ %inc, %do.body ], [ %inc, %if.end40 ], !dbg !4501
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0.lcssa, metadata !4442, metadata !DIExpression()), !dbg !4473
  %num_multiple_test_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !4512
  store i32 %inc.lcssa, i32* %num_multiple_test_blocks, align 8, !dbg !4513
  %num_multiple_test_insns = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 8, !dbg !4514
  store i32 %add36.lcssa, i32* %num_multiple_test_insns, align 4, !dbg !4515
  %and_and_p48 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !4516
  %11 = load i32, i32* %and_and_p48, align 8, !dbg !4516
  %tobool49 = icmp eq i32 %11, 0, !dbg !4518
  br i1 %tobool49, label %if.else51, label %if.then50, !dbg !4519

if.then50:                                        ; preds = %do.end
  %num_and_and_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 6, !dbg !4520
  store i32 %inc.lcssa, i32* %num_and_and_blocks, align 4, !dbg !4521
  br label %if.end54, !dbg !4522

if.else51:                                        ; preds = %do.end
  %num_or_or_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 7, !dbg !4523
  store i32 %inc.lcssa, i32* %num_or_or_blocks, align 8, !dbg !4524
  br label %if.end54

if.end54:                                         ; preds = %cond.end, %if.end28, %if.else51, %if.then50, %land.lhs.true8
  %test_bb.1 = phi %struct.basic_block_def* [ %0, %land.lhs.true8 ], [ %0, %cond.end ], [ %0, %if.end28 ], [ %bb.0.lcssa, %if.else51 ], [ %bb.0.lcssa, %if.then50 ], !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb.1, metadata !4429, metadata !DIExpression()), !dbg !4457
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 0, !dbg !4525
  %12 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4525
  %tobool55 = icmp eq %struct.VEC_edge_gc* %12, null, !dbg !4525
  br i1 %tobool55, label %cond.end59, label %cond.true56, !dbg !4525

cond.true56:                                      ; preds = %if.end54
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %12, i64 0, i32 0, !dbg !4525
  br label %cond.end59, !dbg !4525

cond.end59:                                       ; preds = %if.end54, %cond.true56
  %cond60 = phi %struct.VEC_edge_base* [ %base, %cond.true56 ], [ null, %if.end54 ], !dbg !4525
  %call61 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond60) #7, !dbg !4525
  %num_or_or_blocks62 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 7, !dbg !4527
  %13 = load i32, i32* %num_or_or_blocks62, align 8, !dbg !4527
  %sub = sub i32 %call61, %13, !dbg !4528
  %cmp63 = icmp eq i32 %sub, 1, !dbg !4529
  br i1 %cmp63, label %if.end66, label %cleanup334, !dbg !4530

if.end66:                                         ; preds = %cond.end59
  %14 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4531
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8, !dbg !4531
  %call68 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !4531
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4531
  %16 = extractvalue { i32, %struct.VEC_edge_gc** } %call68, 0, !dbg !4531
  store i32 %16, i32* %15, align 8, !dbg !4531
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4531
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call68, 1, !dbg !4531
  store %struct.VEC_edge_gc** %18, %struct.VEC_edge_gc*** %17, align 8, !dbg !4531
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !4531
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8, !dbg !4531
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4533
  %20 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4533
  br label %for.cond, !dbg !4531

for.cond:                                         ; preds = %for.inc, %if.end66
  %21 = load i32, i32* %19, align 8, !dbg !4535
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !4535
  call void @llvm.dbg.value(metadata %struct.edge_def** %cur_edge, metadata !4433, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  %call69 = call fastcc zeroext i8 @ei_cond(i32 %21, %struct.VEC_edge_gc** %22, %struct.edge_def** nonnull %cur_edge) #7, !dbg !4535
  %tobool70 = icmp eq i8 %call69, 0, !dbg !4531
  br i1 %tobool70, label %for.end, label %for.body, !dbg !4531

for.body:                                         ; preds = %for.cond
  %23 = load %struct.edge_def*, %struct.edge_def** %cur_edge, align 8, !dbg !4536
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !4433, metadata !DIExpression()), !dbg !4457
  %flags71 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 7, !dbg !4539
  %24 = load i32, i32* %flags71, align 8, !dbg !4539
  %and = and i32 %24, 14, !dbg !4540
  %tobool72 = icmp eq i32 %and, 0, !dbg !4540
  br i1 %tobool72, label %for.inc, label %cleanup334.loopexit4, !dbg !4541

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4435, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4535
  br label %for.cond, !dbg !4535, !llvm.loop !4542

for.end:                                          ; preds = %for.cond
  %25 = bitcast %struct.edge_iterator* %tmp75 to i8*, !dbg !4544
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8, !dbg !4544
  %preds76 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 0, !dbg !4544
  %call77 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds76) #7, !dbg !4544
  %26 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp75, i64 0, i32 0, !dbg !4544
  %27 = extractvalue { i32, %struct.VEC_edge_gc** } %call77, 0, !dbg !4544
  store i32 %27, i32* %26, align 8, !dbg !4544
  %28 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp75, i64 0, i32 1, !dbg !4544
  %29 = extractvalue { i32, %struct.VEC_edge_gc** } %call77, 1, !dbg !4544
  store %struct.VEC_edge_gc** %29, %struct.VEC_edge_gc*** %28, align 8, !dbg !4544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %25, i64 16, i1 false), !dbg !4544
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8, !dbg !4544
  br label %for.cond78, !dbg !4544

for.cond78:                                       ; preds = %for.inc87, %for.end
  %30 = load i32, i32* %19, align 8, !dbg !4546
  %31 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %20, align 8, !dbg !4546
  call void @llvm.dbg.value(metadata %struct.edge_def** %cur_edge, metadata !4433, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  %call79 = call fastcc zeroext i8 @ei_cond(i32 %30, %struct.VEC_edge_gc** %31, %struct.edge_def** nonnull %cur_edge) #7, !dbg !4546
  %tobool80 = icmp eq i8 %call79, 0, !dbg !4544
  br i1 %tobool80, label %for.end88, label %for.body81, !dbg !4544

for.body81:                                       ; preds = %for.cond78
  %32 = load %struct.edge_def*, %struct.edge_def** %cur_edge, align 8, !dbg !4548
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !4433, metadata !DIExpression()), !dbg !4457
  %flags82 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 7, !dbg !4551
  %33 = load i32, i32* %flags82, align 8, !dbg !4551
  %and83 = and i32 %33, 14, !dbg !4552
  %tobool84 = icmp eq i32 %and83, 0, !dbg !4552
  br i1 %tobool84, label %for.inc87, label %cleanup334.loopexit, !dbg !4553

for.inc87:                                        ; preds = %for.body81
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4435, metadata !DIExpression(DW_OP_deref)), !dbg !4457
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4546
  br label %for.cond78, !dbg !4546, !llvm.loop !4554

for.end88:                                        ; preds = %for.cond78
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 1, !dbg !4556
  %34 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4556
  %tobool89 = icmp eq %struct.VEC_edge_gc* %34, null, !dbg !4556
  br i1 %tobool89, label %cond.end94, label %cond.true90, !dbg !4556

cond.true90:                                      ; preds = %for.end88
  %base92 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %34, i64 0, i32 0, !dbg !4556
  br label %cond.end94, !dbg !4556

cond.end94:                                       ; preds = %for.end88, %cond.true90
  %cond95 = phi %struct.VEC_edge_base* [ %base92, %cond.true90 ], [ null, %for.end88 ], !dbg !4556
  %call96 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond95) #7, !dbg !4556
  %cmp97 = icmp eq i32 %call96, 0, !dbg !4558
  br i1 %cmp97, label %if.end113, label %land.lhs.true99, !dbg !4559

land.lhs.true99:                                  ; preds = %cond.end94
  %call100 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %1) #7, !dbg !4560
  %tobool101 = icmp eq i8 %call100, 0, !dbg !4560
  br i1 %tobool101, label %cleanup334, label %lor.lhs.false, !dbg !4561

lor.lhs.false:                                    ; preds = %land.lhs.true99
  %call102 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %1) #7, !dbg !4562
  %flags103 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call102, i64 0, i32 7, !dbg !4563
  %35 = load i32, i32* %flags103, align 8, !dbg !4563
  %and104 = and i32 %35, 14, !dbg !4564
  %tobool105 = icmp eq i32 %and104, 0, !dbg !4564
  br i1 %tobool105, label %lor.lhs.false106, label %cleanup334, !dbg !4565

lor.lhs.false106:                                 ; preds = %lor.lhs.false
  %36 = load i32, i32* @epilogue_completed, align 4, !dbg !4566
  %tobool107 = icmp eq i32 %36, 0, !dbg !4566
  br i1 %tobool107, label %if.end113, label %land.lhs.true108, !dbg !4567

land.lhs.true108:                                 ; preds = %lor.lhs.false106
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !4568
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4568
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4568
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i64 0, i32 1, !dbg !4568
  %38 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4568
  %call109 = call zeroext i8 @tablejump_p(%struct.rtx_def* %38, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !4569
  %tobool111 = icmp eq i8 %call109, 0, !dbg !4569
  br i1 %tobool111, label %if.end113, label %cleanup334, !dbg !4570

if.end113:                                        ; preds = %land.lhs.true108, %lor.lhs.false106, %cond.end94
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4571
  %tobool115 = icmp eq %struct.VEC_edge_gc* %39, null, !dbg !4571
  br i1 %tobool115, label %cond.end120, label %cond.true116, !dbg !4571

cond.true116:                                     ; preds = %if.end113
  %base118 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i64 0, i32 0, !dbg !4571
  br label %cond.end120, !dbg !4571

cond.end120:                                      ; preds = %if.end113, %cond.true116
  %cond121 = phi %struct.VEC_edge_base* [ %base118, %cond.true116 ], [ null, %if.end113 ], !dbg !4571
  %call122 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond121) #7, !dbg !4571
  %cmp123 = icmp eq i32 %call122, 0, !dbg !4572
  br i1 %cmp123, label %if.then125, label %if.else155, !dbg !4573

if.then125:                                       ; preds = %cond.end120
  %call126 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %2) #7, !dbg !4574
  %tobool127 = icmp eq i8 %call126, 0, !dbg !4574
  br i1 %tobool127, label %cleanup334, label %if.then128, !dbg !4575

if.then128:                                       ; preds = %if.then125
  %il129 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !4576
  %rtl130 = bitcast %union.basic_block_il_dependent* %il129 to %struct.rtl_bb_info**, !dbg !4576
  %40 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl130, align 8, !dbg !4576
  %end_131 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 1, !dbg !4576
  br label %while.cond, !dbg !4577

while.cond:                                       ; preds = %while.body, %if.then128
  %last_insn.0.in = phi %struct.rtx_def** [ %end_131, %if.then128 ], [ %rt_rtx, %while.body ]
  %last_insn.0 = load %struct.rtx_def*, %struct.rtx_def** %last_insn.0.in, align 8, !dbg !4578
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_insn.0, metadata !4452, metadata !DIExpression()), !dbg !4578
  %cond = icmp eq %struct.rtx_def* %last_insn.0, null, !dbg !4579
  br i1 %cond, label %if.end152.loopexit, label %land.lhs.true133, !dbg !4579

land.lhs.true133:                                 ; preds = %while.cond
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0, i64 0, i32 0, !dbg !4580
  %bf.load = load i32, i32* %41, align 8, !dbg !4580
  %bf.clear = and i32 %bf.load, 65535, !dbg !4580
  %cmp134 = icmp eq i32 %bf.clear, 13, !dbg !4580
  br i1 %cmp134, label %land.rhs136, label %while.end, !dbg !4581

land.rhs136:                                      ; preds = %land.lhs.true133
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %40, i64 0, i32 0, !dbg !4582
  %42 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4582
  %cmp139 = icmp eq %struct.rtx_def* %last_insn.0, %42, !dbg !4583
  br i1 %cmp139, label %while.end, label %while.body, !dbg !4577

while.body:                                       ; preds = %land.rhs136
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4584
  %rt_rtx = bitcast %union.rtunion_def* %43 to %struct.rtx_def**, !dbg !4584
  br label %while.cond, !dbg !4577, !llvm.loop !4585

while.end:                                        ; preds = %land.rhs136, %land.lhs.true133
  %bf.clear.lcssa = phi i32 [ %bf.clear, %land.rhs136 ], [ %bf.clear, %land.lhs.true133 ], !dbg !4580
  %last_insn.0.lcssa8 = phi %struct.rtx_def* [ %last_insn.0, %land.rhs136 ], [ %last_insn.0, %land.lhs.true133 ], !dbg !4578
  %cmp146 = icmp eq i32 %bf.clear.lcssa, 9, !dbg !4586
  br i1 %cmp146, label %land.lhs.true148, label %if.end152, !dbg !4588

land.lhs.true148:                                 ; preds = %while.end
  %call149 = call i32 @simplejump_p(%struct.rtx_def* nonnull %last_insn.0.lcssa8) #6, !dbg !4589
  %tobool150 = icmp eq i32 %call149, 0, !dbg !4589
  br i1 %tobool150, label %cleanup, label %if.end152, !dbg !4590

if.end152.loopexit:                               ; preds = %while.cond
  br label %if.end152, !dbg !4591

if.end152:                                        ; preds = %if.end152.loopexit, %land.lhs.true148, %while.end
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4432, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4431, metadata !DIExpression()), !dbg !4457
  br label %cleanup, !dbg !4591

cleanup:                                          ; preds = %land.lhs.true148, %if.end152
  %join_bb.0 = phi %struct.basic_block_def* [ %2, %if.end152 ], [ null, %land.lhs.true148 ], !dbg !4457
  %else_bb.0 = phi %struct.basic_block_def* [ null, %if.end152 ], [ %2, %land.lhs.true148 ], !dbg !4457
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end152 ], [ false, %land.lhs.true148 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %else_bb.0, metadata !4431, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %join_bb.0, metadata !4432, metadata !DIExpression()), !dbg !4457
  br i1 %cleanup.dest.slot.0, label %if.end192, label %cleanup334

if.else155:                                       ; preds = %cond.end120
  %call156 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %1) #7, !dbg !4592
  %cmp157 = icmp eq %struct.basic_block_def* %call156, %2, !dbg !4594
  br i1 %cmp157, label %if.end192, label %if.else160, !dbg !4595

if.else160:                                       ; preds = %if.else155
  %call161 = call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %2) #7, !dbg !4596
  %tobool163 = icmp eq i8 %call161, 0, !dbg !4596
  br i1 %tobool163, label %cleanup334, label %land.lhs.true164, !dbg !4598

land.lhs.true164:                                 ; preds = %if.else160
  %call165 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %1) #7, !dbg !4599
  %call166 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %2) #7, !dbg !4600
  %cmp167 = icmp eq %struct.basic_block_def* %call165, %call166, !dbg !4601
  br i1 %cmp167, label %land.lhs.true169, label %cleanup334, !dbg !4602

land.lhs.true169:                                 ; preds = %land.lhs.true164
  %call170 = call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %2) #7, !dbg !4603
  %tobool172 = icmp eq i8 %call170, 0, !dbg !4603
  br i1 %tobool172, label %cleanup334, label %land.lhs.true173, !dbg !4604

land.lhs.true173:                                 ; preds = %land.lhs.true169
  %call174 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %2) #7, !dbg !4605
  %flags175 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call174, i64 0, i32 7, !dbg !4606
  %44 = load i32, i32* %flags175, align 8, !dbg !4606
  %and176 = and i32 %44, 14, !dbg !4607
  %tobool177 = icmp eq i32 %and176, 0, !dbg !4607
  br i1 %tobool177, label %land.lhs.true178, label %cleanup334, !dbg !4608

land.lhs.true178:                                 ; preds = %land.lhs.true173
  %45 = load i32, i32* @epilogue_completed, align 4, !dbg !4609
  %tobool179 = icmp eq i32 %45, 0, !dbg !4609
  br i1 %tobool179, label %if.then187, label %land.lhs.true180, !dbg !4610

land.lhs.true180:                                 ; preds = %land.lhs.true178
  %il181 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !4611
  %rtl182 = bitcast %union.basic_block_il_dependent* %il181 to %struct.rtl_bb_info**, !dbg !4611
  %46 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl182, align 8, !dbg !4611
  %end_183 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %46, i64 0, i32 1, !dbg !4611
  %47 = load %struct.rtx_def*, %struct.rtx_def** %end_183, align 8, !dbg !4611
  %call184 = call zeroext i8 @tablejump_p(%struct.rtx_def* %47, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !4612
  %tobool186 = icmp eq i8 %call184, 0, !dbg !4612
  br i1 %tobool186, label %if.then187, label %cleanup334, !dbg !4613

if.then187:                                       ; preds = %land.lhs.true180, %land.lhs.true178
  %call188 = call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %2) #7, !dbg !4614
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call188, metadata !4432, metadata !DIExpression()), !dbg !4457
  br label %if.end192

if.end192:                                        ; preds = %if.then187, %if.else155, %cleanup
  %join_bb.2 = phi %struct.basic_block_def* [ %join_bb.0, %cleanup ], [ %call188, %if.then187 ], [ %2, %if.else155 ], !dbg !4615
  %else_bb.2 = phi %struct.basic_block_def* [ %else_bb.0, %cleanup ], [ %2, %if.then187 ], [ null, %if.else155 ], !dbg !4615
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %else_bb.2, metadata !4431, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %join_bb.2, metadata !4432, metadata !DIExpression()), !dbg !4457
  %48 = load i32, i32* @num_possible_if_blocks, align 4, !dbg !4616
  %inc193 = add nsw i32 %48, 1, !dbg !4616
  store i32 %inc193, i32* @num_possible_if_blocks, align 4, !dbg !4616
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4617
  %tobool194 = icmp eq %struct._IO_FILE* %49, null, !dbg !4617
  br i1 %tobool194, label %if.end300, label %if.then195, !dbg !4619

if.then195:                                       ; preds = %if.end192
  %tobool196 = icmp eq %struct.basic_block_def* %else_bb.2, null, !dbg !4620
  %cond197 = select i1 %tobool196, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), !dbg !4620
  %pass = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 12, !dbg !4622
  %50 = load i32, i32* %pass, align 4, !dbg !4622
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb.1, i64 0, i32 9, !dbg !4623
  %51 = load i32, i32* %index, align 8, !dbg !4623
  %il198 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb.1, i64 0, i32 7, !dbg !4624
  %rtl199 = bitcast %union.basic_block_il_dependent* %il198 to %struct.rtl_bb_info**, !dbg !4624
  %52 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl199, align 8, !dbg !4624
  %head_200 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %52, i64 0, i32 0, !dbg !4624
  %53 = load %struct.rtx_def*, %struct.rtx_def** %head_200, align 8, !dbg !4624
  %tobool201 = icmp eq %struct.rtx_def* %53, null, !dbg !4624
  br i1 %tobool201, label %cond.end210, label %cond.true202, !dbg !4624

cond.true202:                                     ; preds = %if.then195
  %arrayidx208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4625
  %rt_int = bitcast %union.rtunion_def* %arrayidx208 to i32*, !dbg !4625
  %54 = load i32, i32* %rt_int, align 8, !dbg !4625
  br label %cond.end210, !dbg !4624

cond.end210:                                      ; preds = %if.then195, %cond.true202
  %cond211 = phi i32 [ %54, %cond.true202 ], [ -1, %if.then195 ], !dbg !4624
  %index212 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !4626
  %55 = load i32, i32* %index212, align 8, !dbg !4626
  %il213 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !4627
  %rtl214 = bitcast %union.basic_block_il_dependent* %il213 to %struct.rtl_bb_info**, !dbg !4627
  %56 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl214, align 8, !dbg !4627
  %head_215 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %56, i64 0, i32 0, !dbg !4627
  %57 = load %struct.rtx_def*, %struct.rtx_def** %head_215, align 8, !dbg !4627
  %tobool216 = icmp eq %struct.rtx_def* %57, null, !dbg !4627
  br i1 %tobool216, label %cond.end226, label %cond.true217, !dbg !4627

cond.true217:                                     ; preds = %cond.end210
  %arrayidx223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4628
  %rt_int224 = bitcast %union.rtunion_def* %arrayidx223 to i32*, !dbg !4628
  %58 = load i32, i32* %rt_int224, align 8, !dbg !4628
  br label %cond.end226, !dbg !4627

cond.end226:                                      ; preds = %cond.end210, %cond.true217
  %cond227 = phi i32 [ %58, %cond.true217 ], [ -1, %cond.end210 ], !dbg !4627
  %call228 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %49, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.17, i64 0, i64 0), i8* %cond197, i32 %50, i32 %51, i32 %cond211, i32 %55, i32 %cond227) #6, !dbg !4629
  br i1 %tobool196, label %if.end248, label %if.then230, !dbg !4630

if.then230:                                       ; preds = %cond.end226
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4631
  %index231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %else_bb.2, i64 0, i32 9, !dbg !4633
  %60 = load i32, i32* %index231, align 8, !dbg !4633
  %il232 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %else_bb.2, i64 0, i32 7, !dbg !4634
  %rtl233 = bitcast %union.basic_block_il_dependent* %il232 to %struct.rtl_bb_info**, !dbg !4634
  %61 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl233, align 8, !dbg !4634
  %head_234 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %61, i64 0, i32 0, !dbg !4634
  %62 = load %struct.rtx_def*, %struct.rtx_def** %head_234, align 8, !dbg !4634
  %tobool235 = icmp eq %struct.rtx_def* %62, null, !dbg !4634
  br i1 %tobool235, label %cond.end245, label %cond.true236, !dbg !4634

cond.true236:                                     ; preds = %if.then230
  %arrayidx242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4635
  %rt_int243 = bitcast %union.rtunion_def* %arrayidx242 to i32*, !dbg !4635
  %63 = load i32, i32* %rt_int243, align 8, !dbg !4635
  br label %cond.end245, !dbg !4634

cond.end245:                                      ; preds = %if.then230, %cond.true236
  %cond246 = phi i32 [ %63, %cond.true236 ], [ -1, %if.then230 ], !dbg !4634
  %call247 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i32 %60, i32 %cond246) #6, !dbg !4636
  br label %if.end248, !dbg !4636

if.end248:                                        ; preds = %cond.end226, %cond.end245
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4637
  %index249 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %join_bb.2, i64 0, i32 9, !dbg !4638
  %65 = load i32, i32* %index249, align 8, !dbg !4638
  %il250 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %join_bb.2, i64 0, i32 7, !dbg !4639
  %rtl251 = bitcast %union.basic_block_il_dependent* %il250 to %struct.rtl_bb_info**, !dbg !4639
  %66 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl251, align 8, !dbg !4639
  %head_252 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %66, i64 0, i32 0, !dbg !4639
  %67 = load %struct.rtx_def*, %struct.rtx_def** %head_252, align 8, !dbg !4639
  %tobool253 = icmp eq %struct.rtx_def* %67, null, !dbg !4639
  br i1 %tobool253, label %cond.end263, label %cond.true254, !dbg !4639

cond.true254:                                     ; preds = %if.end248
  %arrayidx260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4640
  %rt_int261 = bitcast %union.rtunion_def* %arrayidx260 to i32*, !dbg !4640
  %68 = load i32, i32* %rt_int261, align 8, !dbg !4640
  br label %cond.end263, !dbg !4639

cond.end263:                                      ; preds = %if.end248, %cond.true254
  %cond264 = phi i32 [ %68, %cond.true254 ], [ -1, %if.end248 ], !dbg !4639
  %call265 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i32 %65, i32 %cond264) #6, !dbg !4641
  %num_multiple_test_blocks266 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !4642
  %69 = load i32, i32* %num_multiple_test_blocks266, align 8, !dbg !4642
  %cmp267 = icmp sgt i32 %69, 0, !dbg !4644
  br i1 %cmp267, label %if.then269, label %if.end298, !dbg !4645

if.then269:                                       ; preds = %cond.end263
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4646
  %and_and_p271 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !4647
  %71 = load i32, i32* %and_and_p271, align 8, !dbg !4647
  %tobool272 = icmp eq i32 %71, 0, !dbg !4648
  %cond273 = select i1 %tobool272, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), !dbg !4648
  %cmp275 = icmp eq i32 %69, 1, !dbg !4649
  %cond277 = select i1 %cmp275, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), !dbg !4650
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %last_test_bb, align 8, !dbg !4651
  %index279 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %72, i64 0, i32 9, !dbg !4652
  %73 = load i32, i32* %index279, align 8, !dbg !4652
  %il281 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %72, i64 0, i32 7, !dbg !4653
  %rtl282 = bitcast %union.basic_block_il_dependent* %il281 to %struct.rtl_bb_info**, !dbg !4653
  %74 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl282, align 8, !dbg !4653
  %head_283 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %74, i64 0, i32 0, !dbg !4653
  %75 = load %struct.rtx_def*, %struct.rtx_def** %head_283, align 8, !dbg !4653
  %tobool284 = icmp eq %struct.rtx_def* %75, null, !dbg !4654
  br i1 %tobool284, label %cond.end295, label %cond.true285, !dbg !4654

cond.true285:                                     ; preds = %if.then269
  %arrayidx292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4655
  %rt_int293 = bitcast %union.rtunion_def* %arrayidx292 to i32*, !dbg !4655
  %76 = load i32, i32* %rt_int293, align 8, !dbg !4655
  br label %cond.end295, !dbg !4654

cond.end295:                                      ; preds = %if.then269, %cond.true285
  %cond296 = phi i32 [ %76, %cond.true285 ], [ -1, %if.then269 ], !dbg !4654
  %call297 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i32 %69, i8* %cond273, i8* %cond277, i32 %73, i32 %cond296) #6, !dbg !4656
  br label %if.end298, !dbg !4656

if.end298:                                        ; preds = %cond.end295, %cond.end263
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4657
  %call299 = call i32 @fputc(i32 10, %struct._IO_FILE* %77) #6, !dbg !4658
  br label %if.end300, !dbg !4659

if.end300:                                        ; preds = %if.end192, %if.end298
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4434, metadata !DIExpression()), !dbg !4457
  %tobool301 = icmp eq %struct.basic_block_def* %else_bb.2, null, !dbg !4660
  br i1 %tobool301, label %if.end306, label %land.lhs.true302, !dbg !4662

land.lhs.true302:                                 ; preds = %if.end300
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 6, !dbg !4663
  %78 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4663
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %78, metadata !4434, metadata !DIExpression()), !dbg !4457
  %cmp303 = icmp eq %struct.basic_block_def* %78, %else_bb.2, !dbg !4664
  br i1 %cmp303, label %if.end306, label %cleanup334, !dbg !4665

if.end306:                                        ; preds = %land.lhs.true302, %if.end300
  %next.0 = phi %struct.basic_block_def* [ %else_bb.2, %land.lhs.true302 ], [ %1, %if.end300 ], !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %next.0, metadata !4434, metadata !DIExpression()), !dbg !4457
  %next_bb307 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %next.0, i64 0, i32 6, !dbg !4666
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb307, align 8, !dbg !4666
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %79, metadata !4434, metadata !DIExpression()), !dbg !4457
  %cmp308 = icmp eq %struct.basic_block_def* %79, %join_bb.2, !dbg !4668
  br i1 %cmp308, label %if.end319, label %land.lhs.true310, !dbg !4669

land.lhs.true310:                                 ; preds = %if.end306
  %80 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4670
  %cfg = getelementptr inbounds %struct.function, %struct.function* %80, i64 0, i32 1, !dbg !4670
  %81 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4670
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %81, i64 0, i32 1, !dbg !4670
  %82 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4670
  %cmp312 = icmp eq %struct.basic_block_def* %join_bb.2, %82, !dbg !4671
  br i1 %cmp312, label %if.end319, label %if.then314, !dbg !4672

if.then314:                                       ; preds = %land.lhs.true310
  br i1 %tobool301, label %cleanup334, label %if.end319, !dbg !4673

if.end319:                                        ; preds = %if.then314, %land.lhs.true310, %if.end306
  %join_bb.3 = phi %struct.basic_block_def* [ %join_bb.2, %land.lhs.true310 ], [ %join_bb.2, %if.end306 ], [ null, %if.then314 ], !dbg !4457
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %join_bb.3, metadata !4432, metadata !DIExpression()), !dbg !4457
  store %struct.basic_block_def* %else_bb.2, %struct.basic_block_def** %else_bb3, align 8, !dbg !4675
  %join_bb321 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 3, !dbg !4676
  store %struct.basic_block_def* %join_bb.3, %struct.basic_block_def** %join_bb321, align 8, !dbg !4677
  %call322 = call fastcc i32 @cond_exec_process_if_block(%struct.ce_if_block* %ce_info, i32 1) #7, !dbg !4678
  %tobool323 = icmp eq i32 %call322, 0, !dbg !4678
  br i1 %tobool323, label %if.end325, label %cleanup334, !dbg !4680

if.end325:                                        ; preds = %if.end319
  %num_multiple_test_blocks326 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !4681
  %83 = load i32, i32* %num_multiple_test_blocks326, align 8, !dbg !4681
  %tobool327 = icmp eq i32 %83, 0, !dbg !4683
  br i1 %tobool327, label %if.end333, label %if.then328, !dbg !4684

if.then328:                                       ; preds = %if.end325
  call void @cancel_changes(i32 0) #6, !dbg !4685
  %call329 = call fastcc i32 @cond_exec_process_if_block(%struct.ce_if_block* %ce_info, i32 0) #7, !dbg !4687
  %tobool330 = icmp eq i32 %call329, 0, !dbg !4687
  br i1 %tobool330, label %if.end333, label %cleanup334, !dbg !4689

if.end333:                                        ; preds = %if.then328, %if.end325
  br label %cleanup334, !dbg !4690

cleanup334.loopexit:                              ; preds = %for.body81
  br label %cleanup334, !dbg !4691

cleanup334.loopexit4:                             ; preds = %for.body
  br label %cleanup334, !dbg !4691

cleanup334:                                       ; preds = %cleanup334.loopexit4, %cleanup334.loopexit, %land.lhs.true108, %lor.lhs.false, %land.lhs.true99, %if.then125, %land.lhs.true180, %land.lhs.true302, %if.then314, %if.then328, %if.end319, %land.lhs.true173, %land.lhs.true169, %if.else160, %cond.end59, %land.lhs.true164, %cleanup, %if.end333
  %retval.1 = phi i32 [ 0, %cleanup ], [ 0, %if.end333 ], [ 0, %cond.end59 ], [ 0, %land.lhs.true108 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true99 ], [ 0, %if.then125 ], [ 0, %land.lhs.true180 ], [ 0, %land.lhs.true173 ], [ 0, %land.lhs.true169 ], [ 0, %land.lhs.true164 ], [ 0, %if.else160 ], [ 0, %land.lhs.true302 ], [ 0, %if.then314 ], [ 1, %if.end319 ], [ 1, %if.then328 ], [ 0, %cleanup334.loopexit ], [ 0, %cleanup334.loopexit4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !4691
  ret i32 %retval.1, !dbg !4691
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_cond_trap(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge, %struct.edge_def* %else_edge) unnamed_addr #4 !dbg !4692 {
entry:
  %cond_earliest = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !4696, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.edge_def* %then_edge, metadata !4697, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.edge_def* %else_edge, metadata !4698, metadata !DIExpression()), !dbg !4713
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge, i64 0, i32 1, !dbg !4714
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4714
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4699, metadata !DIExpression()), !dbg !4713
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4715
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !4715
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4700, metadata !DIExpression()), !dbg !4713
  %2 = bitcast %struct.rtx_def** %cond_earliest to i8*, !dbg !4716
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4716
  %call = tail call fastcc %struct.rtx_def* @block_has_only_trap(%struct.basic_block_def* %0) #7, !dbg !4717
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4703, metadata !DIExpression()), !dbg !4713
  %cmp = icmp eq %struct.rtx_def* %call, null, !dbg !4719
  br i1 %cmp, label %if.else, label %if.end6, !dbg !4720

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.rtx_def* @block_has_only_trap(%struct.basic_block_def* %1) #7, !dbg !4721
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4703, metadata !DIExpression()), !dbg !4713
  %cmp3 = icmp eq %struct.rtx_def* %call2, null, !dbg !4723
  br i1 %cmp3, label %cleanup, label %if.end6, !dbg !4724

if.end6:                                          ; preds = %if.else, %entry
  %other_bb.0 = phi %struct.basic_block_def* [ %1, %entry ], [ %0, %if.else ], !dbg !4725
  %trap_bb.0 = phi %struct.basic_block_def* [ %0, %entry ], [ %1, %if.else ], !dbg !4725
  %trap.0 = phi %struct.rtx_def* [ %call, %entry ], [ %call2, %if.else ], !dbg !4725
  call void @llvm.dbg.value(metadata %struct.rtx_def* %trap.0, metadata !4703, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %trap_bb.0, metadata !4702, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb.0, metadata !4701, metadata !DIExpression()), !dbg !4713
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4726
  %tobool = icmp eq %struct._IO_FILE* %3, null, !dbg !4726
  br i1 %tobool, label %if.end10, label %if.then7, !dbg !4728

if.then7:                                         ; preds = %if.end6
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 9, !dbg !4729
  %4 = load i32, i32* %index, align 8, !dbg !4729
  %index8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %trap_bb.0, i64 0, i32 9, !dbg !4731
  %5 = load i32, i32* %index8, align 8, !dbg !4731
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27, i64 0, i64 0), i32 %4, i32 %5) #6, !dbg !4732
  br label %if.end10, !dbg !4733

if.end10:                                         ; preds = %if.end6, %if.then7
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 7, !dbg !4734
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4734
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4734
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !4734
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4734
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4704, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata %struct.rtx_def** %cond_earliest, metadata !4706, metadata !DIExpression(DW_OP_deref)), !dbg !4713
  %call11 = call fastcc %struct.rtx_def* @noce_get_condition(%struct.rtx_def* %7, %struct.rtx_def** nonnull %cond_earliest, i8 zeroext 0) #7, !dbg !4735
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !4705, metadata !DIExpression()), !dbg !4713
  %tobool12 = icmp eq %struct.rtx_def* %call11, null, !dbg !4736
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !4738

if.end14:                                         ; preds = %if.end10
  %call15 = call i32 @onlyjump_p(%struct.rtx_def* %7) #6, !dbg !4739
  %tobool16 = icmp eq i32 %call15, 0, !dbg !4739
  br i1 %tobool16, label %cleanup, label %if.end18, !dbg !4741

if.end18:                                         ; preds = %if.end14
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4742
  %8 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4742
  %9 = load i32*, i32** %8, align 8, !dbg !4742
  %bf.load = load i32, i32* %9, align 8, !dbg !4742
  %bf.clear = and i32 %bf.load, 16711680, !dbg !4742
  %cmp19 = icmp eq i32 %bf.clear, 65536, !dbg !4744
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !4745
  br i1 %cmp19, label %cleanup, label %if.end21, !dbg !4745

if.end21:                                         ; preds = %if.end18
  call void @llvm.dbg.value(metadata i32 undef, metadata !4708, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4713
  %cmp24 = icmp eq %struct.basic_block_def* %0, %trap_bb.0, !dbg !4746
  br i1 %cmp24, label %if.then25, label %if.end21.if.end30_crit_edge, !dbg !4748

if.end21.if.end30_crit_edge:                      ; preds = %if.end21
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call11, i64 0, i32 0, !dbg !4749
  %bf.load22 = load i32, i32* %11, align 8, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %bf.load22, metadata !4708, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4713
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %bf.clear23, metadata !4708, metadata !DIExpression()), !dbg !4713
  br label %if.end30, !dbg !4748

if.then25:                                        ; preds = %if.end21
  %call26 = call i32 @reversed_comparison_code(%struct.rtx_def* nonnull %call11, %struct.rtx_def* %7) #6, !dbg !4750
  call void @llvm.dbg.value(metadata i32 %call26, metadata !4708, metadata !DIExpression()), !dbg !4713
  %cmp27 = icmp eq i32 %call26, 0, !dbg !4752
  br i1 %cmp27, label %cleanup, label %if.then25.if.end30_crit_edge, !dbg !4754

if.then25.if.end30_crit_edge:                     ; preds = %if.then25
  %rt_rtx34.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4713
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34.phi.trans.insert, align 8, !dbg !4755
  br label %if.end30, !dbg !4754

if.end30:                                         ; preds = %if.end21.if.end30_crit_edge, %if.then25.if.end30_crit_edge
  %12 = phi %struct.rtx_def* [ %10, %if.end21.if.end30_crit_edge ], [ %.pre, %if.then25.if.end30_crit_edge ], !dbg !4755
  %code.0 = phi i32 [ %bf.clear23, %if.end21.if.end30_crit_edge ], [ %call26, %if.then25.if.end30_crit_edge ], !dbg !4713
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4708, metadata !DIExpression()), !dbg !4713
  %call35 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %12) #6, !dbg !4756
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4757
  %rt_rtx39 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !4757
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !4757
  %call40 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14) #6, !dbg !4758
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trap.0, i64 0, i32 1, !dbg !4759
  %15 = getelementptr inbounds %union.u, %union.u* %u41, i64 1, i32 0, i32 0, i64 0, !dbg !4759
  %rt_rtx44 = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !4759
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !4759
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4759
  %rt_rtx48 = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !4759
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !4759
  %call49 = call %struct.rtx_def* @gen_cond_trap(i32 %code.0, %struct.rtx_def* %call35, %struct.rtx_def* %call40, %struct.rtx_def* %18) #6, !dbg !4760
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call49, metadata !4707, metadata !DIExpression()), !dbg !4713
  %cmp50 = icmp eq %struct.rtx_def* %call49, null, !dbg !4761
  br i1 %cmp50, label %cleanup, label %if.end52, !dbg !4763

if.end52:                                         ; preds = %if.end30
  %19 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest, align 8, !dbg !4764
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !4706, metadata !DIExpression()), !dbg !4713
  %arrayidx55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %trap.0, i64 0, i32 1, i32 0, i32 2, !dbg !4765
  %rt_int = bitcast i64* %arrayidx55 to i32*, !dbg !4765
  %20 = load i32, i32* %rt_int, align 8, !dbg !4765
  %call56 = call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call49, %struct.rtx_def* %19, i32 %20) #6, !dbg !4766
  %then_edge.else_edge = select i1 %cmp24, %struct.edge_def* %then_edge, %struct.edge_def* %else_edge, !dbg !4767
  call void @remove_edge(%struct.edge_def* %then_edge.else_edge) #6, !dbg !4768
  call void @df_set_bb_dirty(%struct.basic_block_def* %test_bb) #6, !dbg !4769
  call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !4770
  call void @df_set_bb_dirty(%struct.basic_block_def* %1) #6, !dbg !4771
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %trap_bb.0, i64 0, i32 0, !dbg !4772
  %21 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4772
  %tobool59 = icmp eq %struct.VEC_edge_gc* %21, null, !dbg !4772
  br i1 %tobool59, label %cond.end63, label %cond.true60, !dbg !4772

cond.true60:                                      ; preds = %if.end52
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %21, i64 0, i32 0, !dbg !4772
  br label %cond.end63, !dbg !4772

cond.end63:                                       ; preds = %if.end52, %cond.true60
  %cond64 = phi %struct.VEC_edge_base* [ %base, %cond.true60 ], [ null, %if.end52 ], !dbg !4772
  %call65 = call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond64) #7, !dbg !4772
  %cmp66 = icmp eq i32 %call65, 0, !dbg !4774
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !4775

if.then67:                                        ; preds = %cond.end63
  call void @delete_basic_block(%struct.basic_block_def* %trap_bb.0) #6, !dbg !4776
  %22 = load i32, i32* @num_true_changes, align 4, !dbg !4778
  %inc = add nsw i32 %22, 1, !dbg !4778
  store i32 %inc, i32* @num_true_changes, align 4, !dbg !4778
  br label %if.end68, !dbg !4779

if.end68:                                         ; preds = %if.then67, %cond.end63
  %call69 = call i32 @current_ir_type() #6, !dbg !4780
  %cmp70 = icmp eq i32 %call69, 2, !dbg !4781
  br i1 %cmp70, label %if.then71, label %if.else73, !dbg !4782

if.then71:                                        ; preds = %if.end68
  %call72 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %test_bb) #7, !dbg !4783
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call72, i64 0, i32 7, !dbg !4784
  %23 = load i32, i32* %flags, align 8, !dbg !4785
  %or = or i32 %23, 1, !dbg !4785
  store i32 %or, i32* %flags, align 8, !dbg !4785
  br label %if.end89, !dbg !4783

if.else73:                                        ; preds = %if.end68
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !4786
  %arrayidx76 = getelementptr inbounds %union.u, %union.u* %u74, i64 1, i32 0, i32 1, !dbg !4786
  %rt_rtx77 = bitcast %struct.object_block** %arrayidx76 to %struct.rtx_def**, !dbg !4786
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.rtx_def* %24, metadata !4709, metadata !DIExpression()), !dbg !4787
  %call78 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %24) #6, !dbg !4788
  %call79 = call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call78, %struct.rtx_def* %7) #6, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !4712, metadata !DIExpression()), !dbg !4787
  %arrayidx82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 2, !dbg !4790
  %rt_int83 = bitcast i64* %arrayidx82 to i32*, !dbg !4790
  %25 = load i32, i32* %rt_int83, align 8, !dbg !4791
  %add = add nsw i32 %25, 1, !dbg !4791
  store i32 %add, i32* %rt_int83, align 8, !dbg !4791
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call79, i64 0, i32 1, !dbg !4792
  %arrayidx86 = getelementptr inbounds %union.u, %union.u* %u84, i64 1, i32 0, i32 1, !dbg !4792
  %rt_rtx87 = bitcast %struct.object_block** %arrayidx86 to %struct.rtx_def**, !dbg !4792
  store %struct.rtx_def* %24, %struct.rtx_def** %rt_rtx87, align 8, !dbg !4793
  %call88 = call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %call79) #6, !dbg !4794
  br label %if.end89

if.end89:                                         ; preds = %if.else73, %if.then71
  %call90 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %7) #6, !dbg !4795
  %call91 = call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %other_bb.0) #6, !dbg !4796
  %tobool92 = icmp eq i8 %call91, 0, !dbg !4796
  br i1 %tobool92, label %if.end95, label %if.then93, !dbg !4798

if.then93:                                        ; preds = %if.end89
  call void @merge_blocks(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %other_bb.0) #6, !dbg !4799
  %26 = load i32, i32* @num_true_changes, align 4, !dbg !4801
  %inc94 = add nsw i32 %26, 1, !dbg !4801
  store i32 %inc94, i32* @num_true_changes, align 4, !dbg !4801
  br label %if.end95, !dbg !4802

if.end95:                                         ; preds = %if.end89, %if.then93
  %27 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !4803
  %inc96 = add nsw i32 %27, 1, !dbg !4803
  store i32 %inc96, i32* @num_updated_if_blocks, align 4, !dbg !4803
  br label %cleanup, !dbg !4804

cleanup:                                          ; preds = %if.end14, %if.end10, %if.else, %if.end30, %if.then25, %if.end18, %if.end95
  %retval.0 = phi i32 [ 1, %if.end95 ], [ 0, %if.else ], [ 0, %if.end10 ], [ 0, %if.end14 ], [ 0, %if.end18 ], [ 0, %if.then25 ], [ 0, %if.end30 ], !dbg !4713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4805
  ret i32 %retval.0, !dbg !4805
}

declare dso_local i32 @dom_info_state(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_if_case_1(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge, %struct.edge_def* %else_edge) unnamed_addr #4 !dbg !4806 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !4808, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata %struct.edge_def* %then_edge, metadata !4809, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata %struct.edge_def* %else_edge, metadata !4810, metadata !DIExpression()), !dbg !4819
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge, i64 0, i32 1, !dbg !4820
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4820
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4811, metadata !DIExpression()), !dbg !4819
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4821
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !4821
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4812, metadata !DIExpression()), !dbg !4819
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !4822
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4822
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4822
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !4822
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4822
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !4822
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !4824

land.lhs.true:                                    ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %3, i32 29, %struct.rtx_def* null) #6, !dbg !4825
  %tobool5 = icmp eq %struct.rtx_def* %call, null, !dbg !4825
  br i1 %tobool5, label %lor.lhs.false, label %cleanup, !dbg !4826

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %il6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 7, !dbg !4827
  %rtl7 = bitcast %union.basic_block_il_dependent* %il6 to %struct.rtl_bb_info**, !dbg !4827
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl7, align 8, !dbg !4827
  %end_8 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !4827
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_8, align 8, !dbg !4827
  %tobool9 = icmp eq %struct.rtx_def* %5, null, !dbg !4827
  br i1 %tobool9, label %lor.lhs.false16, label %land.lhs.true10, !dbg !4828

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %call14 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %5, i32 29, %struct.rtx_def* null) #6, !dbg !4829
  %tobool15 = icmp eq %struct.rtx_def* %call14, null, !dbg !4829
  br i1 %tobool15, label %lor.lhs.false16, label %cleanup, !dbg !4830

lor.lhs.false16:                                  ; preds = %land.lhs.true10, %lor.lhs.false
  %il17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !4831
  %rtl18 = bitcast %union.basic_block_il_dependent* %il17 to %struct.rtl_bb_info**, !dbg !4831
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl18, align 8, !dbg !4831
  %end_19 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !4831
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_19, align 8, !dbg !4831
  %tobool20 = icmp eq %struct.rtx_def* %7, null, !dbg !4831
  br i1 %tobool20, label %if.end, label %land.lhs.true21, !dbg !4832

land.lhs.true21:                                  ; preds = %lor.lhs.false16
  %call25 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %7, i32 29, %struct.rtx_def* null) #6, !dbg !4833
  %tobool26 = icmp eq %struct.rtx_def* %call25, null, !dbg !4833
  br i1 %tobool26, label %if.end, label %cleanup, !dbg !4834

if.end:                                           ; preds = %land.lhs.true21, %lor.lhs.false16
  %call27 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %0) #7, !dbg !4835
  %tobool28 = icmp eq i8 %call27, 0, !dbg !4835
  br i1 %tobool28, label %cleanup, label %if.end30, !dbg !4837

if.end30:                                         ; preds = %if.end
  %call31 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0) #7, !dbg !4838
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31, i64 0, i32 7, !dbg !4840
  %8 = load i32, i32* %flags, align 8, !dbg !4840
  %and = and i32 %8, 15, !dbg !4841
  %tobool32 = icmp eq i32 %and, 0, !dbg !4841
  br i1 %tobool32, label %if.end34, label %cleanup, !dbg !4842

if.end34:                                         ; preds = %if.end30
  %call35 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %0) #7, !dbg !4843
  %tobool36 = icmp eq i8 %call35, 0, !dbg !4843
  br i1 %tobool36, label %cleanup, label %if.end38, !dbg !4845

if.end38:                                         ; preds = %if.end34
  %call39 = tail call zeroext i8 @forwarder_block_p(%struct.basic_block_def* %0) #6, !dbg !4846
  %tobool40 = icmp eq i8 %call39, 0, !dbg !4846
  br i1 %tobool40, label %if.end42, label %cleanup, !dbg !4848

if.end42:                                         ; preds = %if.end38
  %9 = load i32, i32* @num_possible_if_blocks, align 4, !dbg !4849
  %inc = add nsw i32 %9, 1, !dbg !4849
  store i32 %inc, i32* @num_possible_if_blocks, align 4, !dbg !4849
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4850
  %tobool43 = icmp eq %struct._IO_FILE* %10, null, !dbg !4850
  br i1 %tobool43, label %if.end47, label %if.then44, !dbg !4852

if.then44:                                        ; preds = %if.end42
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 9, !dbg !4853
  %11 = load i32, i32* %index, align 8, !dbg !4853
  %index45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4854
  %12 = load i32, i32* %index45, align 8, !dbg !4854
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0), i32 %11, i32 %12) #6, !dbg !4855
  br label %if.end47, !dbg !4855

if.end47:                                         ; preds = %if.end42, %if.then44
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge, i64 0, i32 0, !dbg !4856
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4856
  %call48 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %13) #6, !dbg !4856
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4856
  br i1 %tobool49, label %cond.end54, label %cond.false, !dbg !4856

cond.false:                                       ; preds = %if.end47
  %call50 = tail call zeroext i8 @predictable_edge_p(%struct.edge_def* %then_edge) #6, !dbg !4856
  %tobool51 = icmp eq i8 %call50, 0, !dbg !4856
  %14 = load i32, i32* @ix86_branch_cost, align 4, !dbg !4856
  %.op = shl i32 %14, 2, !dbg !4856
  %phitmp = select i1 %tobool51, i32 %.op, i32 0, !dbg !4856
  br label %cond.end54, !dbg !4856

cond.end54:                                       ; preds = %if.end47, %cond.false
  %cond55 = phi i32 [ 8, %if.end47 ], [ %phitmp, %cond.false ]
  %call56 = tail call fastcc zeroext i8 @cheap_bb_rtx_cost_p(%struct.basic_block_def* %0, i32 %cond55) #7, !dbg !4858
  %tobool57 = icmp eq i8 %call56, 0, !dbg !4858
  br i1 %tobool57, label %cleanup, label %if.end59, !dbg !4859

if.end59:                                         ; preds = %cond.end54
  %call60 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %0) #7, !dbg !4860
  %call61 = tail call fastcc i32 @dead_or_predicable(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %0, %struct.basic_block_def* %1, %struct.basic_block_def* %call60, i32 1) #7, !dbg !4862
  %tobool62 = icmp eq i32 %call61, 0, !dbg !4862
  br i1 %tobool62, label %cleanup, label %if.end64, !dbg !4863

if.end64:                                         ; preds = %if.end59
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 6, !dbg !4864
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4864
  %cmp = icmp eq %struct.basic_block_def* %15, %1, !dbg !4866
  br i1 %cmp, label %land.lhs.true66, label %if.else, !dbg !4867

land.lhs.true66:                                  ; preds = %if.end64
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 5, !dbg !4868
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !4868
  %cmp67 = icmp eq %struct.basic_block_def* %16, %test_bb, !dbg !4869
  br i1 %cmp67, label %land.lhs.true69, label %if.else, !dbg !4870

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4871
  %cfg = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !4871
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4871
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 1, !dbg !4871
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4871
  %cmp70 = icmp eq %struct.basic_block_def* %1, %19, !dbg !4872
  br i1 %cmp70, label %if.else, label %if.then72, !dbg !4873

if.then72:                                        ; preds = %land.lhs.true69
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 1, !dbg !4874
  %20 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4874
  %tobool73 = icmp eq %struct.VEC_edge_gc* %20, null, !dbg !4874
  br i1 %tobool73, label %cond.end77, label %cond.true74, !dbg !4874

cond.true74:                                      ; preds = %if.then72
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %20, i64 0, i32 0, !dbg !4874
  br label %cond.end77, !dbg !4874

cond.end77:                                       ; preds = %if.then72, %cond.true74
  %cond78 = phi %struct.VEC_edge_base* [ %base, %cond.true74 ], [ null, %if.then72 ], !dbg !4874
  %call79 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond78, i32 0) #7, !dbg !4874
  %flags80 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call79, i64 0, i32 7, !dbg !4874
  %21 = load i32, i32* %flags80, align 8, !dbg !4874
  %and81 = and i32 %21, 1, !dbg !4874
  %tobool82 = icmp eq i32 %and81, 0, !dbg !4874
  %22 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4874
  %tobool85 = icmp ne %struct.VEC_edge_gc* %22, null, !dbg !4874
  br i1 %tobool82, label %cond.false93, label %cond.true83, !dbg !4874

cond.true83:                                      ; preds = %cond.end77
  br i1 %tobool85, label %cond.true86, label %cond.end90, !dbg !4874

cond.true86:                                      ; preds = %cond.true83
  %base88 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i64 0, i32 0, !dbg !4874
  br label %cond.end90, !dbg !4874

cond.end90:                                       ; preds = %cond.true83, %cond.true86
  %cond91 = phi %struct.VEC_edge_base* [ %base88, %cond.true86 ], [ null, %cond.true83 ], !dbg !4874
  %call92 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond91, i32 0) #7, !dbg !4874
  br label %cond.end103, !dbg !4874

cond.false93:                                     ; preds = %cond.end77
  br i1 %tobool85, label %cond.true96, label %cond.end100, !dbg !4874

cond.true96:                                      ; preds = %cond.false93
  %base98 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i64 0, i32 0, !dbg !4874
  br label %cond.end100, !dbg !4874

cond.end100:                                      ; preds = %cond.false93, %cond.true96
  %cond101 = phi %struct.VEC_edge_base* [ %base98, %cond.true96 ], [ null, %cond.false93 ], !dbg !4874
  %call102 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond101, i32 1) #7, !dbg !4874
  br label %cond.end103, !dbg !4874

cond.end103:                                      ; preds = %cond.end100, %cond.end90
  %cond104 = phi %struct.edge_def* [ %call92, %cond.end90 ], [ %call102, %cond.end100 ], !dbg !4874
  tail call void @redirect_edge_succ(%struct.edge_def* %cond104, %struct.basic_block_def* %1) #6, !dbg !4876
  call void @llvm.dbg.value(metadata %struct.basic_block_def* null, metadata !4813, metadata !DIExpression()), !dbg !4819
  br label %if.end140, !dbg !4877

if.else:                                          ; preds = %land.lhs.true69, %land.lhs.true66, %if.end64
  %succs105 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 1, !dbg !4878
  %23 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs105, align 8, !dbg !4878
  %tobool106 = icmp eq %struct.VEC_edge_gc* %23, null, !dbg !4878
  br i1 %tobool106, label %cond.end111, label %cond.true107, !dbg !4878

cond.true107:                                     ; preds = %if.else
  %base109 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %23, i64 0, i32 0, !dbg !4878
  br label %cond.end111, !dbg !4878

cond.end111:                                      ; preds = %if.else, %cond.true107
  %cond112 = phi %struct.VEC_edge_base* [ %base109, %cond.true107 ], [ null, %if.else ], !dbg !4878
  %call113 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond112, i32 0) #7, !dbg !4878
  %flags114 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call113, i64 0, i32 7, !dbg !4878
  %24 = load i32, i32* %flags114, align 8, !dbg !4878
  %and115 = and i32 %24, 1, !dbg !4878
  %tobool116 = icmp eq i32 %and115, 0, !dbg !4878
  %25 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs105, align 8, !dbg !4878
  %tobool119 = icmp ne %struct.VEC_edge_gc* %25, null, !dbg !4878
  br i1 %tobool116, label %cond.false127, label %cond.true117, !dbg !4878

cond.true117:                                     ; preds = %cond.end111
  br i1 %tobool119, label %cond.true120, label %cond.end124, !dbg !4878

cond.true120:                                     ; preds = %cond.true117
  %base122 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !4878
  br label %cond.end124, !dbg !4878

cond.end124:                                      ; preds = %cond.true117, %cond.true120
  %cond125 = phi %struct.VEC_edge_base* [ %base122, %cond.true120 ], [ null, %cond.true117 ], !dbg !4878
  %call126 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond125, i32 0) #7, !dbg !4878
  br label %cond.end137, !dbg !4878

cond.false127:                                    ; preds = %cond.end111
  br i1 %tobool119, label %cond.true130, label %cond.end134, !dbg !4878

cond.true130:                                     ; preds = %cond.false127
  %base132 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %25, i64 0, i32 0, !dbg !4878
  br label %cond.end134, !dbg !4878

cond.end134:                                      ; preds = %cond.false127, %cond.true130
  %cond135 = phi %struct.VEC_edge_base* [ %base132, %cond.true130 ], [ null, %cond.false127 ], !dbg !4878
  %call136 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond135, i32 1) #7, !dbg !4878
  br label %cond.end137, !dbg !4878

cond.end137:                                      ; preds = %cond.end134, %cond.end124
  %cond138 = phi %struct.edge_def* [ %call126, %cond.end124 ], [ %call136, %cond.end134 ], !dbg !4878
  %call139 = tail call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %cond138, %struct.basic_block_def* %1) #6, !dbg !4879
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call139, metadata !4813, metadata !DIExpression()), !dbg !4819
  br label %if.end140

if.end140:                                        ; preds = %cond.end137, %cond.end103
  %new_bb.0 = phi %struct.basic_block_def* [ null, %cond.end103 ], [ %call139, %cond.end137 ], !dbg !4880
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !4813, metadata !DIExpression()), !dbg !4819
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %test_bb) #6, !dbg !4881
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %1) #6, !dbg !4882
  %index141 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4883
  %26 = load i32, i32* %index141, align 8, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %26, metadata !4814, metadata !DIExpression()), !dbg !4819
  tail call void @delete_basic_block(%struct.basic_block_def* %0) #6, !dbg !4884
  %tobool142 = icmp eq %struct.basic_block_def* %new_bb.0, null, !dbg !4885
  br i1 %tobool142, label %if.end149, label %if.then143, !dbg !4886

if.then143:                                       ; preds = %if.end140
  tail call void @df_bb_replace(i32 %26, %struct.basic_block_def* nonnull %new_bb.0) #6, !dbg !4887
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb.0, metadata !4815, metadata !DIExpression()), !dbg !4888
  %flags144 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %new_bb.0, i64 0, i32 13, !dbg !4889
  %27 = load i32, i32* %flags144, align 8, !dbg !4889
  %and145 = and i32 %27, -97, !dbg !4889
  %flags146 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 13, !dbg !4889
  %28 = load i32, i32* %flags146, align 8, !dbg !4889
  %and147 = and i32 %28, 96, !dbg !4889
  %or = or i32 %and145, %and147, !dbg !4889
  store i32 %or, i32* %flags144, align 8, !dbg !4889
  br label %if.end149, !dbg !4890

if.end149:                                        ; preds = %if.end140, %if.then143
  %29 = load i32, i32* @num_true_changes, align 4, !dbg !4891
  %inc150 = add nsw i32 %29, 1, !dbg !4891
  store i32 %inc150, i32* @num_true_changes, align 4, !dbg !4891
  %30 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !4892
  %inc151 = add nsw i32 %30, 1, !dbg !4892
  store i32 %inc151, i32* @num_updated_if_blocks, align 4, !dbg !4892
  br label %cleanup, !dbg !4893

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true10, %land.lhs.true21, %if.end59, %cond.end54, %if.end38, %if.end34, %if.end30, %if.end, %if.end149
  %retval.0 = phi i32 [ 1, %if.end149 ], [ 0, %land.lhs.true21 ], [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %if.end30 ], [ 0, %if.end34 ], [ 0, %if.end38 ], [ 0, %cond.end54 ], [ 0, %if.end59 ], !dbg !4819
  ret i32 %retval.0, !dbg !4894
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_if_case_2(%struct.basic_block_def* %test_bb, %struct.edge_def* %then_edge, %struct.edge_def* %else_edge) unnamed_addr #4 !dbg !4895 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !4897, metadata !DIExpression()), !dbg !4904
  call void @llvm.dbg.value(metadata %struct.edge_def* %then_edge, metadata !4898, metadata !DIExpression()), !dbg !4904
  call void @llvm.dbg.value(metadata %struct.edge_def* %else_edge, metadata !4899, metadata !DIExpression()), !dbg !4904
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %then_edge, i64 0, i32 1, !dbg !4905
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4905
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4900, metadata !DIExpression()), !dbg !4904
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 1, !dbg !4906
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !4906
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !4901, metadata !DIExpression()), !dbg !4904
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !4907
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4907
  %2 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4907
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %2, i64 0, i32 1, !dbg !4907
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4907
  %tobool = icmp eq %struct.rtx_def* %3, null, !dbg !4907
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !4909

land.lhs.true:                                    ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %3, i32 29, %struct.rtx_def* null) #6, !dbg !4910
  %tobool5 = icmp eq %struct.rtx_def* %call, null, !dbg !4910
  br i1 %tobool5, label %lor.lhs.false, label %cleanup, !dbg !4911

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %il6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 7, !dbg !4912
  %rtl7 = bitcast %union.basic_block_il_dependent* %il6 to %struct.rtl_bb_info**, !dbg !4912
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl7, align 8, !dbg !4912
  %end_8 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !4912
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_8, align 8, !dbg !4912
  %tobool9 = icmp eq %struct.rtx_def* %5, null, !dbg !4912
  br i1 %tobool9, label %lor.lhs.false16, label %land.lhs.true10, !dbg !4913

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %call14 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %5, i32 29, %struct.rtx_def* null) #6, !dbg !4914
  %tobool15 = icmp eq %struct.rtx_def* %call14, null, !dbg !4914
  br i1 %tobool15, label %lor.lhs.false16, label %cleanup, !dbg !4915

lor.lhs.false16:                                  ; preds = %land.lhs.true10, %lor.lhs.false
  %il17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 7, !dbg !4916
  %rtl18 = bitcast %union.basic_block_il_dependent* %il17 to %struct.rtl_bb_info**, !dbg !4916
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl18, align 8, !dbg !4916
  %end_19 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !4916
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_19, align 8, !dbg !4916
  %tobool20 = icmp eq %struct.rtx_def* %7, null, !dbg !4916
  br i1 %tobool20, label %if.end, label %land.lhs.true21, !dbg !4917

land.lhs.true21:                                  ; preds = %lor.lhs.false16
  %call25 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %7, i32 29, %struct.rtx_def* null) #6, !dbg !4918
  %tobool26 = icmp eq %struct.rtx_def* %call25, null, !dbg !4918
  br i1 %tobool26, label %if.end, label %cleanup, !dbg !4919

if.end:                                           ; preds = %land.lhs.true21, %lor.lhs.false16
  %call27 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %1) #7, !dbg !4920
  %tobool28 = icmp eq i8 %call27, 0, !dbg !4920
  br i1 %tobool28, label %cleanup, label %if.else, !dbg !4922

if.else:                                          ; preds = %if.end
  %call30 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %1) #7, !dbg !4923
  call void @llvm.dbg.value(metadata %struct.edge_def* %call30, metadata !4902, metadata !DIExpression()), !dbg !4904
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call30, i64 0, i32 7, !dbg !4924
  %8 = load i32, i32* %flags, align 8, !dbg !4924
  %and = and i32 %8, 14, !dbg !4926
  %tobool32 = icmp eq i32 %and, 0, !dbg !4926
  br i1 %tobool32, label %if.end34, label %cleanup, !dbg !4927

if.end34:                                         ; preds = %if.else
  %call35 = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %1) #7, !dbg !4928
  %tobool36 = icmp eq i8 %call35, 0, !dbg !4928
  br i1 %tobool36, label %cleanup, label %if.end38, !dbg !4930

if.end38:                                         ; preds = %if.end34
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4931
  %9 = load i32, i32* %index, align 8, !dbg !4931
  %cmp = icmp slt i32 %9, 2, !dbg !4933
  br i1 %cmp, label %cleanup, label %if.end40, !dbg !4934

if.end40:                                         ; preds = %if.end38
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl7, align 8, !dbg !4935
  %end_43 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !4935
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_43, align 8, !dbg !4935
  %call44 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %11, i32 13, %struct.rtx_def* null) #6, !dbg !4936
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call44, metadata !4903, metadata !DIExpression()), !dbg !4904
  %tobool45 = icmp eq %struct.rtx_def* %call44, null, !dbg !4937
  br i1 %tobool45, label %if.else51, label %land.lhs.true46, !dbg !4939

land.lhs.true46:                                  ; preds = %if.end40
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call44, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4940
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4940
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4940
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, !dbg !4940
  %arrayidx48 = bitcast %union.u* %u47 to i64*, !dbg !4940
  %13 = load i64, i64* %arrayidx48, align 8, !dbg !4940
  %cmp49 = icmp sgt i64 %13, 4999, !dbg !4941
  br i1 %cmp49, label %if.end62, label %if.else51, !dbg !4942

if.else51:                                        ; preds = %if.end40, %land.lhs.true46
  %dest52 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call30, i64 0, i32 1, !dbg !4943
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest52, align 8, !dbg !4943
  %index53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i64 0, i32 9, !dbg !4945
  %15 = load i32, i32* %index53, align 8, !dbg !4945
  %cmp54 = icmp slt i32 %15, 2, !dbg !4946
  br i1 %cmp54, label %if.end62, label %lor.lhs.false55, !dbg !4947

lor.lhs.false55:                                  ; preds = %if.else51
  %call57 = tail call zeroext i8 @dominated_by_p(i32 2, %struct.basic_block_def* %0, %struct.basic_block_def* %14) #6, !dbg !4948
  %tobool58 = icmp eq i8 %call57, 0, !dbg !4948
  br i1 %tobool58, label %cleanup, label %if.end62, !dbg !4949

if.end62:                                         ; preds = %lor.lhs.false55, %if.else51, %land.lhs.true46
  %16 = load i32, i32* @num_possible_if_blocks, align 4, !dbg !4950
  %inc = add nsw i32 %16, 1, !dbg !4950
  store i32 %inc, i32* @num_possible_if_blocks, align 4, !dbg !4950
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4951
  %tobool63 = icmp eq %struct._IO_FILE* %17, null, !dbg !4951
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !4953

if.then64:                                        ; preds = %if.end62
  %index65 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 9, !dbg !4954
  %18 = load i32, i32* %index65, align 8, !dbg !4954
  %index66 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 9, !dbg !4955
  %19 = load i32, i32* %index66, align 8, !dbg !4955
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0), i32 %18, i32 %19) #6, !dbg !4956
  br label %if.end68, !dbg !4956

if.end68:                                         ; preds = %if.end62, %if.then64
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %else_edge, i64 0, i32 0, !dbg !4957
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4957
  %call69 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %20) #6, !dbg !4957
  %tobool70 = icmp eq i8 %call69, 0, !dbg !4957
  br i1 %tobool70, label %cond.end76, label %cond.false, !dbg !4957

cond.false:                                       ; preds = %if.end68
  %call71 = tail call zeroext i8 @predictable_edge_p(%struct.edge_def* %else_edge) #6, !dbg !4957
  %tobool73 = icmp eq i8 %call71, 0, !dbg !4957
  %21 = load i32, i32* @ix86_branch_cost, align 4, !dbg !4957
  %.op = shl i32 %21, 2, !dbg !4957
  %phitmp = select i1 %tobool73, i32 %.op, i32 0, !dbg !4957
  br label %cond.end76, !dbg !4957

cond.end76:                                       ; preds = %if.end68, %cond.false
  %cond77 = phi i32 [ 8, %if.end68 ], [ %phitmp, %cond.false ]
  %call78 = tail call fastcc zeroext i8 @cheap_bb_rtx_cost_p(%struct.basic_block_def* %1, i32 %cond77) #7, !dbg !4959
  %tobool79 = icmp eq i8 %call78, 0, !dbg !4959
  br i1 %tobool79, label %cleanup, label %if.end81, !dbg !4960

if.end81:                                         ; preds = %cond.end76
  %dest82 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call30, i64 0, i32 1, !dbg !4961
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %dest82, align 8, !dbg !4961
  %call83 = tail call fastcc i32 @dead_or_predicable(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %1, %struct.basic_block_def* %0, %struct.basic_block_def* %22, i32 0) #7, !dbg !4963
  %tobool84 = icmp eq i32 %call83, 0, !dbg !4963
  br i1 %tobool84, label %cleanup, label %if.end86, !dbg !4964

if.end86:                                         ; preds = %if.end81
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %test_bb) #6, !dbg !4965
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !4966
  tail call void @delete_basic_block(%struct.basic_block_def* %1) #6, !dbg !4967
  %23 = load i32, i32* @num_true_changes, align 4, !dbg !4968
  %inc87 = add nsw i32 %23, 1, !dbg !4968
  store i32 %inc87, i32* @num_true_changes, align 4, !dbg !4968
  %24 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !4969
  %inc88 = add nsw i32 %24, 1, !dbg !4969
  store i32 %inc88, i32* @num_updated_if_blocks, align 4, !dbg !4969
  br label %cleanup, !dbg !4970

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true10, %land.lhs.true21, %if.end81, %cond.end76, %lor.lhs.false55, %if.end34, %if.else, %if.end, %if.end38, %if.end86
  %retval.0 = phi i32 [ 1, %if.end86 ], [ 0, %land.lhs.true21 ], [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %if.else ], [ 0, %if.end34 ], [ 0, %if.end38 ], [ 0, %lor.lhs.false55 ], [ 0, %cond.end76 ], [ 0, %if.end81 ], !dbg !4904
  ret i32 %retval.0, !dbg !4971
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4979, metadata !DIExpression()), !dbg !4980
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4981
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4981
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4981
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4981

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4981
  br label %cond.end, !dbg !4981

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4981
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4981
  %cmp = icmp eq i32 %call, 1, !dbg !4982
  %conv2 = zext i1 %cmp to i8, !dbg !4981
  ret i8 %conv2, !dbg !4983
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4984 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4986, metadata !DIExpression()), !dbg !4987
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4988
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4988
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4988
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4988

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4988
  br label %cond.end, !dbg !4988

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4988
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4988
  %cmp = icmp eq i32 %call, 1, !dbg !4989
  %conv2 = zext i1 %cmp to i8, !dbg !4988
  ret i8 %conv2, !dbg !4990
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4991 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4995, metadata !DIExpression()), !dbg !4996
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !4997
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !4998
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4998
  ret %struct.basic_block_def* %0, !dbg !4999
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5000 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5004, metadata !DIExpression()), !dbg !5005
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !5006
  %tobool = icmp eq i8 %call, 0, !dbg !5006
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5006

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5006
  br label %cond.end, !dbg !5006

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5007
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5007
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5007
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5007

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5007
  br label %cond.end5, !dbg !5007

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5007
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !5007
  ret %struct.edge_def* %call7, !dbg !5008
}

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @noce_get_condition(%struct.rtx_def* %jump, %struct.rtx_def** %earliest, i8 zeroext %then_else_reversed) unnamed_addr #4 !dbg !5009 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !5013, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !5014, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8 %then_else_reversed, metadata !5015, metadata !DIExpression()), !dbg !5020
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %jump) #6, !dbg !5021
  %tobool = icmp eq i32 %call, 0, !dbg !5021
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5023

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %jump) #6, !dbg !5024
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5017, metadata !DIExpression()), !dbg !5020
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5025
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !5025
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5025
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5025
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !5025
  %4 = load i32*, i32** %3, align 8, !dbg !5025
  %bf.load = load i32, i32* %4, align 8, !dbg !5025
  %bf.clear = and i32 %bf.load, 65535, !dbg !5025
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !5026
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5027

land.rhs:                                         ; preds = %if.end
  %arrayidx16 = getelementptr inbounds i32, i32* %4, i64 2, !dbg !5028
  %rt_rtx17 = bitcast i32* %arrayidx16 to %struct.rtx_def**, !dbg !5028
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !5028
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, !dbg !5029
  %arrayidx20 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 1, !dbg !5029
  %rt_rtx21 = bitcast %struct.object_block** %arrayidx20 to %struct.rtx_def**, !dbg !5029
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5029
  %cmp22 = icmp eq %struct.rtx_def* %5, %6, !dbg !5030
  %phitmp = zext i1 %cmp22 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %7 = phi i8 [ 0, %if.end ], [ %phitmp, %land.rhs ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !5019, metadata !DIExpression()), !dbg !5020
  %tobool23 = icmp eq i8 %then_else_reversed, 0, !dbg !5031
  br i1 %tobool23, label %if.end27, label %if.then24, !dbg !5033

if.then24:                                        ; preds = %land.end
  %8 = xor i8 %7, 1, !dbg !5034
  call void @llvm.dbg.value(metadata i8 %8, metadata !5019, metadata !DIExpression()), !dbg !5020
  br label %if.end27, !dbg !5035

if.end27:                                         ; preds = %land.end, %if.then24
  %reverse.0 = phi i8 [ %8, %if.then24 ], [ %7, %land.end ], !dbg !5020
  call void @llvm.dbg.value(metadata i8 %reverse.0, metadata !5019, metadata !DIExpression()), !dbg !5020
  %arrayidx34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5036
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !5036
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !5036
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5016, metadata !DIExpression()), !dbg !5020
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5037
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !5037
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !5037
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5018, metadata !DIExpression()), !dbg !5020
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !5038
  %bf.load40 = load i32, i32* %11, align 8, !dbg !5038
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !5038
  %cmp42 = icmp eq i32 %bf.clear41, 37, !dbg !5038
  br i1 %cmp42, label %land.lhs.true, label %if.end65, !dbg !5040

land.lhs.true:                                    ; preds = %if.end27
  %bf.lshr = lshr i32 %bf.load40, 16, !dbg !5041
  %bf.clear45 = and i32 %bf.lshr, 255, !dbg !5041
  %idxprom = zext i32 %bf.clear45 to i64, !dbg !5041
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5041
  %12 = load i8, i8* %arrayidx46, align 1, !dbg !5041
  %cmp48 = icmp eq i8 %12, 2, !dbg !5042
  br i1 %cmp48, label %if.then50, label %if.end65, !dbg !5043

if.then50:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* %jump, %struct.rtx_def** %earliest, align 8, !dbg !5044
  %tobool51 = icmp eq i8 %reverse.0, 0, !dbg !5046
  br i1 %tobool51, label %cleanup, label %if.then52, !dbg !5048

if.then52:                                        ; preds = %if.then50
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 0, !dbg !5049
  %bf.load53 = load i32, i32* %13, align 8, !dbg !5049
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !5049
  %call55 = tail call i32 @reverse_condition(i32 %bf.clear54) #6, !dbg !5049
  %bf.load56 = load i32, i32* %13, align 8, !dbg !5049
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !5049
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !5049
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5049
  %rt_rtx62 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !5049
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !5049
  %call63 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call55, i32 %bf.clear58, %struct.rtx_def* %10, %struct.rtx_def* %15) #6, !dbg !5049
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call63, metadata !5016, metadata !DIExpression()), !dbg !5020
  br label %cleanup, !dbg !5050

if.end65:                                         ; preds = %land.lhs.true, %if.end27
  %conv66 = zext i8 %reverse.0 to i32, !dbg !5051
  %call67 = tail call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %jump, %struct.rtx_def* %9, i32 %conv66, %struct.rtx_def** %earliest, %struct.rtx_def* null, i32 0, i32 1) #6, !dbg !5052
  br label %cleanup, !dbg !5053

cleanup:                                          ; preds = %if.then50, %entry, %if.then52, %if.end65
  %retval.0 = phi %struct.rtx_def* [ %call67, %if.end65 ], [ null, %entry ], [ %call63, %if.then52 ], [ %9, %if.then50 ], !dbg !5020
  ret %struct.rtx_def* %retval.0, !dbg !5054
}

declare dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @predictable_edge_p(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_process_if_block(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5055 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5060, metadata !DIExpression()), !dbg !5085
  %test_bb1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 0, !dbg !5086
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb1, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5061, metadata !DIExpression()), !dbg !5085
  %then_bb2 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 1, !dbg !5087
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %then_bb2, align 8, !dbg !5087
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5062, metadata !DIExpression()), !dbg !5085
  %else_bb3 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 2, !dbg !5088
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %else_bb3, align 8, !dbg !5088
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5063, metadata !DIExpression()), !dbg !5085
  %join_bb4 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 3, !dbg !5089
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %join_bb4, align 8, !dbg !5089
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !5064, metadata !DIExpression()), !dbg !5085
  %jump5 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5090
  %4 = load %struct.rtx_def*, %struct.rtx_def** %jump5, align 8, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5065, metadata !DIExpression()), !dbg !5085
  %cond6 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5091
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cond6, align 8, !dbg !5091
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5066, metadata !DIExpression()), !dbg !5085
  %call = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %1) #7, !dbg !5092
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5067, metadata !DIExpression()), !dbg !5085
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !5093
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5095

lor.lhs.false:                                    ; preds = %entry
  %call7 = tail call fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* %1, i32 0) #7, !dbg !5096
  %cmp = icmp eq %struct.rtx_def* %call, %call7, !dbg !5097
  br i1 %cmp, label %lor.lhs.false8, label %cleanup, !dbg !5098

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5099
  %bf.load = load i32, i32* %6, align 8, !dbg !5099
  %bf.clear = and i32 %bf.load, 65535, !dbg !5099
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !5099
  br i1 %cmp9, label %cond.true, label %lor.lhs.false10, !dbg !5099

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %cmp13 = icmp eq i32 %bf.clear, 7, !dbg !5099
  br i1 %cmp13, label %cond.true, label %lor.lhs.false14, !dbg !5099

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %cmp17 = icmp eq i32 %bf.clear, 9, !dbg !5099
  br i1 %cmp17, label %cond.true, label %lor.lhs.false18, !dbg !5099

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %cmp21 = icmp eq i32 %bf.clear, 10, !dbg !5099
  br i1 %cmp21, label %cond.true, label %cond.end37, !dbg !5099

cond.true:                                        ; preds = %lor.lhs.false18, %lor.lhs.false14, %lor.lhs.false10, %lor.lhs.false8
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, !dbg !5099
  %7 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5099
  %8 = bitcast %union.rtunion_def* %7 to i32**, !dbg !5099
  %9 = load i32*, i32** %8, align 8, !dbg !5099
  %bf.load22 = load i32, i32* %9, align 8, !dbg !5099
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5099
  %cmp24 = icmp eq i32 %bf.clear23, 23, !dbg !5099
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !5099
  br i1 %cmp24, label %cond.end37, label %cond.false, !dbg !5099

cond.false:                                       ; preds = %cond.true
  %call34 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %call, %struct.rtx_def* %10) #6, !dbg !5099
  br label %cond.end37, !dbg !5099

cond.end37:                                       ; preds = %lor.lhs.false18, %cond.false, %cond.true
  %cond38 = phi %struct.rtx_def* [ %call34, %cond.false ], [ %10, %cond.true ], [ null, %lor.lhs.false18 ], !dbg !5099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond38, metadata !5069, metadata !DIExpression()), !dbg !5085
  %cmp39 = icmp eq %struct.rtx_def* %cond38, null, !dbg !5100
  br i1 %cmp39, label %cleanup, label %if.end, !dbg !5101

if.end:                                           ; preds = %cond.end37
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond38, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5102
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !5102
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5102
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5072, metadata !DIExpression()), !dbg !5085
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond38, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5103
  %rt_rtx47 = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !5103
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !5103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !5073, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5070, metadata !DIExpression()), !dbg !5085
  %tobool48 = icmp eq %struct.basic_block_def* %2, null, !dbg !5104
  br i1 %tobool48, label %if.else, label %if.then49, !dbg !5106

if.then49:                                        ; preds = %if.end
  %call50 = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* nonnull %2) #7, !dbg !5107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !5068, metadata !DIExpression()), !dbg !5085
  %tobool51 = icmp eq %struct.rtx_def* %call50, null, !dbg !5109
  br i1 %tobool51, label %cleanup, label %lor.lhs.false52, !dbg !5111

lor.lhs.false52:                                  ; preds = %if.then49
  %call53 = tail call fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* nonnull %2, i32 0) #7, !dbg !5112
  %cmp54 = icmp eq %struct.rtx_def* %call50, %call53, !dbg !5113
  br i1 %cmp54, label %lor.lhs.false55, label %cleanup, !dbg !5114

lor.lhs.false55:                                  ; preds = %lor.lhs.false52
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call50, i64 0, i32 0, !dbg !5115
  %bf.load56 = load i32, i32* %14, align 8, !dbg !5115
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !5115
  %cmp58 = icmp eq i32 %bf.clear57, 8, !dbg !5115
  br i1 %cmp58, label %cond.true71, label %lor.lhs.false59, !dbg !5115

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %cmp62 = icmp eq i32 %bf.clear57, 7, !dbg !5115
  br i1 %cmp62, label %cond.true71, label %lor.lhs.false63, !dbg !5115

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %cmp66 = icmp eq i32 %bf.clear57, 9, !dbg !5115
  br i1 %cmp66, label %cond.true71, label %lor.lhs.false67, !dbg !5115

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %cmp70 = icmp eq i32 %bf.clear57, 10, !dbg !5115
  br i1 %cmp70, label %cond.true71, label %cond.end93, !dbg !5115

cond.true71:                                      ; preds = %lor.lhs.false67, %lor.lhs.false63, %lor.lhs.false59, %lor.lhs.false55
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call50, i64 0, i32 1, !dbg !5115
  %15 = getelementptr inbounds %union.u, %union.u* %u72, i64 1, i32 0, i32 0, i64 0, !dbg !5115
  %16 = bitcast %union.rtunion_def* %15 to i32**, !dbg !5115
  %17 = load i32*, i32** %16, align 8, !dbg !5115
  %bf.load76 = load i32, i32* %17, align 8, !dbg !5115
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !5115
  %cmp78 = icmp eq i32 %bf.clear77, 23, !dbg !5115
  %18 = bitcast i32* %17 to %struct.rtx_def*, !dbg !5115
  br i1 %cmp78, label %cond.end93, label %cond.false84, !dbg !5115

cond.false84:                                     ; preds = %cond.true71
  %call89 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %call50, %struct.rtx_def* %18) #6, !dbg !5115
  br label %cond.end93, !dbg !5115

cond.end93:                                       ; preds = %lor.lhs.false67, %cond.false84, %cond.true71
  %cond94 = phi %struct.rtx_def* [ %call89, %cond.false84 ], [ %18, %cond.true71 ], [ null, %lor.lhs.false67 ], !dbg !5115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond94, metadata !5070, metadata !DIExpression()), !dbg !5085
  %cmp95 = icmp eq %struct.rtx_def* %cond94, null, !dbg !5116
  br i1 %cmp95, label %cleanup, label %lor.lhs.false96, !dbg !5117

lor.lhs.false96:                                  ; preds = %cond.end93
  %arrayidx99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond94, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5118
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !5118
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !5118
  %call101 = tail call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %19) #6, !dbg !5119
  %tobool102 = icmp eq i32 %call101, 0, !dbg !5119
  br i1 %tobool102, label %cleanup, label %if.end206, !dbg !5120

if.else:                                          ; preds = %if.end
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !5121
  %20 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest, align 8, !dbg !5121
  %call105 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %20) #6, !dbg !5123
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call105, metadata !5068, metadata !DIExpression()), !dbg !5085
  br label %while.cond, !dbg !5124

while.cond:                                       ; preds = %while.body, %if.else
  %insn_b.0 = phi %struct.rtx_def* [ %call105, %if.else ], [ %call110, %while.body ], !dbg !5125
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.0, metadata !5068, metadata !DIExpression()), !dbg !5085
  %cond = icmp eq %struct.rtx_def* %insn_b.0, null, !dbg !5126
  br i1 %cond, label %if.then204.loopexit, label %land.rhs, !dbg !5126

land.rhs:                                         ; preds = %while.cond
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_b.0, i64 0, i32 0, !dbg !5127
  %bf.load107 = load i32, i32* %21, align 8, !dbg !5127
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !5127
  %cmp109 = icmp eq i32 %bf.clear108, 7, !dbg !5127
  br i1 %cmp109, label %while.body, label %while.end, !dbg !5124

while.body:                                       ; preds = %land.rhs
  %call110 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* nonnull %insn_b.0) #6, !dbg !5128
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call110, metadata !5068, metadata !DIExpression()), !dbg !5085
  br label %while.cond, !dbg !5124, !llvm.loop !5129

while.end:                                        ; preds = %land.rhs
  %bf.clear108.lcssa = phi i32 [ %bf.clear108, %land.rhs ], !dbg !5127
  %insn_b.0.lcssa17 = phi %struct.rtx_def* [ %insn_b.0, %land.rhs ], !dbg !5125
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.0.lcssa17, metadata !5068, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.0.lcssa17, metadata !5068, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.0.lcssa17, metadata !5068, metadata !DIExpression()), !dbg !5085
  %arrayidx115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_b.0.lcssa17, i64 0, i32 1, i32 0, i32 1, !dbg !5131
  %rt_bb = bitcast %struct.object_block** %arrayidx115 to %struct.basic_block_def**, !dbg !5131
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5131
  %23 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest, align 8, !dbg !5133
  %arrayidx119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 1, !dbg !5133
  %rt_bb120 = bitcast %struct.object_block** %arrayidx119 to %struct.basic_block_def**, !dbg !5133
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb120, align 8, !dbg !5133
  %cmp121 = icmp eq %struct.basic_block_def* %22, %24, !dbg !5134
  br i1 %cmp121, label %lor.lhs.false122, label %if.then204, !dbg !5135

lor.lhs.false122:                                 ; preds = %while.end
  %cmp125 = icmp eq i32 %bf.clear108.lcssa, 8, !dbg !5136
  br i1 %cmp125, label %lor.lhs.false126, label %if.then204, !dbg !5137

lor.lhs.false126:                                 ; preds = %lor.lhs.false122
  br i1 true, label %cond.true142, label %lor.lhs.false130, !dbg !5138

lor.lhs.false130:                                 ; preds = %lor.lhs.false126
  br i1 undef, label %lor.lhs.false130.cond.true142_crit_edge, label %lor.lhs.false134, !dbg !5138

lor.lhs.false130.cond.true142_crit_edge:          ; preds = %lor.lhs.false130
  br label %cond.true142, !dbg !5138

lor.lhs.false134:                                 ; preds = %lor.lhs.false130
  br i1 undef, label %lor.lhs.false134.cond.true142_crit_edge, label %lor.lhs.false138, !dbg !5138

lor.lhs.false134.cond.true142_crit_edge:          ; preds = %lor.lhs.false134
  br label %cond.true142, !dbg !5138

lor.lhs.false138:                                 ; preds = %lor.lhs.false134
  br i1 undef, label %lor.lhs.false138.cond.true142_crit_edge, label %lor.lhs.false138.cond.end164_crit_edge, !dbg !5138

lor.lhs.false138.cond.end164_crit_edge:           ; preds = %lor.lhs.false138
  br label %cond.end164, !dbg !5138

lor.lhs.false138.cond.true142_crit_edge:          ; preds = %lor.lhs.false138
  br label %cond.true142, !dbg !5138

cond.true142:                                     ; preds = %lor.lhs.false130.cond.true142_crit_edge, %lor.lhs.false134.cond.true142_crit_edge, %lor.lhs.false138.cond.true142_crit_edge, %lor.lhs.false126
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_b.0.lcssa17, i64 0, i32 1, !dbg !5138
  %25 = getelementptr inbounds %union.u, %union.u* %u143, i64 1, i32 0, i32 0, i64 0, !dbg !5138
  %26 = bitcast %union.rtunion_def* %25 to i32**, !dbg !5138
  %27 = load i32*, i32** %26, align 8, !dbg !5138
  %bf.load147 = load i32, i32* %27, align 8, !dbg !5138
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !5138
  %cmp149 = icmp eq i32 %bf.clear148, 23, !dbg !5138
  %28 = bitcast i32* %27 to %struct.rtx_def*, !dbg !5138
  br i1 %cmp149, label %cond.end164, label %cond.false155, !dbg !5138

cond.false155:                                    ; preds = %cond.true142
  %call160 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn_b.0.lcssa17, %struct.rtx_def* %28) #6, !dbg !5138
  br label %cond.end164, !dbg !5138

cond.end164:                                      ; preds = %lor.lhs.false138.cond.end164_crit_edge, %cond.false155, %cond.true142
  %cond165 = phi %struct.rtx_def* [ %call160, %cond.false155 ], [ %28, %cond.true142 ], [ undef, %lor.lhs.false138.cond.end164_crit_edge ], !dbg !5138
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond165, metadata !5070, metadata !DIExpression()), !dbg !5085
  %cmp166 = icmp eq %struct.rtx_def* %cond165, null, !dbg !5139
  br i1 %cmp166, label %if.then204, label %lor.lhs.false167, !dbg !5140

lor.lhs.false167:                                 ; preds = %cond.end164
  %arrayidx170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond165, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5141
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !5141
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !5141
  %call172 = tail call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %29) #6, !dbg !5142
  %tobool173 = icmp eq i32 %call172, 0, !dbg !5142
  br i1 %tobool173, label %if.then204, label %lor.lhs.false174, !dbg !5143

lor.lhs.false174:                                 ; preds = %lor.lhs.false167
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond165, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5144
  %rt_rtx178 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !5144
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx178, align 8, !dbg !5144
  %call179 = tail call fastcc i32 @noce_operand_ok(%struct.rtx_def* %31) #7, !dbg !5145
  %tobool180 = icmp eq i32 %call179, 0, !dbg !5145
  br i1 %tobool180, label %if.then204, label %lor.lhs.false181, !dbg !5146

lor.lhs.false181:                                 ; preds = %lor.lhs.false174
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx178, align 8, !dbg !5147
  %call186 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %11, %struct.rtx_def* %32) #6, !dbg !5148
  %tobool187 = icmp eq i32 %call186, 0, !dbg !5148
  br i1 %tobool187, label %lor.lhs.false188, label %if.then204, !dbg !5149

lor.lhs.false188:                                 ; preds = %lor.lhs.false181
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx178, align 8, !dbg !5150
  %call193 = tail call i32 @modified_between_p(%struct.rtx_def* %33, %struct.rtx_def* nonnull %insn_b.0.lcssa17, %struct.rtx_def* %4) #6, !dbg !5151
  %tobool194 = icmp eq i32 %call193, 0, !dbg !5151
  br i1 %tobool194, label %lor.lhs.false195, label %if.then204, !dbg !5152

lor.lhs.false195:                                 ; preds = %lor.lhs.false188
  %call196 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %11, %struct.rtx_def* %5) #6, !dbg !5153
  %tobool197 = icmp eq i32 %call196, 0, !dbg !5153
  br i1 %tobool197, label %lor.lhs.false198, label %if.then204, !dbg !5154

lor.lhs.false198:                                 ; preds = %lor.lhs.false195
  %call199 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %11, %struct.rtx_def* %13) #6, !dbg !5155
  %tobool200 = icmp eq i32 %call199, 0, !dbg !5155
  br i1 %tobool200, label %lor.lhs.false201, label %if.then204, !dbg !5156

lor.lhs.false201:                                 ; preds = %lor.lhs.false198
  %call202 = tail call i32 @modified_between_p(%struct.rtx_def* %11, %struct.rtx_def* nonnull %insn_b.0.lcssa17, %struct.rtx_def* %4) #6, !dbg !5157
  %tobool203 = icmp eq i32 %call202, 0, !dbg !5157
  br i1 %tobool203, label %if.end206, label %if.then204, !dbg !5158

if.then204.loopexit:                              ; preds = %while.cond
  br label %if.then204, !dbg !5159

if.then204:                                       ; preds = %if.then204.loopexit, %lor.lhs.false201, %lor.lhs.false198, %lor.lhs.false195, %lor.lhs.false188, %lor.lhs.false181, %lor.lhs.false174, %lor.lhs.false167, %while.end, %cond.end164, %lor.lhs.false122
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5070, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5068, metadata !DIExpression()), !dbg !5085
  br label %if.end206, !dbg !5159

if.end206:                                        ; preds = %lor.lhs.false96, %lor.lhs.false201, %if.then204
  %insn_b.2 = phi %struct.rtx_def* [ %call50, %lor.lhs.false96 ], [ null, %if.then204 ], [ %insn_b.0.lcssa17, %lor.lhs.false201 ], !dbg !5160
  %set_b.1 = phi %struct.rtx_def* [ %cond94, %lor.lhs.false96 ], [ null, %if.then204 ], [ %cond165, %lor.lhs.false201 ], !dbg !5160
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set_b.1, metadata !5070, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.2, metadata !5068, metadata !DIExpression()), !dbg !5085
  %call207 = tail call i32 @side_effects_p(%struct.rtx_def* %11) #6, !dbg !5161
  %tobool208 = icmp eq i32 %call207, 0, !dbg !5161
  br i1 %tobool208, label %if.end210, label %cleanup, !dbg !5163

if.end210:                                        ; preds = %if.end206
  %tobool211 = icmp eq %struct.rtx_def* %set_b.1, null, !dbg !5164
  br i1 %tobool211, label %cond.end218, label %cond.true212, !dbg !5164

cond.true212:                                     ; preds = %if.end210
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %set_b.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5165
  %rt_rtx216 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !5165
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx216, align 8, !dbg !5165
  br label %cond.end218, !dbg !5164

cond.end218:                                      ; preds = %if.end210, %cond.true212
  %cond219 = phi %struct.rtx_def* [ %35, %cond.true212 ], [ %11, %if.end210 ], !dbg !5164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond219, metadata !5074, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5071, metadata !DIExpression()), !dbg !5085
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !5166
  %bf.load220 = load i32, i32* %36, align 8, !dbg !5166
  %bf.clear221 = and i32 %bf.load220, 65535, !dbg !5166
  %cmp222 = icmp eq i32 %bf.clear221, 37, !dbg !5166
  br i1 %cmp222, label %lor.lhs.false223, label %if.then226, !dbg !5168

lor.lhs.false223:                                 ; preds = %cond.end218
  %call224 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %11) #7, !dbg !5169
  %cmp225 = icmp ult i32 %call224, 53, !dbg !5170
  br i1 %cmp225, label %lor.lhs.false223.if.then226_crit_edge, label %if.end267, !dbg !5171

lor.lhs.false223.if.then226_crit_edge:            ; preds = %lor.lhs.false223
  %bf.load227.pre = load i32, i32* %36, align 8, !dbg !5172
  br label %if.then226, !dbg !5171

if.then226:                                       ; preds = %lor.lhs.false223.if.then226_crit_edge, %cond.end218
  %bf.load252 = phi i32 [ %bf.load227.pre, %lor.lhs.false223.if.then226_crit_edge ], [ %bf.load220, %cond.end218 ], !dbg !5172
  %bf.clear228 = and i32 %bf.load252, 16711680, !dbg !5172
  %cmp229 = icmp eq i32 %bf.clear228, 65536, !dbg !5175
  br i1 %cmp229, label %cleanup, label %if.end231, !dbg !5176

if.end231:                                        ; preds = %if.then226
  %bf.clear233 = and i32 %bf.load252, 65535, !dbg !5177
  %cmp234 = icmp eq i32 %bf.clear233, 120, !dbg !5179
  br i1 %cmp234, label %land.lhs.true, label %if.end251, !dbg !5180

land.lhs.true:                                    ; preds = %if.end231
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5181
  %38 = bitcast %union.rtunion_def* %37 to i32**, !dbg !5181
  %39 = load i32*, i32** %38, align 8, !dbg !5181
  %bf.load239 = load i32, i32* %39, align 8, !dbg !5181
  %bf.clear240 = and i32 %bf.load239, 65535, !dbg !5181
  %cmp241 = icmp eq i32 %bf.clear240, 30, !dbg !5181
  br i1 %cmp241, label %lor.lhs.false242, label %cleanup, !dbg !5182

lor.lhs.false242:                                 ; preds = %land.lhs.true
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5183
  %41 = bitcast %union.rtunion_def* %40 to i32**, !dbg !5183
  %42 = load i32*, i32** %41, align 8, !dbg !5183
  %bf.load247 = load i32, i32* %42, align 8, !dbg !5183
  %bf.clear248 = and i32 %bf.load247, 65535, !dbg !5183
  %cmp249 = icmp eq i32 %bf.clear248, 30, !dbg !5183
  br i1 %cmp249, label %if.end251, label %cleanup, !dbg !5184

if.end251:                                        ; preds = %lor.lhs.false242, %if.end231
  %cmp254 = icmp eq i32 %bf.clear233, 40, !dbg !5185
  br i1 %cmp254, label %cond.true255, label %cond.end261, !dbg !5185

cond.true255:                                     ; preds = %if.end251
  %arrayidx258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5185
  %rt_rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !5185
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx259, align 8, !dbg !5185
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i64 0, i32 0, !dbg !5186
  %bf.load263.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !5185
  br label %cond.end261, !dbg !5185

cond.end261:                                      ; preds = %if.end251, %cond.true255
  %bf.load263 = phi i32 [ %bf.load263.pre, %cond.true255 ], [ %bf.load252, %if.end251 ], !dbg !5185
  %bf.lshr264 = lshr i32 %bf.load263, 16, !dbg !5185
  %bf.clear265 = and i32 %bf.lshr264, 255, !dbg !5185
  %call266 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear265) #6, !dbg !5187
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call266, metadata !5072, metadata !DIExpression()), !dbg !5085
  br label %if.end267, !dbg !5188

if.end267:                                        ; preds = %cond.end261, %lor.lhs.false223
  %x.0 = phi %struct.rtx_def* [ %call266, %cond.end261 ], [ %11, %lor.lhs.false223 ], !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5072, metadata !DIExpression()), !dbg !5085
  %call268 = tail call fastcc i32 @noce_operand_ok(%struct.rtx_def* %13) #7, !dbg !5189
  %tobool269 = icmp eq i32 %call268, 0, !dbg !5189
  br i1 %tobool269, label %cleanup, label %lor.lhs.false270, !dbg !5191

lor.lhs.false270:                                 ; preds = %if.end267
  %call271 = tail call fastcc i32 @noce_operand_ok(%struct.rtx_def* %cond219) #7, !dbg !5192
  %tobool272 = icmp eq i32 %call271, 0, !dbg !5192
  br i1 %tobool272, label %cleanup, label %retry.preheader, !dbg !5193

retry.preheader:                                  ; preds = %lor.lhs.false270
  %insn_a275 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !5085
  %insn_b276 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 8, !dbg !5085
  %x277 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5085
  %a278 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5085
  %b279 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5085
  br i1 %tobool48, label %retry.preheader.split.us, label %retry.preheader.retry.preheader.split_crit_edge, !dbg !5194

retry.preheader.retry.preheader.split_crit_edge:  ; preds = %retry.preheader
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond219, metadata !5074, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set_b.1, metadata !5070, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.2, metadata !5068, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.label(metadata !5083), !dbg !5195
  store %struct.rtx_def* %call, %struct.rtx_def** %insn_a275, align 8, !dbg !5196
  store %struct.rtx_def* %insn_b.2, %struct.rtx_def** %insn_b276, align 8, !dbg !5197
  store %struct.rtx_def* %x.0, %struct.rtx_def** %x277, align 8, !dbg !5198
  store %struct.rtx_def* %13, %struct.rtx_def** %a278, align 8, !dbg !5199
  store %struct.rtx_def* %cond219, %struct.rtx_def** %b279, align 8, !dbg !5200
  %call280 = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %cond219) #6, !dbg !5201
  %tobool281 = icmp eq i32 %call280, 0, !dbg !5201
  br i1 %tobool281, label %if.end315, label %if.then282.us-lcssa, !dbg !5194

retry.preheader.split.us:                         ; preds = %retry.preheader
  br label %retry.us, !dbg !5194

retry.us:                                         ; preds = %if.end378.us, %retry.preheader.split.us
  %insn_b.3.us = phi %struct.rtx_def* [ null, %if.end378.us ], [ %insn_b.2, %retry.preheader.split.us ], !dbg !5085
  %set_b.2.us = phi %struct.rtx_def* [ null, %if.end378.us ], [ %set_b.1, %retry.preheader.split.us ], !dbg !5085
  %b.0.us = phi %struct.rtx_def* [ %11, %if.end378.us ], [ %cond219, %retry.preheader.split.us ], !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.0.us, metadata !5074, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set_b.2.us, metadata !5070, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.3.us, metadata !5068, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.label(metadata !5083), !dbg !5195
  store %struct.rtx_def* %call, %struct.rtx_def** %insn_a275, align 8, !dbg !5196
  store %struct.rtx_def* %insn_b.3.us, %struct.rtx_def** %insn_b276, align 8, !dbg !5197
  store %struct.rtx_def* %x.0, %struct.rtx_def** %x277, align 8, !dbg !5198
  store %struct.rtx_def* %13, %struct.rtx_def** %a278, align 8, !dbg !5199
  store %struct.rtx_def* %b.0.us, %struct.rtx_def** %b279, align 8, !dbg !5200
  %call280.us = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %b.0.us) #6, !dbg !5201
  %tobool281.us = icmp eq i32 %call280.us, 0, !dbg !5201
  br i1 %tobool281.us, label %if.end315.us, label %if.then282.us-lcssa.us, !dbg !5194

if.end315.us:                                     ; preds = %retry.us
  %tobool316.us = icmp eq %struct.rtx_def* %set_b.2.us, null, !dbg !5202
  br i1 %tobool316.us, label %land.lhs.true317.us, label %if.end330.us, !dbg !5204

land.lhs.true317.us:                              ; preds = %if.end315.us
  %bf.load318.us = load i32, i32* %36, align 8, !dbg !5205
  %bf.clear319.us = and i32 %bf.load318.us, 65535, !dbg !5205
  %cmp320.us = icmp eq i32 %bf.clear319.us, 43, !dbg !5205
  br i1 %cmp320.us, label %if.then321.us, label %if.end330.us, !dbg !5206

if.then321.us:                                    ; preds = %land.lhs.true317.us
  %call322.us = tail call fastcc zeroext i8 @noce_mem_write_may_trap_or_fault_p(%struct.rtx_def* %11) #7, !dbg !5207
  %tobool323.us = icmp eq i8 %call322.us, 0, !dbg !5207
  br i1 %tobool323.us, label %if.end325.us, label %cleanup.loopexit.us-lcssa.us, !dbg !5210

if.end325.us:                                     ; preds = %if.then321.us
  %call326.us = tail call fastcc zeroext i8 @noce_can_store_speculate_p(%struct.basic_block_def* %0, %struct.rtx_def* %11) #7, !dbg !5211
  %tobool327.us = icmp eq i8 %call326.us, 0, !dbg !5211
  br i1 %tobool327.us, label %cleanup.loopexit.us-lcssa.us, label %if.end330.us, !dbg !5213

if.end330.us:                                     ; preds = %if.end325.us, %land.lhs.true317.us, %if.end315.us
  %call331.us = tail call fastcc i32 @noce_try_move(%struct.noce_if_info* %if_info) #7, !dbg !5214
  %tobool332.us = icmp eq i32 %call331.us, 0, !dbg !5214
  br i1 %tobool332.us, label %if.end334.us, label %success.loopexit.us-lcssa.us, !dbg !5216

if.end334.us:                                     ; preds = %if.end330.us
  %call335.us = tail call fastcc i32 @noce_try_store_flag(%struct.noce_if_info* %if_info) #7, !dbg !5217
  %tobool336.us = icmp eq i32 %call335.us, 0, !dbg !5217
  br i1 %tobool336.us, label %if.end338.us, label %success.loopexit.us-lcssa.us, !dbg !5219

if.end338.us:                                     ; preds = %if.end334.us
  %call339.us = tail call fastcc i32 @noce_try_bitop(%struct.noce_if_info* %if_info) #7, !dbg !5220
  %tobool340.us = icmp eq i32 %call339.us, 0, !dbg !5220
  br i1 %tobool340.us, label %if.end342.us, label %success.loopexit.us-lcssa.us, !dbg !5222

if.end342.us:                                     ; preds = %if.end338.us
  %call343.us = tail call fastcc i32 @noce_try_minmax(%struct.noce_if_info* %if_info) #7, !dbg !5223
  %tobool344.us = icmp eq i32 %call343.us, 0, !dbg !5223
  br i1 %tobool344.us, label %if.end346.us, label %success.loopexit.us-lcssa.us, !dbg !5225

if.end346.us:                                     ; preds = %if.end342.us
  %call347.us = tail call fastcc i32 @noce_try_abs(%struct.noce_if_info* %if_info) #7, !dbg !5226
  %tobool348.us = icmp eq i32 %call347.us, 0, !dbg !5226
  br i1 %tobool348.us, label %if.end350.us, label %success.loopexit.us-lcssa.us, !dbg !5228

if.end350.us:                                     ; preds = %if.end346.us
  %call351.us = tail call fastcc i32 @noce_try_cmove(%struct.noce_if_info* %if_info) #7, !dbg !5229
  %tobool352.us = icmp eq i32 %call351.us, 0, !dbg !5229
  br i1 %tobool352.us, label %if.end354.us, label %success.loopexit.us-lcssa.us, !dbg !5231

if.end354.us:                                     ; preds = %if.end350.us
  %44 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !5232
  %call355.us = tail call zeroext i8 %44() #6, !dbg !5234
  %tobool356.us = icmp eq i8 %call355.us, 0, !dbg !5234
  br i1 %tobool356.us, label %if.then357.us, label %if.end378.us, !dbg !5235

if.then357.us:                                    ; preds = %if.end354.us
  %call358.us = tail call fastcc i32 @noce_try_store_flag_constants(%struct.noce_if_info* %if_info) #7, !dbg !5236
  %tobool359.us = icmp eq i32 %call358.us, 0, !dbg !5236
  br i1 %tobool359.us, label %if.end361.us, label %success.loopexit.us-lcssa.us, !dbg !5239

if.end361.us:                                     ; preds = %if.then357.us
  %call362.us = tail call fastcc i32 @noce_try_addcc(%struct.noce_if_info* %if_info) #7, !dbg !5240
  %tobool363.us = icmp eq i32 %call362.us, 0, !dbg !5240
  br i1 %tobool363.us, label %if.end365.us, label %success.loopexit.us-lcssa.us, !dbg !5242

if.end365.us:                                     ; preds = %if.end361.us
  %call366.us = tail call fastcc i32 @noce_try_store_flag_mask(%struct.noce_if_info* %if_info) #7, !dbg !5243
  %tobool367.us = icmp eq i32 %call366.us, 0, !dbg !5243
  br i1 %tobool367.us, label %if.end369.us, label %success.loopexit.us-lcssa.us, !dbg !5245

if.end369.us:                                     ; preds = %if.end365.us
  %call370.us = tail call fastcc i32 @noce_try_cmove_arith(%struct.noce_if_info* %if_info) #7, !dbg !5246
  %tobool371.us = icmp eq i32 %call370.us, 0, !dbg !5246
  br i1 %tobool371.us, label %if.end373.us, label %success.loopexit.us-lcssa.us, !dbg !5248

if.end373.us:                                     ; preds = %if.end369.us
  %call374.us = tail call fastcc i32 @noce_try_sign_mask(%struct.noce_if_info* %if_info) #7, !dbg !5249
  %tobool375.us = icmp eq i32 %call374.us, 0, !dbg !5249
  br i1 %tobool375.us, label %if.end378.us, label %success.loopexit.us-lcssa.us, !dbg !5251

if.end378.us:                                     ; preds = %if.end373.us, %if.end354.us
  br i1 %tobool316.us, label %cleanup.loopexit.us-lcssa.us, label %retry.us, !dbg !5252

if.then282.us-lcssa.us:                           ; preds = %retry.us
  %insn_b.3.us.lcssa = phi %struct.rtx_def* [ %insn_b.3.us, %retry.us ], !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.3.us.lcssa, metadata !5068, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.3.us.lcssa, metadata !5068, metadata !DIExpression()), !dbg !5085
  br label %if.then282, !dbg !5254

cleanup.loopexit.us-lcssa.us:                     ; preds = %if.end378.us, %if.end325.us, %if.then321.us
  br label %cleanup.loopexit, !dbg !5255

success.loopexit.us-lcssa.us:                     ; preds = %if.end373.us, %if.end369.us, %if.end365.us, %if.end361.us, %if.then357.us, %if.end350.us, %if.end346.us, %if.end342.us, %if.end338.us, %if.end334.us, %if.end330.us
  br label %success.loopexit, !dbg !5256

if.then282.us-lcssa:                              ; preds = %retry.preheader.retry.preheader.split_crit_edge
  br label %if.then282, !dbg !5254

if.then282:                                       ; preds = %if.then282.us-lcssa.us, %if.then282.us-lcssa
  %insn_b.3.lcssa = phi %struct.rtx_def* [ %insn_b.2, %if.then282.us-lcssa ], [ %insn_b.3.us.lcssa, %if.then282.us-lcssa.us ], !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.3.lcssa, metadata !5068, metadata !DIExpression()), !dbg !5085
  %tobool283 = icmp ne %struct.rtx_def* %insn_b.3.lcssa, null, !dbg !5254
  %tobool285 = icmp ne %struct.basic_block_def* %2, null, !dbg !5257
  %or.cond = and i1 %tobool283, %tobool285, !dbg !5258
  br i1 %or.cond, label %land.lhs.true288, label %if.else307, !dbg !5258

land.lhs.true288:                                 ; preds = %if.then282
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i64 0, i32 7, !dbg !5259
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5259
  %45 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5259
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %45, i64 0, i32 1, !dbg !5259
  %46 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5259
  %cmp289 = icmp eq %struct.rtx_def* %insn_b.3.lcssa, %46, !dbg !5261
  br i1 %cmp289, label %if.then290, label %if.end298, !dbg !5262

if.then290:                                       ; preds = %land.lhs.true288
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn_b.3.lcssa, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5263
  %48 = bitcast %union.rtunion_def* %47 to i64*, !dbg !5263
  %49 = load i64, i64* %48, align 8, !dbg !5263
  %50 = bitcast %struct.rtx_def** %end_ to i64*, !dbg !5264
  store i64 %49, i64* %50, align 8, !dbg !5264
  br label %if.end298, !dbg !5265

if.end298:                                        ; preds = %if.then290, %land.lhs.true288
  %51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5266
  %rt_rtx302 = bitcast %union.rtunion_def* %51 to %struct.rtx_def**, !dbg !5266
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx302, align 8, !dbg !5266
  tail call void @reorder_insns(%struct.rtx_def* nonnull %insn_b.3.lcssa, %struct.rtx_def* nonnull %insn_b.3.lcssa, %struct.rtx_def* %52) #6, !dbg !5267
  %call303 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn_b.3.lcssa, i32 4, %struct.rtx_def* null) #6, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call303, metadata !5075, metadata !DIExpression()), !dbg !5270
  %cmp304 = icmp eq %struct.rtx_def* %call303, null, !dbg !5271
  br i1 %cmp304, label %success, label %if.then305, !dbg !5272

if.then305:                                       ; preds = %if.end298
  tail call void @remove_note(%struct.rtx_def* nonnull %insn_b.3.lcssa, %struct.rtx_def* nonnull %call303) #6, !dbg !5273
  br label %success, !dbg !5273

if.else307:                                       ; preds = %if.then282
  %tobool308 = icmp eq %struct.rtx_def* %insn_b.3.lcssa, null, !dbg !5274
  br i1 %tobool308, label %success, label %land.lhs.true309, !dbg !5276

land.lhs.true309:                                 ; preds = %if.else307
  %call310 = tail call i32 @side_effects_p(%struct.rtx_def* %11) #6, !dbg !5277
  %tobool311 = icmp eq i32 %call310, 0, !dbg !5277
  br i1 %tobool311, label %success, label %cleanup, !dbg !5278

if.end315:                                        ; preds = %retry.preheader.retry.preheader.split_crit_edge
  br i1 %tobool211, label %land.lhs.true317, label %if.end330, !dbg !5204

land.lhs.true317:                                 ; preds = %if.end315
  %bf.load318 = load i32, i32* %36, align 8, !dbg !5205
  %bf.clear319 = and i32 %bf.load318, 65535, !dbg !5205
  %cmp320 = icmp eq i32 %bf.clear319, 43, !dbg !5205
  br i1 %cmp320, label %if.then321, label %if.end330, !dbg !5206

if.then321:                                       ; preds = %land.lhs.true317
  %call322 = tail call fastcc zeroext i8 @noce_mem_write_may_trap_or_fault_p(%struct.rtx_def* %11) #7, !dbg !5207
  %tobool323 = icmp eq i8 %call322, 0, !dbg !5207
  br i1 %tobool323, label %if.end325, label %cleanup.loopexit.us-lcssa, !dbg !5210

if.end325:                                        ; preds = %if.then321
  %call326 = tail call fastcc zeroext i8 @noce_can_store_speculate_p(%struct.basic_block_def* %0, %struct.rtx_def* %11) #7, !dbg !5211
  %tobool327 = icmp eq i8 %call326, 0, !dbg !5211
  br i1 %tobool327, label %cleanup.loopexit.us-lcssa, label %if.end330, !dbg !5213

if.end330:                                        ; preds = %if.end325, %if.end315, %land.lhs.true317
  %call331 = tail call fastcc i32 @noce_try_move(%struct.noce_if_info* %if_info) #7, !dbg !5214
  %tobool332 = icmp eq i32 %call331, 0, !dbg !5214
  br i1 %tobool332, label %if.end334, label %success.loopexit.us-lcssa, !dbg !5216

if.end334:                                        ; preds = %if.end330
  %call335 = tail call fastcc i32 @noce_try_store_flag(%struct.noce_if_info* %if_info) #7, !dbg !5217
  %tobool336 = icmp eq i32 %call335, 0, !dbg !5217
  br i1 %tobool336, label %if.end338, label %success.loopexit.us-lcssa, !dbg !5219

if.end338:                                        ; preds = %if.end334
  %call339 = tail call fastcc i32 @noce_try_bitop(%struct.noce_if_info* %if_info) #7, !dbg !5220
  %tobool340 = icmp eq i32 %call339, 0, !dbg !5220
  br i1 %tobool340, label %if.end342, label %success.loopexit.us-lcssa, !dbg !5222

if.end342:                                        ; preds = %if.end338
  %call343 = tail call fastcc i32 @noce_try_minmax(%struct.noce_if_info* %if_info) #7, !dbg !5223
  %tobool344 = icmp eq i32 %call343, 0, !dbg !5223
  br i1 %tobool344, label %if.end346, label %success.loopexit.us-lcssa, !dbg !5225

if.end346:                                        ; preds = %if.end342
  %call347 = tail call fastcc i32 @noce_try_abs(%struct.noce_if_info* %if_info) #7, !dbg !5226
  %tobool348 = icmp eq i32 %call347, 0, !dbg !5226
  br i1 %tobool348, label %if.end350, label %success.loopexit.us-lcssa, !dbg !5228

if.end350:                                        ; preds = %if.end346
  %call351 = tail call fastcc i32 @noce_try_cmove(%struct.noce_if_info* %if_info) #7, !dbg !5229
  %tobool352 = icmp eq i32 %call351, 0, !dbg !5229
  br i1 %tobool352, label %if.end354, label %success.loopexit.us-lcssa, !dbg !5231

if.end354:                                        ; preds = %if.end350
  %53 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !5232
  %call355 = tail call zeroext i8 %53() #6, !dbg !5234
  %tobool356 = icmp eq i8 %call355, 0, !dbg !5234
  br i1 %tobool356, label %if.then357, label %if.end378, !dbg !5235

if.then357:                                       ; preds = %if.end354
  %call358 = tail call fastcc i32 @noce_try_store_flag_constants(%struct.noce_if_info* %if_info) #7, !dbg !5236
  %tobool359 = icmp eq i32 %call358, 0, !dbg !5236
  br i1 %tobool359, label %if.end361, label %success.loopexit.us-lcssa, !dbg !5239

if.end361:                                        ; preds = %if.then357
  %call362 = tail call fastcc i32 @noce_try_addcc(%struct.noce_if_info* %if_info) #7, !dbg !5240
  %tobool363 = icmp eq i32 %call362, 0, !dbg !5240
  br i1 %tobool363, label %if.end365, label %success.loopexit.us-lcssa, !dbg !5242

if.end365:                                        ; preds = %if.end361
  %call366 = tail call fastcc i32 @noce_try_store_flag_mask(%struct.noce_if_info* %if_info) #7, !dbg !5243
  %tobool367 = icmp eq i32 %call366, 0, !dbg !5243
  br i1 %tobool367, label %if.end369, label %success.loopexit.us-lcssa, !dbg !5245

if.end369:                                        ; preds = %if.end365
  %call370 = tail call fastcc i32 @noce_try_cmove_arith(%struct.noce_if_info* %if_info) #7, !dbg !5246
  %tobool371 = icmp eq i32 %call370, 0, !dbg !5246
  br i1 %tobool371, label %if.end373, label %success.loopexit.us-lcssa, !dbg !5248

if.end373:                                        ; preds = %if.end369
  %call374 = tail call fastcc i32 @noce_try_sign_mask(%struct.noce_if_info* %if_info) #7, !dbg !5249
  %tobool375 = icmp eq i32 %call374, 0, !dbg !5249
  br i1 %tobool375, label %if.end378, label %success.loopexit.us-lcssa, !dbg !5251

if.end378:                                        ; preds = %if.end373, %if.end354
  br label %cleanup.loopexit.us-lcssa, !dbg !5252

success.loopexit.us-lcssa:                        ; preds = %if.end373, %if.end369, %if.end365, %if.end361, %if.then357, %if.end350, %if.end346, %if.end342, %if.end338, %if.end334, %if.end330
  br label %success.loopexit, !dbg !5256

success.loopexit:                                 ; preds = %success.loopexit.us-lcssa.us, %success.loopexit.us-lcssa
  br label %success, !dbg !5256

success:                                          ; preds = %success.loopexit, %if.end298, %land.lhs.true309, %if.else307, %if.then305
  %x.1 = phi %struct.rtx_def* [ %11, %if.else307 ], [ %11, %land.lhs.true309 ], [ %11, %if.end298 ], [ %11, %if.then305 ], [ %x.0, %success.loopexit ], !dbg !5085
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !5072, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.label(metadata !5084), !dbg !5279
  %cmp384 = icmp eq %struct.rtx_def* %11, %x.1, !dbg !5256
  br i1 %cmp384, label %if.end394, label %if.then385, !dbg !5280

if.then385:                                       ; preds = %success
  tail call void @start_sequence() #6, !dbg !5281
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %11, %struct.rtx_def* %x.1) #7, !dbg !5282
  %call386 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5283
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call386, metadata !5080, metadata !DIExpression()), !dbg !5284
  tail call void @set_used_flags(%struct.rtx_def* %11) #6, !dbg !5285
  tail call void @unshare_all_rtl_in_chain(%struct.rtx_def* %call386) #6, !dbg !5286
  tail call void @end_sequence() #6, !dbg !5287
  %il387 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !5288
  %rtl388 = bitcast %union.basic_block_il_dependent* %il387 to %struct.rtl_bb_info**, !dbg !5288
  %54 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl388, align 8, !dbg !5288
  %end_389 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %54, i64 0, i32 1, !dbg !5288
  %55 = load %struct.rtx_def*, %struct.rtx_def** %end_389, align 8, !dbg !5288
  %arrayidx392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 2, !dbg !5289
  %rt_int = bitcast i64* %arrayidx392 to i32*, !dbg !5289
  %56 = load i32, i32* %rt_int, align 8, !dbg !5289
  %call393 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* %call386, %struct.rtx_def* %55, i32 %56) #6, !dbg !5290
  br label %if.end394, !dbg !5291

if.end394:                                        ; preds = %success, %if.then385
  br i1 %tobool48, label %if.else397, label %if.then396, !dbg !5292

if.then396:                                       ; preds = %if.end394
  tail call void @delete_basic_block(%struct.basic_block_def* nonnull %2) #6, !dbg !5293
  %57 = load i32, i32* @num_true_changes, align 4, !dbg !5296
  %inc = add nsw i32 %57, 1, !dbg !5296
  store i32 %inc, i32* @num_true_changes, align 4, !dbg !5296
  br label %if.end399, !dbg !5297

if.else397:                                       ; preds = %if.end394
  %call398 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5298
  tail call void @remove_edge(%struct.edge_def* %call398) #6, !dbg !5299
  br label %if.end399

if.end399:                                        ; preds = %if.else397, %if.then396
  %call400 = tail call %struct.edge_def* @find_edge(%struct.basic_block_def* %1, %struct.basic_block_def* %3) #6, !dbg !5300
  tail call void @remove_edge(%struct.edge_def* %call400) #6, !dbg !5301
  %call401 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0) #7, !dbg !5302
  %call402 = tail call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %call401, %struct.basic_block_def* %3) #6, !dbg !5303
  tail call void @delete_basic_block(%struct.basic_block_def* %1) #6, !dbg !5304
  %58 = load i32, i32* @num_true_changes, align 4, !dbg !5305
  %inc403 = add nsw i32 %58, 1, !dbg !5305
  store i32 %inc403, i32* @num_true_changes, align 4, !dbg !5305
  %call404 = tail call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5306
  %tobool405 = icmp eq i8 %call404, 0, !dbg !5306
  br i1 %tobool405, label %if.end408, label %if.then406, !dbg !5308

if.then406:                                       ; preds = %if.end399
  tail call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5309
  %59 = load i32, i32* @num_true_changes, align 4, !dbg !5311
  %inc407 = add nsw i32 %59, 1, !dbg !5311
  store i32 %inc407, i32* @num_true_changes, align 4, !dbg !5311
  br label %if.end408, !dbg !5312

if.end408:                                        ; preds = %if.end399, %if.then406
  %60 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !5313
  %inc409 = add nsw i32 %60, 1, !dbg !5313
  store i32 %inc409, i32* @num_updated_if_blocks, align 4, !dbg !5313
  br label %cleanup, !dbg !5314

cleanup.loopexit.us-lcssa:                        ; preds = %if.end378, %if.end325, %if.then321
  br label %cleanup.loopexit, !dbg !5255

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  br label %cleanup, !dbg !5255

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false96, %lor.lhs.false52, %if.then49, %land.lhs.true309, %lor.lhs.false270, %if.end267, %if.end206, %lor.lhs.false, %entry, %land.lhs.true, %lor.lhs.false242, %if.then226, %cond.end93, %cond.end37, %if.end408
  %retval.0 = phi i32 [ 1, %if.end408 ], [ 0, %cond.end37 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %lor.lhs.false96 ], [ 0, %cond.end93 ], [ 0, %lor.lhs.false52 ], [ 0, %if.then49 ], [ 0, %if.end206 ], [ 0, %if.then226 ], [ 0, %lor.lhs.false242 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false270 ], [ 0, %if.end267 ], [ 0, %land.lhs.true309 ], [ 0, %cleanup.loopexit ], !dbg !5085
  ret i32 %retval.0, !dbg !5255
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cond_move_process_if_block(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5315 {
entry:
  %reg = alloca i32, align 4
  %then_regs = alloca %struct.VEC_int_heap*, align 8
  %else_regs = alloca %struct.VEC_int_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5317, metadata !DIExpression()), !dbg !5335
  %test_bb1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 0, !dbg !5336
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb1, align 8, !dbg !5336
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5318, metadata !DIExpression()), !dbg !5335
  %then_bb2 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 1, !dbg !5337
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %then_bb2, align 8, !dbg !5337
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5319, metadata !DIExpression()), !dbg !5335
  %else_bb3 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 2, !dbg !5338
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %else_bb3, align 8, !dbg !5338
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !5320, metadata !DIExpression()), !dbg !5335
  %join_bb4 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 3, !dbg !5339
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %join_bb4, align 8, !dbg !5339
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !5321, metadata !DIExpression()), !dbg !5335
  %jump5 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5340
  %4 = load %struct.rtx_def*, %struct.rtx_def** %jump5, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5322, metadata !DIExpression()), !dbg !5335
  %cond6 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5341
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cond6, align 8, !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5323, metadata !DIExpression()), !dbg !5335
  %6 = bitcast i32* %reg to i8*, !dbg !5342
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8, !dbg !5342
  %7 = bitcast %struct.VEC_int_heap** %then_regs to i8*, !dbg !5343
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5343
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* null, metadata !5332, metadata !DIExpression()), !dbg !5335
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %then_regs, align 8, !dbg !5344
  %8 = bitcast %struct.VEC_int_heap** %else_regs to i8*, !dbg !5345
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5345
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* null, metadata !5333, metadata !DIExpression()), !dbg !5335
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %else_regs, align 8, !dbg !5346
  %call = tail call i32 @max_reg_num() #6, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %call, metadata !5326, metadata !DIExpression()), !dbg !5335
  %add = shl i32 %call, 3, !dbg !5348
  %mul = add i32 %add, 8, !dbg !5348
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5327, metadata !DIExpression()), !dbg !5335
  %conv8 = sext i32 %mul to i64, !dbg !5349
  %9 = alloca i8, i64 %conv8, align 16, !dbg !5349
  %10 = bitcast i8* %9 to %struct.rtx_def**, !dbg !5350
  call void @llvm.dbg.value(metadata %struct.rtx_def** %10, metadata !5330, metadata !DIExpression()), !dbg !5335
  %11 = alloca i8, i64 %conv8, align 16, !dbg !5351
  %12 = bitcast i8* %11 to %struct.rtx_def**, !dbg !5352
  call void @llvm.dbg.value(metadata %struct.rtx_def** %12, metadata !5331, metadata !DIExpression()), !dbg !5335
  %call11 = call i8* @memset(i8* nonnull %9, i32 0, i64 %conv8) #6, !dbg !5353
  %call13 = call i8* @memset(i8* nonnull %11, i32 0, i64 %conv8) #6, !dbg !5354
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  %call14 = call fastcc i32 @check_cond_move_block(%struct.basic_block_def* %1, %struct.rtx_def** nonnull %10, %struct.VEC_int_heap** nonnull %then_regs, %struct.rtx_def* %5) #7, !dbg !5355
  %tobool = icmp eq i32 %call14, 0, !dbg !5355
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5357

lor.lhs.false:                                    ; preds = %entry
  %tobool15 = icmp eq %struct.basic_block_def* %2, null, !dbg !5358
  br i1 %tobool15, label %if.end, label %land.lhs.true, !dbg !5359

land.lhs.true:                                    ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  %call16 = call fastcc i32 @check_cond_move_block(%struct.basic_block_def* nonnull %2, %struct.rtx_def** nonnull %12, %struct.VEC_int_heap** nonnull %else_regs, %struct.rtx_def* %5) #7, !dbg !5360
  %tobool17 = icmp eq i32 %call16, 0, !dbg !5360
  br i1 %tobool17, label %if.then, label %if.end, !dbg !5361

if.then:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5362
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5364
  br label %cleanup, !dbg !5365

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  call void @llvm.dbg.value(metadata i32 0, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 0, metadata !5334, metadata !DIExpression()), !dbg !5335
  br label %for.cond, !dbg !5366

for.cond:                                         ; preds = %for.inc, %if.end
  %c.0 = phi i32 [ 0, %if.end ], [ %c.2, %for.inc ], !dbg !5368
  %i.0 = phi i32 [ 0, %if.end ], [ %inc57, %for.inc ], !dbg !5369
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5334, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.0, metadata !5328, metadata !DIExpression()), !dbg !5335
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %then_regs, align 8, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %13, metadata !5332, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %13, metadata !5332, metadata !DIExpression()), !dbg !5335
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i64 0, i32 0, !dbg !5370
  call void @llvm.dbg.value(metadata i32* %reg, metadata !5329, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  %call20 = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %base, i32 %i.0, i32* nonnull %reg) #7, !dbg !5370
  %tobool21 = icmp eq i32 %call20, 0, !dbg !5372
  br i1 %tobool21, label %for.cond58.preheader, label %for.body, !dbg !5372

for.cond58.preheader:                             ; preds = %for.cond
  %c.0.lcssa = phi i32 [ %c.0, %for.cond ], !dbg !5368
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.0.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  br label %for.cond58, !dbg !5373

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %reg, align 4, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %idxprom = sext i32 %14 to i64, !dbg !5378
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom, !dbg !5378
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5378
  %tobool22 = icmp eq %struct.rtx_def* %15, null, !dbg !5378
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !5379
  br i1 %tobool22, label %land.lhs.true23, label %for.body.if.end28_crit_edge, !dbg !5379

for.body.if.end28_crit_edge:                      ; preds = %for.body
  %arrayidx30.phi.trans.insert = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %12, i64 %idxprom, !dbg !5380
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30.phi.trans.insert, align 8, !dbg !5382
  br label %if.end28, !dbg !5379

land.lhs.true23:                                  ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %arrayidx25 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %12, i64 %idxprom, !dbg !5383
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx25, align 8, !dbg !5383
  %tobool26 = icmp eq %struct.rtx_def* %17, null, !dbg !5383
  br i1 %tobool26, label %for.inc, label %if.end28, !dbg !5384

if.end28:                                         ; preds = %for.body.if.end28_crit_edge, %land.lhs.true23
  %.pre.pn = phi %struct.rtx_def* [ %.pre, %for.body.if.end28_crit_edge ], [ %17, %land.lhs.true23 ]
  %18 = phi %struct.rtx_def* [ %.pre, %for.body.if.end28_crit_edge ], [ %17, %land.lhs.true23 ], !dbg !5382
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre.pn, i64 0, i32 0, !dbg !5385
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %tobool31 = icmp eq %struct.rtx_def* %18, null, !dbg !5382
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !5386

if.then32:                                        ; preds = %if.end28
  %inc = add nsw i32 %c.0, 1, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5328, metadata !DIExpression()), !dbg !5335
  br label %for.inc, !dbg !5387

if.else:                                          ; preds = %if.end28
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %bf.load = load i32, i32* %16, align 8, !dbg !5388
  %bf.clear = and i32 %bf.load, 65535, !dbg !5388
  %idxprom35 = zext i32 %bf.clear to i64, !dbg !5388
  %arrayidx36 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom35, !dbg !5388
  %20 = load i32, i32* %arrayidx36, align 4, !dbg !5388
  %cmp = icmp eq i32 %20, 9, !dbg !5388
  br i1 %cmp, label %for.inc, label %land.lhs.true38, !dbg !5391

land.lhs.true38:                                  ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %bf.load41 = load i32, i32* %19, align 8, !dbg !5392
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !5392
  %idxprom43 = zext i32 %bf.clear42 to i64, !dbg !5392
  %arrayidx44 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom43, !dbg !5392
  %21 = load i32, i32* %arrayidx44, align 4, !dbg !5392
  %cmp45 = icmp eq i32 %21, 9, !dbg !5392
  br i1 %cmp45, label %for.inc, label %land.lhs.true47, !dbg !5393

land.lhs.true47:                                  ; preds = %land.lhs.true38
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %14, metadata !5329, metadata !DIExpression()), !dbg !5335
  %call52 = call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* nonnull %18) #6, !dbg !5394
  %tobool53 = icmp eq i32 %call52, 0, !dbg !5394
  br i1 %tobool53, label %if.then54, label %for.inc, !dbg !5395

if.then54:                                        ; preds = %land.lhs.true47
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5396
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5398
  br label %cleanup, !dbg !5399

for.inc:                                          ; preds = %land.lhs.true47, %land.lhs.true23, %if.then32, %land.lhs.true38, %if.else
  %c.2 = phi i32 [ %c.0, %land.lhs.true23 ], [ %inc, %if.then32 ], [ %c.0, %land.lhs.true47 ], [ %c.0, %land.lhs.true38 ], [ %c.0, %if.else ], !dbg !5368
  call void @llvm.dbg.value(metadata i32 %c.2, metadata !5328, metadata !DIExpression()), !dbg !5335
  %inc57 = add i32 %i.0, 1, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %inc57, metadata !5334, metadata !DIExpression()), !dbg !5335
  br label %for.cond, !dbg !5401, !llvm.loop !5402

for.cond58:                                       ; preds = %for.cond58.preheader, %for.body67
  %c.3 = phi i32 [ %spec.select, %for.body67 ], [ %c.0.lcssa, %for.cond58.preheader ], !dbg !5368
  %i.1 = phi i32 [ %inc75, %for.body67 ], [ 0, %for.cond58.preheader ], !dbg !5404
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5334, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.3, metadata !5328, metadata !DIExpression()), !dbg !5335
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %else_regs, align 8, !dbg !5405
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %22, metadata !5333, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap* %22, metadata !5333, metadata !DIExpression()), !dbg !5335
  %base61 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i64 0, i32 0, !dbg !5405
  call void @llvm.dbg.value(metadata i32* %reg, metadata !5329, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  %call65 = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %base61, i32 %i.1, i32* nonnull %reg) #7, !dbg !5405
  %tobool66 = icmp eq i32 %call65, 0, !dbg !5373
  br i1 %tobool66, label %for.end76, label %for.body67, !dbg !5373

for.body67:                                       ; preds = %for.cond58
  %23 = load i32, i32* %reg, align 4, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %23, metadata !5329, metadata !DIExpression()), !dbg !5335
  %idxprom68 = sext i32 %23 to i64, !dbg !5409
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom68, !dbg !5409
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8, !dbg !5409
  %tobool70 = icmp eq %struct.rtx_def* %24, null, !dbg !5409
  %inc72 = zext i1 %tobool70 to i32, !dbg !5410
  %spec.select = add nsw i32 %c.3, %inc72, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5328, metadata !DIExpression()), !dbg !5335
  %inc75 = add i32 %i.1, 1, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %inc75, metadata !5334, metadata !DIExpression()), !dbg !5335
  br label %for.cond58, !dbg !5412, !llvm.loop !5413

for.end76:                                        ; preds = %for.cond58
  %c.3.lcssa = phi i32 [ %c.3, %for.cond58 ], !dbg !5368
  call void @llvm.dbg.value(metadata i32 %c.3.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.3.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %c.3.lcssa, metadata !5328, metadata !DIExpression()), !dbg !5335
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5415
  %call77 = call zeroext i8 @optimize_function_for_speed_p(%struct.function* %25) #6, !dbg !5415
  %tobool78 = icmp eq i8 %call77, 0, !dbg !5415
  %26 = load i32, i32* @ix86_branch_cost, align 4, !dbg !5415
  %.op = add i32 %26, 1, !dbg !5415
  %add83 = select i1 %tobool78, i32 3, i32 %.op, !dbg !5415
  %cmp84 = icmp sgt i32 %c.3.lcssa, %add83, !dbg !5417
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !5418

if.then86:                                        ; preds = %for.end76
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5419
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5421
  br label %cleanup, !dbg !5422

if.end87:                                         ; preds = %for.end76
  call void @start_sequence() #6, !dbg !5423
  %call88 = call fastcc zeroext i8 @cond_move_convert_if_block(%struct.noce_if_info* %if_info, %struct.basic_block_def* %1, %struct.rtx_def* %5, %struct.rtx_def** nonnull %10, %struct.rtx_def** nonnull %12, i8 zeroext 0) #7, !dbg !5424
  %tobool89 = icmp eq i8 %call88, 0, !dbg !5424
  br i1 %tobool89, label %if.then95, label %lor.lhs.false90, !dbg !5426

lor.lhs.false90:                                  ; preds = %if.end87
  br i1 %tobool15, label %if.end96, label %land.lhs.true92, !dbg !5427

land.lhs.true92:                                  ; preds = %lor.lhs.false90
  %call93 = call fastcc zeroext i8 @cond_move_convert_if_block(%struct.noce_if_info* %if_info, %struct.basic_block_def* nonnull %2, %struct.rtx_def* %5, %struct.rtx_def** nonnull %10, %struct.rtx_def** nonnull %12, i8 zeroext 1) #7, !dbg !5428
  %tobool94 = icmp eq i8 %call93, 0, !dbg !5428
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !5429

if.then95:                                        ; preds = %land.lhs.true92, %if.end87
  call void @end_sequence() #6, !dbg !5430
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5432
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5433
  br label %cleanup, !dbg !5434

if.end96:                                         ; preds = %land.lhs.true92, %lor.lhs.false90
  %call97 = call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !5435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call97, metadata !5324, metadata !DIExpression()), !dbg !5335
  %tobool98 = icmp eq %struct.rtx_def* %call97, null, !dbg !5436
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !5438

if.then99:                                        ; preds = %if.end96
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5439
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5441
  br label %cleanup, !dbg !5442

if.end100:                                        ; preds = %if.end96
  %call101 = call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %1) #7, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call101, metadata !5325, metadata !DIExpression()), !dbg !5335
  %tobool102 = icmp eq %struct.rtx_def* %call101, null, !dbg !5444
  br i1 %tobool102, label %if.then103, label %if.end110, !dbg !5446

if.then103:                                       ; preds = %if.end100
  %call104 = call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %2) #7, !dbg !5447
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !5325, metadata !DIExpression()), !dbg !5335
  %tobool105 = icmp eq %struct.rtx_def* %call104, null, !dbg !5449
  br i1 %tobool105, label %cond.true106, label %if.end110, !dbg !5449

cond.true106:                                     ; preds = %if.then103
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2741, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !5449
  br label %if.end110, !dbg !5449

if.end110:                                        ; preds = %if.then103, %if.end100, %cond.true106
  %loc_insn.0 = phi %struct.rtx_def* [ %call101, %if.end100 ], [ %call104, %if.then103 ], [ null, %cond.true106 ], !dbg !5335
  call void @llvm.dbg.value(metadata %struct.rtx_def* %loc_insn.0, metadata !5325, metadata !DIExpression()), !dbg !5335
  %arrayidx111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %loc_insn.0, i64 0, i32 1, i32 0, i32 2, !dbg !5450
  %rt_int = bitcast i64* %arrayidx111 to i32*, !dbg !5450
  %27 = load i32, i32* %rt_int, align 8, !dbg !5450
  %call112 = call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call97, %struct.rtx_def* %4, i32 %27) #6, !dbg !5451
  br i1 %tobool15, label %if.else116, label %if.then114, !dbg !5452

if.then114:                                       ; preds = %if.end110
  call void @delete_basic_block(%struct.basic_block_def* nonnull %2) #6, !dbg !5453
  %28 = load i32, i32* @num_true_changes, align 4, !dbg !5456
  %inc115 = add nsw i32 %28, 1, !dbg !5456
  store i32 %inc115, i32* @num_true_changes, align 4, !dbg !5456
  br label %if.end118, !dbg !5457

if.else116:                                       ; preds = %if.end110
  %call117 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5458
  call void @remove_edge(%struct.edge_def* %call117) #6, !dbg !5459
  br label %if.end118

if.end118:                                        ; preds = %if.else116, %if.then114
  %call119 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %1, %struct.basic_block_def* %3) #6, !dbg !5460
  call void @remove_edge(%struct.edge_def* %call119) #6, !dbg !5461
  %call120 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0) #7, !dbg !5462
  %call121 = call %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def* %call120, %struct.basic_block_def* %3) #6, !dbg !5463
  call void @delete_basic_block(%struct.basic_block_def* %1) #6, !dbg !5464
  %29 = load i32, i32* @num_true_changes, align 4, !dbg !5465
  %inc122 = add nsw i32 %29, 1, !dbg !5465
  store i32 %inc122, i32* @num_true_changes, align 4, !dbg !5465
  %call123 = call zeroext i8 @can_merge_blocks_p(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5466
  %tobool124 = icmp eq i8 %call123, 0, !dbg !5466
  br i1 %tobool124, label %if.end127, label %if.then125, !dbg !5468

if.then125:                                       ; preds = %if.end118
  call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* %3) #6, !dbg !5469
  %30 = load i32, i32* @num_true_changes, align 4, !dbg !5471
  %inc126 = add nsw i32 %30, 1, !dbg !5471
  store i32 %inc126, i32* @num_true_changes, align 4, !dbg !5471
  br label %if.end127, !dbg !5472

if.end127:                                        ; preds = %if.end118, %if.then125
  %31 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !5473
  %inc128 = add nsw i32 %31, 1, !dbg !5473
  store i32 %inc128, i32* @num_updated_if_blocks, align 4, !dbg !5473
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %then_regs, metadata !5332, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %then_regs) #7, !dbg !5474
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %else_regs, metadata !5333, metadata !DIExpression(DW_OP_deref)), !dbg !5335
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** nonnull %else_regs) #7, !dbg !5475
  br label %cleanup, !dbg !5476

cleanup:                                          ; preds = %if.end127, %if.then99, %if.then95, %if.then86, %if.then54, %if.then
  %retval.0 = phi i32 [ 0, %if.then54 ], [ 0, %if.then86 ], [ 1, %if.end127 ], [ 0, %if.then99 ], [ 0, %if.then95 ], [ 0, %if.then ], !dbg !5335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8, !dbg !5477
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8, !dbg !5477
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8, !dbg !5477
  ret i32 %retval.0, !dbg !5477
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @reverse_condition(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @canonicalize_condition(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !5478 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5482, metadata !DIExpression()), !dbg !5484
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5485
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5485
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5485
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !5485
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5483, metadata !DIExpression()), !dbg !5484
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5486
  %bf.load = load i32, i32* %2, align 8, !dbg !5486
  %bf.clear = and i32 %bf.load, 65535, !dbg !5486
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !5486
  br i1 %cmp, label %if.then, label %if.end5, !dbg !5488

if.then:                                          ; preds = %entry
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5489
  %3 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5489
  %cmp3 = icmp eq %struct.rtx_def* %1, %3, !dbg !5492
  br i1 %cmp3, label %cleanup, label %if.end, !dbg !5493

if.end:                                           ; preds = %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5494
  %rt_rtx = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !5494
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !5483, metadata !DIExpression()), !dbg !5484
  br label %if.end5, !dbg !5495

if.end5:                                          ; preds = %if.end, %entry
  %insn.0 = phi %struct.rtx_def* [ %5, %if.end ], [ %1, %entry ], !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5483, metadata !DIExpression()), !dbg !5484
  br label %while.cond, !dbg !5496

while.cond:                                       ; preds = %if.end17, %if.end5
  %insn.1 = phi %struct.rtx_def* [ %insn.0, %if.end5 ], [ %9, %if.end17 ], !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5483, metadata !DIExpression()), !dbg !5484
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5497
  %bf.load6 = load i32, i32* %6, align 8, !dbg !5497
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !5497
  %cmp8 = icmp eq i32 %bf.clear7, 13, !dbg !5497
  br i1 %cmp8, label %while.body, label %lor.rhs, !dbg !5498

lor.rhs:                                          ; preds = %while.cond
  %cmp11 = icmp eq i32 %bf.clear7, 7, !dbg !5499
  br i1 %cmp11, label %while.body, label %while.end, !dbg !5496

while.body:                                       ; preds = %while.cond, %lor.rhs
  %end_14 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5500
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_14, align 8, !dbg !5500
  %cmp15 = icmp eq %struct.rtx_def* %insn.1, %7, !dbg !5503
  br i1 %cmp15, label %cleanup.loopexit, label %if.end17, !dbg !5504

if.end17:                                         ; preds = %while.body
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5505
  %rt_rtx21 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5505
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5483, metadata !DIExpression()), !dbg !5484
  br label %while.cond, !dbg !5496, !llvm.loop !5506

while.end:                                        ; preds = %lor.rhs
  %insn.1.lcssa = phi %struct.rtx_def* [ %insn.1, %lor.rhs ], !dbg !5484
  %bf.clear7.lcssa = phi i32 [ %bf.clear7, %lor.rhs ], !dbg !5497
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1.lcssa, metadata !5483, metadata !DIExpression()), !dbg !5484
  %cmp24 = icmp eq i32 %bf.clear7.lcssa, 9, !dbg !5508
  %.insn.1 = select i1 %cmp24, %struct.rtx_def* null, %struct.rtx_def* %insn.1.lcssa, !dbg !5484
  br label %cleanup, !dbg !5484

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !5510

cleanup:                                          ; preds = %cleanup.loopexit, %while.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ null, %if.then ], [ %.insn.1, %while.end ], [ null, %cleanup.loopexit ], !dbg !5484
  ret %struct.rtx_def* %retval.0, !dbg !5510
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* %bb, i32 %skip_use_p) unnamed_addr #4 !dbg !5511 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5515, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.value(metadata i32 %skip_use_p, metadata !5516, metadata !DIExpression()), !dbg !5519
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5520
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5520
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5520
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !5520
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !5521
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !5521
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5518, metadata !DIExpression()), !dbg !5519
  %tobool = icmp eq i32 %skip_use_p, 0, !dbg !5519
  br i1 %tobool, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !5522

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %while.cond, !dbg !5522

entry.split.us:                                   ; preds = %entry
  br label %while.cond.us, !dbg !5522

while.cond.us:                                    ; preds = %if.end.us, %entry.split.us
  %insn.0.in.us = phi %struct.rtx_def** [ %end_, %entry.split.us ], [ %rt_rtx20.us, %if.end.us ]
  %insn.0.us = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in.us, align 8, !dbg !5519
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.us, metadata !5517, metadata !DIExpression()), !dbg !5519
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 0, !dbg !5523
  %bf.load.us = load i32, i32* %2, align 8, !dbg !5523
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !5523
  %cmp.us = icmp eq i32 %bf.clear.us, 13, !dbg !5523
  br i1 %cmp.us, label %while.body.us, label %lor.lhs.false.us, !dbg !5524

lor.lhs.false.us:                                 ; preds = %while.cond.us
  %cmp5.us = icmp eq i32 %bf.clear.us, 9, !dbg !5525
  br i1 %cmp5.us, label %while.body.us, label %lor.lhs.false6.us, !dbg !5526

lor.lhs.false6.us:                                ; preds = %lor.lhs.false.us
  %cmp9.us = icmp eq i32 %bf.clear.us, 7, !dbg !5527
  br i1 %cmp9.us, label %while.body.us, label %lor.rhs.us, !dbg !5528

lor.rhs.us:                                       ; preds = %lor.lhs.false6.us
  %insn.0.us.lcssa = phi %struct.rtx_def* [ %insn.0.us, %lor.lhs.false6.us ], !dbg !5519
  %bf.clear.us.lcssa = phi i32 [ %bf.clear.us, %lor.lhs.false6.us ], !dbg !5523
  br label %while.end, !dbg !5529

while.body.us:                                    ; preds = %lor.lhs.false6.us, %lor.lhs.false.us, %while.cond.us
  %cmp16.us = icmp eq %struct.rtx_def* %insn.0.us, %1, !dbg !5531
  br i1 %cmp16.us, label %cleanup.loopexit.us-lcssa.us, label %if.end.us, !dbg !5534

if.end.us:                                        ; preds = %while.body.us
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5535
  %rt_rtx20.us = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5535
  br label %while.cond.us, !dbg !5522, !llvm.loop !5536

cleanup.loopexit.us-lcssa.us:                     ; preds = %while.body.us
  br label %cleanup.loopexit, !dbg !5538

while.cond:                                       ; preds = %if.end, %entry.entry.split_crit_edge
  %insn.0.in = phi %struct.rtx_def** [ %end_, %entry.entry.split_crit_edge ], [ %rt_rtx20, %if.end ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5519
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5517, metadata !DIExpression()), !dbg !5519
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5523
  %bf.load = load i32, i32* %4, align 8, !dbg !5523
  %bf.clear = and i32 %bf.load, 65535, !dbg !5523
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !5523
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !5524

lor.lhs.false:                                    ; preds = %while.cond
  %cmp5 = icmp eq i32 %bf.clear, 9, !dbg !5525
  br i1 %cmp5, label %while.body, label %lor.lhs.false6, !dbg !5526

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 7, !dbg !5527
  br i1 %cmp9, label %while.body, label %lor.rhs, !dbg !5528

lor.rhs:                                          ; preds = %lor.lhs.false6
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !5539
  br i1 %cmp12, label %land.rhs, label %while.end.us-lcssa, !dbg !5540

land.rhs:                                         ; preds = %lor.rhs
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5541
  %5 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !5541
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !5541
  %7 = load i32*, i32** %6, align 8, !dbg !5541
  %bf.load13 = load i32, i32* %7, align 8, !dbg !5541
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5541
  %cmp15 = icmp eq i32 %bf.clear14, 24, !dbg !5542
  br i1 %cmp15, label %while.body, label %while.end.us-lcssa, !dbg !5522

while.body:                                       ; preds = %while.cond, %lor.lhs.false, %lor.lhs.false6, %land.rhs
  %cmp16 = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !5531
  br i1 %cmp16, label %cleanup.loopexit.us-lcssa, label %if.end, !dbg !5534

if.end:                                           ; preds = %while.body
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5535
  %rt_rtx20 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5535
  br label %while.cond, !dbg !5522, !llvm.loop !5536

while.end.us-lcssa:                               ; preds = %land.rhs, %lor.rhs
  %insn.0.lcssa14 = phi %struct.rtx_def* [ %insn.0, %land.rhs ], [ %insn.0, %lor.rhs ], !dbg !5519
  %bf.clear.lcssa = phi i32 [ %bf.clear, %land.rhs ], [ %bf.clear, %lor.rhs ], !dbg !5523
  br label %while.end, !dbg !5529

while.end:                                        ; preds = %lor.rhs.us, %while.end.us-lcssa
  %bf.clear22.pre-phi = phi i32 [ %bf.clear.us.lcssa, %lor.rhs.us ], [ %bf.clear.lcssa, %while.end.us-lcssa ], !dbg !5529
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0.us.lcssa, %lor.rhs.us ], [ %insn.0.lcssa14, %while.end.us-lcssa ], !dbg !5519
  %cmp23 = icmp eq i32 %bf.clear22.pre-phi, 12, !dbg !5529
  %.insn.0 = select i1 %cmp23, %struct.rtx_def* null, %struct.rtx_def* %insn.0.lcssa, !dbg !5519
  br label %cleanup, !dbg !5519

cleanup.loopexit.us-lcssa:                        ; preds = %while.body
  br label %cleanup.loopexit, !dbg !5538

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  br label %cleanup, !dbg !5538

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  %retval.0 = phi %struct.rtx_def* [ %.insn.0, %while.end ], [ null, %cleanup.loopexit ], !dbg !5519
  ret %struct.rtx_def* %retval.0, !dbg !5538
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_operand_ok(%struct.rtx_def* %op) unnamed_addr #4 !dbg !5543 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op, metadata !5550, metadata !DIExpression()), !dbg !5551
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 0, !dbg !5552
  %bf.load = load i32, i32* %0, align 8, !dbg !5552
  %bf.clear = and i32 %bf.load, 65535, !dbg !5552
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5552
  br i1 %cmp, label %if.then, label %if.end, !dbg !5554

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5555
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5555
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5555
  %call = tail call i32 @side_effects_p(%struct.rtx_def* %1) #6, !dbg !5556
  %tobool = icmp eq i32 %call, 0, !dbg !5557
  br label %return, !dbg !5558

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @side_effects_p(%struct.rtx_def* %op) #6, !dbg !5559
  %tobool2 = icmp eq i32 %call1, 0, !dbg !5559
  br i1 %tobool2, label %if.end4, label %return, !dbg !5561

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @may_trap_p(%struct.rtx_def* %op) #6, !dbg !5562
  %tobool6 = icmp eq i32 %call5, 0, !dbg !5563
  br label %return, !dbg !5564

return:                                           ; preds = %if.end, %if.end4, %if.then
  %retval.0.shrunk = phi i1 [ %tobool, %if.then ], [ %tobool6, %if.end4 ], [ false, %if.end ]
  %retval.0 = zext i1 %retval.0.shrunk to i32, !dbg !5551
  ret i32 %retval.0, !dbg !5565
}

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !5566 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5570, metadata !DIExpression()), !dbg !5571
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5572
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5572
  %0 = load i32, i32* %rt_uint, align 8, !dbg !5572
  ret i32 %0, !dbg !5573
}

declare dso_local %struct.rtx_def* @gen_reg_rtx(i32) local_unnamed_addr #1

declare dso_local void @reorder_insns(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @noce_mem_write_may_trap_or_fault_p(%struct.rtx_def* %mem) unnamed_addr #4 !dbg !5574 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5578, metadata !DIExpression()), !dbg !5580
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 0, !dbg !5581
  %bf.load = load i32, i32* %0, align 8, !dbg !5581
  %bf.clear = and i32 %bf.load, 67108864, !dbg !5581
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !5581
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5583

if.end:                                           ; preds = %entry
  %call = tail call i32 @may_trap_or_fault_p(%struct.rtx_def* %mem) #6, !dbg !5584
  %tobool1 = icmp eq i32 %call, 0, !dbg !5584
  br i1 %tobool1, label %if.end3, label %cleanup, !dbg !5586

if.end3:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5587
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5587
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5587
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5579, metadata !DIExpression()), !dbg !5580
  %2 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 40), align 8, !dbg !5588
  %call4 = tail call %struct.rtx_def* %2(%struct.rtx_def* %1) #6, !dbg !5589
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5579, metadata !DIExpression()), !dbg !5580
  br label %while.cond, !dbg !5590

while.cond:                                       ; preds = %sw.epilog, %if.end3
  %addr.0 = phi %struct.rtx_def* [ %call4, %if.end3 ], [ %addr.1, %sw.epilog ], !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0, metadata !5579, metadata !DIExpression()), !dbg !5580
  %tobool5 = icmp eq %struct.rtx_def* %addr.0, null, !dbg !5590
  br i1 %tobool5, label %cleanup.loopexit, label %while.body, !dbg !5590

while.body:                                       ; preds = %while.cond
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0, i64 0, i32 0, !dbg !5591
  %bf.load6 = load i32, i32* %3, align 8, !dbg !5591
  %trunc = trunc i32 %bf.load6 to i16, !dbg !5592
  switch i16 %trunc, label %sw.default [
    i16 35, label %sw.bb
    i16 74, label %sw.bb
    i16 75, label %sw.bb
    i16 76, label %sw.bb
    i16 77, label %sw.bb
    i16 79, label %sw.bb
    i16 122, label %sw.bb12
    i16 78, label %sw.bb12
    i16 49, label %sw.bb17
    i16 44, label %cleanup.loopexit
    i16 45, label %sw.bb31
  ], !dbg !5592

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5593
  br label %sw.epilog, !dbg !5595

sw.bb12:                                          ; preds = %while.body, %while.body
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5596
  br label %sw.epilog, !dbg !5597

sw.bb17:                                          ; preds = %while.body
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5598
  %6 = bitcast %union.rtunion_def* %5 to i32**, !dbg !5598
  %7 = load i32*, i32** %6, align 8, !dbg !5598
  %bf.load22 = load i32, i32* %7, align 8, !dbg !5598
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5598
  %cmp = icmp eq i32 %bf.clear23, 30, !dbg !5598
  br i1 %cmp, label %if.then24, label %cleanup.loopexit, !dbg !5600

if.then24:                                        ; preds = %sw.bb17
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5601
  br label %sw.epilog, !dbg !5602

sw.bb31:                                          ; preds = %while.body
  %addr.0.lcssa8 = phi %struct.rtx_def* [ %addr.0, %while.body ], !dbg !5580
  %bf.load6.lcssa6 = phi i32 [ %bf.load6, %while.body ], !dbg !5591
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0.lcssa8, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0.lcssa8, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.0.lcssa8, metadata !5579, metadata !DIExpression()), !dbg !5580
  %bf.clear34 = and i32 %bf.load6.lcssa6, 67108864, !dbg !5603
  %tobool35 = icmp eq i32 %bf.clear34, 0, !dbg !5603
  br i1 %tobool35, label %cond.false, label %if.end53, !dbg !5605

cond.false:                                       ; preds = %sw.bb31
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr.0.lcssa8, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5603
  %rt_tree = bitcast %union.rtunion_def* %8 to %union.tree_node**, !dbg !5603
  %9 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !5603
  %tobool39 = icmp eq %union.tree_node* %9, null, !dbg !5603
  br i1 %tobool39, label %if.end53, label %land.lhs.true, !dbg !5605

land.lhs.true:                                    ; preds = %cond.false
  br label %cond.false45, !dbg !5606

land.lhs.true.cond.end_crit_edge:                 ; No predecessors!
  br label %cond.end, !dbg !5606

cond.false45:                                     ; preds = %land.lhs.true
  br label %cond.end, !dbg !5606

cond.end:                                         ; preds = %land.lhs.true.cond.end_crit_edge, %cond.false45
  %call50 = tail call zeroext i8 @decl_readonly_section(%union.tree_node* nonnull %9, i32 0) #6, !dbg !5607
  %tobool51 = icmp eq i8 %call50, 0, !dbg !5607
  br i1 %tobool51, label %if.end53, label %cleanup, !dbg !5608

if.end53:                                         ; preds = %cond.end, %cond.false, %sw.bb31
  br label %cleanup, !dbg !5609

sw.default:                                       ; preds = %while.body
  br label %cleanup, !dbg !5610

sw.epilog:                                        ; preds = %if.then24, %sw.bb12, %sw.bb
  %addr.1.in.in = phi %union.rtunion_def* [ %arrayidx27, %if.then24 ], [ %4, %sw.bb12 ], [ %arrayidx10, %sw.bb ]
  %addr.1.in = bitcast %union.rtunion_def* %addr.1.in.in to %struct.rtx_def**, !dbg !5611
  %addr.1 = load %struct.rtx_def*, %struct.rtx_def** %addr.1.in, align 8, !dbg !5611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr.1, metadata !5579, metadata !DIExpression()), !dbg !5580
  br label %while.cond, !dbg !5590, !llvm.loop !5612

cleanup.loopexit:                                 ; preds = %sw.bb17, %while.body, %while.cond
  %retval.0.ph = phi i8 [ 0, %while.cond ], [ 1, %while.body ], [ 0, %sw.bb17 ]
  br label %cleanup, !dbg !5614

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end, %if.end, %entry, %sw.default, %if.end53
  %retval.0 = phi i8 [ 0, %sw.default ], [ 0, %if.end53 ], [ 1, %entry ], [ 1, %if.end ], [ 1, %cond.end ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5580
  ret i8 %retval.0, !dbg !5614
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @noce_can_store_speculate_p(%struct.basic_block_def* %top_bb, %struct.rtx_def* %mem) unnamed_addr #4 !dbg !5615 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %top_bb, metadata !5619, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata %struct.rtx_def* %mem, metadata !5620, metadata !DIExpression()), !dbg !5626
  %call = tail call %struct.basic_block_def* @get_immediate_dominator(i32 2, %struct.basic_block_def* %top_bb) #6, !dbg !5627
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !5621, metadata !DIExpression()), !dbg !5626
  %arrayidx38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %mem, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5628
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !5628
  br label %for.cond, !dbg !5633

for.cond:                                         ; preds = %for.inc48, %entry
  %dominator.0 = phi %struct.basic_block_def* [ %call, %entry ], [ %call49, %for.inc48 ], !dbg !5634
  %retval.0 = phi i8 [ undef, %entry ], [ %retval.1, %for.inc48 ]
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dominator.0, metadata !5621, metadata !DIExpression()), !dbg !5626
  %cmp = icmp eq %struct.basic_block_def* %dominator.0, null, !dbg !5635
  br i1 %cmp, label %cleanup51, label %for.body, !dbg !5636

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %dominator.0, i64 0, i32 7, !dbg !5637
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5637
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5637
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !5637
  br label %for.cond1, !dbg !5637

for.cond1:                                        ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx47, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5638
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5622, metadata !DIExpression()), !dbg !5639
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5640
  br i1 %tobool, label %cleanup, label %land.rhs, !dbg !5640

land.rhs:                                         ; preds = %for.cond1
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5640
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !5640
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5640
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5640
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !5640
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5640
  %cmp4 = icmp eq %struct.rtx_def* %insn.0, %4, !dbg !5640
  br i1 %cmp4, label %cleanup, label %for.body5, !dbg !5637

for.body5:                                        ; preds = %land.rhs
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5641
  %bf.load = load i32, i32* %5, align 8, !dbg !5641
  %bf.clear = and i32 %bf.load, 65535, !dbg !5641
  %cmp6 = icmp eq i32 %bf.clear, 8, !dbg !5641
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !5641

lor.lhs.false:                                    ; preds = %for.body5
  %cmp9 = icmp eq i32 %bf.clear, 7, !dbg !5641
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !5641

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp13 = icmp eq i32 %bf.clear, 9, !dbg !5641
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false14, !dbg !5641

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %cmp17 = icmp eq i32 %bf.clear, 10, !dbg !5641
  br i1 %cmp17, label %land.lhs.true, label %if.end, !dbg !5643

land.lhs.true:                                    ; preds = %lor.lhs.false14, %lor.lhs.false10, %lor.lhs.false, %for.body5
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5644
  %6 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 0, i64 0, !dbg !5644
  %rt_rtx21 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !5644
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5644
  %call22 = tail call i32 @volatile_insn_p(%struct.rtx_def* %7) #6, !dbg !5645
  %tobool23 = icmp eq i32 %call22, 0, !dbg !5645
  br i1 %tobool23, label %lor.lhs.false24, label %cleanup, !dbg !5646

lor.lhs.false24:                                  ; preds = %land.lhs.true
  %bf.load25 = load i32, i32* %5, align 8, !dbg !5647
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !5647
  %cmp27 = icmp eq i32 %bf.clear26, 10, !dbg !5647
  br i1 %cmp27, label %land.lhs.true28, label %if.end, !dbg !5648

land.lhs.true28:                                  ; preds = %lor.lhs.false24
  %bf.clear30 = and i32 %bf.load25, 67108864, !dbg !5649
  %tobool31 = icmp eq i32 %bf.clear30, 0, !dbg !5649
  br i1 %tobool31, label %cleanup, label %if.end, !dbg !5650

if.end:                                           ; preds = %land.lhs.true28, %lor.lhs.false24, %lor.lhs.false14
  %call32 = tail call zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def* %mem, %struct.rtx_def* nonnull %insn.0) #6, !dbg !5651
  %tobool33 = icmp eq i8 %call32, 0, !dbg !5651
  br i1 %tobool33, label %if.end35, label %cleanup, !dbg !5653

if.end35:                                         ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !5654
  %call40 = tail call i32 @modified_in_p(%struct.rtx_def* %8, %struct.rtx_def* nonnull %insn.0) #6, !dbg !5655
  %tobool41 = icmp eq i32 %call40, 0, !dbg !5655
  br i1 %tobool41, label %for.inc, label %cleanup, !dbg !5656

for.inc:                                          ; preds = %if.end35
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5640
  %rt_rtx47 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !5640
  br label %for.cond1, !dbg !5640, !llvm.loop !5657

cleanup:                                          ; preds = %land.lhs.true28, %land.lhs.true, %if.end35, %if.end, %land.rhs, %for.cond1
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true28 ], [ false, %land.lhs.true ], [ false, %if.end ], [ false, %if.end35 ], [ true, %for.cond1 ], [ true, %land.rhs ]
  %retval.1 = phi i8 [ 0, %land.lhs.true28 ], [ 0, %land.lhs.true ], [ 1, %if.end ], [ 0, %if.end35 ], [ %retval.0, %for.cond1 ], [ %retval.0, %land.rhs ]
  br i1 %cleanup.dest.slot.0, label %for.inc48, label %cleanup51

for.inc48:                                        ; preds = %cleanup
  %call49 = tail call %struct.basic_block_def* @get_immediate_dominator(i32 2, %struct.basic_block_def* nonnull %dominator.0) #6, !dbg !5659
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call49, metadata !5621, metadata !DIExpression()), !dbg !5626
  br label %for.cond, !dbg !5660, !llvm.loop !5661

cleanup51:                                        ; preds = %for.cond, %cleanup
  %retval.2 = phi i8 [ %retval.1, %cleanup ], [ 0, %for.cond ], !dbg !5626
  ret i8 %retval.2, !dbg !5663
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_move(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5664 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5666, metadata !DIExpression()), !dbg !5671
  %cond1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5672
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !5672
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5667, metadata !DIExpression()), !dbg !5671
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5673
  %bf.load = load i32, i32* %1, align 8, !dbg !5673
  %bf.clear = and i32 %bf.load, 65535, !dbg !5673
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5668, metadata !DIExpression()), !dbg !5671
  %2 = and i32 %bf.load, 65534, !dbg !5674
  %switch = icmp eq i32 %2, 80, !dbg !5674
  br i1 %switch, label %if.end, label %cleanup, !dbg !5674

if.end:                                           ; preds = %entry
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5676
  %3 = bitcast %struct.rtx_def** %x to i32**, !dbg !5676
  %4 = load i32*, i32** %3, align 8, !dbg !5676
  %bf.load3 = load i32, i32* %4, align 8, !dbg !5676
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !5676
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !5676
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !5676
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5676
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5676
  %cmp5 = icmp eq i8 %5, 8, !dbg !5676
  br i1 %cmp5, label %land.lhs.true36, label %lor.lhs.false, !dbg !5676

lor.lhs.false:                                    ; preds = %if.end
  %cmp14 = icmp eq i8 %5, 9, !dbg !5676
  br i1 %cmp14, label %land.lhs.true36, label %lor.lhs.false16, !dbg !5676

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp24 = icmp eq i8 %5, 11, !dbg !5676
  br i1 %cmp24, label %land.lhs.true36, label %lor.lhs.false26, !dbg !5676

lor.lhs.false26:                                  ; preds = %lor.lhs.false16
  %cmp34 = icmp eq i8 %5, 17, !dbg !5676
  br i1 %cmp34, label %land.lhs.true36, label %lor.lhs.false151, !dbg !5676

land.lhs.true36:                                  ; preds = %lor.lhs.false26, %lor.lhs.false16, %lor.lhs.false, %if.end
  br i1 %cmp5, label %cond.true, label %lor.lhs.false46, !dbg !5676

lor.lhs.false46:                                  ; preds = %land.lhs.true36
  %cmp54 = icmp eq i8 %5, 9, !dbg !5676
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !5676

cond.true:                                        ; preds = %lor.lhs.false46, %land.lhs.true36
  br label %cond.end, !dbg !5676

cond.false:                                       ; preds = %lor.lhs.false46
  %arrayidx65 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5676
  %6 = load i8, i8* %arrayidx65, align 1, !dbg !5676
  %.pre = zext i8 %6 to i64, !dbg !5676
  %arrayidx69.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !5678
  %.pre2 = load i8, i8* %arrayidx69.phi.trans.insert, align 1, !dbg !5676
  br label %cond.end, !dbg !5676

cond.end:                                         ; preds = %cond.false, %cond.true
  %7 = phi i8 [ %.pre2, %cond.false ], [ %5, %cond.true ], !dbg !5676
  %cmp71 = icmp eq i8 %7, 9, !dbg !5676
  br i1 %cmp71, label %cond.true73, label %cond.false108, !dbg !5676

cond.true73:                                      ; preds = %cond.end
  br i1 %cmp5, label %cond.true93, label %lor.lhs.false83, !dbg !5676

lor.lhs.false83:                                  ; preds = %cond.true73
  %cmp91 = icmp eq i8 %5, 9, !dbg !5676
  br i1 %cmp91, label %cond.true93, label %cond.false98, !dbg !5676

cond.true93:                                      ; preds = %lor.lhs.false83, %cond.true73
  br label %cond.end106, !dbg !5676

cond.false98:                                     ; preds = %lor.lhs.false83
  %arrayidx104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5676
  %8 = load i8, i8* %arrayidx104, align 1, !dbg !5676
  %conv105 = zext i8 %8 to i32, !dbg !5676
  br label %cond.end106, !dbg !5676

cond.end106:                                      ; preds = %cond.false98, %cond.true93
  %cond107 = phi i32 [ %bf.clear4, %cond.true93 ], [ %conv105, %cond.false98 ], !dbg !5676
  br label %cond.end144, !dbg !5676

cond.false108:                                    ; preds = %cond.end
  br i1 %cmp5, label %cond.true128, label %lor.lhs.false118, !dbg !5676

lor.lhs.false118:                                 ; preds = %cond.false108
  %cmp126 = icmp eq i8 %5, 9, !dbg !5676
  br i1 %cmp126, label %cond.true128, label %cond.false133, !dbg !5676

cond.true128:                                     ; preds = %lor.lhs.false118, %cond.false108
  br label %cond.end141, !dbg !5676

cond.false133:                                    ; preds = %lor.lhs.false118
  %arrayidx139 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5676
  %9 = load i8, i8* %arrayidx139, align 1, !dbg !5676
  %conv140 = zext i8 %9 to i32, !dbg !5676
  br label %cond.end141, !dbg !5676

cond.end141:                                      ; preds = %cond.false133, %cond.true128
  %cond142 = phi i32 [ %bf.clear4, %cond.true128 ], [ %conv140, %cond.false133 ], !dbg !5676
  br label %cond.end144, !dbg !5676

cond.end144:                                      ; preds = %cond.end141, %cond.end106
  %cond145.in = phi i32 [ %cond107, %cond.end106 ], [ %cond142, %cond.end141 ]
  %cond145 = add nsw i32 %cond145.in, -38, !dbg !5676
  %idxprom146 = zext i32 %cond145 to i64, !dbg !5676
  %arrayidx147 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom146, !dbg !5676
  %10 = load %struct.real_format*, %struct.real_format** %arrayidx147, align 8, !dbg !5676
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %10, i64 0, i32 11, !dbg !5676
  %11 = load i8, i8* %has_nans, align 2, !dbg !5676
  %tobool = icmp eq i8 %11, 0, !dbg !5676
  %12 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5676
  %tobool150 = icmp ne i32 %12, 0, !dbg !5676
  %or.cond = or i1 %tobool, %tobool150, !dbg !5676
  br i1 %or.cond, label %lor.lhs.false151, label %cleanup, !dbg !5676

lor.lhs.false151:                                 ; preds = %cond.end144, %lor.lhs.false26
  br i1 %cmp5, label %land.lhs.true191, label %lor.lhs.false161, !dbg !5679

lor.lhs.false161:                                 ; preds = %lor.lhs.false151
  %cmp169 = icmp eq i8 %5, 9, !dbg !5679
  br i1 %cmp169, label %land.lhs.true191, label %lor.lhs.false171, !dbg !5679

lor.lhs.false171:                                 ; preds = %lor.lhs.false161
  %cmp179 = icmp eq i8 %5, 11, !dbg !5679
  br i1 %cmp179, label %land.lhs.true191, label %lor.lhs.false181, !dbg !5679

lor.lhs.false181:                                 ; preds = %lor.lhs.false171
  %cmp189 = icmp eq i8 %5, 17, !dbg !5679
  br i1 %cmp189, label %land.lhs.true191, label %if.end313, !dbg !5679

land.lhs.true191:                                 ; preds = %lor.lhs.false181, %lor.lhs.false171, %lor.lhs.false161, %lor.lhs.false151
  br i1 %cmp5, label %cond.true211, label %lor.lhs.false201, !dbg !5679

lor.lhs.false201:                                 ; preds = %land.lhs.true191
  %cmp209 = icmp eq i8 %5, 9, !dbg !5679
  br i1 %cmp209, label %cond.true211, label %cond.false216, !dbg !5679

cond.true211:                                     ; preds = %lor.lhs.false201, %land.lhs.true191
  br label %cond.end224, !dbg !5679

cond.false216:                                    ; preds = %lor.lhs.false201
  %arrayidx222 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5679
  %13 = load i8, i8* %arrayidx222, align 1, !dbg !5679
  %.pre3 = zext i8 %13 to i64, !dbg !5679
  %arrayidx227.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre3, !dbg !5678
  %.pre4 = load i8, i8* %arrayidx227.phi.trans.insert, align 1, !dbg !5679
  br label %cond.end224, !dbg !5679

cond.end224:                                      ; preds = %cond.false216, %cond.true211
  %14 = phi i8 [ %.pre4, %cond.false216 ], [ %5, %cond.true211 ], !dbg !5679
  %cmp229 = icmp eq i8 %14, 9, !dbg !5679
  br i1 %cmp229, label %cond.true231, label %cond.false268, !dbg !5679

cond.true231:                                     ; preds = %cond.end224
  br i1 %cmp5, label %cond.true251, label %lor.lhs.false241, !dbg !5679

lor.lhs.false241:                                 ; preds = %cond.true231
  %cmp249 = icmp eq i8 %5, 9, !dbg !5679
  br i1 %cmp249, label %cond.true251, label %cond.false256, !dbg !5679

cond.true251:                                     ; preds = %lor.lhs.false241, %cond.true231
  br label %cond.end264, !dbg !5679

cond.false256:                                    ; preds = %lor.lhs.false241
  %arrayidx262 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5679
  %15 = load i8, i8* %arrayidx262, align 1, !dbg !5679
  %conv263 = zext i8 %15 to i32, !dbg !5679
  br label %cond.end264, !dbg !5679

cond.end264:                                      ; preds = %cond.false256, %cond.true251
  %cond265 = phi i32 [ %bf.clear4, %cond.true251 ], [ %conv263, %cond.false256 ], !dbg !5679
  br label %cond.end304, !dbg !5679

cond.false268:                                    ; preds = %cond.end224
  br i1 %cmp5, label %cond.true288, label %lor.lhs.false278, !dbg !5679

lor.lhs.false278:                                 ; preds = %cond.false268
  %cmp286 = icmp eq i8 %5, 9, !dbg !5679
  br i1 %cmp286, label %cond.true288, label %cond.false293, !dbg !5679

cond.true288:                                     ; preds = %lor.lhs.false278, %cond.false268
  br label %cond.end301, !dbg !5679

cond.false293:                                    ; preds = %lor.lhs.false278
  %arrayidx299 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5679
  %16 = load i8, i8* %arrayidx299, align 1, !dbg !5679
  %conv300 = zext i8 %16 to i32, !dbg !5679
  br label %cond.end301, !dbg !5679

cond.end301:                                      ; preds = %cond.false293, %cond.true288
  %cond302 = phi i32 [ %bf.clear4, %cond.true288 ], [ %conv300, %cond.false293 ], !dbg !5679
  br label %cond.end304, !dbg !5679

cond.end304:                                      ; preds = %cond.end301, %cond.end264
  %cond305.in = phi i32 [ %cond265, %cond.end264 ], [ %cond302, %cond.end301 ]
  %cond305 = add nsw i32 %cond305.in, -38, !dbg !5679
  %idxprom306 = zext i32 %cond305 to i64, !dbg !5679
  %arrayidx307 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom306, !dbg !5679
  %17 = load %struct.real_format*, %struct.real_format** %arrayidx307, align 8, !dbg !5679
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %17, i64 0, i32 14, !dbg !5679
  %18 = load i8, i8* %has_signed_zero, align 1, !dbg !5679
  %tobool309 = icmp ne i8 %18, 0, !dbg !5679
  %19 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5679
  %tobool311 = icmp ne i32 %19, 0, !dbg !5679
  %or.cond1 = and i1 %tobool309, %tobool311, !dbg !5679
  br i1 %or.cond1, label %cleanup, label %if.end313, !dbg !5679

if.end313:                                        ; preds = %cond.end304, %lor.lhs.false181
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5680
  %20 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5680
  %arrayidx314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5682
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**, !dbg !5682
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5682
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %21) #6, !dbg !5683
  %tobool315 = icmp eq i32 %call, 0, !dbg !5683
  br i1 %tobool315, label %if.end313.lor.lhs.false323_crit_edge, label %land.lhs.true316, !dbg !5684

if.end313.lor.lhs.false323_crit_edge:             ; preds = %if.end313
  br label %lor.lhs.false323, !dbg !5684

land.lhs.true316:                                 ; preds = %if.end313
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5685
  %22 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !5685
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5686
  %rt_rtx320 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5686
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx320, align 8, !dbg !5686
  %call321 = tail call i32 @rtx_equal_p(%struct.rtx_def* %22, %struct.rtx_def* %24) #6, !dbg !5687
  %tobool322 = icmp eq i32 %call321, 0, !dbg !5687
  br i1 %tobool322, label %lor.lhs.false323, label %if.then339, !dbg !5688

lor.lhs.false323:                                 ; preds = %if.end313.lor.lhs.false323_crit_edge, %land.lhs.true316
  %25 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5689
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5690
  %rt_rtx328 = bitcast %union.rtunion_def* %26 to %struct.rtx_def**, !dbg !5690
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !5690
  %call329 = tail call i32 @rtx_equal_p(%struct.rtx_def* %25, %struct.rtx_def* %27) #6, !dbg !5691
  %tobool330 = icmp eq i32 %call329, 0, !dbg !5691
  br i1 %tobool330, label %cleanup, label %land.lhs.true331, !dbg !5692

land.lhs.true331:                                 ; preds = %lor.lhs.false323
  %b332 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5693
  %28 = load %struct.rtx_def*, %struct.rtx_def** %b332, align 8, !dbg !5693
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5694
  %call337 = tail call i32 @rtx_equal_p(%struct.rtx_def* %28, %struct.rtx_def* %29) #6, !dbg !5695
  %tobool338 = icmp eq i32 %call337, 0, !dbg !5695
  br i1 %tobool338, label %cleanup, label %if.then339, !dbg !5696

if.then339:                                       ; preds = %land.lhs.true316, %land.lhs.true331
  %cmp340 = icmp eq i32 %bf.clear, 81, !dbg !5697
  br i1 %cmp340, label %cond.true342, label %cond.false344, !dbg !5699

cond.true342:                                     ; preds = %if.then339
  br label %cond.end346, !dbg !5699

cond.false344:                                    ; preds = %if.then339
  %b345 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5700
  br label %cond.end346, !dbg !5699

cond.end346:                                      ; preds = %cond.false344, %cond.true342
  %cond347.in = phi %struct.rtx_def** [ %a, %cond.true342 ], [ %b345, %cond.false344 ]
  %cond347 = load %struct.rtx_def*, %struct.rtx_def** %cond347.in, align 8, !dbg !5699
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond347, metadata !5669, metadata !DIExpression()), !dbg !5671
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5701
  %call349 = tail call i32 @rtx_equal_p(%struct.rtx_def* %30, %struct.rtx_def* %cond347) #6, !dbg !5703
  %tobool350 = icmp eq i32 %call349, 0, !dbg !5703
  br i1 %tobool350, label %if.then351, label %cleanup, !dbg !5704

if.then351:                                       ; preds = %cond.end346
  tail call void @start_sequence() #6, !dbg !5705
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5707
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %31, %struct.rtx_def* %cond347) #7, !dbg !5708
  %call353 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !5709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call353, metadata !5670, metadata !DIExpression()), !dbg !5671
  %tobool354 = icmp eq %struct.rtx_def* %call353, null, !dbg !5710
  br i1 %tobool354, label %cleanup, label %if.end356, !dbg !5712

if.end356:                                        ; preds = %if.then351
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5713
  %32 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !5713
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !5714
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !5714
  %arrayidx359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i64 0, i32 1, i32 0, i32 2, !dbg !5714
  %rt_int = bitcast i64* %arrayidx359 to i32*, !dbg !5714
  %34 = load i32, i32* %rt_int, align 8, !dbg !5714
  %call360 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call353, %struct.rtx_def* %32, i32 %34) #6, !dbg !5715
  br label %cleanup, !dbg !5716

cleanup:                                          ; preds = %if.then351, %cond.end346, %land.lhs.true331, %lor.lhs.false323, %entry, %if.end356, %cond.end144, %cond.end304
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %cond.end304 ], [ 0, %cond.end144 ], [ 0, %if.then351 ], [ 1, %if.end356 ], [ 1, %cond.end346 ], [ 0, %land.lhs.true331 ], [ 0, %lor.lhs.false323 ], !dbg !5671
  ret i32 %retval.0, !dbg !5717
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_store_flag(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5718 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5720, metadata !DIExpression()), !dbg !5724
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5725
  %0 = bitcast %struct.rtx_def** %b to i32**, !dbg !5725
  %1 = load i32*, i32** %0, align 8, !dbg !5725
  %bf.load = load i32, i32* %1, align 8, !dbg !5725
  %bf.clear = and i32 %bf.load, 65535, !dbg !5725
  %cmp = icmp eq i32 %bf.clear, 30, !dbg !5725
  %2 = bitcast i32* %1 to %struct.rtx_def*, !dbg !5727
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5727

land.lhs.true:                                    ; preds = %entry
  %u = getelementptr inbounds i32, i32* %1, i64 2, !dbg !5728
  %arrayidx = bitcast i32* %u to i64*, !dbg !5728
  %3 = load i64, i64* %arrayidx, align 8, !dbg !5728
  %cmp2 = icmp eq i64 %3, 1, !dbg !5729
  br i1 %cmp2, label %land.lhs.true3, label %if.else, !dbg !5730

land.lhs.true3:                                   ; preds = %land.lhs.true
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5731
  %4 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5731
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5732
  %cmp4 = icmp eq %struct.rtx_def* %4, %5, !dbg !5733
  br i1 %cmp4, label %if.end22, label %if.else, !dbg !5734

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5735
  %cmp6 = icmp eq %struct.rtx_def* %6, %2, !dbg !5737
  br i1 %cmp6, label %land.lhs.true7, label %cleanup, !dbg !5738

land.lhs.true7:                                   ; preds = %if.else
  %a8 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5739
  %7 = bitcast %struct.rtx_def** %a8 to i32**, !dbg !5739
  %8 = load i32*, i32** %7, align 8, !dbg !5739
  %bf.load9 = load i32, i32* %8, align 8, !dbg !5739
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5739
  %cmp11 = icmp eq i32 %bf.clear10, 30, !dbg !5739
  br i1 %cmp11, label %land.lhs.true12, label %cleanup, !dbg !5740

land.lhs.true12:                                  ; preds = %land.lhs.true7
  %u14 = getelementptr inbounds i32, i32* %8, i64 2, !dbg !5741
  %arrayidx16 = bitcast i32* %u14 to i64*, !dbg !5741
  %9 = load i64, i64* %arrayidx16, align 8, !dbg !5741
  %cmp17 = icmp eq i64 %9, 1, !dbg !5742
  br i1 %cmp17, label %land.lhs.true18, label %cleanup, !dbg !5743

land.lhs.true18:                                  ; preds = %land.lhs.true12
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5744
  %10 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !5744
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5745
  %11 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !5745
  %call = tail call i32 @reversed_comparison_code(%struct.rtx_def* %10, %struct.rtx_def* %11) #6, !dbg !5746
  %cmp19 = icmp eq i32 %call, 0, !dbg !5747
  br i1 %cmp19, label %cleanup, label %if.end22, !dbg !5748

if.end22:                                         ; preds = %land.lhs.true18, %land.lhs.true3
  %reversep.0 = phi i32 [ 0, %land.lhs.true3 ], [ 1, %land.lhs.true18 ], !dbg !5749
  call void @llvm.dbg.value(metadata i32 %reversep.0, metadata !5721, metadata !DIExpression()), !dbg !5724
  tail call void @start_sequence() #6, !dbg !5750
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5751
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5751
  %call23 = tail call fastcc %struct.rtx_def* @noce_emit_store_flag(%struct.noce_if_info* %if_info, %struct.rtx_def* %12, i32 %reversep.0, i32 0) #7, !dbg !5752
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call23, metadata !5722, metadata !DIExpression()), !dbg !5724
  %tobool = icmp eq %struct.rtx_def* %call23, null, !dbg !5753
  br i1 %tobool, label %if.else38, label %if.then24, !dbg !5755

if.then24:                                        ; preds = %if.end22
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5756
  %cmp26 = icmp eq %struct.rtx_def* %call23, %13, !dbg !5759
  br i1 %cmp26, label %if.end29, label %if.then27, !dbg !5760

if.then27:                                        ; preds = %if.then24
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %13, %struct.rtx_def* nonnull %call23) #7, !dbg !5761
  br label %if.end29, !dbg !5761

if.end29:                                         ; preds = %if.then24, %if.then27
  %call30 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !5762
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call30, metadata !5723, metadata !DIExpression()), !dbg !5724
  %tobool31 = icmp eq %struct.rtx_def* %call30, null, !dbg !5763
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !5765

if.end33:                                         ; preds = %if.end29
  %jump34 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5766
  %14 = load %struct.rtx_def*, %struct.rtx_def** %jump34, align 8, !dbg !5766
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !5767
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !5767
  %arrayidx36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 2, !dbg !5767
  %rt_int = bitcast i64* %arrayidx36 to i32*, !dbg !5767
  %16 = load i32, i32* %rt_int, align 8, !dbg !5767
  %call37 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call30, %struct.rtx_def* %14, i32 %16) #6, !dbg !5768
  br label %cleanup, !dbg !5769

if.else38:                                        ; preds = %if.end22
  tail call void @end_sequence() #6, !dbg !5770
  br label %cleanup, !dbg !5772

cleanup:                                          ; preds = %if.end29, %land.lhs.true18, %if.else, %land.lhs.true7, %land.lhs.true12, %if.else38, %if.end33
  %retval.0 = phi i32 [ 1, %if.end33 ], [ 0, %if.else38 ], [ 0, %land.lhs.true18 ], [ 0, %land.lhs.true12 ], [ 0, %land.lhs.true7 ], [ 0, %if.else ], [ 0, %if.end29 ], !dbg !5724
  ret i32 %retval.0, !dbg !5773
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_bitop(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5774 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5776, metadata !DIExpression()), !dbg !5785
  %x1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5786
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x1, align 8, !dbg !5786
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !5778, metadata !DIExpression()), !dbg !5785
  %cond2 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5787
  %1 = load %struct.rtx_def*, %struct.rtx_def** %cond2, align 8, !dbg !5787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5777, metadata !DIExpression()), !dbg !5785
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !5788
  %bf.load = load i32, i32* %2, align 8, !dbg !5788
  %bf.clear = and i32 %bf.load, 65535, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5783, metadata !DIExpression()), !dbg !5785
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5789
  %3 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !5789
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %3) #6, !dbg !5791
  %tobool = icmp ne i32 %call, 0, !dbg !5791
  %4 = and i32 %bf.load, 65534, !dbg !5792
  %switch = icmp eq i32 %4, 80, !dbg !5792
  %or.cond2 = and i1 %tobool, %switch, !dbg !5794
  br i1 %or.cond2, label %if.end5, label %cleanup, !dbg !5794

if.end5:                                          ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5795
  %rt_rtx = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !5795
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5795
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5797
  %cmp6 = icmp eq %struct.rtx_def* %6, %7, !dbg !5798
  br i1 %cmp6, label %if.end8, label %cleanup, !dbg !5799

if.end8:                                          ; preds = %if.end5
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5800
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5800
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5800
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !5777, metadata !DIExpression()), !dbg !5785
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !5801
  %bf.load13 = load i32, i32* %9, align 8, !dbg !5801
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5801
  %cmp15 = icmp eq i32 %bf.clear14, 120, !dbg !5803
  br i1 %cmp15, label %if.then16, label %cleanup, !dbg !5804

if.then16:                                        ; preds = %if.end8
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5805
  %rt_rtx20 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !5805
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5805
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5808
  %cmp21 = icmp eq %struct.rtx_def* %11, %12, !dbg !5809
  br i1 %cmp21, label %lor.lhs.false, label %cleanup, !dbg !5810

lor.lhs.false:                                    ; preds = %if.then16
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5811
  %14 = bitcast %union.rtunion_def* %13 to i32**, !dbg !5811
  %15 = load i32*, i32** %14, align 8, !dbg !5811
  %bf.load26 = load i32, i32* %15, align 8, !dbg !5811
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !5811
  %cmp28 = icmp eq i32 %bf.clear27, 30, !dbg !5811
  br i1 %cmp28, label %lor.lhs.false29, label %cleanup, !dbg !5812

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5813
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5813
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !5813
  %call34 = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %16) #6, !dbg !5814
  %tobool35 = icmp eq i32 %call34, 0, !dbg !5814
  br i1 %tobool35, label %cleanup, label %if.end37, !dbg !5815

if.end37:                                         ; preds = %lor.lhs.false29
  %rt_rtx41 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !5816
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !5816
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, !dbg !5816
  %arrayidx43 = bitcast %union.u* %u42 to i64*, !dbg !5816
  %18 = load i64, i64* %arrayidx43, align 8, !dbg !5816
  %conv = trunc i64 %18 to i32, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5784, metadata !DIExpression()), !dbg !5785
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !5817
  %bf.load44 = load i32, i32* %19, align 8, !dbg !5817
  %bf.lshr = lshr i32 %bf.load44, 16, !dbg !5817
  %bf.clear45 = and i32 %bf.lshr, 255, !dbg !5817
  call void @llvm.dbg.value(metadata i32 %bf.clear45, metadata !5782, metadata !DIExpression()), !dbg !5785
  %20 = icmp ugt i32 %conv, 63, !dbg !5818
  br i1 %20, label %cleanup, label %if.end53, !dbg !5818

if.end53:                                         ; preds = %if.end37
  %a54 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5820
  %21 = load %struct.rtx_def*, %struct.rtx_def** %a54, align 8, !dbg !5820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %21, metadata !5779, metadata !DIExpression()), !dbg !5785
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 0, !dbg !5821
  %bf.load55 = load i32, i32* %22, align 8, !dbg !5821
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !5821
  %cmp57 = icmp eq i32 %bf.clear56, 62, !dbg !5823
  br i1 %cmp57, label %if.then64, label %lor.lhs.false59, !dbg !5824

lor.lhs.false59:                                  ; preds = %if.end53
  %cmp62 = icmp eq i32 %bf.clear56, 63, !dbg !5825
  br i1 %cmp62, label %if.then64, label %if.else116, !dbg !5826

if.then64:                                        ; preds = %lor.lhs.false59, %if.end53
  %arrayidx67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5827
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !5827
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !5827
  %call69 = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %23) #6, !dbg !5830
  %tobool70 = icmp eq i32 %call69, 0, !dbg !5830
  br i1 %tobool70, label %cleanup, label %lor.lhs.false71, !dbg !5831

lor.lhs.false71:                                  ; preds = %if.then64
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5832
  %25 = bitcast %union.rtunion_def* %24 to i32**, !dbg !5832
  %26 = load i32*, i32** %25, align 8, !dbg !5832
  %bf.load76 = load i32, i32* %26, align 8, !dbg !5832
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !5832
  %cmp78 = icmp eq i32 %bf.clear77, 30, !dbg !5832
  br i1 %cmp78, label %lor.lhs.false80, label %cleanup, !dbg !5833

lor.lhs.false80:                                  ; preds = %lor.lhs.false71
  %u85 = getelementptr inbounds i32, i32* %26, i64 2, !dbg !5834
  %arrayidx87 = bitcast i32* %u85 to i64*, !dbg !5834
  %27 = load i64, i64* %arrayidx87, align 8, !dbg !5834
  %idxprom = zext i32 %bf.clear45 to i64, !dbg !5835
  %arrayidx88 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom, !dbg !5835
  %28 = load i64, i64* %arrayidx88, align 8, !dbg !5835
  %and = and i64 %27, %28, !dbg !5836
  %sh_prom = and i64 %18, 4294967295, !dbg !5837
  %shl = shl i64 1, %sh_prom, !dbg !5837
  %cmp89 = icmp eq i64 %and, %shl, !dbg !5838
  br i1 %cmp89, label %if.end92, label %cleanup, !dbg !5839

if.end92:                                         ; preds = %lor.lhs.false80
  %bf.load93 = load i32, i32* %22, align 8, !dbg !5840
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !5840
  %cmp95 = icmp eq i32 %bf.clear94, 62, !dbg !5842
  %cmp98 = icmp eq i32 %bf.clear, 80, !dbg !5843
  br i1 %cmp95, label %if.then97, label %if.else101, !dbg !5844

if.then97:                                        ; preds = %if.end92
  %. = select i1 %cmp98, %struct.rtx_def* %21, %struct.rtx_def* null, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.rtx_def* %., metadata !5780, metadata !DIExpression()), !dbg !5785
  br label %if.end166, !dbg !5846

if.else101:                                       ; preds = %if.end92
  br i1 %cmp98, label %if.then104, label %if.else109, !dbg !5847

if.then104:                                       ; preds = %if.else101
  %call107 = tail call %struct.rtx_def* @gen_int_mode(i64 %shl, i32 %bf.clear45) #6, !dbg !5848
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !5780, metadata !DIExpression()), !dbg !5785
  %call108 = tail call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %bf.clear45, %struct.rtx_def* %0, %struct.rtx_def* %call107) #6, !dbg !5851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call108, metadata !5780, metadata !DIExpression()), !dbg !5785
  br label %if.end166, !dbg !5852

if.else109:                                       ; preds = %if.else101
  %neg = xor i64 %shl, -1, !dbg !5853
  %call112 = tail call %struct.rtx_def* @gen_int_mode(i64 %neg, i32 %bf.clear45) #6, !dbg !5855
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call112, metadata !5780, metadata !DIExpression()), !dbg !5785
  %call113 = tail call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %bf.clear45, %struct.rtx_def* %0, %struct.rtx_def* %call112) #6, !dbg !5856
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call113, metadata !5780, metadata !DIExpression()), !dbg !5785
  br label %if.end166

if.else116:                                       ; preds = %lor.lhs.false59
  %cmp119 = icmp eq i32 %bf.clear56, 61, !dbg !5857
  br i1 %cmp119, label %if.then121, label %cleanup, !dbg !5859

if.then121:                                       ; preds = %if.else116
  %arrayidx124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5860
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !5860
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx125, align 8, !dbg !5860
  %call126 = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %29) #6, !dbg !5863
  %tobool127 = icmp eq i32 %call126, 0, !dbg !5863
  br i1 %tobool127, label %cleanup, label %lor.lhs.false128, !dbg !5864

lor.lhs.false128:                                 ; preds = %if.then121
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5865
  %31 = bitcast %union.rtunion_def* %30 to i32**, !dbg !5865
  %32 = load i32*, i32** %31, align 8, !dbg !5865
  %bf.load133 = load i32, i32* %32, align 8, !dbg !5865
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !5865
  %cmp135 = icmp eq i32 %bf.clear134, 30, !dbg !5865
  br i1 %cmp135, label %lor.lhs.false137, label %cleanup, !dbg !5866

lor.lhs.false137:                                 ; preds = %lor.lhs.false128
  %u142 = getelementptr inbounds i32, i32* %32, i64 2, !dbg !5867
  %arrayidx144 = bitcast i32* %u142 to i64*, !dbg !5867
  %33 = load i64, i64* %arrayidx144, align 8, !dbg !5867
  %idxprom145 = zext i32 %bf.clear45 to i64, !dbg !5868
  %arrayidx146 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom145, !dbg !5868
  %34 = load i64, i64* %arrayidx146, align 8, !dbg !5868
  %sh_prom148 = and i64 %18, 4294967295, !dbg !5869
  %shl149 = shl i64 1, %sh_prom148, !dbg !5869
  %neg150 = xor i64 %shl149, -1, !dbg !5870
  %35 = xor i64 %33, %neg150, !dbg !5871
  %36 = and i64 %35, %34, !dbg !5871
  %cmp154 = icmp eq i64 %36, 0, !dbg !5871
  br i1 %cmp154, label %if.end157, label %cleanup, !dbg !5872

if.end157:                                        ; preds = %lor.lhs.false137
  %cmp158 = icmp eq i32 %bf.clear, 81, !dbg !5873
  %.1 = select i1 %cmp158, %struct.rtx_def* %21, %struct.rtx_def* null, !dbg !5874
  call void @llvm.dbg.value(metadata %struct.rtx_def* %.1, metadata !5780, metadata !DIExpression()), !dbg !5785
  br label %if.end166

if.end166:                                        ; preds = %if.then97, %if.else109, %if.then104, %if.end157
  %result.2 = phi %struct.rtx_def* [ %.1, %if.end157 ], [ %., %if.then97 ], [ %call108, %if.then104 ], [ %call113, %if.else109 ], !dbg !5875
  call void @llvm.dbg.value(metadata %struct.rtx_def* %result.2, metadata !5780, metadata !DIExpression()), !dbg !5785
  %tobool167 = icmp eq %struct.rtx_def* %result.2, null, !dbg !5876
  br i1 %tobool167, label %cleanup, label %if.then168, !dbg !5878

if.then168:                                       ; preds = %if.end166
  tail call void @start_sequence() #6, !dbg !5879
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %0, %struct.rtx_def* nonnull %result.2) #7, !dbg !5881
  %call169 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !5882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call169, metadata !5781, metadata !DIExpression()), !dbg !5785
  %tobool170 = icmp eq %struct.rtx_def* %call169, null, !dbg !5883
  br i1 %tobool170, label %cleanup, label %if.end172, !dbg !5885

if.end172:                                        ; preds = %if.then168
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5886
  %37 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !5886
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !5887
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !5887
  %arrayidx175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i64 0, i32 1, i32 0, i32 2, !dbg !5887
  %rt_int = bitcast i64* %arrayidx175 to i32*, !dbg !5887
  %39 = load i32, i32* %rt_int, align 8, !dbg !5887
  %call176 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call169, %struct.rtx_def* %37, i32 %39) #6, !dbg !5888
  br label %cleanup, !dbg !5889

cleanup:                                          ; preds = %lor.lhs.false80, %if.then64, %if.then168, %if.end166, %lor.lhs.false137, %if.then121, %lor.lhs.false29, %if.then16, %if.end5, %if.end172, %if.else116, %lor.lhs.false128, %lor.lhs.false71, %if.end8, %if.end37, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end5 ], [ 0, %lor.lhs.false29 ], [ 0, %lor.lhs.false ], [ 0, %if.then16 ], [ 0, %if.end37 ], [ 0, %if.end8 ], [ 0, %lor.lhs.false80 ], [ 0, %lor.lhs.false71 ], [ 0, %if.then64 ], [ 0, %lor.lhs.false137 ], [ 0, %lor.lhs.false128 ], [ 0, %if.then121 ], [ 0, %if.else116 ], [ 0, %if.then168 ], [ 1, %if.end172 ], [ 1, %if.end166 ], !dbg !5785
  ret i32 %retval.0, !dbg !5890
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_minmax(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5891 {
entry:
  %earliest = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5893, metadata !DIExpression()), !dbg !5901
  %0 = bitcast %struct.rtx_def** %earliest to i8*, !dbg !5902
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5902
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5903
  %1 = bitcast %struct.rtx_def** %x to i32**, !dbg !5903
  %2 = load i32*, i32** %1, align 8, !dbg !5903
  %bf.load = load i32, i32* %2, align 8, !dbg !5903
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5903
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5903
  %idxprom = zext i32 %bf.clear to i64, !dbg !5903
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5903
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5903
  %cmp = icmp eq i8 %3, 8, !dbg !5903
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5903

lor.lhs.false:                                    ; preds = %entry
  %cmp9 = icmp eq i8 %3, 9, !dbg !5903
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false11, !dbg !5903

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i8 %3, 11, !dbg !5903
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false21, !dbg !5903

lor.lhs.false21:                                  ; preds = %lor.lhs.false11
  %cmp29 = icmp eq i8 %3, 17, !dbg !5903
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false145, !dbg !5903

land.lhs.true:                                    ; preds = %lor.lhs.false21, %lor.lhs.false11, %lor.lhs.false, %entry
  br i1 %cmp, label %cond.true, label %lor.lhs.false40, !dbg !5903

lor.lhs.false40:                                  ; preds = %land.lhs.true
  %cmp48 = icmp eq i8 %3, 9, !dbg !5903
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !5903

cond.true:                                        ; preds = %lor.lhs.false40, %land.lhs.true
  br label %cond.end, !dbg !5903

cond.false:                                       ; preds = %lor.lhs.false40
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5903
  %4 = load i8, i8* %arrayidx59, align 1, !dbg !5903
  %.pre = zext i8 %4 to i64, !dbg !5903
  %arrayidx63.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !5905
  %.pre2 = load i8, i8* %arrayidx63.phi.trans.insert, align 1, !dbg !5903
  br label %cond.end, !dbg !5903

cond.end:                                         ; preds = %cond.false, %cond.true
  %5 = phi i8 [ %.pre2, %cond.false ], [ %3, %cond.true ], !dbg !5903
  %cmp65 = icmp eq i8 %5, 9, !dbg !5903
  br i1 %cmp65, label %cond.true67, label %cond.false102, !dbg !5903

cond.true67:                                      ; preds = %cond.end
  br i1 %cmp, label %cond.true87, label %lor.lhs.false77, !dbg !5903

lor.lhs.false77:                                  ; preds = %cond.true67
  %cmp85 = icmp eq i8 %3, 9, !dbg !5903
  br i1 %cmp85, label %cond.true87, label %cond.false92, !dbg !5903

cond.true87:                                      ; preds = %lor.lhs.false77, %cond.true67
  br label %cond.end100, !dbg !5903

cond.false92:                                     ; preds = %lor.lhs.false77
  %arrayidx98 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5903
  %6 = load i8, i8* %arrayidx98, align 1, !dbg !5903
  %conv99 = zext i8 %6 to i32, !dbg !5903
  br label %cond.end100, !dbg !5903

cond.end100:                                      ; preds = %cond.false92, %cond.true87
  %cond101 = phi i32 [ %bf.clear, %cond.true87 ], [ %conv99, %cond.false92 ], !dbg !5903
  br label %cond.end138, !dbg !5903

cond.false102:                                    ; preds = %cond.end
  br i1 %cmp, label %cond.true122, label %lor.lhs.false112, !dbg !5903

lor.lhs.false112:                                 ; preds = %cond.false102
  %cmp120 = icmp eq i8 %3, 9, !dbg !5903
  br i1 %cmp120, label %cond.true122, label %cond.false127, !dbg !5903

cond.true122:                                     ; preds = %lor.lhs.false112, %cond.false102
  br label %cond.end135, !dbg !5903

cond.false127:                                    ; preds = %lor.lhs.false112
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5903
  %7 = load i8, i8* %arrayidx133, align 1, !dbg !5903
  %conv134 = zext i8 %7 to i32, !dbg !5903
  br label %cond.end135, !dbg !5903

cond.end135:                                      ; preds = %cond.false127, %cond.true122
  %cond136 = phi i32 [ %bf.clear, %cond.true122 ], [ %conv134, %cond.false127 ], !dbg !5903
  br label %cond.end138, !dbg !5903

cond.end138:                                      ; preds = %cond.end135, %cond.end100
  %cond139.in = phi i32 [ %cond101, %cond.end100 ], [ %cond136, %cond.end135 ]
  %cond139 = add nsw i32 %cond139.in, -38, !dbg !5903
  %idxprom140 = zext i32 %cond139 to i64, !dbg !5903
  %arrayidx141 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom140, !dbg !5903
  %8 = load %struct.real_format*, %struct.real_format** %arrayidx141, align 8, !dbg !5903
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %8, i64 0, i32 14, !dbg !5903
  %9 = load i8, i8* %has_signed_zero, align 1, !dbg !5903
  %tobool = icmp ne i8 %9, 0, !dbg !5903
  %10 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5903
  %tobool144 = icmp ne i32 %10, 0, !dbg !5903
  %or.cond = and i1 %tobool, %tobool144, !dbg !5903
  br i1 %or.cond, label %cleanup, label %lor.lhs.false145, !dbg !5903

lor.lhs.false145:                                 ; preds = %cond.end138, %lor.lhs.false21
  br i1 %cmp, label %land.lhs.true185, label %lor.lhs.false155, !dbg !5906

lor.lhs.false155:                                 ; preds = %lor.lhs.false145
  %cmp163 = icmp eq i8 %3, 9, !dbg !5906
  br i1 %cmp163, label %land.lhs.true185, label %lor.lhs.false165, !dbg !5906

lor.lhs.false165:                                 ; preds = %lor.lhs.false155
  %cmp173 = icmp eq i8 %3, 11, !dbg !5906
  br i1 %cmp173, label %land.lhs.true185, label %lor.lhs.false175, !dbg !5906

lor.lhs.false175:                                 ; preds = %lor.lhs.false165
  %cmp183 = icmp eq i8 %3, 17, !dbg !5906
  br i1 %cmp183, label %land.lhs.true185, label %if.end, !dbg !5906

land.lhs.true185:                                 ; preds = %lor.lhs.false175, %lor.lhs.false165, %lor.lhs.false155, %lor.lhs.false145
  br i1 %cmp, label %cond.true205, label %lor.lhs.false195, !dbg !5906

lor.lhs.false195:                                 ; preds = %land.lhs.true185
  %cmp203 = icmp eq i8 %3, 9, !dbg !5906
  br i1 %cmp203, label %cond.true205, label %cond.false210, !dbg !5906

cond.true205:                                     ; preds = %lor.lhs.false195, %land.lhs.true185
  br label %cond.end218, !dbg !5906

cond.false210:                                    ; preds = %lor.lhs.false195
  %arrayidx216 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5906
  %11 = load i8, i8* %arrayidx216, align 1, !dbg !5906
  %.pre3 = zext i8 %11 to i64, !dbg !5906
  %arrayidx221.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre3, !dbg !5905
  %.pre4 = load i8, i8* %arrayidx221.phi.trans.insert, align 1, !dbg !5906
  br label %cond.end218, !dbg !5906

cond.end218:                                      ; preds = %cond.false210, %cond.true205
  %12 = phi i8 [ %.pre4, %cond.false210 ], [ %3, %cond.true205 ], !dbg !5906
  %cmp223 = icmp eq i8 %12, 9, !dbg !5906
  br i1 %cmp223, label %cond.true225, label %cond.false262, !dbg !5906

cond.true225:                                     ; preds = %cond.end218
  br i1 %cmp, label %cond.true245, label %lor.lhs.false235, !dbg !5906

lor.lhs.false235:                                 ; preds = %cond.true225
  %cmp243 = icmp eq i8 %3, 9, !dbg !5906
  br i1 %cmp243, label %cond.true245, label %cond.false250, !dbg !5906

cond.true245:                                     ; preds = %lor.lhs.false235, %cond.true225
  br label %cond.end258, !dbg !5906

cond.false250:                                    ; preds = %lor.lhs.false235
  %arrayidx256 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5906
  %13 = load i8, i8* %arrayidx256, align 1, !dbg !5906
  %conv257 = zext i8 %13 to i32, !dbg !5906
  br label %cond.end258, !dbg !5906

cond.end258:                                      ; preds = %cond.false250, %cond.true245
  %cond259 = phi i32 [ %bf.clear, %cond.true245 ], [ %conv257, %cond.false250 ], !dbg !5906
  br label %cond.end298, !dbg !5906

cond.false262:                                    ; preds = %cond.end218
  br i1 %cmp, label %cond.true282, label %lor.lhs.false272, !dbg !5906

lor.lhs.false272:                                 ; preds = %cond.false262
  %cmp280 = icmp eq i8 %3, 9, !dbg !5906
  br i1 %cmp280, label %cond.true282, label %cond.false287, !dbg !5906

cond.true282:                                     ; preds = %lor.lhs.false272, %cond.false262
  br label %cond.end295, !dbg !5906

cond.false287:                                    ; preds = %lor.lhs.false272
  %arrayidx293 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5906
  %14 = load i8, i8* %arrayidx293, align 1, !dbg !5906
  %conv294 = zext i8 %14 to i32, !dbg !5906
  br label %cond.end295, !dbg !5906

cond.end295:                                      ; preds = %cond.false287, %cond.true282
  %cond296 = phi i32 [ %bf.clear, %cond.true282 ], [ %conv294, %cond.false287 ], !dbg !5906
  br label %cond.end298, !dbg !5906

cond.end298:                                      ; preds = %cond.end295, %cond.end258
  %cond299.in = phi i32 [ %cond259, %cond.end258 ], [ %cond296, %cond.end295 ]
  %cond299 = add nsw i32 %cond299.in, -38, !dbg !5906
  %idxprom300 = zext i32 %cond299 to i64, !dbg !5906
  %arrayidx301 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom300, !dbg !5906
  %15 = load %struct.real_format*, %struct.real_format** %arrayidx301, align 8, !dbg !5906
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %15, i64 0, i32 11, !dbg !5906
  %16 = load i8, i8* %has_nans, align 2, !dbg !5906
  %tobool303 = icmp eq i8 %16, 0, !dbg !5906
  %17 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5906
  %tobool305 = icmp ne i32 %17, 0, !dbg !5906
  %or.cond1 = or i1 %tobool303, %tobool305, !dbg !5906
  br i1 %or.cond1, label %if.end, label %cleanup, !dbg !5906

if.end:                                           ; preds = %cond.end298, %lor.lhs.false175
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5907
  %18 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5907
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5901
  %call = call fastcc %struct.rtx_def* @noce_get_alt_condition(%struct.noce_if_info* %if_info, %struct.rtx_def* %18, %struct.rtx_def** nonnull %earliest) #7, !dbg !5908
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5894, metadata !DIExpression()), !dbg !5901
  %tobool306 = icmp eq %struct.rtx_def* %call, null, !dbg !5909
  br i1 %tobool306, label %cleanup, label %if.end308, !dbg !5911

if.end308:                                        ; preds = %if.end
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !5912
  %bf.load309 = load i32, i32* %19, align 8, !dbg !5912
  %bf.clear310 = and i32 %bf.load309, 65535, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %bf.clear310, metadata !5898, metadata !DIExpression()), !dbg !5901
  %arrayidx311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5913
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**, !dbg !5913
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5913
  %21 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5915
  %call313 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %21) #6, !dbg !5916
  %tobool314 = icmp eq i32 %call313, 0, !dbg !5916
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5917
  %rt_rtx319 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !5917
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx319, align 8, !dbg !5917
  br i1 %tobool314, label %if.else, label %if.then315, !dbg !5918

if.then315:                                       ; preds = %if.end308
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5919
  %24 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !5919
  %call320 = call i32 @rtx_equal_p(%struct.rtx_def* %23, %struct.rtx_def* %24) #6, !dbg !5922
  %tobool321 = icmp eq i32 %call320, 0, !dbg !5922
  br i1 %tobool321, label %cleanup, label %if.end344, !dbg !5923

if.else:                                          ; preds = %if.end308
  %25 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5924
  %call329 = call i32 @rtx_equal_p(%struct.rtx_def* %23, %struct.rtx_def* %25) #6, !dbg !5926
  %tobool330 = icmp eq i32 %call329, 0, !dbg !5926
  br i1 %tobool330, label %cleanup, label %if.then331, !dbg !5927

if.then331:                                       ; preds = %if.else
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5928
  %b336 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5931
  %27 = load %struct.rtx_def*, %struct.rtx_def** %b336, align 8, !dbg !5931
  %call337 = call i32 @rtx_equal_p(%struct.rtx_def* %26, %struct.rtx_def* %27) #6, !dbg !5932
  %tobool338 = icmp eq i32 %call337, 0, !dbg !5932
  br i1 %tobool338, label %cleanup, label %if.end340, !dbg !5933

if.end340:                                        ; preds = %if.then331
  %call341 = call i32 @swap_condition(i32 %bf.clear310) #6, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %call341, metadata !5898, metadata !DIExpression()), !dbg !5901
  br label %if.end344

if.end344:                                        ; preds = %if.then315, %if.end340
  %code.0 = phi i32 [ %call341, %if.end340 ], [ %bf.clear310, %if.then315 ], !dbg !5901
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5898, metadata !DIExpression()), !dbg !5901
  switch i32 %code.0, label %cleanup [
    i32 85, label %sw.epilog
    i32 84, label %sw.epilog
    i32 96, label %sw.epilog
    i32 95, label %sw.epilog
    i32 83, label %sw.bb345
    i32 82, label %sw.bb345
    i32 94, label %sw.bb345
    i32 93, label %sw.bb345
    i32 89, label %sw.bb346
    i32 88, label %sw.bb346
    i32 87, label %sw.bb347
    i32 86, label %sw.bb347
  ], !dbg !5935

sw.bb345:                                         ; preds = %if.end344, %if.end344, %if.end344, %if.end344
  call void @llvm.dbg.value(metadata i32 70, metadata !5899, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 0, metadata !5900, metadata !DIExpression()), !dbg !5901
  br label %sw.epilog, !dbg !5936

sw.bb346:                                         ; preds = %if.end344, %if.end344
  call void @llvm.dbg.value(metadata i32 73, metadata !5899, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 1, metadata !5900, metadata !DIExpression()), !dbg !5901
  br label %sw.epilog, !dbg !5938

sw.bb347:                                         ; preds = %if.end344, %if.end344
  call void @llvm.dbg.value(metadata i32 72, metadata !5899, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 1, metadata !5900, metadata !DIExpression()), !dbg !5901
  br label %sw.epilog, !dbg !5939

sw.epilog:                                        ; preds = %if.end344, %if.end344, %if.end344, %if.end344, %sw.bb347, %sw.bb346, %sw.bb345
  %op.0 = phi i32 [ 72, %sw.bb347 ], [ 73, %sw.bb346 ], [ 70, %sw.bb345 ], [ 71, %if.end344 ], [ 71, %if.end344 ], [ 71, %if.end344 ], [ 71, %if.end344 ], !dbg !5940
  %unsignedp.0 = phi i32 [ 1, %sw.bb347 ], [ 1, %sw.bb346 ], [ 0, %sw.bb345 ], [ 0, %if.end344 ], [ 0, %if.end344 ], [ 0, %if.end344 ], [ 0, %if.end344 ], !dbg !5940
  call void @llvm.dbg.value(metadata i32 %unsignedp.0, metadata !5900, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %op.0, metadata !5899, metadata !DIExpression()), !dbg !5901
  call void @start_sequence() #6, !dbg !5941
  %28 = load i32*, i32** %1, align 8, !dbg !5942
  %bf.load349 = load i32, i32* %28, align 8, !dbg !5942
  %bf.lshr350 = lshr i32 %bf.load349, 16, !dbg !5942
  %bf.clear351 = and i32 %bf.lshr350, 255, !dbg !5942
  %29 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !5943
  %b353 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5944
  %30 = load %struct.rtx_def*, %struct.rtx_def** %b353, align 8, !dbg !5944
  %31 = bitcast i32* %28 to %struct.rtx_def*, !dbg !5945
  %call355 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear351, i32 %op.0, %struct.rtx_def* %29, %struct.rtx_def* %30, %struct.rtx_def* %31, i32 %unsignedp.0, i32 2) #6, !dbg !5946
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call355, metadata !5896, metadata !DIExpression()), !dbg !5901
  %tobool356 = icmp eq %struct.rtx_def* %call355, null, !dbg !5947
  br i1 %tobool356, label %if.then357, label %if.end358, !dbg !5949

if.then357:                                       ; preds = %sw.epilog
  call void @end_sequence() #6, !dbg !5950
  br label %cleanup, !dbg !5952

if.end358:                                        ; preds = %sw.epilog
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5953
  %cmp360 = icmp eq %struct.rtx_def* %call355, %32, !dbg !5955
  br i1 %cmp360, label %if.end364, label %if.then362, !dbg !5956

if.then362:                                       ; preds = %if.end358
  call fastcc void @noce_emit_move_insn(%struct.rtx_def* %32, %struct.rtx_def* nonnull %call355) #7, !dbg !5957
  br label %if.end364, !dbg !5957

if.end364:                                        ; preds = %if.end358, %if.then362
  %call365 = call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !5958
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call365, metadata !5897, metadata !DIExpression()), !dbg !5901
  %tobool366 = icmp eq %struct.rtx_def* %call365, null, !dbg !5959
  br i1 %tobool366, label %cleanup, label %if.end368, !dbg !5961

if.end368:                                        ; preds = %if.end364
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !5962
  %33 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !5962
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !5963
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !5963
  %arrayidx371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 1, i32 0, i32 2, !dbg !5963
  %rt_int = bitcast i64* %arrayidx371 to i32*, !dbg !5963
  %35 = load i32, i32* %rt_int, align 8, !dbg !5963
  %call372 = call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call365, %struct.rtx_def* %33, i32 %35) #6, !dbg !5964
  %cond373 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !5965
  store %struct.rtx_def* %call, %struct.rtx_def** %cond373, align 8, !dbg !5966
  %36 = bitcast %struct.rtx_def** %earliest to i64*, !dbg !5967
  %37 = load i64, i64* %36, align 8, !dbg !5967
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !5968
  %38 = bitcast %struct.rtx_def** %cond_earliest to i64*, !dbg !5969
  store i64 %37, i64* %38, align 8, !dbg !5969
  br label %cleanup, !dbg !5970

cleanup:                                          ; preds = %if.then315, %if.end364, %if.then331, %if.else, %if.end, %if.end344, %cond.end138, %cond.end298, %if.end368, %if.then357
  %retval.0 = phi i32 [ 1, %if.end368 ], [ 0, %if.then357 ], [ 0, %cond.end298 ], [ 0, %cond.end138 ], [ 0, %if.end ], [ 0, %if.then315 ], [ 0, %if.then331 ], [ 0, %if.else ], [ 0, %if.end344 ], [ 0, %if.end364 ], !dbg !5901
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5971
  ret i32 %retval.0, !dbg !5971
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_abs(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !5972 {
entry:
  %earliest = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !5974, metadata !DIExpression()), !dbg !5991
  %0 = bitcast %struct.rtx_def** %earliest to i8*, !dbg !5992
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5992
  call void @llvm.dbg.value(metadata i8 0, metadata !5983, metadata !DIExpression()), !dbg !5991
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !5993
  %1 = bitcast %struct.rtx_def** %x to i32**, !dbg !5993
  %2 = load i32*, i32** %1, align 8, !dbg !5993
  %bf.load = load i32, i32* %2, align 8, !dbg !5993
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5993
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5993
  %idxprom = zext i32 %bf.clear to i64, !dbg !5993
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5993
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5993
  %cmp = icmp eq i8 %3, 8, !dbg !5993
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5993

lor.lhs.false:                                    ; preds = %entry
  %cmp9 = icmp eq i8 %3, 9, !dbg !5993
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false11, !dbg !5993

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i8 %3, 11, !dbg !5993
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false21, !dbg !5993

lor.lhs.false21:                                  ; preds = %lor.lhs.false11
  %cmp29 = icmp eq i8 %3, 17, !dbg !5993
  br i1 %cmp29, label %land.lhs.true, label %if.end, !dbg !5993

land.lhs.true:                                    ; preds = %lor.lhs.false21, %lor.lhs.false11, %lor.lhs.false, %entry
  br i1 %cmp, label %cond.true, label %lor.lhs.false40, !dbg !5993

lor.lhs.false40:                                  ; preds = %land.lhs.true
  %cmp48 = icmp eq i8 %3, 9, !dbg !5993
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !5993

cond.true:                                        ; preds = %lor.lhs.false40, %land.lhs.true
  br label %cond.end, !dbg !5993

cond.false:                                       ; preds = %lor.lhs.false40
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5993
  %4 = load i8, i8* %arrayidx59, align 1, !dbg !5993
  %.pre = zext i8 %4 to i64, !dbg !5993
  %arrayidx63.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !5995
  %.pre2 = load i8, i8* %arrayidx63.phi.trans.insert, align 1, !dbg !5993
  br label %cond.end, !dbg !5993

cond.end:                                         ; preds = %cond.false, %cond.true
  %5 = phi i8 [ %.pre2, %cond.false ], [ %3, %cond.true ], !dbg !5993
  %cmp65 = icmp eq i8 %5, 9, !dbg !5993
  br i1 %cmp65, label %cond.true67, label %cond.false102, !dbg !5993

cond.true67:                                      ; preds = %cond.end
  br i1 %cmp, label %cond.true87, label %lor.lhs.false77, !dbg !5993

lor.lhs.false77:                                  ; preds = %cond.true67
  %cmp85 = icmp eq i8 %3, 9, !dbg !5993
  br i1 %cmp85, label %cond.true87, label %cond.false92, !dbg !5993

cond.true87:                                      ; preds = %lor.lhs.false77, %cond.true67
  br label %cond.end100, !dbg !5993

cond.false92:                                     ; preds = %lor.lhs.false77
  %arrayidx98 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5993
  %6 = load i8, i8* %arrayidx98, align 1, !dbg !5993
  %conv99 = zext i8 %6 to i32, !dbg !5993
  br label %cond.end100, !dbg !5993

cond.end100:                                      ; preds = %cond.false92, %cond.true87
  %cond101 = phi i32 [ %bf.clear, %cond.true87 ], [ %conv99, %cond.false92 ], !dbg !5993
  br label %cond.end138, !dbg !5993

cond.false102:                                    ; preds = %cond.end
  br i1 %cmp, label %cond.true122, label %lor.lhs.false112, !dbg !5993

lor.lhs.false112:                                 ; preds = %cond.false102
  %cmp120 = icmp eq i8 %3, 9, !dbg !5993
  br i1 %cmp120, label %cond.true122, label %cond.false127, !dbg !5993

cond.true122:                                     ; preds = %lor.lhs.false112, %cond.false102
  br label %cond.end135, !dbg !5993

cond.false127:                                    ; preds = %lor.lhs.false112
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !5993
  %7 = load i8, i8* %arrayidx133, align 1, !dbg !5993
  %conv134 = zext i8 %7 to i32, !dbg !5993
  br label %cond.end135, !dbg !5993

cond.end135:                                      ; preds = %cond.false127, %cond.true122
  %cond136 = phi i32 [ %bf.clear, %cond.true122 ], [ %conv134, %cond.false127 ], !dbg !5993
  br label %cond.end138, !dbg !5993

cond.end138:                                      ; preds = %cond.end135, %cond.end100
  %cond139.in = phi i32 [ %cond101, %cond.end100 ], [ %cond136, %cond.end135 ]
  %cond139 = add nsw i32 %cond139.in, -38, !dbg !5993
  %idxprom140 = zext i32 %cond139 to i64, !dbg !5993
  %arrayidx141 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom140, !dbg !5993
  %8 = load %struct.real_format*, %struct.real_format** %arrayidx141, align 8, !dbg !5993
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %8, i64 0, i32 14, !dbg !5993
  %9 = load i8, i8* %has_signed_zero, align 1, !dbg !5993
  %tobool = icmp ne i8 %9, 0, !dbg !5993
  %10 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5993
  %tobool144 = icmp ne i32 %10, 0, !dbg !5993
  %or.cond = and i1 %tobool, %tobool144, !dbg !5993
  br i1 %or.cond, label %cleanup434, label %if.end, !dbg !5993

if.end:                                           ; preds = %cond.end138, %lor.lhs.false21
  %a145 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !5996
  %11 = load %struct.rtx_def*, %struct.rtx_def** %a145, align 8, !dbg !5996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !5979, metadata !DIExpression()), !dbg !5991
  %b146 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !5997
  %12 = load %struct.rtx_def*, %struct.rtx_def** %b146, align 8, !dbg !5997
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !5980, metadata !DIExpression()), !dbg !5991
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !5998
  %bf.load147 = load i32, i32* %13, align 8, !dbg !5998
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !5998
  %cmp149 = icmp eq i32 %bf.clear148, 51, !dbg !6000
  br i1 %cmp149, label %land.lhs.true151, label %if.else, !dbg !6001

land.lhs.true151:                                 ; preds = %if.end
  %arrayidx152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6002
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**, !dbg !6002
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6002
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %12) #6, !dbg !6003
  %tobool153 = icmp eq i32 %call, 0, !dbg !6003
  br i1 %tobool153, label %if.else, label %if.end197, !dbg !6004

if.else:                                          ; preds = %land.lhs.true151, %if.end
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 0, !dbg !6005
  %bf.load155 = load i32, i32* %15, align 8, !dbg !6005
  %bf.clear156 = and i32 %bf.load155, 65535, !dbg !6005
  %cmp157 = icmp eq i32 %bf.clear156, 51, !dbg !6007
  br i1 %cmp157, label %land.lhs.true159, label %if.else167, !dbg !6008

land.lhs.true159:                                 ; preds = %if.else
  %arrayidx162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6009
  %rt_rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**, !dbg !6009
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx163, align 8, !dbg !6009
  %call164 = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %11) #6, !dbg !6010
  %tobool165 = icmp eq i32 %call164, 0, !dbg !6010
  br i1 %tobool165, label %if.else167, label %if.end197, !dbg !6011

if.else167:                                       ; preds = %land.lhs.true159, %if.else
  %bf.load168 = load i32, i32* %13, align 8, !dbg !6012
  %bf.clear169 = and i32 %bf.load168, 65535, !dbg !6012
  %cmp170 = icmp eq i32 %bf.clear169, 64, !dbg !6014
  br i1 %cmp170, label %land.lhs.true172, label %if.else180, !dbg !6015

land.lhs.true172:                                 ; preds = %if.else167
  %arrayidx175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6016
  %rt_rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**, !dbg !6016
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx176, align 8, !dbg !6016
  %call177 = tail call i32 @rtx_equal_p(%struct.rtx_def* %17, %struct.rtx_def* %12) #6, !dbg !6017
  %tobool178 = icmp eq i32 %call177, 0, !dbg !6017
  br i1 %tobool178, label %if.else180, label %if.end197, !dbg !6018

if.else180:                                       ; preds = %land.lhs.true172, %if.else167
  %bf.load181 = load i32, i32* %15, align 8, !dbg !6019
  %bf.clear182 = and i32 %bf.load181, 65535, !dbg !6019
  %cmp183 = icmp eq i32 %bf.clear182, 64, !dbg !6021
  br i1 %cmp183, label %land.lhs.true185, label %cleanup434, !dbg !6022

land.lhs.true185:                                 ; preds = %if.else180
  %arrayidx188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6023
  %rt_rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**, !dbg !6023
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !6023
  %call190 = tail call i32 @rtx_equal_p(%struct.rtx_def* %18, %struct.rtx_def* %11) #6, !dbg !6024
  %tobool191 = icmp eq i32 %call190, 0, !dbg !6024
  br i1 %tobool191, label %cleanup434, label %if.end197, !dbg !6025

if.end197:                                        ; preds = %land.lhs.true151, %land.lhs.true159, %land.lhs.true172, %land.lhs.true185
  %b.2 = phi %struct.rtx_def* [ %12, %land.lhs.true151 ], [ %11, %land.lhs.true159 ], [ %12, %land.lhs.true172 ], [ %11, %land.lhs.true185 ], !dbg !5991
  %negate.2 = phi i32 [ 0, %land.lhs.true151 ], [ 1, %land.lhs.true159 ], [ 0, %land.lhs.true172 ], [ 1, %land.lhs.true185 ], !dbg !6026
  %one_cmpl.2 = phi i8 [ 0, %land.lhs.true151 ], [ 0, %land.lhs.true159 ], [ 1, %land.lhs.true172 ], [ 1, %land.lhs.true185 ], !dbg !6027
  call void @llvm.dbg.value(metadata i8 %one_cmpl.2, metadata !5983, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i32 %negate.2, metadata !5982, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.2, metadata !5980, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !5976, metadata !DIExpression(DW_OP_deref)), !dbg !5991
  %call198 = call fastcc %struct.rtx_def* @noce_get_alt_condition(%struct.noce_if_info* %if_info, %struct.rtx_def* %b.2, %struct.rtx_def** nonnull %earliest) #7, !dbg !6028
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call198, metadata !5975, metadata !DIExpression()), !dbg !5991
  %tobool199 = icmp eq %struct.rtx_def* %call198, null, !dbg !6029
  br i1 %tobool199, label %cleanup434, label %if.end201, !dbg !6031

if.end201:                                        ; preds = %if.end197
  %arrayidx204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call198, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6032
  %rt_rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**, !dbg !6032
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !6032
  %call206 = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %b.2) #6, !dbg !6034
  %tobool207 = icmp eq i32 %call206, 0, !dbg !6034
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call198, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6035
  %rt_rtx212 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !6035
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx212, align 8, !dbg !6035
  br i1 %tobool207, label %if.else213, label %if.end228, !dbg !6036

if.else213:                                       ; preds = %if.end201
  %call218 = call i32 @rtx_equal_p(%struct.rtx_def* %21, %struct.rtx_def* %b.2) #6, !dbg !6037
  %tobool219 = icmp eq i32 %call218, 0, !dbg !6037
  br i1 %tobool219, label %cleanup434, label %if.then220, !dbg !6039

if.then220:                                       ; preds = %if.else213
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !6040
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !5981, metadata !DIExpression()), !dbg !5991
  %23 = xor i32 %negate.2, 1, !dbg !6042
  call void @llvm.dbg.value(metadata i32 %23, metadata !5982, metadata !DIExpression()), !dbg !5991
  br label %if.end228

if.end228:                                        ; preds = %if.end201, %if.then220
  %c.0 = phi %struct.rtx_def* [ %22, %if.then220 ], [ %21, %if.end201 ], !dbg !6035
  %negate.3 = phi i32 [ %23, %if.then220 ], [ %negate.2, %if.end201 ], !dbg !5991
  call void @llvm.dbg.value(metadata i32 %negate.3, metadata !5982, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c.0, metadata !5981, metadata !DIExpression()), !dbg !5991
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %c.0, i64 0, i32 0, !dbg !6043
  %bf.load229 = load i32, i32* %24, align 8, !dbg !6043
  %bf.clear230 = and i32 %bf.load229, 65535, !dbg !6043
  %cmp231 = icmp eq i32 %bf.clear230, 37, !dbg !6043
  br i1 %cmp231, label %if.then233, label %if.end316, !dbg !6044

if.then233:                                       ; preds = %if.end228
  %25 = load %struct.rtx_def*, %struct.rtx_def** %earliest, align 8, !dbg !6045
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !5976, metadata !DIExpression()), !dbg !5991
  %call234 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %25) #6, !dbg !6046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call234, metadata !5987, metadata !DIExpression()), !dbg !6047
  %tobool235 = icmp eq %struct.rtx_def* %call234, null, !dbg !6048
  br i1 %tobool235, label %cleanup, label %land.lhs.true236, !dbg !6049

land.lhs.true236:                                 ; preds = %if.then233
  %arrayidx239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call234, i64 0, i32 1, i32 0, i32 1, !dbg !6050
  %rt_bb = bitcast %struct.object_block** %arrayidx239 to %struct.basic_block_def**, !dbg !6050
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6050
  %27 = load %struct.rtx_def*, %struct.rtx_def** %earliest, align 8, !dbg !6051
  call void @llvm.dbg.value(metadata %struct.rtx_def* %27, metadata !5976, metadata !DIExpression()), !dbg !5991
  %arrayidx242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 1, !dbg !6051
  %rt_bb243 = bitcast %struct.object_block** %arrayidx242 to %struct.basic_block_def**, !dbg !6051
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb243, align 8, !dbg !6051
  %cmp244 = icmp eq %struct.basic_block_def* %26, %28, !dbg !6052
  br i1 %cmp244, label %land.lhs.true246, label %cleanup, !dbg !6053

land.lhs.true246:                                 ; preds = %land.lhs.true236
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call234, i64 0, i32 0, !dbg !6054
  %bf.load247 = load i32, i32* %29, align 8, !dbg !6054
  %bf.clear248 = and i32 %bf.load247, 65535, !dbg !6054
  %cmp249 = icmp eq i32 %bf.clear248, 8, !dbg !6054
  br i1 %cmp249, label %cond.true266, label %lor.lhs.false251, !dbg !6054

lor.lhs.false251:                                 ; preds = %land.lhs.true246
  %cmp254 = icmp eq i32 %bf.clear248, 7, !dbg !6054
  br i1 %cmp254, label %cond.true266, label %lor.lhs.false256, !dbg !6054

lor.lhs.false256:                                 ; preds = %lor.lhs.false251
  %cmp259 = icmp eq i32 %bf.clear248, 9, !dbg !6054
  br i1 %cmp259, label %cond.true266, label %lor.lhs.false261, !dbg !6054

lor.lhs.false261:                                 ; preds = %lor.lhs.false256
  %cmp264 = icmp eq i32 %bf.clear248, 10, !dbg !6054
  br i1 %cmp264, label %cond.true266, label %cond.end289, !dbg !6054

cond.true266:                                     ; preds = %lor.lhs.false261, %lor.lhs.false256, %lor.lhs.false251, %land.lhs.true246
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call234, i64 0, i32 1, !dbg !6054
  %30 = getelementptr inbounds %union.u, %union.u* %u267, i64 1, i32 0, i32 0, i64 0, !dbg !6054
  %31 = bitcast %union.rtunion_def* %30 to i32**, !dbg !6054
  %32 = load i32*, i32** %31, align 8, !dbg !6054
  %bf.load271 = load i32, i32* %32, align 8, !dbg !6054
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !6054
  %cmp273 = icmp eq i32 %bf.clear272, 23, !dbg !6054
  %33 = bitcast i32* %32 to %struct.rtx_def*, !dbg !6054
  br i1 %cmp273, label %cond.end289, label %cond.false280, !dbg !6054

cond.false280:                                    ; preds = %cond.true266
  %call285 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %call234, %struct.rtx_def* %33) #6, !dbg !6054
  br label %cond.end289, !dbg !6054

cond.end289:                                      ; preds = %lor.lhs.false261, %cond.false280, %cond.true266
  %cond290 = phi %struct.rtx_def* [ %call285, %cond.false280 ], [ %33, %cond.true266 ], [ null, %lor.lhs.false261 ], !dbg !6054
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond290, metadata !5984, metadata !DIExpression()), !dbg !6047
  %tobool291 = icmp eq %struct.rtx_def* %cond290, null, !dbg !6055
  br i1 %tobool291, label %cleanup, label %land.lhs.true292, !dbg !6056

land.lhs.true292:                                 ; preds = %cond.end289
  %arrayidx295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond290, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6057
  %rt_rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**, !dbg !6057
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx296, align 8, !dbg !6057
  %call297 = call i32 @rtx_equal_p(%struct.rtx_def* %34, %struct.rtx_def* %c.0) #6, !dbg !6058
  %tobool298 = icmp eq i32 %call297, 0, !dbg !6058
  br i1 %tobool298, label %cleanup, label %if.then299, !dbg !6059

if.then299:                                       ; preds = %land.lhs.true292
  %call300 = call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nonnull %call234) #6, !dbg !6060
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call300, metadata !5988, metadata !DIExpression()), !dbg !6061
  %tobool301 = icmp eq %struct.rtx_def* %call300, null, !dbg !6062
  br i1 %tobool301, label %if.else307, label %if.then302, !dbg !6064

if.then302:                                       ; preds = %if.then299
  %arrayidx305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call300, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6065
  %rt_rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**, !dbg !6065
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx306, align 8, !dbg !6065
  call void @llvm.dbg.value(metadata %struct.rtx_def* %35, metadata !5981, metadata !DIExpression()), !dbg !5991
  br label %cleanup, !dbg !6066

if.else307:                                       ; preds = %if.then299
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond290, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6067
  %rt_rtx311 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !6067
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx311, align 8, !dbg !6067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !5981, metadata !DIExpression()), !dbg !5991
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true292, %cond.end289, %if.then233, %if.else307, %if.then302, %land.lhs.true236
  %c.2 = phi %struct.rtx_def* [ %c.0, %land.lhs.true292 ], [ %c.0, %cond.end289 ], [ %c.0, %land.lhs.true236 ], [ %c.0, %if.then233 ], [ %35, %if.then302 ], [ %37, %if.else307 ], !dbg !5991
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true292 ], [ false, %cond.end289 ], [ false, %land.lhs.true236 ], [ false, %if.then233 ], [ true, %if.then302 ], [ true, %if.else307 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c.2, metadata !5981, metadata !DIExpression()), !dbg !5991
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end316_crit_edge, label %cleanup434

cleanup.if.end316_crit_edge:                      ; preds = %cleanup
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %c.2, i64 0, i32 0, !dbg !6068
  %bf.load317.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !6070
  br label %if.end316

if.end316:                                        ; preds = %cleanup.if.end316_crit_edge, %if.end228
  %bf.load317 = phi i32 [ %bf.load229, %if.end228 ], [ %bf.load317.pre, %cleanup.if.end316_crit_edge ], !dbg !6070
  %c.3 = phi %struct.rtx_def* [ %c.0, %if.end228 ], [ %c.2, %cleanup.if.end316_crit_edge ], !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c.3, metadata !5981, metadata !DIExpression()), !dbg !5991
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !6070
  %cmp319 = icmp eq i32 %bf.clear318, 43, !dbg !6070
  br i1 %cmp319, label %land.lhs.true321, label %if.end345, !dbg !6071

land.lhs.true321:                                 ; preds = %if.end316
  %arrayidx324 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %c.3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6072
  %38 = bitcast %union.rtunion_def* %arrayidx324 to i32**, !dbg !6072
  %39 = load i32*, i32** %38, align 8, !dbg !6072
  %bf.load326 = load i32, i32* %39, align 8, !dbg !6072
  %bf.clear327 = and i32 %bf.load326, 65535, !dbg !6072
  %cmp328 = icmp eq i32 %bf.clear327, 45, !dbg !6073
  %40 = bitcast i32* %39 to %struct.rtx_def*, !dbg !6074
  br i1 %cmp328, label %land.lhs.true330, label %if.end345, !dbg !6074

land.lhs.true330:                                 ; preds = %land.lhs.true321
  %bf.clear337 = and i32 %bf.load326, 67108864, !dbg !6075
  %tobool338 = icmp eq i32 %bf.clear337, 0, !dbg !6075
  br i1 %tobool338, label %if.end345, label %if.then339, !dbg !6076

if.then339:                                       ; preds = %land.lhs.true330
  %call344 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %40) #6, !dbg !6077
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call344, metadata !5981, metadata !DIExpression()), !dbg !5991
  br label %if.end345, !dbg !6078

if.end345:                                        ; preds = %land.lhs.true330, %if.then339, %land.lhs.true321, %if.end316
  %c.4 = phi %struct.rtx_def* [ %call344, %if.then339 ], [ %c.3, %land.lhs.true330 ], [ %c.3, %land.lhs.true321 ], [ %c.3, %if.end316 ], !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %c.4, metadata !5981, metadata !DIExpression()), !dbg !5991
  %41 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !6079
  %cmp346 = icmp eq %struct.rtx_def* %c.4, %41, !dbg !6081
  br i1 %cmp346, label %land.lhs.true348, label %if.else354, !dbg !6082

land.lhs.true348:                                 ; preds = %if.end345
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call198, i64 0, i32 0, !dbg !6083
  %bf.load349 = load i32, i32* %42, align 8, !dbg !6083
  %bf.clear350 = and i32 %bf.load349, 65535, !dbg !6083
  %cmp351 = icmp eq i32 %bf.clear350, 83, !dbg !6084
  br i1 %cmp351, label %if.end374, label %if.else354, !dbg !6085

if.else354:                                       ; preds = %land.lhs.true348, %if.end345
  %43 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !6086
  %cmp355 = icmp eq %struct.rtx_def* %c.4, %43, !dbg !6088
  br i1 %cmp355, label %land.lhs.true357, label %if.else363, !dbg !6089

land.lhs.true357:                                 ; preds = %if.else354
  %44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call198, i64 0, i32 0, !dbg !6090
  %bf.load358 = load i32, i32* %44, align 8, !dbg !6090
  %bf.clear359 = and i32 %bf.load358, 65535, !dbg !6090
  %cmp360 = icmp eq i32 %bf.clear359, 85, !dbg !6091
  br i1 %cmp360, label %if.end374, label %if.else363, !dbg !6092

if.else363:                                       ; preds = %land.lhs.true357, %if.else354
  %45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b.2, i64 0, i32 0, !dbg !6093
  %bf.load364 = load i32, i32* %45, align 8, !dbg !6093
  %bf.lshr365 = lshr i32 %bf.load364, 16, !dbg !6093
  %bf.clear366 = and i32 %bf.lshr365, 255, !dbg !6093
  %idxprom367 = zext i32 %bf.clear366 to i64, !dbg !6093
  %arrayidx368 = getelementptr inbounds [3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom367, !dbg !6093
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx368, align 8, !dbg !6093
  %cmp369 = icmp eq %struct.rtx_def* %c.4, %46, !dbg !6095
  br i1 %cmp369, label %if.else363.if.end374_crit_edge, label %cleanup434, !dbg !6096

if.else363.if.end374_crit_edge:                   ; preds = %if.else363
  %.phi.trans.insert4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call198, i64 0, i32 0, !dbg !5991
  %bf.load375.pre = load i32, i32* %.phi.trans.insert4, align 8, !dbg !6097
  br label %if.end374, !dbg !6096

if.end374:                                        ; preds = %if.else363.if.end374_crit_edge, %land.lhs.true357, %land.lhs.true348
  %bf.load375 = phi i32 [ %bf.load375.pre, %if.else363.if.end374_crit_edge ], [ %bf.load358, %land.lhs.true357 ], [ %bf.load349, %land.lhs.true348 ], !dbg !6097
  %trunc = trunc i32 %bf.load375 to i16, !dbg !6098
  switch i16 %trunc, label %cleanup434 [
    i16 85, label %sw.bb
    i16 84, label %sw.bb
    i16 96, label %sw.bb
    i16 95, label %sw.bb
    i16 83, label %sw.epilog
    i16 82, label %sw.epilog
    i16 94, label %sw.epilog
    i16 93, label %sw.epilog
  ], !dbg !6098

sw.bb:                                            ; preds = %if.end374, %if.end374, %if.end374, %if.end374
  %tobool377 = icmp eq i32 %negate.3, 0, !dbg !6099
  %lnot.ext379 = zext i1 %tobool377 to i32, !dbg !6099
  call void @llvm.dbg.value(metadata i32 %lnot.ext379, metadata !5982, metadata !DIExpression()), !dbg !5991
  br label %sw.epilog, !dbg !6101

sw.epilog:                                        ; preds = %if.end374, %if.end374, %if.end374, %if.end374, %sw.bb
  %negate.4 = phi i32 [ %lnot.ext379, %sw.bb ], [ %negate.3, %if.end374 ], [ %negate.3, %if.end374 ], [ %negate.3, %if.end374 ], [ %negate.3, %if.end374 ], !dbg !5991
  call void @llvm.dbg.value(metadata i32 %negate.4, metadata !5982, metadata !DIExpression()), !dbg !5991
  call void @start_sequence() #6, !dbg !6102
  %tobool381 = icmp eq i8 %one_cmpl.2, 0, !dbg !6103
  %47 = load i32*, i32** %1, align 8, !dbg !6105
  %bf.load384 = load i32, i32* %47, align 8, !dbg !6105
  %bf.lshr385 = lshr i32 %bf.load384, 16, !dbg !6105
  %bf.clear386 = and i32 %bf.lshr385, 255, !dbg !6105
  %.cast = bitcast i32* %47 to %struct.rtx_def*, !dbg !6105
  br i1 %tobool381, label %if.else389, label %if.then382, !dbg !6106

if.then382:                                       ; preds = %sw.epilog
  %call388 = call %struct.rtx_def* @expand_one_cmpl_abs_nojump(i32 %bf.clear386, %struct.rtx_def* %b.2, %struct.rtx_def* %.cast) #6, !dbg !6107
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call388, metadata !5977, metadata !DIExpression()), !dbg !5991
  br label %if.end396, !dbg !6108

if.else389:                                       ; preds = %sw.epilog
  %call395 = call %struct.rtx_def* @expand_abs_nojump(i32 %bf.clear386, %struct.rtx_def* %b.2, %struct.rtx_def* %.cast, i32 1) #6, !dbg !6109
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call395, metadata !5977, metadata !DIExpression()), !dbg !5991
  br label %if.end396

if.end396:                                        ; preds = %if.else389, %if.then382
  %target.0 = phi %struct.rtx_def* [ %call388, %if.then382 ], [ %call395, %if.else389 ], !dbg !6105
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !5977, metadata !DIExpression()), !dbg !5991
  %tobool397 = icmp ne %struct.rtx_def* %target.0, null, !dbg !6110
  %tobool399 = icmp ne i32 %negate.4, 0, !dbg !6112
  %or.cond1 = and i1 %tobool397, %tobool399, !dbg !6113
  br i1 %or.cond1, label %if.then400, label %if.end415, !dbg !6113

if.then400:                                       ; preds = %if.end396
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target.0, i64 0, i32 0, !dbg !6114
  %bf.load403 = load i32, i32* %48, align 8, !dbg !6114
  %bf.lshr404 = lshr i32 %bf.load403, 16, !dbg !6114
  %bf.clear405 = and i32 %bf.lshr404, 255, !dbg !6114
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6114
  br i1 %tobool381, label %if.else408, label %if.then402, !dbg !6117

if.then402:                                       ; preds = %if.then400
  %call407 = call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear405, i32 64, %struct.rtx_def* nonnull %target.0, %struct.rtx_def* %49, i32 0) #6, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call407, metadata !5977, metadata !DIExpression()), !dbg !5991
  br label %if.end415, !dbg !6119

if.else408:                                       ; preds = %if.then400
  %call413 = call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear405, i32 51, %struct.rtx_def* nonnull %target.0, %struct.rtx_def* %49, i32 0) #6, !dbg !6120
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call413, metadata !5977, metadata !DIExpression()), !dbg !5991
  br label %if.end415

if.end415:                                        ; preds = %if.then402, %if.else408, %if.end396
  %target.2 = phi %struct.rtx_def* [ %target.0, %if.end396 ], [ %call407, %if.then402 ], [ %call413, %if.else408 ], !dbg !5991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.2, metadata !5977, metadata !DIExpression()), !dbg !5991
  %tobool416 = icmp eq %struct.rtx_def* %target.2, null, !dbg !6121
  br i1 %tobool416, label %if.then417, label %if.end418, !dbg !6123

if.then417:                                       ; preds = %if.end415
  call void @end_sequence() #6, !dbg !6124
  br label %cleanup434, !dbg !6126

if.end418:                                        ; preds = %if.end415
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6127
  %cmp420 = icmp eq %struct.rtx_def* %target.2, %50, !dbg !6129
  br i1 %cmp420, label %if.end424, label %if.then422, !dbg !6130

if.then422:                                       ; preds = %if.end418
  call fastcc void @noce_emit_move_insn(%struct.rtx_def* %50, %struct.rtx_def* nonnull %target.2) #7, !dbg !6131
  br label %if.end424, !dbg !6131

if.end424:                                        ; preds = %if.end418, %if.then422
  %call425 = call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6132
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call425, metadata !5978, metadata !DIExpression()), !dbg !5991
  %tobool426 = icmp eq %struct.rtx_def* %call425, null, !dbg !6133
  br i1 %tobool426, label %cleanup434, label %if.end428, !dbg !6135

if.end428:                                        ; preds = %if.end424
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6136
  %51 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6136
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6137
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6137
  %arrayidx431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i64 0, i32 1, i32 0, i32 2, !dbg !6137
  %rt_int = bitcast i64* %arrayidx431 to i32*, !dbg !6137
  %53 = load i32, i32* %rt_int, align 8, !dbg !6137
  %call432 = call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call425, %struct.rtx_def* %51, i32 %53) #6, !dbg !6138
  %cond433 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6139
  store %struct.rtx_def* %call198, %struct.rtx_def** %cond433, align 8, !dbg !6140
  %54 = bitcast %struct.rtx_def** %earliest to i64*, !dbg !6141
  %55 = load i64, i64* %54, align 8, !dbg !6141
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !6142
  %56 = bitcast %struct.rtx_def** %cond_earliest to i64*, !dbg !6143
  store i64 %55, i64* %56, align 8, !dbg !6143
  br label %cleanup434, !dbg !6144

cleanup434:                                       ; preds = %if.end424, %if.else363, %if.else213, %if.end197, %land.lhs.true185, %if.end374, %if.else180, %cond.end138, %cleanup, %if.end428, %if.then417
  %retval.1 = phi i32 [ 0, %cleanup ], [ 1, %if.end428 ], [ 0, %if.then417 ], [ 0, %cond.end138 ], [ 0, %land.lhs.true185 ], [ 0, %if.else180 ], [ 0, %if.end197 ], [ 0, %if.else213 ], [ 0, %if.else363 ], [ 0, %if.end374 ], [ 0, %if.end424 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6145
  ret i32 %retval.1, !dbg !6145
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_cmove(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6146 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6148, metadata !DIExpression()), !dbg !6152
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6153
  %0 = bitcast %struct.rtx_def** %a to i32**, !dbg !6153
  %1 = load i32*, i32** %0, align 8, !dbg !6153
  %bf.load = load i32, i32* %1, align 8, !dbg !6153
  %bf.clear = and i32 %bf.load, 65535, !dbg !6153
  %idxprom = zext i32 %bf.clear to i64, !dbg !6153
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6153
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6153
  %cmp = icmp eq i32 %2, 9, !dbg !6153
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6155

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast i32* %1 to %struct.rtx_def*, !dbg !6155
  %call = tail call i32 @register_operand(%struct.rtx_def* %3, i32 0) #6, !dbg !6156
  %tobool = icmp eq i32 %call, 0, !dbg !6156
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !6157

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6158
  %4 = bitcast %struct.rtx_def** %b to i32**, !dbg !6158
  %5 = load i32*, i32** %4, align 8, !dbg !6158
  %bf.load2 = load i32, i32* %5, align 8, !dbg !6158
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !6158
  %idxprom4 = zext i32 %bf.clear3 to i64, !dbg !6158
  %arrayidx5 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom4, !dbg !6158
  %6 = load i32, i32* %arrayidx5, align 4, !dbg !6158
  %cmp6 = icmp eq i32 %6, 9, !dbg !6158
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !6159

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %7 = bitcast i32* %5 to %struct.rtx_def*, !dbg !6159
  %call9 = tail call i32 @register_operand(%struct.rtx_def* %7, i32 0) #6, !dbg !6160
  %tobool10 = icmp eq i32 %call9, 0, !dbg !6160
  br i1 %tobool10, label %cleanup, label %if.then, !dbg !6161

if.then:                                          ; preds = %lor.lhs.false7, %land.lhs.true
  tail call void @start_sequence() #6, !dbg !6162
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6164
  %8 = bitcast %struct.rtx_def** %cond to i32**, !dbg !6164
  %9 = load i32*, i32** %8, align 8, !dbg !6164
  %bf.load11 = load i32, i32* %9, align 8, !dbg !6164
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %bf.clear12, metadata !6149, metadata !DIExpression()), !dbg !6152
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6165
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6165
  %u = getelementptr inbounds i32, i32* %9, i64 2, !dbg !6166
  %rt_rtx = bitcast i32* %u to %struct.rtx_def**, !dbg !6166
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6166
  %12 = getelementptr inbounds i32, i32* %9, i64 4, !dbg !6167
  %rt_rtx19 = bitcast i32* %12 to %struct.rtx_def**, !dbg !6167
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6167
  %14 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6168
  %15 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6169
  %call22 = tail call fastcc %struct.rtx_def* @noce_emit_cmove(%struct.noce_if_info* %if_info, %struct.rtx_def* %10, i32 %bf.clear12, %struct.rtx_def* %11, %struct.rtx_def* %13, %struct.rtx_def* %14, %struct.rtx_def* %15) #7, !dbg !6170
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !6150, metadata !DIExpression()), !dbg !6152
  %tobool23 = icmp eq %struct.rtx_def* %call22, null, !dbg !6171
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !6173

if.then24:                                        ; preds = %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6174
  %cmp26 = icmp eq %struct.rtx_def* %call22, %16, !dbg !6177
  br i1 %cmp26, label %if.end, label %if.then27, !dbg !6178

if.then27:                                        ; preds = %if.then24
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %16, %struct.rtx_def* nonnull %call22) #7, !dbg !6179
  br label %if.end, !dbg !6179

if.end:                                           ; preds = %if.then24, %if.then27
  %call29 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6180
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !6151, metadata !DIExpression()), !dbg !6152
  %tobool30 = icmp eq %struct.rtx_def* %call29, null, !dbg !6181
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !6183

if.end32:                                         ; preds = %if.end
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6184
  %17 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6184
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6185
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6185
  %arrayidx35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 2, !dbg !6185
  %rt_int = bitcast i64* %arrayidx35 to i32*, !dbg !6185
  %19 = load i32, i32* %rt_int, align 8, !dbg !6185
  %call36 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call29, %struct.rtx_def* %17, i32 %19) #6, !dbg !6186
  br label %cleanup, !dbg !6187

if.else:                                          ; preds = %if.then
  tail call void @end_sequence() #6, !dbg !6188
  br label %cleanup, !dbg !6190

cleanup:                                          ; preds = %if.end, %lor.lhs.false7, %lor.lhs.false, %if.else, %if.end32
  %retval.0 = phi i32 [ 1, %if.end32 ], [ 0, %if.else ], [ 0, %if.end ], [ 0, %lor.lhs.false7 ], [ 0, %lor.lhs.false ], !dbg !6152
  ret i32 %retval.0, !dbg !6191
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_store_flag_constants(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6192 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6194, metadata !DIExpression()), !dbg !6205
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6206
  %0 = bitcast %struct.rtx_def** %a to i32**, !dbg !6206
  %1 = load i32*, i32** %0, align 8, !dbg !6206
  %bf.load = load i32, i32* %1, align 8, !dbg !6206
  %bf.clear = and i32 %bf.load, 65535, !dbg !6206
  %cmp = icmp eq i32 %bf.clear, 30, !dbg !6206
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !6208

land.lhs.true:                                    ; preds = %entry
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6209
  %2 = bitcast %struct.rtx_def** %b to i32**, !dbg !6209
  %3 = load i32*, i32** %2, align 8, !dbg !6209
  %bf.load1 = load i32, i32* %3, align 8, !dbg !6209
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6209
  %cmp3 = icmp eq i32 %bf.clear2, 30, !dbg !6209
  br i1 %cmp3, label %if.then, label %cleanup, !dbg !6210

if.then:                                          ; preds = %land.lhs.true
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6211
  %4 = bitcast %struct.rtx_def** %x to i32**, !dbg !6211
  %5 = load i32*, i32** %4, align 8, !dbg !6211
  %bf.load4 = load i32, i32* %5, align 8, !dbg !6211
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !6211
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %bf.clear5, metadata !6204, metadata !DIExpression()), !dbg !6205
  %u = getelementptr inbounds i32, i32* %1, i64 2, !dbg !6213
  %arrayidx = bitcast i32* %u to i64*, !dbg !6213
  %6 = load i64, i64* %arrayidx, align 8, !dbg !6213
  call void @llvm.dbg.value(metadata i64 %6, metadata !6199, metadata !DIExpression()), !dbg !6205
  %u8 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !6214
  %arrayidx10 = bitcast i32* %u8 to i64*, !dbg !6214
  %7 = load i64, i64* %arrayidx10, align 8, !dbg !6214
  call void @llvm.dbg.value(metadata i64 %7, metadata !6198, metadata !DIExpression()), !dbg !6205
  %cmp11 = icmp sgt i64 %7, %6, !dbg !6215
  %conv = zext i1 %cmp11 to i32, !dbg !6215
  %.lobit = lshr i64 %6, 63, !dbg !6217
  %8 = trunc i64 %.lobit to i32, !dbg !6217
  %.lobit2 = lshr i64 %7, 63, !dbg !6218
  %9 = trunc i64 %.lobit2 to i32, !dbg !6218
  %cmp16 = icmp eq i32 %8, %9, !dbg !6219
  %cond = select i1 %cmp16, i32 %conv, i32 %8, !dbg !6220
  %cmp22 = icmp eq i32 %cond, %conv, !dbg !6221
  br i1 %cmp22, label %if.end, label %cleanup, !dbg !6222

if.end:                                           ; preds = %if.then
  %sub25 = sub nsw i64 %7, %6, !dbg !6223
  %call = tail call i64 @trunc_int_for_mode(i64 %sub25, i32 %bf.clear5) #6, !dbg !6224
  call void @llvm.dbg.value(metadata i64 %call, metadata !6200, metadata !DIExpression()), !dbg !6205
  %cond26 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6225
  %10 = load %struct.rtx_def*, %struct.rtx_def** %cond26, align 8, !dbg !6225
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6226
  %11 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6226
  %call27 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %10, %struct.rtx_def* %11) #6, !dbg !6227
  %cmp28 = icmp ne i32 %call27, 0, !dbg !6228
  call void @llvm.dbg.value(metadata i1 %cmp28, metadata !6203, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 0, metadata !6197, metadata !DIExpression()), !dbg !6205
  switch i64 %call, label %if.else [
    i64 1, label %if.end84
    i64 -1, label %if.end84
  ], !dbg !6229

if.else:                                          ; preds = %if.end
  %cmp35 = icmp eq i64 %6, 0, !dbg !6231
  br i1 %cmp35, label %land.lhs.true37, label %if.else42, !dbg !6233

land.lhs.true37:                                  ; preds = %if.else
  %call38 = tail call i32 @exact_log2(i64 %7) #6, !dbg !6234
  %cmp39 = icmp sgt i32 %call38, -1, !dbg !6235
  br i1 %cmp39, label %if.end84, label %if.else42, !dbg !6236

if.else42:                                        ; preds = %land.lhs.true37, %if.else
  switch i64 %7, label %if.else58 [
    i64 0, label %land.lhs.true45
    i64 -1, label %land.lhs.true54
  ], !dbg !6237

land.lhs.true45:                                  ; preds = %if.else42
  %call46 = tail call i32 @exact_log2(i64 %6) #6, !dbg !6239
  %cmp47 = icmp sgt i32 %call46, -1, !dbg !6240
  %or.cond = and i1 %cmp47, %cmp28, !dbg !6241
  br i1 %or.cond, label %if.end84, label %if.else51, !dbg !6241

if.else51:                                        ; preds = %land.lhs.true45
  br i1 false, label %if.else51.land.lhs.true54_crit_edge, label %if.else58, !dbg !6242

if.else51.land.lhs.true54_crit_edge:              ; preds = %if.else51
  br label %land.lhs.true54, !dbg !6242

land.lhs.true54:                                  ; preds = %if.else51.land.lhs.true54_crit_edge, %if.else42
  %branch_cost = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6244
  %12 = load i32, i32* %branch_cost, align 4, !dbg !6244
  %cmp55 = icmp sgt i32 %12, 1, !dbg !6245
  br i1 %cmp55, label %if.end84, label %if.else58, !dbg !6246

if.else58:                                        ; preds = %if.else42, %land.lhs.true54, %if.else51
  %cmp59 = icmp eq i64 %6, -1, !dbg !6247
  %or.cond1 = and i1 %cmp59, %cmp28, !dbg !6249
  br i1 %or.cond1, label %land.lhs.true63, label %if.else58.if.else68_crit_edge, !dbg !6249

if.else58.if.else68_crit_edge:                    ; preds = %if.else58
  %branch_cost74.phi.trans.insert = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6250
  %.pre = load i32, i32* %branch_cost74.phi.trans.insert, align 4, !dbg !6252
  br label %if.else68, !dbg !6249

land.lhs.true63:                                  ; preds = %if.else58
  %branch_cost64 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6253
  %13 = load i32, i32* %branch_cost64, align 4, !dbg !6253
  %cmp65 = icmp sgt i32 %13, 1, !dbg !6254
  br i1 %cmp65, label %if.end84, label %if.else68, !dbg !6255

if.else68:                                        ; preds = %if.else58.if.else68_crit_edge, %land.lhs.true63
  %14 = phi i32 [ %.pre, %if.else58.if.else68_crit_edge ], [ %13, %land.lhs.true63 ], !dbg !6252
  %cmp75 = icmp sgt i32 %14, 2, !dbg !6256
  br i1 %cmp75, label %if.end84, label %cleanup, !dbg !6257

if.end84:                                         ; preds = %land.lhs.true37, %land.lhs.true54, %if.else68, %land.lhs.true63, %land.lhs.true45, %if.end, %if.end
  %reversep.4 = phi i32 [ 0, %if.end ], [ 0, %if.end ], [ 0, %land.lhs.true37 ], [ 1, %land.lhs.true45 ], [ 0, %land.lhs.true54 ], [ 1, %land.lhs.true63 ], [ 0, %if.else68 ], !dbg !6258
  %normalize.4 = phi i32 [ 0, %if.end ], [ 0, %if.end ], [ 1, %land.lhs.true37 ], [ 1, %land.lhs.true45 ], [ -1, %land.lhs.true54 ], [ -1, %land.lhs.true63 ], [ -1, %if.else68 ], !dbg !6259
  call void @llvm.dbg.value(metadata i32 %normalize.4, metadata !6202, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 %reversep.4, metadata !6197, metadata !DIExpression()), !dbg !6205
  %tobool85 = icmp eq i32 %reversep.4, 0, !dbg !6260
  br i1 %tobool85, label %if.end89, label %if.then86, !dbg !6262

if.then86:                                        ; preds = %if.end84
  call void @llvm.dbg.value(metadata i64 %7, metadata !6201, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i64 %6, metadata !6198, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i64 %7, metadata !6199, metadata !DIExpression()), !dbg !6205
  %sub87 = sub nsw i64 0, %call, !dbg !6263
  %call88 = tail call i64 @trunc_int_for_mode(i64 %sub87, i32 %bf.clear5) #6, !dbg !6265
  call void @llvm.dbg.value(metadata i64 %call88, metadata !6200, metadata !DIExpression()), !dbg !6205
  br label %if.end89, !dbg !6266

if.end89:                                         ; preds = %if.end84, %if.then86
  %diff.0 = phi i64 [ %call88, %if.then86 ], [ %call, %if.end84 ], !dbg !6267
  %ifalse.0 = phi i64 [ %7, %if.then86 ], [ %6, %if.end84 ], !dbg !6267
  %itrue.0 = phi i64 [ %6, %if.then86 ], [ %7, %if.end84 ], !dbg !6267
  call void @llvm.dbg.value(metadata i64 %itrue.0, metadata !6198, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i64 %ifalse.0, metadata !6199, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i64 %diff.0, metadata !6200, metadata !DIExpression()), !dbg !6205
  tail call void @start_sequence() #6, !dbg !6268
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6269
  %call91 = tail call fastcc %struct.rtx_def* @noce_emit_store_flag(%struct.noce_if_info* %if_info, %struct.rtx_def* %15, i32 %reversep.4, i32 %normalize.4) #7, !dbg !6270
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call91, metadata !6195, metadata !DIExpression()), !dbg !6205
  %tobool92 = icmp eq %struct.rtx_def* %call91, null, !dbg !6271
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !6273

if.then93:                                        ; preds = %if.end89
  tail call void @end_sequence() #6, !dbg !6274
  br label %cleanup, !dbg !6276

if.end94:                                         ; preds = %if.end89
  switch i64 %diff.0, label %if.else107 [
    i64 1, label %if.then100
    i64 -1, label %if.then100
  ], !dbg !6277

if.then100:                                       ; preds = %if.end94, %if.end94
  %cmp101 = icmp eq i64 %diff.0, 1, !dbg !6279
  %cond103 = select i1 %cmp101, i32 49, i32 50, !dbg !6281
  %call104 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ifalse.0) #6, !dbg !6282
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6283
  %call106 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear5, i32 %cond103, %struct.rtx_def* %call104, %struct.rtx_def* nonnull %call91, %struct.rtx_def* %16, i32 0, i32 2) #6, !dbg !6284
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call106, metadata !6195, metadata !DIExpression()), !dbg !6205
  br label %if.end138, !dbg !6285

if.else107:                                       ; preds = %if.end94
  %cmp108 = icmp eq i64 %ifalse.0, 0, !dbg !6286
  br i1 %cmp108, label %land.lhs.true110, label %if.else119, !dbg !6288

land.lhs.true110:                                 ; preds = %if.else107
  %call111 = tail call i32 @exact_log2(i64 %itrue.0) #6, !dbg !6289
  call void @llvm.dbg.value(metadata i64 undef, metadata !6201, metadata !DIExpression()), !dbg !6205
  %cmp113 = icmp sgt i32 %call111, -1, !dbg !6290
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !6291

if.then115:                                       ; preds = %land.lhs.true110
  %conv112 = sext i32 %call111 to i64, !dbg !6289
  call void @llvm.dbg.value(metadata i64 %conv112, metadata !6201, metadata !DIExpression()), !dbg !6205
  %call116 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv112) #6, !dbg !6292
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6294
  %call118 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear5, i32 65, %struct.rtx_def* nonnull %call91, %struct.rtx_def* %call116, %struct.rtx_def* %17, i32 0, i32 2) #6, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !6195, metadata !DIExpression()), !dbg !6205
  br label %if.end138, !dbg !6296

if.else119:                                       ; preds = %land.lhs.true110, %if.else107
  %cmp120 = icmp eq i64 %itrue.0, -1, !dbg !6297
  br i1 %cmp120, label %if.then122, label %if.else126, !dbg !6299

if.then122:                                       ; preds = %if.else119
  %call123 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ifalse.0) #6, !dbg !6300
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6302
  %call125 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear5, i32 62, %struct.rtx_def* nonnull %call91, %struct.rtx_def* %call123, %struct.rtx_def* %18, i32 0, i32 2) #6, !dbg !6303
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call125, metadata !6195, metadata !DIExpression()), !dbg !6205
  br label %if.end138, !dbg !6304

if.else126:                                       ; preds = %if.else119
  %call127 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %diff.0) #6, !dbg !6305
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6307
  %call129 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear5, i32 61, %struct.rtx_def* nonnull %call91, %struct.rtx_def* %call127, %struct.rtx_def* %19, i32 0, i32 2) #6, !dbg !6308
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call129, metadata !6195, metadata !DIExpression()), !dbg !6205
  %tobool130 = icmp eq %struct.rtx_def* %call129, null, !dbg !6309
  br i1 %tobool130, label %if.end138, label %if.then131, !dbg !6311

if.then131:                                       ; preds = %if.else126
  %call132 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ifalse.0) #6, !dbg !6312
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6313
  %call134 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear5, i32 49, %struct.rtx_def* nonnull %call129, %struct.rtx_def* %call132, %struct.rtx_def* %20, i32 0, i32 2) #6, !dbg !6314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call134, metadata !6195, metadata !DIExpression()), !dbg !6205
  br label %if.end138, !dbg !6315

if.end138:                                        ; preds = %if.else126, %if.then115, %if.then131, %if.then122, %if.then100
  %target.3 = phi %struct.rtx_def* [ %call106, %if.then100 ], [ %call118, %if.then115 ], [ %call125, %if.then122 ], [ %call134, %if.then131 ], [ null, %if.else126 ], !dbg !6316
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.3, metadata !6195, metadata !DIExpression()), !dbg !6205
  %tobool139 = icmp eq %struct.rtx_def* %target.3, null, !dbg !6317
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !6319

if.then140:                                       ; preds = %if.end138
  tail call void @end_sequence() #6, !dbg !6320
  br label %cleanup, !dbg !6322

if.end141:                                        ; preds = %if.end138
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6323
  %cmp143 = icmp eq %struct.rtx_def* %target.3, %21, !dbg !6325
  br i1 %cmp143, label %if.end147, label %if.then145, !dbg !6326

if.then145:                                       ; preds = %if.end141
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %21, %struct.rtx_def* nonnull %target.3) #7, !dbg !6327
  br label %if.end147, !dbg !6327

if.end147:                                        ; preds = %if.end141, %if.then145
  %call148 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6328
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !6196, metadata !DIExpression()), !dbg !6205
  %tobool149 = icmp eq %struct.rtx_def* %call148, null, !dbg !6329
  br i1 %tobool149, label %cleanup, label %if.end151, !dbg !6331

if.end151:                                        ; preds = %if.end147
  %22 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6332
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6333
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6333
  %arrayidx154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 2, !dbg !6333
  %rt_int = bitcast i64* %arrayidx154 to i32*, !dbg !6333
  %24 = load i32, i32* %rt_int, align 8, !dbg !6333
  %call155 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call148, %struct.rtx_def* %22, i32 %24) #6, !dbg !6334
  br label %cleanup, !dbg !6335

cleanup:                                          ; preds = %if.end147, %if.then, %entry, %land.lhs.true, %if.else68, %if.end151, %if.then140, %if.then93
  %retval.0 = phi i32 [ 1, %if.end151 ], [ 0, %if.then140 ], [ 0, %if.then93 ], [ 0, %if.then ], [ 0, %if.else68 ], [ 0, %if.end147 ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !6205
  ret i32 %retval.0, !dbg !6336
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_addcc(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6337 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6339, metadata !DIExpression()), !dbg !6348
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6349
  %0 = bitcast %struct.rtx_def** %a to i32**, !dbg !6349
  %1 = load i32*, i32** %0, align 8, !dbg !6349
  %bf.load = load i32, i32* %1, align 8, !dbg !6349
  %bf.clear = and i32 %bf.load, 65535, !dbg !6349
  %cmp = icmp eq i32 %bf.clear, 49, !dbg !6350
  br i1 %cmp, label %land.lhs.true, label %if.end149, !dbg !6351

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 2, !dbg !6352
  %rt_rtx = bitcast i32* %arrayidx to %struct.rtx_def**, !dbg !6352
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6352
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6353
  %3 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6353
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %3) #6, !dbg !6354
  %tobool = icmp eq i32 %call, 0, !dbg !6354
  br i1 %tobool, label %if.end149, label %land.lhs.true2, !dbg !6355

land.lhs.true2:                                   ; preds = %land.lhs.true
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6356
  %4 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !6356
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6357
  %5 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6357
  %call3 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %4, %struct.rtx_def* %5) #6, !dbg !6358
  %cmp4 = icmp eq i32 %call3, 0, !dbg !6359
  br i1 %cmp4, label %if.end149, label %if.then, !dbg !6360

if.then:                                          ; preds = %land.lhs.true2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !6361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !6344, metadata !DIExpression()), !dbg !6362
  %7 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6363
  %call8 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %6, %struct.rtx_def* %7) #6, !dbg !6364
  call void @llvm.dbg.value(metadata i32 %call8, metadata !6347, metadata !DIExpression()), !dbg !6362
  %arrayidx11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6365
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6365
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !6365
  %call13 = tail call i32 @general_operand(%struct.rtx_def* %8, i32 0) #6, !dbg !6367
  %tobool14 = icmp eq i32 %call13, 0, !dbg !6367
  br i1 %tobool14, label %if.end62, label %land.lhs.true15, !dbg !6368

land.lhs.true15:                                  ; preds = %if.then
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6369
  %rt_rtx19 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !6369
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6369
  %call20 = tail call i32 @general_operand(%struct.rtx_def* %10, i32 0) #6, !dbg !6370
  %tobool21 = icmp eq i32 %call20, 0, !dbg !6370
  br i1 %tobool21, label %if.end62, label %if.then22, !dbg !6371

if.then22:                                        ; preds = %land.lhs.true15
  tail call void @start_sequence() #6, !dbg !6372
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6374
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6374
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !6375
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6376
  %14 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6377
  %15 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6378
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6378
  %rt_rtx36 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !6378
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !6378
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !6379
  %bf.load38 = load i32, i32* %18, align 8, !dbg !6379
  %bf.lshr = lshr i32 %bf.load38, 16, !dbg !6379
  %bf.clear39 = and i32 %bf.lshr, 255, !dbg !6379
  %call8.off = add i32 %call8, -86, !dbg !6380
  %switch = icmp ult i32 %call8.off, 4, !dbg !6380
  %lor.ext = zext i1 %switch to i32, !dbg !6381
  %call45 = tail call %struct.rtx_def* @emit_conditional_add(%struct.rtx_def* %11, i32 %call8, %struct.rtx_def* %12, %struct.rtx_def* %13, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %17, i32 %bf.clear39, i32 %lor.ext) #6, !dbg !6382
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !6340, metadata !DIExpression()), !dbg !6348
  %tobool46 = icmp eq %struct.rtx_def* %call45, null, !dbg !6383
  br i1 %tobool46, label %if.end61, label %if.then47, !dbg !6385

if.then47:                                        ; preds = %if.then22
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6386
  %cmp49 = icmp eq %struct.rtx_def* %call45, %19, !dbg !6389
  br i1 %cmp49, label %if.end, label %if.then50, !dbg !6390

if.then50:                                        ; preds = %if.then47
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %19, %struct.rtx_def* nonnull %call45) #7, !dbg !6391
  br label %if.end, !dbg !6391

if.end:                                           ; preds = %if.then47, %if.then50
  %call52 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6392
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call52, metadata !6341, metadata !DIExpression()), !dbg !6348
  %tobool53 = icmp eq %struct.rtx_def* %call52, null, !dbg !6393
  br i1 %tobool53, label %cleanup, label %if.end55, !dbg !6395

if.end55:                                         ; preds = %if.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6396
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6397
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6397
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 2, !dbg !6397
  %rt_int = bitcast i64* %arrayidx59 to i32*, !dbg !6397
  %22 = load i32, i32* %rt_int, align 8, !dbg !6397
  %call60 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call52, %struct.rtx_def* %20, i32 %22) #6, !dbg !6398
  br label %cleanup, !dbg !6399

if.end61:                                         ; preds = %if.then22
  tail call void @end_sequence() #6, !dbg !6400
  br label %if.end62, !dbg !6401

if.end62:                                         ; preds = %land.lhs.true15, %if.then, %if.end61
  %branch_cost = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6402
  %23 = load i32, i32* %branch_cost, align 4, !dbg !6402
  %cmp63 = icmp sgt i32 %23, 1, !dbg !6404
  br i1 %cmp63, label %land.lhs.true64, label %cleanup, !dbg !6405

land.lhs.true64:                                  ; preds = %if.end62
  %24 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6406
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6406
  %rt_rtx69 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !6406
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !6406
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !6407
  %cmp70 = icmp eq %struct.rtx_def* %26, %27, !dbg !6408
  br i1 %cmp70, label %if.then78, label %lor.lhs.false71, !dbg !6409

lor.lhs.false71:                                  ; preds = %land.lhs.true64
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !6410
  %cmp77 = icmp eq %struct.rtx_def* %26, %28, !dbg !6411
  br i1 %cmp77, label %if.then78, label %cleanup, !dbg !6412

if.then78:                                        ; preds = %lor.lhs.false71, %land.lhs.true64
  tail call void @start_sequence() #6, !dbg !6413
  %29 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6415
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6415
  %rt_rtx83 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !6415
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !6415
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, !dbg !6415
  %arrayidx85 = bitcast %union.u* %u84 to i64*, !dbg !6415
  %32 = load i64, i64* %arrayidx85, align 8, !dbg !6415
  %cmp86 = icmp eq i64 %32, 1, !dbg !6417
  br i1 %cmp86, label %if.end108, label %if.else, !dbg !6418

if.else:                                          ; preds = %if.then78
  %cmp96 = icmp eq i64 %32, -1, !dbg !6419
  br i1 %cmp96, label %if.end108, label %if.else98, !dbg !6421

if.else98:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 0, metadata !6342, metadata !DIExpression()), !dbg !6348
  %conv = trunc i64 %32 to i32, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6343, metadata !DIExpression()), !dbg !6348
  br label %if.end108

if.end108:                                        ; preds = %if.else98, %if.else, %if.then78
  %normalize.1 = phi i32 [ 0, %if.then78 ], [ %conv, %if.else98 ], [ 0, %if.else ], !dbg !6423
  %subtract.1 = phi i32 [ 0, %if.then78 ], [ 0, %if.else98 ], [ 1, %if.else ], !dbg !6423
  call void @llvm.dbg.value(metadata i32 %subtract.1, metadata !6342, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %normalize.1, metadata !6343, metadata !DIExpression()), !dbg !6348
  %x109 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6424
  %33 = bitcast %struct.rtx_def** %x109 to i32**, !dbg !6424
  %34 = load i32*, i32** %33, align 8, !dbg !6424
  %bf.load110 = load i32, i32* %34, align 8, !dbg !6424
  %bf.lshr111 = lshr i32 %bf.load110, 16, !dbg !6424
  %bf.clear112 = and i32 %bf.lshr111, 255, !dbg !6424
  %call113 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear112) #6, !dbg !6425
  %call114 = tail call fastcc %struct.rtx_def* @noce_emit_store_flag(%struct.noce_if_info* %if_info, %struct.rtx_def* %call113, i32 1, i32 %normalize.1) #7, !dbg !6426
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call114, metadata !6340, metadata !DIExpression()), !dbg !6348
  %tobool115 = icmp eq %struct.rtx_def* %call114, null, !dbg !6427
  br i1 %tobool115, label %if.end126, label %if.then116, !dbg !6429

if.then116:                                       ; preds = %if.end108
  %35 = load i32*, i32** %33, align 8, !dbg !6430
  %bf.load118 = load i32, i32* %35, align 8, !dbg !6430
  %bf.lshr119 = lshr i32 %bf.load118, 16, !dbg !6430
  %bf.clear120 = and i32 %bf.lshr119, 255, !dbg !6430
  %tobool121 = icmp eq i32 %subtract.1, 0, !dbg !6431
  %cond122 = select i1 %tobool121, i32 49, i32 50, !dbg !6431
  %36 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6432
  %37 = bitcast i32* %35 to %struct.rtx_def*, !dbg !6433
  %call125 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear120, i32 %cond122, %struct.rtx_def* %36, %struct.rtx_def* nonnull %call114, %struct.rtx_def* %37, i32 0, i32 2) #6, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call125, metadata !6340, metadata !DIExpression()), !dbg !6348
  br label %if.end126, !dbg !6435

if.end126:                                        ; preds = %if.end108, %if.then116
  %target.0 = phi %struct.rtx_def* [ %call125, %if.then116 ], [ null, %if.end108 ], !dbg !6436
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !6340, metadata !DIExpression()), !dbg !6348
  %tobool127 = icmp eq %struct.rtx_def* %target.0, null, !dbg !6437
  br i1 %tobool127, label %if.end146, label %if.then128, !dbg !6439

if.then128:                                       ; preds = %if.end126
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x109, align 8, !dbg !6440
  %cmp130 = icmp eq %struct.rtx_def* %target.0, %38, !dbg !6443
  br i1 %cmp130, label %if.end134, label %if.then132, !dbg !6444

if.then132:                                       ; preds = %if.then128
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %38, %struct.rtx_def* nonnull %target.0) #7, !dbg !6445
  br label %if.end134, !dbg !6445

if.end134:                                        ; preds = %if.then128, %if.then132
  %call135 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6446
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call135, metadata !6341, metadata !DIExpression()), !dbg !6348
  %tobool136 = icmp eq %struct.rtx_def* %call135, null, !dbg !6447
  br i1 %tobool136, label %cleanup, label %if.end138, !dbg !6449

if.end138:                                        ; preds = %if.end134
  %39 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6450
  %insn_a140 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6451
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn_a140, align 8, !dbg !6451
  %arrayidx143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 1, i32 0, i32 2, !dbg !6451
  %rt_int144 = bitcast i64* %arrayidx143 to i32*, !dbg !6451
  %41 = load i32, i32* %rt_int144, align 8, !dbg !6451
  %call145 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call135, %struct.rtx_def* %39, i32 %41) #6, !dbg !6452
  br label %cleanup, !dbg !6453

if.end146:                                        ; preds = %if.end126
  tail call void @end_sequence() #6, !dbg !6454
  br label %cleanup, !dbg !6455

cleanup:                                          ; preds = %if.end, %if.end134, %if.end62, %lor.lhs.false71, %if.end146, %if.end138, %if.end55
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end55 ], [ false, %if.end138 ], [ false, %if.end ], [ false, %if.end134 ], [ true, %if.end146 ], [ true, %lor.lhs.false71 ], [ true, %if.end62 ]
  %retval.0 = phi i32 [ 1, %if.end55 ], [ 1, %if.end138 ], [ 0, %if.end ], [ 0, %if.end134 ], [ undef, %if.end146 ], [ undef, %lor.lhs.false71 ], [ undef, %if.end62 ]
  br i1 %cleanup.dest.slot.0, label %if.end149, label %cleanup150

if.end149:                                        ; preds = %land.lhs.true2, %land.lhs.true, %cleanup, %entry
  br label %cleanup150, !dbg !6456

cleanup150:                                       ; preds = %cleanup, %if.end149
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ 0, %if.end149 ], !dbg !6348
  ret i32 %retval.1, !dbg !6457
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_store_flag_mask(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6458 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6460, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i32 0, metadata !6463, metadata !DIExpression()), !dbg !6464
  %branch_cost = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6465
  %0 = load i32, i32* %branch_cost, align 4, !dbg !6465
  %cmp = icmp sgt i32 %0, 1, !dbg !6467
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !6468

land.lhs.true:                                    ; preds = %entry
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6469
  %1 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6469
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6470
  %cmp1 = icmp eq %struct.rtx_def* %1, %2, !dbg !6471
  br i1 %cmp1, label %land.lhs.true2, label %lor.lhs.false, !dbg !6472

land.lhs.true2:                                   ; preds = %land.lhs.true
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6473
  %3 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6473
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6474
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6474
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %3, %struct.rtx_def* %4) #6, !dbg !6475
  %tobool = icmp eq i32 %call, 0, !dbg !6475
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6476

lor.lhs.false:                                    ; preds = %land.lhs.true2, %land.lhs.true
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6477
  %5 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !6477
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6478
  %6 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6478
  %call3 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %5, %struct.rtx_def* %6) #6, !dbg !6479
  %cmp4 = icmp ne i32 %call3, 0, !dbg !6480
  %conv = zext i1 %cmp4 to i32, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6463, metadata !DIExpression()), !dbg !6464
  br i1 %cmp4, label %land.lhs.true5, label %cleanup, !dbg !6481

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %b6 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6482
  %7 = load %struct.rtx_def*, %struct.rtx_def** %b6, align 8, !dbg !6482
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6483
  %cmp7 = icmp eq %struct.rtx_def* %7, %8, !dbg !6484
  br i1 %cmp7, label %land.lhs.true9, label %cleanup, !dbg !6485

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6486
  %x11 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6487
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x11, align 8, !dbg !6487
  %call12 = tail call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %10) #6, !dbg !6488
  %tobool13 = icmp eq i32 %call12, 0, !dbg !6488
  br i1 %tobool13, label %cleanup, label %if.then, !dbg !6489

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true9
  %reversep.0 = phi i32 [ 0, %land.lhs.true2 ], [ %conv, %land.lhs.true9 ], !dbg !6464
  call void @llvm.dbg.value(metadata i32 %reversep.0, metadata !6463, metadata !DIExpression()), !dbg !6464
  tail call void @start_sequence() #6, !dbg !6490
  %x14 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6492
  %11 = bitcast %struct.rtx_def** %x14 to i32**, !dbg !6492
  %12 = load i32*, i32** %11, align 8, !dbg !6492
  %bf.load = load i32, i32* %12, align 8, !dbg !6492
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6492
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6492
  %call15 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #6, !dbg !6493
  %call16 = tail call fastcc %struct.rtx_def* @noce_emit_store_flag(%struct.noce_if_info* %if_info, %struct.rtx_def* %call15, i32 %reversep.0, i32 -1) #7, !dbg !6494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call16, metadata !6461, metadata !DIExpression()), !dbg !6464
  %tobool17 = icmp eq %struct.rtx_def* %call16, null, !dbg !6495
  br i1 %tobool17, label %if.end, label %if.then18, !dbg !6497

if.then18:                                        ; preds = %if.then
  %13 = load i32*, i32** %11, align 8, !dbg !6498
  %bf.load20 = load i32, i32* %13, align 8, !dbg !6498
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !6498
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !6498
  %.cast = bitcast i32* %13 to %struct.rtx_def*, !dbg !6499
  %call25 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear22, i32 61, %struct.rtx_def* %.cast, %struct.rtx_def* nonnull %call16, %struct.rtx_def* %.cast, i32 0, i32 2) #6, !dbg !6500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call25, metadata !6461, metadata !DIExpression()), !dbg !6464
  br label %if.end, !dbg !6501

if.end:                                           ; preds = %if.then, %if.then18
  %target.0 = phi %struct.rtx_def* [ %call25, %if.then18 ], [ null, %if.then ], !dbg !6502
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target.0, metadata !6461, metadata !DIExpression()), !dbg !6464
  %tobool26 = icmp eq %struct.rtx_def* %target.0, null, !dbg !6503
  br i1 %tobool26, label %if.end40, label %if.then27, !dbg !6505

if.then27:                                        ; preds = %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x14, align 8, !dbg !6506
  %cmp29 = icmp eq %struct.rtx_def* %target.0, %14, !dbg !6509
  br i1 %cmp29, label %if.end33, label %if.then31, !dbg !6510

if.then31:                                        ; preds = %if.then27
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %14, %struct.rtx_def* nonnull %target.0) #7, !dbg !6511
  br label %if.end33, !dbg !6511

if.end33:                                         ; preds = %if.then27, %if.then31
  %call34 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !6462, metadata !DIExpression()), !dbg !6464
  %tobool35 = icmp eq %struct.rtx_def* %call34, null, !dbg !6513
  br i1 %tobool35, label %cleanup, label %if.end37, !dbg !6515

if.end37:                                         ; preds = %if.end33
  %jump38 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6516
  %15 = load %struct.rtx_def*, %struct.rtx_def** %jump38, align 8, !dbg !6516
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6517
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6517
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i64 0, i32 1, i32 0, i32 2, !dbg !6517
  %rt_int = bitcast i64* %arrayidx to i32*, !dbg !6517
  %17 = load i32, i32* %rt_int, align 8, !dbg !6517
  %call39 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call34, %struct.rtx_def* %15, i32 %17) #6, !dbg !6518
  br label %cleanup, !dbg !6519

if.end40:                                         ; preds = %if.end
  tail call void @end_sequence() #6, !dbg !6520
  br label %cleanup, !dbg !6521

cleanup:                                          ; preds = %if.end33, %land.lhs.true9, %entry, %lor.lhs.false, %land.lhs.true5, %if.end40, %if.end37
  %retval.0 = phi i32 [ 1, %if.end37 ], [ 0, %if.end33 ], [ 0, %if.end40 ], [ 0, %land.lhs.true9 ], [ 0, %land.lhs.true5 ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !6464
  ret i32 %retval.0, !dbg !6522
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_cmove_arith(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6523 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6525, metadata !DIExpression()), !dbg !6552
  %a1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6553
  %0 = load %struct.rtx_def*, %struct.rtx_def** %a1, align 8, !dbg !6553
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6526, metadata !DIExpression()), !dbg !6552
  %b2 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6554
  %1 = load %struct.rtx_def*, %struct.rtx_def** %b2, align 8, !dbg !6554
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !6527, metadata !DIExpression()), !dbg !6552
  %x3 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6555
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x3, align 8, !dbg !6555
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6528, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i32 0, metadata !6535, metadata !DIExpression()), !dbg !6552
  %3 = load i32, i32* @cse_not_expected, align 4, !dbg !6556
  %tobool = icmp eq i32 %3, 0, !dbg !6556
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6557

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6558
  %bf.load = load i32, i32* %4, align 8, !dbg !6558
  %bf.clear = and i32 %bf.load, 65535, !dbg !6558
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !6558
  br i1 %cmp, label %land.lhs.true4, label %if.else, !dbg !6559

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !6560
  %bf.load5 = load i32, i32* %5, align 8, !dbg !6560
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6560
  %cmp7 = icmp eq i32 %bf.clear6, 43, !dbg !6560
  br i1 %cmp7, label %land.lhs.true8, label %if.else, !dbg !6561

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6562
  %rt_mem = bitcast %union.rtunion_def* %6 to %struct.mem_attrs**, !dbg !6562
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !6562
  %cmp9 = icmp eq %struct.mem_attrs* %7, null, !dbg !6562
  br i1 %cmp9, label %cond.end, label %cond.false, !dbg !6562

cond.false:                                       ; preds = %land.lhs.true8
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !6562
  %8 = load i8, i8* %addrspace, align 8, !dbg !6562
  %conv = zext i8 %8 to i32, !dbg !6562
  br label %cond.end, !dbg !6562

cond.end:                                         ; preds = %land.lhs.true8, %cond.false
  %cond = phi i32 [ %conv, %cond.false ], [ 0, %land.lhs.true8 ], !dbg !6562
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6563
  %rt_mem17 = bitcast %union.rtunion_def* %9 to %struct.mem_attrs**, !dbg !6563
  %10 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem17, align 8, !dbg !6563
  %cmp18 = icmp eq %struct.mem_attrs* %10, null, !dbg !6563
  br i1 %cmp18, label %cond.end28, label %cond.false21, !dbg !6563

cond.false21:                                     ; preds = %cond.end
  %addrspace26 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i64 0, i32 5, !dbg !6563
  %11 = load i8, i8* %addrspace26, align 8, !dbg !6563
  %conv27 = zext i8 %11 to i32, !dbg !6563
  br label %cond.end28, !dbg !6563

cond.end28:                                       ; preds = %cond.end, %cond.false21
  %cond29 = phi i32 [ %conv27, %cond.false21 ], [ 0, %cond.end ], !dbg !6563
  %cmp30 = icmp eq i32 %cond, %cond29, !dbg !6564
  br i1 %cmp30, label %land.lhs.true32, label %if.else, !dbg !6565

land.lhs.true32:                                  ; preds = %cond.end28
  %branch_cost = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6566
  %12 = load i32, i32* %branch_cost, align 4, !dbg !6566
  %cmp33 = icmp sgt i32 %12, 4, !dbg !6567
  br i1 %cmp33, label %if.then, label %if.else, !dbg !6568

if.then:                                          ; preds = %land.lhs.true32
  %13 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !6569
  br i1 %cmp9, label %cond.end49, label %cond.false42, !dbg !6570

cond.false42:                                     ; preds = %if.then
  %addrspace47 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %7, i64 0, i32 5, !dbg !6570
  %14 = load i8, i8* %addrspace47, align 8, !dbg !6570
  br label %cond.end49, !dbg !6570

cond.end49:                                       ; preds = %if.then, %cond.false42
  %cond50 = phi i8 [ %14, %cond.false42 ], [ 0, %if.then ], !dbg !6570
  %call = tail call i32 %13(i8 zeroext %cond50) #6, !dbg !6571
  call void @llvm.dbg.value(metadata i32 %call, metadata !6538, metadata !DIExpression()), !dbg !6572
  %arrayidx54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6573
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !6573
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6573
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !6526, metadata !DIExpression()), !dbg !6552
  %arrayidx57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6574
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !6574
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !6574
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !6527, metadata !DIExpression()), !dbg !6552
  %call59 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %call) #6, !dbg !6575
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !6528, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i32 1, metadata !6535, metadata !DIExpression()), !dbg !6552
  br label %if.end65, !dbg !6576

if.else:                                          ; preds = %entry, %land.lhs.true32, %cond.end28, %land.lhs.true4, %land.lhs.true
  %call60 = tail call i32 @may_trap_p(%struct.rtx_def* %0) #6, !dbg !6577
  %tobool61 = icmp eq i32 %call60, 0, !dbg !6577
  br i1 %tobool61, label %lor.lhs.false, label %cleanup594, !dbg !6579

lor.lhs.false:                                    ; preds = %if.else
  %call62 = tail call i32 @may_trap_p(%struct.rtx_def* %1) #6, !dbg !6580
  %tobool63 = icmp eq i32 %call62, 0, !dbg !6580
  br i1 %tobool63, label %if.end65, label %cleanup594, !dbg !6581

if.end65:                                         ; preds = %lor.lhs.false, %cond.end49
  %is_mem.0 = phi i32 [ 1, %cond.end49 ], [ 0, %lor.lhs.false ], !dbg !6552
  %x.0 = phi %struct.rtx_def* [ %call59, %cond.end49 ], [ %2, %lor.lhs.false ], !dbg !6552
  %b.0 = phi %struct.rtx_def* [ %16, %cond.end49 ], [ %1, %lor.lhs.false ], !dbg !6552
  %a.0 = phi %struct.rtx_def* [ %15, %cond.end49 ], [ %0, %lor.lhs.false ], !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.0, metadata !6526, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.0, metadata !6527, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !6528, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i32 %is_mem.0, metadata !6535, metadata !DIExpression()), !dbg !6552
  %cond66 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6582
  %17 = bitcast %struct.rtx_def** %cond66 to i32**, !dbg !6582
  %18 = load i32*, i32** %17, align 8, !dbg !6582
  %bf.load67 = load i32, i32* %18, align 8, !dbg !6582
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !6582
  call void @llvm.dbg.value(metadata i32 %bf.clear68, metadata !6537, metadata !DIExpression()), !dbg !6552
  %insn_a69 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6583
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn_a69, align 8, !dbg !6583
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !6531, metadata !DIExpression()), !dbg !6552
  %insn_b70 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 8, !dbg !6584
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn_b70, align 8, !dbg !6584
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6532, metadata !DIExpression()), !dbg !6552
  %tobool71 = icmp eq %struct.rtx_def* %19, null, !dbg !6585
  br i1 %tobool71, label %if.end91, label %if.then72, !dbg !6587

if.then72:                                        ; preds = %if.end65
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, !dbg !6588
  %21 = getelementptr inbounds %union.u, %union.u* %u73, i64 1, i32 0, i32 0, i64 0, !dbg !6588
  %rt_rtx76 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !6588
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !6588
  %arrayidx79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 1, !dbg !6590
  %rt_bb = bitcast %struct.object_block** %arrayidx79 to %struct.basic_block_def**, !dbg !6590
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6590
  %call80 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %23) #6, !dbg !6591
  %call81 = tail call i32 @insn_rtx_cost(%struct.rtx_def* %22, i8 zeroext %call80) #6, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %call81, metadata !6536, metadata !DIExpression()), !dbg !6552
  %cmp82 = icmp eq i32 %call81, 0, !dbg !6593
  br i1 %cmp82, label %cleanup594, label %lor.lhs.false84, !dbg !6595

lor.lhs.false84:                                  ; preds = %if.then72
  %branch_cost85 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6596
  %24 = load i32, i32* %branch_cost85, align 4, !dbg !6596
  %mul = shl nsw i32 %24, 2, !dbg !6596
  %cmp86 = icmp sgt i32 %call81, %mul, !dbg !6597
  br i1 %cmp86, label %cleanup594, label %if.end91, !dbg !6598

if.end91:                                         ; preds = %if.end65, %lor.lhs.false84
  %insn_cost.0 = phi i32 [ %call81, %lor.lhs.false84 ], [ 0, %if.end65 ], !dbg !6599
  call void @llvm.dbg.value(metadata i32 %insn_cost.0, metadata !6536, metadata !DIExpression()), !dbg !6552
  %tobool92 = icmp eq %struct.rtx_def* %20, null, !dbg !6600
  br i1 %tobool92, label %if.end113, label %if.then93, !dbg !6602

if.then93:                                        ; preds = %if.end91
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, !dbg !6603
  %25 = getelementptr inbounds %union.u, %union.u* %u94, i64 1, i32 0, i32 0, i64 0, !dbg !6603
  %rt_rtx97 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !6603
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !6603
  %arrayidx100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, i32 0, i32 1, !dbg !6605
  %rt_bb101 = bitcast %struct.object_block** %arrayidx100 to %struct.basic_block_def**, !dbg !6605
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb101, align 8, !dbg !6605
  %call102 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %27) #6, !dbg !6606
  %call103 = tail call i32 @insn_rtx_cost(%struct.rtx_def* %26, i8 zeroext %call102) #6, !dbg !6607
  %add = add nsw i32 %insn_cost.0, %call103, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %add, metadata !6536, metadata !DIExpression()), !dbg !6552
  %cmp104 = icmp eq i32 %add, 0, !dbg !6609
  br i1 %cmp104, label %cleanup594, label %lor.lhs.false106, !dbg !6611

lor.lhs.false106:                                 ; preds = %if.then93
  %branch_cost107 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 13, !dbg !6612
  %28 = load i32, i32* %branch_cost107, align 4, !dbg !6612
  %mul108 = shl nsw i32 %28, 2, !dbg !6612
  %cmp109 = icmp sgt i32 %add, %mul108, !dbg !6613
  br i1 %cmp109, label %cleanup594, label %if.end113, !dbg !6614

if.end113:                                        ; preds = %if.end91, %lor.lhs.false106
  %29 = load %struct.rtx_def*, %struct.rtx_def** %cond66, align 8, !dbg !6615
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6616
  %30 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6616
  %call115 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %29, %struct.rtx_def* %30) #6, !dbg !6617
  %cmp116 = icmp eq i32 %call115, 0, !dbg !6618
  br i1 %cmp116, label %if.end136, label %if.then118, !dbg !6619

if.then118:                                       ; preds = %if.end113
  call void @llvm.dbg.value(metadata i32 0, metadata !6541, metadata !DIExpression()), !dbg !6620
  %call119 = tail call i32 @rtx_equal_p(%struct.rtx_def* %b.0, %struct.rtx_def* %x.0) #6, !dbg !6621
  %tobool120 = icmp eq i32 %call119, 0, !dbg !6621
  br i1 %tobool120, label %if.else122, label %if.end129, !dbg !6623

if.else122:                                       ; preds = %if.then118
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b.0, i64 0, i32 0, !dbg !6624
  %bf.load123 = load i32, i32* %31, align 8, !dbg !6624
  %bf.lshr = lshr i32 %bf.load123, 16, !dbg !6624
  %bf.clear124 = and i32 %bf.lshr, 255, !dbg !6624
  %call125 = tail call i32 @general_operand(%struct.rtx_def* %b.0, i32 %bf.clear124) #6, !dbg !6626
  %tobool126 = icmp ne i32 %call125, 0, !dbg !6626
  %spec.select = zext i1 %tobool126 to i32, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6541, metadata !DIExpression()), !dbg !6620
  br label %if.end129

if.end129:                                        ; preds = %if.then118, %if.else122
  %reversep.1 = phi i32 [ %spec.select, %if.else122 ], [ 1, %if.then118 ], !dbg !6628
  call void @llvm.dbg.value(metadata i32 %reversep.1, metadata !6541, metadata !DIExpression()), !dbg !6620
  %tobool130 = icmp eq i32 %reversep.1, 0, !dbg !6629
  br i1 %tobool130, label %if.end136, label %if.then131, !dbg !6631

if.then131:                                       ; preds = %if.end129
  %32 = load %struct.rtx_def*, %struct.rtx_def** %cond66, align 8, !dbg !6632
  %33 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6634
  %call134 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %32, %struct.rtx_def* %33) #6, !dbg !6635
  call void @llvm.dbg.value(metadata i32 %call134, metadata !6537, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.0, metadata !6533, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.0, metadata !6526, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.0, metadata !6527, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !6533, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !6531, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !6532, metadata !DIExpression()), !dbg !6552
  br label %if.end136, !dbg !6636

if.end136:                                        ; preds = %if.end129, %if.end113, %if.then131
  %insn_b.1 = phi %struct.rtx_def* [ %20, %if.end113 ], [ %19, %if.then131 ], [ %20, %if.end129 ], !dbg !6552
  %insn_a.1 = phi %struct.rtx_def* [ %19, %if.end113 ], [ %20, %if.then131 ], [ %19, %if.end129 ], !dbg !6552
  %code.1 = phi i32 [ %bf.clear68, %if.end113 ], [ %call134, %if.then131 ], [ %bf.clear68, %if.end129 ], !dbg !6552
  %b.2 = phi %struct.rtx_def* [ %b.0, %if.end113 ], [ %a.0, %if.then131 ], [ %b.0, %if.end129 ], !dbg !6552
  %a.2 = phi %struct.rtx_def* [ %a.0, %if.end113 ], [ %b.0, %if.then131 ], [ %a.0, %if.end129 ], !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.2, metadata !6526, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.2, metadata !6527, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !6537, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_a.1, metadata !6531, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn_b.1, metadata !6532, metadata !DIExpression()), !dbg !6552
  tail call void @start_sequence() #6, !dbg !6637
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.2, metadata !6529, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.2, metadata !6530, metadata !DIExpression()), !dbg !6552
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %a.2, i64 0, i32 0, !dbg !6638
  %bf.load137 = load i32, i32* %34, align 8, !dbg !6638
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !6638
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !6638
  %call140 = tail call i32 @general_operand(%struct.rtx_def* %a.2, i32 %bf.clear139) #6, !dbg !6639
  %tobool141 = icmp eq i32 %call140, 0, !dbg !6639
  br i1 %tobool141, label %if.then142, label %if.end220, !dbg !6640

if.then142:                                       ; preds = %if.end136
  %tobool143 = icmp eq i32 %is_mem.0, 0, !dbg !6641
  br i1 %tobool143, label %if.else151, label %if.then144, !dbg !6643

if.then144:                                       ; preds = %if.then142
  %bf.load145 = load i32, i32* %34, align 8, !dbg !6644
  %bf.lshr146 = lshr i32 %bf.load145, 16, !dbg !6644
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !6644
  %call148 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear147) #6, !dbg !6646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call148, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call149 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call148, %struct.rtx_def* %a.2) #6, !dbg !6647
  %call150 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call149) #6, !dbg !6648
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call150, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %if.end214, !dbg !6649

if.else151:                                       ; preds = %if.then142
  %tobool152 = icmp eq %struct.rtx_def* %insn_a.1, null, !dbg !6650
  br i1 %tobool152, label %cleanup, label %if.else154, !dbg !6652

if.else154:                                       ; preds = %if.else151
  %bf.load155 = load i32, i32* %34, align 8, !dbg !6653
  %bf.lshr156 = lshr i32 %bf.load155, 16, !dbg !6653
  %bf.clear157 = and i32 %bf.lshr156, 255, !dbg !6653
  %call158 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear157) #6, !dbg !6655
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call158, metadata !6526, metadata !DIExpression()), !dbg !6552
  %call159 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* nonnull %insn_a.1) #6, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call159, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %cond.true179, !dbg !6657

lor.lhs.false164:                                 ; No predecessors!
  br label %cond.true179, !dbg !6657

lor.lhs.false169:                                 ; No predecessors!
  br label %cond.true179, !dbg !6657

lor.lhs.false174:                                 ; No predecessors!
  br label %cond.true179, !dbg !6657

cond.true179:                                     ; preds = %lor.lhs.false169, %lor.lhs.false164, %if.else154, %lor.lhs.false174
  %u180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call159, i64 0, i32 1, !dbg !6657
  %35 = getelementptr inbounds %union.u, %union.u* %u180, i64 1, i32 0, i32 0, i64 0, !dbg !6657
  %36 = bitcast %union.rtunion_def* %35 to i32**, !dbg !6657
  %37 = load i32*, i32** %36, align 8, !dbg !6657
  %bf.load184 = load i32, i32* %37, align 8, !dbg !6657
  %bf.clear185 = and i32 %bf.load184, 65535, !dbg !6657
  %cmp186 = icmp eq i32 %bf.clear185, 23, !dbg !6657
  %rt_rtx192 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !6657
  %38 = bitcast i32* %37 to %struct.rtx_def*, !dbg !6657
  br i1 %cmp186, label %cond.end202, label %cond.false193, !dbg !6657

cond.false193:                                    ; preds = %cond.true179
  %call198 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call159, %struct.rtx_def* %38) #6, !dbg !6657
  br label %cond.end202, !dbg !6657

cond.end202:                                      ; preds = %cond.false193, %cond.true179
  %cond203 = phi %struct.rtx_def* [ %call198, %cond.false193 ], [ %38, %cond.true179 ], !dbg !6657
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond203, metadata !6544, metadata !DIExpression()), !dbg !6658
  %arrayidx206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond203, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6659
  %rt_rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**, !dbg !6659
  store %struct.rtx_def* %call158, %struct.rtx_def** %rt_rtx207, align 8, !dbg !6660
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !6661
  %call212 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %39) #6, !dbg !6662
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call212, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %if.end214

if.end214:                                        ; preds = %cond.end202, %if.then144
  %tmp.0 = phi %struct.rtx_def* [ %call150, %if.then144 ], [ %call212, %cond.end202 ], !dbg !6663
  %a.3 = phi %struct.rtx_def* [ %a.2, %if.then144 ], [ %call158, %cond.end202 ], !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.3, metadata !6526, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call215 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %tmp.0) #7, !dbg !6664
  %40 = lshr i32 %call215, 30, !dbg !6666
  %41 = and i32 %40, 2, !dbg !6666
  br label %cleanup, !dbg !6666

cleanup:                                          ; preds = %if.else151, %if.end214
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.else151 ], [ %41, %if.end214 ]
  %a.4 = phi %struct.rtx_def* [ %a.2, %if.else151 ], [ %a.3, %if.end214 ], !dbg !6667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.4, metadata !6526, metadata !DIExpression()), !dbg !6552
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %if.end220, label %end_seq_and_fail

if.end220:                                        ; preds = %if.end136, %cleanup
  %a.5 = phi %struct.rtx_def* [ %a.2, %if.end136 ], [ %a.4, %cleanup ], !dbg !6667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %a.5, metadata !6526, metadata !DIExpression()), !dbg !6552
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %b.2, i64 0, i32 0, !dbg !6668
  %bf.load221 = load i32, i32* %42, align 8, !dbg !6668
  %bf.lshr222 = lshr i32 %bf.load221, 16, !dbg !6668
  %bf.clear223 = and i32 %bf.lshr222, 255, !dbg !6668
  %call224 = tail call i32 @general_operand(%struct.rtx_def* %b.2, i32 %bf.clear223) #6, !dbg !6669
  %tobool225 = icmp eq i32 %call224, 0, !dbg !6669
  br i1 %tobool225, label %if.then226, label %if.end322, !dbg !6670

if.then226:                                       ; preds = %if.end220
  %tobool228 = icmp eq i32 %is_mem.0, 0, !dbg !6671
  br i1 %tobool228, label %if.else235, label %if.then229, !dbg !6673

if.then229:                                       ; preds = %if.then226
  %bf.load230 = load i32, i32* %42, align 8, !dbg !6674
  %bf.lshr231 = lshr i32 %bf.load230, 16, !dbg !6674
  %bf.clear232 = and i32 %bf.lshr231, 255, !dbg !6674
  %call233 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear232) #6, !dbg !6676
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call233, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call234 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call233, %struct.rtx_def* %b.2) #6, !dbg !6677
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call234, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %if.end297, !dbg !6678

if.else235:                                       ; preds = %if.then226
  %tobool236 = icmp eq %struct.rtx_def* %insn_b.1, null, !dbg !6679
  br i1 %tobool236, label %cleanup318, label %if.else238, !dbg !6681

if.else238:                                       ; preds = %if.else235
  %bf.load239 = load i32, i32* %42, align 8, !dbg !6682
  %bf.lshr240 = lshr i32 %bf.load239, 16, !dbg !6682
  %bf.clear241 = and i32 %bf.lshr240, 255, !dbg !6682
  %call242 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear241) #6, !dbg !6684
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call242, metadata !6527, metadata !DIExpression()), !dbg !6552
  %call243 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* nonnull %insn_b.1) #6, !dbg !6685
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call243, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %cond.true263, !dbg !6686

lor.lhs.false248:                                 ; No predecessors!
  br label %cond.true263, !dbg !6686

lor.lhs.false253:                                 ; No predecessors!
  br label %cond.true263, !dbg !6686

lor.lhs.false258:                                 ; No predecessors!
  br label %cond.true263, !dbg !6686

cond.true263:                                     ; preds = %lor.lhs.false253, %lor.lhs.false248, %if.else238, %lor.lhs.false258
  %u264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call243, i64 0, i32 1, !dbg !6686
  %43 = getelementptr inbounds %union.u, %union.u* %u264, i64 1, i32 0, i32 0, i64 0, !dbg !6686
  %44 = bitcast %union.rtunion_def* %43 to i32**, !dbg !6686
  %45 = load i32*, i32** %44, align 8, !dbg !6686
  %bf.load268 = load i32, i32* %45, align 8, !dbg !6686
  %bf.clear269 = and i32 %bf.load268, 65535, !dbg !6686
  %cmp270 = icmp eq i32 %bf.clear269, 23, !dbg !6686
  %rt_rtx276 = bitcast %union.rtunion_def* %43 to %struct.rtx_def**, !dbg !6686
  %46 = bitcast i32* %45 to %struct.rtx_def*, !dbg !6686
  br i1 %cmp270, label %cond.end286, label %cond.false277, !dbg !6686

cond.false277:                                    ; preds = %cond.true263
  %call282 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call243, %struct.rtx_def* %46) #6, !dbg !6686
  br label %cond.end286, !dbg !6686

cond.end286:                                      ; preds = %cond.false277, %cond.true263
  %cond287 = phi %struct.rtx_def* [ %call282, %cond.false277 ], [ %46, %cond.true263 ], !dbg !6686
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond287, metadata !6547, metadata !DIExpression()), !dbg !6687
  %arrayidx290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond287, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6688
  %rt_rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**, !dbg !6688
  store %struct.rtx_def* %call242, %struct.rtx_def** %rt_rtx291, align 8, !dbg !6689
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx276, align 8, !dbg !6690
  call void @llvm.dbg.value(metadata %struct.rtx_def* %47, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %if.end297

if.end297:                                        ; preds = %cond.end286, %if.then229
  %tmp.1 = phi %struct.rtx_def* [ %call234, %if.then229 ], [ %47, %cond.end286 ], !dbg !6691
  %b.3 = phi %struct.rtx_def* [ %b.2, %if.then229 ], [ %call242, %cond.end286 ], !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.3, metadata !6527, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.1, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call298 = tail call %struct.rtx_def* @get_last_insn() #6, !dbg !6692
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call298, metadata !6550, metadata !DIExpression()), !dbg !6687
  %tobool299 = icmp eq %struct.rtx_def* %call298, null, !dbg !6693
  br i1 %tobool299, label %if.else310, label %land.lhs.true300, !dbg !6695

land.lhs.true300:                                 ; preds = %if.end297
  %call301 = tail call i32 @modified_in_p(%struct.rtx_def* %b.2, %struct.rtx_def* nonnull %call298) #6, !dbg !6696
  %tobool302 = icmp eq i32 %call301, 0, !dbg !6696
  br i1 %tobool302, label %if.else310, label %if.then303, !dbg !6697

if.then303:                                       ; preds = %land.lhs.true300
  %call304 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6698
  %call305 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %tmp.1, %struct.rtx_def* %call304) #6, !dbg !6700
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call305, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call306 = tail call i32 @modified_in_p(%struct.rtx_def* %a.2, %struct.rtx_def* %call305) #6, !dbg !6701
  %tobool307 = icmp eq i32 %call306, 0, !dbg !6701
  br i1 %tobool307, label %if.end312, label %cleanup318, !dbg !6703

if.else310:                                       ; preds = %land.lhs.true300, %if.end297
  %call311 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %tmp.1) #6, !dbg !6704
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call311, metadata !6533, metadata !DIExpression()), !dbg !6552
  br label %if.end312

if.end312:                                        ; preds = %if.then303, %if.else310
  %tmp.2 = phi %struct.rtx_def* [ %call311, %if.else310 ], [ %call305, %if.then303 ], !dbg !6705
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.2, metadata !6533, metadata !DIExpression()), !dbg !6552
  %call313 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %tmp.2) #7, !dbg !6706
  %48 = lshr i32 %call313, 30, !dbg !6708
  %49 = and i32 %48, 2, !dbg !6708
  br label %cleanup318, !dbg !6708

cleanup318:                                       ; preds = %if.then303, %if.else235, %if.end312
  %cleanup.dest.slot.1 = phi i32 [ 2, %if.else235 ], [ 2, %if.then303 ], [ %49, %if.end312 ]
  %b.4 = phi %struct.rtx_def* [ %b.2, %if.else235 ], [ %b.3, %if.then303 ], [ %b.3, %if.end312 ], !dbg !6709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.4, metadata !6527, metadata !DIExpression()), !dbg !6552
  %switch4 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch4, label %if.end322, label %end_seq_and_fail

if.end322:                                        ; preds = %if.end220, %cleanup318
  %b.5 = phi %struct.rtx_def* [ %b.2, %if.end220 ], [ %b.4, %cleanup318 ], !dbg !6709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %b.5, metadata !6527, metadata !DIExpression()), !dbg !6552
  %50 = load %struct.rtx_def*, %struct.rtx_def** %cond66, align 8, !dbg !6710
  %arrayidx326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6710
  %rt_rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**, !dbg !6710
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx327, align 8, !dbg !6710
  %52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6711
  %rt_rtx332 = bitcast %union.rtunion_def* %52 to %struct.rtx_def**, !dbg !6711
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx332, align 8, !dbg !6711
  %call333 = tail call fastcc %struct.rtx_def* @noce_emit_cmove(%struct.noce_if_info* %if_info, %struct.rtx_def* %x.0, i32 %code.1, %struct.rtx_def* %51, %struct.rtx_def* %53, %struct.rtx_def* %a.5, %struct.rtx_def* %b.5) #7, !dbg !6712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call333, metadata !6534, metadata !DIExpression()), !dbg !6552
  %tobool334 = icmp eq %struct.rtx_def* %call333, null, !dbg !6713
  br i1 %tobool334, label %end_seq_and_fail, label %if.end336, !dbg !6715

if.end336:                                        ; preds = %if.end322
  %tobool337 = icmp eq i32 %is_mem.0, 0, !dbg !6716
  br i1 %tobool337, label %if.else578, label %if.then338, !dbg !6718

if.then338:                                       ; preds = %if.end336
  %54 = bitcast %struct.rtx_def** %x3 to i32**, !dbg !6719
  %55 = load i32*, i32** %54, align 8, !dbg !6719
  %bf.load340 = load i32, i32* %55, align 8, !dbg !6719
  %bf.lshr341 = lshr i32 %bf.load340, 16, !dbg !6719
  %bf.clear342 = and i32 %bf.lshr341, 255, !dbg !6719
  %call343 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear342, %struct.rtx_def* nonnull %call333) #6, !dbg !6721
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call343, metadata !6533, metadata !DIExpression()), !dbg !6552
  %56 = bitcast %struct.rtx_def** %a1 to i32**, !dbg !6722
  %57 = load i32*, i32** %56, align 8, !dbg !6722
  %bf.load345 = load i32, i32* %57, align 8, !dbg !6722
  %bf.clear347 = and i32 %bf.load345, 134217728, !dbg !6722
  %tobool348 = icmp eq i32 %bf.clear347, 0, !dbg !6722
  %58 = bitcast i32* %57 to %struct.rtx_def*, !dbg !6724
  br i1 %tobool348, label %lor.lhs.false349, label %if.then355, !dbg !6724

lor.lhs.false349:                                 ; preds = %if.then338
  %59 = bitcast %struct.rtx_def** %b2 to i32**, !dbg !6725
  %60 = load i32*, i32** %59, align 8, !dbg !6725
  %bf.load351 = load i32, i32* %60, align 8, !dbg !6725
  %bf.clear353 = and i32 %bf.load351, 134217728, !dbg !6725
  %tobool354 = icmp eq i32 %bf.clear353, 0, !dbg !6725
  br i1 %tobool354, label %if.end358, label %if.then355, !dbg !6726

if.then355:                                       ; preds = %lor.lhs.false349, %if.then338
  %61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call343, i64 0, i32 0, !dbg !6727
  %bf.load356 = load i32, i32* %61, align 8, !dbg !6728
  %bf.set = or i32 %bf.load356, 134217728, !dbg !6728
  store i32 %bf.set, i32* %61, align 8, !dbg !6728
  %.pre = load i32*, i32** %56, align 8, !dbg !6729
  %bf.load360.pre = load i32, i32* %.pre, align 8, !dbg !6729
  %62 = bitcast i32* %.pre to %struct.rtx_def*, !dbg !6727
  br label %if.end358, !dbg !6727

if.end358:                                        ; preds = %lor.lhs.false349, %if.then355
  %63 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %64 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %65 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %66 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %67 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %68 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %69 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %70 = phi %struct.rtx_def* [ %58, %lor.lhs.false349 ], [ %62, %if.then355 ]
  %bf.load360 = phi i32 [ %bf.load345, %lor.lhs.false349 ], [ %bf.load360.pre, %if.then355 ], !dbg !6729
  %bf.clear362 = and i32 %bf.load360, 268435456, !dbg !6729
  %tobool363 = icmp eq i32 %bf.clear362, 0, !dbg !6729
  br i1 %tobool363, label %if.end374, label %land.lhs.true364, !dbg !6731

land.lhs.true364:                                 ; preds = %if.end358
  %71 = bitcast %struct.rtx_def** %b2 to i32**, !dbg !6732
  %72 = load i32*, i32** %71, align 8, !dbg !6732
  %bf.load366 = load i32, i32* %72, align 8, !dbg !6732
  %bf.clear368 = and i32 %bf.load366, 268435456, !dbg !6732
  %tobool369 = icmp eq i32 %bf.clear368, 0, !dbg !6732
  br i1 %tobool369, label %if.end374, label %if.then370, !dbg !6733

if.then370:                                       ; preds = %land.lhs.true364
  %73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call343, i64 0, i32 0, !dbg !6734
  %bf.load371 = load i32, i32* %73, align 8, !dbg !6735
  %bf.set373 = or i32 %bf.load371, 268435456, !dbg !6735
  store i32 %bf.set373, i32* %73, align 8, !dbg !6735
  %.pre7 = load i32*, i32** %56, align 8, !dbg !6736
  %bf.load376.pre = load i32, i32* %.pre7, align 8, !dbg !6736
  %74 = bitcast i32* %.pre7 to %struct.rtx_def*, !dbg !6734
  br label %if.end374, !dbg !6734

if.end374:                                        ; preds = %land.lhs.true364, %if.end358, %if.then370
  %75 = phi %struct.rtx_def* [ %63, %land.lhs.true364 ], [ %63, %if.end358 ], [ %74, %if.then370 ]
  %76 = phi %struct.rtx_def* [ %64, %land.lhs.true364 ], [ %64, %if.end358 ], [ %74, %if.then370 ]
  %77 = phi %struct.rtx_def* [ %65, %land.lhs.true364 ], [ %65, %if.end358 ], [ %74, %if.then370 ]
  %78 = phi %struct.rtx_def* [ %66, %land.lhs.true364 ], [ %66, %if.end358 ], [ %74, %if.then370 ]
  %79 = phi %struct.rtx_def* [ %67, %land.lhs.true364 ], [ %67, %if.end358 ], [ %74, %if.then370 ]
  %80 = phi %struct.rtx_def* [ %68, %land.lhs.true364 ], [ %68, %if.end358 ], [ %74, %if.then370 ]
  %81 = phi %struct.rtx_def* [ %69, %land.lhs.true364 ], [ %69, %if.end358 ], [ %74, %if.then370 ]
  %82 = phi %struct.rtx_def* [ %70, %land.lhs.true364 ], [ %70, %if.end358 ], [ %74, %if.then370 ]
  %bf.load376 = phi i32 [ %bf.load360, %land.lhs.true364 ], [ %bf.load360, %if.end358 ], [ %bf.load376.pre, %if.then370 ], !dbg !6736
  %tobool378 = icmp slt i32 %bf.load376, 0, !dbg !6736
  br i1 %tobool378, label %land.lhs.true379, label %if.end388, !dbg !6738

land.lhs.true379:                                 ; preds = %if.end374
  %83 = bitcast %struct.rtx_def** %b2 to i32**, !dbg !6739
  %84 = load i32*, i32** %83, align 8, !dbg !6739
  %bf.load381 = load i32, i32* %84, align 8, !dbg !6739
  %tobool383 = icmp slt i32 %bf.load381, 0, !dbg !6739
  br i1 %tobool383, label %if.then384, label %if.end388, !dbg !6740

if.then384:                                       ; preds = %land.lhs.true379
  %85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call343, i64 0, i32 0, !dbg !6741
  %bf.load385 = load i32, i32* %85, align 8, !dbg !6742
  %bf.set387 = or i32 %bf.load385, -2147483648, !dbg !6742
  store i32 %bf.set387, i32* %85, align 8, !dbg !6742
  %.pre9 = load %struct.rtx_def*, %struct.rtx_def** %a1, align 8, !dbg !6743
  br label %if.end388, !dbg !6741

if.end388:                                        ; preds = %if.then384, %land.lhs.true379, %if.end374
  %86 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %75, %land.lhs.true379 ], [ %75, %if.end374 ]
  %87 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %76, %land.lhs.true379 ], [ %76, %if.end374 ]
  %88 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %77, %land.lhs.true379 ], [ %77, %if.end374 ]
  %89 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %78, %land.lhs.true379 ], [ %78, %if.end374 ]
  %90 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %79, %land.lhs.true379 ], [ %79, %if.end374 ]
  %91 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %80, %land.lhs.true379 ], [ %80, %if.end374 ]
  %92 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %81, %land.lhs.true379 ], [ %81, %if.end374 ]
  %93 = phi %struct.rtx_def* [ %.pre9, %if.then384 ], [ %82, %land.lhs.true379 ], [ %82, %if.end374 ], !dbg !6743
  %94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6743
  %rt_mem393 = bitcast %union.rtunion_def* %94 to %struct.mem_attrs**, !dbg !6743
  %95 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem393, align 8, !dbg !6743
  %cmp394 = icmp eq %struct.mem_attrs* %95, null, !dbg !6743
  br i1 %cmp394, label %cond.end403, label %cond.false397, !dbg !6743

cond.false397:                                    ; preds = %if.end388
  %96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6743
  %rt_mem402 = bitcast %union.rtunion_def* %96 to %struct.mem_attrs**, !dbg !6743
  %97 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem402, align 8, !dbg !6743
  %alias = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %97, i64 0, i32 3, !dbg !6743
  %98 = load i32, i32* %alias, align 8, !dbg !6743
  br label %cond.end403, !dbg !6743

cond.end403:                                      ; preds = %if.end388, %cond.false397
  %cond404 = phi i32 [ %98, %cond.false397 ], [ 0, %if.end388 ], !dbg !6743
  %99 = load %struct.rtx_def*, %struct.rtx_def** %b2, align 8, !dbg !6745
  %100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6745
  %rt_mem409 = bitcast %union.rtunion_def* %100 to %struct.mem_attrs**, !dbg !6745
  %101 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem409, align 8, !dbg !6745
  %cmp410 = icmp eq %struct.mem_attrs* %101, null, !dbg !6745
  br i1 %cmp410, label %cond.end420, label %cond.false413, !dbg !6745

cond.false413:                                    ; preds = %cond.end403
  %alias419 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %101, i64 0, i32 3, !dbg !6745
  %102 = load i32, i32* %alias419, align 8, !dbg !6745
  br label %cond.end420, !dbg !6745

cond.end420:                                      ; preds = %cond.end403, %cond.false413
  %cond421 = phi i32 [ %102, %cond.false413 ], [ 0, %cond.end403 ], !dbg !6745
  %cmp422 = icmp eq i32 %cond404, %cond421, !dbg !6746
  br i1 %cmp422, label %if.then424, label %if.end442, !dbg !6747

if.then424:                                       ; preds = %cond.end420
  %103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6748
  %rt_mem429 = bitcast %union.rtunion_def* %103 to %struct.mem_attrs**, !dbg !6748
  %104 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem429, align 8, !dbg !6748
  %cmp430 = icmp eq %struct.mem_attrs* %104, null, !dbg !6748
  br i1 %cmp430, label %cond.end440, label %cond.false433, !dbg !6748

cond.false433:                                    ; preds = %if.then424
  %105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6748
  %rt_mem438 = bitcast %union.rtunion_def* %105 to %struct.mem_attrs**, !dbg !6748
  %106 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem438, align 8, !dbg !6748
  %alias439 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %106, i64 0, i32 3, !dbg !6748
  %107 = load i32, i32* %alias439, align 8, !dbg !6748
  br label %cond.end440, !dbg !6748

cond.end440:                                      ; preds = %if.then424, %cond.false433
  %cond441 = phi i32 [ %107, %cond.false433 ], [ 0, %if.then424 ], !dbg !6748
  tail call void @set_mem_alias_set(%struct.rtx_def* %call343, i32 %cond441) #6, !dbg !6749
  %.pre10 = load %struct.rtx_def*, %struct.rtx_def** %a1, align 8, !dbg !6750
  br label %if.end442, !dbg !6749

if.end442:                                        ; preds = %cond.end440, %cond.end420
  %108 = phi %struct.rtx_def* [ %.pre10, %cond.end440 ], [ %86, %cond.end420 ]
  %109 = phi %struct.rtx_def* [ %.pre10, %cond.end440 ], [ %87, %cond.end420 ]
  %110 = phi %struct.rtx_def* [ %.pre10, %cond.end440 ], [ %88, %cond.end420 ]
  %111 = phi %struct.rtx_def* [ %.pre10, %cond.end440 ], [ %89, %cond.end420 ], !dbg !6750
  %112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_mem447 = bitcast %union.rtunion_def* %112 to %struct.mem_attrs**, !dbg !6750
  %113 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem447, align 8, !dbg !6750
  %cmp448 = icmp eq %struct.mem_attrs* %113, null, !dbg !6750
  br i1 %cmp448, label %cond.end457, label %cond.true450, !dbg !6750

cond.true450:                                     ; preds = %if.end442
  %114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_mem455 = bitcast %union.rtunion_def* %114 to %struct.mem_attrs**, !dbg !6750
  %115 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem455, align 8, !dbg !6750
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %115, i64 0, i32 4, !dbg !6750
  %116 = load i32, i32* %align, align 4, !dbg !6750
  br label %cond.end457, !dbg !6750

cond.end457:                                      ; preds = %if.end442, %cond.true450
  %cond458 = phi i32 [ %116, %cond.true450 ], [ 8, %if.end442 ], !dbg !6750
  %117 = load %struct.rtx_def*, %struct.rtx_def** %b2, align 8, !dbg !6750
  %118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_mem463 = bitcast %union.rtunion_def* %118 to %struct.mem_attrs**, !dbg !6750
  %119 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem463, align 8, !dbg !6750
  %cmp464 = icmp eq %struct.mem_attrs* %119, null, !dbg !6750
  br i1 %cmp464, label %cond.end474, label %cond.true466, !dbg !6750

cond.true466:                                     ; preds = %cond.end457
  %align472 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %119, i64 0, i32 4, !dbg !6750
  %120 = load i32, i32* %align472, align 4, !dbg !6750
  br label %cond.end474, !dbg !6750

cond.end474:                                      ; preds = %cond.end457, %cond.true466
  %cond475 = phi i32 [ %120, %cond.true466 ], [ 8, %cond.end457 ], !dbg !6750
  %cmp476 = icmp ult i32 %cond458, %cond475, !dbg !6750
  br i1 %cmp476, label %cond.true478, label %cond.false496, !dbg !6750

cond.true478:                                     ; preds = %cond.end474
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_mem483 = bitcast %union.rtunion_def* %121 to %struct.mem_attrs**, !dbg !6750
  %122 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem483, align 8, !dbg !6750
  %cmp484 = icmp eq %struct.mem_attrs* %122, null, !dbg !6750
  br i1 %cmp484, label %cond.end514, label %cond.true486, !dbg !6750

cond.true486:                                     ; preds = %cond.true478
  %123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6750
  %rt_mem491 = bitcast %union.rtunion_def* %123 to %struct.mem_attrs**, !dbg !6750
  %124 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem491, align 8, !dbg !6750
  %align492 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %124, i64 0, i32 4, !dbg !6750
  %125 = load i32, i32* %align492, align 4, !dbg !6750
  br label %cond.end514, !dbg !6750

cond.false496:                                    ; preds = %cond.end474
  br i1 %cmp464, label %cond.end514, label %cond.true504, !dbg !6750

cond.true504:                                     ; preds = %cond.false496
  %align510 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %119, i64 0, i32 4, !dbg !6750
  %126 = load i32, i32* %align510, align 4, !dbg !6750
  br label %cond.end514, !dbg !6750

cond.end514:                                      ; preds = %cond.true478, %cond.false496, %cond.true504, %cond.true486
  %cond515 = phi i32 [ %125, %cond.true486 ], [ 8, %cond.true478 ], [ %126, %cond.true504 ], [ 8, %cond.false496 ], !dbg !6750
  tail call void @set_mem_align(%struct.rtx_def* %call343, i32 %cond515) #6, !dbg !6751
  %127 = load %struct.rtx_def*, %struct.rtx_def** %a1, align 8, !dbg !6752
  %128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6752
  %rt_mem520 = bitcast %union.rtunion_def* %128 to %struct.mem_attrs**, !dbg !6752
  %129 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem520, align 8, !dbg !6752
  %cmp521 = icmp eq %struct.mem_attrs* %129, null, !dbg !6752
  br i1 %cmp521, label %cond.end532, label %cond.false524, !dbg !6752

cond.false524:                                    ; preds = %cond.end514
  %addrspace530 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %129, i64 0, i32 5, !dbg !6752
  %130 = load i8, i8* %addrspace530, align 8, !dbg !6752
  %conv531 = zext i8 %130 to i32, !dbg !6752
  br label %cond.end532, !dbg !6752

cond.end532:                                      ; preds = %cond.end514, %cond.false524
  %cond533 = phi i32 [ %conv531, %cond.false524 ], [ 0, %cond.end514 ], !dbg !6752
  %131 = load %struct.rtx_def*, %struct.rtx_def** %b2, align 8, !dbg !6752
  %132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6752
  %rt_mem538 = bitcast %union.rtunion_def* %132 to %struct.mem_attrs**, !dbg !6752
  %133 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem538, align 8, !dbg !6752
  %cmp539 = icmp eq %struct.mem_attrs* %133, null, !dbg !6752
  br i1 %cmp539, label %cond.end550, label %cond.false542, !dbg !6752

cond.false542:                                    ; preds = %cond.end532
  %addrspace548 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %133, i64 0, i32 5, !dbg !6752
  %134 = load i8, i8* %addrspace548, align 8, !dbg !6752
  %conv549 = zext i8 %134 to i32, !dbg !6752
  br label %cond.end550, !dbg !6752

cond.end550:                                      ; preds = %cond.end532, %cond.false542
  %cond551 = phi i32 [ %conv549, %cond.false542 ], [ 0, %cond.end532 ], !dbg !6752
  %cmp552 = icmp eq i32 %cond533, %cond551, !dbg !6752
  br i1 %cmp552, label %cond.end556, label %cond.true554, !dbg !6752

cond.true554:                                     ; preds = %cond.end550
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 1486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6752
  %.pre11 = load %struct.rtx_def*, %struct.rtx_def** %a1, align 8, !dbg !6753
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6754
  %rt_mem562.phi.trans.insert = bitcast %union.rtunion_def* %.phi.trans.insert to %struct.mem_attrs**, !dbg !6754
  %.pre12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem562.phi.trans.insert, align 8, !dbg !6753
  br label %cond.end556, !dbg !6752

cond.end556:                                      ; preds = %cond.end550, %cond.true554
  %135 = phi %struct.mem_attrs* [ %129, %cond.end550 ], [ %.pre12, %cond.true554 ], !dbg !6753
  %cmp563 = icmp eq %struct.mem_attrs* %135, null, !dbg !6753
  br i1 %cmp563, label %cond.end574, label %cond.false566, !dbg !6753

cond.false566:                                    ; preds = %cond.end556
  %addrspace572 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %135, i64 0, i32 5, !dbg !6753
  %136 = load i8, i8* %addrspace572, align 8, !dbg !6753
  br label %cond.end574, !dbg !6753

cond.end574:                                      ; preds = %cond.end556, %cond.false566
  %cond575 = phi i8 [ %136, %cond.false566 ], [ 0, %cond.end556 ]
  tail call void @set_mem_addr_space(%struct.rtx_def* %call343, i8 zeroext %cond575) #6, !dbg !6755
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x3, align 8, !dbg !6756
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %137, %struct.rtx_def* %call343) #7, !dbg !6757
  br label %if.end583, !dbg !6758

if.else578:                                       ; preds = %if.end336
  %cmp579 = icmp eq %struct.rtx_def* %call333, %x.0, !dbg !6759
  br i1 %cmp579, label %if.end583, label %if.then581, !dbg !6761

if.then581:                                       ; preds = %if.else578
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %x.0, %struct.rtx_def* nonnull %call333) #7, !dbg !6762
  br label %if.end583, !dbg !6762

if.end583:                                        ; preds = %if.else578, %if.then581, %cond.end574
  %call584 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6763
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call584, metadata !6533, metadata !DIExpression()), !dbg !6552
  %tobool585 = icmp eq %struct.rtx_def* %call584, null, !dbg !6764
  br i1 %tobool585, label %cleanup594, label %if.end587, !dbg !6766

if.end587:                                        ; preds = %if.end583
  %138 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6767
  %139 = load %struct.rtx_def*, %struct.rtx_def** %insn_a69, align 8, !dbg !6768
  %arrayidx592 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i64 0, i32 1, i32 0, i32 2, !dbg !6768
  %rt_int = bitcast i64* %arrayidx592 to i32*, !dbg !6768
  %140 = load i32, i32* %rt_int, align 8, !dbg !6768
  %call593 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call584, %struct.rtx_def* %138, i32 %140) #6, !dbg !6769
  br label %cleanup594, !dbg !6770

end_seq_and_fail:                                 ; preds = %if.end322, %cleanup318, %cleanup
  call void @llvm.dbg.label(metadata !6551), !dbg !6771
  tail call void @end_sequence() #6, !dbg !6772
  br label %cleanup594, !dbg !6773

cleanup594:                                       ; preds = %if.end583, %lor.lhs.false, %if.else, %if.then93, %lor.lhs.false106, %if.then72, %lor.lhs.false84, %end_seq_and_fail, %if.end587
  %retval.0 = phi i32 [ 1, %if.end587 ], [ 0, %end_seq_and_fail ], [ 0, %lor.lhs.false ], [ 0, %if.else ], [ 0, %lor.lhs.false84 ], [ 0, %if.then72 ], [ 0, %lor.lhs.false106 ], [ 0, %if.then93 ], [ 0, %if.end583 ]
  ret i32 %retval.0, !dbg !6774
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @noce_try_sign_mask(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !6775 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !6777, metadata !DIExpression()), !dbg !6786
  %cond1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !6787
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !6787
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !6778, metadata !DIExpression()), !dbg !6786
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !6788
  %bf.load = load i32, i32* %1, align 8, !dbg !6788
  %bf.clear = and i32 %bf.load, 65535, !dbg !6788
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6784, metadata !DIExpression()), !dbg !6786
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6789
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6789
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6789
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6780, metadata !DIExpression()), !dbg !6786
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6790
  %rt_rtx5 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6790
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !6781, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6779, metadata !DIExpression()), !dbg !6786
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !6791
  %5 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !6791
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6793
  %cmp = icmp eq %struct.rtx_def* %5, %6, !dbg !6794
  br i1 %cmp, label %if.then, label %if.else, !dbg !6795

if.then:                                          ; preds = %entry
  %cmp6 = icmp eq i32 %bf.clear, 85, !dbg !6796
  %cmp7 = icmp eq %struct.rtx_def* %4, %5, !dbg !6799
  %or.cond = and i1 %cmp6, %cmp7, !dbg !6800
  br i1 %or.cond, label %if.then11, label %lor.lhs.false, !dbg !6800

lor.lhs.false:                                    ; preds = %if.then
  %cmp8 = icmp eq i32 %bf.clear, 84, !dbg !6801
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !6802
  %cmp10 = icmp eq %struct.rtx_def* %4, %7, !dbg !6803
  %or.cond1 = and i1 %cmp8, %cmp10, !dbg !6804
  br i1 %or.cond1, label %if.then11, label %if.end26, !dbg !6804

if.then11:                                        ; preds = %lor.lhs.false, %if.then
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6805
  %8 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !6805
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !6779, metadata !DIExpression()), !dbg !6786
  br label %if.end26, !dbg !6806

if.else:                                          ; preds = %entry
  %b12 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6807
  %9 = load %struct.rtx_def*, %struct.rtx_def** %b12, align 8, !dbg !6807
  %cmp13 = icmp eq %struct.rtx_def* %9, %6, !dbg !6809
  br i1 %cmp13, label %if.then14, label %if.end26, !dbg !6810

if.then14:                                        ; preds = %if.else
  %cmp15 = icmp eq i32 %bf.clear, 82, !dbg !6811
  %cmp17 = icmp eq %struct.rtx_def* %4, %6, !dbg !6814
  %or.cond2 = and i1 %cmp15, %cmp17, !dbg !6815
  br i1 %or.cond2, label %if.then22, label %lor.lhs.false18, !dbg !6815

lor.lhs.false18:                                  ; preds = %if.then14
  %cmp19 = icmp eq i32 %bf.clear, 83, !dbg !6816
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !6817
  %cmp21 = icmp eq %struct.rtx_def* %4, %10, !dbg !6818
  %or.cond3 = and i1 %cmp19, %cmp21, !dbg !6819
  br i1 %or.cond3, label %if.then22, label %if.end26, !dbg !6819

if.then22:                                        ; preds = %lor.lhs.false18, %if.then14
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !6779, metadata !DIExpression()), !dbg !6786
  br label %if.end26, !dbg !6820

if.end26:                                         ; preds = %if.else, %if.then22, %lor.lhs.false18, %lor.lhs.false, %if.then11
  %t.3 = phi %struct.rtx_def* [ %8, %if.then11 ], [ null, %lor.lhs.false ], [ null, %if.else ], [ %5, %if.then22 ], [ null, %lor.lhs.false18 ], !dbg !6821
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t.3, metadata !6779, metadata !DIExpression()), !dbg !6786
  %tobool = icmp eq %struct.rtx_def* %t.3, null, !dbg !6822
  br i1 %tobool, label %cleanup, label %lor.lhs.false27, !dbg !6824

lor.lhs.false27:                                  ; preds = %if.end26
  %call = tail call i32 @side_effects_p(%struct.rtx_def* nonnull %t.3) #6, !dbg !6825
  %tobool28 = icmp eq i32 %call, 0, !dbg !6825
  br i1 %tobool28, label %if.end30, label %cleanup, !dbg !6826

if.end30:                                         ; preds = %lor.lhs.false27
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %t.3, i64 0, i32 0, !dbg !6827
  %bf.load31 = load i32, i32* %11, align 8, !dbg !6827
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !6827
  %bf.clear32 = and i32 %bf.lshr, 255, !dbg !6827
  call void @llvm.dbg.value(metadata i32 %bf.clear32, metadata !6783, metadata !DIExpression()), !dbg !6786
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !6828
  %bf.load33 = load i32, i32* %12, align 8, !dbg !6828
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !6828
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !6828
  %cmp36 = icmp eq i32 %bf.clear35, %bf.clear32, !dbg !6830
  br i1 %cmp36, label %if.end38, label %cleanup, !dbg !6831

if.end38:                                         ; preds = %if.end30
  %b39 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !6832
  %13 = load %struct.rtx_def*, %struct.rtx_def** %b39, align 8, !dbg !6832
  %cmp40 = icmp eq %struct.rtx_def* %t.3, %13, !dbg !6833
  br i1 %cmp40, label %land.rhs, label %land.end, !dbg !6834

land.rhs:                                         ; preds = %if.end38
  %insn_b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 8, !dbg !6835
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn_b, align 8, !dbg !6835
  %cmp41 = icmp eq %struct.rtx_def* %14, null, !dbg !6836
  br i1 %cmp41, label %land.end, label %lor.rhs, !dbg !6837

lor.rhs:                                          ; preds = %land.rhs
  %arrayidx45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 1, !dbg !6838
  %rt_bb = bitcast %struct.object_block** %arrayidx45 to %struct.basic_block_def**, !dbg !6838
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6838
  %test_bb = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 0, !dbg !6839
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb, align 8, !dbg !6839
  %cmp46 = icmp eq %struct.basic_block_def* %15, %16, !dbg !6840
  br label %land.end, !dbg !6837

land.end:                                         ; preds = %land.rhs, %lor.rhs, %if.end38
  %17 = phi i1 [ false, %if.end38 ], [ true, %land.rhs ], [ %cmp46, %lor.rhs ]
  br i1 %17, label %if.end56, label %lor.lhs.false49, !dbg !6841

lor.lhs.false49:                                  ; preds = %land.end
  %test_bb50 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 0, !dbg !6843
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb50, align 8, !dbg !6843
  %call51 = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %18) #6, !dbg !6844
  %call52 = tail call i32 @rtx_cost(%struct.rtx_def* nonnull %t.3, i32 23, i8 zeroext %call51) #6, !dbg !6845
  %cmp53 = icmp slt i32 %call52, 8, !dbg !6846
  br i1 %cmp53, label %if.end56, label %cleanup, !dbg !6847

if.end56:                                         ; preds = %lor.lhs.false49, %land.end
  tail call void @start_sequence() #6, !dbg !6848
  %call57 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear32) #6, !dbg !6849
  %19 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6850
  %call58 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %call57, i32 85, %struct.rtx_def* %2, %struct.rtx_def* %19, i32 %bf.clear32, i32 0, i32 -1) #6, !dbg !6851
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !6780, metadata !DIExpression()), !dbg !6786
  %tobool59 = icmp eq %struct.rtx_def* %call58, null, !dbg !6852
  br i1 %tobool59, label %cond.end, label %cond.true, !dbg !6852

cond.true:                                        ; preds = %if.end56
  %call60 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear32, %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 41), %struct.rtx_def* nonnull %call58, %struct.rtx_def* nonnull %t.3, %struct.rtx_def* null, i32 0, i32 0) #6, !dbg !6853
  br label %cond.end, !dbg !6852

cond.end:                                         ; preds = %if.end56, %cond.true
  %cond61 = phi %struct.rtx_def* [ %call60, %cond.true ], [ null, %if.end56 ], !dbg !6852
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond61, metadata !6779, metadata !DIExpression()), !dbg !6786
  %tobool62 = icmp eq %struct.rtx_def* %cond61, null, !dbg !6854
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !6856

if.then63:                                        ; preds = %cond.end
  tail call void @end_sequence() #6, !dbg !6857
  br label %cleanup, !dbg !6859

if.end64:                                         ; preds = %cond.end
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !6860
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6860
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %20, %struct.rtx_def* nonnull %cond61) #7, !dbg !6861
  %call65 = tail call fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) #7, !dbg !6862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !6782, metadata !DIExpression()), !dbg !6786
  %tobool66 = icmp eq %struct.rtx_def* %call65, null, !dbg !6863
  br i1 %tobool66, label %cleanup, label %if.end68, !dbg !6865

if.end68:                                         ; preds = %if.end64
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !6866
  %21 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !6866
  %insn_a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 7, !dbg !6867
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn_a, align 8, !dbg !6867
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 2, !dbg !6867
  %rt_int = bitcast i64* %arrayidx71 to i32*, !dbg !6867
  %23 = load i32, i32* %rt_int, align 8, !dbg !6867
  %call72 = tail call %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def* nonnull %call65, %struct.rtx_def* %21, i32 %23) #6, !dbg !6868
  br label %cleanup, !dbg !6869

cleanup:                                          ; preds = %if.end64, %if.end30, %lor.lhs.false27, %if.end26, %lor.lhs.false49, %if.end68, %if.then63
  %retval.0 = phi i32 [ 1, %if.end68 ], [ 0, %if.then63 ], [ 0, %lor.lhs.false27 ], [ 0, %if.end26 ], [ 0, %if.end30 ], [ 0, %lor.lhs.false49 ], [ 0, %if.end64 ], !dbg !6786
  ret i32 %retval.0, !dbg !6870
}

declare dso_local void @start_sequence() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @noce_emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) unnamed_addr #4 !dbg !6871 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6875, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata %struct.rtx_def* %y, metadata !6876, metadata !DIExpression()), !dbg !6913
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6914
  %bf.load = load i32, i32* %0, align 8, !dbg !6914
  %bf.clear = and i32 %bf.load, 65535, !dbg !6914
  %cmp = icmp eq i32 %bf.clear, 40, !dbg !6915
  br i1 %cmp, label %if.end112, label %if.then, !dbg !6916

if.then:                                          ; preds = %entry
  tail call void @start_sequence() #6, !dbg !6917
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 0, !dbg !6918
  %bf.load1 = load i32, i32* %1, align 8, !dbg !6918
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6918
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !6918
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6918
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6918
  %and = and i32 %2, -2, !dbg !6918
  %cmp3 = icmp eq i32 %and, 8, !dbg !6918
  br i1 %cmp3, label %cond.true, label %lor.lhs.false, !dbg !6919

lor.lhs.false:                                    ; preds = %if.then
  %cmp8 = icmp eq i32 %2, 9, !dbg !6920
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !6921

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear2, 39, !dbg !6922
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !6923

cond.true:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %if.then
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !6924
  br label %cond.end, !dbg !6923

cond.false:                                       ; preds = %lor.lhs.false9
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %x, %struct.rtx_def* %y) #6, !dbg !6925
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #6, !dbg !6926
  br label %cond.end, !dbg !6923

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %call, %cond.true ], [ %call14, %cond.false ], !dbg !6923
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !6884, metadata !DIExpression()), !dbg !6927
  %call15 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6928
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15, metadata !6881, metadata !DIExpression()), !dbg !6927
  tail call void @end_sequence() #6, !dbg !6929
  %call16 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %cond) #7, !dbg !6930
  %cmp17 = icmp slt i32 %call16, 1, !dbg !6931
  br i1 %cmp17, label %if.then18, label %if.end107, !dbg !6932

if.then18:                                        ; preds = %cond.end
  %bf.load19 = load i32, i32* %0, align 8, !dbg !6933
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !6933
  %cmp21 = icmp eq i32 %bf.clear20, 120, !dbg !6934
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !6935

if.then22:                                        ; preds = %if.then18
  %arrayidx23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6936
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !6936
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6936
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !6906, metadata !DIExpression()), !dbg !6937
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6938
  %rt_rtx27 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !6938
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !6938
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, !dbg !6938
  %arrayidx29 = bitcast %union.u* %u28 to i64*, !dbg !6938
  %6 = load i64, i64* %arrayidx29, align 8, !dbg !6938
  call void @llvm.dbg.value(metadata i64 %6, metadata !6911, metadata !DIExpression()), !dbg !6937
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6939
  %rt_rtx33 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !6939
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !6939
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, !dbg !6939
  %arrayidx36 = bitcast %union.u* %u34 to i64*, !dbg !6939
  %9 = load i64, i64* %arrayidx36, align 8, !dbg !6939
  call void @llvm.dbg.value(metadata i64 %9, metadata !6912, metadata !DIExpression()), !dbg !6937
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !6940
  %bf.load37 = load i32, i32* %10, align 8, !dbg !6940
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !6940
  %cmp39 = icmp eq i32 %bf.clear38, 43, !dbg !6940
  %cond40 = select i1 %cmp39, i64 8, i64 32, !dbg !6940
  %cmp41 = icmp ult i64 %9, %cond40, !dbg !6940
  br i1 %cmp41, label %cond.end45, label %cond.true43, !dbg !6940

cond.true43:                                      ; preds = %if.then22
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 763, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !6940
  %bf.load47.pre = load i32, i32* %0, align 8, !dbg !6941
  br label %cond.end45, !dbg !6940

cond.end45:                                       ; preds = %if.then22, %cond.true43
  %bf.load47 = phi i32 [ %bf.load19, %if.then22 ], [ %bf.load47.pre, %cond.true43 ], !dbg !6941
  %bf.lshr = lshr i32 %bf.load47, 16, !dbg !6941
  %bf.clear48 = and i32 %bf.lshr, 255, !dbg !6941
  tail call void @store_bit_field(%struct.rtx_def* %3, i64 %6, i64 %9, i32 %bf.clear48, %struct.rtx_def* %y) #6, !dbg !6942
  br label %cleanup.cont

if.end:                                           ; preds = %if.then18
  %bf.load49 = load i32, i32* %1, align 8, !dbg !6943
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !6943
  %idxprom51 = zext i32 %bf.clear50 to i64, !dbg !6943
  %arrayidx52 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom51, !dbg !6943
  %11 = load i32, i32* %arrayidx52, align 4, !dbg !6943
  switch i32 %11, label %if.end107 [
    i32 4, label %sw.bb
    i32 2, label %sw.bb77
    i32 3, label %sw.bb77
  ], !dbg !6944

sw.bb:                                            ; preds = %if.end
  %arrayidx56 = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom51, !dbg !6945
  %12 = load %struct.optab_d*, %struct.optab_d** %arrayidx56, align 8, !dbg !6945
  call void @llvm.dbg.value(metadata %struct.optab_d* %12, metadata !6886, metadata !DIExpression()), !dbg !6927
  %tobool = icmp eq %struct.optab_d* %12, null, !dbg !6947
  br i1 %tobool, label %if.end107, label %if.then57, !dbg !6949

if.then57:                                        ; preds = %sw.bb
  tail call void @start_sequence() #6, !dbg !6950
  %bf.load58 = load i32, i32* %1, align 8, !dbg !6952
  %bf.lshr59 = lshr i32 %bf.load58, 16, !dbg !6952
  %bf.clear60 = and i32 %bf.lshr59, 255, !dbg !6952
  %arrayidx63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6953
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !6953
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !6953
  %call65 = tail call %struct.rtx_def* @expand_unop(i32 %bf.clear60, %struct.optab_d* nonnull %12, %struct.rtx_def* %13, %struct.rtx_def* %x, i32 0) #6, !dbg !6954
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call65, metadata !6885, metadata !DIExpression()), !dbg !6927
  %cmp66 = icmp eq %struct.rtx_def* %call65, null, !dbg !6955
  br i1 %cmp66, label %if.end75, label %if.then68, !dbg !6957

if.then68:                                        ; preds = %if.then57
  %cmp69 = icmp eq %struct.rtx_def* %call65, %x, !dbg !6958
  br i1 %cmp69, label %if.end73, label %if.then71, !dbg !6961

if.then71:                                        ; preds = %if.then68
  %call72 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* nonnull %call65) #6, !dbg !6962
  br label %if.end73, !dbg !6962

if.end73:                                         ; preds = %if.then68, %if.then71
  %call74 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6963
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call74, metadata !6881, metadata !DIExpression()), !dbg !6927
  br label %if.end75, !dbg !6964

if.end75:                                         ; preds = %if.then57, %if.end73
  %seq.0 = phi %struct.rtx_def* [ %call74, %if.end73 ], [ %call15, %if.then57 ], !dbg !6927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.0, metadata !6881, metadata !DIExpression()), !dbg !6927
  tail call void @end_sequence() #6, !dbg !6965
  br label %if.end107, !dbg !6966

sw.bb77:                                          ; preds = %if.end, %if.end
  %arrayidx81 = getelementptr inbounds [140 x %struct.optab_d*], [140 x %struct.optab_d*]* @code_to_optab, i64 0, i64 %idxprom51, !dbg !6967
  %14 = load %struct.optab_d*, %struct.optab_d** %arrayidx81, align 8, !dbg !6967
  call void @llvm.dbg.value(metadata %struct.optab_d* %14, metadata !6886, metadata !DIExpression()), !dbg !6927
  %tobool82 = icmp eq %struct.optab_d* %14, null, !dbg !6968
  br i1 %tobool82, label %if.end107, label %if.then83, !dbg !6970

if.then83:                                        ; preds = %sw.bb77
  tail call void @start_sequence() #6, !dbg !6971
  %bf.load84 = load i32, i32* %1, align 8, !dbg !6973
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !6973
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !6973
  %arrayidx89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6974
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !6974
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !6974
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %y, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6975
  %rt_rtx94 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !6975
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !6975
  %call95 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear86, %struct.optab_d* nonnull %14, %struct.rtx_def* %15, %struct.rtx_def* %17, %struct.rtx_def* %x, i32 0, i32 0) #6, !dbg !6976
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call95, metadata !6885, metadata !DIExpression()), !dbg !6927
  %cmp96 = icmp eq %struct.rtx_def* %call95, null, !dbg !6977
  br i1 %cmp96, label %if.end105, label %if.then98, !dbg !6979

if.then98:                                        ; preds = %if.then83
  %cmp99 = icmp eq %struct.rtx_def* %call95, %x, !dbg !6980
  br i1 %cmp99, label %if.end103, label %if.then101, !dbg !6983

if.then101:                                       ; preds = %if.then98
  %call102 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %x, %struct.rtx_def* nonnull %call95) #6, !dbg !6984
  br label %if.end103, !dbg !6984

if.end103:                                        ; preds = %if.then98, %if.then101
  %call104 = tail call %struct.rtx_def* @get_insns() #6, !dbg !6985
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call104, metadata !6881, metadata !DIExpression()), !dbg !6927
  br label %if.end105, !dbg !6986

if.end105:                                        ; preds = %if.then83, %if.end103
  %seq.2 = phi %struct.rtx_def* [ %call104, %if.end103 ], [ %call15, %if.then83 ], !dbg !6927
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.2, metadata !6881, metadata !DIExpression()), !dbg !6927
  tail call void @end_sequence() #6, !dbg !6987
  br label %if.end107, !dbg !6988

if.end107:                                        ; preds = %sw.bb, %sw.bb77, %if.end75, %if.end105, %if.end, %cond.end
  %seq.5 = phi %struct.rtx_def* [ %call15, %cond.end ], [ %seq.0, %if.end75 ], [ %call15, %sw.bb ], [ %seq.2, %if.end105 ], [ %call15, %sw.bb77 ], [ %call15, %if.end ], !dbg !6989
  call void @llvm.dbg.value(metadata %struct.rtx_def* %seq.5, metadata !6881, metadata !DIExpression()), !dbg !6927
  %call108 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %seq.5) #6, !dbg !6990
  br label %cleanup.cont, !dbg !6991

if.end112:                                        ; preds = %entry
  %arrayidx115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6992
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !6992
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx116, align 8, !dbg !6992
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !6878, metadata !DIExpression()), !dbg !6913
  %arrayidx119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6993
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !6993
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !6993
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !6879, metadata !DIExpression()), !dbg !6913
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 0, !dbg !6994
  %bf.load121 = load i32, i32* %20, align 8, !dbg !6994
  %bf.lshr122 = lshr i32 %bf.load121, 16, !dbg !6994
  %bf.clear123 = and i32 %bf.lshr122, 255, !dbg !6994
  call void @llvm.dbg.value(metadata i32 %bf.clear123, metadata !6877, metadata !DIExpression()), !dbg !6913
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6995
  %rt_uint = bitcast %union.rtunion_def* %21 to i32*, !dbg !6995
  %22 = load i32, i32* %rt_uint, align 8, !dbg !6995
  %mul = shl i32 %22, 3, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6880, metadata !DIExpression()), !dbg !6913
  %idxprom127 = zext i32 %bf.clear123 to i64, !dbg !6997
  %arrayidx128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom127, !dbg !6997
  %23 = load i8, i8* %arrayidx128, align 1, !dbg !6997
  %conv130 = zext i8 %23 to i64, !dbg !6997
  %mul131 = shl nuw nsw i64 %conv130, 3, !dbg !6997
  %conv134 = sext i32 %mul to i64, !dbg !6998
  tail call void @store_bit_field(%struct.rtx_def* %19, i64 %mul131, i64 %conv134, i32 %bf.clear123, %struct.rtx_def* %y) #6, !dbg !6999
  br label %cleanup.cont, !dbg !7000

cleanup.cont:                                     ; preds = %if.end112, %if.end107, %cond.end45
  ret void, !dbg !7000
}

declare dso_local void @set_used_flags(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @unshare_all_rtl_in_chain(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @end_sequence() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before_setloc(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @delete_basic_block(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @remove_edge(%struct.edge_def*) local_unnamed_addr #1

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @redirect_edge_and_branch_force(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_merge_blocks_p(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @merge_blocks(%struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @may_trap_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @may_trap_or_fault_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @decl_readonly_section(%union.tree_node*, i32) local_unnamed_addr #1

declare dso_local %struct.basic_block_def* @get_immediate_dominator(i32, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @volatile_insn_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @memory_modified_in_insn_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @end_ifcvt_sequence(%struct.noce_if_info* %if_info) unnamed_addr #4 !dbg !7001 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !7005, metadata !DIExpression()), !dbg !7008
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !7009
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7007, metadata !DIExpression()), !dbg !7008
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !7010
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7010
  tail call void @set_used_flags(%struct.rtx_def* %0) #6, !dbg !7011
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !7012
  %1 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !7012
  tail call void @set_used_flags(%struct.rtx_def* %1) #6, !dbg !7013
  tail call void @unshare_all_rtl_in_chain(%struct.rtx_def* %call) #6, !dbg !7014
  tail call void @end_sequence() #6, !dbg !7015
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7006, metadata !DIExpression()), !dbg !7008
  br label %for.cond, !dbg !7016

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0 = phi %struct.rtx_def* [ %call, %entry ], [ %4, %for.inc ], !dbg !7018
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7006, metadata !DIExpression()), !dbg !7008
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7019
  br i1 %tobool, label %cleanup, label %for.body, !dbg !7019

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7020
  %bf.load = load i32, i32* %2, align 8, !dbg !7020
  %bf.clear = and i32 %bf.load, 65535, !dbg !7020
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !7020
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !7023

lor.lhs.false:                                    ; preds = %for.body
  %call1 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* nonnull %insn.0) #7, !dbg !7024
  %cmp2 = icmp eq i32 %call1, -1, !dbg !7025
  br i1 %cmp2, label %cleanup, label %for.inc, !dbg !7026

for.inc:                                          ; preds = %lor.lhs.false
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7027
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !7027
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7027
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !7006, metadata !DIExpression()), !dbg !7008
  br label %for.cond, !dbg !7028, !llvm.loop !7029

cleanup:                                          ; preds = %for.cond, %for.body, %lor.lhs.false
  %retval.0 = phi %struct.rtx_def* [ null, %lor.lhs.false ], [ null, %for.body ], [ %call, %for.cond ], !dbg !7008
  ret %struct.rtx_def* %retval.0, !dbg !7031
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !7032 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7037, metadata !DIExpression()), !dbg !7038
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7039
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !7039
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !7039
  %1 = load i32, i32* %rt_int, align 8, !dbg !7039
  %cmp = icmp slt i32 %1, 0, !dbg !7041
  br i1 %cmp, label %if.then, label %if.end, !dbg !7042

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7043
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7043
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7043
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !7044
  store i32 %call, i32* %rt_int, align 8, !dbg !7045
  br label %if.end, !dbg !7046

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !7047
  ret i32 %4, !dbg !7048
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #1

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @noce_emit_store_flag(%struct.noce_if_info* %if_info, %struct.rtx_def* %x, i32 %reversep, i32 %normalize) unnamed_addr #4 !dbg !7049 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !7053, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7054, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 %reversep, metadata !7055, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 %normalize, metadata !7056, metadata !DIExpression()), !dbg !7066
  %cond1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !7067
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !7067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !7057, metadata !DIExpression()), !dbg !7066
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7068
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7068
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7068
  %call = tail call i32 @general_operand(%struct.rtx_def* %1, i32 0) #6, !dbg !7069
  %tobool = icmp eq i32 %call, 0, !dbg !7069
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7070

lor.rhs:                                          ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7071
  %rt_rtx5 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7071
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !7071
  %call6 = tail call i32 @general_operand(%struct.rtx_def* %3, i32 0) #6, !dbg !7072
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7073
  br label %lor.end, !dbg !7070

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i1 [ true, %entry ], [ %tobool7, %lor.rhs ]
  br i1 %4, label %if.then, label %if.end53, !dbg !7074

if.then:                                          ; preds = %lor.end
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !7075
  %5 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7075
  %call9 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %5) #6, !dbg !7076
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !7060, metadata !DIExpression()), !dbg !7077
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7078
  %rt_rtx13 = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7078
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !7078
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7078
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !7078
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !7078
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !7057, metadata !DIExpression()), !dbg !7066
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7079
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !7079
  %11 = load i32*, i32** %10, align 8, !dbg !7079
  %bf.load = load i32, i32* %11, align 8, !dbg !7079
  %bf.clear = and i32 %bf.load, 65535, !dbg !7079
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !7081
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7082

land.lhs.true:                                    ; preds = %if.then
  %arrayidx36 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !7083
  %rt_rtx37 = bitcast i32* %arrayidx36 to %struct.rtx_def**, !dbg !7083
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !7083
  %13 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7084
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, !dbg !7084
  %arrayidx41 = getelementptr inbounds %union.u, %union.u* %u39, i64 1, i32 0, i32 1, !dbg !7084
  %rt_rtx42 = bitcast %struct.object_block** %arrayidx41 to %struct.rtx_def**, !dbg !7084
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !7084
  %cmp43 = icmp eq %struct.rtx_def* %12, %14, !dbg !7085
  br i1 %cmp43, label %if.then44, label %if.end, !dbg !7086

if.then44:                                        ; preds = %land.lhs.true
  %tobool45 = icmp eq i32 %reversep, 0, !dbg !7087
  %lnot.ext = zext i1 %tobool45 to i32, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7055, metadata !DIExpression()), !dbg !7066
  br label %if.end, !dbg !7088

if.end:                                           ; preds = %if.then44, %land.lhs.true, %if.then
  %reversep.addr.0 = phi i32 [ %lnot.ext, %if.then44 ], [ %reversep, %land.lhs.true ], [ %reversep, %if.then ]
  call void @llvm.dbg.value(metadata i32 %reversep.addr.0, metadata !7055, metadata !DIExpression()), !dbg !7066
  %then_else_reversed = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 12, !dbg !7089
  %15 = load i8, i8* %then_else_reversed, align 8, !dbg !7089
  %tobool47 = icmp eq i8 %15, 0, !dbg !7091
  br i1 %tobool47, label %if.end53, label %if.then48, !dbg !7092

if.then48:                                        ; preds = %if.end
  %tobool49 = icmp eq i32 %reversep.addr.0, 0, !dbg !7093
  %lnot.ext51 = zext i1 %tobool49 to i32, !dbg !7093
  call void @llvm.dbg.value(metadata i32 %lnot.ext51, metadata !7055, metadata !DIExpression()), !dbg !7066
  br label %if.end53, !dbg !7094

if.end53:                                         ; preds = %if.end, %if.then48, %lor.end
  %cond.0 = phi %struct.rtx_def* [ %0, %lor.end ], [ %8, %if.then48 ], [ %8, %if.end ], !dbg !7066
  %reversep.addr.2 = phi i32 [ %reversep, %lor.end ], [ %lnot.ext51, %if.then48 ], [ %reversep.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata i32 %reversep.addr.2, metadata !7055, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.0, metadata !7057, metadata !DIExpression()), !dbg !7066
  %tobool54 = icmp eq i32 %reversep.addr.2, 0, !dbg !7095
  br i1 %tobool54, label %if.else, label %if.then55, !dbg !7097

if.then55:                                        ; preds = %if.end53
  %jump56 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !7098
  %16 = load %struct.rtx_def*, %struct.rtx_def** %jump56, align 8, !dbg !7098
  %call57 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %cond.0, %struct.rtx_def* %16) #6, !dbg !7099
  call void @llvm.dbg.value(metadata i32 %call57, metadata !7059, metadata !DIExpression()), !dbg !7066
  br label %if.end60, !dbg !7100

if.else:                                          ; preds = %if.end53
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.0, i64 0, i32 0, !dbg !7101
  %bf.load58 = load i32, i32* %17, align 8, !dbg !7101
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !7101
  call void @llvm.dbg.value(metadata i32 %bf.clear59, metadata !7059, metadata !DIExpression()), !dbg !7066
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then55
  %code.0 = phi i32 [ %call57, %if.then55 ], [ %bf.clear59, %if.else ], !dbg !7102
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !7059, metadata !DIExpression()), !dbg !7066
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !7103
  %18 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest, align 8, !dbg !7103
  %jump61 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !7104
  %19 = load %struct.rtx_def*, %struct.rtx_def** %jump61, align 8, !dbg !7104
  %cmp62 = icmp eq %struct.rtx_def* %18, %19, !dbg !7105
  %or.cond = or i1 %cmp62, %4, !dbg !7106
  br i1 %or.cond, label %land.lhs.true64, label %if.end90, !dbg !7106

land.lhs.true64:                                  ; preds = %if.end60
  %20 = icmp ult i32 %normalize, 2, !dbg !7107
  br i1 %20, label %if.then68, label %if.end90, !dbg !7107

if.then68:                                        ; preds = %land.lhs.true64
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7108
  %bf.load69 = load i32, i32* %21, align 8, !dbg !7108
  %bf.lshr = lshr i32 %bf.load69, 16, !dbg !7108
  %bf.clear70 = and i32 %bf.lshr, 255, !dbg !7108
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7108
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !7108
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !7108
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7108
  %rt_rtx78 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !7108
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !7108
  %call79 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code.0, i32 %bf.clear70, %struct.rtx_def* %22, %struct.rtx_def* %24) #6, !dbg !7108
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call79, metadata !7063, metadata !DIExpression()), !dbg !7109
  %call80 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %x, %struct.rtx_def* %call79) #6, !dbg !7110
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call80, metadata !7063, metadata !DIExpression()), !dbg !7109
  tail call void @start_sequence() #6, !dbg !7111
  %call81 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call80) #6, !dbg !7112
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call81, metadata !7063, metadata !DIExpression()), !dbg !7109
  %call82 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %call81) #7, !dbg !7113
  %cmp83 = icmp sgt i32 %call82, -1, !dbg !7115
  br i1 %cmp83, label %if.then84, label %if.end89, !dbg !7116

if.then84:                                        ; preds = %if.then68
  %call85 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7117
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call85, metadata !7063, metadata !DIExpression()), !dbg !7109
  tail call void @end_sequence() #6, !dbg !7119
  %call86 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call85) #6, !dbg !7120
  %25 = bitcast %struct.rtx_def** %jump61 to i64*, !dbg !7121
  %26 = load i64, i64* %25, align 8, !dbg !7121
  %27 = bitcast %struct.rtx_def** %cond_earliest to i64*, !dbg !7122
  store i64 %26, i64* %27, align 8, !dbg !7122
  br label %cleanup, !dbg !7123

if.end89:                                         ; preds = %if.then68
  tail call void @end_sequence() #6, !dbg !7124
  br label %cleanup, !dbg !7125

cleanup:                                          ; preds = %if.end89, %if.then84
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then84 ], [ true, %if.end89 ]
  br i1 %cleanup.dest.slot.0, label %if.end90, label %cleanup132

if.end90:                                         ; preds = %cleanup, %land.lhs.true64, %if.end60
  br i1 %4, label %cleanup132, label %lor.lhs.false92, !dbg !7126

lor.lhs.false92:                                  ; preds = %if.end90
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7128
  %bf.load93 = load i32, i32* %28, align 8, !dbg !7128
  %bf.lshr94 = lshr i32 %bf.load93, 16, !dbg !7128
  %bf.clear95 = and i32 %bf.lshr94, 255, !dbg !7128
  %idxprom = zext i32 %bf.clear95 to i64, !dbg !7128
  %arrayidx96 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7128
  %29 = load i8, i8* %arrayidx96, align 1, !dbg !7128
  %cmp97 = icmp eq i8 %29, 2, !dbg !7128
  br i1 %cmp97, label %if.end109, label %lor.lhs.false99, !dbg !7128

lor.lhs.false99:                                  ; preds = %lor.lhs.false92
  %cmp106 = icmp eq i8 %29, 3, !dbg !7128
  br i1 %cmp106, label %if.end109, label %cleanup132, !dbg !7129

if.end109:                                        ; preds = %lor.lhs.false99, %lor.lhs.false92
  %arrayidx112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7130
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !7130
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !7130
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7131
  %rt_rtx117 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !7131
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !7131
  %code.0.off = add i32 %code.0, -86, !dbg !7132
  %switch = icmp ult i32 %code.0.off, 4, !dbg !7132
  %lor.ext130 = zext i1 %switch to i32, !dbg !7133
  %call131 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %x, i32 %code.0, %struct.rtx_def* %30, %struct.rtx_def* %32, i32 0, i32 %lor.ext130, i32 %normalize) #6, !dbg !7134
  br label %cleanup132, !dbg !7135

cleanup132:                                       ; preds = %if.end90, %lor.lhs.false99, %cleanup, %if.end109
  %retval.1 = phi %struct.rtx_def* [ %x, %cleanup ], [ %call131, %if.end109 ], [ null, %lor.lhs.false99 ], [ null, %if.end90 ], !dbg !7066
  ret %struct.rtx_def* %retval.1, !dbg !7136
}

declare dso_local i32 @general_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_store_flag(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @noce_get_alt_condition(%struct.noce_if_info* %if_info, %struct.rtx_def* %target, %struct.rtx_def** %earliest) unnamed_addr #4 !dbg !7137 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !7141, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !7142, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !7143, metadata !DIExpression()), !dbg !7166
  %cond1 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !7167
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !7167
  %call = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %0) #6, !dbg !7169
  %tobool = icmp eq i32 %call, 0, !dbg !7169
  br i1 %tobool, label %if.end, label %if.then, !dbg !7170

if.then:                                          ; preds = %entry
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !7171
  %1 = bitcast %struct.rtx_def** %cond_earliest to i64*, !dbg !7171
  %2 = load i64, i64* %1, align 8, !dbg !7171
  %3 = bitcast %struct.rtx_def** %earliest to i64*, !dbg !7173
  store i64 %2, i64* %3, align 8, !dbg !7173
  %4 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !7174
  br label %cleanup269, !dbg !7175

if.end:                                           ; preds = %entry
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !7176
  %5 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7176
  %call3 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %5) #6, !dbg !7177
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7145, metadata !DIExpression()), !dbg !7166
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7178
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7178
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7178
  %arrayidx6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7178
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !7178
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !7178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !7144, metadata !DIExpression()), !dbg !7166
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7179
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !7179
  %11 = load i32*, i32** %10, align 8, !dbg !7179
  %bf.load = load i32, i32* %11, align 8, !dbg !7179
  %bf.clear = and i32 %bf.load, 65535, !dbg !7179
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !7180
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7181

land.rhs:                                         ; preds = %if.end
  %arrayidx26 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !7182
  %rt_rtx27 = bitcast i32* %arrayidx26 to %struct.rtx_def**, !dbg !7182
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !7182
  %13 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7183
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 1, !dbg !7183
  %arrayidx31 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 1, !dbg !7183
  %rt_rtx32 = bitcast %struct.object_block** %arrayidx31 to %struct.rtx_def**, !dbg !7183
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7183
  %cmp33 = icmp eq %struct.rtx_def* %12, %14, !dbg !7184
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %15 = phi i1 [ false, %if.end ], [ %cmp33, %land.rhs ], !dbg !7166
  call void @llvm.dbg.value(metadata i1 %15, metadata !7147, metadata !DIExpression()), !dbg !7166
  %then_else_reversed = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 12, !dbg !7185
  %16 = load i8, i8* %then_else_reversed, align 8, !dbg !7185
  %tobool34 = icmp eq i8 %16, 0, !dbg !7187
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !7188

if.then35:                                        ; preds = %land.end
  %lnot = xor i1 %15, true, !dbg !7189
  call void @llvm.dbg.value(metadata i1 %lnot, metadata !7147, metadata !DIExpression()), !dbg !7166
  br label %if.end37, !dbg !7190

if.end37:                                         ; preds = %land.end, %if.then35
  %reverse.0.in = phi i1 [ %lnot, %if.then35 ], [ %15, %land.end ]
  %reverse.0 = zext i1 %reverse.0.in to i32, !dbg !7166
  call void @llvm.dbg.value(metadata i32 %reverse.0, metadata !7147, metadata !DIExpression()), !dbg !7166
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 0, !dbg !7191
  %bf.load38 = load i32, i32* %17, align 8, !dbg !7191
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !7191
  %cmp40 = icmp eq i32 %bf.clear39, 30, !dbg !7191
  br i1 %cmp40, label %if.then41, label %if.end197, !dbg !7192

if.then41:                                        ; preds = %if.end37
  %18 = bitcast %struct.rtx_def** %cond1 to i32**, !dbg !7193
  %19 = load i32*, i32** %18, align 8, !dbg !7193
  %bf.load43 = load i32, i32* %19, align 8, !dbg !7193
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !7193
  call void @llvm.dbg.value(metadata i32 %bf.clear44, metadata !7148, metadata !DIExpression()), !dbg !7194
  %u46 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !7195
  %rt_rtx49 = bitcast i32* %u46 to %struct.rtx_def**, !dbg !7195
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !7195
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !7151, metadata !DIExpression()), !dbg !7194
  %21 = getelementptr inbounds i32, i32* %19, i64 4, !dbg !7196
  %rt_rtx54 = bitcast i32* %21 to %struct.rtx_def**, !dbg !7196
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !7196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !7152, metadata !DIExpression()), !dbg !7194
  %cond_earliest55 = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !7197
  %23 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest55, align 8, !dbg !7197
  %call56 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %23) #6, !dbg !7198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call56, metadata !7153, metadata !DIExpression()), !dbg !7194
  %tobool57 = icmp eq %struct.rtx_def* %call56, null, !dbg !7199
  br i1 %tobool57, label %if.end138, label %land.lhs.true, !dbg !7200

land.lhs.true:                                    ; preds = %if.then41
  %arrayidx60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 1, i32 0, i32 1, !dbg !7201
  %rt_bb = bitcast %struct.object_block** %arrayidx60 to %struct.basic_block_def**, !dbg !7201
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !7201
  %25 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest55, align 8, !dbg !7202
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 1, !dbg !7202
  %rt_bb65 = bitcast %struct.object_block** %arrayidx64 to %struct.basic_block_def**, !dbg !7202
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb65, align 8, !dbg !7202
  %cmp66 = icmp eq %struct.basic_block_def* %24, %26, !dbg !7203
  br i1 %cmp66, label %land.lhs.true67, label %if.end138, !dbg !7204

land.lhs.true67:                                  ; preds = %land.lhs.true
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 0, !dbg !7205
  %bf.load68 = load i32, i32* %27, align 8, !dbg !7205
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !7205
  %cmp70 = icmp eq i32 %bf.clear69, 8, !dbg !7205
  br i1 %cmp70, label %land.lhs.true82, label %lor.lhs.false, !dbg !7205

lor.lhs.false:                                    ; preds = %land.lhs.true67
  %cmp73 = icmp eq i32 %bf.clear69, 7, !dbg !7205
  br i1 %cmp73, label %land.lhs.true82, label %lor.lhs.false74, !dbg !7205

lor.lhs.false74:                                  ; preds = %lor.lhs.false
  %cmp77 = icmp eq i32 %bf.clear69, 9, !dbg !7205
  br i1 %cmp77, label %land.lhs.true82, label %lor.lhs.false78, !dbg !7205

lor.lhs.false78:                                  ; preds = %lor.lhs.false74
  %cmp81 = icmp eq i32 %bf.clear69, 10, !dbg !7205
  br i1 %cmp81, label %land.lhs.true82, label %if.end138, !dbg !7206

land.lhs.true82:                                  ; preds = %lor.lhs.false78, %lor.lhs.false74, %lor.lhs.false, %land.lhs.true67
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call56, i64 0, i32 1, !dbg !7207
  %28 = getelementptr inbounds %union.u, %union.u* %u83, i64 1, i32 0, i32 0, i64 0, !dbg !7207
  %29 = bitcast %union.rtunion_def* %28 to i32**, !dbg !7207
  %30 = load i32*, i32** %29, align 8, !dbg !7207
  %bf.load87 = load i32, i32* %30, align 8, !dbg !7207
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !7207
  %cmp89 = icmp eq i32 %bf.clear88, 23, !dbg !7208
  br i1 %cmp89, label %if.then90, label %if.end138, !dbg !7209

if.then90:                                        ; preds = %land.lhs.true82
  %call91 = tail call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* nonnull %call56) #6, !dbg !7210
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call91, metadata !7154, metadata !DIExpression()), !dbg !7211
  %tobool92 = icmp eq %struct.rtx_def* %call91, null, !dbg !7212
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !7214

if.then93:                                        ; preds = %if.then90
  %rt_rtx97 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !7215
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !7215
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7215
  %rt_rtx101 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !7215
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !7215
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !7154, metadata !DIExpression()), !dbg !7211
  br label %if.end102, !dbg !7216

if.end102:                                        ; preds = %if.then90, %if.then93
  %src.0 = phi %struct.rtx_def* [ %call91, %if.then90 ], [ %33, %if.then93 ], !dbg !7211
  call void @llvm.dbg.value(metadata %struct.rtx_def* %src.0, metadata !7154, metadata !DIExpression()), !dbg !7211
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %src.0, i64 0, i32 0, !dbg !7217
  %bf.load103 = load i32, i32* %34, align 8, !dbg !7217
  %bf.clear104 = and i32 %bf.load103, 65535, !dbg !7217
  %cmp105 = icmp eq i32 %bf.clear104, 30, !dbg !7217
  br i1 %cmp105, label %if.then106, label %if.end138, !dbg !7218

if.then106:                                       ; preds = %if.end102
  %rt_rtx110 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !7219
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !7219
  %arrayidx113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7219
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !7219
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !7219
  %call115 = tail call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %36) #6, !dbg !7221
  %tobool116 = icmp eq i32 %call115, 0, !dbg !7221
  br i1 %tobool116, label %if.else, label %if.end130, !dbg !7222

if.else:                                          ; preds = %if.then106
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !7223
  %arrayidx124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7223
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !7223
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx125, align 8, !dbg !7223
  %call126 = tail call i32 @rtx_equal_p(%struct.rtx_def* %22, %struct.rtx_def* %38) #6, !dbg !7225
  %tobool127 = icmp eq i32 %call126, 0, !dbg !7225
  %spec.select = select i1 %tobool127, %struct.rtx_def* %22, %struct.rtx_def* %src.0, !dbg !7226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7152, metadata !DIExpression()), !dbg !7194
  br label %if.end130

if.end130:                                        ; preds = %if.then106, %if.else
  %op_a.0 = phi %struct.rtx_def* [ %20, %if.else ], [ %src.0, %if.then106 ], !dbg !7194
  %op_b.1 = phi %struct.rtx_def* [ %spec.select, %if.else ], [ %22, %if.then106 ], !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_b.1, metadata !7152, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_a.0, metadata !7151, metadata !DIExpression()), !dbg !7194
  %39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op_a.0, i64 0, i32 0, !dbg !7227
  %bf.load131 = load i32, i32* %39, align 8, !dbg !7227
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !7227
  %cmp133 = icmp eq i32 %bf.clear132, 30, !dbg !7227
  br i1 %cmp133, label %if.then134, label %if.end138, !dbg !7228

if.then134:                                       ; preds = %if.end130
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_a.0, metadata !7157, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_b.1, metadata !7151, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_a.0, metadata !7152, metadata !DIExpression()), !dbg !7194
  %call135 = tail call i32 @swap_condition(i32 %bf.clear44) #6, !dbg !7230
  call void @llvm.dbg.value(metadata i32 %call135, metadata !7148, metadata !DIExpression()), !dbg !7194
  br label %if.end138, !dbg !7231

if.end138:                                        ; preds = %if.then41, %if.end102, %if.then134, %if.end130, %land.lhs.true82, %lor.lhs.false78, %land.lhs.true
  %code.2 = phi i32 [ %bf.clear44, %land.lhs.true82 ], [ %bf.clear44, %lor.lhs.false78 ], [ %bf.clear44, %land.lhs.true ], [ %bf.clear44, %if.then41 ], [ %bf.clear44, %if.end102 ], [ %call135, %if.then134 ], [ %bf.clear44, %if.end130 ], !dbg !7194
  %op_a.3 = phi %struct.rtx_def* [ %20, %land.lhs.true82 ], [ %20, %lor.lhs.false78 ], [ %20, %land.lhs.true ], [ %20, %if.then41 ], [ %20, %if.end102 ], [ %op_b.1, %if.then134 ], [ %op_a.0, %if.end130 ], !dbg !7194
  %op_b.4 = phi %struct.rtx_def* [ %22, %land.lhs.true82 ], [ %22, %lor.lhs.false78 ], [ %22, %land.lhs.true ], [ %22, %if.then41 ], [ %22, %if.end102 ], [ %op_a.0, %if.then134 ], [ %op_b.1, %if.end130 ], !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_b.4, metadata !7152, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_a.3, metadata !7151, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 %code.2, metadata !7148, metadata !DIExpression()), !dbg !7194
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op_b.4, i64 0, i32 0, !dbg !7232
  %bf.load139 = load i32, i32* %40, align 8, !dbg !7232
  %bf.clear140 = and i32 %bf.load139, 65535, !dbg !7232
  %cmp141 = icmp eq i32 %bf.clear140, 30, !dbg !7232
  br i1 %cmp141, label %if.then142, label %if.end169, !dbg !7233

if.then142:                                       ; preds = %if.end138
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %target, i64 0, i32 1, !dbg !7234
  %arrayidx144 = bitcast %union.u* %u143 to i64*, !dbg !7234
  %41 = load i64, i64* %arrayidx144, align 8, !dbg !7234
  call void @llvm.dbg.value(metadata i64 %41, metadata !7162, metadata !DIExpression()), !dbg !7235
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %op_b.4, i64 0, i32 1, !dbg !7236
  %arrayidx147 = bitcast %union.u* %u145 to i64*, !dbg !7236
  %42 = load i64, i64* %arrayidx147, align 8, !dbg !7236
  call void @llvm.dbg.value(metadata i64 %42, metadata !7165, metadata !DIExpression()), !dbg !7235
  switch i32 %code.2, label %if.end169 [
    i32 85, label %sw.bb
    i32 84, label %sw.bb152
    i32 83, label %sw.bb157
    i32 82, label %sw.bb163
  ], !dbg !7237

sw.bb:                                            ; preds = %if.then142
  %add = add nsw i64 %41, 1, !dbg !7238
  %cmp148 = icmp eq i64 %42, %add, !dbg !7241
  br i1 %cmp148, label %if.then149, label %if.end169, !dbg !7242

if.then149:                                       ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i32 84, metadata !7148, metadata !DIExpression()), !dbg !7194
  %call150 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %41) #6, !dbg !7243
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call150, metadata !7152, metadata !DIExpression()), !dbg !7194
  br label %if.end169, !dbg !7245

sw.bb152:                                         ; preds = %if.then142
  %sub = add nsw i64 %41, -1, !dbg !7246
  %cmp153 = icmp eq i64 %42, %sub, !dbg !7248
  br i1 %cmp153, label %if.then154, label %if.end169, !dbg !7249

if.then154:                                       ; preds = %sw.bb152
  call void @llvm.dbg.value(metadata i32 85, metadata !7148, metadata !DIExpression()), !dbg !7194
  %call155 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %41) #6, !dbg !7250
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call155, metadata !7152, metadata !DIExpression()), !dbg !7194
  br label %if.end169, !dbg !7252

sw.bb157:                                         ; preds = %if.then142
  %sub158 = add nsw i64 %41, -1, !dbg !7253
  %cmp159 = icmp eq i64 %42, %sub158, !dbg !7255
  br i1 %cmp159, label %if.then160, label %if.end169, !dbg !7256

if.then160:                                       ; preds = %sw.bb157
  call void @llvm.dbg.value(metadata i32 82, metadata !7148, metadata !DIExpression()), !dbg !7194
  %call161 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %41) #6, !dbg !7257
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call161, metadata !7152, metadata !DIExpression()), !dbg !7194
  br label %if.end169, !dbg !7259

sw.bb163:                                         ; preds = %if.then142
  %add164 = add nsw i64 %41, 1, !dbg !7260
  %cmp165 = icmp eq i64 %42, %add164, !dbg !7262
  br i1 %cmp165, label %if.then166, label %if.end169, !dbg !7263

if.then166:                                       ; preds = %sw.bb163
  call void @llvm.dbg.value(metadata i32 83, metadata !7148, metadata !DIExpression()), !dbg !7194
  %call167 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %41) #6, !dbg !7264
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call167, metadata !7152, metadata !DIExpression()), !dbg !7194
  br label %if.end169, !dbg !7266

if.end169:                                        ; preds = %if.then149, %sw.bb, %if.then154, %sw.bb152, %if.then160, %sw.bb157, %if.then166, %sw.bb163, %if.then142, %if.end138
  %code.8 = phi i32 [ %code.2, %if.end138 ], [ 84, %if.then149 ], [ 85, %sw.bb ], [ 85, %if.then154 ], [ 84, %sw.bb152 ], [ 82, %if.then160 ], [ 83, %sw.bb157 ], [ 83, %if.then166 ], [ 82, %sw.bb163 ], [ %code.2, %if.then142 ], !dbg !7267
  %op_b.10 = phi %struct.rtx_def* [ %op_b.4, %if.end138 ], [ %call150, %if.then149 ], [ %op_b.4, %sw.bb ], [ %call155, %if.then154 ], [ %op_b.4, %sw.bb152 ], [ %call161, %if.then160 ], [ %op_b.4, %sw.bb157 ], [ %call167, %if.then166 ], [ %op_b.4, %sw.bb163 ], [ %op_b.4, %if.then142 ], !dbg !7268
  call void @llvm.dbg.value(metadata %struct.rtx_def* %op_b.10, metadata !7152, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 %code.8, metadata !7148, metadata !DIExpression()), !dbg !7194
  %43 = load i32*, i32** %18, align 8, !dbg !7269
  %bf.load171 = load i32, i32* %43, align 8, !dbg !7269
  %bf.clear172 = and i32 %bf.load171, 65535, !dbg !7269
  %cmp173 = icmp eq i32 %code.8, %bf.clear172, !dbg !7271
  br i1 %cmp173, label %lor.lhs.false174, label %if.then188, !dbg !7272

lor.lhs.false174:                                 ; preds = %if.end169
  %arrayidx178 = getelementptr inbounds i32, i32* %43, i64 2, !dbg !7273
  %rt_rtx179 = bitcast i32* %arrayidx178 to %struct.rtx_def**, !dbg !7273
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx179, align 8, !dbg !7273
  %cmp180 = icmp eq %struct.rtx_def* %op_a.3, %44, !dbg !7274
  br i1 %cmp180, label %lor.lhs.false181, label %if.then188, !dbg !7275

lor.lhs.false181:                                 ; preds = %lor.lhs.false174
  %45 = getelementptr inbounds i32, i32* %43, i64 4, !dbg !7276
  %rt_rtx186 = bitcast i32* %45 to %struct.rtx_def**, !dbg !7276
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx186, align 8, !dbg !7276
  %cmp187 = icmp eq %struct.rtx_def* %op_b.10, %46, !dbg !7277
  br i1 %cmp187, label %cleanup, label %if.then188, !dbg !7278

if.then188:                                       ; preds = %lor.lhs.false181, %lor.lhs.false174, %if.end169
  %47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !7279
  %bf.load189 = load i32, i32* %47, align 8, !dbg !7279
  %bf.lshr = lshr i32 %bf.load189, 16, !dbg !7279
  %bf.clear190 = and i32 %bf.lshr, 255, !dbg !7279
  %call191 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code.8, i32 %bf.clear190, %struct.rtx_def* %op_a.3, %struct.rtx_def* %op_b.10) #6, !dbg !7279
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call191, metadata !7144, metadata !DIExpression()), !dbg !7166
  %48 = bitcast %struct.rtx_def** %cond_earliest55 to i64*, !dbg !7281
  %49 = load i64, i64* %48, align 8, !dbg !7281
  %50 = bitcast %struct.rtx_def** %earliest to i64*, !dbg !7282
  store i64 %49, i64* %50, align 8, !dbg !7282
  br label %cleanup, !dbg !7283

cleanup:                                          ; preds = %lor.lhs.false181, %if.then188
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then188 ], [ true, %lor.lhs.false181 ]
  %cond.0 = phi %struct.rtx_def* [ %call191, %if.then188 ], [ %8, %lor.lhs.false181 ], !dbg !7166
  %retval.0 = phi %struct.rtx_def* [ %call191, %if.then188 ], [ undef, %lor.lhs.false181 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.0, metadata !7144, metadata !DIExpression()), !dbg !7166
  br i1 %cleanup.dest.slot.0, label %if.end197, label %cleanup269

if.end197:                                        ; preds = %cleanup, %if.end37
  %cond.1 = phi %struct.rtx_def* [ %8, %if.end37 ], [ %cond.0, %cleanup ], !dbg !7166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.1, metadata !7144, metadata !DIExpression()), !dbg !7166
  %51 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7284
  %call199 = tail call %struct.rtx_def* @canonicalize_condition(%struct.rtx_def* %51, %struct.rtx_def* %cond.1, i32 %reverse.0, %struct.rtx_def** %earliest, %struct.rtx_def* %target, i32 0, i32 1) #6, !dbg !7285
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call199, metadata !7144, metadata !DIExpression()), !dbg !7166
  %tobool200 = icmp eq %struct.rtx_def* %call199, null, !dbg !7286
  br i1 %tobool200, label %cleanup269, label %lor.lhs.false201, !dbg !7288

lor.lhs.false201:                                 ; preds = %if.end197
  %call202 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* nonnull %call199) #6, !dbg !7289
  %tobool203 = icmp eq i32 %call202, 0, !dbg !7289
  br i1 %tobool203, label %cleanup269, label %if.end205, !dbg !7290

if.end205:                                        ; preds = %lor.lhs.false201
  %x = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 11, !dbg !7291
  br label %for.cond, !dbg !7295

for.cond:                                         ; preds = %for.inc, %if.end205
  %insn.0.in = phi %struct.rtx_def** [ %jump, %if.end205 ], [ %rt_rtx235, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7146, metadata !DIExpression()), !dbg !7166
  %52 = load %struct.rtx_def*, %struct.rtx_def** %earliest, align 8, !dbg !7297
  %cmp207 = icmp eq %struct.rtx_def* %insn.0, %52, !dbg !7298
  br i1 %cmp207, label %for.end, label %for.body, !dbg !7299

for.body:                                         ; preds = %for.cond
  %53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7300
  %bf.load208 = load i32, i32* %53, align 8, !dbg !7300
  %bf.clear209 = and i32 %bf.load208, 65535, !dbg !7300
  %cmp210 = icmp eq i32 %bf.clear209, 8, !dbg !7300
  br i1 %cmp210, label %land.lhs.true223, label %lor.lhs.false211, !dbg !7300

lor.lhs.false211:                                 ; preds = %for.body
  %cmp214 = icmp eq i32 %bf.clear209, 7, !dbg !7300
  br i1 %cmp214, label %land.lhs.true223, label %lor.lhs.false215, !dbg !7300

lor.lhs.false215:                                 ; preds = %lor.lhs.false211
  %cmp218 = icmp eq i32 %bf.clear209, 9, !dbg !7300
  br i1 %cmp218, label %land.lhs.true223, label %lor.lhs.false219, !dbg !7300

lor.lhs.false219:                                 ; preds = %lor.lhs.false215
  %cmp222 = icmp eq i32 %bf.clear209, 10, !dbg !7300
  br i1 %cmp222, label %land.lhs.true223, label %for.inc, !dbg !7301

land.lhs.true223:                                 ; preds = %lor.lhs.false219, %lor.lhs.false215, %lor.lhs.false211, %for.body
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7302
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !7303
  %55 = getelementptr inbounds %union.u, %union.u* %u224, i64 1, i32 0, i32 0, i64 0, !dbg !7303
  %rt_rtx227 = bitcast %union.rtunion_def* %55 to %struct.rtx_def**, !dbg !7303
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !7303
  %call228 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %54, %struct.rtx_def* %56) #6, !dbg !7304
  %tobool229 = icmp eq i32 %call228, 0, !dbg !7304
  br i1 %tobool229, label %for.inc, label %cleanup269.loopexit1, !dbg !7305

for.inc:                                          ; preds = %land.lhs.true223, %lor.lhs.false219
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7306
  %rt_rtx235 = bitcast %union.rtunion_def* %57 to %struct.rtx_def**, !dbg !7306
  br label %for.cond, !dbg !7307, !llvm.loop !7308

for.end:                                          ; preds = %for.cond
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0, %for.cond ], !dbg !7296
  %b = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 10, !dbg !7310
  %a = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 9, !dbg !7314
  br label %for.cond236, !dbg !7315

for.cond236:                                      ; preds = %for.inc263, %for.end
  %insn.1 = phi %struct.rtx_def* [ %insn.0.lcssa, %for.end ], [ %insn.1.pre, %for.inc263 ], !dbg !7316
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !7146, metadata !DIExpression()), !dbg !7166
  %58 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7317
  %cmp238 = icmp eq %struct.rtx_def* %insn.1, %58, !dbg !7318
  br i1 %cmp238, label %cleanup269.loopexit, label %for.body239, !dbg !7319

for.body239:                                      ; preds = %for.cond236
  %59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !7320
  %bf.load240 = load i32, i32* %59, align 8, !dbg !7320
  %bf.clear241 = and i32 %bf.load240, 65535, !dbg !7320
  %cmp242 = icmp eq i32 %bf.clear241, 8, !dbg !7320
  br i1 %cmp242, label %land.lhs.true255, label %lor.lhs.false243, !dbg !7320

lor.lhs.false243:                                 ; preds = %for.body239
  %cmp246 = icmp eq i32 %bf.clear241, 7, !dbg !7320
  br i1 %cmp246, label %land.lhs.true255, label %lor.lhs.false247, !dbg !7320

lor.lhs.false247:                                 ; preds = %lor.lhs.false243
  %cmp250 = icmp eq i32 %bf.clear241, 9, !dbg !7320
  br i1 %cmp250, label %land.lhs.true255, label %lor.lhs.false251, !dbg !7320

lor.lhs.false251:                                 ; preds = %lor.lhs.false247
  %cmp254 = icmp eq i32 %bf.clear241, 10, !dbg !7320
  br i1 %cmp254, label %land.lhs.true255, label %for.inc263, !dbg !7321

land.lhs.true255:                                 ; preds = %lor.lhs.false251, %lor.lhs.false247, %lor.lhs.false243, %for.body239
  %60 = load %struct.rtx_def*, %struct.rtx_def** %a, align 8, !dbg !7322
  %call256 = tail call i32 @modified_in_p(%struct.rtx_def* %60, %struct.rtx_def* %insn.1) #6, !dbg !7323
  %tobool257 = icmp eq i32 %call256, 0, !dbg !7323
  br i1 %tobool257, label %lor.lhs.false258, label %cleanup269.loopexit, !dbg !7324

lor.lhs.false258:                                 ; preds = %land.lhs.true255
  %61 = load %struct.rtx_def*, %struct.rtx_def** %b, align 8, !dbg !7310
  %call259 = tail call i32 @modified_in_p(%struct.rtx_def* %61, %struct.rtx_def* %insn.1) #6, !dbg !7325
  %tobool260 = icmp eq i32 %call259, 0, !dbg !7325
  br i1 %tobool260, label %for.inc263, label %cleanup269.loopexit, !dbg !7326

for.inc263:                                       ; preds = %lor.lhs.false258, %lor.lhs.false251
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7327
  %rt_rtx267 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**, !dbg !7327
  %insn.1.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !7316
  br label %for.cond236, !dbg !7328, !llvm.loop !7329

cleanup269.loopexit:                              ; preds = %for.cond236, %land.lhs.true255, %lor.lhs.false258
  %retval.1.ph = phi %struct.rtx_def* [ %call199, %for.cond236 ], [ null, %land.lhs.true255 ], [ null, %lor.lhs.false258 ]
  br label %cleanup269, !dbg !7331

cleanup269.loopexit1:                             ; preds = %land.lhs.true223
  br label %cleanup269, !dbg !7331

cleanup269:                                       ; preds = %cleanup269.loopexit1, %cleanup269.loopexit, %lor.lhs.false201, %if.end197, %cleanup, %if.then
  %retval.1 = phi %struct.rtx_def* [ %4, %if.then ], [ %retval.0, %cleanup ], [ null, %lor.lhs.false201 ], [ null, %if.end197 ], [ %retval.1.ph, %cleanup269.loopexit ], [ null, %cleanup269.loopexit1 ], !dbg !7166
  ret %struct.rtx_def* %retval.1, !dbg !7331
}

declare dso_local i32 @swap_condition(i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_one_cmpl_abs_nojump(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_abs_nojump(i32, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_simple_unop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local i32 @register_operand(%struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @noce_emit_cmove(%struct.noce_if_info* %if_info, %struct.rtx_def* %x, i32 %code, %struct.rtx_def* %cmp_a, %struct.rtx_def* %cmp_b, %struct.rtx_def* %vfalse, %struct.rtx_def* %vtrue) unnamed_addr #4 !dbg !7332 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_info, metadata !7336, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !7337, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %code, metadata !7338, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp_a, metadata !7339, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cmp_b, metadata !7340, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %vfalse, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata %struct.rtx_def* %vtrue, metadata !7342, metadata !DIExpression()), !dbg !7346
  %cond_earliest = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 6, !dbg !7347
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond_earliest, align 8, !dbg !7347
  %jump = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 4, !dbg !7348
  %1 = load %struct.rtx_def*, %struct.rtx_def** %jump, align 8, !dbg !7348
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !7349
  br i1 %cmp, label %if.then, label %if.end12, !dbg !7350

if.then:                                          ; preds = %entry
  %cond = getelementptr inbounds %struct.noce_if_info, %struct.noce_if_info* %if_info, i64 0, i32 5, !dbg !7351
  %2 = bitcast %struct.rtx_def** %cond to i32**, !dbg !7351
  %3 = load i32*, i32** %2, align 8, !dbg !7351
  %bf.load = load i32, i32* %3, align 8, !dbg !7351
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7351
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7351
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %code, i32 %bf.clear, %struct.rtx_def* %cmp_a, %struct.rtx_def* %cmp_b) #6, !dbg !7351
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7343, metadata !DIExpression()), !dbg !7352
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7353
  %bf.load1 = load i32, i32* %4, align 8, !dbg !7353
  %bf.lshr2 = lshr i32 %bf.load1, 16, !dbg !7353
  %bf.clear3 = and i32 %bf.lshr2, 255, !dbg !7353
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %bf.clear3, %struct.rtx_def* %call, %struct.rtx_def* %vtrue, %struct.rtx_def* %vfalse) #6, !dbg !7353
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !7343, metadata !DIExpression()), !dbg !7352
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %x, %struct.rtx_def* %call4) #6, !dbg !7354
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !7343, metadata !DIExpression()), !dbg !7352
  tail call void @start_sequence() #6, !dbg !7355
  %call6 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5) #6, !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call6, metadata !7343, metadata !DIExpression()), !dbg !7352
  %call7 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %call6) #7, !dbg !7357
  %cmp8 = icmp sgt i32 %call7, -1, !dbg !7359
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !7360

if.then9:                                         ; preds = %if.then
  %call10 = tail call %struct.rtx_def* @get_insns() #6, !dbg !7361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call10, metadata !7343, metadata !DIExpression()), !dbg !7352
  tail call void @end_sequence() #6, !dbg !7363
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #6, !dbg !7364
  br label %cleanup, !dbg !7365

if.end:                                           ; preds = %if.then
  tail call void @end_sequence() #6, !dbg !7366
  br label %cleanup, !dbg !7367

cleanup:                                          ; preds = %if.end, %if.then9
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then9 ], [ true, %if.end ]
  br i1 %cleanup.dest.slot.0, label %if.end12, label %return

if.end12:                                         ; preds = %cleanup, %entry
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cmp_a, i64 0, i32 0, !dbg !7368
  %bf.load13 = load i32, i32* %5, align 8, !dbg !7368
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !7368
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !7368
  %call16 = tail call i32 @general_operand(%struct.rtx_def* %cmp_a, i32 %bf.clear15) #6, !dbg !7370
  %tobool = icmp eq i32 %call16, 0, !dbg !7370
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !7371

lor.lhs.false:                                    ; preds = %if.end12
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cmp_b, i64 0, i32 0, !dbg !7372
  %bf.load17 = load i32, i32* %6, align 8, !dbg !7372
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !7372
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !7372
  %call20 = tail call i32 @general_operand(%struct.rtx_def* %cmp_b, i32 %bf.clear19) #6, !dbg !7373
  %tobool21 = icmp eq i32 %call20, 0, !dbg !7373
  br i1 %tobool21, label %return, label %if.end23, !dbg !7374

if.end23:                                         ; preds = %lor.lhs.false
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !7375
  %bf.load24 = load i32, i32* %7, align 8, !dbg !7375
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !7375
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !7375
  %code.off = add i32 %code, -86, !dbg !7376
  %switch1 = icmp ult i32 %code.off, 4, !dbg !7376
  %lor.ext = zext i1 %switch1 to i32, !dbg !7377
  %call33 = tail call %struct.rtx_def* @emit_conditional_move(%struct.rtx_def* %x, i32 %code, %struct.rtx_def* %cmp_a, %struct.rtx_def* %cmp_b, i32 0, %struct.rtx_def* %vtrue, %struct.rtx_def* %vfalse, i32 %bf.clear26, i32 %lor.ext) #6, !dbg !7378
  br label %return, !dbg !7379

return:                                           ; preds = %lor.lhs.false, %if.end12, %cleanup, %if.end23
  %retval.1 = phi %struct.rtx_def* [ %x, %cleanup ], [ %call33, %if.end23 ], [ null, %lor.lhs.false ], [ null, %if.end12 ], !dbg !7346
  ret %struct.rtx_def* %retval.1, !dbg !7380
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_conditional_move(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local i64 @trunc_int_for_mode(i64, i32) local_unnamed_addr #1

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_conditional_add(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local i32 @insn_rtx_cost(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @get_last_insn() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #1

declare dso_local void @set_mem_addr_space(%struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_binop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @store_bit_field(%struct.rtx_def*, i64, i64, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @expand_unop(i32, %struct.optab_d*, %struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_cond_move_block(%struct.basic_block_def* %bb, %struct.rtx_def** %vals, %struct.VEC_int_heap** %regs, %struct.rtx_def* %cond) unnamed_addr #4 !dbg !7381 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7386, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.value(metadata %struct.rtx_def** %vals, metadata !7387, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %regs, metadata !7388, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !7389, metadata !DIExpression()), !dbg !7397
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7398
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7398
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7398
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !7398
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7398
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7390, metadata !DIExpression()), !dbg !7397
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !7399
  %bf.load = load i32, i32* %2, align 8, !dbg !7399
  %bf.clear = and i32 %bf.load, 65535, !dbg !7399
  %cmp = icmp eq i32 %bf.clear, 9, !dbg !7399
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7401

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @onlyjump_p(%struct.rtx_def* %1) #6, !dbg !7402
  %tobool = icmp eq i32 %call, 0, !dbg !7402
  br i1 %tobool, label %cleanup179, label %land.lhs.true.if.end_crit_edge, !dbg !7403

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %.pre = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7404
  br label %if.end, !dbg !7403

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry
  %3 = phi %struct.rtl_bb_info* [ %.pre, %land.lhs.true.if.end_crit_edge ], [ %0, %entry ], !dbg !7404
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 0, !dbg !7404
  br label %for.cond, !dbg !7404

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx178, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7390, metadata !DIExpression()), !dbg !7397
  %tobool3 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7406
  br i1 %tobool3, label %cleanup179.loopexit, label %land.rhs, !dbg !7406

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7406
  %end_6 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !7406
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_6, align 8, !dbg !7406
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7406
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !7406
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7406
  %cmp7 = icmp eq %struct.rtx_def* %insn.0, %7, !dbg !7406
  br i1 %cmp7, label %cleanup179.loopexit, label %for.body, !dbg !7404

for.body:                                         ; preds = %land.rhs
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7407
  %bf.load8 = load i32, i32* %8, align 8, !dbg !7407
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !7407
  %cmp10 = icmp eq i32 %bf.clear9, 8, !dbg !7407
  br i1 %cmp10, label %land.lhs.true22, label %lor.lhs.false, !dbg !7407

lor.lhs.false:                                    ; preds = %for.body
  %cmp13 = icmp eq i32 %bf.clear9, 7, !dbg !7407
  br i1 %cmp13, label %land.lhs.true22, label %lor.lhs.false14, !dbg !7407

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %cmp17 = icmp eq i32 %bf.clear9, 9, !dbg !7407
  br i1 %cmp17, label %land.lhs.true22, label %lor.lhs.false18, !dbg !7407

lor.lhs.false18:                                  ; preds = %lor.lhs.false14
  %cmp21 = icmp eq i32 %bf.clear9, 10, !dbg !7407
  br i1 %cmp21, label %land.lhs.true22, label %cleanup, !dbg !7407

land.lhs.true22:                                  ; preds = %lor.lhs.false18, %lor.lhs.false14, %lor.lhs.false, %for.body
  %cmp25 = icmp eq i32 %bf.clear9, 7, !dbg !7407
  br i1 %cmp25, label %cleanup, label %lor.lhs.false26, !dbg !7409

lor.lhs.false26:                                  ; preds = %land.lhs.true22
  %cmp29 = icmp eq i32 %bf.clear9, 9, !dbg !7410
  br i1 %cmp29, label %cleanup, label %if.end31, !dbg !7411

if.end31:                                         ; preds = %lor.lhs.false26
  br i1 %cmp10, label %cond.true, label %lor.lhs.false35, !dbg !7412

lor.lhs.false35:                                  ; preds = %if.end31
  br i1 false, label %lor.lhs.false35.cond.true_crit_edge, label %lor.lhs.false39, !dbg !7412

lor.lhs.false35.cond.true_crit_edge:              ; preds = %lor.lhs.false35
  br label %cond.true, !dbg !7412

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  br i1 false, label %lor.lhs.false39.cond.true_crit_edge, label %lor.lhs.false43, !dbg !7412

lor.lhs.false39.cond.true_crit_edge:              ; preds = %lor.lhs.false39
  br label %cond.true, !dbg !7412

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %cmp46 = icmp eq i32 %bf.clear9, 10, !dbg !7412
  br i1 %cmp46, label %cond.true, label %cond.end66, !dbg !7412

cond.true:                                        ; preds = %lor.lhs.false39.cond.true_crit_edge, %lor.lhs.false35.cond.true_crit_edge, %lor.lhs.false43, %if.end31
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !7412
  %9 = getelementptr inbounds %union.u, %union.u* %u47, i64 1, i32 0, i32 0, i64 0, !dbg !7412
  %10 = bitcast %union.rtunion_def* %9 to i32**, !dbg !7412
  %11 = load i32*, i32** %10, align 8, !dbg !7412
  %bf.load51 = load i32, i32* %11, align 8, !dbg !7412
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !7412
  %cmp53 = icmp eq i32 %bf.clear52, 23, !dbg !7412
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !7412
  br i1 %cmp53, label %cond.end66, label %cond.false, !dbg !7412

cond.false:                                       ; preds = %cond.true
  %call63 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %12) #6, !dbg !7412
  br label %cond.end66, !dbg !7412

cond.end66:                                       ; preds = %lor.lhs.false43, %cond.false, %cond.true
  %cond67 = phi %struct.rtx_def* [ %call63, %cond.false ], [ %12, %cond.true ], [ null, %lor.lhs.false43 ], !dbg !7412
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond67, metadata !7391, metadata !DIExpression()), !dbg !7413
  %tobool68 = icmp eq %struct.rtx_def* %cond67, null, !dbg !7414
  br i1 %tobool68, label %cleanup, label %if.end70, !dbg !7416

if.end70:                                         ; preds = %cond.end66
  %arrayidx73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond67, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7417
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !7417
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !7417
  call void @llvm.dbg.value(metadata %struct.rtx_def* %13, metadata !7395, metadata !DIExpression()), !dbg !7413
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond67, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7418
  %rt_rtx78 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !7418
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !7418
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !7396, metadata !DIExpression()), !dbg !7413
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i64 0, i32 0, !dbg !7419
  %bf.load79 = load i32, i32* %16, align 8, !dbg !7419
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !7419
  %cmp81 = icmp eq i32 %bf.clear80, 37, !dbg !7419
  br i1 %cmp81, label %lor.lhs.false82, label %cleanup, !dbg !7421

lor.lhs.false82:                                  ; preds = %if.end70
  %call83 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !7422
  %cmp84 = icmp ult i32 %call83, 53, !dbg !7422
  br i1 %cmp84, label %cleanup, label %if.end86, !dbg !7423

if.end86:                                         ; preds = %lor.lhs.false82
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 0, !dbg !7424
  %bf.load87 = load i32, i32* %17, align 8, !dbg !7424
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !7424
  %idxprom = zext i32 %bf.clear88 to i64, !dbg !7424
  %arrayidx89 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7424
  %18 = load i32, i32* %arrayidx89, align 4, !dbg !7424
  %cmp90 = icmp eq i32 %18, 9, !dbg !7424
  br i1 %cmp90, label %if.end95, label %land.lhs.true91, !dbg !7426

land.lhs.true91:                                  ; preds = %if.end86
  %call92 = tail call i32 @register_operand(%struct.rtx_def* %15, i32 0) #6, !dbg !7427
  %tobool93 = icmp eq i32 %call92, 0, !dbg !7427
  br i1 %tobool93, label %cleanup, label %if.end95, !dbg !7428

if.end95:                                         ; preds = %land.lhs.true91, %if.end86
  %call96 = tail call i32 @side_effects_p(%struct.rtx_def* %15) #6, !dbg !7429
  %tobool97 = icmp eq i32 %call96, 0, !dbg !7429
  br i1 %tobool97, label %lor.lhs.false98, label %cleanup, !dbg !7431

lor.lhs.false98:                                  ; preds = %if.end95
  %call99 = tail call i32 @side_effects_p(%struct.rtx_def* %13) #6, !dbg !7432
  %tobool100 = icmp eq i32 %call99, 0, !dbg !7432
  br i1 %tobool100, label %if.end102, label %cleanup, !dbg !7433

if.end102:                                        ; preds = %lor.lhs.false98
  %call103 = tail call i32 @may_trap_p(%struct.rtx_def* %15) #6, !dbg !7434
  %tobool104 = icmp eq i32 %call103, 0, !dbg !7434
  br i1 %tobool104, label %lor.lhs.false105, label %cleanup, !dbg !7436

lor.lhs.false105:                                 ; preds = %if.end102
  %call106 = tail call i32 @may_trap_p(%struct.rtx_def* %13) #6, !dbg !7437
  %tobool107 = icmp eq i32 %call106, 0, !dbg !7437
  br i1 %tobool107, label %if.end109, label %cleanup, !dbg !7438

if.end109:                                        ; preds = %lor.lhs.false105
  %bf.load110 = load i32, i32* %17, align 8, !dbg !7439
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !7439
  %cmp112 = icmp eq i32 %bf.clear111, 37, !dbg !7439
  br i1 %cmp112, label %land.lhs.true113, label %lor.lhs.false118, !dbg !7441

land.lhs.true113:                                 ; preds = %if.end109
  %call114 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %15) #7, !dbg !7442
  %idxprom115 = zext i32 %call114 to i64, !dbg !7443
  %arrayidx116 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %vals, i64 %idxprom115, !dbg !7443
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx116, align 8, !dbg !7443
  %cmp117 = icmp eq %struct.rtx_def* %19, null, !dbg !7444
  br i1 %cmp117, label %land.lhs.true113.lor.lhs.false118_crit_edge, label %cleanup, !dbg !7445

land.lhs.true113.lor.lhs.false118_crit_edge:      ; preds = %land.lhs.true113
  %bf.load119.pre = load i32, i32* %17, align 8, !dbg !7446
  br label %lor.lhs.false118, !dbg !7445

lor.lhs.false118:                                 ; preds = %land.lhs.true113.lor.lhs.false118_crit_edge, %if.end109
  %bf.load119 = phi i32 [ %bf.load119.pre, %land.lhs.true113.lor.lhs.false118_crit_edge ], [ %bf.load110, %if.end109 ], !dbg !7446
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !7446
  %cmp121 = icmp eq i32 %bf.clear120, 39, !dbg !7447
  br i1 %cmp121, label %land.lhs.true122, label %if.end140, !dbg !7448

land.lhs.true122:                                 ; preds = %lor.lhs.false118
  %arrayidx125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7449
  %20 = bitcast %union.rtunion_def* %arrayidx125 to i32**, !dbg !7449
  %21 = load i32*, i32** %20, align 8, !dbg !7449
  %bf.load127 = load i32, i32* %21, align 8, !dbg !7449
  %bf.clear128 = and i32 %bf.load127, 65535, !dbg !7449
  %cmp129 = icmp eq i32 %bf.clear128, 37, !dbg !7449
  br i1 %cmp129, label %land.lhs.true130, label %if.end140, !dbg !7450

land.lhs.true130:                                 ; preds = %land.lhs.true122
  %22 = bitcast i32* %21 to %struct.rtx_def*, !dbg !7450
  %call135 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %22) #7, !dbg !7451
  %idxprom136 = zext i32 %call135 to i64, !dbg !7452
  %arrayidx137 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %vals, i64 %idxprom136, !dbg !7452
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx137, align 8, !dbg !7452
  %cmp138 = icmp eq %struct.rtx_def* %23, null, !dbg !7453
  br i1 %cmp138, label %if.end140, label %cleanup, !dbg !7454

if.end140:                                        ; preds = %land.lhs.true130, %land.lhs.true122, %lor.lhs.false118
  %call141 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !7455
  %idxprom142 = zext i32 %call141 to i64, !dbg !7457
  %arrayidx143 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %vals, i64 %idxprom142, !dbg !7457
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx143, align 8, !dbg !7457
  %cmp144 = icmp eq %struct.rtx_def* %24, null, !dbg !7458
  br i1 %cmp144, label %if.end146, label %cleanup, !dbg !7459

if.end146:                                        ; preds = %if.end140
  %call147 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %13, %struct.rtx_def* %cond) #6, !dbg !7460
  %tobool148 = icmp eq i32 %call147, 0, !dbg !7460
  br i1 %tobool148, label %if.end150, label %cleanup, !dbg !7462

if.end150:                                        ; preds = %if.end146
  %bf.load151 = load i32, i32* %17, align 8, !dbg !7463
  %bf.clear152 = and i32 %bf.load151, 65535, !dbg !7463
  %idxprom153 = zext i32 %bf.clear152 to i64, !dbg !7463
  %arrayidx154 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom153, !dbg !7463
  %25 = load i32, i32* %arrayidx154, align 4, !dbg !7463
  %cmp155 = icmp eq i32 %25, 9, !dbg !7463
  br i1 %cmp155, label %if.end167, label %land.lhs.true156, !dbg !7465

land.lhs.true156:                                 ; preds = %if.end150
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7466
  %end_159 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 1, !dbg !7466
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_159, align 8, !dbg !7466
  %28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7466
  %rt_rtx163 = bitcast %union.rtunion_def* %28 to %struct.rtx_def**, !dbg !7466
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx163, align 8, !dbg !7466
  %call164 = tail call i32 @modified_between_p(%struct.rtx_def* %15, %struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %29) #6, !dbg !7467
  %tobool165 = icmp eq i32 %call164, 0, !dbg !7467
  br i1 %tobool165, label %if.end167, label %cleanup, !dbg !7468

if.end167:                                        ; preds = %land.lhs.true156, %if.end150
  %call168 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !7469
  %idxprom169 = zext i32 %call168 to i64, !dbg !7470
  %arrayidx170 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %vals, i64 %idxprom169, !dbg !7470
  store %struct.rtx_def* %15, %struct.rtx_def** %arrayidx170, align 8, !dbg !7471
  %call171 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %13) #7, !dbg !7472
  %call172 = tail call fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %regs, i32 %call171) #7, !dbg !7472
  br label %cleanup, !dbg !7473

cleanup:                                          ; preds = %land.lhs.true113, %land.lhs.true130, %land.lhs.true156, %if.end146, %if.end140, %lor.lhs.false105, %if.end102, %lor.lhs.false98, %if.end95, %land.lhs.true91, %cond.end66, %if.end70, %lor.lhs.false82, %lor.lhs.false18, %land.lhs.true22, %lor.lhs.false26, %if.end167
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end167 ], [ 4, %lor.lhs.false26 ], [ 4, %land.lhs.true22 ], [ 4, %lor.lhs.false18 ], [ 1, %cond.end66 ], [ 1, %lor.lhs.false82 ], [ 1, %if.end70 ], [ 1, %land.lhs.true91 ], [ 1, %lor.lhs.false98 ], [ 1, %if.end95 ], [ 1, %lor.lhs.false105 ], [ 1, %if.end102 ], [ 1, %land.lhs.true130 ], [ 1, %land.lhs.true113 ], [ 1, %if.end140 ], [ 1, %if.end146 ], [ 1, %land.lhs.true156 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup179.loopexit [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7406
  %rt_rtx178 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !7406
  br label %for.cond, !dbg !7406, !llvm.loop !7474

cleanup179.loopexit:                              ; preds = %cleanup, %for.cond, %land.rhs
  %retval.2.ph = phi i32 [ 1, %land.rhs ], [ 1, %for.cond ], [ 0, %cleanup ]
  br label %cleanup179, !dbg !7476

cleanup179:                                       ; preds = %cleanup179.loopexit, %land.lhs.true
  %retval.2 = phi i32 [ 0, %land.lhs.true ], [ %retval.2.ph, %cleanup179.loopexit ]
  ret i32 %retval.2, !dbg !7476
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !7477 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !7481, metadata !DIExpression()), !dbg !7482
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !7483
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7483
  br i1 %tobool, label %if.end, label %if.then, !dbg !7485

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !7485
  tail call void @free(i8* nonnull %1) #6, !dbg !7483
  br label %if.end, !dbg !7483

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !7485
  ret void, !dbg !7485
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !7486 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7493, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !7494, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !7495, metadata !DIExpression()), !dbg !7496
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !7497
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7497

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7497
  %0 = load i32, i32* %num, align 4, !dbg !7497
  %cmp = icmp ugt i32 %0, %ix_, !dbg !7497
  br i1 %cmp, label %if.then, label %if.else, !dbg !7499

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !7500
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7500
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7500
  br label %return, !dbg !7500

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !7502

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !7504
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !7504
  store i32 %storemerge, i32* %ptr, align 4, !dbg !7504
  ret i32 %retval.0, !dbg !7499
}

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cond_move_convert_if_block(%struct.noce_if_info* %if_infop, %struct.basic_block_def* %bb, %struct.rtx_def* %cond, %struct.rtx_def** %then_vals, %struct.rtx_def** %else_vals, i8 zeroext %else_block_p) unnamed_addr #4 !dbg !7505 {
entry:
  call void @llvm.dbg.value(metadata %struct.noce_if_info* %if_infop, metadata !7509, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7510, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !7511, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct.rtx_def** %then_vals, metadata !7512, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct.rtx_def** %else_vals, metadata !7513, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata i8 %else_block_p, metadata !7514, metadata !DIExpression()), !dbg !7528
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !7529
  %bf.load = load i32, i32* %0, align 8, !dbg !7529
  %bf.clear = and i32 %bf.load, 65535, !dbg !7529
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7515, metadata !DIExpression()), !dbg !7528
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7530
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7530
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7530
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7517, metadata !DIExpression()), !dbg !7528
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7531
  %rt_rtx4 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7531
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !7531
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !7518, metadata !DIExpression()), !dbg !7528
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7532
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7532
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7532
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 0, !dbg !7532
  %tobool88 = icmp eq i8 %else_block_p, 0, !dbg !7533
  br label %for.cond, !dbg !7532

for.cond:                                         ; preds = %for.inc, %entry
  %insn.0.in = phi %struct.rtx_def** [ %head_, %entry ], [ %rt_rtx122, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7535
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7516, metadata !DIExpression()), !dbg !7528
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7536
  br i1 %tobool, label %cleanup123, label %land.rhs, !dbg !7536

land.rhs:                                         ; preds = %for.cond
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7536
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !7536
  %6 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7536
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7536
  %rt_rtx10 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !7536
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !7536
  %cmp = icmp eq %struct.rtx_def* %insn.0, %8, !dbg !7536
  br i1 %cmp, label %cleanup123, label %for.body, !dbg !7532

for.body:                                         ; preds = %land.rhs
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7537
  %bf.load11 = load i32, i32* %9, align 8, !dbg !7537
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !7537
  %cmp13 = icmp eq i32 %bf.clear12, 8, !dbg !7537
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false, !dbg !7537

lor.lhs.false:                                    ; preds = %for.body
  %cmp16 = icmp eq i32 %bf.clear12, 7, !dbg !7537
  br i1 %cmp16, label %land.lhs.true, label %lor.lhs.false17, !dbg !7537

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear12, 9, !dbg !7537
  br i1 %cmp20, label %land.lhs.true, label %lor.lhs.false21, !dbg !7537

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %cmp24 = icmp eq i32 %bf.clear12, 10, !dbg !7537
  br i1 %cmp24, label %land.lhs.true, label %cleanup, !dbg !7537

land.lhs.true:                                    ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %for.body
  %cmp27 = icmp eq i32 %bf.clear12, 7, !dbg !7537
  br i1 %cmp27, label %cleanup, label %lor.lhs.false28, !dbg !7539

lor.lhs.false28:                                  ; preds = %land.lhs.true
  %cmp31 = icmp eq i32 %bf.clear12, 9, !dbg !7540
  br i1 %cmp31, label %cleanup, label %if.end, !dbg !7541

if.end:                                           ; preds = %lor.lhs.false28
  br i1 %cmp13, label %cond.true, label %lor.lhs.false35, !dbg !7542

lor.lhs.false35:                                  ; preds = %if.end
  br i1 false, label %lor.lhs.false35.cond.true_crit_edge, label %lor.lhs.false39, !dbg !7542

lor.lhs.false35.cond.true_crit_edge:              ; preds = %lor.lhs.false35
  br label %cond.true, !dbg !7542

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  br i1 false, label %lor.lhs.false39.cond.true_crit_edge, label %lor.lhs.false43, !dbg !7542

lor.lhs.false39.cond.true_crit_edge:              ; preds = %lor.lhs.false39
  br label %cond.true, !dbg !7542

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %cmp46 = icmp eq i32 %bf.clear12, 10, !dbg !7542
  br i1 %cmp46, label %cond.true, label %cond.end65, !dbg !7542

cond.true:                                        ; preds = %lor.lhs.false39.cond.true_crit_edge, %lor.lhs.false35.cond.true_crit_edge, %lor.lhs.false43, %if.end
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !7542
  %10 = getelementptr inbounds %union.u, %union.u* %u47, i64 1, i32 0, i32 0, i64 0, !dbg !7542
  %11 = bitcast %union.rtunion_def* %10 to i32**, !dbg !7542
  %12 = load i32*, i32** %11, align 8, !dbg !7542
  %bf.load51 = load i32, i32* %12, align 8, !dbg !7542
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !7542
  %cmp53 = icmp eq i32 %bf.clear52, 23, !dbg !7542
  %13 = bitcast i32* %12 to %struct.rtx_def*, !dbg !7542
  br i1 %cmp53, label %cond.end65, label %cond.false, !dbg !7542

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %13) #6, !dbg !7542
  br label %cond.end65, !dbg !7542

cond.end65:                                       ; preds = %lor.lhs.false43, %cond.false, %cond.true
  %cond66 = phi %struct.rtx_def* [ %call, %cond.false ], [ %13, %cond.true ], [ null, %lor.lhs.false43 ], !dbg !7542
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond66, metadata !7519, metadata !DIExpression()), !dbg !7543
  %tobool67 = icmp eq %struct.rtx_def* %cond66, null, !dbg !7544
  br i1 %tobool67, label %cond.true76, label %land.lhs.true68, !dbg !7544

land.lhs.true68:                                  ; preds = %cond.end65
  %arrayidx71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond66, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7544
  %14 = bitcast %union.rtunion_def* %arrayidx71 to i32**, !dbg !7544
  %15 = load i32*, i32** %14, align 8, !dbg !7544
  %bf.load73 = load i32, i32* %15, align 8, !dbg !7544
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !7544
  %cmp75 = icmp eq i32 %bf.clear74, 37, !dbg !7544
  br i1 %cmp75, label %land.lhs.true68.cond.end78_crit_edge, label %cond.true76, !dbg !7544

land.lhs.true68.cond.end78_crit_edge:             ; preds = %land.lhs.true68
  %16 = bitcast i32* %15 to %struct.rtx_def*, !dbg !7544
  br label %cond.end78, !dbg !7544

cond.true76:                                      ; preds = %cond.end65, %land.lhs.true68
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7544
  %arrayidx82.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond66, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7543
  %rt_rtx83.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx82.phi.trans.insert to %struct.rtx_def**, !dbg !7543
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83.phi.trans.insert, align 8, !dbg !7545
  br label %cond.end78, !dbg !7544

cond.end78:                                       ; preds = %land.lhs.true68.cond.end78_crit_edge, %cond.true76
  %17 = phi %struct.rtx_def* [ %16, %land.lhs.true68.cond.end78_crit_edge ], [ %.pre, %cond.true76 ], !dbg !7545
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !7524, metadata !DIExpression()), !dbg !7543
  %call84 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %call84, metadata !7527, metadata !DIExpression()), !dbg !7543
  %idxprom = zext i32 %call84 to i64, !dbg !7547
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %then_vals, i64 %idxprom, !dbg !7547
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8, !dbg !7547
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !7525, metadata !DIExpression()), !dbg !7543
  %arrayidx87 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %else_vals, i64 %idxprom, !dbg !7548
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx87, align 8, !dbg !7548
  call void @llvm.dbg.value(metadata %struct.rtx_def* %19, metadata !7526, metadata !DIExpression()), !dbg !7543
  %tobool90 = icmp ne %struct.rtx_def* %18, null, !dbg !7533
  br i1 %tobool88, label %if.else, label %if.then89, !dbg !7549

if.then89:                                        ; preds = %cond.end78
  br i1 %tobool90, label %cleanup, label %if.end92, !dbg !7550

if.end92:                                         ; preds = %if.then89
  call void @llvm.dbg.value(metadata %struct.rtx_def* %17, metadata !7525, metadata !DIExpression()), !dbg !7543
  %tobool93 = icmp eq %struct.rtx_def* %19, null, !dbg !7552
  br i1 %tobool93, label %cond.true94, label %if.end106, !dbg !7552

cond.true94:                                      ; preds = %if.end92
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2612, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7552
  br label %if.end106, !dbg !7552

if.else:                                          ; preds = %cond.end78
  br i1 %tobool90, label %cond.end101, label %cond.true99, !dbg !7553

cond.true99:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2616, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7553
  br label %cond.end101, !dbg !7553

cond.end101:                                      ; preds = %if.else, %cond.true99
  %tobool103 = icmp eq %struct.rtx_def* %19, null, !dbg !7555
  %spec.select = select i1 %tobool103, %struct.rtx_def* %17, %struct.rtx_def* %19, !dbg !7557
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !7526, metadata !DIExpression()), !dbg !7543
  br label %if.end106

if.end106:                                        ; preds = %if.end92, %cond.true94, %cond.end101
  %t.0 = phi %struct.rtx_def* [ %18, %cond.end101 ], [ %17, %if.end92 ], [ %17, %cond.true94 ], !dbg !7543
  %e.1 = phi %struct.rtx_def* [ %spec.select, %cond.end101 ], [ %19, %if.end92 ], [ null, %cond.true94 ], !dbg !7558
  call void @llvm.dbg.value(metadata %struct.rtx_def* %e.1, metadata !7526, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %t.0, metadata !7525, metadata !DIExpression()), !dbg !7543
  %call107 = tail call fastcc %struct.rtx_def* @noce_emit_cmove(%struct.noce_if_info* %if_infop, %struct.rtx_def* %17, i32 %bf.clear, %struct.rtx_def* %1, %struct.rtx_def* %3, %struct.rtx_def* %t.0, %struct.rtx_def* %e.1) #7, !dbg !7559
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call107, metadata !7523, metadata !DIExpression()), !dbg !7543
  %tobool108 = icmp eq %struct.rtx_def* %call107, null, !dbg !7560
  br i1 %tobool108, label %cleanup, label %if.end110, !dbg !7562

if.end110:                                        ; preds = %if.end106
  %cmp111 = icmp eq %struct.rtx_def* %call107, %17, !dbg !7563
  br i1 %cmp111, label %cleanup, label %if.then112, !dbg !7565

if.then112:                                       ; preds = %if.end110
  tail call fastcc void @noce_emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* nonnull %call107) #7, !dbg !7566
  br label %cleanup, !dbg !7566

cleanup:                                          ; preds = %if.end110, %if.end106, %if.then112, %if.then89, %lor.lhs.false21, %land.lhs.true, %lor.lhs.false28
  %cleanup.dest.slot.0 = phi i32 [ 4, %lor.lhs.false28 ], [ 4, %land.lhs.true ], [ 4, %lor.lhs.false21 ], [ 4, %if.then89 ], [ 1, %if.end106 ], [ 0, %if.then112 ], [ 0, %if.end110 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup123 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7536
  %rt_rtx122 = bitcast %union.rtunion_def* %20 to %struct.rtx_def**, !dbg !7536
  br label %for.cond, !dbg !7536, !llvm.loop !7567

cleanup123:                                       ; preds = %land.rhs, %for.cond, %cleanup
  %retval.2 = phi i8 [ 0, %cleanup ], [ 1, %for.cond ], [ 1, %land.rhs ]
  ret i8 %retval.2, !dbg !7569
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_heap_safe_push(%struct.VEC_int_heap** %vec_, i32 %obj_) unnamed_addr #0 !dbg !7570 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !7575, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !7576, metadata !DIExpression()), !dbg !7577
  %call = tail call fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 1) #7, !dbg !7578
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !7578
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7578
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7578

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !7578
  br label %cond.end, !dbg !7578

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7578
  %call1 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond, i32 %obj_) #7, !dbg !7578
  ret i32* %call1, !dbg !7578
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_heap_reserve(%struct.VEC_int_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7579 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !7583, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 1, metadata !7584, metadata !DIExpression()), !dbg !7586
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !7587
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !7587
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7587

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %0, i64 0, i32 0, !dbg !7587
  br label %cond.end, !dbg !7587

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7587
  %call = tail call fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %cond, i32 1) #7, !dbg !7587
  %tobool1 = icmp eq i32 %call, 0, !dbg !7587
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7587
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7585, metadata !DIExpression()), !dbg !7586
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7587

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_int_heap** %vec_ to i8**, !dbg !7588
  %2 = load i8*, i8** %1, align 8, !dbg !7588
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 4) #6, !dbg !7588
  store i8* %call3, i8** %1, align 8, !dbg !7588
  br label %if.end, !dbg !7588

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7587
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !7590 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7595, metadata !DIExpression()), !dbg !7598
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !7596, metadata !DIExpression()), !dbg !7598
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7599
  %0 = load i32, i32* %num1, align 4, !dbg !7599
  %inc = add i32 %0, 1, !dbg !7599
  store i32 %inc, i32* %num1, align 4, !dbg !7599
  %idxprom = zext i32 %0 to i64, !dbg !7599
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7599
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !7599
  ret i32* %arrayidx, !dbg !7599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_space(%struct.VEC_int_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7600 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !7604, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 1, metadata !7605, metadata !DIExpression()), !dbg !7606
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !7607
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7607

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 1, !dbg !7607
  %0 = load i32, i32* %alloc, align 4, !dbg !7607
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !7607
  %1 = load i32, i32* %num, align 4, !dbg !7607
  %cmp1 = icmp ne i32 %0, %1, !dbg !7607
  %phitmp = zext i1 %cmp1 to i32, !dbg !7607
  br label %cond.end, !dbg !7607

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7607
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #1

declare dso_local void @free(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7608 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7610, metadata !DIExpression()), !dbg !7611
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #7, !dbg !7612
  %tobool = icmp eq i8 %call, 0, !dbg !7612
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7612

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7612
  br label %cond.end, !dbg !7612

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7613
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !7613
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !7613
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !7613

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !7613
  br label %cond.end5, !dbg !7613

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !7613
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !7613
  ret %struct.edge_def* %call7, !dbg !7614
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7615 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7617, metadata !DIExpression()), !dbg !7618
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #7, !dbg !7619
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !7620
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7620
  ret %struct.basic_block_def* %0, !dbg !7621
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @block_jumps_and_fallthru_p(%struct.basic_block_def* %cur_bb, %struct.basic_block_def* %target_bb) unnamed_addr #4 !dbg !7622 {
entry:
  %cur_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %cur_bb, metadata !7626, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %target_bb, metadata !7627, metadata !DIExpression()), !dbg !7635
  %0 = bitcast %struct.edge_def** %cur_edge to i8*, !dbg !7636
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7636
  call void @llvm.dbg.value(metadata i32 0, metadata !7629, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 0, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 0, metadata !7633, metadata !DIExpression()), !dbg !7635
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7637
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7637
  %tobool = icmp ne %struct.basic_block_def* %cur_bb, null, !dbg !7638
  %tobool1 = icmp ne %struct.basic_block_def* %target_bb, null, !dbg !7640
  %or.cond = and i1 %tobool, %tobool1, !dbg !7641
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7641

if.end:                                           ; preds = %entry
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cur_bb, i64 0, i32 1, !dbg !7642
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7642
  %tobool2 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !7642
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !7642

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !7642
  br label %cond.end, !dbg !7642

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !7642
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7642
  %cmp = icmp eq i32 %call, 0, !dbg !7644
  br i1 %cmp, label %cleanup, label %if.end5, !dbg !7645

if.end5:                                          ; preds = %cond.end
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7646
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !7646
  %call7 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !7646
  %4 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7646
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call7, 0, !dbg !7646
  store i32 %5, i32* %4, align 8, !dbg !7646
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7646
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call7, 1, !dbg !7646
  store %struct.VEC_edge_gc** %7, %struct.VEC_edge_gc*** %6, align 8, !dbg !7646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !7646
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !7646
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7648
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7648
  br label %for.cond, !dbg !7646

for.cond:                                         ; preds = %for.inc, %if.end5
  %jump_p.0 = phi i32 [ 0, %if.end5 ], [ %jump_p.1, %for.inc ], !dbg !7650
  %fallthru_p.0 = phi i32 [ 0, %if.end5 ], [ %fallthru_p.1, %for.inc ], !dbg !7635
  call void @llvm.dbg.value(metadata i32 %fallthru_p.0, metadata !7629, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %jump_p.0, metadata !7630, metadata !DIExpression()), !dbg !7635
  %10 = load i32, i32* %8, align 8, !dbg !7651
  %11 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %9, align 8, !dbg !7651
  call void @llvm.dbg.value(metadata %struct.edge_def** %cur_edge, metadata !7628, metadata !DIExpression(DW_OP_deref)), !dbg !7635
  %call8 = call fastcc zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %11, %struct.edge_def** nonnull %cur_edge) #7, !dbg !7651
  %tobool9 = icmp eq i8 %call8, 0, !dbg !7646
  br i1 %tobool9, label %for.end, label %for.body, !dbg !7646

for.body:                                         ; preds = %for.cond
  %12 = load %struct.edge_def*, %struct.edge_def** %cur_edge, align 8, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.edge_def* %12, metadata !7628, metadata !DIExpression()), !dbg !7635
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i64 0, i32 7, !dbg !7655
  %13 = load i32, i32* %flags, align 8, !dbg !7655
  %and = and i32 %13, 14, !dbg !7656
  %tobool10 = icmp eq i32 %and, 0, !dbg !7656
  br i1 %tobool10, label %if.else, label %cleanup.loopexit1, !dbg !7657

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %12, metadata !7628, metadata !DIExpression()), !dbg !7635
  %and13 = and i32 %13, 1, !dbg !7658
  %tobool14 = icmp eq i32 %and13, 0, !dbg !7658
  br i1 %tobool14, label %if.else16, label %for.inc, !dbg !7660

if.else16:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.edge_def* %12, metadata !7628, metadata !DIExpression()), !dbg !7635
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i64 0, i32 1, !dbg !7661
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7661
  %cmp17 = icmp eq %struct.basic_block_def* %14, %target_bb, !dbg !7663
  br i1 %cmp17, label %for.inc, label %cleanup.loopexit1, !dbg !7664

for.inc:                                          ; preds = %if.else, %if.else16
  %jump_p.1 = phi i32 [ %jump_p.0, %if.else ], [ 1, %if.else16 ], !dbg !7635
  %fallthru_p.1 = phi i32 [ 1, %if.else ], [ %fallthru_p.0, %if.else16 ], !dbg !7635
  call void @llvm.dbg.value(metadata i32 %fallthru_p.1, metadata !7629, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %jump_p.1, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7634, metadata !DIExpression(DW_OP_deref)), !dbg !7635
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7651
  br label %for.cond, !dbg !7651, !llvm.loop !7665

for.end:                                          ; preds = %for.cond
  %jump_p.0.lcssa = phi i32 [ %jump_p.0, %for.cond ], !dbg !7650
  %fallthru_p.0.lcssa = phi i32 [ %fallthru_p.0, %for.cond ], !dbg !7635
  call void @llvm.dbg.value(metadata i32 %jump_p.0.lcssa, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %fallthru_p.0.lcssa, metadata !7629, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %jump_p.0.lcssa, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %fallthru_p.0.lcssa, metadata !7629, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %jump_p.0.lcssa, metadata !7630, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %fallthru_p.0.lcssa, metadata !7629, metadata !DIExpression()), !dbg !7635
  %and23 = and i32 %jump_p.0.lcssa, %fallthru_p.0.lcssa, !dbg !7667
  %cmp24 = icmp eq i32 %and23, 0, !dbg !7669
  br i1 %cmp24, label %cleanup, label %if.end26, !dbg !7670

if.end26:                                         ; preds = %for.end
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cur_bb, i64 0, i32 7, !dbg !7671
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7671
  %15 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7671
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 1, !dbg !7671
  %16 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7671
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !7632, metadata !DIExpression()), !dbg !7635
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %15, i64 0, i32 0, !dbg !7672
  br label %while.cond, !dbg !7673

while.cond:                                       ; preds = %if.end71, %if.end26
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end26 ], [ %rt_rtx75, %if.end71 ]
  %n_insns.0 = phi i32 [ 0, %if.end26 ], [ %n_insns.1, %if.end71 ], !dbg !7674
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %n_insns.0, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7631, metadata !DIExpression()), !dbg !7635
  %cmp29 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7675
  br i1 %cmp29, label %cleanup.loopexit, label %while.body, !dbg !7673

while.body:                                       ; preds = %while.cond
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7676
  %bf.load = load i32, i32* %17, align 8, !dbg !7676
  %bf.clear = and i32 %bf.load, 65535, !dbg !7676
  %cmp30 = icmp eq i32 %bf.clear, 10, !dbg !7676
  br i1 %cmp30, label %cleanup.loopexit, label %if.end32, !dbg !7679

if.end32:                                         ; preds = %while.body
  %cmp35 = icmp eq i32 %bf.clear, 8, !dbg !7680
  br i1 %cmp35, label %land.lhs.true, label %lor.lhs.false36, !dbg !7680

lor.lhs.false36:                                  ; preds = %if.end32
  %cmp39 = icmp eq i32 %bf.clear, 7, !dbg !7680
  br i1 %cmp39, label %land.lhs.true, label %lor.lhs.false40, !dbg !7680

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %cmp43 = icmp eq i32 %bf.clear, 9, !dbg !7680
  br i1 %cmp43, label %land.lhs.true, label %lor.lhs.false44, !dbg !7680

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  br i1 false, label %lor.lhs.false44.land.lhs.true_crit_edge, label %if.end68, !dbg !7682

lor.lhs.false44.land.lhs.true_crit_edge:          ; preds = %lor.lhs.false44
  br label %land.lhs.true, !dbg !7682

land.lhs.true:                                    ; preds = %lor.lhs.false44.land.lhs.true_crit_edge, %lor.lhs.false40, %lor.lhs.false36, %if.end32
  %cmp50 = icmp eq i32 %bf.clear, 9, !dbg !7683
  br i1 %cmp50, label %if.end68, label %land.lhs.true51, !dbg !7684

land.lhs.true51:                                  ; preds = %land.lhs.true
  %cmp54 = icmp eq i32 %bf.clear, 7, !dbg !7685
  br i1 %cmp54, label %if.end68, label %land.lhs.true55, !dbg !7686

land.lhs.true55:                                  ; preds = %land.lhs.true51
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !7687
  %18 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !7687
  %19 = bitcast %union.rtunion_def* %18 to i32**, !dbg !7687
  %20 = load i32*, i32** %19, align 8, !dbg !7687
  %bf.load56 = load i32, i32* %20, align 8, !dbg !7687
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7687
  %cmp58 = icmp eq i32 %bf.clear57, 24, !dbg !7688
  br i1 %cmp58, label %if.end68, label %land.lhs.true59, !dbg !7689

land.lhs.true59:                                  ; preds = %land.lhs.true55
  %cmp66 = icmp ne i32 %bf.clear57, 25, !dbg !7690
  %inc = zext i1 %cmp66 to i32, !dbg !7691
  %spec.select = add nsw i32 %n_insns.0, %inc, !dbg !7691
  br label %if.end68, !dbg !7691

if.end68:                                         ; preds = %land.lhs.true55, %land.lhs.true59, %land.lhs.true51, %land.lhs.true, %lor.lhs.false44
  %n_insns.1 = phi i32 [ %n_insns.0, %land.lhs.true ], [ %n_insns.0, %land.lhs.true51 ], [ %n_insns.0, %land.lhs.true55 ], [ %n_insns.0, %lor.lhs.false44 ], [ %spec.select, %land.lhs.true59 ], !dbg !7635
  call void @llvm.dbg.value(metadata i32 %n_insns.1, metadata !7633, metadata !DIExpression()), !dbg !7635
  %cmp69 = icmp eq %struct.rtx_def* %insn.0, %16, !dbg !7692
  br i1 %cmp69, label %cleanup.loopexit, label %if.end71, !dbg !7694

if.end71:                                         ; preds = %if.end68
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7695
  %rt_rtx75 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !7695
  br label %while.cond, !dbg !7673, !llvm.loop !7696

cleanup.loopexit:                                 ; preds = %while.body, %if.end68, %while.cond
  %retval.0.ph = phi i32 [ %n_insns.1, %if.end68 ], [ %n_insns.0, %while.cond ], [ -1, %while.body ]
  br label %cleanup, !dbg !7698

cleanup.loopexit1:                                ; preds = %if.else16, %for.body
  br label %cleanup, !dbg !7698

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %for.end, %cond.end, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ 0, %cond.end ], [ -1, %for.end ], [ %retval.0.ph, %cleanup.loopexit ], [ -1, %cleanup.loopexit1 ], !dbg !7635
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7698
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7698
  ret i32 %retval.0, !dbg !7698
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !7699 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !7703, metadata !DIExpression()), !dbg !7705
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !7706
  store i32 0, i32* %index, align 8, !dbg !7707
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !7708
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !7709
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !7710
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !7710
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !7710
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !7711 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !7717, metadata !DIExpression()), !dbg !7718
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !7719
  %tobool = icmp eq i8 %call, 0, !dbg !7719
  br i1 %tobool, label %if.then, label %if.else, !dbg !7721

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !7722
  br label %return, !dbg !7724

if.else:                                          ; preds = %entry
  br label %return, !dbg !7725

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !7727
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !7727
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !7727
  ret i8 %retval.0, !dbg !7728
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !7729 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !7734, metadata !DIExpression()), !dbg !7735
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !7736
  %0 = load i32, i32* %index, align 8, !dbg !7736
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !7736
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7736
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !7736
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7736
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7736

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !7736
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !7736
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !7736
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7736
  br label %cond.end, !dbg !7736

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7736
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7736
  %cmp = icmp ult i32 %0, %call2, !dbg !7736
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !7736

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7736
  br label %cond.end5, !dbg !7736

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !7737
  %inc = add i32 %5, 1, !dbg !7737
  store i32 %inc, i32* %index, align 8, !dbg !7737
  ret void, !dbg !7738
}

declare dso_local zeroext i8 @tablejump_p(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def**) local_unnamed_addr #1

declare dso_local i32 @simplejump_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cond_exec_process_if_block(%struct.ce_if_block* %ce_info, i32 %do_multiple_p) unnamed_addr #4 !dbg !7739 {
entry:
  call void @llvm.dbg.value(metadata %struct.ce_if_block* %ce_info, metadata !7744, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %do_multiple_p, metadata !7745, metadata !DIExpression()), !dbg !7773
  %test_bb1 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 0, !dbg !7774
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb1, align 8, !dbg !7774
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !7746, metadata !DIExpression()), !dbg !7773
  %then_bb2 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 1, !dbg !7775
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %then_bb2, align 8, !dbg !7775
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !7747, metadata !DIExpression()), !dbg !7773
  %else_bb3 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 2, !dbg !7776
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %else_bb3, align 8, !dbg !7776
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !7748, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7752, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7753, metadata !DIExpression()), !dbg !7773
  %tobool = icmp eq i32 %do_multiple_p, 0, !dbg !7777
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !7779

land.lhs.true:                                    ; preds = %entry
  %num_multiple_test_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !7780
  %3 = load i32, i32* %num_multiple_test_blocks, align 8, !dbg !7780
  %tobool4 = icmp eq i32 %3, 0, !dbg !7781
  br i1 %tobool4, label %if.end10, label %if.then, !dbg !7782

if.then:                                          ; preds = %land.lhs.true
  %tobool5 = icmp eq %struct.basic_block_def* %2, null, !dbg !7783
  br i1 %tobool5, label %lor.lhs.false, label %cleanup171, !dbg !7786

lor.lhs.false:                                    ; preds = %if.then
  %and_and_p = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !7787
  %4 = load i32, i32* %and_and_p, align 8, !dbg !7787
  %tobool6 = icmp eq i32 %4, 0, !dbg !7788
  br i1 %tobool6, label %cleanup171, label %if.end, !dbg !7789

if.end:                                           ; preds = %lor.lhs.false
  %last_test_bb = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 4, !dbg !7790
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %last_test_bb, align 8, !dbg !7790
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !7746, metadata !DIExpression()), !dbg !7773
  store %struct.basic_block_def* %5, %struct.basic_block_def** %test_bb1, align 8, !dbg !7791
  store i32 0, i32* %num_multiple_test_blocks, align 8, !dbg !7792
  %num_and_and_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 6, !dbg !7793
  store i32 0, i32* %num_and_and_blocks, align 4, !dbg !7794
  %num_or_or_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 7, !dbg !7795
  store i32 0, i32* %num_or_or_blocks, align 8, !dbg !7796
  br label %if.end10, !dbg !7797

if.end10:                                         ; preds = %land.lhs.true, %entry, %if.end
  %test_bb.0 = phi %struct.basic_block_def* [ %0, %entry ], [ %5, %if.end ], [ %0, %land.lhs.true ], !dbg !7773
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb.0, metadata !7746, metadata !DIExpression()), !dbg !7773
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb.0, i64 0, i32 7, !dbg !7798
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7798
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7798
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !7798
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7798
  %call = tail call fastcc %struct.rtx_def* @cond_exec_get_condition(%struct.rtx_def* %7) #7, !dbg !7799
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7749, metadata !DIExpression()), !dbg !7773
  %tobool11 = icmp eq %struct.rtx_def* %call, null, !dbg !7800
  br i1 %tobool11, label %cleanup171, label %if.end13, !dbg !7802

if.end13:                                         ; preds = %if.end10
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7803
  %end_16 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !7803
  %9 = load %struct.rtx_def*, %struct.rtx_def** %end_16, align 8, !dbg !7803
  %call17 = tail call i32 @onlyjump_p(%struct.rtx_def* %9) #6, !dbg !7805
  %tobool18 = icmp eq i32 %call17, 0, !dbg !7805
  br i1 %tobool18, label %cleanup171, label %if.end20, !dbg !7806

if.end20:                                         ; preds = %if.end13
  %call21 = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %1) #7, !dbg !7807
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call21, metadata !7750, metadata !DIExpression()), !dbg !7773
  %call22 = tail call fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* %1, i32 1) #7, !dbg !7808
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call22, metadata !7751, metadata !DIExpression()), !dbg !7773
  %call23 = tail call fastcc i32 @count_bb_insns(%struct.basic_block_def* %1) #7, !dbg !7809
  %num_then_insns = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 10, !dbg !7810
  store i32 %call23, i32* %num_then_insns, align 4, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %call23, metadata !7760, metadata !DIExpression()), !dbg !7773
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7812
  %call24 = tail call zeroext i8 @optimize_function_for_speed_p(%struct.function* %10) #6, !dbg !7812
  %tobool25 = icmp eq i8 %call24, 0, !dbg !7812
  %11 = load i32, i32* @ix86_branch_cost, align 4, !dbg !7812
  %.op = add i32 %11, 1, !dbg !7812
  %add = select i1 %tobool25, i32 3, i32 %.op, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %add, metadata !7754, metadata !DIExpression()), !dbg !7773
  %tobool26 = icmp eq %struct.basic_block_def* %2, null, !dbg !7813
  br i1 %tobool26, label %if.end32, label %if.then27, !dbg !7815

if.then27:                                        ; preds = %if.end20
  %mul = shl nsw i32 %add, 1, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7754, metadata !DIExpression()), !dbg !7773
  %call28 = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* nonnull %2) #7, !dbg !7818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call28, metadata !7752, metadata !DIExpression()), !dbg !7773
  %call29 = tail call fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* nonnull %2, i32 1) #7, !dbg !7819
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call29, metadata !7753, metadata !DIExpression()), !dbg !7773
  %call30 = tail call fastcc i32 @count_bb_insns(%struct.basic_block_def* nonnull %2) #7, !dbg !7820
  %num_else_insns = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 11, !dbg !7821
  store i32 %call30, i32* %num_else_insns, align 8, !dbg !7822
  %add31 = add nsw i32 %call23, %call30, !dbg !7823
  call void @llvm.dbg.value(metadata i32 %add31, metadata !7760, metadata !DIExpression()), !dbg !7773
  br label %if.end32, !dbg !7824

if.end32:                                         ; preds = %if.end20, %if.then27
  %max.0 = phi i32 [ %mul, %if.then27 ], [ %add, %if.end20 ], !dbg !7773
  %else_end.0 = phi %struct.rtx_def* [ %call29, %if.then27 ], [ null, %if.end20 ], !dbg !7773
  %else_start.0 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ null, %if.end20 ], !dbg !7773
  %n_insns.0 = phi i32 [ %add31, %if.then27 ], [ %call23, %if.end20 ], !dbg !7773
  call void @llvm.dbg.value(metadata i32 %n_insns.0, metadata !7760, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %else_start.0, metadata !7752, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %else_end.0, metadata !7753, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata i32 %max.0, metadata !7754, metadata !DIExpression()), !dbg !7773
  %cmp = icmp sgt i32 %n_insns.0, %max.0, !dbg !7825
  br i1 %cmp, label %cleanup171, label %if.end34, !dbg !7827

if.end34:                                         ; preds = %if.end32
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !7756, metadata !DIExpression()), !dbg !7773
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7828
  %end_37 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !7828
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_37, align 8, !dbg !7828
  %call38 = tail call i32 @reversed_comparison_code(%struct.rtx_def* nonnull %call, %struct.rtx_def* %13) #6, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %call38, metadata !7761, metadata !DIExpression()), !dbg !7773
  %cmp39 = icmp eq i32 %call38, 0, !dbg !7830
  br i1 %cmp39, label %if.end46, label %if.then40, !dbg !7832

if.then40:                                        ; preds = %if.end34
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !7833
  %bf.load = load i32, i32* %14, align 8, !dbg !7833
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7833
  %bf.clear = and i32 %bf.lshr, 255, !dbg !7833
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7833
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7833
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7833
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7833
  %rt_rtx44 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !7833
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !7833
  %call45 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call38, i32 %bf.clear, %struct.rtx_def* %15, %struct.rtx_def* %17) #6, !dbg !7833
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call45, metadata !7757, metadata !DIExpression()), !dbg !7773
  br label %if.end46, !dbg !7834

if.end46:                                         ; preds = %if.end34, %if.then40
  %false_expr.0 = phi %struct.rtx_def* [ %call45, %if.then40 ], [ null, %if.end34 ], !dbg !7835
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.0, metadata !7757, metadata !DIExpression()), !dbg !7773
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7836
  %end_49 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i64 0, i32 1, !dbg !7836
  %19 = load %struct.rtx_def*, %struct.rtx_def** %end_49, align 8, !dbg !7836
  %call50 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %19, i32 13, %struct.rtx_def* null) #6, !dbg !7837
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call50, metadata !7758, metadata !DIExpression()), !dbg !7773
  %tobool51 = icmp eq %struct.rtx_def* %call50, null, !dbg !7838
  br i1 %tobool51, label %if.end61, label %if.then52, !dbg !7840

if.then52:                                        ; preds = %if.end46
  %arrayidx55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call50, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7841
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !7841
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !7841
  call void @llvm.dbg.value(metadata %struct.rtx_def* %20, metadata !7758, metadata !DIExpression()), !dbg !7773
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i64 0, i32 1, !dbg !7843
  %arrayidx58 = bitcast %union.u* %u57 to i64*, !dbg !7843
  %21 = load i64, i64* %arrayidx58, align 8, !dbg !7843
  %sub = sub nsw i64 10000, %21, !dbg !7843
  %call59 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !7843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call59, metadata !7759, metadata !DIExpression()), !dbg !7773
  br label %if.end61, !dbg !7844

if.end61:                                         ; preds = %if.end46, %if.then52
  %true_prob_val.0 = phi %struct.rtx_def* [ %20, %if.then52 ], [ null, %if.end46 ], !dbg !7773
  %false_prob_val.0 = phi %struct.rtx_def* [ %call59, %if.then52 ], [ null, %if.end46 ], !dbg !7845
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_prob_val.0, metadata !7759, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_prob_val.0, metadata !7758, metadata !DIExpression()), !dbg !7773
  %num_multiple_test_blocks62 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !7846
  %22 = load i32, i32* %num_multiple_test_blocks62, align 8, !dbg !7846
  %cmp63 = icmp sgt i32 %22, 0, !dbg !7847
  br i1 %cmp63, label %if.then64, label %if.end142, !dbg !7848

if.then64:                                        ; preds = %if.end61
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb.0, metadata !7762, metadata !DIExpression()), !dbg !7849
  %last_test_bb66 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 4, !dbg !7850
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %last_test_bb66, align 8, !dbg !7850
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %23, metadata !7765, metadata !DIExpression()), !dbg !7849
  %tobool67 = icmp eq %struct.rtx_def* %false_expr.0, null, !dbg !7851
  br i1 %tobool67, label %cleanup138, label %do.body.preheader, !dbg !7853

do.body.preheader:                                ; preds = %if.then64
  %and_and_p112 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 9, !dbg !7854
  br label %do.body, !dbg !7856

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %true_expr.0 = phi %struct.rtx_def* [ %true_expr.1, %do.cond ], [ %call, %do.body.preheader ], !dbg !7857
  %false_expr.1 = phi %struct.rtx_def* [ %false_expr.2, %do.cond ], [ %false_expr.0, %do.body.preheader ], !dbg !7858
  %bb.0 = phi %struct.basic_block_def* [ %call70, %do.cond ], [ %test_bb.0, %do.body.preheader ], !dbg !7849
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7762, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.1, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.0, metadata !7756, metadata !DIExpression()), !dbg !7773
  %call70 = tail call fastcc %struct.basic_block_def* @block_fallthru(%struct.basic_block_def* %bb.0) #7, !dbg !7859
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call70, metadata !7762, metadata !DIExpression()), !dbg !7849
  %call71 = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %call70) #7, !dbg !7860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call71, metadata !7766, metadata !DIExpression()), !dbg !7861
  %call72 = tail call fastcc %struct.rtx_def* @last_active_insn(%struct.basic_block_def* %call70, i32 1) #7, !dbg !7862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call72, metadata !7768, metadata !DIExpression()), !dbg !7861
  %tobool73 = icmp eq %struct.rtx_def* %call71, null, !dbg !7863
  br i1 %tobool73, label %if.end78, label %land.lhs.true74, !dbg !7865

land.lhs.true74:                                  ; preds = %do.body
  %call75 = tail call fastcc i32 @cond_exec_process_insns(%struct.ce_if_block* %ce_info, %struct.rtx_def* nonnull %call71, %struct.rtx_def* %call72, %struct.rtx_def* %false_expr.1, %struct.rtx_def* %false_prob_val.0, i32 0) #7, !dbg !7866
  %tobool76 = icmp eq i32 %call75, 0, !dbg !7866
  br i1 %tobool76, label %cleanup, label %if.end78, !dbg !7867

if.end78:                                         ; preds = %land.lhs.true74, %do.body
  %il79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call70, i64 0, i32 7, !dbg !7868
  %rtl80 = bitcast %union.basic_block_il_dependent* %il79 to %struct.rtl_bb_info**, !dbg !7868
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl80, align 8, !dbg !7868
  %end_81 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !7868
  %25 = load %struct.rtx_def*, %struct.rtx_def** %end_81, align 8, !dbg !7868
  %call82 = tail call i32 @onlyjump_p(%struct.rtx_def* %25) #6, !dbg !7870
  %tobool83 = icmp eq i32 %call82, 0, !dbg !7870
  br i1 %tobool83, label %cleanup, label %if.end85, !dbg !7871

if.end85:                                         ; preds = %if.end78
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl80, align 8, !dbg !7872
  %end_88 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i64 0, i32 1, !dbg !7872
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_88, align 8, !dbg !7872
  %call89 = tail call fastcc %struct.rtx_def* @cond_exec_get_condition(%struct.rtx_def* %27) #7, !dbg !7873
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call89, metadata !7769, metadata !DIExpression()), !dbg !7861
  %tobool90 = icmp eq %struct.rtx_def* %call89, null, !dbg !7874
  br i1 %tobool90, label %cleanup, label %if.end92, !dbg !7876

if.end92:                                         ; preds = %if.end85
  %28 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl80, align 8, !dbg !7877
  %end_95 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %28, i64 0, i32 1, !dbg !7877
  %29 = load %struct.rtx_def*, %struct.rtx_def** %end_95, align 8, !dbg !7877
  %call96 = tail call i32 @reversed_comparison_code(%struct.rtx_def* nonnull %call89, %struct.rtx_def* %29) #6, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %call96, metadata !7771, metadata !DIExpression()), !dbg !7861
  %cmp97 = icmp eq i32 %call96, 0, !dbg !7879
  br i1 %cmp97, label %cleanup, label %if.end99, !dbg !7881

if.end99:                                         ; preds = %if.end92
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call89, i64 0, i32 0, !dbg !7882
  %bf.load100 = load i32, i32* %30, align 8, !dbg !7882
  %bf.lshr101 = lshr i32 %bf.load100, 16, !dbg !7882
  %bf.clear102 = and i32 %bf.lshr101, 255, !dbg !7882
  %arrayidx105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call89, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7882
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !7882
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !7882
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call89, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7882
  %rt_rtx110 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !7882
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !7882
  %call111 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call96, i32 %bf.clear102, %struct.rtx_def* %31, %struct.rtx_def* %33) #6, !dbg !7882
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call111, metadata !7770, metadata !DIExpression()), !dbg !7861
  %34 = load i32, i32* %and_and_p112, align 8, !dbg !7883
  %tobool113 = icmp eq i32 %34, 0, !dbg !7884
  %bf.load115 = load i32, i32* %30, align 8, !dbg !7854
  %bf.lshr116 = lshr i32 %bf.load115, 16, !dbg !7854
  %bf.clear117 = and i32 %bf.lshr116, 255, !dbg !7854
  br i1 %tobool113, label %if.else123, label %if.then114, !dbg !7885

if.then114:                                       ; preds = %if.end99
  %call118 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %bf.clear117, %struct.rtx_def* %true_expr.0, %struct.rtx_def* nonnull %call89) #6, !dbg !7886
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !7769, metadata !DIExpression()), !dbg !7861
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call118, i64 0, i32 0, !dbg !7888
  %bf.load119 = load i32, i32* %35, align 8, !dbg !7888
  %bf.lshr120 = lshr i32 %bf.load119, 16, !dbg !7888
  %bf.clear121 = and i32 %bf.lshr120, 255, !dbg !7888
  %call122 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 62, i32 %bf.clear121, %struct.rtx_def* %false_expr.1, %struct.rtx_def* %call111) #6, !dbg !7888
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call122, metadata !7770, metadata !DIExpression()), !dbg !7861
  br label %cleanup, !dbg !7889

if.else123:                                       ; preds = %if.end99
  %call127 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 62, i32 %bf.clear117, %struct.rtx_def* %true_expr.0, %struct.rtx_def* nonnull %call89) #6, !dbg !7890
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call127, metadata !7769, metadata !DIExpression()), !dbg !7861
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call127, i64 0, i32 0, !dbg !7892
  %bf.load128 = load i32, i32* %36, align 8, !dbg !7892
  %bf.lshr129 = lshr i32 %bf.load128, 16, !dbg !7892
  %bf.clear130 = and i32 %bf.lshr129, 255, !dbg !7892
  %call131 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %bf.clear130, %struct.rtx_def* %false_expr.1, %struct.rtx_def* %call111) #6, !dbg !7892
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call131, metadata !7770, metadata !DIExpression()), !dbg !7861
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true74, %if.end85, %if.end78, %if.then114, %if.else123, %if.end92
  %true_expr.1 = phi %struct.rtx_def* [ %true_expr.0, %land.lhs.true74 ], [ %true_expr.0, %if.end78 ], [ %true_expr.0, %if.end85 ], [ %true_expr.0, %if.end92 ], [ %call118, %if.then114 ], [ %call127, %if.else123 ], !dbg !7773
  %false_expr.2 = phi %struct.rtx_def* [ %false_expr.1, %land.lhs.true74 ], [ %false_expr.1, %if.end78 ], [ %false_expr.1, %if.end85 ], [ %false_expr.1, %if.end92 ], [ %call122, %if.then114 ], [ %call131, %if.else123 ], !dbg !7773
  %cleanup.dest.slot.0 = phi i32 [ 2, %land.lhs.true74 ], [ 2, %if.end78 ], [ 2, %if.end85 ], [ 2, %if.end92 ], [ 0, %if.then114 ], [ 0, %if.else123 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1, metadata !7756, metadata !DIExpression()), !dbg !7773
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %do.cond, label %cleanup138.loopexit

do.cond:                                          ; preds = %cleanup
  %cmp137 = icmp eq %struct.basic_block_def* %call70, %23, !dbg !7893
  br i1 %cmp137, label %cleanup138.loopexit, label %do.body, !dbg !7894, !llvm.loop !7895

cleanup138.loopexit:                              ; preds = %cleanup, %do.cond
  %true_expr.1.lcssa = phi %struct.rtx_def* [ %true_expr.1, %cleanup ], [ %true_expr.1, %do.cond ], !dbg !7773
  %false_expr.2.lcssa = phi %struct.rtx_def* [ %false_expr.2, %cleanup ], [ %false_expr.2, %do.cond ], !dbg !7773
  %cleanup.dest.slot.1.ph = phi i32 [ 0, %do.cond ], [ %cleanup.dest.slot.0, %cleanup ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.1.lcssa, metadata !7756, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.2.lcssa, metadata !7757, metadata !DIExpression()), !dbg !7773
  br label %cleanup138

cleanup138:                                       ; preds = %cleanup138.loopexit, %if.then64
  %true_expr.2 = phi %struct.rtx_def* [ %call, %if.then64 ], [ %true_expr.1.lcssa, %cleanup138.loopexit ], !dbg !7857
  %false_expr.3 = phi %struct.rtx_def* [ null, %if.then64 ], [ %false_expr.2.lcssa, %cleanup138.loopexit ], !dbg !7858
  %cleanup.dest.slot.1 = phi i32 [ 2, %if.then64 ], [ %cleanup.dest.slot.1.ph, %cleanup138.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.3, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.2, metadata !7756, metadata !DIExpression()), !dbg !7773
  switch i32 %cleanup.dest.slot.1, label %cleanup171 [
    i32 0, label %if.end142
    i32 2, label %fail
  ]

if.end142:                                        ; preds = %cleanup138, %if.end61
  %true_expr.3 = phi %struct.rtx_def* [ %call, %if.end61 ], [ %true_expr.2, %cleanup138 ], !dbg !7857
  %false_expr.4 = phi %struct.rtx_def* [ %false_expr.0, %if.end61 ], [ %false_expr.3, %cleanup138 ], !dbg !7858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %false_expr.4, metadata !7757, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.value(metadata %struct.rtx_def* %true_expr.3, metadata !7756, metadata !DIExpression()), !dbg !7773
  %conv = zext i1 %tobool26 to i32, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7755, metadata !DIExpression()), !dbg !7773
  %tobool144 = icmp eq %struct.rtx_def* %call22, null, !dbg !7898
  br i1 %tobool144, label %if.end151, label %land.lhs.true145, !dbg !7900

land.lhs.true145:                                 ; preds = %if.end142
  %tobool146 = icmp eq %struct.rtx_def* %false_expr.4, null, !dbg !7901
  br i1 %tobool146, label %fail, label %lor.lhs.false147, !dbg !7902

lor.lhs.false147:                                 ; preds = %land.lhs.true145
  %call148 = tail call fastcc i32 @cond_exec_process_insns(%struct.ce_if_block* %ce_info, %struct.rtx_def* %call21, %struct.rtx_def* nonnull %call22, %struct.rtx_def* nonnull %false_expr.4, %struct.rtx_def* %false_prob_val.0, i32 %conv) #7, !dbg !7903
  %tobool149 = icmp eq i32 %call148, 0, !dbg !7903
  br i1 %tobool149, label %fail, label %if.end151, !dbg !7904

if.end151:                                        ; preds = %lor.lhs.false147, %if.end142
  %tobool152 = icmp ne %struct.basic_block_def* %2, null, !dbg !7905
  %tobool154 = icmp ne %struct.rtx_def* %else_end.0, null, !dbg !7907
  %or.cond = and i1 %tobool152, %tobool154, !dbg !7908
  br i1 %or.cond, label %land.lhs.true155, label %if.end159, !dbg !7908

land.lhs.true155:                                 ; preds = %if.end151
  %call156 = tail call fastcc i32 @cond_exec_process_insns(%struct.ce_if_block* %ce_info, %struct.rtx_def* %else_start.0, %struct.rtx_def* nonnull %else_end.0, %struct.rtx_def* %true_expr.3, %struct.rtx_def* %true_prob_val.0, i32 1) #7, !dbg !7909
  %tobool157 = icmp eq i32 %call156, 0, !dbg !7909
  br i1 %tobool157, label %fail, label %if.end159, !dbg !7910

if.end159:                                        ; preds = %land.lhs.true155, %if.end151
  %call160 = tail call i32 @apply_change_group() #6, !dbg !7911
  %tobool161 = icmp eq i32 %call160, 0, !dbg !7911
  br i1 %tobool161, label %cleanup171, label %if.end163, !dbg !7913

if.end163:                                        ; preds = %if.end159
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7914
  %tobool164 = icmp eq %struct._IO_FILE* %37, null, !dbg !7914
  br i1 %tobool164, label %if.end170, label %if.then165, !dbg !7916

if.then165:                                       ; preds = %if.end163
  %cmp166 = icmp eq i32 %n_insns.0, 1, !dbg !7917
  %cond168 = select i1 %cmp166, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), !dbg !7918
  %call169 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %37, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.24, i64 0, i64 0), i32 %n_insns.0, i8* %cond168) #6, !dbg !7919
  br label %if.end170, !dbg !7919

if.end170:                                        ; preds = %if.end163, %if.then165
  tail call fastcc void @merge_if_block(%struct.ce_if_block* %ce_info) #7, !dbg !7920
  store i1 true, i1* @cond_exec_changed_p, align 4, !dbg !7921
  br label %cleanup171, !dbg !7922

fail:                                             ; preds = %lor.lhs.false147, %land.lhs.true145, %land.lhs.true155, %cleanup138
  call void @llvm.dbg.label(metadata !7772), !dbg !7923
  tail call void @cancel_changes(i32 0) #6, !dbg !7924
  br label %cleanup171, !dbg !7925

cleanup171:                                       ; preds = %lor.lhs.false, %if.then, %if.end159, %if.end13, %if.end10, %if.end32, %fail, %if.end170, %cleanup138
  %retval.0 = phi i32 [ undef, %cleanup138 ], [ 0, %fail ], [ 1, %if.end170 ], [ 0, %lor.lhs.false ], [ 0, %if.then ], [ 0, %if.end10 ], [ 0, %if.end13 ], [ 0, %if.end32 ], [ 0, %if.end159 ]
  ret i32 %retval.0, !dbg !7926
}

declare dso_local void @cancel_changes(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7927 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !7932
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7932
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7932

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !7932
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7932
  br label %cond.end, !dbg !7932

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7932
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !7932
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !7933
  %conv3 = zext i1 %cmp to i8, !dbg !7934
  ret i8 %conv3, !dbg !7935
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7936 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !7941
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !7941
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7941

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !7941
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !7941
  br label %cond.end, !dbg !7941

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7941
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !7941
  ret %struct.edge_def* %call2, !dbg !7942
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !7943 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !7948
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7948

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !7948
  br label %cond.end, !dbg !7948

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !7949
  ret %struct.VEC_edge_gc* %0, !dbg !7950
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @cond_exec_get_condition(%struct.rtx_def* %jump) unnamed_addr #4 !dbg !7951 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %jump, metadata !7955, metadata !DIExpression()), !dbg !7961
  %call = tail call i32 @any_condjump_p(%struct.rtx_def* %jump) #6, !dbg !7962
  %tobool = icmp eq i32 %call, 0, !dbg !7962
  br i1 %tobool, label %cleanup40, label %if.then, !dbg !7964

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @pc_set(%struct.rtx_def* %jump) #6, !dbg !7965
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7965
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7965
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7965
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7956, metadata !DIExpression()), !dbg !7961
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7966
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !7966
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !7966
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !7957, metadata !DIExpression()), !dbg !7961
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !7967
  %4 = bitcast %union.rtunion_def* %3 to i32**, !dbg !7967
  %5 = load i32*, i32** %4, align 8, !dbg !7967
  %bf.load = load i32, i32* %5, align 8, !dbg !7967
  %bf.clear = and i32 %bf.load, 65535, !dbg !7967
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !7968
  br i1 %cmp, label %land.lhs.true, label %if.end39, !dbg !7969

land.lhs.true:                                    ; preds = %if.then
  %arrayidx16 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !7970
  %rt_rtx17 = bitcast i32* %arrayidx16 to %struct.rtx_def**, !dbg !7970
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !7970
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %jump, i64 0, i32 1, !dbg !7971
  %arrayidx20 = getelementptr inbounds %union.u, %union.u* %u18, i64 1, i32 0, i32 1, !dbg !7971
  %rt_rtx21 = bitcast %struct.object_block** %arrayidx20 to %struct.rtx_def**, !dbg !7971
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !7971
  %cmp22 = icmp eq %struct.rtx_def* %6, %7, !dbg !7972
  br i1 %cmp22, label %if.then23, label %if.end39, !dbg !7973

if.then23:                                        ; preds = %land.lhs.true
  %call24 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %2, %struct.rtx_def* %jump) #6, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %call24, metadata !7958, metadata !DIExpression()), !dbg !7975
  %cmp25 = icmp eq i32 %call24, 0, !dbg !7976
  br i1 %cmp25, label %cleanup, label %if.end27, !dbg !7978

if.end27:                                         ; preds = %if.then23
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 0, !dbg !7979
  %bf.load28 = load i32, i32* %8, align 8, !dbg !7979
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !7979
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !7979
  %arrayidx32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7979
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !7979
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !7979
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7979
  %rt_rtx37 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !7979
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !7979
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call24, i32 %bf.clear29, %struct.rtx_def* %9, %struct.rtx_def* %11) #6, !dbg !7979
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call38, metadata !7957, metadata !DIExpression()), !dbg !7961
  br label %cleanup, !dbg !7980

cleanup:                                          ; preds = %if.then23, %if.end27
  %cond.0 = phi %struct.rtx_def* [ %call38, %if.end27 ], [ %2, %if.then23 ], !dbg !7961
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end27 ], [ false, %if.then23 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.0, metadata !7957, metadata !DIExpression()), !dbg !7961
  br i1 %cleanup.dest.slot.0, label %if.end39, label %cleanup40

if.end39:                                         ; preds = %cleanup, %land.lhs.true, %if.then
  %cond.1 = phi %struct.rtx_def* [ %2, %land.lhs.true ], [ %2, %if.then ], [ %cond.0, %cleanup ], !dbg !7981
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.1, metadata !7957, metadata !DIExpression()), !dbg !7961
  br label %cleanup40, !dbg !7982

cleanup40:                                        ; preds = %entry, %cleanup, %if.end39
  %retval.1 = phi %struct.rtx_def* [ null, %cleanup ], [ %cond.1, %if.end39 ], [ null, %entry ], !dbg !7961
  ret %struct.rtx_def* %retval.1, !dbg !7983
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @count_bb_insns(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !7984 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7988, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 0, metadata !7989, metadata !DIExpression()), !dbg !7991
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !7992
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7992
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7992
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !7992
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 1, !dbg !7993
  %1 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7993
  br label %while.cond, !dbg !7996

while.cond:                                       ; preds = %if.end8, %entry
  %count.0 = phi i32 [ 0, %entry ], [ %count.1, %if.end8 ], !dbg !7991
  %insn.0.in = phi %struct.rtx_def** [ %head_, %entry ], [ %rt_rtx, %if.end8 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7991
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7990, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !7989, metadata !DIExpression()), !dbg !7991
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7997
  %bf.load = load i32, i32* %2, align 8, !dbg !7997
  %bf.clear = and i32 %bf.load, 65535, !dbg !7997
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !7997
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7999

lor.lhs.false:                                    ; preds = %while.cond
  %cmp3 = icmp eq i32 %bf.clear, 8, !dbg !8000
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8001

if.then:                                          ; preds = %lor.lhs.false, %while.cond
  %inc = add nsw i32 %count.0, 1, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7989, metadata !DIExpression()), !dbg !7991
  br label %if.end, !dbg !8003

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %count.1 = phi i32 [ %inc, %if.then ], [ %count.0, %lor.lhs.false ], !dbg !7991
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !7989, metadata !DIExpression()), !dbg !7991
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !8004
  br i1 %cmp6, label %while.end, label %if.end8, !dbg !8005

if.end8:                                          ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8006
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8006
  br label %while.cond, !dbg !7996, !llvm.loop !8007

while.end:                                        ; preds = %if.end
  %count.1.lcssa = phi i32 [ %count.1, %if.end ], !dbg !7991
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !7989, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !7989, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 %count.1.lcssa, metadata !7989, metadata !DIExpression()), !dbg !7991
  ret i32 %count.1.lcssa, !dbg !8009
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_fallthru(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !8010 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8014, metadata !DIExpression()), !dbg !8017
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !8018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8018
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8019
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8019
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8020
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8020
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !8020
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !8020
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !8020
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !8020
  store i32 %4, i32* %3, align 8, !dbg !8020
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !8020
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !8020
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !8020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !8020
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !8020
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !8022
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !8022
  br label %for.cond, !dbg !8020

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !8024
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !8024
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !8015, metadata !DIExpression(DW_OP_deref)), !dbg !8017
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !8024
  %tobool = icmp eq i8 %call1, 0, !dbg !8020
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body, !dbg !8020

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %.pre = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8025
  br label %for.end, !dbg !8020

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8026
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !8015, metadata !DIExpression()), !dbg !8017
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !8028
  %12 = load i32, i32* %flags, align 8, !dbg !8028
  %and = and i32 %12, 1, !dbg !8029
  %tobool2 = icmp eq i32 %and, 0, !dbg !8029
  br i1 %tobool2, label %for.inc, label %for.end.loopexit, !dbg !8030

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !8016, metadata !DIExpression(DW_OP_deref)), !dbg !8017
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !8024
  br label %for.cond, !dbg !8024, !llvm.loop !8031

for.end.loopexit:                                 ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %11, %for.body ], !dbg !8026
  br label %for.end, !dbg !8033

for.end:                                          ; preds = %for.end.loopexit, %for.cond.for.end_crit_edge
  %13 = phi %struct.edge_def* [ %.pre, %for.cond.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !8025
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !8015, metadata !DIExpression()), !dbg !8017
  %tobool3 = icmp eq %struct.edge_def* %13, null, !dbg !8033
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !8033

cond.true:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.edge_def* %13, metadata !8015, metadata !DIExpression()), !dbg !8017
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i64 0, i32 1, !dbg !8034
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8034
  br label %cond.end, !dbg !8033

cond.end:                                         ; preds = %for.end, %cond.true
  %cond = phi %struct.basic_block_def* [ %14, %cond.true ], [ null, %for.end ], !dbg !8033
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !8035
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8035
  ret %struct.basic_block_def* %cond, !dbg !8036
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cond_exec_process_insns(%struct.ce_if_block* %ce_info, %struct.rtx_def* %start, %struct.rtx_def* %end, %struct.rtx_def* %test, %struct.rtx_def* %prob_val, i32 %mod_ok) unnamed_addr #4 !dbg !8037 {
entry:
  call void @llvm.dbg.value(metadata %struct.ce_if_block* %ce_info, metadata !8041, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start, metadata !8042, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !8043, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %test, metadata !8044, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prob_val, metadata !8045, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %mod_ok, metadata !8046, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8047, metadata !DIExpression()), !dbg !8055
  %tobool = icmp ne %struct.rtx_def* %start, null, !dbg !8056
  %tobool1 = icmp ne %struct.rtx_def* %end, null, !dbg !8058
  %or.cond = and i1 %tobool, %tobool1, !dbg !8059
  br i1 %or.cond, label %for.cond.preheader, label %cleanup, !dbg !8059

for.cond.preheader:                               ; preds = %entry
  %tobool26 = icmp eq i32 %mod_ok, 0, !dbg !8060
  %tobool74 = icmp ne %struct.rtx_def* %prob_val, null, !dbg !8064
  br i1 %tobool26, label %for.cond.preheader.split.us, label %for.cond.preheader.for.cond.preheader.split_crit_edge, !dbg !8066

for.cond.preheader.for.cond.preheader.split_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond, !dbg !8066

for.cond.preheader.split.us:                      ; preds = %for.cond.preheader
  br label %for.cond.us, !dbg !8066

for.cond.us:                                      ; preds = %for.inc.us, %for.cond.preheader.split.us
  %insn.0.us = phi %struct.rtx_def* [ %18, %for.inc.us ], [ %start, %for.cond.preheader.split.us ], !dbg !8067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0.us, metadata !8048, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8047, metadata !DIExpression()), !dbg !8055
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 0, !dbg !8068
  %bf.load.us = load i32, i32* %0, align 8, !dbg !8068
  %bf.clear.us = and i32 %bf.load.us, 65535, !dbg !8068
  %cmp.us = icmp eq i32 %bf.clear.us, 13, !dbg !8068
  br i1 %cmp.us, label %insn_done.us, label %lor.lhs.false2.us, !dbg !8070

lor.lhs.false2.us:                                ; preds = %for.cond.us
  %cmp5.us = icmp eq i32 %bf.clear.us, 7, !dbg !8071
  br i1 %cmp5.us, label %insn_done.us, label %if.end7.us, !dbg !8072

if.end7.us:                                       ; preds = %lor.lhs.false2.us
  %cmp10.us = icmp eq i32 %bf.clear.us, 8, !dbg !8073
  br i1 %cmp10.us, label %cond.end.us, label %lor.lhs.false11.us, !dbg !8073

lor.lhs.false11.us:                               ; preds = %if.end7.us
  %cmp14.us = icmp eq i32 %bf.clear.us, 10, !dbg !8073
  br i1 %cmp14.us, label %cond.end.us, label %cond.true.us, !dbg !8073

cond.true.us:                                     ; preds = %lor.lhs.false11.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !8073
  br label %cond.end.us, !dbg !8073

cond.end.us:                                      ; preds = %cond.true.us, %lor.lhs.false11.us, %if.end7.us
  %1 = load i32, i32* @reload_completed, align 4, !dbg !8074
  %tobool15.us = icmp eq i32 %1, 0, !dbg !8074
  br i1 %tobool15.us, label %if.end20.us, label %land.lhs.true.us, !dbg !8076

land.lhs.true.us:                                 ; preds = %cond.end.us
  %u.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, !dbg !8077
  %2 = getelementptr inbounds %union.u, %union.u* %u.us, i64 1, i32 0, i32 0, i64 0, !dbg !8077
  %3 = bitcast %union.rtunion_def* %2 to i32**, !dbg !8077
  %4 = load i32*, i32** %3, align 8, !dbg !8077
  %bf.load16.us = load i32, i32* %4, align 8, !dbg !8077
  %bf.clear17.us = and i32 %bf.load16.us, 65535, !dbg !8077
  %cmp18.us = icmp eq i32 %bf.clear17.us, 24, !dbg !8078
  br i1 %cmp18.us, label %if.then19.us, label %if.end20.us, !dbg !8079

if.then19.us:                                     ; preds = %land.lhs.true.us
  tail call void @set_insn_deleted(%struct.rtx_def* %insn.0.us) #6, !dbg !8080
  br label %insn_done.us, !dbg !8082

if.end20.us:                                      ; preds = %land.lhs.true.us, %cond.end.us
  br i1 true, label %if.end23.us, label %if.end20.us.cleanup.loopexit.us-lcssa.us_crit_edge, !dbg !8083

if.end20.us.cleanup.loopexit.us-lcssa.us_crit_edge: ; preds = %if.end20.us
  br label %cleanup.loopexit.us-lcssa.us, !dbg !8083

if.end23.us:                                      ; preds = %if.end20.us
  %call.us = tail call i32 @modified_in_p(%struct.rtx_def* %test, %struct.rtx_def* %insn.0.us) #6, !dbg !8084
  %tobool24.us = icmp eq i32 %call.us, 0, !dbg !8084
  br i1 %tobool24.us, label %if.end29.us, label %if.then25.us, !dbg !8085

if.then25.us:                                     ; preds = %if.end23.us
  br label %cleanup.loopexit.us-lcssa.us, !dbg !8086

if.end29.us:                                      ; preds = %if.end23.us
  call void @llvm.dbg.value(metadata i32 0, metadata !8047, metadata !DIExpression()), !dbg !8055
  %u30.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, !dbg !8087
  %5 = getelementptr inbounds %union.u, %union.u* %u30.us, i64 1, i32 0, i32 0, i64 0, !dbg !8087
  %rt_rtx33.us = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !8087
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33.us, align 8, !dbg !8087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !8050, metadata !DIExpression()), !dbg !8055
  %call34.us = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %test) #6, !dbg !8088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34.us, metadata !8049, metadata !DIExpression()), !dbg !8055
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 0, !dbg !8089
  %bf.load35.us = load i32, i32* %7, align 8, !dbg !8089
  %bf.clear36.us = and i32 %bf.load35.us, 65535, !dbg !8089
  %cmp37.us = icmp eq i32 %bf.clear36.us, 14, !dbg !8091
  br i1 %cmp37.us, label %if.then38.us, label %if.end63.us, !dbg !8092

if.then38.us:                                     ; preds = %if.end29.us
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call34.us, i64 0, i32 0, !dbg !8093
  %bf.load39.us = load i32, i32* %8, align 8, !dbg !8093
  %arrayidx43.us = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8096
  %9 = bitcast %union.rtunion_def* %arrayidx43.us to i32**, !dbg !8096
  %10 = load i32*, i32** %9, align 8, !dbg !8096
  %bf.load45.us = load i32, i32* %10, align 8, !dbg !8096
  %bf.lshr2.us = xor i32 %bf.load39.us, %bf.load45.us, !dbg !8097
  %11 = and i32 %bf.lshr2.us, 16711680, !dbg !8097
  %cmp48.us = icmp eq i32 %11, 0, !dbg !8097
  br i1 %cmp48.us, label %if.end50.us, label %cleanup.loopexit.us-lcssa.us.loopexit, !dbg !8098

if.end50.us:                                      ; preds = %if.then38.us
  %12 = bitcast i32* %10 to %struct.rtx_def*, !dbg !8098
  %bf.lshr52.us = lshr i32 %bf.load39.us, 16, !dbg !8099
  %bf.clear53.us = and i32 %bf.lshr52.us, 255, !dbg !8099
  %call58.us = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %bf.clear53.us, %struct.rtx_def* %call34.us, %struct.rtx_def* %12) #6, !dbg !8099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58.us, metadata !8049, metadata !DIExpression()), !dbg !8055
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8100
  %rt_rtx62.us = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !8100
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62.us, align 8, !dbg !8100
  call void @llvm.dbg.value(metadata %struct.rtx_def* %14, metadata !8050, metadata !DIExpression()), !dbg !8055
  br label %if.end63.us, !dbg !8101

if.end63.us:                                      ; preds = %if.end50.us, %if.end29.us
  %xtest.0.us = phi %struct.rtx_def* [ %call58.us, %if.end50.us ], [ %call34.us, %if.end29.us ], !dbg !8102
  %pattern.0.us = phi %struct.rtx_def* [ %14, %if.end50.us ], [ %6, %if.end29.us ], !dbg !8102
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern.0.us, metadata !8050, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xtest.0.us, metadata !8049, metadata !DIExpression()), !dbg !8055
  %call64.us = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 14, i32 0, %struct.rtx_def* %xtest.0.us, %struct.rtx_def* %pattern.0.us) #6, !dbg !8103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64.us, metadata !8050, metadata !DIExpression()), !dbg !8055
  %call69.us = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn.0.us, %struct.rtx_def** nonnull %rt_rtx33.us, %struct.rtx_def* %call64.us, i8 zeroext 1) #6, !dbg !8104
  %bf.load70.us = load i32, i32* %0, align 8, !dbg !8105
  %bf.clear71.us = and i32 %bf.load70.us, 65535, !dbg !8105
  %cmp72.us = icmp eq i32 %bf.clear71.us, 10, !dbg !8105
  %or.cond1.us = and i1 %cmp72.us, %tobool74, !dbg !8106
  br i1 %or.cond1.us, label %if.then75.us, label %insn_done.us, !dbg !8106

if.then75.us:                                     ; preds = %if.end63.us
  %15 = getelementptr inbounds %union.u, %union.u* %u30.us, i64 1, i32 0, i32 0, i64 2, !dbg !8107
  %rt_rtx79.us = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !8107
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79.us, align 8, !dbg !8108
  %call84.us = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 13, %struct.rtx_def* nonnull %prob_val, %struct.rtx_def* %16) #6, !dbg !8109
  %call85.us = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn.0.us, %struct.rtx_def** nonnull %rt_rtx79.us, %struct.rtx_def* %call84.us, i8 zeroext 1) #6, !dbg !8110
  br label %insn_done.us, !dbg !8110

insn_done.us:                                     ; preds = %if.then75.us, %if.end63.us, %if.then19.us, %lor.lhs.false2.us, %for.cond.us
  call void @llvm.dbg.label(metadata !8051), !dbg !8111
  %cmp87.us = icmp eq %struct.rtx_def* %insn.0.us, %end, !dbg !8112
  br i1 %cmp87.us, label %cleanup.loopexit.us-lcssa.us.loopexit, label %for.inc.us, !dbg !8114

for.inc.us:                                       ; preds = %insn_done.us
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0.us, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8115
  %rt_rtx93.us = bitcast %union.rtunion_def* %17 to %struct.rtx_def**, !dbg !8115
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93.us, align 8, !dbg !8115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %18, metadata !8048, metadata !DIExpression()), !dbg !8055
  br label %for.cond.us, !dbg !8116, !llvm.loop !8117

cleanup.loopexit.us-lcssa.us.loopexit:            ; preds = %if.then38.us, %insn_done.us
  %retval.0.ph.ph.us.ph = phi i32 [ 1, %insn_done.us ], [ 0, %if.then38.us ]
  br label %cleanup.loopexit.us-lcssa.us, !dbg !8119

cleanup.loopexit.us-lcssa.us:                     ; preds = %cleanup.loopexit.us-lcssa.us.loopexit, %if.end20.us.cleanup.loopexit.us-lcssa.us_crit_edge, %if.then25.us
  %retval.0.ph.ph.us = phi i32 [ undef, %if.end20.us.cleanup.loopexit.us-lcssa.us_crit_edge ], [ 0, %if.then25.us ], [ %retval.0.ph.ph.us.ph, %cleanup.loopexit.us-lcssa.us.loopexit ]
  br label %cleanup.loopexit, !dbg !8119

for.cond:                                         ; preds = %for.cond.preheader.for.cond.preheader.split_crit_edge, %for.inc
  %must_be_last.0 = phi i32 [ %must_be_last.2, %for.inc ], [ 0, %for.cond.preheader.for.cond.preheader.split_crit_edge ], !dbg !8120
  %insn.0 = phi %struct.rtx_def* [ %37, %for.inc ], [ %start, %for.cond.preheader.for.cond.preheader.split_crit_edge ], !dbg !8067
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8048, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %must_be_last.0, metadata !8047, metadata !DIExpression()), !dbg !8055
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8068
  %bf.load = load i32, i32* %19, align 8, !dbg !8068
  %bf.clear = and i32 %bf.load, 65535, !dbg !8068
  %cmp = icmp eq i32 %bf.clear, 13, !dbg !8068
  br i1 %cmp, label %insn_done, label %lor.lhs.false2, !dbg !8070

lor.lhs.false2:                                   ; preds = %for.cond
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !8071
  br i1 %cmp5, label %insn_done, label %if.end7, !dbg !8072

if.end7:                                          ; preds = %lor.lhs.false2
  %cmp10 = icmp eq i32 %bf.clear, 8, !dbg !8073
  br i1 %cmp10, label %cond.end, label %lor.lhs.false11, !dbg !8073

lor.lhs.false11:                                  ; preds = %if.end7
  %cmp14 = icmp eq i32 %bf.clear, 10, !dbg !8073
  br i1 %cmp14, label %cond.end, label %cond.true, !dbg !8073

cond.true:                                        ; preds = %lor.lhs.false11
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !8073
  br label %cond.end, !dbg !8073

cond.end:                                         ; preds = %if.end7, %lor.lhs.false11, %cond.true
  %20 = load i32, i32* @reload_completed, align 4, !dbg !8074
  %tobool15 = icmp eq i32 %20, 0, !dbg !8074
  br i1 %tobool15, label %if.end20, label %land.lhs.true, !dbg !8076

land.lhs.true:                                    ; preds = %cond.end
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !8077
  %21 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8077
  %22 = bitcast %union.rtunion_def* %21 to i32**, !dbg !8077
  %23 = load i32*, i32** %22, align 8, !dbg !8077
  %bf.load16 = load i32, i32* %23, align 8, !dbg !8077
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !8077
  %cmp18 = icmp eq i32 %bf.clear17, 24, !dbg !8078
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8079

if.then19:                                        ; preds = %land.lhs.true
  tail call void @set_insn_deleted(%struct.rtx_def* %insn.0) #6, !dbg !8080
  br label %insn_done, !dbg !8082

if.end20:                                         ; preds = %cond.end, %land.lhs.true
  %tobool21 = icmp eq i32 %must_be_last.0, 0, !dbg !8121
  br i1 %tobool21, label %if.end23, label %cleanup.loopexit.us-lcssa, !dbg !8083

if.end23:                                         ; preds = %if.end20
  %call = tail call i32 @modified_in_p(%struct.rtx_def* %test, %struct.rtx_def* %insn.0) #6, !dbg !8084
  %tobool24 = icmp eq i32 %call, 0, !dbg !8084
  br i1 %tobool24, label %if.end29, label %if.then25, !dbg !8085

if.then25:                                        ; preds = %if.end23
  br label %if.end29, !dbg !8086

if.end29:                                         ; preds = %if.then25, %if.end23
  %must_be_last.1 = phi i32 [ 0, %if.end23 ], [ 1, %if.then25 ], !dbg !8055
  call void @llvm.dbg.value(metadata i32 %must_be_last.1, metadata !8047, metadata !DIExpression()), !dbg !8055
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !8087
  %24 = getelementptr inbounds %union.u, %union.u* %u30, i64 1, i32 0, i32 0, i64 0, !dbg !8087
  %rt_rtx33 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !8087
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !8087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %25, metadata !8050, metadata !DIExpression()), !dbg !8055
  %call34 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %test) #6, !dbg !8088
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call34, metadata !8049, metadata !DIExpression()), !dbg !8055
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 0, !dbg !8089
  %bf.load35 = load i32, i32* %26, align 8, !dbg !8089
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !8089
  %cmp37 = icmp eq i32 %bf.clear36, 14, !dbg !8091
  br i1 %cmp37, label %if.then38, label %if.end63, !dbg !8092

if.then38:                                        ; preds = %if.end29
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call34, i64 0, i32 0, !dbg !8093
  %bf.load39 = load i32, i32* %27, align 8, !dbg !8093
  %arrayidx43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8096
  %28 = bitcast %union.rtunion_def* %arrayidx43 to i32**, !dbg !8096
  %29 = load i32*, i32** %28, align 8, !dbg !8096
  %bf.load45 = load i32, i32* %29, align 8, !dbg !8096
  %bf.lshr2 = xor i32 %bf.load39, %bf.load45, !dbg !8097
  %30 = and i32 %bf.lshr2, 16711680, !dbg !8097
  %cmp48 = icmp eq i32 %30, 0, !dbg !8097
  br i1 %cmp48, label %if.end50, label %cleanup.loopexit.us-lcssa, !dbg !8098

if.end50:                                         ; preds = %if.then38
  %31 = bitcast i32* %29 to %struct.rtx_def*, !dbg !8098
  %bf.lshr52 = lshr i32 %bf.load39, 16, !dbg !8099
  %bf.clear53 = and i32 %bf.lshr52, 255, !dbg !8099
  %call58 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 %bf.clear53, %struct.rtx_def* %call34, %struct.rtx_def* %31) #6, !dbg !8099
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call58, metadata !8049, metadata !DIExpression()), !dbg !8055
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8100
  %rt_rtx62 = bitcast %union.rtunion_def* %32 to %struct.rtx_def**, !dbg !8100
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !8100
  call void @llvm.dbg.value(metadata %struct.rtx_def* %33, metadata !8050, metadata !DIExpression()), !dbg !8055
  br label %if.end63, !dbg !8101

if.end63:                                         ; preds = %if.end50, %if.end29
  %xtest.0 = phi %struct.rtx_def* [ %call58, %if.end50 ], [ %call34, %if.end29 ], !dbg !8102
  %pattern.0 = phi %struct.rtx_def* [ %33, %if.end50 ], [ %25, %if.end29 ], !dbg !8102
  call void @llvm.dbg.value(metadata %struct.rtx_def* %pattern.0, metadata !8050, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.rtx_def* %xtest.0, metadata !8049, metadata !DIExpression()), !dbg !8055
  %call64 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 14, i32 0, %struct.rtx_def* %xtest.0, %struct.rtx_def* %pattern.0) #6, !dbg !8103
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !8050, metadata !DIExpression()), !dbg !8055
  %call69 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn.0, %struct.rtx_def** nonnull %rt_rtx33, %struct.rtx_def* %call64, i8 zeroext 1) #6, !dbg !8104
  %bf.load70 = load i32, i32* %19, align 8, !dbg !8105
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !8105
  %cmp72 = icmp eq i32 %bf.clear71, 10, !dbg !8105
  %or.cond1 = and i1 %cmp72, %tobool74, !dbg !8106
  br i1 %or.cond1, label %if.then75, label %insn_done, !dbg !8106

if.then75:                                        ; preds = %if.end63
  %34 = getelementptr inbounds %union.u, %union.u* %u30, i64 1, i32 0, i32 0, i64 2, !dbg !8107
  %rt_rtx79 = bitcast %union.rtunion_def* %34 to %struct.rtx_def**, !dbg !8107
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !8108
  %call84 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 13, %struct.rtx_def* nonnull %prob_val, %struct.rtx_def* %35) #6, !dbg !8109
  %call85 = tail call zeroext i8 @validate_change(%struct.rtx_def* %insn.0, %struct.rtx_def** nonnull %rt_rtx79, %struct.rtx_def* %call84, i8 zeroext 1) #6, !dbg !8110
  br label %insn_done, !dbg !8110

insn_done:                                        ; preds = %if.end63, %if.then75, %for.cond, %lor.lhs.false2, %if.then19
  %must_be_last.2 = phi i32 [ %must_be_last.0, %if.then19 ], [ %must_be_last.0, %lor.lhs.false2 ], [ %must_be_last.0, %for.cond ], [ %must_be_last.1, %if.then75 ], [ %must_be_last.1, %if.end63 ], !dbg !8055
  call void @llvm.dbg.value(metadata i32 %must_be_last.2, metadata !8047, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.label(metadata !8051), !dbg !8111
  %cmp87 = icmp eq %struct.rtx_def* %insn.0, %end, !dbg !8112
  br i1 %cmp87, label %cleanup.loopexit.us-lcssa, label %for.inc, !dbg !8114

for.inc:                                          ; preds = %insn_done
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8115
  %rt_rtx93 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !8115
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !8115
  call void @llvm.dbg.value(metadata %struct.rtx_def* %37, metadata !8048, metadata !DIExpression()), !dbg !8055
  br label %for.cond, !dbg !8116, !llvm.loop !8117

cleanup.loopexit.us-lcssa:                        ; preds = %if.then38, %if.end20, %insn_done
  %retval.0.ph.ph = phi i32 [ 0, %if.end20 ], [ 0, %if.then38 ], [ 1, %insn_done ]
  br label %cleanup.loopexit, !dbg !8119

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  %retval.0.ph = phi i32 [ %retval.0.ph.ph, %cleanup.loopexit.us-lcssa ], [ %retval.0.ph.ph.us, %cleanup.loopexit.us-lcssa.us ]
  br label %cleanup, !dbg !8119

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !8055
  ret i32 %retval.0, !dbg !8119
}

declare dso_local i32 @apply_change_group() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_if_block(%struct.ce_if_block* %ce_info) unnamed_addr #4 !dbg !8123 {
entry:
  call void @llvm.dbg.value(metadata %struct.ce_if_block* %ce_info, metadata !8127, metadata !DIExpression()), !dbg !8141
  %test_bb1 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 0, !dbg !8142
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %test_bb1, align 8, !dbg !8142
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8128, metadata !DIExpression()), !dbg !8141
  %then_bb2 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 1, !dbg !8143
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %then_bb2, align 8, !dbg !8143
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !8129, metadata !DIExpression()), !dbg !8141
  %else_bb3 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 2, !dbg !8144
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %else_bb3, align 8, !dbg !8144
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !8130, metadata !DIExpression()), !dbg !8141
  %join_bb4 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 3, !dbg !8145
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %join_bb4, align 8, !dbg !8145
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !8131, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8132, metadata !DIExpression()), !dbg !8141
  tail call void @df_set_bb_dirty(%struct.basic_block_def* %0) #6, !dbg !8146
  %num_multiple_test_blocks = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 5, !dbg !8147
  %4 = load i32, i32* %num_multiple_test_blocks, align 8, !dbg !8147
  %cmp = icmp sgt i32 %4, 0, !dbg !8148
  br i1 %cmp, label %if.then, label %if.end, !dbg !8149

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !8133, metadata !DIExpression()), !dbg !8150
  %last_test_bb5 = getelementptr inbounds %struct.ce_if_block, %struct.ce_if_block* %ce_info, i64 0, i32 4, !dbg !8151
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %last_test_bb5, align 8, !dbg !8151
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !8136, metadata !DIExpression()), !dbg !8150
  %call = tail call fastcc %struct.basic_block_def* @block_fallthru(%struct.basic_block_def* %0) #7, !dbg !8152
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8137, metadata !DIExpression()), !dbg !8150
  br label %do.body, !dbg !8153

do.body:                                          ; preds = %do.body, %if.then
  %fallthru.0 = phi %struct.basic_block_def* [ %call, %if.then ], [ %call6, %do.body ], !dbg !8150
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %fallthru.0, metadata !8137, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %fallthru.0, metadata !8133, metadata !DIExpression()), !dbg !8150
  %call6 = tail call fastcc %struct.basic_block_def* @block_fallthru(%struct.basic_block_def* %fallthru.0) #7, !dbg !8154
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call6, metadata !8137, metadata !DIExpression()), !dbg !8150
  tail call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* %fallthru.0) #6, !dbg !8156
  %6 = load i32, i32* @num_true_changes, align 4, !dbg !8157
  %inc = add nsw i32 %6, 1, !dbg !8157
  store i32 %inc, i32* @num_true_changes, align 4, !dbg !8157
  %cmp7 = icmp eq %struct.basic_block_def* %fallthru.0, %5, !dbg !8158
  br i1 %cmp7, label %if.end.loopexit, label %do.body, !dbg !8159, !llvm.loop !8160

if.end.loopexit:                                  ; preds = %do.body
  br label %if.end, !dbg !8162

if.end:                                           ; preds = %if.end.loopexit, %entry
  %tobool = icmp eq %struct.basic_block_def* %1, null, !dbg !8162
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !8164

if.then8:                                         ; preds = %if.end
  tail call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* nonnull %1) #6, !dbg !8165
  %7 = load i32, i32* @num_true_changes, align 4, !dbg !8167
  %inc9 = add nsw i32 %7, 1, !dbg !8167
  store i32 %inc9, i32* @num_true_changes, align 4, !dbg !8167
  br label %if.end10, !dbg !8168

if.end10:                                         ; preds = %if.end, %if.then8
  %tobool11 = icmp eq %struct.basic_block_def* %2, null, !dbg !8169
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !8171

if.then12:                                        ; preds = %if.end10
  tail call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* nonnull %2) #6, !dbg !8172
  %8 = load i32, i32* @num_true_changes, align 4, !dbg !8174
  %inc13 = add nsw i32 %8, 1, !dbg !8174
  store i32 %inc13, i32* @num_true_changes, align 4, !dbg !8174
  br label %if.end14, !dbg !8175

if.end14:                                         ; preds = %if.end10, %if.then12
  %tobool15 = icmp eq %struct.basic_block_def* %3, null, !dbg !8176
  br i1 %tobool15, label %if.then16, label %if.else83, !dbg !8177

if.then16:                                        ; preds = %if.end14
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 7, !dbg !8178
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8178
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8178
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !8178
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8178
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !8138, metadata !DIExpression()), !dbg !8179
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 1, !dbg !8180
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8180
  %tobool17 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !8180
  br i1 %tobool17, label %cond.end, label %cond.true, !dbg !8180

cond.true:                                        ; preds = %if.then16
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !8180
  br label %cond.end, !dbg !8180

cond.end:                                         ; preds = %if.then16, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.then16 ], !dbg !8180
  %call19 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8180
  %cmp20 = icmp eq i32 %call19, 0, !dbg !8182
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !8183

if.then21:                                        ; preds = %cond.end
  %call22 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %10, i32 27, %struct.rtx_def* null) #6, !dbg !8184
  %tobool23 = icmp eq %struct.rtx_def* %call22, null, !dbg !8184
  br i1 %tobool23, label %lor.lhs.false, label %if.end123, !dbg !8184

lor.lhs.false:                                    ; preds = %if.then21
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !8184
  %bf.load = load i32, i32* %12, align 8, !dbg !8184
  %bf.clear = and i32 %bf.load, 65535, !dbg !8184
  %cmp24 = icmp eq i32 %bf.clear, 8, !dbg !8184
  br i1 %cmp24, label %land.lhs.true, label %cond.true38, !dbg !8184

land.lhs.true:                                    ; preds = %lor.lhs.false
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !8184
  %13 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8184
  %14 = bitcast %union.rtunion_def* %13 to i32**, !dbg !8184
  %15 = load i32*, i32** %14, align 8, !dbg !8184
  %bf.load25 = load i32, i32* %15, align 8, !dbg !8184
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !8184
  %cmp27 = icmp eq i32 %bf.clear26, 29, !dbg !8184
  br i1 %cmp27, label %land.lhs.true28, label %cond.true38, !dbg !8184

land.lhs.true28:                                  ; preds = %land.lhs.true
  %arrayidx35 = getelementptr inbounds i32, i32* %15, i64 2, !dbg !8184
  %rt_rtx36 = bitcast i32* %arrayidx35 to %struct.rtx_def**, !dbg !8184
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !8184
  %17 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !8184
  %cmp37 = icmp eq %struct.rtx_def* %16, %17, !dbg !8184
  br i1 %cmp37, label %if.end123, label %cond.true38, !dbg !8184

cond.true38:                                      ; preds = %land.lhs.true28, %land.lhs.true, %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !8184
  br label %if.end123, !dbg !8184

if.else:                                          ; preds = %cond.end
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !8185
  %bf.load42 = load i32, i32* %18, align 8, !dbg !8185
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !8185
  %cmp44 = icmp eq i32 %bf.clear43, 9, !dbg !8185
  br i1 %cmp44, label %if.end123, label %lor.lhs.false45, !dbg !8185

lor.lhs.false45:                                  ; preds = %if.else
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8185
  %tobool47 = icmp eq %struct.VEC_edge_gc* %19, null, !dbg !8185
  br i1 %tobool47, label %cond.end52, label %cond.true48, !dbg !8185

cond.true48:                                      ; preds = %lor.lhs.false45
  %base50 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %19, i64 0, i32 0, !dbg !8185
  br label %cond.end52, !dbg !8185

cond.end52:                                       ; preds = %lor.lhs.false45, %cond.true48
  %cond53 = phi %struct.VEC_edge_base* [ %base50, %cond.true48 ], [ null, %lor.lhs.false45 ], !dbg !8185
  %call54 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond53, i32 0) #7, !dbg !8185
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call54, i64 0, i32 1, !dbg !8185
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8185
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8185
  %cfg = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, i32 1, !dbg !8185
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8185
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i64 0, i32 1, !dbg !8185
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8185
  %cmp55 = icmp eq %struct.basic_block_def* %20, %23, !dbg !8185
  br i1 %cmp55, label %land.lhs.true56, label %lor.lhs.false64, !dbg !8185

land.lhs.true56:                                  ; preds = %cond.end52
  %bf.load57 = load i32, i32* %18, align 8, !dbg !8185
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !8185
  %cmp59 = icmp eq i32 %bf.clear58, 10, !dbg !8185
  br i1 %cmp59, label %land.lhs.true60, label %lor.lhs.false64, !dbg !8185

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %bf.clear62 = and i32 %bf.load57, 16777216, !dbg !8185
  %tobool63 = icmp eq i32 %bf.clear62, 0, !dbg !8185
  br i1 %tobool63, label %lor.lhs.false64, label %if.end123, !dbg !8185

lor.lhs.false64:                                  ; preds = %land.lhs.true60, %land.lhs.true56, %cond.end52
  %24 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8185
  %tobool66 = icmp eq %struct.VEC_edge_gc* %24, null, !dbg !8185
  br i1 %tobool66, label %cond.end71, label %cond.true67, !dbg !8185

cond.true67:                                      ; preds = %lor.lhs.false64
  %base69 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %24, i64 0, i32 0, !dbg !8185
  br label %cond.end71, !dbg !8185

cond.end71:                                       ; preds = %lor.lhs.false64, %cond.true67
  %cond72 = phi %struct.VEC_edge_base* [ %base69, %cond.true67 ], [ null, %lor.lhs.false64 ], !dbg !8185
  %call73 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond72, i32 0) #7, !dbg !8185
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call73, i64 0, i32 7, !dbg !8185
  %25 = load i32, i32* %flags, align 8, !dbg !8185
  %and = and i32 %25, 8, !dbg !8185
  %tobool74 = icmp eq i32 %and, 0, !dbg !8185
  br i1 %tobool74, label %cond.true78, label %land.lhs.true75, !dbg !8185

land.lhs.true75:                                  ; preds = %cond.end71
  %call76 = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %10) #6, !dbg !8185
  %tobool77 = icmp eq i8 %call76, 0, !dbg !8185
  br i1 %tobool77, label %cond.true78, label %if.end123, !dbg !8185

cond.true78:                                      ; preds = %land.lhs.true75, %cond.end71
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 2976, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !8185
  br label %if.end123, !dbg !8185

if.else83:                                        ; preds = %if.end14
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 0, !dbg !8186
  %26 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !8186
  %tobool84 = icmp eq %struct.VEC_edge_gc* %26, null, !dbg !8186
  br i1 %tobool84, label %cond.end89, label %cond.true85, !dbg !8186

cond.true85:                                      ; preds = %if.else83
  %base87 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %26, i64 0, i32 0, !dbg !8186
  br label %cond.end89, !dbg !8186

cond.end89:                                       ; preds = %if.else83, %cond.true85
  %cond90 = phi %struct.VEC_edge_base* [ %base87, %cond.true85 ], [ null, %if.else83 ], !dbg !8186
  %call91 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond90) #7, !dbg !8186
  %cmp92 = icmp ult i32 %call91, 2, !dbg !8188
  br i1 %cmp92, label %land.lhs.true94, label %if.else102, !dbg !8189

land.lhs.true94:                                  ; preds = %cond.end89
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8190
  %cfg96 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 1, !dbg !8190
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg96, align 8, !dbg !8190
  %x_exit_block_ptr97 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 1, !dbg !8190
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr97, align 8, !dbg !8190
  %cmp98 = icmp eq %struct.basic_block_def* %3, %29, !dbg !8191
  br i1 %cmp98, label %if.else102, label %if.then100, !dbg !8192

if.then100:                                       ; preds = %land.lhs.true94
  tail call void @merge_blocks(%struct.basic_block_def* %0, %struct.basic_block_def* nonnull %3) #6, !dbg !8193
  %30 = load i32, i32* @num_true_changes, align 4, !dbg !8195
  %inc101 = add nsw i32 %30, 1, !dbg !8195
  store i32 %inc101, i32* @num_true_changes, align 4, !dbg !8195
  br label %if.end123, !dbg !8196

if.else102:                                       ; preds = %land.lhs.true94, %cond.end89
  %call103 = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %0) #7, !dbg !8197
  %tobool105 = icmp eq i8 %call103, 0, !dbg !8197
  br i1 %tobool105, label %cond.true110, label %land.lhs.true106, !dbg !8197

land.lhs.true106:                                 ; preds = %if.else102
  %call107 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %0) #7, !dbg !8197
  %cmp108 = icmp eq %struct.basic_block_def* %call107, %3, !dbg !8197
  br i1 %cmp108, label %cond.end112, label %cond.true110, !dbg !8197

cond.true110:                                     ; preds = %if.else102, %land.lhs.true106
  tail call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 3000, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !8197
  br label %cond.end112, !dbg !8197

cond.end112:                                      ; preds = %land.lhs.true106, %cond.true110
  %31 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8199
  %cfg115 = getelementptr inbounds %struct.function, %struct.function* %31, i64 0, i32 1, !dbg !8199
  %32 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg115, align 8, !dbg !8199
  %x_exit_block_ptr116 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %32, i64 0, i32 1, !dbg !8199
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr116, align 8, !dbg !8199
  %cmp117 = icmp eq %struct.basic_block_def* %3, %33, !dbg !8201
  br i1 %cmp117, label %if.end123, label %if.then119, !dbg !8202

if.then119:                                       ; preds = %cond.end112
  %call120 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0) #7, !dbg !8203
  tail call void @tidy_fallthru_edge(%struct.edge_def* %call120) #6, !dbg !8204
  br label %if.end123, !dbg !8204

if.end123:                                        ; preds = %cond.end112, %if.then21, %land.lhs.true60, %land.lhs.true75, %if.then100, %if.then119, %land.lhs.true28, %cond.true38, %if.else, %cond.true78
  %34 = load i32, i32* @num_updated_if_blocks, align 4, !dbg !8205
  %inc124 = add nsw i32 %34, 1, !dbg !8205
  store i32 %inc124, i32* @num_updated_if_blocks, align 4, !dbg !8205
  ret void, !dbg !8206
}

declare dso_local void @set_insn_deleted(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @df_set_bb_dirty(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @tidy_fallthru_edge(%struct.edge_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @block_has_only_trap(%struct.basic_block_def* %bb) unnamed_addr #4 !dbg !8207 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8209, metadata !DIExpression()), !dbg !8211
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8212
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !8212
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8212
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 1, !dbg !8212
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !8212
  %cmp = icmp eq %struct.basic_block_def* %2, %bb, !dbg !8214
  br i1 %cmp, label %cleanup, label %if.end, !dbg !8215

if.end:                                           ; preds = %entry
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !8216
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8216
  %tobool = icmp eq %struct.VEC_edge_gc* %3, null, !dbg !8216
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8216

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i64 0, i32 0, !dbg !8216
  br label %cond.end, !dbg !8216

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !8216
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !8216
  %cmp2 = icmp eq i32 %call, 0, !dbg !8218
  br i1 %cmp2, label %if.end4, label %cleanup, !dbg !8219

if.end4:                                          ; preds = %cond.end
  %call5 = tail call fastcc %struct.rtx_def* @first_active_insn(%struct.basic_block_def* %bb) #7, !dbg !8220
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call5, metadata !8210, metadata !DIExpression()), !dbg !8211
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !8221
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8221
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8221
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !8221
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8221
  %cmp6 = icmp eq %struct.rtx_def* %call5, %5, !dbg !8223
  br i1 %cmp6, label %land.lhs.true, label %cleanup, !dbg !8224

land.lhs.true:                                    ; preds = %if.end4
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call5, i64 0, i32 1, !dbg !8225
  %6 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8225
  %7 = bitcast %union.rtunion_def* %6 to i32**, !dbg !8225
  %8 = load i32*, i32** %7, align 8, !dbg !8225
  %bf.load = load i32, i32* %8, align 8, !dbg !8225
  %bf.clear = and i32 %bf.load, 65535, !dbg !8225
  %cmp7 = icmp eq i32 %bf.clear, 29, !dbg !8226
  br i1 %cmp7, label %land.lhs.true8, label %cleanup, !dbg !8227

land.lhs.true8:                                   ; preds = %land.lhs.true
  %arrayidx15 = getelementptr inbounds i32, i32* %8, i64 2, !dbg !8228
  %rt_rtx16 = bitcast i32* %arrayidx15 to %struct.rtx_def**, !dbg !8228
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !8228
  %10 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !8229
  %cmp17 = icmp eq %struct.rtx_def* %9, %10, !dbg !8230
  %spec.select = select i1 %cmp17, %struct.rtx_def* %call5, %struct.rtx_def* null, !dbg !8231
  ret %struct.rtx_def* %spec.select, !dbg !8231

cleanup:                                          ; preds = %cond.end, %if.end4, %land.lhs.true, %entry
  ret %struct.rtx_def* null, !dbg !8232
}

declare dso_local %struct.rtx_def* @gen_cond_trap(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @current_ir_type() local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @emit_barrier_after(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @forwarder_block_p(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @cheap_bb_rtx_cost_p(%struct.basic_block_def* %bb, i32 %max_cost) unnamed_addr #4 !dbg !8233 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8237, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %max_cost, metadata !8238, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 0, metadata !8239, metadata !DIExpression()), !dbg !8248
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !8249
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8249
  %0 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8249
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %0, i64 0, i32 0, !dbg !8249
  %1 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8249
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !8240, metadata !DIExpression()), !dbg !8248
  %call = tail call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %bb) #6, !dbg !8250
  call void @llvm.dbg.value(metadata i8 %call, metadata !8241, metadata !DIExpression()), !dbg !8248
  br label %while.cond, !dbg !8251

while.cond:                                       ; preds = %if.end74, %entry
  %count.0 = phi i32 [ 0, %entry ], [ %count.2, %if.end74 ], !dbg !8252
  %insn.0 = phi %struct.rtx_def* [ %1, %entry ], [ %15, %if.end74 ], !dbg !8248
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8240, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !8239, metadata !DIExpression()), !dbg !8248
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8253
  %bf.load = load i32, i32* %2, align 8, !dbg !8253
  %bf.clear = and i32 %bf.load, 65535, !dbg !8253
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !8253
  br i1 %cmp, label %if.then, label %if.else, !dbg !8254

if.then:                                          ; preds = %while.cond
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !8255
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !8255
  %rt_rtx = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !8255
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8255
  %call1 = tail call i32 @insn_rtx_cost(%struct.rtx_def* %4, i8 zeroext %call) #6, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8242, metadata !DIExpression()), !dbg !8257
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8258
  br i1 %cmp2, label %cleanup59, label %if.end, !dbg !8260

if.end:                                           ; preds = %if.then
  %bf.load4 = load i32, i32* %2, align 8, !dbg !8261
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !8261
  %cmp6 = icmp eq i32 %bf.clear5, 8, !dbg !8261
  br i1 %cmp6, label %cond.true, label %lor.lhs.false, !dbg !8261

lor.lhs.false:                                    ; preds = %if.end
  %cmp9 = icmp eq i32 %bf.clear5, 7, !dbg !8261
  br i1 %cmp9, label %cond.true, label %lor.lhs.false10, !dbg !8261

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %cmp13 = icmp eq i32 %bf.clear5, 9, !dbg !8261
  br i1 %cmp13, label %cond.true, label %lor.lhs.false14, !dbg !8261

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %cmp17 = icmp eq i32 %bf.clear5, 10, !dbg !8261
  br i1 %cmp17, label %cond.true, label %cond.end36, !dbg !8261

cond.true:                                        ; preds = %lor.lhs.false14, %lor.lhs.false10, %lor.lhs.false, %if.end
  %5 = bitcast %union.rtunion_def* %3 to i32**, !dbg !8261
  %6 = load i32*, i32** %5, align 8, !dbg !8261
  %bf.load22 = load i32, i32* %6, align 8, !dbg !8261
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !8261
  %cmp24 = icmp eq i32 %bf.clear23, 23, !dbg !8261
  %7 = bitcast i32* %6 to %struct.rtx_def*, !dbg !8261
  br i1 %cmp24, label %cond.end36, label %cond.false, !dbg !8261

cond.false:                                       ; preds = %cond.true
  %call34 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0, %struct.rtx_def* %7) #6, !dbg !8261
  br label %cond.end36, !dbg !8261

cond.end36:                                       ; preds = %lor.lhs.false14, %cond.false, %cond.true
  %cond37 = phi %struct.rtx_def* [ %call34, %cond.false ], [ %7, %cond.true ], [ null, %lor.lhs.false14 ], !dbg !8261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond37, metadata !8246, metadata !DIExpression()), !dbg !8262
  %tobool = icmp eq %struct.rtx_def* %cond37, null, !dbg !8263
  br i1 %tobool, label %if.end54, label %land.lhs.true, !dbg !8265

land.lhs.true:                                    ; preds = %cond.end36
  %arrayidx40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond37, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8266
  %8 = bitcast %union.rtunion_def* %arrayidx40 to i32**, !dbg !8266
  %9 = load i32*, i32** %8, align 8, !dbg !8266
  %bf.load42 = load i32, i32* %9, align 8, !dbg !8266
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !8266
  %cmp44 = icmp eq i32 %bf.clear43, 37, !dbg !8266
  br i1 %cmp44, label %land.lhs.true45, label %if.end54, !dbg !8266

land.lhs.true45:                                  ; preds = %land.lhs.true
  %10 = bitcast i32* %9 to %struct.rtx_def*, !dbg !8266
  %call50 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %10) #7, !dbg !8266
  %11 = and i32 %call50, -8, !dbg !8266
  %cmp51 = icmp eq i32 %11, 8, !dbg !8266
  br i1 %cmp51, label %cleanup, label %if.end54, !dbg !8267

if.end54:                                         ; preds = %cond.end36, %land.lhs.true45, %land.lhs.true
  br label %cleanup, !dbg !8268

cleanup:                                          ; preds = %land.lhs.true45, %if.end54
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end54 ], [ 1, %land.lhs.true45 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %cleanup.cont, label %cleanup59

cleanup.cont:                                     ; preds = %cleanup
  %add = add nsw i32 %count.0, %call1, !dbg !8269
  call void @llvm.dbg.value(metadata i32 %add, metadata !8239, metadata !DIExpression()), !dbg !8248
  %cmp55 = icmp sge i32 %add, %max_cost, !dbg !8270
  %. = zext i1 %cmp55 to i32, !dbg !8272
  br label %cleanup59, !dbg !8272

cleanup59:                                        ; preds = %cleanup.cont, %if.then, %cleanup
  %count.1 = phi i32 [ %count.0, %cleanup ], [ %count.0, %if.then ], [ %add, %cleanup.cont ], !dbg !8248
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then ], [ %., %cleanup.cont ]
  call void @llvm.dbg.value(metadata i32 %count.1, metadata !8239, metadata !DIExpression()), !dbg !8248
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end68, label %cleanup79

if.else:                                          ; preds = %while.cond
  %cmp64 = icmp eq i32 %bf.clear, 10, !dbg !8273
  br i1 %cmp64, label %cleanup79, label %if.end68, !dbg !8275

if.end68:                                         ; preds = %if.else, %cleanup59
  %count.2 = phi i32 [ %count.1, %cleanup59 ], [ %count.0, %if.else ], !dbg !8252
  call void @llvm.dbg.value(metadata i32 %count.2, metadata !8239, metadata !DIExpression()), !dbg !8248
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8276
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !8276
  %13 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8276
  %cmp71 = icmp eq %struct.rtx_def* %insn.0, %13, !dbg !8278
  br i1 %cmp71, label %cleanup79, label %if.end74, !dbg !8279

if.end74:                                         ; preds = %if.end68
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8280
  %rt_rtx78 = bitcast %union.rtunion_def* %14 to %struct.rtx_def**, !dbg !8280
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !8280
  call void @llvm.dbg.value(metadata %struct.rtx_def* %15, metadata !8240, metadata !DIExpression()), !dbg !8248
  br label %while.cond, !dbg !8251, !llvm.loop !8281

cleanup79:                                        ; preds = %if.end68, %if.else, %cleanup59
  %retval.4 = phi i8 [ 0, %cleanup59 ], [ 0, %if.else ], [ 1, %if.end68 ], !dbg !8248
  ret i8 %retval.4, !dbg !8283
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @dead_or_predicable(%struct.basic_block_def* %test_bb, %struct.basic_block_def* %merge_bb, %struct.basic_block_def* %other_bb, %struct.basic_block_def* %new_dest, i32 %reversep) unnamed_addr #4 !dbg !8284 {
entry:
  %earliest = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %test_bb, metadata !8288, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %merge_bb, metadata !8289, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %other_bb, metadata !8290, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_dest, metadata !8291, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i32 %reversep, metadata !8292, metadata !DIExpression()), !dbg !8411
  %0 = bitcast %struct.rtx_def** %earliest to i8*, !dbg !8412
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8412
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8296, metadata !DIExpression()), !dbg !8411
  store %struct.rtx_def* null, %struct.rtx_def** %earliest, align 8, !dbg !8413
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !8298, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i32 0, metadata !8299, metadata !DIExpression()), !dbg !8411
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 7, !dbg !8414
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8414
  %1 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8414
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1, i64 0, i32 1, !dbg !8414
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8295, metadata !DIExpression()), !dbg !8411
  %il1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %merge_bb, i64 0, i32 7, !dbg !8415
  %rtl2 = bitcast %union.basic_block_il_dependent* %il1 to %struct.rtl_bb_info**, !dbg !8415
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !8415
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 0, !dbg !8415
  %4 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !8293, metadata !DIExpression()), !dbg !8411
  %end_5 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 1, !dbg !8416
  br label %while.cond, !dbg !8417

while.cond:                                       ; preds = %while.body, %entry
  %end.0.in = phi %struct.rtx_def** [ %end_5, %entry ], [ %rt_rtx, %while.body ]
  %end.0 = load %struct.rtx_def*, %struct.rtx_def** %end.0.in, align 8, !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.0, metadata !8294, metadata !DIExpression()), !dbg !8411
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end.0, i64 0, i32 0, !dbg !8418
  %bf.load = load i32, i32* %5, align 8, !dbg !8418
  %bf.clear = and i32 %bf.load, 65535, !dbg !8418
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !8418
  %cmp6 = icmp ne %struct.rtx_def* %end.0, %4, !dbg !8419
  %spec.select = and i1 %cmp, %cmp6, !dbg !8420
  br i1 %spec.select, label %while.body, label %while.end, !dbg !8417

while.body:                                       ; preds = %while.cond
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8421
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !8421
  br label %while.cond, !dbg !8417, !llvm.loop !8422

while.end:                                        ; preds = %while.cond
  %end.0.lcssa = phi %struct.rtx_def* [ %end.0, %while.cond ], !dbg !8411
  %.lcssa = phi i32* [ %5, %while.cond ], !dbg !8418
  %call = tail call zeroext i8 @tablejump_p(%struct.rtx_def* %end.0.lcssa, %struct.rtx_def** null, %struct.rtx_def** null) #6, !dbg !8423
  %tobool = icmp eq i8 %call, 0, !dbg !8423
  br i1 %tobool, label %if.end, label %cleanup826, !dbg !8425

if.end:                                           ; preds = %while.end
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !8426
  %bf.load7 = load i32, i32* %7, align 8, !dbg !8426
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !8426
  %cmp9 = icmp eq i32 %bf.clear8, 12, !dbg !8426
  br i1 %cmp9, label %if.then10, label %if.end15, !dbg !8428

if.then10:                                        ; preds = %if.end
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8429
  %rt_rtx14 = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !8429
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !8429
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !8293, metadata !DIExpression()), !dbg !8411
  br label %if.end15, !dbg !8430

if.end15:                                         ; preds = %if.then10, %if.end
  %head.0 = phi %struct.rtx_def* [ %9, %if.then10 ], [ %4, %if.end ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.0, metadata !8293, metadata !DIExpression()), !dbg !8411
  br label %while.cond16, !dbg !8431

while.cond16:                                     ; preds = %while.body23, %if.end15
  %head.1 = phi %struct.rtx_def* [ %head.0, %if.end15 ], [ %12, %while.body23 ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.1, metadata !8293, metadata !DIExpression()), !dbg !8411
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.1, i64 0, i32 0, !dbg !8432
  %bf.load17 = load i32, i32* %10, align 8, !dbg !8432
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !8432
  %cmp19 = icmp eq i32 %bf.clear18, 7, !dbg !8432
  %cmp21 = icmp ne %struct.rtx_def* %head.1, %end.0.lcssa, !dbg !8433
  %spec.select3 = and i1 %cmp19, %cmp21, !dbg !8434
  br i1 %spec.select3, label %while.body23, label %while.end28, !dbg !8431

while.body23:                                     ; preds = %while.cond16
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8435
  %rt_rtx27 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !8435
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !8435
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !8293, metadata !DIExpression()), !dbg !8411
  br label %while.cond16, !dbg !8431, !llvm.loop !8436

while.end28:                                      ; preds = %while.cond16
  %head.1.lcssa = phi %struct.rtx_def* [ %head.1, %while.cond16 ], !dbg !8411
  %bf.clear18.lcssa = phi i32 [ %bf.clear18, %while.cond16 ], !dbg !8432
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.1.lcssa, metadata !8293, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.1.lcssa, metadata !8293, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.1.lcssa, metadata !8293, metadata !DIExpression()), !dbg !8411
  %cmp31 = icmp eq i32 %bf.clear18.lcssa, 13, !dbg !8437
  br i1 %cmp31, label %if.then32, label %if.end53, !dbg !8439

if.then32:                                        ; preds = %while.end28
  %cmp33 = icmp eq %struct.rtx_def* %head.1.lcssa, %end.0.lcssa, !dbg !8440
  br i1 %cmp33, label %no_body, label %if.end35, !dbg !8443

if.end35:                                         ; preds = %if.then32
  br label %while.cond40, !dbg !8444

while.cond40:                                     ; preds = %while.body47, %if.end35
  %head.1.pn = phi %struct.rtx_def* [ %head.1.lcssa, %if.end35 ], [ %head.2, %while.body47 ]
  %head.2.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.1.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8445
  %head.2.in = bitcast %union.rtunion_def* %head.2.in.in to %struct.rtx_def**, !dbg !8445
  %head.2 = load %struct.rtx_def*, %struct.rtx_def** %head.2.in, align 8, !dbg !8445
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.2, metadata !8293, metadata !DIExpression()), !dbg !8411
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.2, i64 0, i32 0, !dbg !8446
  %bf.load41 = load i32, i32* %13, align 8, !dbg !8446
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !8446
  %cmp43 = icmp eq i32 %bf.clear42, 7, !dbg !8446
  %cmp45 = icmp ne %struct.rtx_def* %head.2, %end.0.lcssa, !dbg !8447
  %spec.select4 = and i1 %cmp43, %cmp45, !dbg !8448
  br i1 %spec.select4, label %while.body47, label %if.end53.loopexit, !dbg !8444

while.body47:                                     ; preds = %while.cond40
  br label %while.cond40, !dbg !8444, !llvm.loop !8449

if.end53.loopexit:                                ; preds = %while.cond40
  %head.2.lcssa = phi %struct.rtx_def* [ %head.2, %while.cond40 ], !dbg !8445
  br label %if.end53, !dbg !8451

if.end53:                                         ; preds = %if.end53.loopexit, %while.end28
  %head.3 = phi %struct.rtx_def* [ %head.1.lcssa, %while.end28 ], [ %head.2.lcssa, %if.end53.loopexit ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.3, metadata !8293, metadata !DIExpression()), !dbg !8411
  %bf.load54 = load i32, i32* %.lcssa, align 8, !dbg !8451
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !8451
  %cmp56 = icmp eq i32 %bf.clear55, 9, !dbg !8451
  br i1 %cmp56, label %if.then57, label %if.end78, !dbg !8453

if.then57:                                        ; preds = %if.end53
  %cmp58 = icmp eq %struct.rtx_def* %head.3, %end.0.lcssa, !dbg !8454
  br i1 %cmp58, label %no_body, label %if.end60, !dbg !8457

if.end60:                                         ; preds = %if.then57
  br label %while.cond65, !dbg !8458

while.cond65:                                     ; preds = %while.body72, %if.end60
  %end.0.pn = phi %struct.rtx_def* [ %end.0.lcssa, %if.end60 ], [ %end.1, %while.body72 ]
  %end.1.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end.0.pn, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8459
  %end.1.in = bitcast %union.rtunion_def* %end.1.in.in to %struct.rtx_def**, !dbg !8459
  %end.1 = load %struct.rtx_def*, %struct.rtx_def** %end.1.in, align 8, !dbg !8459
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.1, metadata !8294, metadata !DIExpression()), !dbg !8411
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end.1, i64 0, i32 0, !dbg !8460
  %bf.load66 = load i32, i32* %14, align 8, !dbg !8460
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !8460
  %cmp68 = icmp eq i32 %bf.clear67, 7, !dbg !8460
  %cmp70 = icmp ne %struct.rtx_def* %end.1, %head.3, !dbg !8461
  %spec.select5 = and i1 %cmp68, %cmp70, !dbg !8462
  br i1 %spec.select5, label %while.body72, label %if.end78.loopexit, !dbg !8458

while.body72:                                     ; preds = %while.cond65
  br label %while.cond65, !dbg !8458, !llvm.loop !8463

if.end78.loopexit:                                ; preds = %while.cond65
  %end.1.lcssa = phi %struct.rtx_def* [ %end.1, %while.cond65 ], !dbg !8459
  br label %if.end78, !dbg !8465

if.end78:                                         ; preds = %if.end78.loopexit, %if.end53
  %end.2 = phi %struct.rtx_def* [ %end.0.lcssa, %if.end53 ], [ %end.1.lcssa, %if.end78.loopexit ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.2, metadata !8294, metadata !DIExpression()), !dbg !8411
  %15 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 35), align 8, !dbg !8465
  %call79 = tail call zeroext i8 %15() #6, !dbg !8466
  %tobool80 = icmp eq i8 %call79, 0, !dbg !8466
  br i1 %tobool80, label %if.end129, label %if.then81, !dbg !8467

if.then81:                                        ; preds = %if.end78
  %call82 = tail call fastcc %struct.rtx_def* @cond_exec_get_condition(%struct.rtx_def* %2) #7, !dbg !8468
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call82, metadata !8300, metadata !DIExpression()), !dbg !8469
  %tobool83 = icmp eq %struct.rtx_def* %call82, null, !dbg !8470
  br i1 %tobool83, label %cleanup125, label %if.end85, !dbg !8472

if.end85:                                         ; preds = %if.then81
  %call86 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %2, i32 13, %struct.rtx_def* null) #6, !dbg !8473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call86, metadata !8303, metadata !DIExpression()), !dbg !8469
  %tobool87 = icmp eq %struct.rtx_def* %call86, null, !dbg !8474
  br i1 %tobool87, label %if.end93, label %if.then88, !dbg !8476

if.then88:                                        ; preds = %if.end85
  %arrayidx91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call86, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8477
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !8477
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !8477
  call void @llvm.dbg.value(metadata %struct.rtx_def* %16, metadata !8303, metadata !DIExpression()), !dbg !8469
  br label %if.end93, !dbg !8478

if.end93:                                         ; preds = %if.end85, %if.then88
  %prob_val.0 = phi %struct.rtx_def* [ %16, %if.then88 ], [ null, %if.end85 ], !dbg !8469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prob_val.0, metadata !8303, metadata !DIExpression()), !dbg !8469
  %tobool94 = icmp eq i32 %reversep, 0, !dbg !8479
  br i1 %tobool94, label %if.end117, label %if.then95, !dbg !8480

if.then95:                                        ; preds = %if.end93
  %call96 = tail call i32 @reversed_comparison_code(%struct.rtx_def* nonnull %call82, %struct.rtx_def* %2) #6, !dbg !8481
  call void @llvm.dbg.value(metadata i32 %call96, metadata !8304, metadata !DIExpression()), !dbg !8482
  %cmp97 = icmp eq i32 %call96, 0, !dbg !8483
  br i1 %cmp97, label %cleanup, label %if.end99, !dbg !8485

if.end99:                                         ; preds = %if.then95
  %17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 0, !dbg !8486
  %bf.load100 = load i32, i32* %17, align 8, !dbg !8486
  %bf.lshr = lshr i32 %bf.load100, 16, !dbg !8486
  %bf.clear101 = and i32 %bf.lshr, 255, !dbg !8486
  %arrayidx104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8486
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !8486
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !8486
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call82, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8486
  %rt_rtx109 = bitcast %union.rtunion_def* %19 to %struct.rtx_def**, !dbg !8486
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !8486
  %call110 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %call96, i32 %bf.clear101, %struct.rtx_def* %18, %struct.rtx_def* %20) #6, !dbg !8486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call110, metadata !8300, metadata !DIExpression()), !dbg !8469
  %tobool111 = icmp eq %struct.rtx_def* %prob_val.0, null, !dbg !8487
  br i1 %tobool111, label %cleanup, label %if.then112, !dbg !8489

if.then112:                                       ; preds = %if.end99
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prob_val.0, i64 0, i32 1, !dbg !8490
  %arrayidx114 = bitcast %union.u* %u113 to i64*, !dbg !8490
  %21 = load i64, i64* %arrayidx114, align 8, !dbg !8490
  %sub = sub nsw i64 10000, %21, !dbg !8490
  %call115 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #6, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call115, metadata !8303, metadata !DIExpression()), !dbg !8469
  br label %cleanup, !dbg !8491

cleanup:                                          ; preds = %if.end99, %if.then112, %if.then95
  %prob_val.2 = phi %struct.rtx_def* [ %prob_val.0, %if.then95 ], [ %call115, %if.then112 ], [ null, %if.end99 ], !dbg !8469
  %cond.0 = phi %struct.rtx_def* [ %call82, %if.then95 ], [ %call110, %if.then112 ], [ %call110, %if.end99 ], !dbg !8469
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then95 ], [ 0, %if.then112 ], [ 0, %if.end99 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.0, metadata !8300, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prob_val.2, metadata !8303, metadata !DIExpression()), !dbg !8469
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end117, label %cleanup125

if.end117:                                        ; preds = %if.end93, %cleanup
  %prob_val.3 = phi %struct.rtx_def* [ %prob_val.0, %if.end93 ], [ %prob_val.2, %cleanup ], !dbg !8492
  %cond.1 = phi %struct.rtx_def* [ %call82, %if.end93 ], [ %cond.0, %cleanup ], !dbg !8493
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond.1, metadata !8300, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prob_val.3, metadata !8303, metadata !DIExpression()), !dbg !8469
  %call118 = tail call fastcc i32 @cond_exec_process_insns(%struct.ce_if_block* null, %struct.rtx_def* %head.3, %struct.rtx_def* %end.2, %struct.rtx_def* %cond.1, %struct.rtx_def* %prob_val.3, i32 0) #7, !dbg !8494
  %tobool119 = icmp eq i32 %call118, 0, !dbg !8494
  br i1 %tobool119, label %if.else, label %land.lhs.true, !dbg !8496

land.lhs.true:                                    ; preds = %if.end117
  %call120 = tail call i32 @verify_changes(i32 0) #6, !dbg !8497
  %tobool121 = icmp eq i32 %call120, 0, !dbg !8497
  br i1 %tobool121, label %if.else, label %if.then122, !dbg !8498

if.then122:                                       ; preds = %land.lhs.true
  %call123 = tail call i32 @num_validated_changes() #6, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %call123, metadata !8299, metadata !DIExpression()), !dbg !8411
  br label %if.end124, !dbg !8500

if.else:                                          ; preds = %land.lhs.true, %if.end117
  tail call void @cancel_changes(i32 0) #6, !dbg !8501
  br label %if.end124

if.end124:                                        ; preds = %if.else, %if.then122
  %n_validated_changes.0 = phi i32 [ %call123, %if.then122 ], [ 0, %if.else ], !dbg !8411
  call void @llvm.dbg.value(metadata i32 %n_validated_changes.0, metadata !8299, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8296, metadata !DIExpression()), !dbg !8411
  store %struct.rtx_def* %2, %struct.rtx_def** %earliest, align 8, !dbg !8502
  br label %cleanup125, !dbg !8503

cleanup125:                                       ; preds = %if.then81, %cleanup, %if.end124
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end124 ], [ 1, %if.then81 ]
  %n_validated_changes.1 = phi i32 [ 0, %cleanup ], [ %n_validated_changes.0, %if.end124 ], [ 0, %if.then81 ], !dbg !8411
  call void @llvm.dbg.value(metadata i32 %n_validated_changes.1, metadata !8299, metadata !DIExpression()), !dbg !8411
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end129, label %cleanup826

if.end129:                                        ; preds = %if.end78, %cleanup125
  %n_validated_changes.2 = phi i32 [ 0, %if.end78 ], [ %n_validated_changes.1, %cleanup125 ], !dbg !8504
  call void @llvm.dbg.value(metadata i32 %n_validated_changes.2, metadata !8299, metadata !DIExpression()), !dbg !8411
  %cmp130 = icmp eq i32 %n_validated_changes.2, 0, !dbg !8505
  br i1 %cmp130, label %if.then131, label %no_body, !dbg !8506

if.then131:                                       ; preds = %if.end129
  %22 = bitcast i32* %i to i8*, !dbg !8507
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8, !dbg !8507
  call void @llvm.dbg.value(metadata i32 0, metadata !8316, metadata !DIExpression()), !dbg !8508
  %23 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !8509
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #8, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.3, metadata !8307, metadata !DIExpression()), !dbg !8508
  br label %for.cond, !dbg !8510

for.cond:                                         ; preds = %for.inc, %if.then131
  %insn.0 = phi %struct.rtx_def* [ %head.3, %if.then131 ], [ %28, %for.inc ], !dbg !8512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8307, metadata !DIExpression()), !dbg !8508
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8513
  %bf.load133 = load i32, i32* %24, align 8, !dbg !8513
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !8513
  %cmp135 = icmp eq i32 %bf.clear134, 10, !dbg !8513
  br i1 %cmp135, label %cleanup313.loopexit, label %if.end137, !dbg !8517

if.end137:                                        ; preds = %for.cond
  %cmp140 = icmp eq i32 %bf.clear134, 8, !dbg !8518
  br i1 %cmp140, label %land.lhs.true152, label %lor.lhs.false, !dbg !8518

lor.lhs.false:                                    ; preds = %if.end137
  %cmp143 = icmp eq i32 %bf.clear134, 7, !dbg !8518
  br i1 %cmp143, label %land.lhs.true152, label %lor.lhs.false144, !dbg !8518

lor.lhs.false144:                                 ; preds = %lor.lhs.false
  %cmp147 = icmp eq i32 %bf.clear134, 9, !dbg !8518
  br i1 %cmp147, label %land.lhs.true152, label %lor.lhs.false148, !dbg !8518

lor.lhs.false148:                                 ; preds = %lor.lhs.false144
  br i1 false, label %lor.lhs.false148.land.lhs.true152_crit_edge, label %if.end173, !dbg !8518

lor.lhs.false148.land.lhs.true152_crit_edge:      ; preds = %lor.lhs.false148
  br label %land.lhs.true152, !dbg !8518

land.lhs.true152:                                 ; preds = %lor.lhs.false148.land.lhs.true152_crit_edge, %lor.lhs.false144, %lor.lhs.false, %if.end137
  %cmp155 = icmp eq i32 %bf.clear134, 7, !dbg !8518
  br i1 %cmp155, label %if.end173, label %if.then156, !dbg !8520

if.then156:                                       ; preds = %land.lhs.true152
  %u157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !8521
  %25 = getelementptr inbounds %union.u, %union.u* %u157, i64 1, i32 0, i32 0, i64 0, !dbg !8521
  %rt_rtx160 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !8521
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx160, align 8, !dbg !8521
  %call161 = tail call i32 @may_trap_p(%struct.rtx_def* %26) #6, !dbg !8524
  %tobool162 = icmp eq i32 %call161, 0, !dbg !8524
  br i1 %tobool162, label %if.end164, label %cleanup313.loopexit, !dbg !8525

if.end164:                                        ; preds = %if.then156
  %call169 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx160, i32 (%struct.rtx_def**, i8*)* nonnull @find_memory, i8* null) #6, !dbg !8526
  %tobool170 = icmp eq i32 %call169, 0, !dbg !8526
  br i1 %tobool170, label %if.end173, label %cleanup313.loopexit, !dbg !8528

if.end173:                                        ; preds = %if.end164, %land.lhs.true152, %lor.lhs.false148
  %cmp174 = icmp eq %struct.rtx_def* %insn.0, %end.2, !dbg !8529
  br i1 %cmp174, label %for.end, label %for.inc, !dbg !8531

for.inc:                                          ; preds = %if.end173
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8532
  %rt_rtx180 = bitcast %union.rtunion_def* %27 to %struct.rtx_def**, !dbg !8532
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !8532
  call void @llvm.dbg.value(metadata %struct.rtx_def* %28, metadata !8307, metadata !DIExpression()), !dbg !8508
  br label %for.cond, !dbg !8533, !llvm.loop !8534

for.end:                                          ; preds = %if.end173
  %call181 = tail call i32 @any_condjump_p(%struct.rtx_def* %2) #6, !dbg !8537
  %tobool182 = icmp eq i32 %call181, 0, !dbg !8537
  br i1 %tobool182, label %cleanup313, label %if.end184, !dbg !8539

if.end184:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.rtx_def** %earliest, metadata !8296, metadata !DIExpression(DW_OP_deref)), !dbg !8411
  %call185 = call fastcc %struct.rtx_def* @noce_get_condition(%struct.rtx_def* %2, %struct.rtx_def** nonnull %earliest, i8 zeroext 0) #7, !dbg !8540
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call185, metadata !8310, metadata !DIExpression()), !dbg !8508
  %tobool186 = icmp eq %struct.rtx_def* %call185, null, !dbg !8541
  br i1 %tobool186, label %cleanup313, label %if.end188, !dbg !8543

if.end188:                                        ; preds = %if.end184
  %call189 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !8544
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call189, metadata !8312, metadata !DIExpression()), !dbg !8508
  %call190 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !8545
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call190, metadata !8313, metadata !DIExpression()), !dbg !8508
  %call191 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @reg_obstack) #6, !dbg !8546
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call191, metadata !8314, metadata !DIExpression()), !dbg !8508
  %29 = load i32, i32* @max_regno, align 4, !dbg !8547
  %call192 = call i32 @max_reg_num() #6, !dbg !8549
  %cmp193 = icmp slt i32 %29, %call192, !dbg !8550
  br i1 %cmp193, label %if.then194, label %if.end196, !dbg !8551

if.then194:                                       ; preds = %if.end188
  %call195 = call i32 @max_reg_num() #6, !dbg !8552
  store i32 %call195, i32* @max_regno, align 4, !dbg !8553
  br label %if.end196, !dbg !8554

if.end196:                                        ; preds = %if.then194, %if.end188
  %30 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !8555
  %head_199 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %30, i64 0, i32 0, !dbg !8555
  br label %for.cond200, !dbg !8555

for.cond200:                                      ; preds = %for.inc243, %if.end196
  %insn.1.in = phi %struct.rtx_def** [ %head_199, %if.end196 ], [ %rt_rtx247, %for.inc243 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !8556
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !8307, metadata !DIExpression()), !dbg !8508
  %tobool201 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !8557
  br i1 %tobool201, label %for.end248, label %land.rhs202, !dbg !8557

land.rhs202:                                      ; preds = %for.cond200
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !8557
  %end_205 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i64 0, i32 1, !dbg !8557
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_205, align 8, !dbg !8557
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8557
  %rt_rtx209 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !8557
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !8557
  %cmp210 = icmp eq %struct.rtx_def* %insn.1, %34, !dbg !8557
  br i1 %cmp210, label %for.end248, label %for.body, !dbg !8555

for.body:                                         ; preds = %land.rhs202
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !8558
  %bf.load212 = load i32, i32* %35, align 8, !dbg !8558
  %bf.clear213 = and i32 %bf.load212, 65535, !dbg !8558
  %cmp214 = icmp eq i32 %bf.clear213, 8, !dbg !8558
  br i1 %cmp214, label %land.lhs.true227, label %lor.lhs.false215, !dbg !8558

lor.lhs.false215:                                 ; preds = %for.body
  %cmp218 = icmp eq i32 %bf.clear213, 7, !dbg !8558
  br i1 %cmp218, label %land.lhs.true227, label %lor.lhs.false219, !dbg !8558

lor.lhs.false219:                                 ; preds = %lor.lhs.false215
  %cmp222 = icmp eq i32 %bf.clear213, 9, !dbg !8558
  br i1 %cmp222, label %land.lhs.true227, label %lor.lhs.false223, !dbg !8558

lor.lhs.false223:                                 ; preds = %lor.lhs.false219
  %cmp226 = icmp eq i32 %bf.clear213, 10, !dbg !8558
  br i1 %cmp226, label %land.lhs.true227, label %for.inc243, !dbg !8558

land.lhs.true227:                                 ; preds = %lor.lhs.false223, %lor.lhs.false219, %lor.lhs.false215, %for.body
  %cmp230 = icmp eq i32 %bf.clear213, 7, !dbg !8558
  br i1 %cmp230, label %for.inc243, label %if.then231, !dbg !8559

if.then231:                                       ; preds = %land.lhs.true227
  %arrayidx234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8560
  %rt_int = bitcast %union.rtunion_def* %arrayidx234 to i32*, !dbg !8560
  %36 = load i32, i32* %rt_int, align 8, !dbg !8560
  call void @llvm.dbg.value(metadata i32 %36, metadata !8325, metadata !DIExpression()), !dbg !8561
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !8562
  %insns = getelementptr inbounds %struct.df, %struct.df* %37, i64 0, i32 10, !dbg !8562
  %38 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !8562
  %idxprom = zext i32 %36 to i64, !dbg !8562
  %arrayidx235 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %38, i64 %idxprom, !dbg !8562
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx235, align 8, !dbg !8562
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i64 0, i32 1, !dbg !8562
  %40 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !8562
  call void @llvm.dbg.value(metadata %union.df_ref_d** %40, metadata !8331, metadata !DIExpression()), !dbg !8561
  br label %for.cond236, !dbg !8563

for.cond236:                                      ; preds = %for.body238, %if.then231
  %def_rec.0 = phi %union.df_ref_d** [ %40, %if.then231 ], [ %incdec.ptr, %for.body238 ], !dbg !8564
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !8331, metadata !DIExpression()), !dbg !8561
  %41 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !8565
  %tobool237 = icmp eq %union.df_ref_d* %41, null, !dbg !8566
  br i1 %tobool237, label %for.inc243.loopexit, label %for.body238, !dbg !8566

for.body238:                                      ; preds = %for.cond236
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %41, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !8567
  %42 = load i32, i32* %regno, align 8, !dbg !8567
  %call239 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call189, i32 %42) #6, !dbg !8568
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !8569
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !8331, metadata !DIExpression()), !dbg !8561
  br label %for.cond236, !dbg !8570, !llvm.loop !8571

for.inc243.loopexit:                              ; preds = %for.cond236
  br label %for.inc243, !dbg !8557

for.inc243:                                       ; preds = %for.inc243.loopexit, %lor.lhs.false223, %land.lhs.true227
  %43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8557
  %rt_rtx247 = bitcast %union.rtunion_def* %43 to %struct.rtx_def**, !dbg !8557
  br label %for.cond200, !dbg !8557, !llvm.loop !8573

for.end248:                                       ; preds = %land.rhs202, %for.cond200
  %44 = load i32, i32* @reload_completed, align 4, !dbg !8575
  %tobool249 = icmp eq i32 %44, 0, !dbg !8575
  br i1 %tobool249, label %if.then250, label %if.end268, !dbg !8577

if.then250:                                       ; preds = %for.end248
  call void @llvm.dbg.value(metadata i32* %i, metadata !8315, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8317, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call189, i32 0, i32* nonnull %i) #7, !dbg !8578
  br label %for.cond251, !dbg !8578

for.cond251:                                      ; preds = %for.inc266, %if.then250
  %fail.0 = phi i32 [ 0, %if.then250 ], [ %fail.1, %for.inc266 ], !dbg !8581
  call void @llvm.dbg.value(metadata i32 %fail.0, metadata !8316, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32* %i, metadata !8315, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8317, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  %call252 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8582
  %tobool253 = icmp eq i8 %call252, 0, !dbg !8578
  br i1 %tobool253, label %if.end268.loopexit, label %for.body254, !dbg !8578

for.body254:                                      ; preds = %for.cond251
  %45 = load i32, i32* %i, align 4, !dbg !8584
  call void @llvm.dbg.value(metadata i32 %45, metadata !8315, metadata !DIExpression()), !dbg !8508
  %cmp255 = icmp ult i32 %45, 53, !dbg !8587
  br i1 %cmp255, label %land.lhs.true256, label %for.inc266, !dbg !8588

land.lhs.true256:                                 ; preds = %for.body254
  call void @llvm.dbg.value(metadata i32 %45, metadata !8315, metadata !DIExpression()), !dbg !8508
  %idxprom257 = zext i32 %45 to i64, !dbg !8589
  %arrayidx258 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom257, !dbg !8589
  %46 = load i8, i8* %arrayidx258, align 1, !dbg !8589
  %tobool259 = icmp eq i8 %46, 0, !dbg !8589
  br i1 %tobool259, label %land.lhs.true260, label %for.inc266, !dbg !8590

land.lhs.true260:                                 ; preds = %land.lhs.true256
  call void @llvm.dbg.value(metadata i32 %45, metadata !8315, metadata !DIExpression()), !dbg !8508
  %arrayidx262 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom257, !dbg !8591
  %47 = load i8, i8* %arrayidx262, align 1, !dbg !8591
  %tobool263 = icmp eq i8 %47, 0, !dbg !8591
  %spec.select6 = select i1 %tobool263, i32 1, i32 %fail.0, !dbg !8592
  br label %for.inc266, !dbg !8592

for.inc266:                                       ; preds = %land.lhs.true256, %land.lhs.true260, %for.body254
  %fail.1 = phi i32 [ %fail.0, %land.lhs.true256 ], [ %fail.0, %for.body254 ], [ %spec.select6, %land.lhs.true260 ], !dbg !8508
  call void @llvm.dbg.value(metadata i32 %fail.1, metadata !8316, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32* %i, metadata !8315, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8317, metadata !DIExpression(DW_OP_deref)), !dbg !8508
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !8582
  br label %for.cond251, !dbg !8582, !llvm.loop !8593

if.end268.loopexit:                               ; preds = %for.cond251
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond251 ], !dbg !8581
  call void @llvm.dbg.value(metadata i32 %fail.0.lcssa, metadata !8316, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32 %fail.0.lcssa, metadata !8316, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32 %fail.0.lcssa, metadata !8316, metadata !DIExpression()), !dbg !8508
  br label %if.end268, !dbg !8595

if.end268:                                        ; preds = %if.end268.loopexit, %for.end248
  %fail.2 = phi i32 [ 0, %for.end248 ], [ %fail.0.lcssa, %if.end268.loopexit ], !dbg !8581
  call void @llvm.dbg.value(metadata i32 %fail.2, metadata !8316, metadata !DIExpression()), !dbg !8508
  %call269 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %other_bb) #6, !dbg !8595
  call void @bitmap_copy(%struct.bitmap_head_def* %call190, %struct.bitmap_head_def* %call269) #6, !dbg !8596
  call void @df_simulate_initialize_backwards(%struct.basic_block_def* %test_bb, %struct.bitmap_head_def* %call190) #6, !dbg !8597
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !8307, metadata !DIExpression()), !dbg !8508
  br label %for.cond270, !dbg !8598

for.cond270:                                      ; preds = %if.end287, %if.end268
  %insn.2 = phi %struct.rtx_def* [ %2, %if.end268 ], [ %50, %if.end287 ], !dbg !8600
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !8307, metadata !DIExpression()), !dbg !8508
  %48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !8601
  %bf.load271 = load i32, i32* %48, align 8, !dbg !8601
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !8601
  %cmp273 = icmp eq i32 %bf.clear272, 8, !dbg !8601
  br i1 %cmp273, label %if.then286, label %lor.lhs.false274, !dbg !8601

lor.lhs.false274:                                 ; preds = %for.cond270
  %cmp277 = icmp eq i32 %bf.clear272, 7, !dbg !8601
  br i1 %cmp277, label %if.then286, label %lor.lhs.false278, !dbg !8601

lor.lhs.false278:                                 ; preds = %lor.lhs.false274
  %cmp281 = icmp eq i32 %bf.clear272, 9, !dbg !8601
  br i1 %cmp281, label %if.then286, label %lor.lhs.false282, !dbg !8601

lor.lhs.false282:                                 ; preds = %lor.lhs.false278
  %cmp285 = icmp eq i32 %bf.clear272, 10, !dbg !8601
  br i1 %cmp285, label %if.then286, label %if.end287, !dbg !8605

if.then286:                                       ; preds = %lor.lhs.false282, %lor.lhs.false278, %lor.lhs.false274, %for.cond270
  call void @df_simulate_find_defs(%struct.rtx_def* %insn.2, %struct.bitmap_head_def* %call191) #6, !dbg !8606
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %test_bb, %struct.rtx_def* %insn.2, %struct.bitmap_head_def* %call190) #6, !dbg !8608
  br label %if.end287, !dbg !8609

if.end287:                                        ; preds = %if.then286, %lor.lhs.false282
  %49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8610
  %rt_rtx291 = bitcast %union.rtunion_def* %49 to %struct.rtx_def**, !dbg !8610
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx291, align 8, !dbg !8610
  call void @llvm.dbg.value(metadata %struct.rtx_def* %50, metadata !8311, metadata !DIExpression()), !dbg !8508
  %51 = load %struct.rtx_def*, %struct.rtx_def** %earliest, align 8, !dbg !8611
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !8296, metadata !DIExpression()), !dbg !8411
  %cmp292 = icmp eq %struct.rtx_def* %insn.2, %51, !dbg !8613
  br i1 %cmp292, label %for.end296, label %for.cond270, !dbg !8614, !llvm.loop !8615

for.end296:                                       ; preds = %if.end287
  %call297 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %call191, %struct.bitmap_head_def* %call189) #6, !dbg !8618
  %tobool298 = icmp eq i8 %call297, 0, !dbg !8618
  br i1 %tobool298, label %lor.lhs.false299, label %if.then308, !dbg !8620

lor.lhs.false299:                                 ; preds = %for.end296
  %call300 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %call190, %struct.bitmap_head_def* %call189) #6, !dbg !8621
  %tobool302 = icmp eq i8 %call300, 0, !dbg !8621
  br i1 %tobool302, label %lor.lhs.false303, label %if.then308, !dbg !8622

lor.lhs.false303:                                 ; preds = %lor.lhs.false299
  %call304 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %merge_bb) #6, !dbg !8623
  %call305 = call zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def* %call191, %struct.bitmap_head_def* %call304) #6, !dbg !8624
  %tobool307 = icmp eq i8 %call305, 0, !dbg !8624
  br i1 %tobool307, label %if.end309, label %if.then308, !dbg !8625

if.then308:                                       ; preds = %lor.lhs.false303, %lor.lhs.false299, %for.end296
  call void @llvm.dbg.value(metadata i32 1, metadata !8316, metadata !DIExpression()), !dbg !8508
  br label %if.end309, !dbg !8626

if.end309:                                        ; preds = %lor.lhs.false303, %if.then308
  %fail.3 = phi i32 [ 1, %if.then308 ], [ %fail.2, %lor.lhs.false303 ], !dbg !8508
  call void @llvm.dbg.value(metadata i32 %fail.3, metadata !8316, metadata !DIExpression()), !dbg !8508
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call189) #6, !dbg !8627
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8312, metadata !DIExpression()), !dbg !8508
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call190) #6, !dbg !8628
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8313, metadata !DIExpression()), !dbg !8508
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call191) #6, !dbg !8629
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !8314, metadata !DIExpression()), !dbg !8508
  %tobool310 = icmp ne i32 %fail.3, 0, !dbg !8630
  %. = zext i1 %tobool310 to i32, !dbg !8632
  br label %cleanup313, !dbg !8632

cleanup313.loopexit:                              ; preds = %for.cond, %if.then156, %if.end164
  br label %cleanup313, !dbg !8633

cleanup313:                                       ; preds = %cleanup313.loopexit, %if.end184, %for.end, %if.end309
  %cleanup.dest.slot.2 = phi i32 [ 1, %for.end ], [ 1, %if.end184 ], [ %., %if.end309 ], [ 1, %cleanup313.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #8, !dbg !8633
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8, !dbg !8633
  %cond = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond, label %no_body, label %cleanup826

no_body:                                          ; preds = %if.end129, %cleanup313, %if.then57, %if.then32
  %n_validated_changes.3 = phi i32 [ 0, %if.then32 ], [ 0, %if.then57 ], [ 0, %cleanup313 ], [ %n_validated_changes.2, %if.end129 ], !dbg !8504
  %end.3 = phi %struct.rtx_def* [ null, %if.then32 ], [ null, %if.then57 ], [ %end.2, %cleanup313 ], [ %end.2, %if.end129 ], !dbg !8411
  %head.4 = phi %struct.rtx_def* [ null, %if.then32 ], [ null, %if.then57 ], [ %head.3, %cleanup313 ], [ %head.3, %if.end129 ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.4, metadata !8293, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end.3, metadata !8294, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i32 %n_validated_changes.3, metadata !8299, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.label(metadata !8409), !dbg !8634
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i64 0, i32 1, !dbg !8635
  %arrayidx327 = getelementptr inbounds %union.u, %union.u* %u325, i64 1, i32 0, i32 1, !dbg !8635
  %rt_rtx328 = bitcast %struct.object_block** %arrayidx327 to %struct.rtx_def**, !dbg !8635
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !8635
  call void @llvm.dbg.value(metadata %struct.rtx_def* %52, metadata !8297, metadata !DIExpression()), !dbg !8411
  %cmp329 = icmp eq %struct.basic_block_def* %other_bb, %new_dest, !dbg !8636
  br i1 %cmp329, label %if.end340, label %if.then331, !dbg !8638

if.then331:                                       ; preds = %no_body
  %call332 = call %struct.rtx_def* @block_label(%struct.basic_block_def* %new_dest) #6, !dbg !8639
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call332, metadata !8298, metadata !DIExpression()), !dbg !8411
  %tobool333 = icmp eq i32 %reversep, 0, !dbg !8641
  br i1 %tobool333, label %cond.false, label %cond.true, !dbg !8643

cond.true:                                        ; preds = %if.then331
  %call334 = call i32 @invert_jump_1(%struct.rtx_def* %2, %struct.rtx_def* %call332) #6, !dbg !8644
  %tobool335 = icmp eq i32 %call334, 0, !dbg !8644
  br i1 %tobool335, label %cancel, label %if.end340, !dbg !8641

cond.false:                                       ; preds = %if.then331
  %call336 = call i32 @redirect_jump_1(%struct.rtx_def* %2, %struct.rtx_def* %call332) #6, !dbg !8645
  %tobool337 = icmp eq i32 %call336, 0, !dbg !8645
  br i1 %tobool337, label %cancel, label %if.end340, !dbg !8643

if.end340:                                        ; preds = %cond.true, %cond.false, %no_body
  %new_label.0 = phi %struct.rtx_def* [ null, %no_body ], [ %call332, %cond.false ], [ %call332, %cond.true ], !dbg !8411
  call void @llvm.dbg.value(metadata %struct.rtx_def* %new_label.0, metadata !8298, metadata !DIExpression()), !dbg !8411
  %call341 = call i32 @verify_changes(i32 %n_validated_changes.3) #6, !dbg !8646
  %tobool342 = icmp eq i32 %call341, 0, !dbg !8646
  br i1 %tobool342, label %cancel, label %if.then343, !dbg !8648

if.then343:                                       ; preds = %if.end340
  call void @confirm_change_group() #6, !dbg !8649
  br i1 %cmp329, label %if.end664, label %if.then348, !dbg !8650

if.then348:                                       ; preds = %if.then343
  call void @redirect_jump_2(%struct.rtx_def* %2, %struct.rtx_def* %52, %struct.rtx_def* %new_label.0, i32 0, i32 %reversep) #6, !dbg !8651
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 1, !dbg !8652
  %53 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8652
  %tobool349 = icmp eq %struct.VEC_edge_gc* %53, null, !dbg !8652
  br i1 %tobool349, label %cond.end, label %cond.true350, !dbg !8652

cond.true350:                                     ; preds = %if.then348
  %base352 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %53, i64 0, i32 0, !dbg !8652
  br label %cond.end, !dbg !8652

cond.end:                                         ; preds = %if.then348, %cond.true350
  %cond354 = phi %struct.VEC_edge_base* [ %base352, %cond.true350 ], [ null, %if.then348 ], !dbg !8652
  %call355 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond354, i32 0) #7, !dbg !8652
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call355, i64 0, i32 7, !dbg !8652
  %54 = load i32, i32* %flags, align 8, !dbg !8652
  %and = and i32 %54, 1, !dbg !8652
  %tobool356 = icmp eq i32 %and, 0, !dbg !8652
  %55 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8652
  %tobool359 = icmp ne %struct.VEC_edge_gc* %55, null, !dbg !8652
  br i1 %tobool356, label %cond.false367, label %cond.true357, !dbg !8652

cond.true357:                                     ; preds = %cond.end
  br i1 %tobool359, label %cond.true360, label %cond.end364, !dbg !8652

cond.true360:                                     ; preds = %cond.true357
  %base362 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %55, i64 0, i32 0, !dbg !8652
  br label %cond.end364, !dbg !8652

cond.end364:                                      ; preds = %cond.true357, %cond.true360
  %cond365 = phi %struct.VEC_edge_base* [ %base362, %cond.true360 ], [ null, %cond.true357 ], !dbg !8652
  %call366 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond365, i32 1) #7, !dbg !8652
  br label %cond.end377, !dbg !8652

cond.false367:                                    ; preds = %cond.end
  br i1 %tobool359, label %cond.true370, label %cond.end374, !dbg !8652

cond.true370:                                     ; preds = %cond.false367
  %base372 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %55, i64 0, i32 0, !dbg !8652
  br label %cond.end374, !dbg !8652

cond.end374:                                      ; preds = %cond.false367, %cond.true370
  %cond375 = phi %struct.VEC_edge_base* [ %base372, %cond.true370 ], [ null, %cond.false367 ], !dbg !8652
  %call376 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond375, i32 0) #7, !dbg !8652
  br label %cond.end377, !dbg !8652

cond.end377:                                      ; preds = %cond.end374, %cond.end364
  %cond378 = phi %struct.edge_def* [ %call366, %cond.end364 ], [ %call376, %cond.end374 ], !dbg !8652
  call void @redirect_edge_succ(%struct.edge_def* %cond378, %struct.basic_block_def* %new_dest) #6, !dbg !8653
  %tobool379 = icmp eq i32 %reversep, 0, !dbg !8654
  br i1 %tobool379, label %if.end664, label %if.then380, !dbg !8655

if.then380:                                       ; preds = %cond.end377
  %56 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8656
  %tobool382 = icmp eq %struct.VEC_edge_gc* %56, null, !dbg !8656
  br i1 %tobool382, label %cond.end387, label %cond.true383, !dbg !8656

cond.true383:                                     ; preds = %if.then380
  %base385 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %56, i64 0, i32 0, !dbg !8656
  br label %cond.end387, !dbg !8656

cond.end387:                                      ; preds = %if.then380, %cond.true383
  %cond388 = phi %struct.VEC_edge_base* [ %base385, %cond.true383 ], [ null, %if.then380 ], !dbg !8656
  %call389 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond388, i32 0) #7, !dbg !8656
  %flags390 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call389, i64 0, i32 7, !dbg !8656
  %57 = load i32, i32* %flags390, align 8, !dbg !8656
  %and391 = and i32 %57, 1, !dbg !8656
  %tobool392 = icmp eq i32 %and391, 0, !dbg !8656
  %58 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8656
  %tobool395 = icmp ne %struct.VEC_edge_gc* %58, null, !dbg !8656
  br i1 %tobool392, label %cond.false403, label %cond.true393, !dbg !8656

cond.true393:                                     ; preds = %cond.end387
  br i1 %tobool395, label %cond.true396, label %cond.end400, !dbg !8656

cond.true396:                                     ; preds = %cond.true393
  %base398 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !8656
  br label %cond.end400, !dbg !8656

cond.end400:                                      ; preds = %cond.true393, %cond.true396
  %cond401 = phi %struct.VEC_edge_base* [ %base398, %cond.true396 ], [ null, %cond.true393 ], !dbg !8656
  %call402 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond401, i32 1) #7, !dbg !8656
  br label %cond.end413, !dbg !8656

cond.false403:                                    ; preds = %cond.end387
  br i1 %tobool395, label %cond.true406, label %cond.end410, !dbg !8656

cond.true406:                                     ; preds = %cond.false403
  %base408 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %58, i64 0, i32 0, !dbg !8656
  br label %cond.end410, !dbg !8656

cond.end410:                                      ; preds = %cond.false403, %cond.true406
  %cond411 = phi %struct.VEC_edge_base* [ %base408, %cond.true406 ], [ null, %cond.false403 ], !dbg !8656
  %call412 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond411, i32 0) #7, !dbg !8656
  br label %cond.end413, !dbg !8656

cond.end413:                                      ; preds = %cond.end410, %cond.end400
  %cond414 = phi %struct.edge_def* [ %call402, %cond.end400 ], [ %call412, %cond.end410 ], !dbg !8656
  %count415 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond414, i64 0, i32 9, !dbg !8657
  %59 = load i64, i64* %count415, align 8, !dbg !8657
  call void @llvm.dbg.value(metadata i64 %59, metadata !8397, metadata !DIExpression()), !dbg !8658
  %60 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8659
  %tobool417 = icmp eq %struct.VEC_edge_gc* %60, null, !dbg !8659
  br i1 %tobool417, label %cond.end422, label %cond.true418, !dbg !8659

cond.true418:                                     ; preds = %cond.end413
  %base420 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %60, i64 0, i32 0, !dbg !8659
  br label %cond.end422, !dbg !8659

cond.end422:                                      ; preds = %cond.end413, %cond.true418
  %cond423 = phi %struct.VEC_edge_base* [ %base420, %cond.true418 ], [ null, %cond.end413 ], !dbg !8659
  %call424 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond423, i32 0) #7, !dbg !8659
  %flags425 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call424, i64 0, i32 7, !dbg !8659
  %61 = load i32, i32* %flags425, align 8, !dbg !8659
  %and426 = and i32 %61, 1, !dbg !8659
  %tobool427 = icmp eq i32 %and426, 0, !dbg !8659
  %62 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8659
  %tobool430 = icmp ne %struct.VEC_edge_gc* %62, null, !dbg !8659
  br i1 %tobool427, label %cond.false438, label %cond.true428, !dbg !8659

cond.true428:                                     ; preds = %cond.end422
  br i1 %tobool430, label %cond.true431, label %cond.end435, !dbg !8659

cond.true431:                                     ; preds = %cond.true428
  %base433 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %62, i64 0, i32 0, !dbg !8659
  br label %cond.end435, !dbg !8659

cond.end435:                                      ; preds = %cond.true428, %cond.true431
  %cond436 = phi %struct.VEC_edge_base* [ %base433, %cond.true431 ], [ null, %cond.true428 ], !dbg !8659
  %call437 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond436, i32 0) #7, !dbg !8659
  br label %cond.end448, !dbg !8659

cond.false438:                                    ; preds = %cond.end422
  br i1 %tobool430, label %cond.true441, label %cond.end445, !dbg !8659

cond.true441:                                     ; preds = %cond.false438
  %base443 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %62, i64 0, i32 0, !dbg !8659
  br label %cond.end445, !dbg !8659

cond.end445:                                      ; preds = %cond.false438, %cond.true441
  %cond446 = phi %struct.VEC_edge_base* [ %base443, %cond.true441 ], [ null, %cond.false438 ], !dbg !8659
  %call447 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond446, i32 1) #7, !dbg !8659
  br label %cond.end448, !dbg !8659

cond.end448:                                      ; preds = %cond.end445, %cond.end435
  %cond449 = phi %struct.edge_def* [ %call437, %cond.end435 ], [ %call447, %cond.end445 ], !dbg !8659
  %count450 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond449, i64 0, i32 9, !dbg !8660
  %63 = load i64, i64* %count450, align 8, !dbg !8660
  %64 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8661
  %tobool452 = icmp eq %struct.VEC_edge_gc* %64, null, !dbg !8661
  br i1 %tobool452, label %cond.end457, label %cond.true453, !dbg !8661

cond.true453:                                     ; preds = %cond.end448
  %base455 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %64, i64 0, i32 0, !dbg !8661
  br label %cond.end457, !dbg !8661

cond.end457:                                      ; preds = %cond.end448, %cond.true453
  %cond458 = phi %struct.VEC_edge_base* [ %base455, %cond.true453 ], [ null, %cond.end448 ], !dbg !8661
  %call459 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond458, i32 0) #7, !dbg !8661
  %flags460 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call459, i64 0, i32 7, !dbg !8661
  %65 = load i32, i32* %flags460, align 8, !dbg !8661
  %and461 = and i32 %65, 1, !dbg !8661
  %tobool462 = icmp eq i32 %and461, 0, !dbg !8661
  %66 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8661
  %tobool465 = icmp ne %struct.VEC_edge_gc* %66, null, !dbg !8661
  br i1 %tobool462, label %cond.false473, label %cond.true463, !dbg !8661

cond.true463:                                     ; preds = %cond.end457
  br i1 %tobool465, label %cond.true466, label %cond.end470, !dbg !8661

cond.true466:                                     ; preds = %cond.true463
  %base468 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %66, i64 0, i32 0, !dbg !8661
  br label %cond.end470, !dbg !8661

cond.end470:                                      ; preds = %cond.true463, %cond.true466
  %cond471 = phi %struct.VEC_edge_base* [ %base468, %cond.true466 ], [ null, %cond.true463 ], !dbg !8661
  %call472 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond471, i32 1) #7, !dbg !8661
  br label %cond.end483, !dbg !8661

cond.false473:                                    ; preds = %cond.end457
  br i1 %tobool465, label %cond.true476, label %cond.end480, !dbg !8661

cond.true476:                                     ; preds = %cond.false473
  %base478 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %66, i64 0, i32 0, !dbg !8661
  br label %cond.end480, !dbg !8661

cond.end480:                                      ; preds = %cond.false473, %cond.true476
  %cond481 = phi %struct.VEC_edge_base* [ %base478, %cond.true476 ], [ null, %cond.false473 ], !dbg !8661
  %call482 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond481, i32 0) #7, !dbg !8661
  br label %cond.end483, !dbg !8661

cond.end483:                                      ; preds = %cond.end480, %cond.end470
  %cond484 = phi %struct.edge_def* [ %call472, %cond.end470 ], [ %call482, %cond.end480 ], !dbg !8661
  %count485 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond484, i64 0, i32 9, !dbg !8662
  store i64 %63, i64* %count485, align 8, !dbg !8663
  %67 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8664
  %tobool487 = icmp eq %struct.VEC_edge_gc* %67, null, !dbg !8664
  br i1 %tobool487, label %cond.end492, label %cond.true488, !dbg !8664

cond.true488:                                     ; preds = %cond.end483
  %base490 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %67, i64 0, i32 0, !dbg !8664
  br label %cond.end492, !dbg !8664

cond.end492:                                      ; preds = %cond.end483, %cond.true488
  %cond493 = phi %struct.VEC_edge_base* [ %base490, %cond.true488 ], [ null, %cond.end483 ], !dbg !8664
  %call494 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond493, i32 0) #7, !dbg !8664
  %flags495 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call494, i64 0, i32 7, !dbg !8664
  %68 = load i32, i32* %flags495, align 8, !dbg !8664
  %and496 = and i32 %68, 1, !dbg !8664
  %tobool497 = icmp eq i32 %and496, 0, !dbg !8664
  %69 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8664
  %tobool500 = icmp ne %struct.VEC_edge_gc* %69, null, !dbg !8664
  br i1 %tobool497, label %cond.false508, label %cond.true498, !dbg !8664

cond.true498:                                     ; preds = %cond.end492
  br i1 %tobool500, label %cond.true501, label %cond.end505, !dbg !8664

cond.true501:                                     ; preds = %cond.true498
  %base503 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %69, i64 0, i32 0, !dbg !8664
  br label %cond.end505, !dbg !8664

cond.end505:                                      ; preds = %cond.true498, %cond.true501
  %cond506 = phi %struct.VEC_edge_base* [ %base503, %cond.true501 ], [ null, %cond.true498 ], !dbg !8664
  %call507 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond506, i32 0) #7, !dbg !8664
  br label %cond.end518, !dbg !8664

cond.false508:                                    ; preds = %cond.end492
  br i1 %tobool500, label %cond.true511, label %cond.end515, !dbg !8664

cond.true511:                                     ; preds = %cond.false508
  %base513 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %69, i64 0, i32 0, !dbg !8664
  br label %cond.end515, !dbg !8664

cond.end515:                                      ; preds = %cond.false508, %cond.true511
  %cond516 = phi %struct.VEC_edge_base* [ %base513, %cond.true511 ], [ null, %cond.false508 ], !dbg !8664
  %call517 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond516, i32 1) #7, !dbg !8664
  br label %cond.end518, !dbg !8664

cond.end518:                                      ; preds = %cond.end515, %cond.end505
  %cond519 = phi %struct.edge_def* [ %call507, %cond.end505 ], [ %call517, %cond.end515 ], !dbg !8664
  %count520 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond519, i64 0, i32 9, !dbg !8665
  store i64 %59, i64* %count520, align 8, !dbg !8666
  %70 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8667
  %tobool522 = icmp eq %struct.VEC_edge_gc* %70, null, !dbg !8667
  br i1 %tobool522, label %cond.end527, label %cond.true523, !dbg !8667

cond.true523:                                     ; preds = %cond.end518
  %base525 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %70, i64 0, i32 0, !dbg !8667
  br label %cond.end527, !dbg !8667

cond.end527:                                      ; preds = %cond.end518, %cond.true523
  %cond528 = phi %struct.VEC_edge_base* [ %base525, %cond.true523 ], [ null, %cond.end518 ], !dbg !8667
  %call529 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond528, i32 0) #7, !dbg !8667
  %flags530 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call529, i64 0, i32 7, !dbg !8667
  %71 = load i32, i32* %flags530, align 8, !dbg !8667
  %and531 = and i32 %71, 1, !dbg !8667
  %tobool532 = icmp eq i32 %and531, 0, !dbg !8667
  %72 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8667
  %tobool535 = icmp ne %struct.VEC_edge_gc* %72, null, !dbg !8667
  br i1 %tobool532, label %cond.false543, label %cond.true533, !dbg !8667

cond.true533:                                     ; preds = %cond.end527
  br i1 %tobool535, label %cond.true536, label %cond.end540, !dbg !8667

cond.true536:                                     ; preds = %cond.true533
  %base538 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %72, i64 0, i32 0, !dbg !8667
  br label %cond.end540, !dbg !8667

cond.end540:                                      ; preds = %cond.true533, %cond.true536
  %cond541 = phi %struct.VEC_edge_base* [ %base538, %cond.true536 ], [ null, %cond.true533 ], !dbg !8667
  %call542 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond541, i32 1) #7, !dbg !8667
  br label %cond.end553, !dbg !8667

cond.false543:                                    ; preds = %cond.end527
  br i1 %tobool535, label %cond.true546, label %cond.end550, !dbg !8667

cond.true546:                                     ; preds = %cond.false543
  %base548 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %72, i64 0, i32 0, !dbg !8667
  br label %cond.end550, !dbg !8667

cond.end550:                                      ; preds = %cond.false543, %cond.true546
  %cond551 = phi %struct.VEC_edge_base* [ %base548, %cond.true546 ], [ null, %cond.false543 ], !dbg !8667
  %call552 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond551, i32 0) #7, !dbg !8667
  br label %cond.end553, !dbg !8667

cond.end553:                                      ; preds = %cond.end550, %cond.end540
  %cond554 = phi %struct.edge_def* [ %call542, %cond.end540 ], [ %call552, %cond.end550 ], !dbg !8667
  %probability555 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond554, i64 0, i32 8, !dbg !8668
  %73 = load i32, i32* %probability555, align 4, !dbg !8668
  %74 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8669
  %tobool558 = icmp eq %struct.VEC_edge_gc* %74, null, !dbg !8669
  br i1 %tobool558, label %cond.end563, label %cond.true559, !dbg !8669

cond.true559:                                     ; preds = %cond.end553
  %base561 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %74, i64 0, i32 0, !dbg !8669
  br label %cond.end563, !dbg !8669

cond.end563:                                      ; preds = %cond.end553, %cond.true559
  %cond564 = phi %struct.VEC_edge_base* [ %base561, %cond.true559 ], [ null, %cond.end553 ], !dbg !8669
  %call565 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond564, i32 0) #7, !dbg !8669
  %flags566 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call565, i64 0, i32 7, !dbg !8669
  %75 = load i32, i32* %flags566, align 8, !dbg !8669
  %and567 = and i32 %75, 1, !dbg !8669
  %tobool568 = icmp eq i32 %and567, 0, !dbg !8669
  %76 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8669
  %tobool571 = icmp ne %struct.VEC_edge_gc* %76, null, !dbg !8669
  br i1 %tobool568, label %cond.false579, label %cond.true569, !dbg !8669

cond.true569:                                     ; preds = %cond.end563
  br i1 %tobool571, label %cond.true572, label %cond.end576, !dbg !8669

cond.true572:                                     ; preds = %cond.true569
  %base574 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %76, i64 0, i32 0, !dbg !8669
  br label %cond.end576, !dbg !8669

cond.end576:                                      ; preds = %cond.true569, %cond.true572
  %cond577 = phi %struct.VEC_edge_base* [ %base574, %cond.true572 ], [ null, %cond.true569 ], !dbg !8669
  %call578 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond577, i32 0) #7, !dbg !8669
  br label %cond.end589, !dbg !8669

cond.false579:                                    ; preds = %cond.end563
  br i1 %tobool571, label %cond.true582, label %cond.end586, !dbg !8669

cond.true582:                                     ; preds = %cond.false579
  %base584 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %76, i64 0, i32 0, !dbg !8669
  br label %cond.end586, !dbg !8669

cond.end586:                                      ; preds = %cond.false579, %cond.true582
  %cond587 = phi %struct.VEC_edge_base* [ %base584, %cond.true582 ], [ null, %cond.false579 ], !dbg !8669
  %call588 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond587, i32 1) #7, !dbg !8669
  br label %cond.end589, !dbg !8669

cond.end589:                                      ; preds = %cond.end586, %cond.end576
  %cond590 = phi %struct.edge_def* [ %call578, %cond.end576 ], [ %call588, %cond.end586 ], !dbg !8669
  %probability591 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond590, i64 0, i32 8, !dbg !8670
  %77 = load i32, i32* %probability591, align 4, !dbg !8670
  %78 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8671
  %tobool593 = icmp eq %struct.VEC_edge_gc* %78, null, !dbg !8671
  br i1 %tobool593, label %cond.end598, label %cond.true594, !dbg !8671

cond.true594:                                     ; preds = %cond.end589
  %base596 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %78, i64 0, i32 0, !dbg !8671
  br label %cond.end598, !dbg !8671

cond.end598:                                      ; preds = %cond.end589, %cond.true594
  %cond599 = phi %struct.VEC_edge_base* [ %base596, %cond.true594 ], [ null, %cond.end589 ], !dbg !8671
  %call600 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond599, i32 0) #7, !dbg !8671
  %flags601 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call600, i64 0, i32 7, !dbg !8671
  %79 = load i32, i32* %flags601, align 8, !dbg !8671
  %and602 = and i32 %79, 1, !dbg !8671
  %tobool603 = icmp eq i32 %and602, 0, !dbg !8671
  %80 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8671
  %tobool606 = icmp ne %struct.VEC_edge_gc* %80, null, !dbg !8671
  br i1 %tobool603, label %cond.false614, label %cond.true604, !dbg !8671

cond.true604:                                     ; preds = %cond.end598
  br i1 %tobool606, label %cond.true607, label %cond.end611, !dbg !8671

cond.true607:                                     ; preds = %cond.true604
  %base609 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %80, i64 0, i32 0, !dbg !8671
  br label %cond.end611, !dbg !8671

cond.end611:                                      ; preds = %cond.true604, %cond.true607
  %cond612 = phi %struct.VEC_edge_base* [ %base609, %cond.true607 ], [ null, %cond.true604 ], !dbg !8671
  %call613 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond612, i32 1) #7, !dbg !8671
  br label %cond.end624, !dbg !8671

cond.false614:                                    ; preds = %cond.end598
  br i1 %tobool606, label %cond.true617, label %cond.end621, !dbg !8671

cond.true617:                                     ; preds = %cond.false614
  %base619 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %80, i64 0, i32 0, !dbg !8671
  br label %cond.end621, !dbg !8671

cond.end621:                                      ; preds = %cond.false614, %cond.true617
  %cond622 = phi %struct.VEC_edge_base* [ %base619, %cond.true617 ], [ null, %cond.false614 ], !dbg !8671
  %call623 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond622, i32 0) #7, !dbg !8671
  br label %cond.end624, !dbg !8671

cond.end624:                                      ; preds = %cond.end621, %cond.end611
  %cond625 = phi %struct.edge_def* [ %call613, %cond.end611 ], [ %call623, %cond.end621 ], !dbg !8671
  %probability626 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond625, i64 0, i32 8, !dbg !8672
  store i32 %77, i32* %probability626, align 4, !dbg !8673
  %81 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8674
  %tobool629 = icmp eq %struct.VEC_edge_gc* %81, null, !dbg !8674
  br i1 %tobool629, label %cond.end634, label %cond.true630, !dbg !8674

cond.true630:                                     ; preds = %cond.end624
  %base632 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %81, i64 0, i32 0, !dbg !8674
  br label %cond.end634, !dbg !8674

cond.end634:                                      ; preds = %cond.end624, %cond.true630
  %cond635 = phi %struct.VEC_edge_base* [ %base632, %cond.true630 ], [ null, %cond.end624 ], !dbg !8674
  %call636 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond635, i32 0) #7, !dbg !8674
  %flags637 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call636, i64 0, i32 7, !dbg !8674
  %82 = load i32, i32* %flags637, align 8, !dbg !8674
  %and638 = and i32 %82, 1, !dbg !8674
  %tobool639 = icmp eq i32 %and638, 0, !dbg !8674
  %83 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !8674
  %tobool642 = icmp ne %struct.VEC_edge_gc* %83, null, !dbg !8674
  br i1 %tobool639, label %cond.false650, label %cond.true640, !dbg !8674

cond.true640:                                     ; preds = %cond.end634
  br i1 %tobool642, label %cond.true643, label %cond.end647, !dbg !8674

cond.true643:                                     ; preds = %cond.true640
  %base645 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %83, i64 0, i32 0, !dbg !8674
  br label %cond.end647, !dbg !8674

cond.end647:                                      ; preds = %cond.true640, %cond.true643
  %cond648 = phi %struct.VEC_edge_base* [ %base645, %cond.true643 ], [ null, %cond.true640 ], !dbg !8674
  %call649 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond648, i32 0) #7, !dbg !8674
  br label %cond.end660, !dbg !8674

cond.false650:                                    ; preds = %cond.end634
  br i1 %tobool642, label %cond.true653, label %cond.end657, !dbg !8674

cond.true653:                                     ; preds = %cond.false650
  %base655 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %83, i64 0, i32 0, !dbg !8674
  br label %cond.end657, !dbg !8674

cond.end657:                                      ; preds = %cond.false650, %cond.true653
  %cond658 = phi %struct.VEC_edge_base* [ %base655, %cond.true653 ], [ null, %cond.false650 ], !dbg !8674
  %call659 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond658, i32 1) #7, !dbg !8674
  br label %cond.end660, !dbg !8674

cond.end660:                                      ; preds = %cond.end657, %cond.end647
  %cond661 = phi %struct.edge_def* [ %call649, %cond.end647 ], [ %call659, %cond.end657 ], !dbg !8674
  %probability662 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond661, i64 0, i32 8, !dbg !8675
  store i32 %73, i32* %probability662, align 4, !dbg !8676
  call void @update_br_prob_note(%struct.basic_block_def* %test_bb) #6, !dbg !8677
  br label %if.end664, !dbg !8678

if.end664:                                        ; preds = %cond.end377, %if.then343, %cond.end660
  %cmp665 = icmp eq %struct.rtx_def* %head.4, null, !dbg !8679
  br i1 %cmp665, label %if.end786, label %if.then667, !dbg !8680

if.then667:                                       ; preds = %if.end664
  %84 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl2, align 8, !dbg !8681
  %end_671 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %84, i64 0, i32 1, !dbg !8681
  %85 = load %struct.rtx_def*, %struct.rtx_def** %end_671, align 8, !dbg !8681
  %cmp672 = icmp eq %struct.rtx_def* %end.3, %85, !dbg !8683
  br i1 %cmp672, label %if.then674, label %if.end682, !dbg !8684

if.then674:                                       ; preds = %if.then667
  %86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %head.4, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8685
  %87 = bitcast %union.rtunion_def* %86 to i64*, !dbg !8685
  %88 = load i64, i64* %87, align 8, !dbg !8685
  %89 = bitcast %struct.rtx_def** %end_671 to i64*, !dbg !8686
  store i64 %88, i64* %89, align 8, !dbg !8686
  br label %if.end682, !dbg !8687

if.end682:                                        ; preds = %if.then674, %if.then667
  call void @llvm.dbg.value(metadata %struct.rtx_def* %head.4, metadata !8403, metadata !DIExpression()), !dbg !8688
  br label %do.body, !dbg !8689

do.body:                                          ; preds = %land.end781, %if.end682
  %insn668.0 = phi %struct.rtx_def* [ %head.4, %if.end682 ], [ %insn668.1, %land.end781 ], !dbg !8688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn668.0, metadata !8403, metadata !DIExpression()), !dbg !8688
  %90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn668.0, i64 0, i32 0, !dbg !8690
  %bf.load683 = load i32, i32* %90, align 8, !dbg !8690
  %bf.clear684 = and i32 %bf.load683, 65535, !dbg !8690
  %cmp685 = icmp eq i32 %bf.clear684, 8, !dbg !8690
  br i1 %cmp685, label %if.end703, label %lor.lhs.false687, !dbg !8690

lor.lhs.false687:                                 ; preds = %do.body
  %cmp690 = icmp eq i32 %bf.clear684, 7, !dbg !8690
  br i1 %cmp690, label %if.end703, label %lor.lhs.false692, !dbg !8690

lor.lhs.false692:                                 ; preds = %lor.lhs.false687
  %cmp695 = icmp eq i32 %bf.clear684, 9, !dbg !8690
  br i1 %cmp695, label %if.end703, label %lor.lhs.false697, !dbg !8690

lor.lhs.false697:                                 ; preds = %lor.lhs.false692
  %cmp700 = icmp eq i32 %bf.clear684, 10, !dbg !8690
  br i1 %cmp700, label %if.end703, label %cleanup769, !dbg !8692

if.end703:                                        ; preds = %lor.lhs.false697, %lor.lhs.false692, %lor.lhs.false687, %do.body
  %call704 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn668.0, i32 4, %struct.rtx_def* null) #6, !dbg !8693
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call704, metadata !8406, metadata !DIExpression()), !dbg !8694
  %tobool705 = icmp eq %struct.rtx_def* %call704, null, !dbg !8695
  br i1 %tobool705, label %cleanup769, label %if.end707, !dbg !8697

if.end707:                                        ; preds = %if.end703
  %bf.load708 = load i32, i32* %90, align 8, !dbg !8698
  %bf.clear709 = and i32 %bf.load708, 65535, !dbg !8698
  %cmp710 = icmp eq i32 %bf.clear709, 8, !dbg !8698
  br i1 %cmp710, label %cond.true727, label %lor.lhs.false712, !dbg !8698

lor.lhs.false712:                                 ; preds = %if.end707
  %cmp715 = icmp eq i32 %bf.clear709, 7, !dbg !8698
  br i1 %cmp715, label %cond.true727, label %lor.lhs.false717, !dbg !8698

lor.lhs.false717:                                 ; preds = %lor.lhs.false712
  %cmp720 = icmp eq i32 %bf.clear709, 9, !dbg !8698
  br i1 %cmp720, label %cond.true727, label %lor.lhs.false722, !dbg !8698

lor.lhs.false722:                                 ; preds = %lor.lhs.false717
  %cmp725 = icmp eq i32 %bf.clear709, 10, !dbg !8698
  br i1 %cmp725, label %cond.true727, label %cond.end750, !dbg !8698

cond.true727:                                     ; preds = %lor.lhs.false722, %lor.lhs.false717, %lor.lhs.false712, %if.end707
  %u728 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn668.0, i64 0, i32 1, !dbg !8698
  %91 = getelementptr inbounds %union.u, %union.u* %u728, i64 1, i32 0, i32 0, i64 0, !dbg !8698
  %92 = bitcast %union.rtunion_def* %91 to i32**, !dbg !8698
  %93 = load i32*, i32** %92, align 8, !dbg !8698
  %bf.load732 = load i32, i32* %93, align 8, !dbg !8698
  %bf.clear733 = and i32 %bf.load732, 65535, !dbg !8698
  %cmp734 = icmp eq i32 %bf.clear733, 23, !dbg !8698
  %94 = bitcast i32* %93 to %struct.rtx_def*, !dbg !8698
  br i1 %cmp734, label %cond.end750, label %cond.false741, !dbg !8698

cond.false741:                                    ; preds = %cond.true727
  %call746 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn668.0, %struct.rtx_def* %94) #6, !dbg !8698
  br label %cond.end750, !dbg !8698

cond.end750:                                      ; preds = %lor.lhs.false722, %cond.false741, %cond.true727
  %cond751 = phi %struct.rtx_def* [ %call746, %cond.false741 ], [ %94, %cond.true727 ], [ null, %lor.lhs.false722 ], !dbg !8698
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond751, metadata !8408, metadata !DIExpression()), !dbg !8694
  %tobool752 = icmp eq %struct.rtx_def* %cond751, null, !dbg !8699
  br i1 %tobool752, label %if.then767, label %lor.lhs.false753, !dbg !8701

lor.lhs.false753:                                 ; preds = %cond.end750
  %95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond751, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8702
  %rt_rtx757 = bitcast %union.rtunion_def* %95 to %struct.rtx_def**, !dbg !8702
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx757, align 8, !dbg !8702
  %call758 = call i32 @function_invariant_p(%struct.rtx_def* %96) #6, !dbg !8703
  %tobool759 = icmp eq i32 %call758, 0, !dbg !8703
  br i1 %tobool759, label %if.then767, label %lor.lhs.false760, !dbg !8704

lor.lhs.false760:                                 ; preds = %lor.lhs.false753
  %arrayidx763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call704, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8705
  %rt_rtx764 = bitcast %union.rtunion_def* %arrayidx763 to %struct.rtx_def**, !dbg !8705
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx764, align 8, !dbg !8705
  %call765 = call i32 @function_invariant_p(%struct.rtx_def* %97) #6, !dbg !8706
  %tobool766 = icmp eq i32 %call765, 0, !dbg !8706
  br i1 %tobool766, label %if.then767, label %cleanup769, !dbg !8707

if.then767:                                       ; preds = %lor.lhs.false760, %lor.lhs.false753, %cond.end750
  call void @remove_note(%struct.rtx_def* %insn668.0, %struct.rtx_def* nonnull %call704) #6, !dbg !8708
  br label %cleanup769, !dbg !8708

cleanup769:                                       ; preds = %lor.lhs.false760, %if.end703, %if.then767, %lor.lhs.false697
  %cmp773 = icmp eq %struct.rtx_def* %insn668.0, %end.3, !dbg !8709
  br i1 %cmp773, label %land.end781, label %land.rhs775, !dbg !8710

land.rhs775:                                      ; preds = %cleanup769
  %98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn668.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8711
  %rt_rtx779 = bitcast %union.rtunion_def* %98 to %struct.rtx_def**, !dbg !8711
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx779, align 8, !dbg !8711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %99, metadata !8403, metadata !DIExpression()), !dbg !8688
  %tobool780 = icmp ne %struct.rtx_def* %99, null, !dbg !8710
  br label %land.end781

land.end781:                                      ; preds = %cleanup769, %land.rhs775
  %insn668.1 = phi %struct.rtx_def* [ %99, %land.rhs775 ], [ %end.3, %cleanup769 ], !dbg !8688
  %100 = phi i1 [ %tobool780, %land.rhs775 ], [ false, %cleanup769 ], !dbg !8688
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn668.1, metadata !8403, metadata !DIExpression()), !dbg !8688
  br i1 %100, label %do.body, label %do.end, !dbg !8712, !llvm.loop !8713

do.end:                                           ; preds = %land.end781
  %101 = load %struct.rtx_def*, %struct.rtx_def** %earliest, align 8, !dbg !8715
  call void @llvm.dbg.value(metadata %struct.rtx_def* %101, metadata !8296, metadata !DIExpression()), !dbg !8411
  %102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8715
  %rt_rtx785 = bitcast %union.rtunion_def* %102 to %struct.rtx_def**, !dbg !8715
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx785, align 8, !dbg !8715
  call void @reorder_insns(%struct.rtx_def* nonnull %head.4, %struct.rtx_def* %end.3, %struct.rtx_def* %103) #6, !dbg !8716
  br label %if.end786, !dbg !8717

if.end786:                                        ; preds = %if.end664, %do.end
  br i1 %cmp329, label %if.then789, label %cleanup826, !dbg !8718

if.then789:                                       ; preds = %if.end786
  %call790 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %2) #6, !dbg !8719
  %succs791 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %test_bb, i64 0, i32 1, !dbg !8722
  %104 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs791, align 8, !dbg !8722
  %tobool792 = icmp eq %struct.VEC_edge_gc* %104, null, !dbg !8722
  br i1 %tobool792, label %cond.end797, label %cond.true793, !dbg !8722

cond.true793:                                     ; preds = %if.then789
  %base795 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %104, i64 0, i32 0, !dbg !8722
  br label %cond.end797, !dbg !8722

cond.end797:                                      ; preds = %if.then789, %cond.true793
  %cond798 = phi %struct.VEC_edge_base* [ %base795, %cond.true793 ], [ null, %if.then789 ], !dbg !8722
  %call799 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond798, i32 0) #7, !dbg !8722
  %flags800 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call799, i64 0, i32 7, !dbg !8722
  %105 = load i32, i32* %flags800, align 8, !dbg !8722
  %and801 = and i32 %105, 1, !dbg !8722
  %tobool802 = icmp eq i32 %and801, 0, !dbg !8722
  %106 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs791, align 8, !dbg !8722
  %tobool805 = icmp ne %struct.VEC_edge_gc* %106, null, !dbg !8722
  br i1 %tobool802, label %cond.false813, label %cond.true803, !dbg !8722

cond.true803:                                     ; preds = %cond.end797
  br i1 %tobool805, label %cond.true806, label %cond.end810, !dbg !8722

cond.true806:                                     ; preds = %cond.true803
  %base808 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %106, i64 0, i32 0, !dbg !8722
  br label %cond.end810, !dbg !8722

cond.end810:                                      ; preds = %cond.true803, %cond.true806
  %cond811 = phi %struct.VEC_edge_base* [ %base808, %cond.true806 ], [ null, %cond.true803 ], !dbg !8722
  %call812 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond811, i32 1) #7, !dbg !8722
  br label %cond.end823, !dbg !8722

cond.false813:                                    ; preds = %cond.end797
  br i1 %tobool805, label %cond.true816, label %cond.end820, !dbg !8722

cond.true816:                                     ; preds = %cond.false813
  %base818 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %106, i64 0, i32 0, !dbg !8722
  br label %cond.end820, !dbg !8722

cond.end820:                                      ; preds = %cond.false813, %cond.true816
  %cond821 = phi %struct.VEC_edge_base* [ %base818, %cond.true816 ], [ null, %cond.false813 ], !dbg !8722
  %call822 = call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond821, i32 0) #7, !dbg !8722
  br label %cond.end823, !dbg !8722

cond.end823:                                      ; preds = %cond.end820, %cond.end810
  %cond824 = phi %struct.edge_def* [ %call812, %cond.end810 ], [ %call822, %cond.end820 ], !dbg !8722
  call void @remove_edge(%struct.edge_def* %cond824) #6, !dbg !8723
  br label %cleanup826, !dbg !8724

cancel:                                           ; preds = %cond.true, %cond.false, %if.end340
  call void @llvm.dbg.label(metadata !8410), !dbg !8725
  call void @cancel_changes(i32 0) #6, !dbg !8726
  br label %cleanup826, !dbg !8727

cleanup826:                                       ; preds = %while.end, %if.end786, %cond.end823, %cleanup125, %cleanup313, %cancel
  %retval.5 = phi i32 [ 0, %cancel ], [ 0, %cleanup125 ], [ 0, %cleanup313 ], [ 0, %while.end ], [ 1, %cond.end823 ], [ 1, %if.end786 ], !dbg !8411
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8728
  ret i32 %retval.5, !dbg !8728
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @df_bb_replace(i32, %struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @verify_changes(i32) local_unnamed_addr #1

declare dso_local i32 @num_validated_changes() local_unnamed_addr #1

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal i32 @find_memory(%struct.rtx_def** %px, i8* %data) #4 !dbg !8729 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %px, metadata !8733, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %data, metadata !8734, metadata !DIExpression()), !dbg !8735
  %0 = bitcast %struct.rtx_def** %px to i32**, !dbg !8736
  %1 = load i32*, i32** %0, align 8, !dbg !8736
  %bf.load = load i32, i32* %1, align 8, !dbg !8736
  %bf.clear = and i32 %bf.load, 65535, !dbg !8736
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !8736
  %conv = zext i1 %cmp to i32, !dbg !8736
  ret i32 %conv, !dbg !8737
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !8738 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 0, metadata !8749, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8750, metadata !DIExpression()), !dbg !8751
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !8752
  %1 = load i64, i64* %0, align 8, !dbg !8752
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !8753
  store i64 %1, i64* %2, align 8, !dbg !8753
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !8754
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !8755
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !8756
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !8759
  br label %while.body, !dbg !8759

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !8760
  br i1 %tobool, label %if.then, label %if.end, !dbg !8761

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !8762
  br label %while.end, !dbg !8764

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !8765

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !8759, !llvm.loop !8766

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !8768

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !8768
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !8770
  %7 = load i32, i32* %indx9, align 8, !dbg !8770
  %cmp11 = icmp eq i32 %7, 0, !dbg !8771
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !8772

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !8773
  %8 = load i32, i32* %indx14, align 8, !dbg !8773
  %mul = shl i32 %8, 7, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %mul, metadata !8749, metadata !DIExpression()), !dbg !8751
  br label %if.end15, !dbg !8775

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !8749, metadata !DIExpression()), !dbg !8751
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8776
  store i32 0, i32* %word_no, align 8, !dbg !8777
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !8778
  %9 = load i64, i64* %arrayidx, align 8, !dbg !8778
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8779
  store i64 %9, i64* %bits21, align 8, !dbg !8780
  %tobool23 = icmp eq i64 %9, 0, !dbg !8781
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !8781
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %add, metadata !8749, metadata !DIExpression()), !dbg !8751
  store i32 %add, i32* %bit_no, align 4, !dbg !8783
  ret void, !dbg !8784
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !8785 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8789, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8790, metadata !DIExpression()), !dbg !8794
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8795
  %0 = load i64, i64* %bits, align 8, !dbg !8795
  %tobool = icmp eq i64 %0, 0, !dbg !8796
  br i1 %tobool, label %if.end, label %next_bit, !dbg !8797

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !8798
  br label %next_bit, !dbg !8801

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !8791), !dbg !8802
  br label %while.cond, !dbg !8801

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !8803
  %and = and i64 %2, 1, !dbg !8804
  %tobool2 = icmp eq i64 %and, 0, !dbg !8805
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !8801

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !8806
  store i64 %shr, i64* %bits, align 8, !dbg !8806
  %3 = load i32, i32* %bit_no, align 4, !dbg !8808
  %add = add i32 %3, 1, !dbg !8808
  store i32 %add, i32* %bit_no, align 4, !dbg !8808
  %.pre = load i64, i64* %bits, align 8, !dbg !8803
  br label %while.cond, !dbg !8801, !llvm.loop !8809

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !8811
  %sub = add i32 %4, 63, !dbg !8812
  %div = and i32 %sub, -64, !dbg !8813
  store i32 %div, i32* %bit_no, align 4, !dbg !8814
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !8815
  %5 = load i32, i32* %word_no, align 8, !dbg !8816
  %inc = add i32 %5, 1, !dbg !8816
  store i32 %inc, i32* %word_no, align 8, !dbg !8816
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !8817
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !8817
  br label %while.body6, !dbg !8818

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !8819

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !8820
  %cmp = icmp eq i32 %8, 2, !dbg !8821
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !8817
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !8819

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !8798
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !8798
  %10 = load i64, i64* %arrayidx, align 8, !dbg !8798
  store i64 %10, i64* %bits, align 8, !dbg !8822
  %tobool14 = icmp eq i64 %10, 0, !dbg !8823
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !8825

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !8826
  %add17 = add i32 %11, 64, !dbg !8826
  store i32 %add17, i32* %bit_no, align 4, !dbg !8826
  %12 = load i32, i32* %word_no, align 8, !dbg !8827
  %inc19 = add i32 %12, 1, !dbg !8827
  store i32 %inc19, i32* %word_no, align 8, !dbg !8827
  br label %while.cond7, !dbg !8819, !llvm.loop !8828

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !8817
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !8830
  %14 = load i64, i64* %13, align 8, !dbg !8830
  store i64 %14, i64* %6, align 8, !dbg !8831
  %tobool24 = icmp eq i64 %14, 0, !dbg !8832
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !8834

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !8834
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !8835
  %16 = load i32, i32* %indx, align 8, !dbg !8835
  %mul28 = shl i32 %16, 7, !dbg !8836
  store i32 %mul28, i32* %bit_no, align 4, !dbg !8837
  store i32 0, i32* %word_no, align 8, !dbg !8838
  br label %while.body6, !dbg !8818, !llvm.loop !8839

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !8841

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !8841

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !8794
  ret i8 %retval.0, !dbg !8841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !8842 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !8846, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !8847, metadata !DIExpression()), !dbg !8848
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !8849
  %0 = load i64, i64* %bits, align 8, !dbg !8850
  %shr = lshr i64 %0, 1, !dbg !8850
  store i64 %shr, i64* %bits, align 8, !dbg !8850
  %1 = load i32, i32* %bit_no, align 4, !dbg !8851
  %add = add i32 %1, 1, !dbg !8851
  store i32 %add, i32* %bit_no, align 4, !dbg !8851
  ret void, !dbg !8852
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local void @df_simulate_initialize_backwards(%struct.basic_block_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @df_simulate_find_defs(%struct.rtx_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_intersect_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @block_label(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @invert_jump_1(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local i32 @redirect_jump_1(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local void @confirm_change_group() local_unnamed_addr #1

declare dso_local void @redirect_jump_2(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) local_unnamed_addr #1

declare dso_local void @update_br_prob_note(%struct.basic_block_def*) local_unnamed_addr #1

declare dso_local i32 @function_invariant_p(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3528, !3529, !3530}
!llvm.ident = !{!3531}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_rtl_ifcvt", scope: !2, file: !3, line: 4240, type: !3491, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2237, globals: !3488, nameTableKind: None)
!3 = !DIFile(filename: "ifcvt.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !189, !317, !324, !330, !335, !344, !348, !353, !372, !379, !386, !580, !723, !745}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !6, line: 104, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 74, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!16 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!105 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!106 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!107 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!108 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!109 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!110 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!111 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!112 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!113 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!114 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!115 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!116 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!117 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!118 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!119 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!120 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!121 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!122 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!123 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!124 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!125 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!126 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!127 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!128 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!129 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!130 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!131 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!132 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!133 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!134 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!135 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!136 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!137 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!138 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!139 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!140 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!141 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!142 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!143 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!144 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !190, line: 7, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316}
!192 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!284 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!285 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!286 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!288 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!289 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!290 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!291 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!292 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!293 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!294 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!295 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!296 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!297 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!298 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!299 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!300 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!301 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!302 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!303 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!304 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!305 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!306 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!307 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!312 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!315 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!316 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !318, line: 30, baseType: !7, size: 32, elements: !319)
!318 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!319 = !{!320, !321, !322, !323}
!320 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!323 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!324 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !325, line: 363, baseType: !7, size: 32, elements: !326)
!325 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!326 = !{!327, !328, !329}
!327 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!328 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!329 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !325, line: 355, baseType: !7, size: 32, elements: !331)
!331 = !{!332, !333, !334}
!332 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !336, line: 31, baseType: !7, size: 32, elements: !337)
!336 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!337 = !{!338, !339, !340, !341, !342, !343}
!338 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!342 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !336, line: 91, baseType: !7, size: 32, elements: !345)
!345 = !{!346, !347}
!346 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!347 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !349, line: 474, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!350 = !{!351, !352}
!351 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!352 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !354, line: 280, baseType: !7, size: 32, elements: !355)
!354 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!355 = !{!356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371}
!356 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !354, line: 1817, baseType: !7, size: 32, elements: !373)
!373 = !{!374, !375, !376, !377, !378}
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !354, line: 1805, baseType: !7, size: 32, elements: !380)
!380 = !{!381, !382, !383, !384, !385}
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!384 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !354, line: 39, baseType: !7, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579}
!388 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!389 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!390 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!391 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!392 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!393 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!394 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!395 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!396 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!397 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!398 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!399 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!400 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!401 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!402 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!403 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!404 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!405 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!406 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!407 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!408 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!409 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!410 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!411 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!412 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!413 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!414 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!415 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!416 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!417 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!418 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!419 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!420 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!422 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!423 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!424 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!425 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!426 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!427 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!428 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!429 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!430 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!431 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!432 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!433 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!434 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!435 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!436 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!437 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!438 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!439 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!440 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!441 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!442 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!443 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!444 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!445 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!446 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!447 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!448 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!449 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!450 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!451 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!452 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!453 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!454 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!455 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!456 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!457 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!458 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!459 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!460 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!461 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!462 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!463 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!464 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!465 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!466 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!467 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!468 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!469 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!470 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!471 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!472 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!473 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!474 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!475 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!476 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!477 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!478 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!479 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!481 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!482 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!483 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!484 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!485 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!486 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!487 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!488 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!489 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!490 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!491 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!492 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!493 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!494 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!495 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!496 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!497 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!498 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!499 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!500 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!501 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!502 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!503 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!504 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!505 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!506 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!507 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!508 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!509 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!510 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!511 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!512 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!513 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!514 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!515 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!516 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!517 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!518 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!519 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!520 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!521 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!522 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!523 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!524 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!525 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!526 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!527 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!528 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!529 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!530 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!531 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!532 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!533 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!534 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!535 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!536 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!537 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!538 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!539 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!540 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!541 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!542 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!543 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!544 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!545 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!546 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!547 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!548 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!549 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!550 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!551 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!552 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!553 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!554 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!555 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!556 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!557 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!558 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!559 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!560 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!561 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!562 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!563 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!564 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!565 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!566 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!567 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!568 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!569 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!570 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!571 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!572 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!573 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!574 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!575 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!576 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!577 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!578 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!579 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !581, line: 45, baseType: !7, size: 32, elements: !582)
!581 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!582 = !{!583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!583 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!584 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!585 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!586 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!587 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!588 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!589 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!590 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!591 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!592 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!593 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!594 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!595 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!596 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!597 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!598 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!599 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!600 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!601 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!602 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!603 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!604 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!605 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!606 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!607 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!608 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!609 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!610 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!611 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!612 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!613 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!614 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!615 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!616 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!617 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!618 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!619 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!620 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!621 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!622 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!623 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!624 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!625 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!626 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!627 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!628 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!629 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!630 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!631 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!632 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!633 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!634 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!635 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!636 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!637 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!638 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!639 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!640 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!641 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!642 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!643 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!644 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!645 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!646 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!647 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!648 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!649 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!650 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!651 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!652 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!653 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!654 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!655 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!656 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!657 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!658 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!659 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!660 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!661 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!662 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!663 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!664 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!665 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!666 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!667 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!668 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!669 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!670 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!671 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!672 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!673 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!674 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!675 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!676 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!677 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!678 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!679 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!680 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!681 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!682 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!683 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!684 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!685 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!686 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!687 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!688 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!689 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!690 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!691 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!692 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!693 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!694 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!695 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!696 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!697 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!698 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!699 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!700 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!701 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!702 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!703 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!704 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!705 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!706 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!707 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!708 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!709 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!710 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!711 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!712 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!713 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!714 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!715 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!716 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!717 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!718 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!719 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!720 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!721 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!722 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !724, line: 36, baseType: !7, size: 32, elements: !725)
!724 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!726 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!727 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!728 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!729 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!730 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!731 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!732 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!733 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!734 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!735 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!736 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!737 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!738 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!739 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!740 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!741 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!742 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!743 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!744 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !746, line: 7, baseType: !7, size: 32, elements: !747)
!746 = !DIFile(filename: "./insn-codes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!747 = !{!748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236}
!748 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!749 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!750 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!751 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!752 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!753 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!754 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!755 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!756 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!757 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!758 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!759 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!760 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!761 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!762 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!763 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!764 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!765 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!766 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!767 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!768 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!769 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!770 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!771 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!772 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!773 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!774 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!775 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!776 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!777 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!778 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!779 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!780 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!781 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!782 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!783 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!784 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!785 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!786 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!787 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!788 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!789 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!790 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!791 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!792 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!793 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!794 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!795 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!796 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!797 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!798 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!799 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!800 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!801 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!802 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!803 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!804 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!805 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!806 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!807 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!808 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!809 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!810 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!811 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!812 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!813 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!814 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!815 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!816 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!817 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!818 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!819 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!820 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!821 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!822 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!823 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!824 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!825 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!826 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!827 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!828 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!829 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!830 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!831 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!832 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!833 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!834 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!835 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!836 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!837 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!838 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!839 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!840 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!841 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!842 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!843 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!844 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!845 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!846 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!847 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!848 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!849 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!850 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!851 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!852 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!853 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!854 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!855 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!856 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!857 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!858 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!859 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!860 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!861 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!862 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!863 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!864 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!865 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!866 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!867 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!868 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!869 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!870 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!871 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!872 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!873 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!874 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!875 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!876 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!877 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!878 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!879 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!880 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!881 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!882 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!883 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!884 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!885 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!886 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!887 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!888 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!889 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!890 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!891 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!892 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!893 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!894 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!895 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!896 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!897 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!898 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!899 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!900 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!901 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!902 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!903 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!904 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!905 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!906 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!907 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!908 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!909 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!910 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!911 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!912 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!913 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!914 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!915 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!916 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!917 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!918 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!919 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!920 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!921 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!922 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!923 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!924 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!925 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!926 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!927 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!928 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!929 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!930 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!931 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!932 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!933 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!934 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!935 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!936 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!937 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!938 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!939 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!940 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!941 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!942 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!943 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!944 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!945 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!946 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!947 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!948 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!949 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!950 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!951 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!952 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!953 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!954 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!955 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!956 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!957 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!958 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!959 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!960 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!961 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!962 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!963 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!964 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!965 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!966 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!967 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!968 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!969 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!970 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!971 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!972 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!973 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!974 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!975 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!976 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!977 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!978 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!979 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!980 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!981 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!982 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!983 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!984 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!985 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!986 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!987 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!988 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!989 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!990 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!991 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!992 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!993 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!994 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!995 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!996 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!997 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!998 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!999 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!1000 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!1001 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!1002 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!1003 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!1004 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!1005 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!1006 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!1007 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!1008 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!1009 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!1010 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!1011 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!1012 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!1013 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!1014 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!1015 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!1016 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!1017 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!1018 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!1019 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!1020 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!1021 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!1022 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!1023 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!1024 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!1025 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!1026 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!1027 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!1028 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!1029 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!1030 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!1031 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!1032 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!1033 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!1034 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!1035 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!1036 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!1037 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!1038 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!1039 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!1040 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!1041 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!1042 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!1043 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!1044 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!1045 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!1046 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!1047 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!1048 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!1049 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!1050 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!1051 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!1052 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!1053 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!1054 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!1055 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!1056 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!1057 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!1058 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!1059 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!1060 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!1061 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!1062 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!1063 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!1064 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!1065 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!1066 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!1067 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!1068 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!1069 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!1070 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!1071 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!1072 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!1073 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!1074 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!1075 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!1076 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!1077 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!1078 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!1079 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!1080 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!1081 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!1082 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!1083 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!1084 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!1085 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!1086 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!1087 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!1088 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!1089 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!1090 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!1091 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!1092 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!1093 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!1094 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!1095 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!1096 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!1097 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!1098 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!1099 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!1100 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!1101 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!1102 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!1103 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!1104 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!1105 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!1106 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!1107 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!1108 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!1109 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!1110 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!1111 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!1112 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!1113 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!1114 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!1115 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!1116 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!1117 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!1118 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!1119 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!1120 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!1121 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!1122 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!1123 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!1124 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!1125 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!1126 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!1127 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!1128 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!1129 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!1130 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!1131 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!1132 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!1133 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!1134 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!1135 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!1136 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!1137 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!1138 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!1139 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!1140 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!1141 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!1142 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!1143 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!1144 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!1145 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!1146 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!1147 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!1148 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!1149 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!1150 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!1151 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!1152 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!1153 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!1154 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!1155 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!1156 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!1157 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!1158 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!1159 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!1160 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!1161 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!1162 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!1163 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!1164 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!1165 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!1166 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!1167 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!1168 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!1169 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!1170 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!1171 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!1172 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!1173 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!1174 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!1175 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!1176 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!1177 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!1178 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!1179 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!1180 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!1181 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!1182 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!1183 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!1184 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!1185 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!1186 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!1187 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!1188 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!1189 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!1190 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!1191 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!1192 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!1193 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!1194 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!1195 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!1196 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!1197 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!1198 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!1199 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!1200 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!1201 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!1202 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!1203 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!1204 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!1205 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!1206 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!1207 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!1208 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!1209 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!1210 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!1211 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!1212 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!1213 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!1214 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!1215 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!1216 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!1217 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!1218 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!1219 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!1220 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!1221 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!1222 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!1223 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!1224 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!1225 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!1226 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!1227 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!1228 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!1229 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!1230 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!1231 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!1232 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!1233 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!1234 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!1235 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!1236 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!1237 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!1238 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!1239 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!1240 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!1241 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!1242 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!1243 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!1244 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!1245 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!1246 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!1247 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!1248 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!1249 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!1250 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!1251 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!1252 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!1253 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!1254 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!1255 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!1256 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!1257 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!1258 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!1259 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!1260 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!1261 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!1262 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!1263 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!1264 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!1265 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!1266 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!1267 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!1268 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!1269 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!1270 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!1271 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!1272 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!1273 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!1274 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!1275 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!1276 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!1277 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!1278 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!1279 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!1280 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!1281 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!1282 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!1283 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!1284 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!1285 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!1286 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!1287 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!1288 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!1289 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!1290 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!1291 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!1292 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!1293 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!1294 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!1295 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!1296 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!1297 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!1298 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!1299 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!1300 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!1301 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!1302 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!1303 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!1304 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!1305 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!1306 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!1307 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!1308 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!1309 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!1310 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!1311 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!1876 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!1877 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!1878 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!1879 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!1880 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!1881 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!1882 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!1883 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!1884 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!1885 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!1886 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!1887 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!1888 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!1889 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!1890 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!1891 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!1892 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!1893 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!1894 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!1895 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!1896 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!1897 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!1898 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!1899 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!1900 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!1901 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!1902 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!1903 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!1904 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!1905 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!1906 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!1907 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!1908 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!1909 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!1910 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!1911 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!1912 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!1914 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!1915 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!1916 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!1917 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!1918 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!1919 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!1920 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!1921 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!1922 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!1923 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!1924 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!1925 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!1926 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!1927 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!1928 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!1929 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!1930 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!1931 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!1932 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!1933 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!1934 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!1935 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!1936 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!1937 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!1938 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!1939 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!1940 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!1941 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!1942 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!1943 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!1944 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!1945 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!1946 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!1947 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!1948 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!1949 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!1950 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!1951 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!1952 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!1953 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!1954 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!1955 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!1956 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!1957 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!1958 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!1959 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!1960 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!1961 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!1962 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!1963 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!1964 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!1965 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!1966 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!1967 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!1968 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!1969 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!1970 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!1971 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!1972 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!1973 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!1974 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!1975 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!1976 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!1977 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!1978 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!1979 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!1980 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!1981 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!1982 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!1983 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!1984 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!1985 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!1986 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!1987 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!1988 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!1989 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!1990 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!1991 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!1992 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!1993 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!1994 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!1995 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!1996 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!1997 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!1998 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!1999 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!2000 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!2001 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!2002 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!2003 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!2004 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!2005 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!2006 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!2007 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!2008 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!2009 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!2010 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!2011 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!2012 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!2013 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!2014 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!2015 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!2016 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!2017 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!2018 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!2019 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!2020 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!2021 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!2022 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!2023 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!2024 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!2025 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!2026 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!2027 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!2028 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!2029 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!2030 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!2031 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!2032 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!2033 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!2034 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!2035 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!2036 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!2037 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!2038 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!2039 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!2040 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!2041 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!2042 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!2043 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!2044 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!2045 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!2046 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!2047 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!2048 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!2049 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!2050 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!2051 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!2052 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!2053 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!2054 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!2055 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!2056 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!2057 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!2058 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!2059 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!2060 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!2061 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!2062 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!2063 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!2064 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!2065 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!2066 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!2067 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!2068 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!2069 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!2070 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!2071 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!2072 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!2073 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!2074 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!2075 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!2076 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!2077 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!2078 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!2079 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!2080 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!2081 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!2082 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!2083 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!2084 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!2085 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!2086 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!2087 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!2088 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!2089 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!2090 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!2091 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!2092 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!2093 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!2094 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!2095 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!2096 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!2097 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!2098 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!2099 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!2100 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!2101 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!2102 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!2103 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!2104 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!2105 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!2106 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!2107 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!2108 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!2109 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!2110 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!2111 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!2112 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!2113 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!2114 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!2115 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!2116 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!2117 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!2118 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!2119 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!2120 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!2121 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!2122 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!2123 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!2124 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!2125 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!2126 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!2127 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!2128 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!2129 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!2130 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!2131 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!2132 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!2133 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!2134 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!2135 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!2136 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!2137 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!2138 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!2139 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!2140 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!2141 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!2142 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!2143 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!2144 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!2145 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!2146 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!2147 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!2148 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!2149 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!2150 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!2151 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!2152 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!2153 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!2154 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!2155 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!2156 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!2157 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!2158 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!2159 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!2160 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!2161 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!2162 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!2163 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!2164 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!2165 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!2166 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!2167 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!2168 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!2169 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!2170 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!2171 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!2172 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!2173 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!2174 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!2175 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!2176 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!2177 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!2178 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!2179 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!2180 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!2181 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!2182 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!2183 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!2184 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!2185 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!2186 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!2187 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!2188 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!2189 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!2190 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!2191 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!2192 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!2193 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!2194 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!2195 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!2196 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!2197 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!2198 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!2199 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!2200 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!2201 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!2202 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!2203 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!2204 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!2205 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!2206 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!2207 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!2208 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!2209 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!2210 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!2211 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!2212 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!2213 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!2214 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!2215 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!2216 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!2217 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!2218 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!2219 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!2220 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!2221 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!2222 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!2223 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!2224 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!2225 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!2226 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!2227 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!2228 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!2229 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!2230 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!2231 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!2232 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!2233 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!2234 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!2235 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!2236 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!2237 = !{!2238, !2239, !2240, !2241, !2244, !2245, !2247, !189, !2279, !580, !723, !2348, !2365, !3473, !3474, !3475, !7, !3487}
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2240 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2243)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2248, line: 111, baseType: !2249)
!2248 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !325, line: 217, size: 832, elements: !2251)
!2251 = !{!2252, !3440, !3441, !3442, !3443, !3447, !3448, !3449, !3467, !3468, !3469, !3470, !3471, !3472}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2250, file: !325, line: 219, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !325, line: 151, baseType: !2255)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !325, line: 151, size: 128, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2255, file: !325, line: 151, baseType: !2258, size: 128)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !325, line: 150, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !325, line: 150, size: 128, elements: !2260)
!2260 = !{!2261, !2262, !2263}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2259, file: !325, line: 150, baseType: !7, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2259, file: !325, line: 150, baseType: !7, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2259, file: !325, line: 150, baseType: !2264, size: 64, offset: 64)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2265, size: 64, elements: !2313)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2248, line: 108, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !325, line: 122, size: 512, elements: !2268)
!2268 = !{!2269, !2270, !2271, !3432, !3433, !3434, !3435, !3436, !3437, !3438}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2267, file: !325, line: 124, baseType: !2249, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2267, file: !325, line: 125, baseType: !2249, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2267, file: !325, line: 131, baseType: !2272, size: 64, offset: 128)
!2272 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !325, line: 128, size: 64, elements: !2273)
!2273 = !{!2274, !2278}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2272, file: !325, line: 129, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2248, line: 66, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !2248, line: 65, flags: DIFlagFwdDecl)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2272, file: !325, line: 130, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2248, line: 50, baseType: !2280)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !581, line: 240, size: 384, elements: !2282)
!2282 = !{!2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2281, file: !581, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2281, file: !581, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !2281, file: !581, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2281, file: !581, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !2281, file: !581, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !2281, file: !581, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2281, file: !581, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2281, file: !581, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !2281, file: !581, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !2281, file: !581, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2281, file: !581, line: 321, baseType: !2294, size: 320, offset: 64)
!2294 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !581, line: 315, size: 320, elements: !2295)
!2295 = !{!2296, !3367, !3369, !3430, !3431}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2294, file: !581, line: 316, baseType: !2297, size: 64)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2298, size: 64, elements: !2313)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !581, line: 183, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !581, line: 166, size: 64, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2315, !2316, !2328, !2331, !2393, !3345, !3346, !3357, !3364}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !2299, file: !581, line: 168, baseType: !2240, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !2299, file: !581, line: 169, baseType: !7, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !2299, file: !581, line: 170, baseType: !2245, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !2299, file: !581, line: 171, baseType: !2279, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !2299, file: !581, line: 172, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2248, line: 53, baseType: !2307)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !581, line: 359, size: 128, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !2308, file: !581, line: 360, baseType: !2240, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2308, file: !581, line: 361, baseType: !2312, size: 64, offset: 64)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 64, elements: !2313)
!2313 = !{!2314}
!2314 = !DISubrange(count: 1)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2299, file: !581, line: 173, baseType: !189, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !2299, file: !581, line: 174, baseType: !2317, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !581, line: 133, baseType: !2318)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !581, line: 115, size: 32, elements: !2319)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !2318, file: !581, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !2318, file: !581, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !2318, file: !581, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !2318, file: !581, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !2318, file: !581, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !2318, file: !581, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !2318, file: !581, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2318, file: !581, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !2299, file: !581, line: 175, baseType: !2329, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !581, line: 175, flags: DIFlagFwdDecl)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !2299, file: !581, line: 176, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2334, line: 75, size: 256, elements: !2335)
!2334 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2335 = !{!2336, !2351, !2352, !2353}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2333, file: !2334, line: 76, baseType: !2337, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2334, line: 68, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2334, line: 63, size: 320, elements: !2340)
!2340 = !{!2341, !2343, !2344, !2345}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2339, file: !2334, line: 64, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2339, file: !2334, line: 65, baseType: !2342, size: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2339, file: !2334, line: 66, baseType: !7, size: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2339, file: !2334, line: 67, baseType: !2346, size: 128, offset: 192)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2347, size: 128, elements: !2349)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2334, line: 29, baseType: !2348)
!2348 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2349 = !{!2350}
!2350 = !DISubrange(count: 2)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2333, file: !2334, line: 77, baseType: !2337, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2333, file: !2334, line: 78, baseType: !7, size: 32, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2333, file: !2334, line: 79, baseType: !2354, size: 64, offset: 192)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2334, line: 49, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2334, line: 45, size: 832, elements: !2357)
!2357 = !{!2358, !2359, !2360}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2356, file: !2334, line: 46, baseType: !2342, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2356, file: !2334, line: 47, baseType: !2332, size: 64, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2356, file: !2334, line: 48, baseType: !2361, size: 704, offset: 128)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2362, line: 164, size: 704, elements: !2363)
!2362 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2363 = !{!2364, !2366, !2376, !2377, !2378, !2379, !2380, !2381, !2385, !2389, !2390, !2391, !2392}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2361, file: !2362, line: 166, baseType: !2365, size: 64)
!2365 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2361, file: !2362, line: 167, baseType: !2367, size: 64, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2362, line: 157, size: 192, elements: !2369)
!2369 = !{!2370, !2371, !2372}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2368, file: !2362, line: 159, baseType: !2242, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2368, file: !2362, line: 160, baseType: !2367, size: 64, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2368, file: !2362, line: 161, baseType: !2373, size: 32, offset: 128)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 32, elements: !2374)
!2374 = !{!2375}
!2375 = !DISubrange(count: 4)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2361, file: !2362, line: 168, baseType: !2242, size: 64, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2361, file: !2362, line: 169, baseType: !2242, size: 64, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2361, file: !2362, line: 170, baseType: !2242, size: 64, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2361, file: !2362, line: 171, baseType: !2365, size: 64, offset: 320)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2361, file: !2362, line: 172, baseType: !2240, size: 32, offset: 384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2361, file: !2362, line: 176, baseType: !2382, size: 64, offset: 448)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!2367, !2244, !2365}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2361, file: !2362, line: 177, baseType: !2386, size: 64, offset: 512)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{null, !2244, !2367}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2361, file: !2362, line: 178, baseType: !2244, size: 64, offset: 576)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2361, file: !2362, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2361, file: !2362, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2361, file: !2362, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !2299, file: !581, line: 177, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2248, line: 56, baseType: !2395)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !354, line: 3371, size: 1792, elements: !2397)
!2397 = !{!2398, !2431, !2437, !2448, !2467, !2478, !2483, !2490, !2496, !2509, !2521, !2559, !2564, !2592, !2600, !2601, !2606, !2615, !2621, !2626, !2630, !2634, !2984, !3033, !3039, !3045, !3052, !3075, !3089, !3106, !3118, !3140, !3155, !3327}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2396, file: !354, line: 3372, baseType: !2399, size: 64)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !354, line: 360, size: 64, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2399, file: !354, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2399, file: !354, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2399, file: !354, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2399, file: !354, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2399, file: !354, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2399, file: !354, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2399, file: !354, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2399, file: !354, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2399, file: !354, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2399, file: !354, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2399, file: !354, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2399, file: !354, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2399, file: !354, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2399, file: !354, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2399, file: !354, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2399, file: !354, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2399, file: !354, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2399, file: !354, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2399, file: !354, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2399, file: !354, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2399, file: !354, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2399, file: !354, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2399, file: !354, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2399, file: !354, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2399, file: !354, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2399, file: !354, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2399, file: !354, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2399, file: !354, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2399, file: !354, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2399, file: !354, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2396, file: !354, line: 3373, baseType: !2432, size: 192)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !354, line: 402, size: 192, elements: !2433)
!2433 = !{!2434, !2435, !2436}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2432, file: !354, line: 403, baseType: !2399, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2432, file: !354, line: 404, baseType: !2394, size: 64, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2432, file: !354, line: 405, baseType: !2394, size: 64, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2396, file: !354, line: 3374, baseType: !2438, size: 320)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !354, line: 1384, size: 320, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2438, file: !354, line: 1385, baseType: !2432, size: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2438, file: !354, line: 1386, baseType: !2442, size: 128, offset: 192)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2443, line: 58, baseType: !2444)
!2443 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2443, line: 54, size: 128, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2444, file: !2443, line: 56, baseType: !2348, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2444, file: !2443, line: 57, baseType: !2365, size: 64, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2396, file: !354, line: 3375, baseType: !2449, size: 256)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !354, line: 1397, size: 256, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2449, file: !354, line: 1398, baseType: !2432, size: 192)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2449, file: !354, line: 1399, baseType: !2453, size: 64, offset: 192)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2455, line: 52, size: 256, elements: !2456)
!2455 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2456 = !{!2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2454, file: !2455, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2454, file: !2455, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2454, file: !2455, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2454, file: !2455, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2454, file: !2455, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2454, file: !2455, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2454, file: !2455, line: 62, baseType: !2464, size: 192, offset: 64)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2348, size: 192, elements: !2465)
!2465 = !{!2466}
!2466 = !DISubrange(count: 3)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2396, file: !354, line: 3376, baseType: !2468, size: 256)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !354, line: 1408, size: 256, elements: !2469)
!2469 = !{!2470, !2471}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2468, file: !354, line: 1409, baseType: !2432, size: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2468, file: !354, line: 1410, baseType: !2472, size: 64, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2474, line: 27, size: 192, elements: !2475)
!2474 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2473, file: !2474, line: 29, baseType: !2442, size: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2473, file: !2474, line: 30, baseType: !189, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2396, file: !354, line: 3377, baseType: !2479, size: 256)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !354, line: 1437, size: 256, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2479, file: !354, line: 1438, baseType: !2432, size: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2479, file: !354, line: 1439, baseType: !2394, size: 64, offset: 192)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2396, file: !354, line: 3378, baseType: !2484, size: 256)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !354, line: 1418, size: 256, elements: !2485)
!2485 = !{!2486, !2487, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2484, file: !354, line: 1419, baseType: !2432, size: 192)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2484, file: !354, line: 1420, baseType: !2240, size: 32, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2484, file: !354, line: 1421, baseType: !2489, size: 8, offset: 224)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 8, elements: !2313)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2396, file: !354, line: 3379, baseType: !2491, size: 320)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !354, line: 1428, size: 320, elements: !2492)
!2492 = !{!2493, !2494, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2491, file: !354, line: 1429, baseType: !2432, size: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2491, file: !354, line: 1430, baseType: !2394, size: 64, offset: 192)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2491, file: !354, line: 1431, baseType: !2394, size: 64, offset: 256)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2396, file: !354, line: 3380, baseType: !2497, size: 320)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !354, line: 1460, size: 320, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2497, file: !354, line: 1461, baseType: !2432, size: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2497, file: !354, line: 1462, baseType: !2501, size: 128, offset: 192)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2502, line: 31, size: 128, elements: !2503)
!2502 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2503 = !{!2504, !2507, !2508}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2501, file: !2502, line: 32, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2239)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2501, file: !2502, line: 33, baseType: !7, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2501, file: !2502, line: 34, baseType: !7, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2396, file: !354, line: 3381, baseType: !2510, size: 384)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !354, line: 2507, size: 384, elements: !2511)
!2511 = !{!2512, !2513, !2518, !2519, !2520}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2510, file: !354, line: 2508, baseType: !2432, size: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2510, file: !354, line: 2509, baseType: !2514, size: 32, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2515, line: 58, baseType: !2516)
!2515 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !2517, line: 44, baseType: !7)
!2517 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2510, file: !354, line: 2510, baseType: !7, size: 32, offset: 224)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2510, file: !354, line: 2511, baseType: !2394, size: 64, offset: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2510, file: !354, line: 2512, baseType: !2394, size: 64, offset: 320)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2396, file: !354, line: 3382, baseType: !2522, size: 896)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !354, line: 2652, size: 896, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2522, file: !354, line: 2653, baseType: !2510, size: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2522, file: !354, line: 2654, baseType: !2394, size: 64, offset: 384)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2522, file: !354, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !2522, file: !354, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !2522, file: !354, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !2522, file: !354, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2522, file: !354, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !2522, file: !354, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !2522, file: !354, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !2522, file: !354, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2522, file: !354, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2522, file: !354, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2522, file: !354, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2522, file: !354, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2522, file: !354, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2522, file: !354, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2522, file: !354, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !2522, file: !354, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !2522, file: !354, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !2522, file: !354, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !2522, file: !354, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !2522, file: !354, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !2522, file: !354, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !2522, file: !354, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !2522, file: !354, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !2522, file: !354, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !2522, file: !354, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2522, file: !354, line: 2703, baseType: !7, size: 32, offset: 512)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2522, file: !354, line: 2705, baseType: !2394, size: 64, offset: 576)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2522, file: !354, line: 2706, baseType: !2394, size: 64, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2522, file: !354, line: 2707, baseType: !2394, size: 64, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2522, file: !354, line: 2708, baseType: !2394, size: 64, offset: 768)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2522, file: !354, line: 2711, baseType: !2557, size: 64, offset: 832)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !354, line: 2711, flags: DIFlagFwdDecl)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2396, file: !354, line: 3383, baseType: !2560, size: 960)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !354, line: 2756, size: 960, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2560, file: !354, line: 2757, baseType: !2522, size: 896)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2560, file: !354, line: 2758, baseType: !2279, size: 64, offset: 896)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2396, file: !354, line: 3384, baseType: !2565, size: 1472)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !354, line: 3114, size: 1472, elements: !2566)
!2566 = !{!2567, !2588, !2589, !2590, !2591}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2565, file: !354, line: 3115, baseType: !2568, size: 1216)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !354, line: 2984, size: 1216, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2568, file: !354, line: 2985, baseType: !2560, size: 960)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2568, file: !354, line: 2986, baseType: !2394, size: 64, offset: 960)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2568, file: !354, line: 2987, baseType: !2394, size: 64, offset: 1024)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2568, file: !354, line: 2988, baseType: !2394, size: 64, offset: 1088)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2568, file: !354, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2568, file: !354, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2568, file: !354, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2568, file: !354, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2568, file: !354, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2568, file: !354, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2568, file: !354, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2568, file: !354, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2568, file: !354, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2568, file: !354, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2568, file: !354, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2568, file: !354, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2568, file: !354, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2568, file: !354, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2565, file: !354, line: 3117, baseType: !2394, size: 64, offset: 1216)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2565, file: !354, line: 3119, baseType: !2394, size: 64, offset: 1280)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2565, file: !354, line: 3121, baseType: !2394, size: 64, offset: 1344)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2565, file: !354, line: 3123, baseType: !2394, size: 64, offset: 1408)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2396, file: !354, line: 3385, baseType: !2593, size: 1088)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !354, line: 2874, size: 1088, elements: !2594)
!2594 = !{!2595, !2596, !2597}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2593, file: !354, line: 2875, baseType: !2560, size: 960)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2593, file: !354, line: 2876, baseType: !2279, size: 64, offset: 960)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2593, file: !354, line: 2877, baseType: !2598, size: 64, offset: 1024)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !354, line: 2856, flags: DIFlagFwdDecl)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2396, file: !354, line: 3386, baseType: !2568, size: 1216)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2396, file: !354, line: 3387, baseType: !2602, size: 1280)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !354, line: 3093, size: 1280, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2602, file: !354, line: 3094, baseType: !2568, size: 1216)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2602, file: !354, line: 3095, baseType: !2598, size: 64, offset: 1216)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2396, file: !354, line: 3388, baseType: !2607, size: 1216)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !354, line: 2824, size: 1216, elements: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2614}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2607, file: !354, line: 2825, baseType: !2522, size: 896)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2607, file: !354, line: 2827, baseType: !2394, size: 64, offset: 896)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2607, file: !354, line: 2828, baseType: !2394, size: 64, offset: 960)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2607, file: !354, line: 2829, baseType: !2394, size: 64, offset: 1024)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2607, file: !354, line: 2830, baseType: !2394, size: 64, offset: 1088)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2607, file: !354, line: 2831, baseType: !2394, size: 64, offset: 1152)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2396, file: !354, line: 3389, baseType: !2616, size: 1024)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !354, line: 2850, size: 1024, elements: !2617)
!2617 = !{!2618, !2619, !2620}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2616, file: !354, line: 2851, baseType: !2560, size: 960)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2616, file: !354, line: 2852, baseType: !2240, size: 32, offset: 960)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2616, file: !354, line: 2853, baseType: !2240, size: 32, offset: 992)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2396, file: !354, line: 3390, baseType: !2622, size: 1024)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !354, line: 2857, size: 1024, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2622, file: !354, line: 2858, baseType: !2560, size: 960)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2622, file: !354, line: 2859, baseType: !2598, size: 64, offset: 960)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2396, file: !354, line: 3391, baseType: !2627, size: 960)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !354, line: 2862, size: 960, elements: !2628)
!2628 = !{!2629}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2627, file: !354, line: 2863, baseType: !2560, size: 960)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2396, file: !354, line: 3392, baseType: !2631, size: 1472)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !354, line: 3304, size: 1472, elements: !2632)
!2632 = !{!2633}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2631, file: !354, line: 3305, baseType: !2565, size: 1472)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2396, file: !354, line: 3393, baseType: !2635, size: 1792)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !354, line: 3248, size: 1792, elements: !2636)
!2636 = !{!2637, !2638, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2635, file: !354, line: 3249, baseType: !2565, size: 1472)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2635, file: !354, line: 3251, baseType: !2639, size: 64, offset: 1472)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2641, line: 463, size: 1152, elements: !2642)
!2641 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2642 = !{!2643, !2807, !2837, !2838, !2841, !2907, !2908, !2909, !2910, !2911, !2912, !2936, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2640, file: !2641, line: 464, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !318, line: 194, size: 384, elements: !2646)
!2646 = !{!2647, !2696, !2709, !2723, !2775, !2788}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !2645, file: !318, line: 197, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !318, line: 182, baseType: !2649)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !318, line: 116, size: 704, elements: !2651)
!2651 = !{!2652, !2653, !2654, !2655, !2656, !2657, !2684, !2693, !2694, !2695}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2650, file: !318, line: 119, baseType: !2649, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2650, file: !318, line: 122, baseType: !2649, size: 64, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !2650, file: !318, line: 123, baseType: !2649, size: 64, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2650, file: !318, line: 126, baseType: !2240, size: 32, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2650, file: !318, line: 129, baseType: !317, size: 32, offset: 224)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2650, file: !318, line: 165, baseType: !2658, size: 192, offset: 256)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !318, line: 132, size: 192, elements: !2659)
!2659 = !{!2660, !2673, !2679}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !2658, file: !318, line: 137, baseType: !2661, size: 128)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !318, line: 133, size: 128, elements: !2662)
!2662 = !{!2663, !2672}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !2661, file: !318, line: 135, baseType: !2664, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !318, line: 93, size: 320, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !2665, file: !318, line: 96, baseType: !2664, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !2665, file: !318, line: 97, baseType: !2664, size: 64, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2665, file: !318, line: 101, baseType: !2394, size: 64, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !2665, file: !318, line: 106, baseType: !2394, size: 64, offset: 192)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2665, file: !318, line: 111, baseType: !2394, size: 64, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !2661, file: !318, line: 136, baseType: !2664, size: 64, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !2658, file: !318, line: 151, baseType: !2674, size: 192)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !318, line: 139, size: 192, elements: !2675)
!2675 = !{!2676, !2677, !2678}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2674, file: !318, line: 141, baseType: !2394, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2674, file: !318, line: 145, baseType: !2394, size: 64, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2674, file: !318, line: 150, baseType: !2240, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !2658, file: !318, line: 164, baseType: !2680, size: 128)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !318, line: 153, size: 128, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2680, file: !318, line: 161, baseType: !2394, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2680, file: !318, line: 163, baseType: !2514, size: 32, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !2650, file: !318, line: 168, baseType: !2685, size: 64, offset: 448)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !318, line: 67, size: 320, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2686, file: !318, line: 70, baseType: !2685, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2686, file: !318, line: 73, baseType: !2649, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2686, file: !318, line: 78, baseType: !2394, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2686, file: !318, line: 85, baseType: !2279, size: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2686, file: !318, line: 88, baseType: !2240, size: 32, offset: 256)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !2650, file: !318, line: 173, baseType: !2279, size: 64, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !2650, file: !318, line: 173, baseType: !2279, size: 64, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !2650, file: !318, line: 177, baseType: !2239, size: 8, offset: 640)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !2645, file: !318, line: 200, baseType: !2697, size: 64, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !318, line: 185, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !318, line: 185, size: 128, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2699, file: !318, line: 185, baseType: !2702, size: 128)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !318, line: 184, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !318, line: 184, size: 128, elements: !2704)
!2704 = !{!2705, !2706, !2707}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2703, file: !318, line: 184, baseType: !7, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2703, file: !318, line: 184, baseType: !7, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2703, file: !318, line: 184, baseType: !2708, size: 64, offset: 64)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2648, size: 64, elements: !2313)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !2645, file: !318, line: 203, baseType: !2710, size: 64, offset: 128)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !318, line: 189, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !318, line: 189, size: 128, elements: !2713)
!2713 = !{!2714}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2712, file: !318, line: 189, baseType: !2715, size: 128)
!2715 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !318, line: 188, baseType: !2716)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !318, line: 188, size: 128, elements: !2717)
!2717 = !{!2718, !2719, !2720}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2716, file: !318, line: 188, baseType: !7, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2716, file: !318, line: 188, baseType: !7, size: 32, offset: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2716, file: !318, line: 188, baseType: !2721, size: 64, offset: 64)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2722, size: 64, elements: !2313)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !318, line: 180, baseType: !2685)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !2645, file: !318, line: 207, baseType: !2724, size: 64, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2725, line: 144, baseType: !2726)
!2725 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2725, line: 100, size: 896, elements: !2728)
!2728 = !{!2729, !2737, !2742, !2747, !2749, !2752, !2753, !2754, !2755, !2756, !2761, !2763, !2764, !2769, !2774}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2727, file: !2725, line: 102, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2725, line: 52, baseType: !2731)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!2734, !2735}
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2725, line: 47, baseType: !7)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2727, file: !2725, line: 105, baseType: !2738, size: 64, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2725, line: 59, baseType: !2739)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!2240, !2735, !2735}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2727, file: !2725, line: 108, baseType: !2743, size: 64, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2725, line: 63, baseType: !2744)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{null, !2244}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2727, file: !2725, line: 111, baseType: !2748, size: 64, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2727, file: !2725, line: 114, baseType: !2750, size: 64, offset: 256)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2751, line: 46, baseType: !2348)
!2751 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2727, file: !2725, line: 117, baseType: !2750, size: 64, offset: 320)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2727, file: !2725, line: 120, baseType: !2750, size: 64, offset: 384)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2727, file: !2725, line: 124, baseType: !7, size: 32, offset: 448)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2727, file: !2725, line: 128, baseType: !7, size: 32, offset: 480)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2727, file: !2725, line: 131, baseType: !2757, size: 64, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2725, line: 75, baseType: !2758)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!2244, !2750, !2750}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2727, file: !2725, line: 132, baseType: !2762, size: 64, offset: 576)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2725, line: 78, baseType: !2744)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2727, file: !2725, line: 135, baseType: !2244, size: 64, offset: 640)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2727, file: !2725, line: 136, baseType: !2765, size: 64, offset: 704)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2725, line: 82, baseType: !2766)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!2244, !2244, !2750, !2750}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2727, file: !2725, line: 137, baseType: !2770, size: 64, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2725, line: 83, baseType: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !2244, !2244}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2727, file: !2725, line: 141, baseType: !7, size: 32, offset: 832)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !2645, file: !318, line: 211, baseType: !2776, size: 64, offset: 256)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !354, line: 183, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !354, line: 183, size: 128, elements: !2779)
!2779 = !{!2780}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2778, file: !354, line: 183, baseType: !2781, size: 128)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !354, line: 182, baseType: !2782)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !354, line: 182, size: 128, elements: !2783)
!2783 = !{!2784, !2785, !2786}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2782, file: !354, line: 182, baseType: !7, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2782, file: !354, line: 182, baseType: !7, size: 32, offset: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2782, file: !354, line: 182, baseType: !2787, size: 64, offset: 64)
!2787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2394, size: 64, elements: !2313)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !2645, file: !318, line: 220, baseType: !2789, size: 64, offset: 320)
!2789 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !318, line: 217, size: 64, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2789, file: !318, line: 218, baseType: !2776, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2789, file: !318, line: 219, baseType: !2793, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2795, line: 29, baseType: !2796)
!2795 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2795, line: 29, size: 96, elements: !2797)
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2796, file: !2795, line: 29, baseType: !2799, size: 96)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2795, line: 27, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2795, line: 27, size: 96, elements: !2801)
!2801 = !{!2802, !2803, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2800, file: !2795, line: 27, baseType: !7, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2800, file: !2795, line: 27, baseType: !7, size: 32, offset: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2800, file: !2795, line: 27, baseType: !2805, size: 8, offset: 64)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2806, size: 8, elements: !2313)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2795, line: 26, baseType: !2239)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2640, file: !2641, line: 467, baseType: !2808, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !325, line: 374, size: 640, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2826, !2827, !2828, !2829, !2830, !2831, !2833, !2835, !2836}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2809, file: !325, line: 377, baseType: !2247, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2809, file: !325, line: 378, baseType: !2247, size: 64, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2809, file: !325, line: 381, baseType: !2814, size: 64, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !325, line: 282, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !325, line: 282, size: 128, elements: !2817)
!2817 = !{!2818}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2816, file: !325, line: 282, baseType: !2819, size: 128)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !325, line: 281, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !325, line: 281, size: 128, elements: !2821)
!2821 = !{!2822, !2823, !2824}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2820, file: !325, line: 281, baseType: !7, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2820, file: !325, line: 281, baseType: !7, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2820, file: !325, line: 281, baseType: !2825, size: 64, offset: 64)
!2825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2247, size: 64, elements: !2313)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2809, file: !325, line: 384, baseType: !2240, size: 32, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2809, file: !325, line: 387, baseType: !2240, size: 32, offset: 224)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2809, file: !325, line: 390, baseType: !2240, size: 32, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2809, file: !325, line: 394, baseType: !2814, size: 64, offset: 320)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2809, file: !325, line: 396, baseType: !324, size: 32, offset: 384)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2809, file: !325, line: 399, baseType: !2832, size: 64, offset: 416)
!2832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 64, elements: !2349)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2809, file: !325, line: 402, baseType: !2834, size: 64, offset: 480)
!2834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2349)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2809, file: !325, line: 406, baseType: !2240, size: 32, offset: 544)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2809, file: !325, line: 409, baseType: !2240, size: 32, offset: 576)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2640, file: !2641, line: 470, baseType: !2276, size: 64, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2640, file: !2641, line: 473, baseType: !2839, size: 64, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2641, line: 166, flags: DIFlagFwdDecl)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2640, file: !2641, line: 476, baseType: !2842, size: 64, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !336, line: 187, size: 256, elements: !2844)
!2844 = !{!2845, !2846, !2905, !2906}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2843, file: !336, line: 189, baseType: !2240, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !2843, file: !336, line: 192, baseType: !2847, size: 64, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !336, line: 87, baseType: !2849)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !336, line: 87, size: 128, elements: !2850)
!2850 = !{!2851}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2849, file: !336, line: 87, baseType: !2852, size: 128)
!2852 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !336, line: 85, baseType: !2853)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !336, line: 85, size: 128, elements: !2854)
!2854 = !{!2855, !2856, !2857}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2853, file: !336, line: 85, baseType: !7, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2853, file: !336, line: 85, baseType: !7, size: 32, offset: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2853, file: !336, line: 85, baseType: !2858, size: 64, offset: 64)
!2858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2859, size: 64, elements: !2313)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !336, line: 84, baseType: !2860)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !336, line: 100, size: 1216, elements: !2862)
!2862 = !{!2863, !2864, !2865, !2866, !2867, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2895, !2903, !2904}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2861, file: !336, line: 102, baseType: !2240, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !2861, file: !336, line: 105, baseType: !7, size: 32, offset: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2861, file: !336, line: 108, baseType: !2249, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !2861, file: !336, line: 111, baseType: !2249, size: 64, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !2861, file: !336, line: 114, baseType: !2868, size: 64, offset: 192)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !336, line: 41, size: 64, elements: !2869)
!2869 = !{!2870, !2871}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !2868, file: !336, line: 42, baseType: !335, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !2868, file: !336, line: 43, baseType: !7, size: 32, offset: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !2861, file: !336, line: 117, baseType: !7, size: 32, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !2861, file: !336, line: 120, baseType: !7, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !2861, file: !336, line: 123, baseType: !2847, size: 64, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2861, file: !336, line: 126, baseType: !2860, size: 64, offset: 384)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2861, file: !336, line: 129, baseType: !2860, size: 64, offset: 448)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2861, file: !336, line: 132, baseType: !2244, size: 64, offset: 512)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !2861, file: !336, line: 139, baseType: !2394, size: 64, offset: 576)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !2861, file: !336, line: 143, baseType: !2442, size: 128, offset: 640)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !2861, file: !336, line: 146, baseType: !2442, size: 128, offset: 768)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !2861, file: !336, line: 148, baseType: !2239, size: 8, offset: 896)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !2861, file: !336, line: 149, baseType: !2239, size: 8, offset: 904)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !2861, file: !336, line: 153, baseType: !344, size: 32, offset: 928)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !2861, file: !336, line: 156, baseType: !2885, size: 64, offset: 960)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !336, line: 48, size: 320, elements: !2887)
!2887 = !{!2888, !2892, !2893, !2894}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2886, file: !336, line: 50, baseType: !2889, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2248, line: 58, baseType: !2890)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !2248, line: 57, flags: DIFlagFwdDecl)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2886, file: !336, line: 59, baseType: !2442, size: 128, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !2886, file: !336, line: 64, baseType: !2239, size: 8, offset: 192)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2886, file: !336, line: 67, baseType: !2885, size: 64, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !2861, file: !336, line: 159, baseType: !2896, size: 64, offset: 1024)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !336, line: 72, size: 256, elements: !2898)
!2898 = !{!2899, !2900, !2901, !2902}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2897, file: !336, line: 74, baseType: !2266, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2897, file: !336, line: 77, baseType: !2896, size: 64, offset: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2897, file: !336, line: 78, baseType: !2896, size: 64, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !2897, file: !336, line: 81, baseType: !2896, size: 64, offset: 192)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !2861, file: !336, line: 162, baseType: !2239, size: 8, offset: 1088)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !2861, file: !336, line: 166, baseType: !2394, size: 64, offset: 1152)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !2843, file: !336, line: 197, baseType: !2724, size: 64, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !2843, file: !336, line: 200, baseType: !2860, size: 64, offset: 192)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2640, file: !2641, line: 479, baseType: !2724, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2640, file: !2641, line: 484, baseType: !2394, size: 64, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2640, file: !2641, line: 488, baseType: !2394, size: 64, offset: 448)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2640, file: !2641, line: 493, baseType: !2394, size: 64, offset: 512)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2640, file: !2641, line: 496, baseType: !2394, size: 64, offset: 576)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2640, file: !2641, line: 501, baseType: !2913, size: 64, offset: 640)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !349, line: 2355, size: 576, elements: !2915)
!2915 = !{!2916, !2919, !2920, !2921, !2922, !2924, !2925, !2930, !2931, !2932, !2933, !2934, !2935}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2914, file: !349, line: 2356, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !349, line: 2356, flags: DIFlagFwdDecl)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2914, file: !349, line: 2357, baseType: !2245, size: 64, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2914, file: !349, line: 2358, baseType: !2240, size: 32, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2914, file: !349, line: 2359, baseType: !2240, size: 32, offset: 160)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2914, file: !349, line: 2360, baseType: !2923, size: 128, offset: 192)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 128, elements: !2374)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2914, file: !349, line: 2364, baseType: !2240, size: 32, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2914, file: !349, line: 2367, baseType: !2926, size: 128, offset: 384)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !349, line: 2349, size: 128, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2926, file: !349, line: 2351, baseType: !2279, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2926, file: !349, line: 2352, baseType: !2365, size: 64, offset: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2914, file: !349, line: 2371, baseType: !348, size: 32, offset: 512)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2914, file: !349, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2914, file: !349, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2914, file: !349, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2914, file: !349, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2914, file: !349, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2640, file: !2641, line: 504, baseType: !2937, size: 64, offset: 704)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2641, line: 504, flags: DIFlagFwdDecl)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2640, file: !2641, line: 507, baseType: !2724, size: 64, offset: 768)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2640, file: !2641, line: 510, baseType: !2240, size: 32, offset: 832)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2640, file: !2641, line: 513, baseType: !2240, size: 32, offset: 864)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2640, file: !2641, line: 516, baseType: !2514, size: 32, offset: 896)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2640, file: !2641, line: 519, baseType: !2514, size: 32, offset: 928)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2640, file: !2641, line: 522, baseType: !7, size: 32, offset: 960)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2640, file: !2641, line: 523, baseType: !7, size: 32, offset: 992)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2640, file: !2641, line: 528, baseType: !2245, size: 64, offset: 1024)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2640, file: !2641, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2640, file: !2641, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2640, file: !2641, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2640, file: !2641, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2640, file: !2641, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2640, file: !2641, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2640, file: !2641, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2640, file: !2641, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2640, file: !2641, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2640, file: !2641, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2640, file: !2641, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2640, file: !2641, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2640, file: !2641, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2640, file: !2641, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2640, file: !2641, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2640, file: !2641, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2635, file: !354, line: 3254, baseType: !2394, size: 64, offset: 1536)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2635, file: !354, line: 3257, baseType: !2394, size: 64, offset: 1600)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2635, file: !354, line: 3258, baseType: !2394, size: 64, offset: 1664)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2635, file: !354, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2635, file: !354, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2635, file: !354, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2635, file: !354, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2635, file: !354, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2635, file: !354, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2635, file: !354, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2635, file: !354, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2635, file: !354, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2635, file: !354, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2635, file: !354, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2635, file: !354, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2635, file: !354, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2635, file: !354, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2635, file: !354, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2635, file: !354, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2635, file: !354, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2635, file: !354, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2396, file: !354, line: 3394, baseType: !2985, size: 1344)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !354, line: 2279, size: 1344, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3012, !3013, !3014, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2985, file: !354, line: 2280, baseType: !2432, size: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2985, file: !354, line: 2281, baseType: !2394, size: 64, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2985, file: !354, line: 2282, baseType: !2394, size: 64, offset: 256)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2985, file: !354, line: 2283, baseType: !2394, size: 64, offset: 320)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2985, file: !354, line: 2284, baseType: !2394, size: 64, offset: 384)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2985, file: !354, line: 2285, baseType: !7, size: 32, offset: 448)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2985, file: !354, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2985, file: !354, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2985, file: !354, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2985, file: !354, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2985, file: !354, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2985, file: !354, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2985, file: !354, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2985, file: !354, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2985, file: !354, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2985, file: !354, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2985, file: !354, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2985, file: !354, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2985, file: !354, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2985, file: !354, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2985, file: !354, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2985, file: !354, line: 2305, baseType: !7, size: 32, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2985, file: !354, line: 2306, baseType: !3010, size: 32, offset: 544)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !3011, line: 31, baseType: !2240)
!3011 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2985, file: !354, line: 2307, baseType: !2394, size: 64, offset: 576)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2985, file: !354, line: 2308, baseType: !2394, size: 64, offset: 640)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2985, file: !354, line: 2314, baseType: !3015, size: 64, offset: 704)
!3015 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !354, line: 2309, size: 64, elements: !3016)
!3016 = !{!3017, !3018, !3019}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3015, file: !354, line: 2310, baseType: !2240, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3015, file: !354, line: 2311, baseType: !2245, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !3015, file: !354, line: 2312, baseType: !3020, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !354, line: 2277, flags: DIFlagFwdDecl)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2985, file: !354, line: 2315, baseType: !2394, size: 64, offset: 768)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2985, file: !354, line: 2316, baseType: !2394, size: 64, offset: 832)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2985, file: !354, line: 2317, baseType: !2394, size: 64, offset: 896)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2985, file: !354, line: 2318, baseType: !2394, size: 64, offset: 960)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2985, file: !354, line: 2319, baseType: !2394, size: 64, offset: 1024)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2985, file: !354, line: 2320, baseType: !2394, size: 64, offset: 1088)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2985, file: !354, line: 2321, baseType: !2394, size: 64, offset: 1152)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2985, file: !354, line: 2322, baseType: !2394, size: 64, offset: 1216)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2985, file: !354, line: 2324, baseType: !3031, size: 64, offset: 1280)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !354, line: 2324, flags: DIFlagFwdDecl)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2396, file: !354, line: 3395, baseType: !3034, size: 320)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !354, line: 1469, size: 320, elements: !3035)
!3035 = !{!3036, !3037, !3038}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3034, file: !354, line: 1470, baseType: !2432, size: 192)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !3034, file: !354, line: 1471, baseType: !2394, size: 64, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3034, file: !354, line: 1472, baseType: !2394, size: 64, offset: 256)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2396, file: !354, line: 3396, baseType: !3040, size: 320)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !354, line: 1482, size: 320, elements: !3041)
!3041 = !{!3042, !3043, !3044}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3040, file: !354, line: 1483, baseType: !2432, size: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3040, file: !354, line: 1484, baseType: !2240, size: 32, offset: 192)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3040, file: !354, line: 1485, baseType: !2787, size: 64, offset: 256)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2396, file: !354, line: 3397, baseType: !3046, size: 384)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !354, line: 1829, size: 384, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3046, file: !354, line: 1830, baseType: !2432, size: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3046, file: !354, line: 1831, baseType: !2514, size: 32, offset: 192)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3046, file: !354, line: 1832, baseType: !2394, size: 64, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !3046, file: !354, line: 1835, baseType: !2787, size: 64, offset: 320)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2396, file: !354, line: 3398, baseType: !3053, size: 704)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !354, line: 1898, size: 704, elements: !3054)
!3054 = !{!3055, !3056, !3057, !3058, !3059, !3062}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3053, file: !354, line: 1899, baseType: !2432, size: 192)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !3053, file: !354, line: 1902, baseType: !2394, size: 64, offset: 192)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !3053, file: !354, line: 1905, baseType: !2889, size: 64, offset: 256)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3053, file: !354, line: 1908, baseType: !7, size: 32, offset: 320)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !3053, file: !354, line: 1911, baseType: !3060, size: 64, offset: 384)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !354, line: 1876, flags: DIFlagFwdDecl)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !3053, file: !354, line: 1914, baseType: !3063, size: 256, offset: 448)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !354, line: 1883, size: 256, elements: !3064)
!3064 = !{!3065, !3067, !3068, !3073}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3063, file: !354, line: 1884, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3063, file: !354, line: 1885, baseType: !3066, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3063, file: !354, line: 1891, baseType: !3069, size: 64, offset: 128)
!3069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3063, file: !354, line: 1891, size: 64, elements: !3070)
!3070 = !{!3071, !3072}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3069, file: !354, line: 1891, baseType: !2889, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !3069, file: !354, line: 1891, baseType: !2394, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !3063, file: !354, line: 1892, baseType: !3074, size: 64, offset: 192)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2396, file: !354, line: 3399, baseType: !3076, size: 704)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !354, line: 2008, size: 704, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3076, file: !354, line: 2009, baseType: !2432, size: 192)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !3076, file: !354, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !3076, file: !354, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3076, file: !354, line: 2014, baseType: !2514, size: 32, offset: 224)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3076, file: !354, line: 2016, baseType: !2394, size: 64, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !3076, file: !354, line: 2017, baseType: !2776, size: 64, offset: 320)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !3076, file: !354, line: 2019, baseType: !2394, size: 64, offset: 384)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !3076, file: !354, line: 2020, baseType: !2394, size: 64, offset: 448)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !3076, file: !354, line: 2021, baseType: !2394, size: 64, offset: 512)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !3076, file: !354, line: 2022, baseType: !2394, size: 64, offset: 576)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !3076, file: !354, line: 2023, baseType: !2394, size: 64, offset: 640)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2396, file: !354, line: 3400, baseType: !3090, size: 832)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !354, line: 2430, size: 832, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3090, file: !354, line: 2431, baseType: !2432, size: 192)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3090, file: !354, line: 2433, baseType: !2394, size: 64, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3090, file: !354, line: 2434, baseType: !2394, size: 64, offset: 256)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !3090, file: !354, line: 2435, baseType: !2394, size: 64, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !3090, file: !354, line: 2436, baseType: !2394, size: 64, offset: 384)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !3090, file: !354, line: 2437, baseType: !2776, size: 64, offset: 448)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !3090, file: !354, line: 2438, baseType: !2394, size: 64, offset: 512)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !3090, file: !354, line: 2440, baseType: !2394, size: 64, offset: 576)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !3090, file: !354, line: 2441, baseType: !2394, size: 64, offset: 640)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !3090, file: !354, line: 2443, baseType: !3102, size: 128, offset: 704)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !354, line: 182, baseType: !3103)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !354, line: 182, size: 128, elements: !3104)
!3104 = !{!3105}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3103, file: !354, line: 182, baseType: !2781, size: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2396, file: !354, line: 3401, baseType: !3107, size: 320)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !354, line: 3327, size: 320, elements: !3108)
!3108 = !{!3109, !3110, !3117}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3107, file: !354, line: 3329, baseType: !2432, size: 192)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3107, file: !354, line: 3330, baseType: !3111, size: 64, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !354, line: 3320, size: 192, elements: !3113)
!3113 = !{!3114, !3115, !3116}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3112, file: !354, line: 3322, baseType: !3111, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3112, file: !354, line: 3323, baseType: !3111, size: 64, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3112, file: !354, line: 3324, baseType: !2394, size: 64, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3107, file: !354, line: 3331, baseType: !3111, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2396, file: !354, line: 3402, baseType: !3119, size: 256)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !354, line: 1540, size: 256, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3119, file: !354, line: 1541, baseType: !2432, size: 192)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !3119, file: !354, line: 1542, baseType: !3123, size: 64, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !354, line: 1538, baseType: !3125)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !354, line: 1538, size: 192, elements: !3126)
!3126 = !{!3127}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3125, file: !354, line: 1538, baseType: !3128, size: 192)
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !354, line: 1537, baseType: !3129)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !354, line: 1537, size: 192, elements: !3130)
!3130 = !{!3131, !3132, !3133}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3129, file: !354, line: 1537, baseType: !7, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3129, file: !354, line: 1537, baseType: !7, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3129, file: !354, line: 1537, baseType: !3134, size: 128, offset: 64)
!3134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3135, size: 128, elements: !2313)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !354, line: 1535, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !354, line: 1532, size: 128, elements: !3137)
!3137 = !{!3138, !3139}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3136, file: !354, line: 1533, baseType: !2394, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3136, file: !354, line: 1534, baseType: !2394, size: 64, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2396, file: !354, line: 3403, baseType: !3141, size: 512)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !354, line: 1938, size: 512, elements: !3142)
!3142 = !{!3143, !3144, !3145, !3146, !3152, !3153, !3154}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3141, file: !354, line: 1939, baseType: !2432, size: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3141, file: !354, line: 1940, baseType: !2514, size: 32, offset: 192)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3141, file: !354, line: 1941, baseType: !353, size: 32, offset: 224)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !3141, file: !354, line: 1946, baseType: !3147, size: 32, offset: 256)
!3147 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !354, line: 1942, size: 32, elements: !3148)
!3148 = !{!3149, !3150, !3151}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !3147, file: !354, line: 1943, baseType: !372, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !3147, file: !354, line: 1944, baseType: !379, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !3147, file: !354, line: 1945, baseType: !386, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !3141, file: !354, line: 1950, baseType: !2275, size: 64, offset: 320)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !3141, file: !354, line: 1951, baseType: !2275, size: 64, offset: 384)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3141, file: !354, line: 1953, baseType: !2787, size: 64, offset: 448)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2396, file: !354, line: 3404, baseType: !3156, size: 1664)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !354, line: 3337, size: 1664, elements: !3157)
!3157 = !{!3158, !3159}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3156, file: !354, line: 3338, baseType: !2432, size: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3156, file: !354, line: 3341, baseType: !3160, size: 1472, offset: 192)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !3161, line: 410, size: 1472, elements: !3162)
!3161 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !3160, file: !3161, line: 412, baseType: !2240, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !3160, file: !3161, line: 413, baseType: !2240, size: 32, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !3160, file: !3161, line: 414, baseType: !2240, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !3160, file: !3161, line: 415, baseType: !2240, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !3160, file: !3161, line: 416, baseType: !2240, size: 32, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !3160, file: !3161, line: 417, baseType: !2240, size: 32, offset: 160)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !3160, file: !3161, line: 418, baseType: !2239, size: 8, offset: 192)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !3160, file: !3161, line: 419, baseType: !2239, size: 8, offset: 200)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !3160, file: !3161, line: 420, baseType: !3172, size: 8, offset: 208)
!3172 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !3160, file: !3161, line: 421, baseType: !3172, size: 8, offset: 216)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !3160, file: !3161, line: 422, baseType: !3172, size: 8, offset: 224)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !3160, file: !3161, line: 423, baseType: !3172, size: 8, offset: 232)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !3160, file: !3161, line: 424, baseType: !3172, size: 8, offset: 240)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !3160, file: !3161, line: 425, baseType: !3172, size: 8, offset: 248)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !3160, file: !3161, line: 426, baseType: !3172, size: 8, offset: 256)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !3160, file: !3161, line: 427, baseType: !3172, size: 8, offset: 264)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !3160, file: !3161, line: 428, baseType: !3172, size: 8, offset: 272)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !3160, file: !3161, line: 429, baseType: !3172, size: 8, offset: 280)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !3160, file: !3161, line: 430, baseType: !3172, size: 8, offset: 288)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !3160, file: !3161, line: 431, baseType: !3172, size: 8, offset: 296)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !3160, file: !3161, line: 432, baseType: !3172, size: 8, offset: 304)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !3160, file: !3161, line: 433, baseType: !3172, size: 8, offset: 312)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !3160, file: !3161, line: 434, baseType: !3172, size: 8, offset: 320)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !3160, file: !3161, line: 435, baseType: !3172, size: 8, offset: 328)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !3160, file: !3161, line: 436, baseType: !3172, size: 8, offset: 336)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !3160, file: !3161, line: 437, baseType: !3172, size: 8, offset: 344)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !3160, file: !3161, line: 438, baseType: !3172, size: 8, offset: 352)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !3160, file: !3161, line: 439, baseType: !3172, size: 8, offset: 360)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !3160, file: !3161, line: 440, baseType: !3172, size: 8, offset: 368)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !3160, file: !3161, line: 441, baseType: !3172, size: 8, offset: 376)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !3160, file: !3161, line: 442, baseType: !3172, size: 8, offset: 384)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !3160, file: !3161, line: 443, baseType: !3172, size: 8, offset: 392)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !3160, file: !3161, line: 444, baseType: !3172, size: 8, offset: 400)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !3160, file: !3161, line: 445, baseType: !3172, size: 8, offset: 408)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !3160, file: !3161, line: 446, baseType: !3172, size: 8, offset: 416)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !3160, file: !3161, line: 447, baseType: !3172, size: 8, offset: 424)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !3160, file: !3161, line: 448, baseType: !3172, size: 8, offset: 432)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !3160, file: !3161, line: 449, baseType: !3172, size: 8, offset: 440)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !3160, file: !3161, line: 450, baseType: !3172, size: 8, offset: 448)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !3160, file: !3161, line: 451, baseType: !3172, size: 8, offset: 456)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !3160, file: !3161, line: 452, baseType: !3172, size: 8, offset: 464)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !3160, file: !3161, line: 453, baseType: !3172, size: 8, offset: 472)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !3160, file: !3161, line: 454, baseType: !3172, size: 8, offset: 480)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !3160, file: !3161, line: 455, baseType: !3172, size: 8, offset: 488)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !3160, file: !3161, line: 456, baseType: !3172, size: 8, offset: 496)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !3160, file: !3161, line: 457, baseType: !3172, size: 8, offset: 504)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !3160, file: !3161, line: 458, baseType: !3172, size: 8, offset: 512)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !3160, file: !3161, line: 459, baseType: !3172, size: 8, offset: 520)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !3160, file: !3161, line: 460, baseType: !3172, size: 8, offset: 528)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !3160, file: !3161, line: 461, baseType: !3172, size: 8, offset: 536)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !3160, file: !3161, line: 462, baseType: !3172, size: 8, offset: 544)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !3160, file: !3161, line: 463, baseType: !3172, size: 8, offset: 552)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !3160, file: !3161, line: 464, baseType: !3172, size: 8, offset: 560)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !3160, file: !3161, line: 465, baseType: !3172, size: 8, offset: 568)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !3160, file: !3161, line: 466, baseType: !3172, size: 8, offset: 576)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !3160, file: !3161, line: 467, baseType: !3172, size: 8, offset: 584)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !3160, file: !3161, line: 468, baseType: !3172, size: 8, offset: 592)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !3160, file: !3161, line: 469, baseType: !3172, size: 8, offset: 600)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !3160, file: !3161, line: 470, baseType: !3172, size: 8, offset: 608)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !3160, file: !3161, line: 471, baseType: !3172, size: 8, offset: 616)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !3160, file: !3161, line: 472, baseType: !3172, size: 8, offset: 624)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !3160, file: !3161, line: 473, baseType: !3172, size: 8, offset: 632)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !3160, file: !3161, line: 474, baseType: !3172, size: 8, offset: 640)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !3160, file: !3161, line: 475, baseType: !3172, size: 8, offset: 648)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !3160, file: !3161, line: 476, baseType: !3172, size: 8, offset: 656)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !3160, file: !3161, line: 477, baseType: !3172, size: 8, offset: 664)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !3160, file: !3161, line: 478, baseType: !3172, size: 8, offset: 672)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !3160, file: !3161, line: 479, baseType: !3172, size: 8, offset: 680)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !3160, file: !3161, line: 480, baseType: !3172, size: 8, offset: 688)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !3160, file: !3161, line: 481, baseType: !3172, size: 8, offset: 696)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !3160, file: !3161, line: 482, baseType: !3172, size: 8, offset: 704)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !3160, file: !3161, line: 483, baseType: !3172, size: 8, offset: 712)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !3160, file: !3161, line: 484, baseType: !3172, size: 8, offset: 720)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !3160, file: !3161, line: 485, baseType: !3172, size: 8, offset: 728)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !3160, file: !3161, line: 486, baseType: !3172, size: 8, offset: 736)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !3160, file: !3161, line: 487, baseType: !3172, size: 8, offset: 744)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !3160, file: !3161, line: 488, baseType: !3172, size: 8, offset: 752)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !3160, file: !3161, line: 489, baseType: !3172, size: 8, offset: 760)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !3160, file: !3161, line: 490, baseType: !3172, size: 8, offset: 768)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !3160, file: !3161, line: 491, baseType: !3172, size: 8, offset: 776)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !3160, file: !3161, line: 492, baseType: !3172, size: 8, offset: 784)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !3160, file: !3161, line: 493, baseType: !3172, size: 8, offset: 792)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !3160, file: !3161, line: 494, baseType: !3172, size: 8, offset: 800)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !3160, file: !3161, line: 495, baseType: !3172, size: 8, offset: 808)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !3160, file: !3161, line: 496, baseType: !3172, size: 8, offset: 816)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !3160, file: !3161, line: 497, baseType: !3172, size: 8, offset: 824)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !3160, file: !3161, line: 498, baseType: !3172, size: 8, offset: 832)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !3160, file: !3161, line: 499, baseType: !3172, size: 8, offset: 840)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !3160, file: !3161, line: 500, baseType: !3172, size: 8, offset: 848)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !3160, file: !3161, line: 501, baseType: !3172, size: 8, offset: 856)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !3160, file: !3161, line: 502, baseType: !3172, size: 8, offset: 864)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !3160, file: !3161, line: 503, baseType: !3172, size: 8, offset: 872)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !3160, file: !3161, line: 504, baseType: !3172, size: 8, offset: 880)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !3160, file: !3161, line: 505, baseType: !3172, size: 8, offset: 888)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !3160, file: !3161, line: 506, baseType: !3172, size: 8, offset: 896)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !3160, file: !3161, line: 507, baseType: !3172, size: 8, offset: 904)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !3160, file: !3161, line: 508, baseType: !3172, size: 8, offset: 912)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !3160, file: !3161, line: 509, baseType: !3172, size: 8, offset: 920)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !3160, file: !3161, line: 510, baseType: !3172, size: 8, offset: 928)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !3160, file: !3161, line: 511, baseType: !3172, size: 8, offset: 936)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !3160, file: !3161, line: 512, baseType: !3172, size: 8, offset: 944)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !3160, file: !3161, line: 513, baseType: !3172, size: 8, offset: 952)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !3160, file: !3161, line: 514, baseType: !3172, size: 8, offset: 960)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !3160, file: !3161, line: 515, baseType: !3172, size: 8, offset: 968)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !3160, file: !3161, line: 516, baseType: !3172, size: 8, offset: 976)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !3160, file: !3161, line: 517, baseType: !3172, size: 8, offset: 984)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !3160, file: !3161, line: 518, baseType: !3172, size: 8, offset: 992)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !3160, file: !3161, line: 519, baseType: !3172, size: 8, offset: 1000)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !3160, file: !3161, line: 520, baseType: !3172, size: 8, offset: 1008)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !3160, file: !3161, line: 521, baseType: !3172, size: 8, offset: 1016)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !3160, file: !3161, line: 522, baseType: !3172, size: 8, offset: 1024)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !3160, file: !3161, line: 523, baseType: !3172, size: 8, offset: 1032)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !3160, file: !3161, line: 524, baseType: !3172, size: 8, offset: 1040)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !3160, file: !3161, line: 525, baseType: !3172, size: 8, offset: 1048)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !3160, file: !3161, line: 526, baseType: !3172, size: 8, offset: 1056)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !3160, file: !3161, line: 527, baseType: !3172, size: 8, offset: 1064)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !3160, file: !3161, line: 528, baseType: !3172, size: 8, offset: 1072)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !3160, file: !3161, line: 529, baseType: !3172, size: 8, offset: 1080)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !3160, file: !3161, line: 530, baseType: !3172, size: 8, offset: 1088)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !3160, file: !3161, line: 531, baseType: !3172, size: 8, offset: 1096)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !3160, file: !3161, line: 532, baseType: !3172, size: 8, offset: 1104)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !3160, file: !3161, line: 533, baseType: !3172, size: 8, offset: 1112)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !3160, file: !3161, line: 534, baseType: !3172, size: 8, offset: 1120)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !3160, file: !3161, line: 535, baseType: !3172, size: 8, offset: 1128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !3160, file: !3161, line: 536, baseType: !3172, size: 8, offset: 1136)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !3160, file: !3161, line: 537, baseType: !3172, size: 8, offset: 1144)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !3160, file: !3161, line: 538, baseType: !3172, size: 8, offset: 1152)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !3160, file: !3161, line: 539, baseType: !3172, size: 8, offset: 1160)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !3160, file: !3161, line: 540, baseType: !3172, size: 8, offset: 1168)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !3160, file: !3161, line: 541, baseType: !3172, size: 8, offset: 1176)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !3160, file: !3161, line: 542, baseType: !3172, size: 8, offset: 1184)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !3160, file: !3161, line: 543, baseType: !3172, size: 8, offset: 1192)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !3160, file: !3161, line: 544, baseType: !3172, size: 8, offset: 1200)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !3160, file: !3161, line: 545, baseType: !3172, size: 8, offset: 1208)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !3160, file: !3161, line: 546, baseType: !3172, size: 8, offset: 1216)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !3160, file: !3161, line: 547, baseType: !3172, size: 8, offset: 1224)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !3160, file: !3161, line: 548, baseType: !3172, size: 8, offset: 1232)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !3160, file: !3161, line: 549, baseType: !3172, size: 8, offset: 1240)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !3160, file: !3161, line: 550, baseType: !3172, size: 8, offset: 1248)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !3160, file: !3161, line: 551, baseType: !3172, size: 8, offset: 1256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !3160, file: !3161, line: 552, baseType: !3172, size: 8, offset: 1264)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !3160, file: !3161, line: 553, baseType: !3172, size: 8, offset: 1272)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !3160, file: !3161, line: 554, baseType: !3172, size: 8, offset: 1280)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !3160, file: !3161, line: 555, baseType: !3172, size: 8, offset: 1288)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !3160, file: !3161, line: 556, baseType: !3172, size: 8, offset: 1296)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !3160, file: !3161, line: 557, baseType: !3172, size: 8, offset: 1304)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !3160, file: !3161, line: 558, baseType: !3172, size: 8, offset: 1312)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !3160, file: !3161, line: 559, baseType: !3172, size: 8, offset: 1320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !3160, file: !3161, line: 560, baseType: !3172, size: 8, offset: 1328)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !3160, file: !3161, line: 561, baseType: !3172, size: 8, offset: 1336)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !3160, file: !3161, line: 562, baseType: !3172, size: 8, offset: 1344)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !3160, file: !3161, line: 563, baseType: !3172, size: 8, offset: 1352)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !3160, file: !3161, line: 564, baseType: !3172, size: 8, offset: 1360)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !3160, file: !3161, line: 565, baseType: !3172, size: 8, offset: 1368)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !3160, file: !3161, line: 566, baseType: !3172, size: 8, offset: 1376)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !3160, file: !3161, line: 567, baseType: !3172, size: 8, offset: 1384)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !3160, file: !3161, line: 568, baseType: !3172, size: 8, offset: 1392)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !3160, file: !3161, line: 569, baseType: !3172, size: 8, offset: 1400)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !3160, file: !3161, line: 570, baseType: !3172, size: 8, offset: 1408)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !3160, file: !3161, line: 571, baseType: !3172, size: 8, offset: 1416)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !3160, file: !3161, line: 572, baseType: !3172, size: 8, offset: 1424)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !3160, file: !3161, line: 573, baseType: !3172, size: 8, offset: 1432)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !3160, file: !3161, line: 574, baseType: !3172, size: 8, offset: 1440)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2396, file: !354, line: 3405, baseType: !3328, size: 384)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !354, line: 3352, size: 384, elements: !3329)
!3329 = !{!3330, !3331}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3328, file: !354, line: 3353, baseType: !2432, size: 192)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3328, file: !354, line: 3356, baseType: !3332, size: 192, offset: 192)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !3161, line: 578, size: 192, elements: !3333)
!3333 = !{!3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !3332, file: !3161, line: 580, baseType: !2240, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !3332, file: !3161, line: 581, baseType: !2240, size: 32, offset: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !3332, file: !3161, line: 582, baseType: !2240, size: 32, offset: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !3332, file: !3161, line: 583, baseType: !2240, size: 32, offset: 96)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3332, file: !3161, line: 584, baseType: !2239, size: 8, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !3332, file: !3161, line: 585, baseType: !2239, size: 8, offset: 136)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !3332, file: !3161, line: 586, baseType: !2239, size: 8, offset: 144)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !3332, file: !3161, line: 587, baseType: !2239, size: 8, offset: 152)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !3332, file: !3161, line: 588, baseType: !2239, size: 8, offset: 160)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !3332, file: !3161, line: 589, baseType: !2239, size: 8, offset: 168)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !3332, file: !3161, line: 590, baseType: !2239, size: 8, offset: 176)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !2299, file: !581, line: 178, baseType: !2249, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !2299, file: !581, line: 179, baseType: !3347, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !581, line: 150, baseType: !3349)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !581, line: 142, size: 320, elements: !3350)
!3350 = !{!3351, !3352, !3353, !3354, !3355, !3356}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3349, file: !581, line: 144, baseType: !2394, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3349, file: !581, line: 145, baseType: !2279, size: 64, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3349, file: !581, line: 146, baseType: !2279, size: 64, offset: 128)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3349, file: !581, line: 147, baseType: !3010, size: 32, offset: 192)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3349, file: !581, line: 148, baseType: !7, size: 32, offset: 224)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3349, file: !581, line: 149, baseType: !2239, size: 8, offset: 256)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !2299, file: !581, line: 180, baseType: !3358, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !581, line: 162, baseType: !3360)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !581, line: 159, size: 128, elements: !3361)
!3361 = !{!3362, !3363}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3360, file: !581, line: 160, baseType: !2394, size: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3360, file: !581, line: 161, baseType: !2365, size: 64, offset: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !2299, file: !581, line: 181, baseType: !3365, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !581, line: 181, flags: DIFlagFwdDecl)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !2294, file: !581, line: 317, baseType: !3368, size: 64)
!3368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 64, elements: !2313)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !2294, file: !581, line: 318, baseType: !3370, size: 320)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !581, line: 188, size: 320, elements: !3371)
!3371 = !{!3372, !3374, !3429}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3370, file: !581, line: 190, baseType: !3373, size: 192)
!3373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2298, size: 192, elements: !2465)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3370, file: !581, line: 193, baseType: !3375, size: 64, offset: 192)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !581, line: 206, size: 320, elements: !3377)
!3377 = !{!3378, !3414, !3415, !3416, !3428}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3376, file: !581, line: 208, baseType: !3379, size: 64)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2248, line: 62, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !3382, line: 538, size: 256, elements: !3383)
!3382 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3383 = !{!3384, !3388, !3394, !3405}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3381, file: !3382, line: 539, baseType: !3385, size: 32)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !3382, line: 482, size: 32, elements: !3386)
!3386 = !{!3387}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3385, file: !3382, line: 484, baseType: !7, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !3381, file: !3382, line: 540, baseType: !3389, size: 192)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !3382, line: 488, size: 192, elements: !3390)
!3390 = !{!3391, !3392, !3393}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3389, file: !3382, line: 489, baseType: !3385, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3389, file: !3382, line: 492, baseType: !2245, size: 64, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3389, file: !3382, line: 496, baseType: !2394, size: 64, offset: 128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !3381, file: !3382, line: 541, baseType: !3395, size: 256)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !3382, line: 504, size: 256, elements: !3396)
!3396 = !{!3397, !3398, !3403, !3404}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3395, file: !3382, line: 505, baseType: !3385, size: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3395, file: !3382, line: 509, baseType: !3399, size: 64, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !3382, line: 501, baseType: !3400)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !2735}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3395, file: !3382, line: 510, baseType: !2735, size: 64, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3395, file: !3382, line: 513, baseType: !3379, size: 64, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !3381, file: !3382, line: 542, baseType: !3406, size: 128)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !3382, line: 530, size: 128, elements: !3407)
!3407 = !{!3408, !3409}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3406, file: !3382, line: 531, baseType: !3385, size: 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3406, file: !3382, line: 534, baseType: !3410, size: 64, offset: 64)
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !3382, line: 525, baseType: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!2239, !2394, !2245, !2348, !2348}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3376, file: !581, line: 211, baseType: !7, size: 32, offset: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3376, file: !581, line: 214, baseType: !2365, size: 64, offset: 128)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3376, file: !581, line: 224, baseType: !3417, size: 64, offset: 192)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !581, line: 202, baseType: !3419)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !581, line: 202, size: 128, elements: !3420)
!3420 = !{!3421}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3419, file: !581, line: 202, baseType: !3422, size: 128)
!3422 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !581, line: 200, baseType: !3423)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !581, line: 200, size: 128, elements: !3424)
!3424 = !{!3425, !3426, !3427}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3423, file: !581, line: 200, baseType: !7, size: 32)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3423, file: !581, line: 200, baseType: !7, size: 32, offset: 32)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3423, file: !581, line: 200, baseType: !2312, size: 64, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3376, file: !581, line: 234, baseType: !3417, size: 64, offset: 256)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3370, file: !581, line: 197, baseType: !2365, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !2294, file: !581, line: 319, baseType: !2454, size: 256)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2294, file: !581, line: 320, baseType: !2473, size: 192)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2267, file: !325, line: 134, baseType: !2244, size: 64, offset: 192)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !2267, file: !325, line: 137, baseType: !2394, size: 64, offset: 256)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !2267, file: !325, line: 138, baseType: !2514, size: 32, offset: 320)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !2267, file: !325, line: 142, baseType: !7, size: 32, offset: 352)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2267, file: !325, line: 144, baseType: !2240, size: 32, offset: 384)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !2267, file: !325, line: 145, baseType: !2240, size: 32, offset: 416)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !325, line: 146, baseType: !3439, size: 64, offset: 448)
!3439 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !325, line: 119, baseType: !2365)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2250, file: !325, line: 220, baseType: !2253, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2250, file: !325, line: 223, baseType: !2244, size: 64, offset: 128)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !2250, file: !325, line: 226, baseType: !2860, size: 64, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !2250, file: !325, line: 229, baseType: !3444, size: 128, offset: 256)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3445, size: 128, elements: !2349)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !325, line: 229, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !2250, file: !325, line: 232, baseType: !2249, size: 64, offset: 384)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !2250, file: !325, line: 233, baseType: !2249, size: 64, offset: 448)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !2250, file: !325, line: 238, baseType: !3450, size: 64, offset: 512)
!3450 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !325, line: 235, size: 64, elements: !3451)
!3451 = !{!3452, !3458}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !3450, file: !325, line: 236, baseType: !3453, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !325, line: 273, size: 128, elements: !3455)
!3455 = !{!3456, !3457}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3454, file: !325, line: 275, baseType: !2275, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !3454, file: !325, line: 278, baseType: !2275, size: 64, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3450, file: !325, line: 237, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !325, line: 259, size: 320, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !3460, file: !325, line: 261, baseType: !2279, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !3460, file: !325, line: 262, baseType: !2279, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3460, file: !325, line: 266, baseType: !2279, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !3460, file: !325, line: 267, baseType: !2279, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !3460, file: !325, line: 270, baseType: !2240, size: 32, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2250, file: !325, line: 241, baseType: !3439, size: 64, offset: 576)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2250, file: !325, line: 244, baseType: !2240, size: 32, offset: 640)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2250, file: !325, line: 247, baseType: !2240, size: 32, offset: 672)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2250, file: !325, line: 250, baseType: !2240, size: 32, offset: 704)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2250, file: !325, line: 253, baseType: !2240, size: 32, offset: 736)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2250, file: !325, line: 256, baseType: !2240, size: 32, offset: 768)
!3473 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !2795, line: 32, baseType: !3477)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !2795, line: 32, size: 96, elements: !3478)
!3478 = !{!3479}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3477, file: !2795, line: 32, baseType: !3480, size: 96)
!3480 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !2795, line: 31, baseType: !3481)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !2795, line: 31, size: 96, elements: !3482)
!3482 = !{!3483, !3484, !3485}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3481, file: !2795, line: 31, baseType: !7, size: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3481, file: !2795, line: 31, baseType: !7, size: 32, offset: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3481, file: !2795, line: 31, baseType: !3486, size: 32, offset: 64)
!3486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 32, elements: !2313)
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !2248, line: 47, baseType: !2332)
!3488 = !{!0, !3489, !3517, !3519, !3521, !3523, !3525}
!3489 = !DIGlobalVariableExpression(var: !3490, expr: !DIExpression())
!3490 = distinct !DIGlobalVariable(name: "pass_if_after_combine", scope: !2, file: !3, line: 4277, type: !3491, isLocal: false, isDefinition: true)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !6, line: 162, size: 640, elements: !3492)
!3492 = !{!3493}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !3491, file: !6, line: 164, baseType: !3494, size: 640)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !6, line: 114, size: 640, elements: !3495)
!3495 = !{!3496, !3497, !3498, !3502, !3506, !3508, !3509, !3510, !3512, !3513, !3514, !3515, !3516}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3494, file: !6, line: 117, baseType: !5, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3494, file: !6, line: 121, baseType: !2245, size: 64, offset: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !3494, file: !6, line: 125, baseType: !3499, size: 64, offset: 128)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!2239}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !3494, file: !6, line: 130, baseType: !3503, size: 64, offset: 192)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!7}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !3494, file: !6, line: 133, baseType: !3507, size: 64, offset: 256)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3494, file: !6, line: 136, baseType: !3507, size: 64, offset: 320)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !3494, file: !6, line: 139, baseType: !2240, size: 32, offset: 384)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !3494, file: !6, line: 143, baseType: !3511, size: 32, offset: 416)
!3511 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !14, line: 80, baseType: !13)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !3494, file: !6, line: 146, baseType: !7, size: 32, offset: 448)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !3494, file: !6, line: 147, baseType: !7, size: 32, offset: 480)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !3494, file: !6, line: 148, baseType: !7, size: 32, offset: 512)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !3494, file: !6, line: 151, baseType: !7, size: 32, offset: 544)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !3494, file: !6, line: 152, baseType: !7, size: 32, offset: 576)
!3517 = !DIGlobalVariableExpression(var: !3518, expr: !DIExpression())
!3518 = distinct !DIGlobalVariable(name: "pass_if_after_reload", scope: !2, file: !3, line: 4314, type: !3491, isLocal: false, isDefinition: true)
!3519 = !DIGlobalVariableExpression(var: !3520, expr: !DIExpression())
!3520 = distinct !DIGlobalVariable(name: "num_possible_if_blocks", scope: !2, file: !3, line: 74, type: !2240, isLocal: true, isDefinition: true)
!3521 = !DIGlobalVariableExpression(var: !3522, expr: !DIExpression())
!3522 = distinct !DIGlobalVariable(name: "num_updated_if_blocks", scope: !2, file: !3, line: 78, type: !2240, isLocal: true, isDefinition: true)
!3523 = !DIGlobalVariableExpression(var: !3524, expr: !DIExpression())
!3524 = distinct !DIGlobalVariable(name: "num_true_changes", scope: !2, file: !3, line: 81, type: !2240, isLocal: true, isDefinition: true)
!3525 = !DIGlobalVariableExpression(var: !3526, expr: !DIExpression())
!3526 = distinct !DIGlobalVariable(name: "cond_exec_changed_p", scope: !2, file: !3, line: 84, type: !2240, isLocal: true, isDefinition: true)
!3527 = !DIGlobalVariableExpression(var: !3526, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3528 = !{i32 2, !"Dwarf Version", i32 4}
!3529 = !{i32 2, !"Debug Info Version", i32 3}
!3530 = !{i32 1, !"wchar_size", i32 4}
!3531 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3532 = distinct !DISubprogram(name: "vprintf", scope: !3533, file: !3533, line: 39, type: !3534, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3544)
!3533 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!2240, !3536, !3537}
!3536 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2245)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !3539)
!3539 = !{!3540, !3541, !3542, !3543}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3538, file: !3, baseType: !7, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3538, file: !3, baseType: !7, size: 32, offset: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3538, file: !3, baseType: !2244, size: 64, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3538, file: !3, baseType: !2244, size: 64, offset: 128)
!3544 = !{!3545, !3546}
!3545 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3532, file: !3533, line: 39, type: !3536)
!3546 = !DILocalVariable(name: "__arg", arg: 2, scope: !3532, file: !3533, line: 39, type: !3537)
!3547 = !DILocation(line: 0, scope: !3532)
!3548 = !DILocation(line: 41, column: 20, scope: !3532)
!3549 = !DILocation(line: 41, column: 10, scope: !3532)
!3550 = !DILocation(line: 41, column: 3, scope: !3532)
!3551 = distinct !DISubprogram(name: "getchar", scope: !3533, file: !3533, line: 47, type: !3552, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{!2240}
!3554 = !{}
!3555 = !DILocation(line: 49, column: 16, scope: !3551)
!3556 = !DILocation(line: 49, column: 10, scope: !3551)
!3557 = !DILocation(line: 49, column: 3, scope: !3551)
!3558 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3533, file: !3533, line: 56, type: !3559, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3611)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!2240, !3561}
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3563, line: 7, baseType: !3564)
!3563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3565, line: 49, size: 1728, elements: !3566)
!3565 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3566 = !{!3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3582, !3584, !3585, !3586, !3589, !3590, !3591, !3592, !3595, !3597, !3600, !3603, !3604, !3605, !3606, !3607}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3564, file: !3565, line: 51, baseType: !2240, size: 32)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3564, file: !3565, line: 54, baseType: !2242, size: 64, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3564, file: !3565, line: 55, baseType: !2242, size: 64, offset: 128)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3564, file: !3565, line: 56, baseType: !2242, size: 64, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3564, file: !3565, line: 57, baseType: !2242, size: 64, offset: 256)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3564, file: !3565, line: 58, baseType: !2242, size: 64, offset: 320)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3564, file: !3565, line: 59, baseType: !2242, size: 64, offset: 384)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3564, file: !3565, line: 60, baseType: !2242, size: 64, offset: 448)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3564, file: !3565, line: 61, baseType: !2242, size: 64, offset: 512)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3564, file: !3565, line: 64, baseType: !2242, size: 64, offset: 576)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3564, file: !3565, line: 65, baseType: !2242, size: 64, offset: 640)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3564, file: !3565, line: 66, baseType: !2242, size: 64, offset: 704)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3564, file: !3565, line: 68, baseType: !3580, size: 64, offset: 768)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3565, line: 36, flags: DIFlagFwdDecl)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3564, file: !3565, line: 70, baseType: !3583, size: 64, offset: 832)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3564, file: !3565, line: 72, baseType: !2240, size: 32, offset: 896)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3564, file: !3565, line: 73, baseType: !2240, size: 32, offset: 928)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3564, file: !3565, line: 74, baseType: !3587, size: 64, offset: 960)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3588, line: 152, baseType: !2365)
!3588 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3564, file: !3565, line: 77, baseType: !3473, size: 16, offset: 1024)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3564, file: !3565, line: 78, baseType: !3172, size: 8, offset: 1040)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3564, file: !3565, line: 79, baseType: !2489, size: 8, offset: 1048)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3564, file: !3565, line: 81, baseType: !3593, size: 64, offset: 1088)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3565, line: 43, baseType: null)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3564, file: !3565, line: 89, baseType: !3596, size: 64, offset: 1152)
!3596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3588, line: 153, baseType: !2365)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3564, file: !3565, line: 91, baseType: !3598, size: 64, offset: 1216)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3565, line: 37, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3564, file: !3565, line: 92, baseType: !3601, size: 64, offset: 1280)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3565, line: 38, flags: DIFlagFwdDecl)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3564, file: !3565, line: 93, baseType: !3583, size: 64, offset: 1344)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3564, file: !3565, line: 94, baseType: !2244, size: 64, offset: 1408)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3564, file: !3565, line: 95, baseType: !2750, size: 64, offset: 1472)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3564, file: !3565, line: 96, baseType: !2240, size: 32, offset: 1536)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3564, file: !3565, line: 98, baseType: !3608, size: 160, offset: 1568)
!3608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 160, elements: !3609)
!3609 = !{!3610}
!3610 = !DISubrange(count: 20)
!3611 = !{!3612}
!3612 = !DILocalVariable(name: "__fp", arg: 1, scope: !3558, file: !3533, line: 56, type: !3561)
!3613 = !DILocation(line: 0, scope: !3558)
!3614 = !DILocation(line: 58, column: 10, scope: !3558)
!3615 = !DILocation(line: 58, column: 3, scope: !3558)
!3616 = distinct !DISubprogram(name: "getc_unlocked", scope: !3533, file: !3533, line: 66, type: !3559, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3617)
!3617 = !{!3618}
!3618 = !DILocalVariable(name: "__fp", arg: 1, scope: !3616, file: !3533, line: 66, type: !3561)
!3619 = !DILocation(line: 0, scope: !3616)
!3620 = !DILocation(line: 68, column: 10, scope: !3616)
!3621 = !DILocation(line: 68, column: 3, scope: !3616)
!3622 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3533, file: !3533, line: 73, type: !3552, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!3623 = !DILocation(line: 75, column: 10, scope: !3622)
!3624 = !DILocation(line: 75, column: 3, scope: !3622)
!3625 = distinct !DISubprogram(name: "putchar", scope: !3533, file: !3533, line: 82, type: !3626, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!2240, !2240}
!3628 = !{!3629}
!3629 = !DILocalVariable(name: "__c", arg: 1, scope: !3625, file: !3533, line: 82, type: !2240)
!3630 = !DILocation(line: 0, scope: !3625)
!3631 = !DILocation(line: 84, column: 21, scope: !3625)
!3632 = !DILocation(line: 84, column: 10, scope: !3625)
!3633 = !DILocation(line: 84, column: 3, scope: !3625)
!3634 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3533, file: !3533, line: 91, type: !3635, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3637)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!2240, !2240, !3561}
!3637 = !{!3638, !3639}
!3638 = !DILocalVariable(name: "__c", arg: 1, scope: !3634, file: !3533, line: 91, type: !2240)
!3639 = !DILocalVariable(name: "__stream", arg: 2, scope: !3634, file: !3533, line: 91, type: !3561)
!3640 = !DILocation(line: 0, scope: !3634)
!3641 = !DILocation(line: 93, column: 10, scope: !3634)
!3642 = !DILocation(line: 93, column: 3, scope: !3634)
!3643 = distinct !DISubprogram(name: "putc_unlocked", scope: !3533, file: !3533, line: 101, type: !3635, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3644)
!3644 = !{!3645, !3646}
!3645 = !DILocalVariable(name: "__c", arg: 1, scope: !3643, file: !3533, line: 101, type: !2240)
!3646 = !DILocalVariable(name: "__stream", arg: 2, scope: !3643, file: !3533, line: 101, type: !3561)
!3647 = !DILocation(line: 0, scope: !3643)
!3648 = !DILocation(line: 103, column: 10, scope: !3643)
!3649 = !DILocation(line: 103, column: 3, scope: !3643)
!3650 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3533, file: !3533, line: 108, type: !3626, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3651)
!3651 = !{!3652}
!3652 = !DILocalVariable(name: "__c", arg: 1, scope: !3650, file: !3533, line: 108, type: !2240)
!3653 = !DILocation(line: 0, scope: !3650)
!3654 = !DILocation(line: 110, column: 10, scope: !3650)
!3655 = !DILocation(line: 110, column: 3, scope: !3650)
!3656 = distinct !DISubprogram(name: "getline", scope: !3533, file: !3533, line: 118, type: !3657, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3661)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!3659, !2241, !3660, !3561}
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3588, line: 193, baseType: !2365)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!3661 = !{!3662, !3663, !3664}
!3662 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3656, file: !3533, line: 118, type: !2241)
!3663 = !DILocalVariable(name: "__n", arg: 2, scope: !3656, file: !3533, line: 118, type: !3660)
!3664 = !DILocalVariable(name: "__stream", arg: 3, scope: !3656, file: !3533, line: 118, type: !3561)
!3665 = !DILocation(line: 0, scope: !3656)
!3666 = !DILocation(line: 120, column: 10, scope: !3656)
!3667 = !DILocation(line: 120, column: 3, scope: !3656)
!3668 = distinct !DISubprogram(name: "feof_unlocked", scope: !3533, file: !3533, line: 128, type: !3559, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3669)
!3669 = !{!3670}
!3670 = !DILocalVariable(name: "__stream", arg: 1, scope: !3668, file: !3533, line: 128, type: !3561)
!3671 = !DILocation(line: 0, scope: !3668)
!3672 = !DILocation(line: 130, column: 10, scope: !3668)
!3673 = !DILocation(line: 130, column: 3, scope: !3668)
!3674 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3533, file: !3533, line: 135, type: !3559, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3675)
!3675 = !{!3676}
!3676 = !DILocalVariable(name: "__stream", arg: 1, scope: !3674, file: !3533, line: 135, type: !3561)
!3677 = !DILocation(line: 0, scope: !3674)
!3678 = !DILocation(line: 137, column: 10, scope: !3674)
!3679 = !DILocation(line: 137, column: 3, scope: !3674)
!3680 = distinct !DISubprogram(name: "tolower", scope: !3681, file: !3681, line: 207, type: !3626, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3682)
!3681 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "__c", arg: 1, scope: !3680, file: !3681, line: 207, type: !2240)
!3684 = !DILocation(line: 0, scope: !3680)
!3685 = !DILocation(line: 209, column: 22, scope: !3680)
!3686 = !DILocation(line: 209, column: 39, scope: !3680)
!3687 = !DILocation(line: 209, column: 38, scope: !3680)
!3688 = !DILocation(line: 209, column: 37, scope: !3680)
!3689 = !DILocation(line: 209, column: 10, scope: !3680)
!3690 = !DILocation(line: 209, column: 3, scope: !3680)
!3691 = distinct !DISubprogram(name: "toupper", scope: !3681, file: !3681, line: 213, type: !3626, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3692 = !{!3693}
!3693 = !DILocalVariable(name: "__c", arg: 1, scope: !3691, file: !3681, line: 213, type: !2240)
!3694 = !DILocation(line: 0, scope: !3691)
!3695 = !DILocation(line: 215, column: 22, scope: !3691)
!3696 = !DILocation(line: 215, column: 39, scope: !3691)
!3697 = !DILocation(line: 215, column: 38, scope: !3691)
!3698 = !DILocation(line: 215, column: 37, scope: !3691)
!3699 = !DILocation(line: 215, column: 10, scope: !3691)
!3700 = !DILocation(line: 215, column: 3, scope: !3691)
!3701 = distinct !DISubprogram(name: "atoi", scope: !3702, file: !3702, line: 361, type: !3703, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3705)
!3702 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!2240, !2245}
!3705 = !{!3706}
!3706 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3701, file: !3702, line: 361, type: !2245)
!3707 = !DILocation(line: 0, scope: !3701)
!3708 = !DILocation(line: 363, column: 16, scope: !3701)
!3709 = !DILocation(line: 363, column: 10, scope: !3701)
!3710 = !DILocation(line: 363, column: 3, scope: !3701)
!3711 = distinct !DISubprogram(name: "atol", scope: !3702, file: !3702, line: 366, type: !3712, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3714)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!2365, !2245}
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3711, file: !3702, line: 366, type: !2245)
!3716 = !DILocation(line: 0, scope: !3711)
!3717 = !DILocation(line: 368, column: 10, scope: !3711)
!3718 = !DILocation(line: 368, column: 3, scope: !3711)
!3719 = distinct !DISubprogram(name: "atoll", scope: !3702, file: !3702, line: 373, type: !3720, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!3722, !2245}
!3722 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3723 = !{!3724}
!3724 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3719, file: !3702, line: 373, type: !2245)
!3725 = !DILocation(line: 0, scope: !3719)
!3726 = !DILocation(line: 375, column: 10, scope: !3719)
!3727 = !DILocation(line: 375, column: 3, scope: !3719)
!3728 = distinct !DISubprogram(name: "bsearch", scope: !3729, file: !3729, line: 20, type: !3730, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3733)
!3729 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!2244, !2735, !2735, !2750, !2750, !3732}
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3702, line: 808, baseType: !2739)
!3733 = !{!3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743}
!3734 = !DILocalVariable(name: "__key", arg: 1, scope: !3728, file: !3729, line: 20, type: !2735)
!3735 = !DILocalVariable(name: "__base", arg: 2, scope: !3728, file: !3729, line: 20, type: !2735)
!3736 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3728, file: !3729, line: 20, type: !2750)
!3737 = !DILocalVariable(name: "__size", arg: 4, scope: !3728, file: !3729, line: 20, type: !2750)
!3738 = !DILocalVariable(name: "__compar", arg: 5, scope: !3728, file: !3729, line: 21, type: !3732)
!3739 = !DILocalVariable(name: "__l", scope: !3728, file: !3729, line: 23, type: !2750)
!3740 = !DILocalVariable(name: "__u", scope: !3728, file: !3729, line: 23, type: !2750)
!3741 = !DILocalVariable(name: "__idx", scope: !3728, file: !3729, line: 23, type: !2750)
!3742 = !DILocalVariable(name: "__p", scope: !3728, file: !3729, line: 24, type: !2735)
!3743 = !DILocalVariable(name: "__comparison", scope: !3728, file: !3729, line: 25, type: !2240)
!3744 = !DILocation(line: 0, scope: !3728)
!3745 = !DILocation(line: 29, column: 3, scope: !3728)
!3746 = !DILocation(line: 27, column: 7, scope: !3728)
!3747 = !DILocation(line: 29, column: 14, scope: !3728)
!3748 = !DILocation(line: 31, column: 20, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3728, file: !3729, line: 30, column: 5)
!3750 = !DILocation(line: 31, column: 27, scope: !3749)
!3751 = !DILocation(line: 32, column: 56, scope: !3749)
!3752 = !DILocation(line: 32, column: 47, scope: !3749)
!3753 = !DILocation(line: 33, column: 22, scope: !3749)
!3754 = !DILocation(line: 34, column: 24, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3749, file: !3729, line: 34, column: 11)
!3756 = !DILocation(line: 34, column: 11, scope: !3749)
!3757 = !DILocation(line: 36, column: 29, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3755, file: !3729, line: 36, column: 16)
!3759 = !DILocation(line: 36, column: 16, scope: !3755)
!3760 = !DILocation(line: 37, column: 14, scope: !3758)
!3761 = distinct !{!3761, !3745, !3762}
!3762 = !DILocation(line: 40, column: 5, scope: !3728)
!3763 = !DILocation(line: 43, column: 1, scope: !3728)
!3764 = distinct !DISubprogram(name: "atof", scope: !3765, file: !3765, line: 25, type: !3766, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3765 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!3768, !2245}
!3768 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3769 = !{!3770}
!3770 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3764, file: !3765, line: 25, type: !2245)
!3771 = !DILocation(line: 0, scope: !3764)
!3772 = !DILocation(line: 27, column: 10, scope: !3764)
!3773 = !DILocation(line: 27, column: 3, scope: !3764)
!3774 = distinct !DISubprogram(name: "strtoimax", scope: !3775, file: !3775, line: 324, type: !3776, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3782)
!3775 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!3778, !3536, !3781, !2240}
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3779, line: 101, baseType: !3780)
!3779 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3588, line: 72, baseType: !2365)
!3781 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2241)
!3782 = !{!3783, !3784, !3785}
!3783 = !DILocalVariable(name: "nptr", arg: 1, scope: !3774, file: !3775, line: 324, type: !3536)
!3784 = !DILocalVariable(name: "endptr", arg: 2, scope: !3774, file: !3775, line: 324, type: !3781)
!3785 = !DILocalVariable(name: "base", arg: 3, scope: !3774, file: !3775, line: 324, type: !2240)
!3786 = !DILocation(line: 0, scope: !3774)
!3787 = !DILocation(line: 327, column: 10, scope: !3774)
!3788 = !DILocation(line: 327, column: 3, scope: !3774)
!3789 = distinct !DISubprogram(name: "strtoumax", scope: !3775, file: !3775, line: 336, type: !3790, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3794)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!3792, !3536, !3781, !2240}
!3792 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3779, line: 102, baseType: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3588, line: 73, baseType: !2348)
!3794 = !{!3795, !3796, !3797}
!3795 = !DILocalVariable(name: "nptr", arg: 1, scope: !3789, file: !3775, line: 336, type: !3536)
!3796 = !DILocalVariable(name: "endptr", arg: 2, scope: !3789, file: !3775, line: 336, type: !3781)
!3797 = !DILocalVariable(name: "base", arg: 3, scope: !3789, file: !3775, line: 336, type: !2240)
!3798 = !DILocation(line: 0, scope: !3789)
!3799 = !DILocation(line: 339, column: 10, scope: !3789)
!3800 = !DILocation(line: 339, column: 3, scope: !3789)
!3801 = distinct !DISubprogram(name: "wcstoimax", scope: !3775, file: !3775, line: 348, type: !3802, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3811)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!3778, !3804, !3808, !2240}
!3804 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3805)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3775, line: 34, baseType: !2240)
!3808 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3809)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3811 = !{!3812, !3813, !3814}
!3812 = !DILocalVariable(name: "nptr", arg: 1, scope: !3801, file: !3775, line: 348, type: !3804)
!3813 = !DILocalVariable(name: "endptr", arg: 2, scope: !3801, file: !3775, line: 348, type: !3808)
!3814 = !DILocalVariable(name: "base", arg: 3, scope: !3801, file: !3775, line: 348, type: !2240)
!3815 = !DILocation(line: 0, scope: !3801)
!3816 = !DILocation(line: 351, column: 10, scope: !3801)
!3817 = !DILocation(line: 351, column: 3, scope: !3801)
!3818 = distinct !DISubprogram(name: "wcstoumax", scope: !3775, file: !3775, line: 362, type: !3819, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3821)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!3792, !3804, !3808, !2240}
!3821 = !{!3822, !3823, !3824}
!3822 = !DILocalVariable(name: "nptr", arg: 1, scope: !3818, file: !3775, line: 362, type: !3804)
!3823 = !DILocalVariable(name: "endptr", arg: 2, scope: !3818, file: !3775, line: 362, type: !3808)
!3824 = !DILocalVariable(name: "base", arg: 3, scope: !3818, file: !3775, line: 362, type: !2240)
!3825 = !DILocation(line: 0, scope: !3818)
!3826 = !DILocation(line: 365, column: 10, scope: !3818)
!3827 = !DILocation(line: 365, column: 3, scope: !3818)
!3828 = distinct !DISubprogram(name: "stat", scope: !3829, file: !3829, line: 453, type: !3830, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3867)
!3829 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!2240, !2245, !3832}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3834, line: 46, size: 1152, elements: !3835)
!3834 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3835 = !{!3836, !3838, !3840, !3842, !3844, !3846, !3848, !3849, !3850, !3851, !3853, !3855, !3863, !3864, !3865}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3833, file: !3834, line: 48, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3588, line: 145, baseType: !2348)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3833, file: !3834, line: 53, baseType: !3839, size: 64, offset: 64)
!3839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3588, line: 148, baseType: !2348)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3833, file: !3834, line: 61, baseType: !3841, size: 64, offset: 128)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3588, line: 151, baseType: !2348)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3833, file: !3834, line: 62, baseType: !3843, size: 32, offset: 192)
!3843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3588, line: 150, baseType: !7)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3833, file: !3834, line: 64, baseType: !3845, size: 32, offset: 224)
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3588, line: 146, baseType: !7)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3833, file: !3834, line: 65, baseType: !3847, size: 32, offset: 256)
!3847 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3588, line: 147, baseType: !7)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3833, file: !3834, line: 67, baseType: !2240, size: 32, offset: 288)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3833, file: !3834, line: 69, baseType: !3837, size: 64, offset: 320)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3833, file: !3834, line: 74, baseType: !3587, size: 64, offset: 384)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3833, file: !3834, line: 78, baseType: !3852, size: 64, offset: 448)
!3852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3588, line: 174, baseType: !2365)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3833, file: !3834, line: 80, baseType: !3854, size: 64, offset: 512)
!3854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3588, line: 179, baseType: !2365)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3833, file: !3834, line: 91, baseType: !3856, size: 128, offset: 576)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3857, line: 10, size: 128, elements: !3858)
!3857 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3858 = !{!3859, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3856, file: !3857, line: 12, baseType: !3860, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3588, line: 160, baseType: !2365)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3856, file: !3857, line: 16, baseType: !3862, size: 64, offset: 64)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3588, line: 196, baseType: !2365)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3833, file: !3834, line: 92, baseType: !3856, size: 128, offset: 704)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3833, file: !3834, line: 93, baseType: !3856, size: 128, offset: 832)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3833, file: !3834, line: 106, baseType: !3866, size: 192, offset: 960)
!3866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3862, size: 192, elements: !2465)
!3867 = !{!3868, !3869}
!3868 = !DILocalVariable(name: "__path", arg: 1, scope: !3828, file: !3829, line: 453, type: !2245)
!3869 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3828, file: !3829, line: 453, type: !3832)
!3870 = !DILocation(line: 0, scope: !3828)
!3871 = !DILocation(line: 455, column: 10, scope: !3828)
!3872 = !DILocation(line: 455, column: 3, scope: !3828)
!3873 = distinct !DISubprogram(name: "lstat", scope: !3829, file: !3829, line: 460, type: !3830, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3874)
!3874 = !{!3875, !3876}
!3875 = !DILocalVariable(name: "__path", arg: 1, scope: !3873, file: !3829, line: 460, type: !2245)
!3876 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3873, file: !3829, line: 460, type: !3832)
!3877 = !DILocation(line: 0, scope: !3873)
!3878 = !DILocation(line: 462, column: 10, scope: !3873)
!3879 = !DILocation(line: 462, column: 3, scope: !3873)
!3880 = distinct !DISubprogram(name: "fstat", scope: !3829, file: !3829, line: 467, type: !3881, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!2240, !2240, !3832}
!3883 = !{!3884, !3885}
!3884 = !DILocalVariable(name: "__fd", arg: 1, scope: !3880, file: !3829, line: 467, type: !2240)
!3885 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3880, file: !3829, line: 467, type: !3832)
!3886 = !DILocation(line: 0, scope: !3880)
!3887 = !DILocation(line: 469, column: 10, scope: !3880)
!3888 = !DILocation(line: 469, column: 3, scope: !3880)
!3889 = distinct !DISubprogram(name: "fstatat", scope: !3829, file: !3829, line: 474, type: !3890, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3892)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!2240, !2240, !2245, !3832, !2240}
!3892 = !{!3893, !3894, !3895, !3896}
!3893 = !DILocalVariable(name: "__fd", arg: 1, scope: !3889, file: !3829, line: 474, type: !2240)
!3894 = !DILocalVariable(name: "__filename", arg: 2, scope: !3889, file: !3829, line: 474, type: !2245)
!3895 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3889, file: !3829, line: 474, type: !3832)
!3896 = !DILocalVariable(name: "__flag", arg: 4, scope: !3889, file: !3829, line: 474, type: !2240)
!3897 = !DILocation(line: 0, scope: !3889)
!3898 = !DILocation(line: 477, column: 10, scope: !3889)
!3899 = !DILocation(line: 477, column: 3, scope: !3889)
!3900 = distinct !DISubprogram(name: "mknod", scope: !3829, file: !3829, line: 483, type: !3901, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3903)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!2240, !2245, !3843, !3837}
!3903 = !{!3904, !3905, !3906}
!3904 = !DILocalVariable(name: "__path", arg: 1, scope: !3900, file: !3829, line: 483, type: !2245)
!3905 = !DILocalVariable(name: "__mode", arg: 2, scope: !3900, file: !3829, line: 483, type: !3843)
!3906 = !DILocalVariable(name: "__dev", arg: 3, scope: !3900, file: !3829, line: 483, type: !3837)
!3907 = !DILocation(line: 0, scope: !3900)
!3908 = !DILocation(line: 485, column: 10, scope: !3900)
!3909 = !DILocation(line: 485, column: 3, scope: !3900)
!3910 = distinct !DISubprogram(name: "mknodat", scope: !3829, file: !3829, line: 491, type: !3911, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!2240, !2240, !2245, !3843, !3837}
!3913 = !{!3914, !3915, !3916, !3917}
!3914 = !DILocalVariable(name: "__fd", arg: 1, scope: !3910, file: !3829, line: 491, type: !2240)
!3915 = !DILocalVariable(name: "__path", arg: 2, scope: !3910, file: !3829, line: 491, type: !2245)
!3916 = !DILocalVariable(name: "__mode", arg: 3, scope: !3910, file: !3829, line: 491, type: !3843)
!3917 = !DILocalVariable(name: "__dev", arg: 4, scope: !3910, file: !3829, line: 491, type: !3837)
!3918 = !DILocation(line: 0, scope: !3910)
!3919 = !DILocation(line: 494, column: 10, scope: !3910)
!3920 = !DILocation(line: 494, column: 3, scope: !3910)
!3921 = distinct !DISubprogram(name: "stat64", scope: !3829, file: !3829, line: 502, type: !3922, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3944)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!2240, !2245, !3924}
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3834, line: 119, size: 1152, elements: !3926)
!3926 = !{!3927, !3928, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3940, !3941, !3942, !3943}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3925, file: !3834, line: 121, baseType: !3837, size: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3925, file: !3834, line: 123, baseType: !3929, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3588, line: 149, baseType: !2348)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3925, file: !3834, line: 124, baseType: !3841, size: 64, offset: 128)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3925, file: !3834, line: 125, baseType: !3843, size: 32, offset: 192)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3925, file: !3834, line: 132, baseType: !3845, size: 32, offset: 224)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3925, file: !3834, line: 133, baseType: !3847, size: 32, offset: 256)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3925, file: !3834, line: 135, baseType: !2240, size: 32, offset: 288)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3925, file: !3834, line: 136, baseType: !3837, size: 64, offset: 320)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3925, file: !3834, line: 137, baseType: !3587, size: 64, offset: 384)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3925, file: !3834, line: 143, baseType: !3852, size: 64, offset: 448)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3925, file: !3834, line: 144, baseType: !3939, size: 64, offset: 512)
!3939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3588, line: 180, baseType: !2365)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3925, file: !3834, line: 152, baseType: !3856, size: 128, offset: 576)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3925, file: !3834, line: 153, baseType: !3856, size: 128, offset: 704)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3925, file: !3834, line: 154, baseType: !3856, size: 128, offset: 832)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3925, file: !3834, line: 164, baseType: !3866, size: 192, offset: 960)
!3944 = !{!3945, !3946}
!3945 = !DILocalVariable(name: "__path", arg: 1, scope: !3921, file: !3829, line: 502, type: !2245)
!3946 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3921, file: !3829, line: 502, type: !3924)
!3947 = !DILocation(line: 0, scope: !3921)
!3948 = !DILocation(line: 504, column: 10, scope: !3921)
!3949 = !DILocation(line: 504, column: 3, scope: !3921)
!3950 = distinct !DISubprogram(name: "lstat64", scope: !3829, file: !3829, line: 509, type: !3922, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3951)
!3951 = !{!3952, !3953}
!3952 = !DILocalVariable(name: "__path", arg: 1, scope: !3950, file: !3829, line: 509, type: !2245)
!3953 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3950, file: !3829, line: 509, type: !3924)
!3954 = !DILocation(line: 0, scope: !3950)
!3955 = !DILocation(line: 511, column: 10, scope: !3950)
!3956 = !DILocation(line: 511, column: 3, scope: !3950)
!3957 = distinct !DISubprogram(name: "fstat64", scope: !3829, file: !3829, line: 516, type: !3958, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!2240, !2240, !3924}
!3960 = !{!3961, !3962}
!3961 = !DILocalVariable(name: "__fd", arg: 1, scope: !3957, file: !3829, line: 516, type: !2240)
!3962 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3957, file: !3829, line: 516, type: !3924)
!3963 = !DILocation(line: 0, scope: !3957)
!3964 = !DILocation(line: 518, column: 10, scope: !3957)
!3965 = !DILocation(line: 518, column: 3, scope: !3957)
!3966 = distinct !DISubprogram(name: "fstatat64", scope: !3829, file: !3829, line: 523, type: !3967, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!2240, !2240, !2245, !3924, !2240}
!3969 = !{!3970, !3971, !3972, !3973}
!3970 = !DILocalVariable(name: "__fd", arg: 1, scope: !3966, file: !3829, line: 523, type: !2240)
!3971 = !DILocalVariable(name: "__filename", arg: 2, scope: !3966, file: !3829, line: 523, type: !2245)
!3972 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3966, file: !3829, line: 523, type: !3924)
!3973 = !DILocalVariable(name: "__flag", arg: 4, scope: !3966, file: !3829, line: 523, type: !2240)
!3974 = !DILocation(line: 0, scope: !3966)
!3975 = !DILocation(line: 526, column: 10, scope: !3966)
!3976 = !DILocation(line: 526, column: 3, scope: !3966)
!3977 = distinct !DISubprogram(name: "gate_handle_if_conversion", scope: !3, file: !3, line: 4218, type: !3500, scopeLine: 4219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!3978 = !DILocation(line: 4220, column: 11, scope: !3977)
!3979 = !DILocation(line: 4220, column: 20, scope: !3977)
!3980 = !DILocation(line: 4221, column: 5, scope: !3977)
!3981 = !DILocation(line: 4221, column: 8, scope: !3977)
!3982 = !DILocation(line: 4220, column: 3, scope: !3977)
!3983 = distinct !DISubprogram(name: "rest_of_handle_if_conversion", scope: !3, file: !3, line: 4226, type: !3504, scopeLine: 4227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!3984 = !DILocation(line: 4228, column: 7, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 4228, column: 7)
!3986 = !DILocation(line: 4228, column: 7, scope: !3983)
!3987 = !DILocation(line: 4230, column: 11, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 4230, column: 11)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 4229, column: 5)
!3990 = !DILocation(line: 4230, column: 11, scope: !3989)
!3991 = !DILocation(line: 4231, column: 36, scope: !3988)
!3992 = !DILocation(line: 4231, column: 9, scope: !3988)
!3993 = !DILocation(line: 4232, column: 7, scope: !3989)
!3994 = !DILocation(line: 4233, column: 7, scope: !3989)
!3995 = !DILocation(line: 4234, column: 5, scope: !3989)
!3996 = !DILocation(line: 4236, column: 3, scope: !3983)
!3997 = !DILocation(line: 4237, column: 3, scope: !3983)
!3998 = distinct !DISubprogram(name: "gate_handle_if_after_combine", scope: !3, file: !3, line: 4261, type: !3500, scopeLine: 4262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!3999 = !DILocation(line: 4263, column: 10, scope: !3998)
!4000 = !DILocation(line: 4263, column: 19, scope: !3998)
!4001 = !DILocation(line: 4263, column: 26, scope: !3998)
!4002 = !DILocation(line: 4263, column: 23, scope: !3998)
!4003 = !DILocation(line: 4264, column: 8, scope: !3998)
!4004 = !DILocation(line: 4264, column: 5, scope: !3998)
!4005 = !DILocation(line: 4263, column: 3, scope: !3998)
!4006 = distinct !DISubprogram(name: "rest_of_handle_if_after_combine", scope: !3, file: !3, line: 4271, type: !3504, scopeLine: 4272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!4007 = !DILocation(line: 4273, column: 3, scope: !4006)
!4008 = !DILocation(line: 4274, column: 3, scope: !4006)
!4009 = distinct !DISubprogram(name: "gate_handle_if_after_reload", scope: !3, file: !3, line: 4300, type: !3500, scopeLine: 4301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!4010 = !DILocation(line: 4302, column: 10, scope: !4009)
!4011 = !DILocation(line: 4302, column: 19, scope: !4009)
!4012 = !DILocation(line: 4302, column: 26, scope: !4009)
!4013 = !DILocation(line: 4302, column: 23, scope: !4009)
!4014 = !DILocation(line: 4303, column: 8, scope: !4009)
!4015 = !DILocation(line: 4303, column: 5, scope: !4009)
!4016 = !DILocation(line: 4302, column: 3, scope: !4009)
!4017 = distinct !DISubprogram(name: "rest_of_handle_if_after_reload", scope: !3, file: !3, line: 4307, type: !3504, scopeLine: 4308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3554)
!4018 = !DILocation(line: 4309, column: 3, scope: !4017)
!4019 = !DILocation(line: 4310, column: 3, scope: !4017)
!4020 = distinct !DISubprogram(name: "if_convert", scope: !3, file: !3, line: 4117, type: !4021, scopeLine: 4118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{null}
!4023 = !{!4024, !4025, !4026}
!4024 = !DILocalVariable(name: "bb", scope: !4020, file: !3, line: 4119, type: !2247)
!4025 = !DILocalVariable(name: "pass", scope: !4020, file: !3, line: 4120, type: !2240)
!4026 = !DILocalVariable(name: "new_bb", scope: !4027, file: !3, line: 4161, type: !2247)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 4160, column: 2)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 4159, column: 7)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 4159, column: 7)
!4030 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4147, column: 5)
!4031 = !DILocation(line: 4122, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4122, column: 7)
!4033 = !DILocation(line: 4122, column: 16, scope: !4032)
!4034 = !DILocation(line: 4122, column: 7, scope: !4020)
!4035 = !DILocation(line: 4124, column: 7, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 4123, column: 5)
!4037 = !DILocation(line: 4125, column: 7, scope: !4036)
!4038 = !DILocation(line: 4126, column: 5, scope: !4036)
!4039 = !DILocation(line: 4128, column: 26, scope: !4020)
!4040 = !DILocation(line: 4129, column: 25, scope: !4020)
!4041 = !DILocation(line: 4130, column: 20, scope: !4020)
!4042 = !DILocation(line: 4132, column: 3, scope: !4020)
!4043 = !DILocation(line: 4133, column: 3, scope: !4020)
!4044 = !DILocation(line: 4134, column: 3, scope: !4020)
!4045 = !DILocation(line: 4135, column: 3, scope: !4020)
!4046 = !DILocation(line: 4138, column: 3, scope: !4020)
!4047 = !DILocation(line: 4140, column: 3, scope: !4020)
!4048 = !DILocation(line: 0, scope: !4020)
!4049 = !DILocation(line: 4146, column: 3, scope: !4020)
!4050 = !DILocation(line: 0, scope: !4027)
!4051 = !DILocation(line: 4148, column: 7, scope: !4030)
!4052 = !DILocation(line: 4150, column: 7, scope: !4030)
!4053 = !DILocation(line: 4151, column: 27, scope: !4030)
!4054 = !DILocation(line: 4152, column: 11, scope: !4030)
!4055 = !DILocation(line: 4155, column: 11, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 4155, column: 11)
!4057 = !DILocation(line: 4155, column: 29, scope: !4056)
!4058 = !DILocation(line: 4155, column: 21, scope: !4056)
!4059 = !DILocation(line: 4156, column: 2, scope: !4056)
!4060 = !DILocation(line: 4159, column: 7, scope: !4029)
!4061 = !DILocation(line: 4159, column: 7, scope: !4028)
!4062 = !DILocation(line: 0, scope: !4029)
!4063 = !DILocation(line: 4162, column: 11, scope: !4027)
!4064 = !DILocation(line: 4162, column: 19, scope: !4027)
!4065 = !DILocation(line: 4163, column: 18, scope: !4027)
!4066 = !DILocation(line: 4163, column: 31, scope: !4027)
!4067 = !DILocation(line: 4163, column: 58, scope: !4027)
!4068 = distinct !{!4068, !4063, !4069}
!4069 = !DILocation(line: 4164, column: 18, scope: !4027)
!4070 = !DILocation(line: 0, scope: !4028)
!4071 = distinct !{!4071, !4060, !4072}
!4072 = !DILocation(line: 4165, column: 2, scope: !4029)
!4073 = !DILocation(line: 4168, column: 11, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 4168, column: 11)
!4075 = !DILocation(line: 4168, column: 24, scope: !4074)
!4076 = !DILocation(line: 4168, column: 21, scope: !4074)
!4077 = !DILocation(line: 4170, column: 8, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 4170, column: 8)
!4079 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 4169, column: 2)
!4080 = !DILocation(line: 4170, column: 19, scope: !4078)
!4081 = !DILocation(line: 0, scope: !4078)
!4082 = !DILocation(line: 4170, column: 8, scope: !4079)
!4083 = !DILocation(line: 4171, column: 55, scope: !4078)
!4084 = !DILocation(line: 4171, column: 6, scope: !4078)
!4085 = !DILocation(line: 4173, column: 6, scope: !4078)
!4086 = !DILocation(line: 4177, column: 10, scope: !4020)
!4087 = !DILocation(line: 4176, column: 5, scope: !4030)
!4088 = distinct !{!4088, !4049, !4089}
!4089 = !DILocation(line: 4177, column: 29, scope: !4020)
!4090 = !DILocation(line: 4180, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4180, column: 7)
!4092 = !DILocation(line: 4180, column: 7, scope: !4020)
!4093 = !DILocation(line: 4181, column: 5, scope: !4091)
!4094 = !DILocation(line: 4184, column: 3, scope: !4020)
!4095 = !DILocation(line: 4186, column: 7, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4186, column: 7)
!4097 = !DILocation(line: 4186, column: 7, scope: !4020)
!4098 = !DILocation(line: 4187, column: 5, scope: !4096)
!4099 = !DILocation(line: 4189, column: 3, scope: !4020)
!4100 = !DILocation(line: 4192, column: 7, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4192, column: 7)
!4102 = !DILocation(line: 4192, column: 19, scope: !4101)
!4103 = !DILocation(line: 4192, column: 17, scope: !4101)
!4104 = !DILocation(line: 4192, column: 7, scope: !4020)
!4105 = !DILocation(line: 4193, column: 17, scope: !4101)
!4106 = !DILocation(line: 4193, column: 15, scope: !4101)
!4107 = !DILocation(line: 4193, column: 5, scope: !4101)
!4108 = !DILocation(line: 4196, column: 7, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4196, column: 7)
!4110 = !DILocation(line: 4196, column: 20, scope: !4109)
!4111 = !DILocation(line: 4196, column: 43, scope: !4109)
!4112 = !DILocation(line: 4196, column: 17, scope: !4109)
!4113 = !DILocation(line: 4198, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 4197, column: 5)
!4115 = !DILocation(line: 4201, column: 16, scope: !4114)
!4116 = !DILocation(line: 4203, column: 9, scope: !4114)
!4117 = !DILocation(line: 4201, column: 7, scope: !4114)
!4118 = !DILocation(line: 4204, column: 16, scope: !4114)
!4119 = !DILocation(line: 4206, column: 9, scope: !4114)
!4120 = !DILocation(line: 4204, column: 7, scope: !4114)
!4121 = !DILocation(line: 4207, column: 5, scope: !4114)
!4122 = !DILocation(line: 4209, column: 7, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4209, column: 7)
!4124 = !DILocation(line: 4209, column: 16, scope: !4123)
!4125 = !DILocation(line: 4209, column: 7, scope: !4020)
!4126 = !DILocation(line: 4210, column: 24, scope: !4123)
!4127 = !DILocation(line: 4210, column: 5, scope: !4123)
!4128 = !DILocation(line: 4215, column: 1, scope: !4020)
!4129 = distinct !DISubprogram(name: "find_if_header", scope: !3, file: !3, line: 3016, type: !4130, scopeLine: 3017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!2247, !2247, !2240}
!4132 = !{!4133, !4134, !4135, !4152, !4153, !4154, !4158}
!4133 = !DILocalVariable(name: "test_bb", arg: 1, scope: !4129, file: !3, line: 3016, type: !2247)
!4134 = !DILocalVariable(name: "pass", arg: 2, scope: !4129, file: !3, line: 3016, type: !2240)
!4135 = !DILocalVariable(name: "ce_info", scope: !4129, file: !3, line: 3018, type: !4136)
!4136 = !DIDerivedType(tag: DW_TAG_typedef, name: "ce_if_block_t", file: !325, line: 569, baseType: !4137)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ce_if_block", file: !325, line: 549, size: 576, elements: !4138)
!4138 = !{!4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "test_bb", scope: !4137, file: !325, line: 551, baseType: !2247, size: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "then_bb", scope: !4137, file: !325, line: 552, baseType: !2247, size: 64, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "else_bb", scope: !4137, file: !325, line: 553, baseType: !2247, size: 64, offset: 128)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "join_bb", scope: !4137, file: !325, line: 554, baseType: !2247, size: 64, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "last_test_bb", scope: !4137, file: !325, line: 555, baseType: !2247, size: 64, offset: 256)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "num_multiple_test_blocks", scope: !4137, file: !325, line: 556, baseType: !2240, size: 32, offset: 320)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "num_and_and_blocks", scope: !4137, file: !325, line: 557, baseType: !2240, size: 32, offset: 352)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "num_or_or_blocks", scope: !4137, file: !325, line: 558, baseType: !2240, size: 32, offset: 384)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "num_multiple_test_insns", scope: !4137, file: !325, line: 559, baseType: !2240, size: 32, offset: 416)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "and_and_p", scope: !4137, file: !325, line: 560, baseType: !2240, size: 32, offset: 448)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "num_then_insns", scope: !4137, file: !325, line: 561, baseType: !2240, size: 32, offset: 480)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "num_else_insns", scope: !4137, file: !325, line: 562, baseType: !2240, size: 32, offset: 512)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4137, file: !325, line: 563, baseType: !2240, size: 32, offset: 544)
!4152 = !DILocalVariable(name: "then_edge", scope: !4129, file: !3, line: 3019, type: !2265)
!4153 = !DILocalVariable(name: "else_edge", scope: !4129, file: !3, line: 3020, type: !2265)
!4154 = !DILocalVariable(name: "e", scope: !4155, file: !3, line: 3049, type: !2265)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 3048, column: 5)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 3047, column: 12)
!4157 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3045, column: 7)
!4158 = !DILabel(scope: !4129, name: "success", file: !3, line: 3091)
!4159 = !DILocation(line: 0, scope: !4129)
!4160 = !DILocation(line: 3018, column: 3, scope: !4129)
!4161 = !DILocation(line: 3023, column: 7, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3023, column: 7)
!4163 = !DILocation(line: 3023, column: 35, scope: !4162)
!4164 = !DILocation(line: 3023, column: 7, scope: !4129)
!4165 = !DILocation(line: 3026, column: 15, scope: !4129)
!4166 = !DILocation(line: 3027, column: 15, scope: !4129)
!4167 = !DILocation(line: 3029, column: 35, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3029, column: 7)
!4169 = !DILocation(line: 3029, column: 7, scope: !4168)
!4170 = !DILocation(line: 3029, column: 7, scope: !4129)
!4171 = !DILocation(line: 3031, column: 35, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3031, column: 7)
!4173 = !DILocation(line: 3031, column: 7, scope: !4172)
!4174 = !DILocation(line: 3031, column: 7, scope: !4129)
!4175 = !DILocation(line: 3035, column: 19, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3035, column: 7)
!4177 = !DILocation(line: 3035, column: 25, scope: !4176)
!4178 = !DILocation(line: 3036, column: 7, scope: !4176)
!4179 = !DILocation(line: 3036, column: 22, scope: !4176)
!4180 = !DILocation(line: 3036, column: 28, scope: !4176)
!4181 = !DILocation(line: 3035, column: 7, scope: !4129)
!4182 = !DILocation(line: 3040, column: 25, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3040, column: 7)
!4184 = !DILocation(line: 3041, column: 7, scope: !4183)
!4185 = !DILocation(line: 3041, column: 28, scope: !4183)
!4186 = !DILocation(line: 3040, column: 7, scope: !4129)
!4187 = !DILocation(line: 3045, column: 24, scope: !4157)
!4188 = !DILocation(line: 3045, column: 7, scope: !4129)
!4189 = !DILocation(line: 3047, column: 29, scope: !4156)
!4190 = !DILocation(line: 3047, column: 12, scope: !4157)
!4191 = !DILocation(line: 3057, column: 3, scope: !4129)
!4192 = !DILocation(line: 3058, column: 11, scope: !4129)
!4193 = !DILocation(line: 3058, column: 19, scope: !4129)
!4194 = !DILocation(line: 3059, column: 32, scope: !4129)
!4195 = !DILocation(line: 3059, column: 11, scope: !4129)
!4196 = !DILocation(line: 3059, column: 19, scope: !4129)
!4197 = !DILocation(line: 3060, column: 32, scope: !4129)
!4198 = !DILocation(line: 3060, column: 11, scope: !4129)
!4199 = !DILocation(line: 3060, column: 19, scope: !4129)
!4200 = !DILocation(line: 3061, column: 11, scope: !4129)
!4201 = !DILocation(line: 3061, column: 16, scope: !4129)
!4202 = !DILocation(line: 3067, column: 9, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3067, column: 7)
!4204 = !DILocation(line: 3068, column: 7, scope: !4203)
!4205 = !DILocation(line: 3068, column: 10, scope: !4203)
!4206 = !DILocation(line: 3067, column: 7, scope: !4129)
!4207 = !DILocation(line: 3071, column: 15, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3071, column: 7)
!4209 = !DILocation(line: 3071, column: 7, scope: !4208)
!4210 = !DILocation(line: 3071, column: 48, scope: !4208)
!4211 = !DILocation(line: 3071, column: 45, scope: !4208)
!4212 = !DILocation(line: 3072, column: 10, scope: !4208)
!4213 = !DILocation(line: 3071, column: 7, scope: !4129)
!4214 = !DILocation(line: 3076, column: 10, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3075, column: 7)
!4216 = !DILocation(line: 3076, column: 50, scope: !4215)
!4217 = !DILocation(line: 3076, column: 60, scope: !4215)
!4218 = !DILocation(line: 3077, column: 7, scope: !4215)
!4219 = !DILocation(line: 3077, column: 10, scope: !4215)
!4220 = !DILocation(line: 3075, column: 7, scope: !4129)
!4221 = !DILocation(line: 3080, column: 7, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3080, column: 7)
!4223 = !DILocation(line: 3080, column: 44, scope: !4222)
!4224 = !DILocation(line: 3081, column: 7, scope: !4222)
!4225 = !DILocation(line: 3081, column: 21, scope: !4222)
!4226 = !DILocation(line: 3081, column: 13, scope: !4222)
!4227 = !DILocation(line: 3081, column: 54, scope: !4222)
!4228 = !DILocation(line: 3081, column: 51, scope: !4222)
!4229 = !DILocation(line: 3083, column: 11, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 3083, column: 11)
!4231 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 3082, column: 5)
!4232 = !DILocation(line: 3083, column: 11, scope: !4231)
!4233 = !DILocation(line: 3085, column: 11, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 3085, column: 11)
!4235 = !DILocation(line: 3085, column: 11, scope: !4231)
!4236 = !DILocation(line: 3091, column: 2, scope: !4129)
!4237 = !DILocation(line: 3092, column: 7, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3092, column: 7)
!4239 = !DILocation(line: 3092, column: 7, scope: !4129)
!4240 = !DILocation(line: 3093, column: 5, scope: !4238)
!4241 = !DILocation(line: 3095, column: 23, scope: !4129)
!4242 = !DILocation(line: 3096, column: 18, scope: !4129)
!4243 = !DILocation(line: 3096, column: 3, scope: !4129)
!4244 = !DILocation(line: 3097, column: 1, scope: !4129)
!4245 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !325, file: !325, line: 150, type: !4246, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4250)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{!7, !4248}
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2258)
!4250 = !{!4251}
!4251 = !DILocalVariable(name: "vec_", arg: 1, scope: !4245, file: !325, line: 150, type: !4248)
!4252 = !DILocation(line: 0, scope: !4245)
!4253 = !DILocation(line: 150, column: 1, scope: !4245)
!4254 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !325, file: !325, line: 150, type: !4255, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4257)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!2265, !4248, !7}
!4257 = !{!4258, !4259}
!4258 = !DILocalVariable(name: "vec_", arg: 1, scope: !4254, file: !325, line: 150, type: !4248)
!4259 = !DILocalVariable(name: "ix_", arg: 2, scope: !4254, file: !325, line: 150, type: !7)
!4260 = !DILocation(line: 0, scope: !4254)
!4261 = !DILocation(line: 150, column: 1, scope: !4254)
!4262 = distinct !DISubprogram(name: "noce_find_if_block", scope: !3, file: !3, line: 2781, type: !4263, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!2240, !2247, !2265, !2265, !2240}
!4265 = !{!4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277}
!4266 = !DILocalVariable(name: "test_bb", arg: 1, scope: !4262, file: !3, line: 2781, type: !2247)
!4267 = !DILocalVariable(name: "then_edge", arg: 2, scope: !4262, file: !3, line: 2782, type: !2265)
!4268 = !DILocalVariable(name: "else_edge", arg: 3, scope: !4262, file: !3, line: 2782, type: !2265)
!4269 = !DILocalVariable(name: "pass", arg: 4, scope: !4262, file: !3, line: 2783, type: !2240)
!4270 = !DILocalVariable(name: "then_bb", scope: !4262, file: !3, line: 2785, type: !2247)
!4271 = !DILocalVariable(name: "else_bb", scope: !4262, file: !3, line: 2785, type: !2247)
!4272 = !DILocalVariable(name: "join_bb", scope: !4262, file: !3, line: 2785, type: !2247)
!4273 = !DILocalVariable(name: "then_else_reversed", scope: !4262, file: !3, line: 2786, type: !2239)
!4274 = !DILocalVariable(name: "jump", scope: !4262, file: !3, line: 2787, type: !2279)
!4275 = !DILocalVariable(name: "cond", scope: !4262, file: !3, line: 2787, type: !2279)
!4276 = !DILocalVariable(name: "cond_earliest", scope: !4262, file: !3, line: 2788, type: !2279)
!4277 = !DILocalVariable(name: "if_info", scope: !4262, file: !3, line: 2789, type: !4278)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noce_if_info", file: !3, line: 594, size: 832, elements: !4279)
!4279 = !{!4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "test_bb", scope: !4278, file: !3, line: 597, baseType: !2247, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "then_bb", scope: !4278, file: !3, line: 597, baseType: !2247, size: 64, offset: 64)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "else_bb", scope: !4278, file: !3, line: 597, baseType: !2247, size: 64, offset: 128)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "join_bb", scope: !4278, file: !3, line: 597, baseType: !2247, size: 64, offset: 192)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !4278, file: !3, line: 600, baseType: !2279, size: 64, offset: 256)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4278, file: !3, line: 603, baseType: !2279, size: 64, offset: 320)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "cond_earliest", scope: !4278, file: !3, line: 606, baseType: !2279, size: 64, offset: 384)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "insn_a", scope: !4278, file: !3, line: 614, baseType: !2279, size: 64, offset: 448)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "insn_b", scope: !4278, file: !3, line: 614, baseType: !2279, size: 64, offset: 512)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4278, file: !3, line: 617, baseType: !2279, size: 64, offset: 576)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4278, file: !3, line: 617, baseType: !2279, size: 64, offset: 640)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4278, file: !3, line: 620, baseType: !2279, size: 64, offset: 704)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "then_else_reversed", scope: !4278, file: !3, line: 626, baseType: !2239, size: 8, offset: 768)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !4278, file: !3, line: 629, baseType: !2240, size: 32, offset: 800)
!4294 = !DILocation(line: 0, scope: !4262)
!4295 = !DILocation(line: 2788, column: 3, scope: !4262)
!4296 = !DILocation(line: 2789, column: 3, scope: !4262)
!4297 = !DILocation(line: 2792, column: 3, scope: !4262)
!4298 = !DILocation(line: 2795, column: 33, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2795, column: 7)
!4300 = !DILocation(line: 2795, column: 7, scope: !4299)
!4301 = !DILocation(line: 2796, column: 7, scope: !4299)
!4302 = !DILocation(line: 2796, column: 36, scope: !4299)
!4303 = !DILocation(line: 2796, column: 10, scope: !4299)
!4304 = !DILocation(line: 2797, column: 7, scope: !4299)
!4305 = !DILocation(line: 2797, column: 36, scope: !4299)
!4306 = !DILocation(line: 2797, column: 10, scope: !4299)
!4307 = !DILocation(line: 2798, column: 7, scope: !4299)
!4308 = !DILocation(line: 2798, column: 36, scope: !4299)
!4309 = !DILocation(line: 2798, column: 10, scope: !4299)
!4310 = !DILocation(line: 2799, column: 7, scope: !4299)
!4311 = !DILocation(line: 2799, column: 34, scope: !4299)
!4312 = !DILocation(line: 2799, column: 10, scope: !4299)
!4313 = !DILocation(line: 2799, column: 67, scope: !4299)
!4314 = !DILocation(line: 2799, column: 43, scope: !4299)
!4315 = !DILocation(line: 2799, column: 40, scope: !4299)
!4316 = !DILocation(line: 2795, column: 7, scope: !4262)
!4317 = !DILocation(line: 2801, column: 28, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 2800, column: 5)
!4319 = !DILocation(line: 2802, column: 28, scope: !4318)
!4320 = !DILocation(line: 2803, column: 17, scope: !4318)
!4321 = !DILocation(line: 2804, column: 5, scope: !4318)
!4322 = !DILocation(line: 2806, column: 38, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 2806, column: 12)
!4324 = !DILocation(line: 2806, column: 12, scope: !4323)
!4325 = !DILocation(line: 2807, column: 5, scope: !4323)
!4326 = !DILocation(line: 2807, column: 34, scope: !4323)
!4327 = !DILocation(line: 2807, column: 8, scope: !4323)
!4328 = !DILocation(line: 2808, column: 5, scope: !4323)
!4329 = !DILocation(line: 2808, column: 32, scope: !4323)
!4330 = !DILocation(line: 2808, column: 8, scope: !4323)
!4331 = !DILocation(line: 2808, column: 52, scope: !4323)
!4332 = !DILocation(line: 2808, column: 38, scope: !4323)
!4333 = !DILocation(line: 2806, column: 12, scope: !4299)
!4334 = !DILocation(line: 2810, column: 28, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 2809, column: 5)
!4336 = !DILocation(line: 2813, column: 5, scope: !4335)
!4337 = !DILocation(line: 2818, column: 38, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 2818, column: 12)
!4339 = !DILocation(line: 2818, column: 12, scope: !4338)
!4340 = !DILocation(line: 2819, column: 5, scope: !4338)
!4341 = !DILocation(line: 2819, column: 34, scope: !4338)
!4342 = !DILocation(line: 2819, column: 8, scope: !4338)
!4343 = !DILocation(line: 2820, column: 5, scope: !4338)
!4344 = !DILocation(line: 2820, column: 32, scope: !4338)
!4345 = !DILocation(line: 2820, column: 8, scope: !4338)
!4346 = !DILocation(line: 2820, column: 52, scope: !4338)
!4347 = !DILocation(line: 2820, column: 38, scope: !4338)
!4348 = !DILocation(line: 2818, column: 12, scope: !4323)
!4349 = !DILocation(line: 2825, column: 28, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 2821, column: 5)
!4351 = !DILocation(line: 2827, column: 17, scope: !4350)
!4352 = !DILocation(line: 0, scope: !4299)
!4353 = !DILocation(line: 2786, column: 8, scope: !4262)
!4354 = !DILocation(line: 2835, column: 7, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2835, column: 7)
!4356 = !DILocation(line: 2835, column: 35, scope: !4355)
!4357 = !DILocation(line: 2835, column: 41, scope: !4355)
!4358 = !DILocation(line: 2835, column: 7, scope: !4262)
!4359 = !DILocation(line: 2837, column: 7, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2837, column: 7)
!4361 = !DILocation(line: 2838, column: 7, scope: !4360)
!4362 = !DILocation(line: 2838, column: 10, scope: !4360)
!4363 = !DILocation(line: 2838, column: 38, scope: !4360)
!4364 = !DILocation(line: 2838, column: 44, scope: !4360)
!4365 = !DILocation(line: 2837, column: 7, scope: !4262)
!4366 = !DILocation(line: 2841, column: 25, scope: !4262)
!4367 = !DILocation(line: 2843, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2843, column: 7)
!4369 = !DILocation(line: 2843, column: 7, scope: !4262)
!4370 = !DILocation(line: 2847, column: 9, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 2844, column: 5)
!4372 = !DILocation(line: 2848, column: 24, scope: !4371)
!4373 = !DILocation(line: 2848, column: 40, scope: !4371)
!4374 = !DILocation(line: 2845, column: 7, scope: !4371)
!4375 = !DILocation(line: 2850, column: 11, scope: !4371)
!4376 = !DILocation(line: 2851, column: 11, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2850, column: 11)
!4378 = !DILocation(line: 2851, column: 44, scope: !4377)
!4379 = !DILocation(line: 2851, column: 2, scope: !4377)
!4380 = !DILocation(line: 2853, column: 16, scope: !4371)
!4381 = !DILocation(line: 2853, column: 51, scope: !4371)
!4382 = !DILocation(line: 2853, column: 7, scope: !4371)
!4383 = !DILocation(line: 2854, column: 5, scope: !4371)
!4384 = !DILocation(line: 2858, column: 10, scope: !4262)
!4385 = !DILocation(line: 2859, column: 9, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2859, column: 7)
!4387 = !DILocation(line: 2859, column: 7, scope: !4262)
!4388 = !DILocation(line: 2863, column: 10, scope: !4262)
!4389 = !DILocation(line: 2866, column: 8, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2866, column: 7)
!4391 = !DILocation(line: 2866, column: 7, scope: !4262)
!4392 = !DILocation(line: 2870, column: 7, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2870, column: 7)
!4394 = !DILocation(line: 2870, column: 33, scope: !4393)
!4395 = !DILocation(line: 2870, column: 7, scope: !4262)
!4396 = !DILocation(line: 2874, column: 3, scope: !4262)
!4397 = !DILocation(line: 2875, column: 11, scope: !4262)
!4398 = !DILocation(line: 2875, column: 19, scope: !4262)
!4399 = !DILocation(line: 2876, column: 11, scope: !4262)
!4400 = !DILocation(line: 2876, column: 19, scope: !4262)
!4401 = !DILocation(line: 2877, column: 11, scope: !4262)
!4402 = !DILocation(line: 2877, column: 19, scope: !4262)
!4403 = !DILocation(line: 2878, column: 11, scope: !4262)
!4404 = !DILocation(line: 2878, column: 19, scope: !4262)
!4405 = !DILocation(line: 2879, column: 11, scope: !4262)
!4406 = !DILocation(line: 2879, column: 16, scope: !4262)
!4407 = !DILocation(line: 2880, column: 27, scope: !4262)
!4408 = !DILocation(line: 2880, column: 11, scope: !4262)
!4409 = !DILocation(line: 2880, column: 25, scope: !4262)
!4410 = !DILocation(line: 2881, column: 11, scope: !4262)
!4411 = !DILocation(line: 2881, column: 16, scope: !4262)
!4412 = !DILocation(line: 2882, column: 11, scope: !4262)
!4413 = !DILocation(line: 2882, column: 30, scope: !4262)
!4414 = !DILocation(line: 2883, column: 25, scope: !4262)
!4415 = !DILocation(line: 2883, column: 11, scope: !4262)
!4416 = !DILocation(line: 2883, column: 23, scope: !4262)
!4417 = !DILocation(line: 2888, column: 7, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2888, column: 7)
!4419 = !DILocation(line: 2888, column: 7, scope: !4262)
!4420 = !DILocation(line: 2892, column: 10, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2891, column: 7)
!4422 = !DILocation(line: 2896, column: 1, scope: !4262)
!4423 = distinct !DISubprogram(name: "cond_exec_find_if_block", scope: !3, file: !3, line: 3174, type: !4424, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4427)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!2240, !4426}
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4427 = !{!4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4442, !4445, !4446, !4447, !4448, !4451, !4452}
!4428 = !DILocalVariable(name: "ce_info", arg: 1, scope: !4423, file: !3, line: 3174, type: !4426)
!4429 = !DILocalVariable(name: "test_bb", scope: !4423, file: !3, line: 3176, type: !2247)
!4430 = !DILocalVariable(name: "then_bb", scope: !4423, file: !3, line: 3177, type: !2247)
!4431 = !DILocalVariable(name: "else_bb", scope: !4423, file: !3, line: 3178, type: !2247)
!4432 = !DILocalVariable(name: "join_bb", scope: !4423, file: !3, line: 3179, type: !2247)
!4433 = !DILocalVariable(name: "cur_edge", scope: !4423, file: !3, line: 3180, type: !2265)
!4434 = !DILocalVariable(name: "next", scope: !4423, file: !3, line: 3181, type: !2247)
!4435 = !DILocalVariable(name: "ei", scope: !4423, file: !3, line: 3182, type: !4436)
!4436 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !325, line: 682, baseType: !4437)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !325, line: 679, size: 128, elements: !4438)
!4438 = !{!4439, !4440}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4437, file: !325, line: 680, baseType: !7, size: 32)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4437, file: !325, line: 681, baseType: !4441, size: 64, offset: 64)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!4442 = !DILocalVariable(name: "bb", scope: !4443, file: !3, line: 3196, type: !2247)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 3195, column: 5)
!4444 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3193, column: 7)
!4445 = !DILocalVariable(name: "target_bb", scope: !4443, file: !3, line: 3197, type: !2247)
!4446 = !DILocalVariable(name: "max_insns", scope: !4443, file: !3, line: 3198, type: !2240)
!4447 = !DILocalVariable(name: "n_insns", scope: !4443, file: !3, line: 3199, type: !2240)
!4448 = !DILocalVariable(name: "total_insns", scope: !4449, file: !3, line: 3217, type: !2240)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 3216, column: 2)
!4450 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3215, column: 11)
!4451 = !DILocalVariable(name: "blocks", scope: !4449, file: !3, line: 3218, type: !2240)
!4452 = !DILocalVariable(name: "last_insn", scope: !4453, file: !3, line: 3282, type: !2279)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 3281, column: 2)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 3280, column: 11)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 3279, column: 5)
!4456 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3278, column: 7)
!4457 = !DILocation(line: 0, scope: !4423)
!4458 = !DILocation(line: 3176, column: 34, scope: !4423)
!4459 = !DILocation(line: 3177, column: 34, scope: !4423)
!4460 = !DILocation(line: 3178, column: 34, scope: !4423)
!4461 = !DILocation(line: 3180, column: 3, scope: !4423)
!4462 = !DILocation(line: 3182, column: 3, scope: !4423)
!4463 = !DILocation(line: 3184, column: 12, scope: !4423)
!4464 = !DILocation(line: 3184, column: 25, scope: !4423)
!4465 = !DILocation(line: 3188, column: 3, scope: !4423)
!4466 = !DILocation(line: 3193, column: 7, scope: !4444)
!4467 = !DILocation(line: 3194, column: 7, scope: !4444)
!4468 = !DILocation(line: 3194, column: 10, scope: !4444)
!4469 = !DILocation(line: 3194, column: 38, scope: !4444)
!4470 = !DILocation(line: 3194, column: 44, scope: !4444)
!4471 = !DILocation(line: 3193, column: 7, scope: !4423)
!4472 = !DILocation(line: 3196, column: 24, scope: !4443)
!4473 = !DILocation(line: 0, scope: !4443)
!4474 = !DILocation(line: 3198, column: 23, scope: !4443)
!4475 = !DILocation(line: 3202, column: 22, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 3202, column: 11)
!4477 = !DILocation(line: 3202, column: 64, scope: !4476)
!4478 = !DILocation(line: 3202, column: 11, scope: !4443)
!4479 = !DILocation(line: 3204, column: 13, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 3203, column: 2)
!4481 = !DILocation(line: 3204, column: 23, scope: !4480)
!4482 = !DILocation(line: 3206, column: 2, scope: !4480)
!4483 = !DILocation(line: 3207, column: 27, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 3207, column: 16)
!4485 = !DILocation(line: 3207, column: 69, scope: !4484)
!4486 = !DILocation(line: 3207, column: 16, scope: !4476)
!4487 = !DILocation(line: 3209, column: 13, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 3208, column: 2)
!4489 = !DILocation(line: 3209, column: 23, scope: !4488)
!4490 = !DILocation(line: 3211, column: 2, scope: !4488)
!4491 = !DILocation(line: 0, scope: !4476)
!4492 = !DILocation(line: 3215, column: 11, scope: !4450)
!4493 = !DILocation(line: 3215, column: 32, scope: !4450)
!4494 = !DILocation(line: 3215, column: 21, scope: !4450)
!4495 = !DILocation(line: 0, scope: !4449)
!4496 = !DILocation(line: 3220, column: 26, scope: !4449)
!4497 = !DILocation(line: 3223, column: 4, scope: !4449)
!4498 = !DILocation(line: 3225, column: 25, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 3224, column: 6)
!4500 = !DILocation(line: 3226, column: 20, scope: !4499)
!4501 = !DILocation(line: 3227, column: 14, scope: !4499)
!4502 = !DILocation(line: 3229, column: 13, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 3229, column: 12)
!4504 = !DILocation(line: 3229, column: 12, scope: !4499)
!4505 = !DILocation(line: 3232, column: 13, scope: !4499)
!4506 = !DILocation(line: 3233, column: 18, scope: !4499)
!4507 = !DILocation(line: 3235, column: 19, scope: !4449)
!4508 = !DILocation(line: 3235, column: 24, scope: !4449)
!4509 = !DILocation(line: 3234, column: 6, scope: !4499)
!4510 = distinct !{!4510, !4497, !4511}
!4511 = !DILocation(line: 3235, column: 63, scope: !4449)
!4512 = !DILocation(line: 3237, column: 13, scope: !4449)
!4513 = !DILocation(line: 3237, column: 38, scope: !4449)
!4514 = !DILocation(line: 3238, column: 13, scope: !4449)
!4515 = !DILocation(line: 3238, column: 37, scope: !4449)
!4516 = !DILocation(line: 3240, column: 17, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 3240, column: 8)
!4518 = !DILocation(line: 3240, column: 8, scope: !4517)
!4519 = !DILocation(line: 3240, column: 8, scope: !4449)
!4520 = !DILocation(line: 3241, column: 15, scope: !4517)
!4521 = !DILocation(line: 3241, column: 34, scope: !4517)
!4522 = !DILocation(line: 3241, column: 6, scope: !4517)
!4523 = !DILocation(line: 3243, column: 15, scope: !4517)
!4524 = !DILocation(line: 3243, column: 32, scope: !4517)
!4525 = !DILocation(line: 3249, column: 8, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3249, column: 7)
!4527 = !DILocation(line: 3249, column: 47, scope: !4526)
!4528 = !DILocation(line: 3249, column: 36, scope: !4526)
!4529 = !DILocation(line: 3249, column: 65, scope: !4526)
!4530 = !DILocation(line: 3249, column: 7, scope: !4423)
!4531 = !DILocation(line: 3253, column: 3, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3253, column: 3)
!4533 = !DILocation(line: 0, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 3253, column: 3)
!4535 = !DILocation(line: 3253, column: 3, scope: !4534)
!4536 = !DILocation(line: 3255, column: 11, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 3255, column: 11)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 3254, column: 5)
!4539 = !DILocation(line: 3255, column: 21, scope: !4537)
!4540 = !DILocation(line: 3255, column: 27, scope: !4537)
!4541 = !DILocation(line: 3255, column: 11, scope: !4538)
!4542 = distinct !{!4542, !4531, !4543}
!4543 = !DILocation(line: 3257, column: 5, scope: !4532)
!4544 = !DILocation(line: 3259, column: 3, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3259, column: 3)
!4546 = !DILocation(line: 3259, column: 3, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 3259, column: 3)
!4548 = !DILocation(line: 3261, column: 11, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 3261, column: 11)
!4550 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 3260, column: 5)
!4551 = !DILocation(line: 3261, column: 21, scope: !4549)
!4552 = !DILocation(line: 3261, column: 27, scope: !4549)
!4553 = !DILocation(line: 3261, column: 11, scope: !4550)
!4554 = distinct !{!4554, !4544, !4555}
!4555 = !DILocation(line: 3263, column: 5, scope: !4545)
!4556 = !DILocation(line: 3266, column: 7, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3266, column: 7)
!4558 = !DILocation(line: 3266, column: 35, scope: !4557)
!4559 = !DILocation(line: 3267, column: 7, scope: !4557)
!4560 = !DILocation(line: 3267, column: 12, scope: !4557)
!4561 = !DILocation(line: 3268, column: 11, scope: !4557)
!4562 = !DILocation(line: 3268, column: 15, scope: !4557)
!4563 = !DILocation(line: 3268, column: 43, scope: !4557)
!4564 = !DILocation(line: 3268, column: 49, scope: !4557)
!4565 = !DILocation(line: 3269, column: 4, scope: !4557)
!4566 = !DILocation(line: 3269, column: 8, scope: !4557)
!4567 = !DILocation(line: 3269, column: 27, scope: !4557)
!4568 = !DILocation(line: 3269, column: 43, scope: !4557)
!4569 = !DILocation(line: 3269, column: 30, scope: !4557)
!4570 = !DILocation(line: 3266, column: 7, scope: !4423)
!4571 = !DILocation(line: 3278, column: 7, scope: !4456)
!4572 = !DILocation(line: 3278, column: 35, scope: !4456)
!4573 = !DILocation(line: 3278, column: 7, scope: !4423)
!4574 = !DILocation(line: 3280, column: 11, scope: !4454)
!4575 = !DILocation(line: 3280, column: 11, scope: !4455)
!4576 = !DILocation(line: 3282, column: 20, scope: !4453)
!4577 = !DILocation(line: 3284, column: 4, scope: !4453)
!4578 = !DILocation(line: 0, scope: !4453)
!4579 = !DILocation(line: 3285, column: 4, scope: !4453)
!4580 = !DILocation(line: 3285, column: 7, scope: !4453)
!4581 = !DILocation(line: 3286, column: 4, scope: !4453)
!4582 = !DILocation(line: 3286, column: 20, scope: !4453)
!4583 = !DILocation(line: 3286, column: 17, scope: !4453)
!4584 = !DILocation(line: 3287, column: 18, scope: !4453)
!4585 = distinct !{!4585, !4577, !4584}
!4586 = !DILocation(line: 3290, column: 11, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 3289, column: 8)
!4588 = !DILocation(line: 3291, column: 8, scope: !4587)
!4589 = !DILocation(line: 3291, column: 13, scope: !4587)
!4590 = !DILocation(line: 3289, column: 8, scope: !4453)
!4591 = !DILocation(line: 3296, column: 2, scope: !4454)
!4592 = !DILocation(line: 3303, column: 12, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 3303, column: 12)
!4594 = !DILocation(line: 3303, column: 34, scope: !4593)
!4595 = !DILocation(line: 3303, column: 12, scope: !4456)
!4596 = !DILocation(line: 3312, column: 12, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 3312, column: 12)
!4598 = !DILocation(line: 3313, column: 5, scope: !4597)
!4599 = !DILocation(line: 3313, column: 8, scope: !4597)
!4600 = !DILocation(line: 3313, column: 33, scope: !4597)
!4601 = !DILocation(line: 3313, column: 30, scope: !4597)
!4602 = !DILocation(line: 3314, column: 5, scope: !4597)
!4603 = !DILocation(line: 3314, column: 8, scope: !4597)
!4604 = !DILocation(line: 3315, column: 5, scope: !4597)
!4605 = !DILocation(line: 3315, column: 11, scope: !4597)
!4606 = !DILocation(line: 3315, column: 39, scope: !4597)
!4607 = !DILocation(line: 3315, column: 45, scope: !4597)
!4608 = !DILocation(line: 3316, column: 5, scope: !4597)
!4609 = !DILocation(line: 3316, column: 11, scope: !4597)
!4610 = !DILocation(line: 3316, column: 30, scope: !4597)
!4611 = !DILocation(line: 3316, column: 46, scope: !4597)
!4612 = !DILocation(line: 3316, column: 33, scope: !4597)
!4613 = !DILocation(line: 3312, column: 12, scope: !4593)
!4614 = !DILocation(line: 3317, column: 15, scope: !4597)
!4615 = !DILocation(line: 0, scope: !4456)
!4616 = !DILocation(line: 3323, column: 25, scope: !4423)
!4617 = !DILocation(line: 3325, column: 7, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3325, column: 7)
!4619 = !DILocation(line: 3325, column: 7, scope: !4423)
!4620 = !DILocation(line: 3330, column: 9, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 3326, column: 5)
!4622 = !DILocation(line: 3331, column: 18, scope: !4621)
!4623 = !DILocation(line: 3332, column: 18, scope: !4621)
!4624 = !DILocation(line: 3333, column: 9, scope: !4621)
!4625 = !DILocation(line: 3333, column: 34, scope: !4621)
!4626 = !DILocation(line: 3334, column: 18, scope: !4621)
!4627 = !DILocation(line: 3335, column: 9, scope: !4621)
!4628 = !DILocation(line: 3335, column: 34, scope: !4621)
!4629 = !DILocation(line: 3327, column: 7, scope: !4621)
!4630 = !DILocation(line: 3337, column: 11, scope: !4621)
!4631 = !DILocation(line: 3338, column: 11, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 3337, column: 11)
!4633 = !DILocation(line: 3339, column: 13, scope: !4632)
!4634 = !DILocation(line: 3340, column: 4, scope: !4632)
!4635 = !DILocation(line: 3340, column: 29, scope: !4632)
!4636 = !DILocation(line: 3338, column: 2, scope: !4632)
!4637 = !DILocation(line: 3342, column: 16, scope: !4621)
!4638 = !DILocation(line: 3343, column: 18, scope: !4621)
!4639 = !DILocation(line: 3344, column: 9, scope: !4621)
!4640 = !DILocation(line: 3344, column: 34, scope: !4621)
!4641 = !DILocation(line: 3342, column: 7, scope: !4621)
!4642 = !DILocation(line: 3346, column: 20, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 3346, column: 11)
!4644 = !DILocation(line: 3346, column: 45, scope: !4643)
!4645 = !DILocation(line: 3346, column: 11, scope: !4621)
!4646 = !DILocation(line: 3347, column: 11, scope: !4643)
!4647 = !DILocation(line: 3349, column: 14, scope: !4643)
!4648 = !DILocation(line: 3349, column: 4, scope: !4643)
!4649 = !DILocation(line: 3350, column: 39, scope: !4643)
!4650 = !DILocation(line: 3350, column: 4, scope: !4643)
!4651 = !DILocation(line: 3351, column: 13, scope: !4643)
!4652 = !DILocation(line: 3351, column: 27, scope: !4643)
!4653 = !DILocation(line: 3352, column: 6, scope: !4643)
!4654 = !DILocation(line: 3352, column: 5, scope: !4643)
!4655 = !DILocation(line: 3353, column: 12, scope: !4643)
!4656 = !DILocation(line: 3347, column: 2, scope: !4643)
!4657 = !DILocation(line: 3356, column: 20, scope: !4621)
!4658 = !DILocation(line: 3356, column: 7, scope: !4621)
!4659 = !DILocation(line: 3357, column: 5, scope: !4621)
!4660 = !DILocation(line: 3368, column: 7, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3368, column: 7)
!4662 = !DILocation(line: 3368, column: 15, scope: !4661)
!4663 = !DILocation(line: 3368, column: 32, scope: !4661)
!4664 = !DILocation(line: 3368, column: 41, scope: !4661)
!4665 = !DILocation(line: 3368, column: 7, scope: !4423)
!4666 = !DILocation(line: 3370, column: 21, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3370, column: 7)
!4668 = !DILocation(line: 3370, column: 30, scope: !4667)
!4669 = !DILocation(line: 3370, column: 41, scope: !4667)
!4670 = !DILocation(line: 3370, column: 55, scope: !4667)
!4671 = !DILocation(line: 3370, column: 52, scope: !4667)
!4672 = !DILocation(line: 3370, column: 7, scope: !4423)
!4673 = !DILocation(line: 3372, column: 11, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 3371, column: 5)
!4675 = !DILocation(line: 3380, column: 20, scope: !4423)
!4676 = !DILocation(line: 3381, column: 12, scope: !4423)
!4677 = !DILocation(line: 3381, column: 20, scope: !4423)
!4678 = !DILocation(line: 3387, column: 7, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3387, column: 7)
!4680 = !DILocation(line: 3387, column: 7, scope: !4423)
!4681 = !DILocation(line: 3390, column: 16, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 3390, column: 7)
!4683 = !DILocation(line: 3390, column: 7, scope: !4682)
!4684 = !DILocation(line: 3390, column: 7, scope: !4423)
!4685 = !DILocation(line: 3392, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 3391, column: 5)
!4687 = !DILocation(line: 3394, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 3394, column: 11)
!4689 = !DILocation(line: 3394, column: 11, scope: !4686)
!4690 = !DILocation(line: 3398, column: 3, scope: !4423)
!4691 = !DILocation(line: 3399, column: 1, scope: !4423)
!4692 = distinct !DISubprogram(name: "find_cond_trap", scope: !3, file: !3, line: 3405, type: !4693, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4695)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!2240, !2247, !2265, !2265}
!4695 = !{!4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4712}
!4696 = !DILocalVariable(name: "test_bb", arg: 1, scope: !4692, file: !3, line: 3405, type: !2247)
!4697 = !DILocalVariable(name: "then_edge", arg: 2, scope: !4692, file: !3, line: 3405, type: !2265)
!4698 = !DILocalVariable(name: "else_edge", arg: 3, scope: !4692, file: !3, line: 3405, type: !2265)
!4699 = !DILocalVariable(name: "then_bb", scope: !4692, file: !3, line: 3407, type: !2247)
!4700 = !DILocalVariable(name: "else_bb", scope: !4692, file: !3, line: 3408, type: !2247)
!4701 = !DILocalVariable(name: "other_bb", scope: !4692, file: !3, line: 3409, type: !2247)
!4702 = !DILocalVariable(name: "trap_bb", scope: !4692, file: !3, line: 3409, type: !2247)
!4703 = !DILocalVariable(name: "trap", scope: !4692, file: !3, line: 3410, type: !2279)
!4704 = !DILocalVariable(name: "jump", scope: !4692, file: !3, line: 3410, type: !2279)
!4705 = !DILocalVariable(name: "cond", scope: !4692, file: !3, line: 3410, type: !2279)
!4706 = !DILocalVariable(name: "cond_earliest", scope: !4692, file: !3, line: 3410, type: !2279)
!4707 = !DILocalVariable(name: "seq", scope: !4692, file: !3, line: 3410, type: !2279)
!4708 = !DILocalVariable(name: "code", scope: !4692, file: !3, line: 3411, type: !580)
!4709 = !DILocalVariable(name: "lab", scope: !4710, file: !3, line: 3480, type: !2279)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 3479, column: 5)
!4711 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3476, column: 7)
!4712 = !DILocalVariable(name: "newjump", scope: !4710, file: !3, line: 3480, type: !2279)
!4713 = !DILocation(line: 0, scope: !4692)
!4714 = !DILocation(line: 3407, column: 36, scope: !4692)
!4715 = !DILocation(line: 3408, column: 36, scope: !4692)
!4716 = !DILocation(line: 3410, column: 3, scope: !4692)
!4717 = !DILocation(line: 3416, column: 15, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3416, column: 7)
!4719 = !DILocation(line: 3416, column: 46, scope: !4718)
!4720 = !DILocation(line: 3416, column: 7, scope: !4692)
!4721 = !DILocation(line: 3418, column: 20, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 3418, column: 12)
!4723 = !DILocation(line: 3418, column: 51, scope: !4722)
!4724 = !DILocation(line: 3418, column: 12, scope: !4718)
!4725 = !DILocation(line: 0, scope: !4718)
!4726 = !DILocation(line: 3423, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3423, column: 7)
!4728 = !DILocation(line: 3423, column: 7, scope: !4692)
!4729 = !DILocation(line: 3426, column: 18, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 3424, column: 5)
!4731 = !DILocation(line: 3426, column: 34, scope: !4730)
!4732 = !DILocation(line: 3425, column: 7, scope: !4730)
!4733 = !DILocation(line: 3427, column: 5, scope: !4730)
!4734 = !DILocation(line: 3430, column: 10, scope: !4692)
!4735 = !DILocation(line: 3431, column: 10, scope: !4692)
!4736 = !DILocation(line: 3432, column: 9, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3432, column: 7)
!4738 = !DILocation(line: 3432, column: 7, scope: !4692)
!4739 = !DILocation(line: 3437, column: 9, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3437, column: 7)
!4741 = !DILocation(line: 3437, column: 7, scope: !4692)
!4742 = !DILocation(line: 3441, column: 7, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3441, column: 7)
!4744 = !DILocation(line: 3441, column: 33, scope: !4743)
!4745 = !DILocation(line: 3441, column: 7, scope: !4692)
!4746 = !DILocation(line: 3446, column: 15, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3446, column: 7)
!4748 = !DILocation(line: 3446, column: 7, scope: !4692)
!4749 = !DILocation(line: 3445, column: 10, scope: !4692)
!4750 = !DILocation(line: 3448, column: 14, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 3447, column: 5)
!4752 = !DILocation(line: 3449, column: 16, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 3449, column: 11)
!4754 = !DILocation(line: 3449, column: 11, scope: !4751)
!4755 = !DILocation(line: 3454, column: 40, scope: !4692)
!4756 = !DILocation(line: 3454, column: 30, scope: !4692)
!4757 = !DILocation(line: 3455, column: 20, scope: !4692)
!4758 = !DILocation(line: 3455, column: 10, scope: !4692)
!4759 = !DILocation(line: 3456, column: 10, scope: !4692)
!4760 = !DILocation(line: 3454, column: 9, scope: !4692)
!4761 = !DILocation(line: 3457, column: 11, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3457, column: 7)
!4763 = !DILocation(line: 3457, column: 7, scope: !4692)
!4764 = !DILocation(line: 3461, column: 33, scope: !4692)
!4765 = !DILocation(line: 3461, column: 48, scope: !4692)
!4766 = !DILocation(line: 3461, column: 3, scope: !4692)
!4767 = !DILocation(line: 3464, column: 16, scope: !4692)
!4768 = !DILocation(line: 3464, column: 3, scope: !4692)
!4769 = !DILocation(line: 3465, column: 3, scope: !4692)
!4770 = !DILocation(line: 3466, column: 3, scope: !4692)
!4771 = !DILocation(line: 3467, column: 3, scope: !4692)
!4772 = !DILocation(line: 3469, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3469, column: 7)
!4774 = !DILocation(line: 3469, column: 35, scope: !4773)
!4775 = !DILocation(line: 3469, column: 7, scope: !4692)
!4776 = !DILocation(line: 3471, column: 7, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 3470, column: 5)
!4778 = !DILocation(line: 3472, column: 23, scope: !4777)
!4779 = !DILocation(line: 3473, column: 5, scope: !4777)
!4780 = !DILocation(line: 3476, column: 7, scope: !4711)
!4781 = !DILocation(line: 3476, column: 26, scope: !4711)
!4782 = !DILocation(line: 3476, column: 7, scope: !4692)
!4783 = !DILocation(line: 3477, column: 5, scope: !4711)
!4784 = !DILocation(line: 3477, column: 33, scope: !4711)
!4785 = !DILocation(line: 3477, column: 39, scope: !4711)
!4786 = !DILocation(line: 3482, column: 13, scope: !4710)
!4787 = !DILocation(line: 0, scope: !4710)
!4788 = !DILocation(line: 3483, column: 39, scope: !4710)
!4789 = !DILocation(line: 3483, column: 17, scope: !4710)
!4790 = !DILocation(line: 3484, column: 7, scope: !4710)
!4791 = !DILocation(line: 3484, column: 25, scope: !4710)
!4792 = !DILocation(line: 3485, column: 7, scope: !4710)
!4793 = !DILocation(line: 3485, column: 28, scope: !4710)
!4794 = !DILocation(line: 3486, column: 7, scope: !4710)
!4795 = !DILocation(line: 3488, column: 3, scope: !4692)
!4796 = !DILocation(line: 3490, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 3490, column: 7)
!4798 = !DILocation(line: 3490, column: 7, scope: !4692)
!4799 = !DILocation(line: 3492, column: 7, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 3491, column: 5)
!4801 = !DILocation(line: 3493, column: 23, scope: !4800)
!4802 = !DILocation(line: 3494, column: 5, scope: !4800)
!4803 = !DILocation(line: 3496, column: 24, scope: !4692)
!4804 = !DILocation(line: 3497, column: 3, scope: !4692)
!4805 = !DILocation(line: 3498, column: 1, scope: !4692)
!4806 = distinct !DISubprogram(name: "find_if_case_1", scope: !3, file: !3, line: 3604, type: !4693, scopeLine: 3605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4807)
!4807 = !{!4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815}
!4808 = !DILocalVariable(name: "test_bb", arg: 1, scope: !4806, file: !3, line: 3604, type: !2247)
!4809 = !DILocalVariable(name: "then_edge", arg: 2, scope: !4806, file: !3, line: 3604, type: !2265)
!4810 = !DILocalVariable(name: "else_edge", arg: 3, scope: !4806, file: !3, line: 3604, type: !2265)
!4811 = !DILocalVariable(name: "then_bb", scope: !4806, file: !3, line: 3606, type: !2247)
!4812 = !DILocalVariable(name: "else_bb", scope: !4806, file: !3, line: 3607, type: !2247)
!4813 = !DILocalVariable(name: "new_bb", scope: !4806, file: !3, line: 3608, type: !2247)
!4814 = !DILocalVariable(name: "then_bb_index", scope: !4806, file: !3, line: 3609, type: !2240)
!4815 = !DILocalVariable(name: "bb_", scope: !4816, file: !3, line: 3695, type: !2247)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 3695, column: 7)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 3690, column: 5)
!4818 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3689, column: 7)
!4819 = !DILocation(line: 0, scope: !4806)
!4820 = !DILocation(line: 3606, column: 36, scope: !4806)
!4821 = !DILocation(line: 3607, column: 36, scope: !4806)
!4822 = !DILocation(line: 3621, column: 8, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3621, column: 7)
!4824 = !DILocation(line: 3622, column: 8, scope: !4823)
!4825 = !DILocation(line: 3622, column: 11, scope: !4823)
!4826 = !DILocation(line: 3623, column: 7, scope: !4823)
!4827 = !DILocation(line: 3623, column: 11, scope: !4823)
!4828 = !DILocation(line: 3624, column: 4, scope: !4823)
!4829 = !DILocation(line: 3624, column: 7, scope: !4823)
!4830 = !DILocation(line: 3625, column: 7, scope: !4823)
!4831 = !DILocation(line: 3625, column: 11, scope: !4823)
!4832 = !DILocation(line: 3626, column: 4, scope: !4823)
!4833 = !DILocation(line: 3626, column: 7, scope: !4823)
!4834 = !DILocation(line: 3621, column: 7, scope: !4806)
!4835 = !DILocation(line: 3631, column: 8, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3631, column: 7)
!4837 = !DILocation(line: 3631, column: 7, scope: !4806)
!4838 = !DILocation(line: 3635, column: 7, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3635, column: 7)
!4840 = !DILocation(line: 3635, column: 35, scope: !4839)
!4841 = !DILocation(line: 3635, column: 41, scope: !4839)
!4842 = !DILocation(line: 3635, column: 7, scope: !4806)
!4843 = !DILocation(line: 3639, column: 8, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3639, column: 7)
!4845 = !DILocation(line: 3639, column: 7, scope: !4806)
!4846 = !DILocation(line: 3643, column: 7, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3643, column: 7)
!4848 = !DILocation(line: 3643, column: 7, scope: !4806)
!4849 = !DILocation(line: 3646, column: 25, scope: !4806)
!4850 = !DILocation(line: 3647, column: 7, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3647, column: 7)
!4852 = !DILocation(line: 3647, column: 7, scope: !4806)
!4853 = !DILocation(line: 3650, column: 16, scope: !4851)
!4854 = !DILocation(line: 3650, column: 32, scope: !4851)
!4855 = !DILocation(line: 3648, column: 5, scope: !4851)
!4856 = !DILocation(line: 3654, column: 2, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3653, column: 7)
!4858 = !DILocation(line: 3653, column: 9, scope: !4857)
!4859 = !DILocation(line: 3653, column: 7, scope: !4806)
!4860 = !DILocation(line: 3660, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3659, column: 7)
!4862 = !DILocation(line: 3659, column: 9, scope: !4861)
!4863 = !DILocation(line: 3659, column: 7, scope: !4806)
!4864 = !DILocation(line: 3670, column: 16, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3670, column: 7)
!4866 = !DILocation(line: 3670, column: 24, scope: !4865)
!4867 = !DILocation(line: 3671, column: 7, scope: !4865)
!4868 = !DILocation(line: 3671, column: 19, scope: !4865)
!4869 = !DILocation(line: 3671, column: 27, scope: !4865)
!4870 = !DILocation(line: 3672, column: 7, scope: !4865)
!4871 = !DILocation(line: 3672, column: 21, scope: !4865)
!4872 = !DILocation(line: 3672, column: 18, scope: !4865)
!4873 = !DILocation(line: 3670, column: 7, scope: !4806)
!4874 = !DILocation(line: 3674, column: 27, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 3673, column: 5)
!4876 = !DILocation(line: 3674, column: 7, scope: !4875)
!4877 = !DILocation(line: 3676, column: 5, scope: !4875)
!4878 = !DILocation(line: 3678, column: 46, scope: !4865)
!4879 = !DILocation(line: 3678, column: 14, scope: !4865)
!4880 = !DILocation(line: 0, scope: !4865)
!4881 = !DILocation(line: 3681, column: 3, scope: !4806)
!4882 = !DILocation(line: 3682, column: 3, scope: !4806)
!4883 = !DILocation(line: 3684, column: 28, scope: !4806)
!4884 = !DILocation(line: 3685, column: 3, scope: !4806)
!4885 = !DILocation(line: 3689, column: 7, scope: !4818)
!4886 = !DILocation(line: 3689, column: 7, scope: !4806)
!4887 = !DILocation(line: 3691, column: 7, scope: !4817)
!4888 = !DILocation(line: 0, scope: !4816)
!4889 = !DILocation(line: 3695, column: 7, scope: !4816)
!4890 = !DILocation(line: 3696, column: 5, scope: !4817)
!4891 = !DILocation(line: 3698, column: 19, scope: !4806)
!4892 = !DILocation(line: 3699, column: 24, scope: !4806)
!4893 = !DILocation(line: 3701, column: 3, scope: !4806)
!4894 = !DILocation(line: 3702, column: 1, scope: !4806)
!4895 = distinct !DISubprogram(name: "find_if_case_2", scope: !3, file: !3, line: 3707, type: !4693, scopeLine: 3708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4896)
!4896 = !{!4897, !4898, !4899, !4900, !4901, !4902, !4903}
!4897 = !DILocalVariable(name: "test_bb", arg: 1, scope: !4895, file: !3, line: 3707, type: !2247)
!4898 = !DILocalVariable(name: "then_edge", arg: 2, scope: !4895, file: !3, line: 3707, type: !2265)
!4899 = !DILocalVariable(name: "else_edge", arg: 3, scope: !4895, file: !3, line: 3707, type: !2265)
!4900 = !DILocalVariable(name: "then_bb", scope: !4895, file: !3, line: 3709, type: !2247)
!4901 = !DILocalVariable(name: "else_bb", scope: !4895, file: !3, line: 3710, type: !2247)
!4902 = !DILocalVariable(name: "else_succ", scope: !4895, file: !3, line: 3711, type: !2265)
!4903 = !DILocalVariable(name: "note", scope: !4895, file: !3, line: 3712, type: !2279)
!4904 = !DILocation(line: 0, scope: !4895)
!4905 = !DILocation(line: 3709, column: 36, scope: !4895)
!4906 = !DILocation(line: 3710, column: 36, scope: !4895)
!4907 = !DILocation(line: 3724, column: 8, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3724, column: 7)
!4909 = !DILocation(line: 3725, column: 8, scope: !4908)
!4910 = !DILocation(line: 3725, column: 11, scope: !4908)
!4911 = !DILocation(line: 3726, column: 7, scope: !4908)
!4912 = !DILocation(line: 3726, column: 11, scope: !4908)
!4913 = !DILocation(line: 3727, column: 4, scope: !4908)
!4914 = !DILocation(line: 3727, column: 7, scope: !4908)
!4915 = !DILocation(line: 3728, column: 7, scope: !4908)
!4916 = !DILocation(line: 3728, column: 11, scope: !4908)
!4917 = !DILocation(line: 3729, column: 4, scope: !4908)
!4918 = !DILocation(line: 3729, column: 7, scope: !4908)
!4919 = !DILocation(line: 3724, column: 7, scope: !4895)
!4920 = !DILocation(line: 3734, column: 8, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3734, column: 7)
!4922 = !DILocation(line: 3734, column: 7, scope: !4895)
!4923 = !DILocation(line: 3737, column: 17, scope: !4921)
!4924 = !DILocation(line: 3740, column: 18, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3740, column: 7)
!4926 = !DILocation(line: 3740, column: 24, scope: !4925)
!4927 = !DILocation(line: 3740, column: 7, scope: !4895)
!4928 = !DILocation(line: 3744, column: 8, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3744, column: 7)
!4930 = !DILocation(line: 3744, column: 7, scope: !4895)
!4931 = !DILocation(line: 3748, column: 16, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3748, column: 7)
!4933 = !DILocation(line: 3748, column: 22, scope: !4932)
!4934 = !DILocation(line: 3748, column: 7, scope: !4895)
!4935 = !DILocation(line: 3752, column: 25, scope: !4895)
!4936 = !DILocation(line: 3752, column: 10, scope: !4895)
!4937 = !DILocation(line: 3753, column: 7, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3753, column: 7)
!4939 = !DILocation(line: 3753, column: 12, scope: !4938)
!4940 = !DILocation(line: 3753, column: 15, scope: !4938)
!4941 = !DILocation(line: 3753, column: 39, scope: !4938)
!4942 = !DILocation(line: 3753, column: 7, scope: !4895)
!4943 = !DILocation(line: 3755, column: 23, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 3755, column: 12)
!4945 = !DILocation(line: 3755, column: 29, scope: !4944)
!4946 = !DILocation(line: 3755, column: 35, scope: !4944)
!4947 = !DILocation(line: 3756, column: 5, scope: !4944)
!4948 = !DILocation(line: 3756, column: 8, scope: !4944)
!4949 = !DILocation(line: 3755, column: 12, scope: !4938)
!4950 = !DILocation(line: 3762, column: 25, scope: !4895)
!4951 = !DILocation(line: 3763, column: 7, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3763, column: 7)
!4953 = !DILocation(line: 3763, column: 7, scope: !4895)
!4954 = !DILocation(line: 3766, column: 16, scope: !4952)
!4955 = !DILocation(line: 3766, column: 32, scope: !4952)
!4956 = !DILocation(line: 3764, column: 5, scope: !4952)
!4957 = !DILocation(line: 3770, column: 2, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3769, column: 7)
!4959 = !DILocation(line: 3769, column: 9, scope: !4958)
!4960 = !DILocation(line: 3769, column: 7, scope: !4895)
!4961 = !DILocation(line: 3775, column: 67, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 3775, column: 7)
!4963 = !DILocation(line: 3775, column: 9, scope: !4962)
!4964 = !DILocation(line: 3775, column: 7, scope: !4895)
!4965 = !DILocation(line: 3781, column: 3, scope: !4895)
!4966 = !DILocation(line: 3782, column: 3, scope: !4895)
!4967 = !DILocation(line: 3783, column: 3, scope: !4895)
!4968 = !DILocation(line: 3785, column: 19, scope: !4895)
!4969 = !DILocation(line: 3786, column: 24, scope: !4895)
!4970 = !DILocation(line: 3791, column: 3, scope: !4895)
!4971 = !DILocation(line: 3792, column: 1, scope: !4895)
!4972 = distinct !DISubprogram(name: "single_pred_p", scope: !325, file: !325, line: 634, type: !4973, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4978)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!2239, !4975}
!4975 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !2248, line: 112, baseType: !4976)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2250)
!4978 = !{!4979}
!4979 = !DILocalVariable(name: "bb", arg: 1, scope: !4972, file: !325, line: 634, type: !4975)
!4980 = !DILocation(line: 0, scope: !4972)
!4981 = !DILocation(line: 636, column: 10, scope: !4972)
!4982 = !DILocation(line: 636, column: 33, scope: !4972)
!4983 = !DILocation(line: 636, column: 3, scope: !4972)
!4984 = distinct !DISubprogram(name: "single_succ_p", scope: !325, file: !325, line: 626, type: !4973, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4985)
!4985 = !{!4986}
!4986 = !DILocalVariable(name: "bb", arg: 1, scope: !4984, file: !325, line: 626, type: !4975)
!4987 = !DILocation(line: 0, scope: !4984)
!4988 = !DILocation(line: 628, column: 10, scope: !4984)
!4989 = !DILocation(line: 628, column: 33, scope: !4984)
!4990 = !DILocation(line: 628, column: 3, scope: !4984)
!4991 = distinct !DISubprogram(name: "single_succ", scope: !325, file: !325, line: 663, type: !4992, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4994)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!2247, !4975}
!4994 = !{!4995}
!4995 = !DILocalVariable(name: "bb", arg: 1, scope: !4991, file: !325, line: 663, type: !4975)
!4996 = !DILocation(line: 0, scope: !4991)
!4997 = !DILocation(line: 665, column: 10, scope: !4991)
!4998 = !DILocation(line: 665, column: 33, scope: !4991)
!4999 = !DILocation(line: 665, column: 3, scope: !4991)
!5000 = distinct !DISubprogram(name: "single_succ_edge", scope: !325, file: !325, line: 643, type: !5001, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5003)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!2265, !4975}
!5003 = !{!5004}
!5004 = !DILocalVariable(name: "bb", arg: 1, scope: !5000, file: !325, line: 643, type: !4975)
!5005 = !DILocation(line: 0, scope: !5000)
!5006 = !DILocation(line: 645, column: 3, scope: !5000)
!5007 = !DILocation(line: 646, column: 10, scope: !5000)
!5008 = !DILocation(line: 646, column: 3, scope: !5000)
!5009 = distinct !DISubprogram(name: "noce_get_condition", scope: !3, file: !3, line: 2084, type: !5010, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!2279, !2279, !3474, !2239}
!5012 = !{!5013, !5014, !5015, !5016, !5017, !5018, !5019}
!5013 = !DILocalVariable(name: "jump", arg: 1, scope: !5009, file: !3, line: 2084, type: !2279)
!5014 = !DILocalVariable(name: "earliest", arg: 2, scope: !5009, file: !3, line: 2084, type: !3474)
!5015 = !DILocalVariable(name: "then_else_reversed", arg: 3, scope: !5009, file: !3, line: 2084, type: !2239)
!5016 = !DILocalVariable(name: "cond", scope: !5009, file: !3, line: 2086, type: !2279)
!5017 = !DILocalVariable(name: "set", scope: !5009, file: !3, line: 2086, type: !2279)
!5018 = !DILocalVariable(name: "tmp", scope: !5009, file: !3, line: 2086, type: !2279)
!5019 = !DILocalVariable(name: "reverse", scope: !5009, file: !3, line: 2087, type: !2239)
!5020 = !DILocation(line: 0, scope: !5009)
!5021 = !DILocation(line: 2089, column: 9, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 2089, column: 7)
!5023 = !DILocation(line: 2089, column: 7, scope: !5009)
!5024 = !DILocation(line: 2092, column: 9, scope: !5009)
!5025 = !DILocation(line: 2096, column: 14, scope: !5009)
!5026 = !DILocation(line: 2096, column: 49, scope: !5009)
!5027 = !DILocation(line: 2097, column: 7, scope: !5009)
!5028 = !DILocation(line: 2097, column: 10, scope: !5009)
!5029 = !DILocation(line: 2097, column: 47, scope: !5009)
!5030 = !DILocation(line: 2097, column: 44, scope: !5009)
!5031 = !DILocation(line: 2102, column: 7, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 2102, column: 7)
!5033 = !DILocation(line: 2102, column: 7, scope: !5009)
!5034 = !DILocation(line: 2103, column: 15, scope: !5032)
!5035 = !DILocation(line: 2103, column: 5, scope: !5032)
!5036 = !DILocation(line: 2107, column: 10, scope: !5009)
!5037 = !DILocation(line: 2108, column: 9, scope: !5009)
!5038 = !DILocation(line: 2109, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 2109, column: 7)
!5040 = !DILocation(line: 2109, column: 19, scope: !5039)
!5041 = !DILocation(line: 2109, column: 22, scope: !5039)
!5042 = !DILocation(line: 2109, column: 54, scope: !5039)
!5043 = !DILocation(line: 2109, column: 7, scope: !5009)
!5044 = !DILocation(line: 2111, column: 17, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 2110, column: 5)
!5046 = !DILocation(line: 2113, column: 11, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2113, column: 11)
!5048 = !DILocation(line: 2113, column: 11, scope: !5045)
!5049 = !DILocation(line: 2114, column: 9, scope: !5047)
!5050 = !DILocation(line: 2114, column: 2, scope: !5047)
!5051 = !DILocation(line: 2121, column: 46, scope: !5009)
!5052 = !DILocation(line: 2121, column: 10, scope: !5009)
!5053 = !DILocation(line: 2121, column: 3, scope: !5009)
!5054 = !DILocation(line: 2123, column: 1, scope: !5009)
!5055 = distinct !DISubprogram(name: "noce_process_if_block", scope: !3, file: !3, line: 2237, type: !5056, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5059)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!2240, !5058}
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!5059 = !{!5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5080, !5083, !5084}
!5060 = !DILocalVariable(name: "if_info", arg: 1, scope: !5055, file: !3, line: 2237, type: !5058)
!5061 = !DILocalVariable(name: "test_bb", scope: !5055, file: !3, line: 2239, type: !2247)
!5062 = !DILocalVariable(name: "then_bb", scope: !5055, file: !3, line: 2240, type: !2247)
!5063 = !DILocalVariable(name: "else_bb", scope: !5055, file: !3, line: 2241, type: !2247)
!5064 = !DILocalVariable(name: "join_bb", scope: !5055, file: !3, line: 2242, type: !2247)
!5065 = !DILocalVariable(name: "jump", scope: !5055, file: !3, line: 2243, type: !2279)
!5066 = !DILocalVariable(name: "cond", scope: !5055, file: !3, line: 2244, type: !2279)
!5067 = !DILocalVariable(name: "insn_a", scope: !5055, file: !3, line: 2245, type: !2279)
!5068 = !DILocalVariable(name: "insn_b", scope: !5055, file: !3, line: 2245, type: !2279)
!5069 = !DILocalVariable(name: "set_a", scope: !5055, file: !3, line: 2246, type: !2279)
!5070 = !DILocalVariable(name: "set_b", scope: !5055, file: !3, line: 2246, type: !2279)
!5071 = !DILocalVariable(name: "orig_x", scope: !5055, file: !3, line: 2247, type: !2279)
!5072 = !DILocalVariable(name: "x", scope: !5055, file: !3, line: 2247, type: !2279)
!5073 = !DILocalVariable(name: "a", scope: !5055, file: !3, line: 2247, type: !2279)
!5074 = !DILocalVariable(name: "b", scope: !5055, file: !3, line: 2247, type: !2279)
!5075 = !DILocalVariable(name: "note", scope: !5076, file: !3, line: 2366, type: !2279)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2365, column: 2)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 2364, column: 11)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 2359, column: 5)
!5079 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2358, column: 7)
!5080 = !DILocalVariable(name: "seq", scope: !5081, file: !3, line: 2456, type: !2279)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2455, column: 5)
!5082 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2454, column: 7)
!5083 = !DILabel(scope: !5055, name: "retry", file: !3, line: 2344)
!5084 = !DILabel(scope: !5055, name: "success", file: !3, line: 2451)
!5085 = !DILocation(line: 0, scope: !5055)
!5086 = !DILocation(line: 2239, column: 34, scope: !5055)
!5087 = !DILocation(line: 2240, column: 34, scope: !5055)
!5088 = !DILocation(line: 2241, column: 34, scope: !5055)
!5089 = !DILocation(line: 2242, column: 34, scope: !5055)
!5090 = !DILocation(line: 2243, column: 23, scope: !5055)
!5091 = !DILocation(line: 2244, column: 23, scope: !5055)
!5092 = !DILocation(line: 2260, column: 12, scope: !5055)
!5093 = !DILocation(line: 2261, column: 9, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2261, column: 7)
!5095 = !DILocation(line: 2262, column: 7, scope: !5094)
!5096 = !DILocation(line: 2262, column: 20, scope: !5094)
!5097 = !DILocation(line: 2262, column: 17, scope: !5094)
!5098 = !DILocation(line: 2263, column: 7, scope: !5094)
!5099 = !DILocation(line: 2263, column: 19, scope: !5094)
!5100 = !DILocation(line: 2263, column: 40, scope: !5094)
!5101 = !DILocation(line: 2261, column: 7, scope: !5055)
!5102 = !DILocation(line: 2266, column: 7, scope: !5055)
!5103 = !DILocation(line: 2267, column: 7, scope: !5055)
!5104 = !DILocation(line: 2277, column: 7, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2277, column: 7)
!5106 = !DILocation(line: 2277, column: 7, scope: !5055)
!5107 = !DILocation(line: 2279, column: 16, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 2278, column: 5)
!5109 = !DILocation(line: 2280, column: 13, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2280, column: 11)
!5111 = !DILocation(line: 2281, column: 4, scope: !5110)
!5112 = !DILocation(line: 2281, column: 17, scope: !5110)
!5113 = !DILocation(line: 2281, column: 14, scope: !5110)
!5114 = !DILocation(line: 2282, column: 4, scope: !5110)
!5115 = !DILocation(line: 2282, column: 16, scope: !5110)
!5116 = !DILocation(line: 2282, column: 37, scope: !5110)
!5117 = !DILocation(line: 2283, column: 4, scope: !5110)
!5118 = !DILocation(line: 2283, column: 25, scope: !5110)
!5119 = !DILocation(line: 2283, column: 9, scope: !5110)
!5120 = !DILocation(line: 2280, column: 11, scope: !5108)
!5121 = !DILocation(line: 2288, column: 44, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 2287, column: 5)
!5123 = !DILocation(line: 2288, column: 16, scope: !5122)
!5124 = !DILocation(line: 2289, column: 7, scope: !5122)
!5125 = !DILocation(line: 0, scope: !5122)
!5126 = !DILocation(line: 2289, column: 21, scope: !5122)
!5127 = !DILocation(line: 2289, column: 24, scope: !5122)
!5128 = !DILocation(line: 2290, column: 11, scope: !5122)
!5129 = distinct !{!5129, !5124, !5130}
!5130 = !DILocation(line: 2290, column: 36, scope: !5122)
!5131 = !DILocation(line: 2295, column: 7, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 2294, column: 11)
!5133 = !DILocation(line: 2295, column: 34, scope: !5132)
!5134 = !DILocation(line: 2295, column: 31, scope: !5132)
!5135 = !DILocation(line: 2296, column: 4, scope: !5132)
!5136 = !DILocation(line: 2296, column: 8, scope: !5132)
!5137 = !DILocation(line: 2297, column: 4, scope: !5132)
!5138 = !DILocation(line: 2297, column: 16, scope: !5132)
!5139 = !DILocation(line: 2297, column: 37, scope: !5132)
!5140 = !DILocation(line: 2298, column: 4, scope: !5132)
!5141 = !DILocation(line: 2298, column: 25, scope: !5132)
!5142 = !DILocation(line: 2298, column: 9, scope: !5132)
!5143 = !DILocation(line: 2299, column: 4, scope: !5132)
!5144 = !DILocation(line: 2299, column: 26, scope: !5132)
!5145 = !DILocation(line: 2299, column: 9, scope: !5132)
!5146 = !DILocation(line: 2300, column: 4, scope: !5132)
!5147 = !DILocation(line: 2300, column: 35, scope: !5132)
!5148 = !DILocation(line: 2300, column: 7, scope: !5132)
!5149 = !DILocation(line: 2301, column: 4, scope: !5132)
!5150 = !DILocation(line: 2301, column: 27, scope: !5132)
!5151 = !DILocation(line: 2301, column: 7, scope: !5132)
!5152 = !DILocation(line: 2305, column: 4, scope: !5132)
!5153 = !DILocation(line: 2305, column: 7, scope: !5132)
!5154 = !DILocation(line: 2306, column: 4, scope: !5132)
!5155 = !DILocation(line: 2306, column: 7, scope: !5132)
!5156 = !DILocation(line: 2307, column: 4, scope: !5132)
!5157 = !DILocation(line: 2307, column: 7, scope: !5132)
!5158 = !DILocation(line: 2294, column: 11, scope: !5122)
!5159 = !DILocation(line: 2308, column: 2, scope: !5132)
!5160 = !DILocation(line: 0, scope: !5105)
!5161 = !DILocation(line: 2316, column: 7, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2316, column: 7)
!5163 = !DILocation(line: 2316, column: 7, scope: !5055)
!5164 = !DILocation(line: 2319, column: 8, scope: !5055)
!5165 = !DILocation(line: 2319, column: 16, scope: !5055)
!5166 = !DILocation(line: 2324, column: 8, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2324, column: 7)
!5168 = !DILocation(line: 2325, column: 7, scope: !5167)
!5169 = !DILocation(line: 2326, column: 7, scope: !5167)
!5170 = !DILocation(line: 2326, column: 17, scope: !5167)
!5171 = !DILocation(line: 2324, column: 7, scope: !5055)
!5172 = !DILocation(line: 2328, column: 11, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 2328, column: 11)
!5174 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 2327, column: 5)
!5175 = !DILocation(line: 2328, column: 24, scope: !5173)
!5176 = !DILocation(line: 2328, column: 11, scope: !5174)
!5177 = !DILocation(line: 2331, column: 11, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 2331, column: 11)
!5179 = !DILocation(line: 2331, column: 24, scope: !5178)
!5180 = !DILocation(line: 2332, column: 4, scope: !5178)
!5181 = !DILocation(line: 2332, column: 9, scope: !5178)
!5182 = !DILocation(line: 2333, column: 8, scope: !5178)
!5183 = !DILocation(line: 2333, column: 12, scope: !5178)
!5184 = !DILocation(line: 2331, column: 11, scope: !5174)
!5185 = !DILocation(line: 2336, column: 24, scope: !5174)
!5186 = !DILocation(line: 0, scope: !5174)
!5187 = !DILocation(line: 2336, column: 11, scope: !5174)
!5188 = !DILocation(line: 2338, column: 5, scope: !5174)
!5189 = !DILocation(line: 2341, column: 9, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2341, column: 7)
!5191 = !DILocation(line: 2341, column: 29, scope: !5190)
!5192 = !DILocation(line: 2341, column: 34, scope: !5190)
!5193 = !DILocation(line: 2341, column: 7, scope: !5055)
!5194 = !DILocation(line: 2358, column: 7, scope: !5055)
!5195 = !DILocation(line: 2344, column: 2, scope: !5055)
!5196 = !DILocation(line: 2346, column: 19, scope: !5055)
!5197 = !DILocation(line: 2347, column: 19, scope: !5055)
!5198 = !DILocation(line: 2348, column: 14, scope: !5055)
!5199 = !DILocation(line: 2349, column: 14, scope: !5055)
!5200 = !DILocation(line: 2350, column: 14, scope: !5055)
!5201 = !DILocation(line: 2358, column: 7, scope: !5079)
!5202 = !DILocation(line: 2388, column: 8, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2388, column: 7)
!5204 = !DILocation(line: 2388, column: 14, scope: !5203)
!5205 = !DILocation(line: 2388, column: 17, scope: !5203)
!5206 = !DILocation(line: 2388, column: 7, scope: !5055)
!5207 = !DILocation(line: 2399, column: 11, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 2399, column: 11)
!5209 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2389, column: 5)
!5210 = !DILocation(line: 2399, column: 11, scope: !5209)
!5211 = !DILocation(line: 2410, column: 12, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 2410, column: 11)
!5213 = !DILocation(line: 2410, column: 11, scope: !5209)
!5214 = !DILocation(line: 2414, column: 7, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2414, column: 7)
!5216 = !DILocation(line: 2414, column: 7, scope: !5055)
!5217 = !DILocation(line: 2416, column: 7, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2416, column: 7)
!5219 = !DILocation(line: 2416, column: 7, scope: !5055)
!5220 = !DILocation(line: 2418, column: 7, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2418, column: 7)
!5222 = !DILocation(line: 2418, column: 7, scope: !5055)
!5223 = !DILocation(line: 2420, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2420, column: 7)
!5225 = !DILocation(line: 2420, column: 7, scope: !5055)
!5226 = !DILocation(line: 2422, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2422, column: 7)
!5228 = !DILocation(line: 2422, column: 7, scope: !5055)
!5229 = !DILocation(line: 2425, column: 10, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2424, column: 7)
!5231 = !DILocation(line: 2424, column: 7, scope: !5055)
!5232 = !DILocation(line: 2427, column: 17, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2427, column: 7)
!5234 = !DILocation(line: 2427, column: 9, scope: !5233)
!5235 = !DILocation(line: 2427, column: 7, scope: !5055)
!5236 = !DILocation(line: 2429, column: 11, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2429, column: 11)
!5238 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2428, column: 5)
!5239 = !DILocation(line: 2429, column: 11, scope: !5238)
!5240 = !DILocation(line: 2431, column: 11, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2431, column: 11)
!5242 = !DILocation(line: 2431, column: 11, scope: !5238)
!5243 = !DILocation(line: 2433, column: 11, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2433, column: 11)
!5245 = !DILocation(line: 2433, column: 11, scope: !5238)
!5246 = !DILocation(line: 2436, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2435, column: 11)
!5248 = !DILocation(line: 2435, column: 11, scope: !5238)
!5249 = !DILocation(line: 2438, column: 11, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2438, column: 11)
!5251 = !DILocation(line: 2438, column: 11, scope: !5238)
!5252 = !DILocation(line: 2442, column: 16, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2442, column: 7)
!5254 = !DILocation(line: 2364, column: 11, scope: !5077)
!5255 = !DILocation(line: 2492, column: 1, scope: !5055)
!5256 = !DILocation(line: 2454, column: 14, scope: !5082)
!5257 = !DILocation(line: 2364, column: 21, scope: !5077)
!5258 = !DILocation(line: 2364, column: 18, scope: !5077)
!5259 = !DILocation(line: 2368, column: 29, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 2368, column: 8)
!5261 = !DILocation(line: 2368, column: 26, scope: !5260)
!5262 = !DILocation(line: 2368, column: 8, scope: !5076)
!5263 = !DILocation(line: 2369, column: 25, scope: !5260)
!5264 = !DILocation(line: 2369, column: 23, scope: !5260)
!5265 = !DILocation(line: 2369, column: 6, scope: !5260)
!5266 = !DILocation(line: 2370, column: 35, scope: !5076)
!5267 = !DILocation(line: 2370, column: 4, scope: !5076)
!5268 = !DILocation(line: 2374, column: 16, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 2374, column: 8)
!5270 = !DILocation(line: 0, scope: !5076)
!5271 = !DILocation(line: 2374, column: 61, scope: !5269)
!5272 = !DILocation(line: 2374, column: 8, scope: !5076)
!5273 = !DILocation(line: 2375, column: 6, scope: !5269)
!5274 = !DILocation(line: 2381, column: 16, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2381, column: 16)
!5276 = !DILocation(line: 2381, column: 23, scope: !5275)
!5277 = !DILocation(line: 2381, column: 26, scope: !5275)
!5278 = !DILocation(line: 2381, column: 16, scope: !5077)
!5279 = !DILocation(line: 2451, column: 2, scope: !5055)
!5280 = !DILocation(line: 2454, column: 7, scope: !5055)
!5281 = !DILocation(line: 2458, column: 7, scope: !5081)
!5282 = !DILocation(line: 2459, column: 7, scope: !5081)
!5283 = !DILocation(line: 2460, column: 13, scope: !5081)
!5284 = !DILocation(line: 0, scope: !5081)
!5285 = !DILocation(line: 2461, column: 7, scope: !5081)
!5286 = !DILocation(line: 2462, column: 7, scope: !5081)
!5287 = !DILocation(line: 2463, column: 7, scope: !5081)
!5288 = !DILocation(line: 2465, column: 37, scope: !5081)
!5289 = !DILocation(line: 2465, column: 55, scope: !5081)
!5290 = !DILocation(line: 2465, column: 7, scope: !5081)
!5291 = !DILocation(line: 2466, column: 5, scope: !5081)
!5292 = !DILocation(line: 2471, column: 7, scope: !5055)
!5293 = !DILocation(line: 2473, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 2472, column: 5)
!5295 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2471, column: 7)
!5296 = !DILocation(line: 2474, column: 23, scope: !5294)
!5297 = !DILocation(line: 2475, column: 5, scope: !5294)
!5298 = !DILocation(line: 2477, column: 18, scope: !5295)
!5299 = !DILocation(line: 2477, column: 5, scope: !5295)
!5300 = !DILocation(line: 2479, column: 16, scope: !5055)
!5301 = !DILocation(line: 2479, column: 3, scope: !5055)
!5302 = !DILocation(line: 2480, column: 35, scope: !5055)
!5303 = !DILocation(line: 2480, column: 3, scope: !5055)
!5304 = !DILocation(line: 2481, column: 3, scope: !5055)
!5305 = !DILocation(line: 2482, column: 19, scope: !5055)
!5306 = !DILocation(line: 2484, column: 7, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2484, column: 7)
!5308 = !DILocation(line: 2484, column: 7, scope: !5055)
!5309 = !DILocation(line: 2486, column: 7, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 2485, column: 5)
!5311 = !DILocation(line: 2487, column: 23, scope: !5310)
!5312 = !DILocation(line: 2488, column: 5, scope: !5310)
!5313 = !DILocation(line: 2490, column: 24, scope: !5055)
!5314 = !DILocation(line: 2491, column: 3, scope: !5055)
!5315 = distinct !DISubprogram(name: "cond_move_process_if_block", scope: !3, file: !3, line: 2638, type: !5056, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5316)
!5316 = !{!5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334}
!5317 = !DILocalVariable(name: "if_info", arg: 1, scope: !5315, file: !3, line: 2638, type: !5058)
!5318 = !DILocalVariable(name: "test_bb", scope: !5315, file: !3, line: 2640, type: !2247)
!5319 = !DILocalVariable(name: "then_bb", scope: !5315, file: !3, line: 2641, type: !2247)
!5320 = !DILocalVariable(name: "else_bb", scope: !5315, file: !3, line: 2642, type: !2247)
!5321 = !DILocalVariable(name: "join_bb", scope: !5315, file: !3, line: 2643, type: !2247)
!5322 = !DILocalVariable(name: "jump", scope: !5315, file: !3, line: 2644, type: !2279)
!5323 = !DILocalVariable(name: "cond", scope: !5315, file: !3, line: 2645, type: !2279)
!5324 = !DILocalVariable(name: "seq", scope: !5315, file: !3, line: 2646, type: !2279)
!5325 = !DILocalVariable(name: "loc_insn", scope: !5315, file: !3, line: 2646, type: !2279)
!5326 = !DILocalVariable(name: "max_reg", scope: !5315, file: !3, line: 2647, type: !2240)
!5327 = !DILocalVariable(name: "size", scope: !5315, file: !3, line: 2647, type: !2240)
!5328 = !DILocalVariable(name: "c", scope: !5315, file: !3, line: 2647, type: !2240)
!5329 = !DILocalVariable(name: "reg", scope: !5315, file: !3, line: 2647, type: !2240)
!5330 = !DILocalVariable(name: "then_vals", scope: !5315, file: !3, line: 2648, type: !3474)
!5331 = !DILocalVariable(name: "else_vals", scope: !5315, file: !3, line: 2649, type: !3474)
!5332 = !DILocalVariable(name: "then_regs", scope: !5315, file: !3, line: 2650, type: !3475)
!5333 = !DILocalVariable(name: "else_regs", scope: !5315, file: !3, line: 2651, type: !3475)
!5334 = !DILocalVariable(name: "i", scope: !5315, file: !3, line: 2652, type: !7)
!5335 = !DILocation(line: 0, scope: !5315)
!5336 = !DILocation(line: 2640, column: 34, scope: !5315)
!5337 = !DILocation(line: 2641, column: 34, scope: !5315)
!5338 = !DILocation(line: 2642, column: 34, scope: !5315)
!5339 = !DILocation(line: 2643, column: 34, scope: !5315)
!5340 = !DILocation(line: 2644, column: 23, scope: !5315)
!5341 = !DILocation(line: 2645, column: 23, scope: !5315)
!5342 = !DILocation(line: 2647, column: 3, scope: !5315)
!5343 = !DILocation(line: 2650, column: 3, scope: !5315)
!5344 = !DILocation(line: 2650, column: 20, scope: !5315)
!5345 = !DILocation(line: 2651, column: 3, scope: !5315)
!5346 = !DILocation(line: 2651, column: 20, scope: !5315)
!5347 = !DILocation(line: 2656, column: 13, scope: !5315)
!5348 = !DILocation(line: 2657, column: 24, scope: !5315)
!5349 = !DILocation(line: 2658, column: 23, scope: !5315)
!5350 = !DILocation(line: 2658, column: 15, scope: !5315)
!5351 = !DILocation(line: 2659, column: 23, scope: !5315)
!5352 = !DILocation(line: 2659, column: 15, scope: !5315)
!5353 = !DILocation(line: 2660, column: 3, scope: !5315)
!5354 = !DILocation(line: 2661, column: 3, scope: !5315)
!5355 = !DILocation(line: 2664, column: 8, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2664, column: 7)
!5357 = !DILocation(line: 2665, column: 7, scope: !5356)
!5358 = !DILocation(line: 2665, column: 11, scope: !5356)
!5359 = !DILocation(line: 2665, column: 19, scope: !5356)
!5360 = !DILocation(line: 2665, column: 23, scope: !5356)
!5361 = !DILocation(line: 2664, column: 7, scope: !5315)
!5362 = !DILocation(line: 2667, column: 7, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 2666, column: 5)
!5364 = !DILocation(line: 2668, column: 7, scope: !5363)
!5365 = !DILocation(line: 2669, column: 7, scope: !5363)
!5366 = !DILocation(line: 2679, column: 8, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2679, column: 3)
!5368 = !DILocation(line: 2678, column: 5, scope: !5315)
!5369 = !DILocation(line: 0, scope: !5367)
!5370 = !DILocation(line: 2679, column: 15, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 2679, column: 3)
!5372 = !DILocation(line: 2679, column: 3, scope: !5367)
!5373 = !DILocation(line: 2700, column: 3, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2700, column: 3)
!5375 = !DILocation(line: 2681, column: 22, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2681, column: 11)
!5377 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 2680, column: 5)
!5378 = !DILocation(line: 2681, column: 12, scope: !5376)
!5379 = !DILocation(line: 2681, column: 27, scope: !5376)
!5380 = !DILocation(line: 0, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 2684, column: 11)
!5382 = !DILocation(line: 2684, column: 12, scope: !5381)
!5383 = !DILocation(line: 2681, column: 31, scope: !5376)
!5384 = !DILocation(line: 2681, column: 11, scope: !5377)
!5385 = !DILocation(line: 0, scope: !5377)
!5386 = !DILocation(line: 2684, column: 11, scope: !5377)
!5387 = !DILocation(line: 2685, column: 2, scope: !5381)
!5388 = !DILocation(line: 2688, column: 9, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 2688, column: 8)
!5390 = distinct !DILexicalBlock(scope: !5381, file: !3, line: 2687, column: 2)
!5391 = !DILocation(line: 2689, column: 8, scope: !5389)
!5392 = !DILocation(line: 2689, column: 12, scope: !5389)
!5393 = !DILocation(line: 2690, column: 8, scope: !5389)
!5394 = !DILocation(line: 2690, column: 12, scope: !5389)
!5395 = !DILocation(line: 2688, column: 8, scope: !5390)
!5396 = !DILocation(line: 2692, column: 8, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 2691, column: 6)
!5398 = !DILocation(line: 2693, column: 8, scope: !5397)
!5399 = !DILocation(line: 2694, column: 8, scope: !5397)
!5400 = !DILocation(line: 2679, column: 54, scope: !5371)
!5401 = !DILocation(line: 2679, column: 3, scope: !5371)
!5402 = distinct !{!5402, !5372, !5403}
!5403 = !DILocation(line: 2697, column: 5, scope: !5367)
!5404 = !DILocation(line: 0, scope: !5374)
!5405 = !DILocation(line: 2700, column: 15, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2700, column: 3)
!5407 = !DILocation(line: 2701, column: 20, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 2701, column: 9)
!5409 = !DILocation(line: 2701, column: 10, scope: !5408)
!5410 = !DILocation(line: 2701, column: 9, scope: !5406)
!5411 = !DILocation(line: 2700, column: 53, scope: !5406)
!5412 = !DILocation(line: 2700, column: 3, scope: !5406)
!5413 = distinct !{!5413, !5373, !5414}
!5414 = !DILocation(line: 2702, column: 9, scope: !5374)
!5415 = !DILocation(line: 2708, column: 11, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2708, column: 7)
!5417 = !DILocation(line: 2708, column: 9, scope: !5416)
!5418 = !DILocation(line: 2708, column: 7, scope: !5315)
!5419 = !DILocation(line: 2710, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 2709, column: 5)
!5421 = !DILocation(line: 2711, column: 7, scope: !5420)
!5422 = !DILocation(line: 2712, column: 7, scope: !5420)
!5423 = !DILocation(line: 2717, column: 3, scope: !5315)
!5424 = !DILocation(line: 2718, column: 8, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2718, column: 7)
!5426 = !DILocation(line: 2720, column: 7, scope: !5425)
!5427 = !DILocation(line: 2721, column: 4, scope: !5425)
!5428 = !DILocation(line: 2721, column: 8, scope: !5425)
!5429 = !DILocation(line: 2718, column: 7, scope: !5315)
!5430 = !DILocation(line: 2724, column: 7, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 2723, column: 5)
!5432 = !DILocation(line: 2725, column: 7, scope: !5431)
!5433 = !DILocation(line: 2726, column: 7, scope: !5431)
!5434 = !DILocation(line: 2727, column: 7, scope: !5431)
!5435 = !DILocation(line: 2729, column: 9, scope: !5315)
!5436 = !DILocation(line: 2730, column: 8, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2730, column: 7)
!5438 = !DILocation(line: 2730, column: 7, scope: !5315)
!5439 = !DILocation(line: 2732, column: 7, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2731, column: 5)
!5441 = !DILocation(line: 2733, column: 7, scope: !5440)
!5442 = !DILocation(line: 2734, column: 7, scope: !5440)
!5443 = !DILocation(line: 2737, column: 14, scope: !5315)
!5444 = !DILocation(line: 2738, column: 8, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2738, column: 7)
!5446 = !DILocation(line: 2738, column: 7, scope: !5315)
!5447 = !DILocation(line: 2740, column: 18, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 2739, column: 5)
!5449 = !DILocation(line: 2741, column: 7, scope: !5448)
!5450 = !DILocation(line: 2743, column: 39, scope: !5315)
!5451 = !DILocation(line: 2743, column: 3, scope: !5315)
!5452 = !DILocation(line: 2745, column: 7, scope: !5315)
!5453 = !DILocation(line: 2747, column: 7, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 2746, column: 5)
!5455 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2745, column: 7)
!5456 = !DILocation(line: 2748, column: 23, scope: !5454)
!5457 = !DILocation(line: 2749, column: 5, scope: !5454)
!5458 = !DILocation(line: 2751, column: 18, scope: !5455)
!5459 = !DILocation(line: 2751, column: 5, scope: !5455)
!5460 = !DILocation(line: 2753, column: 16, scope: !5315)
!5461 = !DILocation(line: 2753, column: 3, scope: !5315)
!5462 = !DILocation(line: 2754, column: 35, scope: !5315)
!5463 = !DILocation(line: 2754, column: 3, scope: !5315)
!5464 = !DILocation(line: 2755, column: 3, scope: !5315)
!5465 = !DILocation(line: 2756, column: 19, scope: !5315)
!5466 = !DILocation(line: 2758, column: 7, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 2758, column: 7)
!5468 = !DILocation(line: 2758, column: 7, scope: !5315)
!5469 = !DILocation(line: 2760, column: 7, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 2759, column: 5)
!5471 = !DILocation(line: 2761, column: 23, scope: !5470)
!5472 = !DILocation(line: 2762, column: 5, scope: !5470)
!5473 = !DILocation(line: 2764, column: 24, scope: !5315)
!5474 = !DILocation(line: 2766, column: 3, scope: !5315)
!5475 = !DILocation(line: 2767, column: 3, scope: !5315)
!5476 = !DILocation(line: 2768, column: 3, scope: !5315)
!5477 = !DILocation(line: 2769, column: 1, scope: !5315)
!5478 = distinct !DISubprogram(name: "first_active_insn", scope: !3, file: !3, line: 183, type: !5479, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5481)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{!2279, !2247}
!5481 = !{!5482, !5483}
!5482 = !DILocalVariable(name: "bb", arg: 1, scope: !5478, file: !3, line: 183, type: !2247)
!5483 = !DILocalVariable(name: "insn", scope: !5478, file: !3, line: 185, type: !2279)
!5484 = !DILocation(line: 0, scope: !5478)
!5485 = !DILocation(line: 185, column: 14, scope: !5478)
!5486 = !DILocation(line: 187, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 187, column: 7)
!5488 = !DILocation(line: 187, column: 7, scope: !5478)
!5489 = !DILocation(line: 189, column: 19, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 189, column: 11)
!5491 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 188, column: 5)
!5492 = !DILocation(line: 189, column: 16, scope: !5490)
!5493 = !DILocation(line: 189, column: 11, scope: !5491)
!5494 = !DILocation(line: 191, column: 14, scope: !5491)
!5495 = !DILocation(line: 192, column: 5, scope: !5491)
!5496 = !DILocation(line: 194, column: 3, scope: !5478)
!5497 = !DILocation(line: 194, column: 10, scope: !5478)
!5498 = !DILocation(line: 194, column: 24, scope: !5478)
!5499 = !DILocation(line: 194, column: 27, scope: !5478)
!5500 = !DILocation(line: 196, column: 19, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 196, column: 11)
!5502 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 195, column: 5)
!5503 = !DILocation(line: 196, column: 16, scope: !5501)
!5504 = !DILocation(line: 196, column: 11, scope: !5502)
!5505 = !DILocation(line: 198, column: 14, scope: !5502)
!5506 = distinct !{!5506, !5496, !5507}
!5507 = !DILocation(line: 199, column: 5, scope: !5478)
!5508 = !DILocation(line: 201, column: 7, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 201, column: 7)
!5510 = !DILocation(line: 205, column: 1, scope: !5478)
!5511 = distinct !DISubprogram(name: "last_active_insn", scope: !3, file: !3, line: 210, type: !5512, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5514)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!2279, !2247, !2240}
!5514 = !{!5515, !5516, !5517, !5518}
!5515 = !DILocalVariable(name: "bb", arg: 1, scope: !5511, file: !3, line: 210, type: !2247)
!5516 = !DILocalVariable(name: "skip_use_p", arg: 2, scope: !5511, file: !3, line: 210, type: !2240)
!5517 = !DILocalVariable(name: "insn", scope: !5511, file: !3, line: 212, type: !2279)
!5518 = !DILocalVariable(name: "head", scope: !5511, file: !3, line: 213, type: !2279)
!5519 = !DILocation(line: 0, scope: !5511)
!5520 = !DILocation(line: 212, column: 14, scope: !5511)
!5521 = !DILocation(line: 213, column: 14, scope: !5511)
!5522 = !DILocation(line: 215, column: 3, scope: !5511)
!5523 = !DILocation(line: 215, column: 10, scope: !5511)
!5524 = !DILocation(line: 216, column: 3, scope: !5511)
!5525 = !DILocation(line: 216, column: 6, scope: !5511)
!5526 = !DILocation(line: 217, column: 3, scope: !5511)
!5527 = !DILocation(line: 217, column: 6, scope: !5511)
!5528 = !DILocation(line: 218, column: 3, scope: !5511)
!5529 = !DILocation(line: 227, column: 7, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 227, column: 7)
!5531 = !DILocation(line: 222, column: 16, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 222, column: 11)
!5533 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 221, column: 5)
!5534 = !DILocation(line: 222, column: 11, scope: !5533)
!5535 = !DILocation(line: 224, column: 14, scope: !5533)
!5536 = distinct !{!5536, !5522, !5537}
!5537 = !DILocation(line: 225, column: 5, scope: !5511)
!5538 = !DILocation(line: 231, column: 1, scope: !5511)
!5539 = !DILocation(line: 219, column: 10, scope: !5511)
!5540 = !DILocation(line: 220, column: 7, scope: !5511)
!5541 = !DILocation(line: 220, column: 10, scope: !5511)
!5542 = !DILocation(line: 220, column: 36, scope: !5511)
!5543 = distinct !DISubprogram(name: "noce_operand_ok", scope: !3, file: !3, line: 2128, type: !5544, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5549)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!2240, !5546}
!5546 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !2248, line: 51, baseType: !5547)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2281)
!5549 = !{!5550}
!5550 = !DILocalVariable(name: "op", arg: 1, scope: !5543, file: !3, line: 2128, type: !5546)
!5551 = !DILocation(line: 0, scope: !5543)
!5552 = !DILocation(line: 2132, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2132, column: 7)
!5554 = !DILocation(line: 2132, column: 7, scope: !5543)
!5555 = !DILocation(line: 2133, column: 30, scope: !5553)
!5556 = !DILocation(line: 2133, column: 14, scope: !5553)
!5557 = !DILocation(line: 2133, column: 12, scope: !5553)
!5558 = !DILocation(line: 2133, column: 5, scope: !5553)
!5559 = !DILocation(line: 2135, column: 7, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2135, column: 7)
!5561 = !DILocation(line: 2135, column: 7, scope: !5543)
!5562 = !DILocation(line: 2138, column: 12, scope: !5543)
!5563 = !DILocation(line: 2138, column: 10, scope: !5543)
!5564 = !DILocation(line: 2138, column: 3, scope: !5543)
!5565 = !DILocation(line: 2139, column: 1, scope: !5543)
!5566 = distinct !DISubprogram(name: "rhs_regno", scope: !581, file: !581, line: 1051, type: !5567, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5569)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{!7, !5546}
!5569 = !{!5570}
!5570 = !DILocalVariable(name: "x", arg: 1, scope: !5566, file: !581, line: 1051, type: !5546)
!5571 = !DILocation(line: 0, scope: !5566)
!5572 = !DILocation(line: 1053, column: 10, scope: !5566)
!5573 = !DILocation(line: 1053, column: 3, scope: !5566)
!5574 = distinct !DISubprogram(name: "noce_mem_write_may_trap_or_fault_p", scope: !3, file: !3, line: 2144, type: !5575, scopeLine: 2145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5577)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!2239, !5546}
!5577 = !{!5578, !5579}
!5578 = !DILocalVariable(name: "mem", arg: 1, scope: !5574, file: !3, line: 2144, type: !5546)
!5579 = !DILocalVariable(name: "addr", scope: !5574, file: !3, line: 2146, type: !2279)
!5580 = !DILocation(line: 0, scope: !5574)
!5581 = !DILocation(line: 2148, column: 7, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 2148, column: 7)
!5583 = !DILocation(line: 2148, column: 7, scope: !5574)
!5584 = !DILocation(line: 2151, column: 7, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 2151, column: 7)
!5586 = !DILocation(line: 2151, column: 7, scope: !5574)
!5587 = !DILocation(line: 2154, column: 10, scope: !5574)
!5588 = !DILocation(line: 2157, column: 18, scope: !5574)
!5589 = !DILocation(line: 2157, column: 10, scope: !5574)
!5590 = !DILocation(line: 2159, column: 3, scope: !5574)
!5591 = !DILocation(line: 2160, column: 13, scope: !5574)
!5592 = !DILocation(line: 2160, column: 5, scope: !5574)
!5593 = !DILocation(line: 2168, column: 9, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 2161, column: 7)
!5595 = !DILocation(line: 2169, column: 2, scope: !5594)
!5596 = !DILocation(line: 2172, column: 9, scope: !5594)
!5597 = !DILocation(line: 2173, column: 2, scope: !5594)
!5598 = !DILocation(line: 2175, column: 6, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2175, column: 6)
!5600 = !DILocation(line: 2175, column: 6, scope: !5594)
!5601 = !DILocation(line: 2176, column: 11, scope: !5599)
!5602 = !DILocation(line: 2179, column: 2, scope: !5594)
!5603 = !DILocation(line: 2183, column: 6, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2183, column: 6)
!5605 = !DILocation(line: 2184, column: 6, scope: !5604)
!5606 = !DILocation(line: 2184, column: 32, scope: !5604)
!5607 = !DILocation(line: 2184, column: 9, scope: !5604)
!5608 = !DILocation(line: 2183, column: 6, scope: !5594)
!5609 = !DILocation(line: 2186, column: 2, scope: !5594)
!5610 = !DILocation(line: 2188, column: 2, scope: !5594)
!5611 = !DILocation(line: 0, scope: !5594)
!5612 = distinct !{!5612, !5590, !5613}
!5613 = !DILocation(line: 2189, column: 7, scope: !5574)
!5614 = !DILocation(line: 2192, column: 1, scope: !5574)
!5615 = distinct !DISubprogram(name: "noce_can_store_speculate_p", scope: !3, file: !3, line: 2200, type: !5616, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5618)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!2239, !2247, !5546}
!5618 = !{!5619, !5620, !5621, !5622}
!5619 = !DILocalVariable(name: "top_bb", arg: 1, scope: !5615, file: !3, line: 2200, type: !2247)
!5620 = !DILocalVariable(name: "mem", arg: 2, scope: !5615, file: !3, line: 2200, type: !5546)
!5621 = !DILocalVariable(name: "dominator", scope: !5615, file: !3, line: 2202, type: !2247)
!5622 = !DILocalVariable(name: "insn", scope: !5623, file: !3, line: 2208, type: !2279)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 2207, column: 5)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 2204, column: 3)
!5625 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 2204, column: 3)
!5626 = !DILocation(line: 0, scope: !5615)
!5627 = !DILocation(line: 2204, column: 20, scope: !5625)
!5628 = !DILocation(line: 0, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 2223, column: 8)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 2211, column: 2)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 2210, column: 7)
!5632 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 2210, column: 7)
!5633 = !DILocation(line: 2204, column: 8, scope: !5625)
!5634 = !DILocation(line: 0, scope: !5625)
!5635 = !DILocation(line: 2205, column: 18, scope: !5624)
!5636 = !DILocation(line: 2204, column: 3, scope: !5625)
!5637 = !DILocation(line: 2210, column: 7, scope: !5632)
!5638 = !DILocation(line: 0, scope: !5632)
!5639 = !DILocation(line: 0, scope: !5623)
!5640 = !DILocation(line: 2210, column: 7, scope: !5631)
!5641 = !DILocation(line: 2216, column: 8, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 2216, column: 8)
!5643 = !DILocation(line: 2217, column: 8, scope: !5642)
!5644 = !DILocation(line: 2217, column: 29, scope: !5642)
!5645 = !DILocation(line: 2217, column: 12, scope: !5642)
!5646 = !DILocation(line: 2218, column: 5, scope: !5642)
!5647 = !DILocation(line: 2218, column: 9, scope: !5642)
!5648 = !DILocation(line: 2218, column: 23, scope: !5642)
!5649 = !DILocation(line: 2218, column: 28, scope: !5642)
!5650 = !DILocation(line: 2216, column: 8, scope: !5630)
!5651 = !DILocation(line: 2221, column: 8, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 2221, column: 8)
!5653 = !DILocation(line: 2221, column: 8, scope: !5630)
!5654 = !DILocation(line: 2223, column: 23, scope: !5629)
!5655 = !DILocation(line: 2223, column: 8, scope: !5629)
!5656 = !DILocation(line: 2223, column: 8, scope: !5630)
!5657 = distinct !{!5657, !5637, !5658}
!5658 = !DILocation(line: 2226, column: 2, scope: !5632)
!5659 = !DILocation(line: 2206, column: 20, scope: !5624)
!5660 = !DILocation(line: 2204, column: 3, scope: !5624)
!5661 = distinct !{!5661, !5636, !5662}
!5662 = !DILocation(line: 2227, column: 5, scope: !5625)
!5663 = !DILocation(line: 2230, column: 1, scope: !5615)
!5664 = distinct !DISubprogram(name: "noce_try_move", scope: !3, file: !3, line: 853, type: !5056, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5665)
!5665 = !{!5666, !5667, !5668, !5669, !5670}
!5666 = !DILocalVariable(name: "if_info", arg: 1, scope: !5664, file: !3, line: 853, type: !5058)
!5667 = !DILocalVariable(name: "cond", scope: !5664, file: !3, line: 855, type: !2279)
!5668 = !DILocalVariable(name: "code", scope: !5664, file: !3, line: 856, type: !580)
!5669 = !DILocalVariable(name: "y", scope: !5664, file: !3, line: 857, type: !2279)
!5670 = !DILocalVariable(name: "seq", scope: !5664, file: !3, line: 857, type: !2279)
!5671 = !DILocation(line: 0, scope: !5664)
!5672 = !DILocation(line: 855, column: 23, scope: !5664)
!5673 = !DILocation(line: 856, column: 24, scope: !5664)
!5674 = !DILocation(line: 859, column: 18, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 859, column: 7)
!5676 = !DILocation(line: 864, column: 7, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 864, column: 7)
!5678 = !DILocation(line: 0, scope: !5677)
!5679 = !DILocation(line: 865, column: 10, scope: !5677)
!5680 = !DILocation(line: 870, column: 30, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 870, column: 7)
!5682 = !DILocation(line: 870, column: 33, scope: !5681)
!5683 = !DILocation(line: 870, column: 8, scope: !5681)
!5684 = !DILocation(line: 871, column: 8, scope: !5681)
!5685 = !DILocation(line: 871, column: 33, scope: !5681)
!5686 = !DILocation(line: 871, column: 36, scope: !5681)
!5687 = !DILocation(line: 871, column: 11, scope: !5681)
!5688 = !DILocation(line: 872, column: 7, scope: !5681)
!5689 = !DILocation(line: 872, column: 33, scope: !5681)
!5690 = !DILocation(line: 872, column: 36, scope: !5681)
!5691 = !DILocation(line: 872, column: 11, scope: !5681)
!5692 = !DILocation(line: 873, column: 4, scope: !5681)
!5693 = !DILocation(line: 873, column: 29, scope: !5681)
!5694 = !DILocation(line: 873, column: 32, scope: !5681)
!5695 = !DILocation(line: 873, column: 7, scope: !5681)
!5696 = !DILocation(line: 870, column: 7, scope: !5664)
!5697 = !DILocation(line: 875, column: 17, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 874, column: 5)
!5699 = !DILocation(line: 875, column: 11, scope: !5698)
!5700 = !DILocation(line: 875, column: 48, scope: !5698)
!5701 = !DILocation(line: 878, column: 35, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 878, column: 11)
!5703 = !DILocation(line: 878, column: 13, scope: !5702)
!5704 = !DILocation(line: 878, column: 11, scope: !5698)
!5705 = !DILocation(line: 880, column: 4, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 879, column: 2)
!5707 = !DILocation(line: 881, column: 34, scope: !5706)
!5708 = !DILocation(line: 881, column: 4, scope: !5706)
!5709 = !DILocation(line: 882, column: 10, scope: !5706)
!5710 = !DILocation(line: 883, column: 9, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 883, column: 8)
!5712 = !DILocation(line: 883, column: 8, scope: !5706)
!5713 = !DILocation(line: 886, column: 43, scope: !5706)
!5714 = !DILocation(line: 887, column: 8, scope: !5706)
!5715 = !DILocation(line: 886, column: 4, scope: !5706)
!5716 = !DILocation(line: 888, column: 2, scope: !5706)
!5717 = !DILocation(line: 892, column: 1, scope: !5664)
!5718 = distinct !DISubprogram(name: "noce_try_store_flag", scope: !3, file: !3, line: 901, type: !5056, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5719)
!5719 = !{!5720, !5721, !5722, !5723}
!5720 = !DILocalVariable(name: "if_info", arg: 1, scope: !5718, file: !3, line: 901, type: !5058)
!5721 = !DILocalVariable(name: "reversep", scope: !5718, file: !3, line: 903, type: !2240)
!5722 = !DILocalVariable(name: "target", scope: !5718, file: !3, line: 904, type: !2279)
!5723 = !DILocalVariable(name: "seq", scope: !5718, file: !3, line: 904, type: !2279)
!5724 = !DILocation(line: 0, scope: !5718)
!5725 = !DILocation(line: 906, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 906, column: 7)
!5727 = !DILocation(line: 907, column: 7, scope: !5726)
!5728 = !DILocation(line: 907, column: 10, scope: !5726)
!5729 = !DILocation(line: 907, column: 30, scope: !5726)
!5730 = !DILocation(line: 908, column: 7, scope: !5726)
!5731 = !DILocation(line: 908, column: 19, scope: !5726)
!5732 = !DILocation(line: 908, column: 24, scope: !5726)
!5733 = !DILocation(line: 908, column: 21, scope: !5726)
!5734 = !DILocation(line: 906, column: 7, scope: !5718)
!5735 = !DILocation(line: 910, column: 26, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 910, column: 12)
!5737 = !DILocation(line: 910, column: 23, scope: !5736)
!5738 = !DILocation(line: 911, column: 5, scope: !5736)
!5739 = !DILocation(line: 911, column: 8, scope: !5736)
!5740 = !DILocation(line: 912, column: 5, scope: !5736)
!5741 = !DILocation(line: 912, column: 8, scope: !5736)
!5742 = !DILocation(line: 912, column: 28, scope: !5736)
!5743 = !DILocation(line: 913, column: 5, scope: !5736)
!5744 = !DILocation(line: 913, column: 44, scope: !5736)
!5745 = !DILocation(line: 913, column: 59, scope: !5736)
!5746 = !DILocation(line: 913, column: 9, scope: !5736)
!5747 = !DILocation(line: 914, column: 9, scope: !5736)
!5748 = !DILocation(line: 910, column: 12, scope: !5726)
!5749 = !DILocation(line: 0, scope: !5726)
!5750 = !DILocation(line: 919, column: 3, scope: !5718)
!5751 = !DILocation(line: 921, column: 52, scope: !5718)
!5752 = !DILocation(line: 921, column: 12, scope: !5718)
!5753 = !DILocation(line: 922, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 922, column: 7)
!5755 = !DILocation(line: 922, column: 7, scope: !5718)
!5756 = !DILocation(line: 924, column: 30, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 924, column: 11)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 923, column: 5)
!5759 = !DILocation(line: 924, column: 18, scope: !5757)
!5760 = !DILocation(line: 924, column: 11, scope: !5758)
!5761 = !DILocation(line: 925, column: 2, scope: !5757)
!5762 = !DILocation(line: 927, column: 13, scope: !5758)
!5763 = !DILocation(line: 928, column: 13, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 928, column: 11)
!5765 = !DILocation(line: 928, column: 11, scope: !5758)
!5766 = !DILocation(line: 931, column: 46, scope: !5758)
!5767 = !DILocation(line: 932, column: 11, scope: !5758)
!5768 = !DILocation(line: 931, column: 7, scope: !5758)
!5769 = !DILocation(line: 933, column: 7, scope: !5758)
!5770 = !DILocation(line: 937, column: 7, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 936, column: 5)
!5772 = !DILocation(line: 938, column: 7, scope: !5771)
!5773 = !DILocation(line: 940, column: 1, scope: !5718)
!5774 = distinct !DISubprogram(name: "noce_try_bitop", scope: !3, file: !3, line: 1980, type: !5056, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5775)
!5775 = !{!5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784}
!5776 = !DILocalVariable(name: "if_info", arg: 1, scope: !5774, file: !3, line: 1980, type: !5058)
!5777 = !DILocalVariable(name: "cond", scope: !5774, file: !3, line: 1982, type: !2279)
!5778 = !DILocalVariable(name: "x", scope: !5774, file: !3, line: 1982, type: !2279)
!5779 = !DILocalVariable(name: "a", scope: !5774, file: !3, line: 1982, type: !2279)
!5780 = !DILocalVariable(name: "result", scope: !5774, file: !3, line: 1982, type: !2279)
!5781 = !DILocalVariable(name: "seq", scope: !5774, file: !3, line: 1982, type: !2279)
!5782 = !DILocalVariable(name: "mode", scope: !5774, file: !3, line: 1983, type: !189)
!5783 = !DILocalVariable(name: "code", scope: !5774, file: !3, line: 1984, type: !580)
!5784 = !DILocalVariable(name: "bitnum", scope: !5774, file: !3, line: 1985, type: !2240)
!5785 = !DILocation(line: 0, scope: !5774)
!5786 = !DILocation(line: 1987, column: 16, scope: !5774)
!5787 = !DILocation(line: 1988, column: 19, scope: !5774)
!5788 = !DILocation(line: 1989, column: 10, scope: !5774)
!5789 = !DILocation(line: 1992, column: 34, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1992, column: 7)
!5791 = !DILocation(line: 1992, column: 9, scope: !5790)
!5792 = !DILocation(line: 1996, column: 18, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1996, column: 7)
!5794 = !DILocation(line: 1992, column: 7, scope: !5774)
!5795 = !DILocation(line: 1998, column: 7, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1998, column: 7)
!5797 = !DILocation(line: 1998, column: 25, scope: !5796)
!5798 = !DILocation(line: 1998, column: 22, scope: !5796)
!5799 = !DILocation(line: 1998, column: 7, scope: !5774)
!5800 = !DILocation(line: 2000, column: 10, scope: !5774)
!5801 = !DILocation(line: 2003, column: 7, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 2003, column: 7)
!5803 = !DILocation(line: 2003, column: 23, scope: !5802)
!5804 = !DILocation(line: 2003, column: 7, scope: !5774)
!5805 = !DILocation(line: 2005, column: 11, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2005, column: 11)
!5807 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2004, column: 5)
!5808 = !DILocation(line: 2005, column: 29, scope: !5806)
!5809 = !DILocation(line: 2005, column: 26, scope: !5806)
!5810 = !DILocation(line: 2006, column: 4, scope: !5806)
!5811 = !DILocation(line: 2006, column: 8, scope: !5806)
!5812 = !DILocation(line: 2007, column: 4, scope: !5806)
!5813 = !DILocation(line: 2007, column: 25, scope: !5806)
!5814 = !DILocation(line: 2007, column: 9, scope: !5806)
!5815 = !DILocation(line: 2005, column: 11, scope: !5807)
!5816 = !DILocation(line: 2009, column: 16, scope: !5807)
!5817 = !DILocation(line: 2010, column: 14, scope: !5807)
!5818 = !DILocation(line: 2013, column: 22, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 2013, column: 11)
!5820 = !DILocation(line: 2019, column: 16, scope: !5774)
!5821 = !DILocation(line: 2020, column: 7, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 2020, column: 7)
!5823 = !DILocation(line: 2020, column: 20, scope: !5822)
!5824 = !DILocation(line: 2020, column: 27, scope: !5822)
!5825 = !DILocation(line: 2020, column: 43, scope: !5822)
!5826 = !DILocation(line: 2020, column: 7, scope: !5774)
!5827 = !DILocation(line: 2023, column: 29, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 2023, column: 11)
!5829 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 2021, column: 5)
!5830 = !DILocation(line: 2023, column: 13, scope: !5828)
!5831 = !DILocation(line: 2024, column: 11, scope: !5828)
!5832 = !DILocation(line: 2024, column: 15, scope: !5828)
!5833 = !DILocation(line: 2025, column: 4, scope: !5828)
!5834 = !DILocation(line: 2025, column: 8, scope: !5828)
!5835 = !DILocation(line: 2025, column: 31, scope: !5828)
!5836 = !DILocation(line: 2025, column: 29, scope: !5828)
!5837 = !DILocation(line: 2026, column: 37, scope: !5828)
!5838 = !DILocation(line: 2026, column: 7, scope: !5828)
!5839 = !DILocation(line: 2023, column: 11, scope: !5829)
!5840 = !DILocation(line: 2031, column: 11, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 2031, column: 11)
!5842 = !DILocation(line: 2031, column: 24, scope: !5841)
!5843 = !DILocation(line: 0, scope: !5841)
!5844 = !DILocation(line: 2031, column: 11, scope: !5829)
!5845 = !DILocation(line: 2032, column: 11, scope: !5841)
!5846 = !DILocation(line: 2032, column: 2, scope: !5841)
!5847 = !DILocation(line: 2033, column: 16, scope: !5841)
!5848 = !DILocation(line: 2036, column: 13, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 2034, column: 2)
!5850 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 2033, column: 16)
!5851 = !DILocation(line: 2037, column: 13, scope: !5849)
!5852 = !DILocation(line: 2038, column: 2, scope: !5849)
!5853 = !DILocation(line: 2042, column: 27, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 2040, column: 2)
!5855 = !DILocation(line: 2042, column: 13, scope: !5854)
!5856 = !DILocation(line: 2043, column: 13, scope: !5854)
!5857 = !DILocation(line: 2046, column: 25, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 2046, column: 12)
!5859 = !DILocation(line: 2046, column: 12, scope: !5822)
!5860 = !DILocation(line: 2049, column: 29, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 2049, column: 11)
!5862 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2047, column: 5)
!5863 = !DILocation(line: 2049, column: 13, scope: !5861)
!5864 = !DILocation(line: 2050, column: 4, scope: !5861)
!5865 = !DILocation(line: 2050, column: 8, scope: !5861)
!5866 = !DILocation(line: 2051, column: 4, scope: !5861)
!5867 = !DILocation(line: 2051, column: 8, scope: !5861)
!5868 = !DILocation(line: 2051, column: 31, scope: !5861)
!5869 = !DILocation(line: 2052, column: 31, scope: !5861)
!5870 = !DILocation(line: 2052, column: 11, scope: !5861)
!5871 = !DILocation(line: 2052, column: 7, scope: !5861)
!5872 = !DILocation(line: 2049, column: 11, scope: !5862)
!5873 = !DILocation(line: 2057, column: 22, scope: !5862)
!5874 = !DILocation(line: 2057, column: 16, scope: !5862)
!5875 = !DILocation(line: 0, scope: !5822)
!5876 = !DILocation(line: 2062, column: 7, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 2062, column: 7)
!5878 = !DILocation(line: 2062, column: 7, scope: !5774)
!5879 = !DILocation(line: 2064, column: 7, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 2063, column: 5)
!5881 = !DILocation(line: 2065, column: 7, scope: !5880)
!5882 = !DILocation(line: 2066, column: 13, scope: !5880)
!5883 = !DILocation(line: 2067, column: 12, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2067, column: 11)
!5885 = !DILocation(line: 2067, column: 11, scope: !5880)
!5886 = !DILocation(line: 2070, column: 46, scope: !5880)
!5887 = !DILocation(line: 2071, column: 11, scope: !5880)
!5888 = !DILocation(line: 2070, column: 7, scope: !5880)
!5889 = !DILocation(line: 2072, column: 5, scope: !5880)
!5890 = !DILocation(line: 2074, column: 1, scope: !5774)
!5891 = distinct !DISubprogram(name: "noce_try_minmax", scope: !3, file: !3, line: 1662, type: !5056, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5892)
!5892 = !{!5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900}
!5893 = !DILocalVariable(name: "if_info", arg: 1, scope: !5891, file: !3, line: 1662, type: !5058)
!5894 = !DILocalVariable(name: "cond", scope: !5891, file: !3, line: 1664, type: !2279)
!5895 = !DILocalVariable(name: "earliest", scope: !5891, file: !3, line: 1664, type: !2279)
!5896 = !DILocalVariable(name: "target", scope: !5891, file: !3, line: 1664, type: !2279)
!5897 = !DILocalVariable(name: "seq", scope: !5891, file: !3, line: 1664, type: !2279)
!5898 = !DILocalVariable(name: "code", scope: !5891, file: !3, line: 1665, type: !580)
!5899 = !DILocalVariable(name: "op", scope: !5891, file: !3, line: 1665, type: !580)
!5900 = !DILocalVariable(name: "unsignedp", scope: !5891, file: !3, line: 1666, type: !2240)
!5901 = !DILocation(line: 0, scope: !5891)
!5902 = !DILocation(line: 1664, column: 3, scope: !5891)
!5903 = !DILocation(line: 1671, column: 7, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1671, column: 7)
!5905 = !DILocation(line: 0, scope: !5904)
!5906 = !DILocation(line: 1672, column: 10, scope: !5904)
!5907 = !DILocation(line: 1675, column: 52, scope: !5891)
!5908 = !DILocation(line: 1675, column: 10, scope: !5891)
!5909 = !DILocation(line: 1676, column: 8, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1676, column: 7)
!5911 = !DILocation(line: 1676, column: 7, scope: !5891)
!5912 = !DILocation(line: 1681, column: 10, scope: !5891)
!5913 = !DILocation(line: 1682, column: 20, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1682, column: 7)
!5915 = !DILocation(line: 1682, column: 45, scope: !5914)
!5916 = !DILocation(line: 1682, column: 7, scope: !5914)
!5917 = !DILocation(line: 0, scope: !5914)
!5918 = !DILocation(line: 1682, column: 7, scope: !5891)
!5919 = !DILocation(line: 1684, column: 51, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1684, column: 11)
!5921 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1683, column: 5)
!5922 = !DILocation(line: 1684, column: 13, scope: !5920)
!5923 = !DILocation(line: 1684, column: 11, scope: !5921)
!5924 = !DILocation(line: 1687, column: 50, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1687, column: 12)
!5926 = !DILocation(line: 1687, column: 12, scope: !5925)
!5927 = !DILocation(line: 1687, column: 12, scope: !5914)
!5928 = !DILocation(line: 1689, column: 26, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1689, column: 11)
!5930 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1688, column: 5)
!5931 = !DILocation(line: 1689, column: 51, scope: !5929)
!5932 = !DILocation(line: 1689, column: 13, scope: !5929)
!5933 = !DILocation(line: 1689, column: 11, scope: !5930)
!5934 = !DILocation(line: 1691, column: 14, scope: !5930)
!5935 = !DILocation(line: 1698, column: 3, scope: !5891)
!5936 = !DILocation(line: 1713, column: 7, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1699, column: 5)
!5938 = !DILocation(line: 1718, column: 7, scope: !5937)
!5939 = !DILocation(line: 1723, column: 7, scope: !5937)
!5940 = !DILocation(line: 0, scope: !5937)
!5941 = !DILocation(line: 1728, column: 3, scope: !5891)
!5942 = !DILocation(line: 1730, column: 33, scope: !5891)
!5943 = !DILocation(line: 1731, column: 14, scope: !5891)
!5944 = !DILocation(line: 1731, column: 26, scope: !5891)
!5945 = !DILocation(line: 1732, column: 14, scope: !5891)
!5946 = !DILocation(line: 1730, column: 12, scope: !5891)
!5947 = !DILocation(line: 1733, column: 9, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1733, column: 7)
!5949 = !DILocation(line: 1733, column: 7, scope: !5891)
!5950 = !DILocation(line: 1735, column: 7, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1734, column: 5)
!5952 = !DILocation(line: 1736, column: 7, scope: !5951)
!5953 = !DILocation(line: 1738, column: 26, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1738, column: 7)
!5955 = !DILocation(line: 1738, column: 14, scope: !5954)
!5956 = !DILocation(line: 1738, column: 7, scope: !5891)
!5957 = !DILocation(line: 1739, column: 5, scope: !5954)
!5958 = !DILocation(line: 1741, column: 9, scope: !5891)
!5959 = !DILocation(line: 1742, column: 8, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1742, column: 7)
!5961 = !DILocation(line: 1742, column: 7, scope: !5891)
!5962 = !DILocation(line: 1745, column: 42, scope: !5891)
!5963 = !DILocation(line: 1745, column: 48, scope: !5891)
!5964 = !DILocation(line: 1745, column: 3, scope: !5891)
!5965 = !DILocation(line: 1746, column: 12, scope: !5891)
!5966 = !DILocation(line: 1746, column: 17, scope: !5891)
!5967 = !DILocation(line: 1747, column: 28, scope: !5891)
!5968 = !DILocation(line: 1747, column: 12, scope: !5891)
!5969 = !DILocation(line: 1747, column: 26, scope: !5891)
!5970 = !DILocation(line: 1749, column: 3, scope: !5891)
!5971 = !DILocation(line: 1750, column: 1, scope: !5891)
!5972 = distinct !DISubprogram(name: "noce_try_abs", scope: !3, file: !3, line: 1757, type: !5056, scopeLine: 1758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5973)
!5973 = !{!5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5987, !5988}
!5974 = !DILocalVariable(name: "if_info", arg: 1, scope: !5972, file: !3, line: 1757, type: !5058)
!5975 = !DILocalVariable(name: "cond", scope: !5972, file: !3, line: 1759, type: !2279)
!5976 = !DILocalVariable(name: "earliest", scope: !5972, file: !3, line: 1759, type: !2279)
!5977 = !DILocalVariable(name: "target", scope: !5972, file: !3, line: 1759, type: !2279)
!5978 = !DILocalVariable(name: "seq", scope: !5972, file: !3, line: 1759, type: !2279)
!5979 = !DILocalVariable(name: "a", scope: !5972, file: !3, line: 1759, type: !2279)
!5980 = !DILocalVariable(name: "b", scope: !5972, file: !3, line: 1759, type: !2279)
!5981 = !DILocalVariable(name: "c", scope: !5972, file: !3, line: 1759, type: !2279)
!5982 = !DILocalVariable(name: "negate", scope: !5972, file: !3, line: 1760, type: !2240)
!5983 = !DILocalVariable(name: "one_cmpl", scope: !5972, file: !3, line: 1761, type: !2239)
!5984 = !DILocalVariable(name: "set", scope: !5985, file: !3, line: 1812, type: !2279)
!5985 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1811, column: 5)
!5986 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1810, column: 7)
!5987 = !DILocalVariable(name: "insn", scope: !5985, file: !3, line: 1812, type: !2279)
!5988 = !DILocalVariable(name: "note", scope: !5989, file: !3, line: 1818, type: !2279)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1817, column: 2)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 1813, column: 11)
!5991 = !DILocation(line: 0, scope: !5972)
!5992 = !DILocation(line: 1759, column: 3, scope: !5972)
!5993 = !DILocation(line: 1764, column: 7, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1764, column: 7)
!5995 = !DILocation(line: 0, scope: !5994)
!5996 = !DILocation(line: 1770, column: 16, scope: !5972)
!5997 = !DILocation(line: 1771, column: 16, scope: !5972)
!5998 = !DILocation(line: 1772, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1772, column: 7)
!6000 = !DILocation(line: 1772, column: 20, scope: !5999)
!6001 = !DILocation(line: 1772, column: 27, scope: !5999)
!6002 = !DILocation(line: 1772, column: 43, scope: !5999)
!6003 = !DILocation(line: 1772, column: 30, scope: !5999)
!6004 = !DILocation(line: 1772, column: 7, scope: !5972)
!6005 = !DILocation(line: 1774, column: 12, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1774, column: 12)
!6007 = !DILocation(line: 1774, column: 25, scope: !6006)
!6008 = !DILocation(line: 1774, column: 32, scope: !6006)
!6009 = !DILocation(line: 1774, column: 48, scope: !6006)
!6010 = !DILocation(line: 1774, column: 35, scope: !6006)
!6011 = !DILocation(line: 1774, column: 12, scope: !5999)
!6012 = !DILocation(line: 1779, column: 12, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1779, column: 12)
!6014 = !DILocation(line: 1779, column: 25, scope: !6013)
!6015 = !DILocation(line: 1779, column: 32, scope: !6013)
!6016 = !DILocation(line: 1779, column: 48, scope: !6013)
!6017 = !DILocation(line: 1779, column: 35, scope: !6013)
!6018 = !DILocation(line: 1779, column: 12, scope: !6006)
!6019 = !DILocation(line: 1784, column: 12, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1784, column: 12)
!6021 = !DILocation(line: 1784, column: 25, scope: !6020)
!6022 = !DILocation(line: 1784, column: 32, scope: !6020)
!6023 = !DILocation(line: 1784, column: 48, scope: !6020)
!6024 = !DILocation(line: 1784, column: 35, scope: !6020)
!6025 = !DILocation(line: 1784, column: 12, scope: !6013)
!6026 = !DILocation(line: 0, scope: !5999)
!6027 = !DILocation(line: 1761, column: 8, scope: !5972)
!6028 = !DILocation(line: 1793, column: 10, scope: !5972)
!6029 = !DILocation(line: 1794, column: 8, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1794, column: 7)
!6031 = !DILocation(line: 1794, column: 7, scope: !5972)
!6032 = !DILocation(line: 1798, column: 20, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1798, column: 7)
!6034 = !DILocation(line: 1798, column: 7, scope: !6033)
!6035 = !DILocation(line: 0, scope: !6033)
!6036 = !DILocation(line: 1798, column: 7, scope: !5972)
!6037 = !DILocation(line: 1800, column: 12, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1800, column: 12)
!6039 = !DILocation(line: 1800, column: 12, scope: !6033)
!6040 = !DILocation(line: 1802, column: 11, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1801, column: 5)
!6042 = !DILocation(line: 1803, column: 16, scope: !6041)
!6043 = !DILocation(line: 1810, column: 7, scope: !5986)
!6044 = !DILocation(line: 1810, column: 7, scope: !5972)
!6045 = !DILocation(line: 1812, column: 42, scope: !5985)
!6046 = !DILocation(line: 1812, column: 23, scope: !5985)
!6047 = !DILocation(line: 0, scope: !5985)
!6048 = !DILocation(line: 1813, column: 11, scope: !5990)
!6049 = !DILocation(line: 1814, column: 4, scope: !5990)
!6050 = !DILocation(line: 1814, column: 7, scope: !5990)
!6051 = !DILocation(line: 1814, column: 32, scope: !5990)
!6052 = !DILocation(line: 1814, column: 29, scope: !5990)
!6053 = !DILocation(line: 1815, column: 4, scope: !5990)
!6054 = !DILocation(line: 1815, column: 14, scope: !5990)
!6055 = !DILocation(line: 1815, column: 12, scope: !5990)
!6056 = !DILocation(line: 1816, column: 4, scope: !5990)
!6057 = !DILocation(line: 1816, column: 20, scope: !5990)
!6058 = !DILocation(line: 1816, column: 7, scope: !5990)
!6059 = !DILocation(line: 1813, column: 11, scope: !5985)
!6060 = !DILocation(line: 1818, column: 15, scope: !5989)
!6061 = !DILocation(line: 0, scope: !5989)
!6062 = !DILocation(line: 1819, column: 8, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1819, column: 8)
!6064 = !DILocation(line: 1819, column: 8, scope: !5989)
!6065 = !DILocation(line: 1820, column: 10, scope: !6063)
!6066 = !DILocation(line: 1820, column: 6, scope: !6063)
!6067 = !DILocation(line: 1822, column: 10, scope: !6063)
!6068 = !DILocation(line: 0, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1827, column: 7)
!6070 = !DILocation(line: 1827, column: 7, scope: !6069)
!6071 = !DILocation(line: 1828, column: 7, scope: !6069)
!6072 = !DILocation(line: 1828, column: 10, scope: !6069)
!6073 = !DILocation(line: 1828, column: 33, scope: !6069)
!6074 = !DILocation(line: 1829, column: 7, scope: !6069)
!6075 = !DILocation(line: 1829, column: 10, scope: !6069)
!6076 = !DILocation(line: 1827, column: 7, scope: !5972)
!6077 = !DILocation(line: 1830, column: 9, scope: !6069)
!6078 = !DILocation(line: 1830, column: 5, scope: !6069)
!6079 = !DILocation(line: 1835, column: 12, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1835, column: 7)
!6081 = !DILocation(line: 1835, column: 9, scope: !6080)
!6082 = !DILocation(line: 1835, column: 24, scope: !6080)
!6083 = !DILocation(line: 1835, column: 27, scope: !6080)
!6084 = !DILocation(line: 1835, column: 43, scope: !6080)
!6085 = !DILocation(line: 1835, column: 7, scope: !5972)
!6086 = !DILocation(line: 1837, column: 17, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 1837, column: 12)
!6088 = !DILocation(line: 1837, column: 14, scope: !6087)
!6089 = !DILocation(line: 1837, column: 28, scope: !6087)
!6090 = !DILocation(line: 1837, column: 31, scope: !6087)
!6091 = !DILocation(line: 1837, column: 47, scope: !6087)
!6092 = !DILocation(line: 1837, column: 12, scope: !6080)
!6093 = !DILocation(line: 1839, column: 17, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 1839, column: 12)
!6095 = !DILocation(line: 1839, column: 14, scope: !6094)
!6096 = !DILocation(line: 1839, column: 12, scope: !6087)
!6097 = !DILocation(line: 1843, column: 11, scope: !5972)
!6098 = !DILocation(line: 1843, column: 3, scope: !5972)
!6099 = !DILocation(line: 1849, column: 16, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1844, column: 5)
!6101 = !DILocation(line: 1850, column: 7, scope: !6100)
!6102 = !DILocation(line: 1860, column: 3, scope: !5972)
!6103 = !DILocation(line: 1861, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1861, column: 7)
!6105 = !DILocation(line: 0, scope: !6104)
!6106 = !DILocation(line: 1861, column: 7, scope: !5972)
!6107 = !DILocation(line: 1862, column: 14, scope: !6104)
!6108 = !DILocation(line: 1862, column: 5, scope: !6104)
!6109 = !DILocation(line: 1865, column: 14, scope: !6104)
!6110 = !DILocation(line: 1869, column: 7, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1869, column: 7)
!6112 = !DILocation(line: 1869, column: 17, scope: !6111)
!6113 = !DILocation(line: 1869, column: 14, scope: !6111)
!6114 = !DILocation(line: 0, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 1871, column: 11)
!6116 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 1870, column: 5)
!6117 = !DILocation(line: 1871, column: 11, scope: !6116)
!6118 = !DILocation(line: 1872, column: 18, scope: !6115)
!6119 = !DILocation(line: 1872, column: 9, scope: !6115)
!6120 = !DILocation(line: 1875, column: 18, scope: !6115)
!6121 = !DILocation(line: 1879, column: 9, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1879, column: 7)
!6123 = !DILocation(line: 1879, column: 7, scope: !5972)
!6124 = !DILocation(line: 1881, column: 7, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 1880, column: 5)
!6126 = !DILocation(line: 1882, column: 7, scope: !6125)
!6127 = !DILocation(line: 1885, column: 26, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1885, column: 7)
!6129 = !DILocation(line: 1885, column: 14, scope: !6128)
!6130 = !DILocation(line: 1885, column: 7, scope: !5972)
!6131 = !DILocation(line: 1886, column: 5, scope: !6128)
!6132 = !DILocation(line: 1888, column: 9, scope: !5972)
!6133 = !DILocation(line: 1889, column: 8, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1889, column: 7)
!6135 = !DILocation(line: 1889, column: 7, scope: !5972)
!6136 = !DILocation(line: 1892, column: 42, scope: !5972)
!6137 = !DILocation(line: 1892, column: 48, scope: !5972)
!6138 = !DILocation(line: 1892, column: 3, scope: !5972)
!6139 = !DILocation(line: 1893, column: 12, scope: !5972)
!6140 = !DILocation(line: 1893, column: 17, scope: !5972)
!6141 = !DILocation(line: 1894, column: 28, scope: !5972)
!6142 = !DILocation(line: 1894, column: 12, scope: !5972)
!6143 = !DILocation(line: 1894, column: 26, scope: !5972)
!6144 = !DILocation(line: 1896, column: 3, scope: !5972)
!6145 = !DILocation(line: 1897, column: 1, scope: !5972)
!6146 = distinct !DISubprogram(name: "noce_try_cmove", scope: !3, file: !3, line: 1268, type: !5056, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6147)
!6147 = !{!6148, !6149, !6150, !6151}
!6148 = !DILocalVariable(name: "if_info", arg: 1, scope: !6146, file: !3, line: 1268, type: !5058)
!6149 = !DILocalVariable(name: "code", scope: !6146, file: !3, line: 1270, type: !580)
!6150 = !DILocalVariable(name: "target", scope: !6146, file: !3, line: 1271, type: !2279)
!6151 = !DILocalVariable(name: "seq", scope: !6146, file: !3, line: 1271, type: !2279)
!6152 = !DILocation(line: 0, scope: !6146)
!6153 = !DILocation(line: 1273, column: 8, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1273, column: 7)
!6155 = !DILocation(line: 1273, column: 32, scope: !6154)
!6156 = !DILocation(line: 1273, column: 35, scope: !6154)
!6157 = !DILocation(line: 1274, column: 7, scope: !6154)
!6158 = !DILocation(line: 1274, column: 11, scope: !6154)
!6159 = !DILocation(line: 1274, column: 35, scope: !6154)
!6160 = !DILocation(line: 1274, column: 38, scope: !6154)
!6161 = !DILocation(line: 1273, column: 7, scope: !6146)
!6162 = !DILocation(line: 1276, column: 7, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1275, column: 5)
!6164 = !DILocation(line: 1278, column: 14, scope: !6163)
!6165 = !DILocation(line: 1279, column: 51, scope: !6163)
!6166 = !DILocation(line: 1280, column: 5, scope: !6163)
!6167 = !DILocation(line: 1281, column: 5, scope: !6163)
!6168 = !DILocation(line: 1282, column: 14, scope: !6163)
!6169 = !DILocation(line: 1282, column: 26, scope: !6163)
!6170 = !DILocation(line: 1279, column: 16, scope: !6163)
!6171 = !DILocation(line: 1284, column: 11, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1284, column: 11)
!6173 = !DILocation(line: 1284, column: 11, scope: !6163)
!6174 = !DILocation(line: 1286, column: 27, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 1286, column: 8)
!6176 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1285, column: 2)
!6177 = !DILocation(line: 1286, column: 15, scope: !6175)
!6178 = !DILocation(line: 1286, column: 8, scope: !6176)
!6179 = !DILocation(line: 1287, column: 6, scope: !6175)
!6180 = !DILocation(line: 1289, column: 10, scope: !6176)
!6181 = !DILocation(line: 1290, column: 9, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 1290, column: 8)
!6183 = !DILocation(line: 1290, column: 8, scope: !6176)
!6184 = !DILocation(line: 1293, column: 43, scope: !6176)
!6185 = !DILocation(line: 1294, column: 8, scope: !6176)
!6186 = !DILocation(line: 1293, column: 4, scope: !6176)
!6187 = !DILocation(line: 1295, column: 4, scope: !6176)
!6188 = !DILocation(line: 1299, column: 4, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1298, column: 2)
!6190 = !DILocation(line: 1300, column: 4, scope: !6189)
!6191 = !DILocation(line: 1305, column: 1, scope: !6146)
!6192 = distinct !DISubprogram(name: "noce_try_store_flag_constants", scope: !3, file: !3, line: 945, type: !5056, scopeLine: 946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6193)
!6193 = !{!6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204}
!6194 = !DILocalVariable(name: "if_info", arg: 1, scope: !6192, file: !3, line: 945, type: !5058)
!6195 = !DILocalVariable(name: "target", scope: !6192, file: !3, line: 947, type: !2279)
!6196 = !DILocalVariable(name: "seq", scope: !6192, file: !3, line: 947, type: !2279)
!6197 = !DILocalVariable(name: "reversep", scope: !6192, file: !3, line: 948, type: !2240)
!6198 = !DILocalVariable(name: "itrue", scope: !6192, file: !3, line: 949, type: !2365)
!6199 = !DILocalVariable(name: "ifalse", scope: !6192, file: !3, line: 949, type: !2365)
!6200 = !DILocalVariable(name: "diff", scope: !6192, file: !3, line: 949, type: !2365)
!6201 = !DILocalVariable(name: "tmp", scope: !6192, file: !3, line: 949, type: !2365)
!6202 = !DILocalVariable(name: "normalize", scope: !6192, file: !3, line: 950, type: !2240)
!6203 = !DILocalVariable(name: "can_reverse", scope: !6192, file: !3, line: 950, type: !2240)
!6204 = !DILocalVariable(name: "mode", scope: !6192, file: !3, line: 951, type: !189)
!6205 = !DILocation(line: 0, scope: !6192)
!6206 = !DILocation(line: 953, column: 7, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 953, column: 7)
!6208 = !DILocation(line: 954, column: 7, scope: !6207)
!6209 = !DILocation(line: 954, column: 10, scope: !6207)
!6210 = !DILocation(line: 953, column: 7, scope: !6192)
!6211 = !DILocation(line: 956, column: 14, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 955, column: 5)
!6213 = !DILocation(line: 957, column: 16, scope: !6212)
!6214 = !DILocation(line: 958, column: 15, scope: !6212)
!6215 = !DILocation(line: 961, column: 27, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 961, column: 11)
!6217 = !DILocation(line: 962, column: 16, scope: !6216)
!6218 = !DILocation(line: 962, column: 31, scope: !6216)
!6219 = !DILocation(line: 962, column: 21, scope: !6216)
!6220 = !DILocation(line: 962, column: 8, scope: !6216)
!6221 = !DILocation(line: 962, column: 4, scope: !6216)
!6222 = !DILocation(line: 961, column: 11, scope: !6212)
!6223 = !DILocation(line: 965, column: 40, scope: !6212)
!6224 = !DILocation(line: 965, column: 14, scope: !6212)
!6225 = !DILocation(line: 967, column: 57, scope: !6212)
!6226 = !DILocation(line: 967, column: 72, scope: !6212)
!6227 = !DILocation(line: 967, column: 22, scope: !6212)
!6228 = !DILocation(line: 968, column: 8, scope: !6212)
!6229 = !DILocation(line: 971, column: 36, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 971, column: 11)
!6231 = !DILocation(line: 973, column: 23, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 973, column: 16)
!6233 = !DILocation(line: 973, column: 28, scope: !6232)
!6234 = !DILocation(line: 973, column: 31, scope: !6232)
!6235 = !DILocation(line: 973, column: 50, scope: !6232)
!6236 = !DILocation(line: 973, column: 16, scope: !6230)
!6237 = !DILocation(line: 977, column: 27, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 977, column: 16)
!6239 = !DILocation(line: 977, column: 30, scope: !6238)
!6240 = !DILocation(line: 977, column: 50, scope: !6238)
!6241 = !DILocation(line: 977, column: 55, scope: !6238)
!6242 = !DILocation(line: 981, column: 9, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 980, column: 16)
!6244 = !DILocation(line: 982, column: 18, scope: !6243)
!6245 = !DILocation(line: 982, column: 30, scope: !6243)
!6246 = !DILocation(line: 980, column: 16, scope: !6238)
!6247 = !DILocation(line: 984, column: 23, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 984, column: 16)
!6249 = !DILocation(line: 984, column: 29, scope: !6248)
!6250 = !DILocation(line: 0, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 987, column: 16)
!6252 = !DILocation(line: 988, column: 21, scope: !6251)
!6253 = !DILocation(line: 985, column: 48, scope: !6248)
!6254 = !DILocation(line: 985, column: 60, scope: !6248)
!6255 = !DILocation(line: 984, column: 16, scope: !6243)
!6256 = !DILocation(line: 988, column: 33, scope: !6251)
!6257 = !DILocation(line: 987, column: 16, scope: !6248)
!6258 = !DILocation(line: 970, column: 16, scope: !6212)
!6259 = !DILocation(line: 0, scope: !6230)
!6260 = !DILocation(line: 993, column: 11, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 993, column: 11)
!6262 = !DILocation(line: 993, column: 11, scope: !6212)
!6263 = !DILocation(line: 996, column: 31, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 994, column: 2)
!6265 = !DILocation(line: 996, column: 11, scope: !6264)
!6266 = !DILocation(line: 997, column: 2, scope: !6264)
!6267 = !DILocation(line: 0, scope: !6212)
!6268 = !DILocation(line: 999, column: 7, scope: !6212)
!6269 = !DILocation(line: 1000, column: 56, scope: !6212)
!6270 = !DILocation(line: 1000, column: 16, scope: !6212)
!6271 = !DILocation(line: 1001, column: 13, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1001, column: 11)
!6273 = !DILocation(line: 1001, column: 11, scope: !6212)
!6274 = !DILocation(line: 1003, column: 4, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 1002, column: 2)
!6276 = !DILocation(line: 1004, column: 4, scope: !6275)
!6277 = !DILocation(line: 1009, column: 36, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1009, column: 11)
!6279 = !DILocation(line: 1012, column: 12, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1010, column: 2)
!6281 = !DILocation(line: 1012, column: 7, scope: !6280)
!6282 = !DILocation(line: 1014, column: 6, scope: !6280)
!6283 = !DILocation(line: 1014, column: 41, scope: !6280)
!6284 = !DILocation(line: 1011, column: 13, scope: !6280)
!6285 = !DILocation(line: 1016, column: 2, scope: !6280)
!6286 = !DILocation(line: 1020, column: 23, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1020, column: 16)
!6288 = !DILocation(line: 1020, column: 28, scope: !6287)
!6289 = !DILocation(line: 1020, column: 38, scope: !6287)
!6290 = !DILocation(line: 1020, column: 58, scope: !6287)
!6291 = !DILocation(line: 1020, column: 16, scope: !6278)
!6292 = !DILocation(line: 1023, column: 14, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1021, column: 2)
!6294 = !DILocation(line: 1023, column: 38, scope: !6293)
!6295 = !DILocation(line: 1022, column: 13, scope: !6293)
!6296 = !DILocation(line: 1025, column: 2, scope: !6293)
!6297 = !DILocation(line: 1029, column: 22, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1029, column: 16)
!6299 = !DILocation(line: 1029, column: 16, scope: !6287)
!6300 = !DILocation(line: 1032, column: 14, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1030, column: 2)
!6302 = !DILocation(line: 1032, column: 41, scope: !6301)
!6303 = !DILocation(line: 1031, column: 13, scope: !6301)
!6304 = !DILocation(line: 1034, column: 2, scope: !6301)
!6305 = !DILocation(line: 1041, column: 14, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1039, column: 2)
!6307 = !DILocation(line: 1041, column: 39, scope: !6306)
!6308 = !DILocation(line: 1040, column: 13, scope: !6306)
!6309 = !DILocation(line: 1043, column: 8, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1043, column: 8)
!6311 = !DILocation(line: 1043, column: 8, scope: !6306)
!6312 = !DILocation(line: 1045, column: 16, scope: !6310)
!6313 = !DILocation(line: 1046, column: 17, scope: !6310)
!6314 = !DILocation(line: 1044, column: 15, scope: !6310)
!6315 = !DILocation(line: 1044, column: 6, scope: !6310)
!6316 = !DILocation(line: 0, scope: !6278)
!6317 = !DILocation(line: 1049, column: 13, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1049, column: 11)
!6319 = !DILocation(line: 1049, column: 11, scope: !6212)
!6320 = !DILocation(line: 1051, column: 4, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 1050, column: 2)
!6322 = !DILocation(line: 1052, column: 4, scope: !6321)
!6323 = !DILocation(line: 1055, column: 30, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1055, column: 11)
!6325 = !DILocation(line: 1055, column: 18, scope: !6324)
!6326 = !DILocation(line: 1055, column: 11, scope: !6212)
!6327 = !DILocation(line: 1056, column: 2, scope: !6324)
!6328 = !DILocation(line: 1058, column: 13, scope: !6212)
!6329 = !DILocation(line: 1059, column: 12, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1059, column: 11)
!6331 = !DILocation(line: 1059, column: 11, scope: !6212)
!6332 = !DILocation(line: 1062, column: 46, scope: !6212)
!6333 = !DILocation(line: 1063, column: 11, scope: !6212)
!6334 = !DILocation(line: 1062, column: 7, scope: !6212)
!6335 = !DILocation(line: 1064, column: 7, scope: !6212)
!6336 = !DILocation(line: 1068, column: 1, scope: !6192)
!6337 = distinct !DISubprogram(name: "noce_try_addcc", scope: !3, file: !3, line: 1074, type: !5056, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6338)
!6338 = !{!6339, !6340, !6341, !6342, !6343, !6344, !6347}
!6339 = !DILocalVariable(name: "if_info", arg: 1, scope: !6337, file: !3, line: 1074, type: !5058)
!6340 = !DILocalVariable(name: "target", scope: !6337, file: !3, line: 1076, type: !2279)
!6341 = !DILocalVariable(name: "seq", scope: !6337, file: !3, line: 1076, type: !2279)
!6342 = !DILocalVariable(name: "subtract", scope: !6337, file: !3, line: 1077, type: !2240)
!6343 = !DILocalVariable(name: "normalize", scope: !6337, file: !3, line: 1077, type: !2240)
!6344 = !DILocalVariable(name: "cond", scope: !6345, file: !3, line: 1084, type: !2279)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1083, column: 5)
!6346 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1079, column: 7)
!6347 = !DILocalVariable(name: "code", scope: !6345, file: !3, line: 1085, type: !580)
!6348 = !DILocation(line: 0, scope: !6337)
!6349 = !DILocation(line: 1079, column: 7, scope: !6346)
!6350 = !DILocation(line: 1079, column: 29, scope: !6346)
!6351 = !DILocation(line: 1080, column: 7, scope: !6346)
!6352 = !DILocation(line: 1080, column: 23, scope: !6346)
!6353 = !DILocation(line: 1080, column: 54, scope: !6346)
!6354 = !DILocation(line: 1080, column: 10, scope: !6346)
!6355 = !DILocation(line: 1081, column: 7, scope: !6346)
!6356 = !DILocation(line: 1081, column: 46, scope: !6346)
!6357 = !DILocation(line: 1081, column: 61, scope: !6346)
!6358 = !DILocation(line: 1081, column: 11, scope: !6346)
!6359 = !DILocation(line: 1082, column: 4, scope: !6346)
!6360 = !DILocation(line: 1079, column: 7, scope: !6337)
!6361 = !DILocation(line: 1084, column: 27, scope: !6345)
!6362 = !DILocation(line: 0, scope: !6345)
!6363 = !DILocation(line: 1085, column: 69, scope: !6345)
!6364 = !DILocation(line: 1085, column: 28, scope: !6345)
!6365 = !DILocation(line: 1088, column: 28, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 1088, column: 11)
!6367 = !DILocation(line: 1088, column: 11, scope: !6366)
!6368 = !DILocation(line: 1089, column: 4, scope: !6366)
!6369 = !DILocation(line: 1089, column: 24, scope: !6366)
!6370 = !DILocation(line: 1089, column: 7, scope: !6366)
!6371 = !DILocation(line: 1088, column: 11, scope: !6345)
!6372 = !DILocation(line: 1091, column: 4, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1090, column: 2)
!6374 = !DILocation(line: 1092, column: 44, scope: !6373)
!6375 = !DILocation(line: 1093, column: 7, scope: !6373)
!6376 = !DILocation(line: 1094, column: 7, scope: !6373)
!6377 = !DILocation(line: 1096, column: 16, scope: !6373)
!6378 = !DILocation(line: 1097, column: 7, scope: !6373)
!6379 = !DILocation(line: 1098, column: 7, scope: !6373)
!6380 = !DILocation(line: 1099, column: 20, scope: !6373)
!6381 = !DILocation(line: 1100, column: 23, scope: !6373)
!6382 = !DILocation(line: 1092, column: 13, scope: !6373)
!6383 = !DILocation(line: 1101, column: 8, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 1101, column: 8)
!6385 = !DILocation(line: 1101, column: 8, scope: !6373)
!6386 = !DILocation(line: 1103, column: 31, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1103, column: 12)
!6388 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1102, column: 6)
!6389 = !DILocation(line: 1103, column: 19, scope: !6387)
!6390 = !DILocation(line: 1103, column: 12, scope: !6388)
!6391 = !DILocation(line: 1104, column: 3, scope: !6387)
!6392 = !DILocation(line: 1106, column: 14, scope: !6388)
!6393 = !DILocation(line: 1107, column: 13, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1107, column: 12)
!6395 = !DILocation(line: 1107, column: 12, scope: !6388)
!6396 = !DILocation(line: 1110, column: 47, scope: !6388)
!6397 = !DILocation(line: 1111, column: 12, scope: !6388)
!6398 = !DILocation(line: 1110, column: 8, scope: !6388)
!6399 = !DILocation(line: 1112, column: 8, scope: !6388)
!6400 = !DILocation(line: 1114, column: 4, scope: !6373)
!6401 = !DILocation(line: 1115, column: 2, scope: !6373)
!6402 = !DILocation(line: 1119, column: 20, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 1119, column: 11)
!6404 = !DILocation(line: 1119, column: 32, scope: !6403)
!6405 = !DILocation(line: 1120, column: 4, scope: !6403)
!6406 = !DILocation(line: 1120, column: 8, scope: !6403)
!6407 = !DILocation(line: 1120, column: 32, scope: !6403)
!6408 = !DILocation(line: 1120, column: 29, scope: !6403)
!6409 = !DILocation(line: 1121, column: 8, scope: !6403)
!6410 = !DILocation(line: 1121, column: 35, scope: !6403)
!6411 = !DILocation(line: 1121, column: 32, scope: !6403)
!6412 = !DILocation(line: 1119, column: 11, scope: !6345)
!6413 = !DILocation(line: 1123, column: 4, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1122, column: 9)
!6415 = !DILocation(line: 1124, column: 28, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1124, column: 8)
!6417 = !DILocation(line: 1124, column: 25, scope: !6416)
!6418 = !DILocation(line: 1124, column: 8, scope: !6414)
!6419 = !DILocation(line: 1126, column: 31, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 1126, column: 13)
!6421 = !DILocation(line: 1126, column: 13, scope: !6416)
!6422 = !DILocation(line: 1129, column: 32, scope: !6420)
!6423 = !DILocation(line: 0, scope: !6416)
!6424 = !DILocation(line: 1133, column: 20, scope: !6414)
!6425 = !DILocation(line: 1133, column: 7, scope: !6414)
!6426 = !DILocation(line: 1132, column: 13, scope: !6414)
!6427 = !DILocation(line: 1136, column: 8, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1136, column: 8)
!6429 = !DILocation(line: 1136, column: 8, scope: !6414)
!6430 = !DILocation(line: 1137, column: 36, scope: !6428)
!6431 = !DILocation(line: 1138, column: 8, scope: !6428)
!6432 = !DILocation(line: 1139, column: 17, scope: !6428)
!6433 = !DILocation(line: 1139, column: 37, scope: !6428)
!6434 = !DILocation(line: 1137, column: 15, scope: !6428)
!6435 = !DILocation(line: 1137, column: 6, scope: !6428)
!6436 = !DILocation(line: 0, scope: !6414)
!6437 = !DILocation(line: 1141, column: 8, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1141, column: 8)
!6439 = !DILocation(line: 1141, column: 8, scope: !6414)
!6440 = !DILocation(line: 1143, column: 31, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 1143, column: 12)
!6442 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1142, column: 6)
!6443 = !DILocation(line: 1143, column: 19, scope: !6441)
!6444 = !DILocation(line: 1143, column: 12, scope: !6442)
!6445 = !DILocation(line: 1144, column: 3, scope: !6441)
!6446 = !DILocation(line: 1146, column: 14, scope: !6442)
!6447 = !DILocation(line: 1147, column: 13, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 1147, column: 12)
!6449 = !DILocation(line: 1147, column: 12, scope: !6442)
!6450 = !DILocation(line: 1150, column: 47, scope: !6442)
!6451 = !DILocation(line: 1151, column: 12, scope: !6442)
!6452 = !DILocation(line: 1150, column: 8, scope: !6442)
!6453 = !DILocation(line: 1152, column: 8, scope: !6442)
!6454 = !DILocation(line: 1154, column: 4, scope: !6414)
!6455 = !DILocation(line: 1155, column: 2, scope: !6414)
!6456 = !DILocation(line: 1158, column: 3, scope: !6337)
!6457 = !DILocation(line: 1159, column: 1, scope: !6337)
!6458 = distinct !DISubprogram(name: "noce_try_store_flag_mask", scope: !3, file: !3, line: 1164, type: !5056, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6459)
!6459 = !{!6460, !6461, !6462, !6463}
!6460 = !DILocalVariable(name: "if_info", arg: 1, scope: !6458, file: !3, line: 1164, type: !5058)
!6461 = !DILocalVariable(name: "target", scope: !6458, file: !3, line: 1166, type: !2279)
!6462 = !DILocalVariable(name: "seq", scope: !6458, file: !3, line: 1166, type: !2279)
!6463 = !DILocalVariable(name: "reversep", scope: !6458, file: !3, line: 1167, type: !2240)
!6464 = !DILocation(line: 0, scope: !6458)
!6465 = !DILocation(line: 1170, column: 17, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1170, column: 7)
!6467 = !DILocation(line: 1170, column: 29, scope: !6466)
!6468 = !DILocation(line: 1172, column: 7, scope: !6466)
!6469 = !DILocation(line: 1172, column: 21, scope: !6466)
!6470 = !DILocation(line: 1172, column: 26, scope: !6466)
!6471 = !DILocation(line: 1172, column: 23, scope: !6466)
!6472 = !DILocation(line: 1173, column: 5, scope: !6466)
!6473 = !DILocation(line: 1173, column: 30, scope: !6466)
!6474 = !DILocation(line: 1173, column: 42, scope: !6466)
!6475 = !DILocation(line: 1173, column: 8, scope: !6466)
!6476 = !DILocation(line: 1174, column: 4, scope: !6466)
!6477 = !DILocation(line: 1174, column: 56, scope: !6466)
!6478 = !DILocation(line: 1175, column: 21, scope: !6466)
!6479 = !DILocation(line: 1174, column: 21, scope: !6466)
!6480 = !DILocation(line: 1176, column: 7, scope: !6466)
!6481 = !DILocation(line: 1177, column: 8, scope: !6466)
!6482 = !DILocation(line: 1177, column: 20, scope: !6466)
!6483 = !DILocation(line: 1177, column: 25, scope: !6466)
!6484 = !DILocation(line: 1177, column: 22, scope: !6466)
!6485 = !DILocation(line: 1178, column: 8, scope: !6466)
!6486 = !DILocation(line: 1178, column: 33, scope: !6466)
!6487 = !DILocation(line: 1178, column: 45, scope: !6466)
!6488 = !DILocation(line: 1178, column: 11, scope: !6466)
!6489 = !DILocation(line: 1170, column: 7, scope: !6458)
!6490 = !DILocation(line: 1180, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 1179, column: 5)
!6492 = !DILocation(line: 1182, column: 23, scope: !6491)
!6493 = !DILocation(line: 1182, column: 10, scope: !6491)
!6494 = !DILocation(line: 1181, column: 16, scope: !6491)
!6495 = !DILocation(line: 1184, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1184, column: 11)
!6497 = !DILocation(line: 1184, column: 11, scope: !6491)
!6498 = !DILocation(line: 1185, column: 39, scope: !6496)
!6499 = !DILocation(line: 1186, column: 20, scope: !6496)
!6500 = !DILocation(line: 1185, column: 18, scope: !6496)
!6501 = !DILocation(line: 1185, column: 9, scope: !6496)
!6502 = !DILocation(line: 0, scope: !6491)
!6503 = !DILocation(line: 1190, column: 11, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1190, column: 11)
!6505 = !DILocation(line: 1190, column: 11, scope: !6491)
!6506 = !DILocation(line: 1192, column: 27, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1192, column: 8)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 1191, column: 2)
!6509 = !DILocation(line: 1192, column: 15, scope: !6507)
!6510 = !DILocation(line: 1192, column: 8, scope: !6508)
!6511 = !DILocation(line: 1193, column: 6, scope: !6507)
!6512 = !DILocation(line: 1195, column: 10, scope: !6508)
!6513 = !DILocation(line: 1196, column: 9, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1196, column: 8)
!6515 = !DILocation(line: 1196, column: 8, scope: !6508)
!6516 = !DILocation(line: 1199, column: 43, scope: !6508)
!6517 = !DILocation(line: 1200, column: 8, scope: !6508)
!6518 = !DILocation(line: 1199, column: 4, scope: !6508)
!6519 = !DILocation(line: 1201, column: 4, scope: !6508)
!6520 = !DILocation(line: 1204, column: 7, scope: !6491)
!6521 = !DILocation(line: 1205, column: 5, scope: !6491)
!6522 = !DILocation(line: 1208, column: 1, scope: !6458)
!6523 = distinct !DISubprogram(name: "noce_try_cmove_arith", scope: !3, file: !3, line: 1310, type: !5056, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6524)
!6524 = !{!6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6537, !6538, !6541, !6544, !6547, !6550, !6551}
!6525 = !DILocalVariable(name: "if_info", arg: 1, scope: !6523, file: !3, line: 1310, type: !5058)
!6526 = !DILocalVariable(name: "a", scope: !6523, file: !3, line: 1312, type: !2279)
!6527 = !DILocalVariable(name: "b", scope: !6523, file: !3, line: 1313, type: !2279)
!6528 = !DILocalVariable(name: "x", scope: !6523, file: !3, line: 1314, type: !2279)
!6529 = !DILocalVariable(name: "orig_a", scope: !6523, file: !3, line: 1315, type: !2279)
!6530 = !DILocalVariable(name: "orig_b", scope: !6523, file: !3, line: 1315, type: !2279)
!6531 = !DILocalVariable(name: "insn_a", scope: !6523, file: !3, line: 1316, type: !2279)
!6532 = !DILocalVariable(name: "insn_b", scope: !6523, file: !3, line: 1316, type: !2279)
!6533 = !DILocalVariable(name: "tmp", scope: !6523, file: !3, line: 1317, type: !2279)
!6534 = !DILocalVariable(name: "target", scope: !6523, file: !3, line: 1317, type: !2279)
!6535 = !DILocalVariable(name: "is_mem", scope: !6523, file: !3, line: 1318, type: !2240)
!6536 = !DILocalVariable(name: "insn_cost", scope: !6523, file: !3, line: 1319, type: !2240)
!6537 = !DILocalVariable(name: "code", scope: !6523, file: !3, line: 1320, type: !580)
!6538 = !DILocalVariable(name: "address_mode", scope: !6539, file: !3, line: 1332, type: !189)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 1331, column: 5)
!6540 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1327, column: 7)
!6541 = !DILocalVariable(name: "reversep", scope: !6542, file: !3, line: 1381, type: !2240)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 1380, column: 5)
!6543 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1379, column: 7)
!6544 = !DILocalVariable(name: "set", scope: !6545, file: !3, line: 1406, type: !2279)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1405, column: 5)
!6546 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1404, column: 7)
!6547 = !DILocalVariable(name: "set", scope: !6548, file: !3, line: 1428, type: !2279)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1427, column: 5)
!6549 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1426, column: 7)
!6550 = !DILocalVariable(name: "last", scope: !6548, file: !3, line: 1428, type: !2279)
!6551 = !DILabel(scope: !6523, name: "end_seq_and_fail", file: !3, line: 1501)
!6552 = !DILocation(line: 0, scope: !6523)
!6553 = !DILocation(line: 1312, column: 20, scope: !6523)
!6554 = !DILocation(line: 1313, column: 20, scope: !6523)
!6555 = !DILocation(line: 1314, column: 20, scope: !6523)
!6556 = !DILocation(line: 1327, column: 7, scope: !6540)
!6557 = !DILocation(line: 1328, column: 7, scope: !6540)
!6558 = !DILocation(line: 1328, column: 10, scope: !6540)
!6559 = !DILocation(line: 1328, column: 20, scope: !6540)
!6560 = !DILocation(line: 1328, column: 23, scope: !6540)
!6561 = !DILocation(line: 1329, column: 7, scope: !6540)
!6562 = !DILocation(line: 1329, column: 10, scope: !6540)
!6563 = !DILocation(line: 1329, column: 32, scope: !6540)
!6564 = !DILocation(line: 1329, column: 29, scope: !6540)
!6565 = !DILocation(line: 1330, column: 7, scope: !6540)
!6566 = !DILocation(line: 1330, column: 19, scope: !6540)
!6567 = !DILocation(line: 1330, column: 31, scope: !6540)
!6568 = !DILocation(line: 1327, column: 7, scope: !6523)
!6569 = !DILocation(line: 1333, column: 23, scope: !6539)
!6570 = !DILocation(line: 1333, column: 37, scope: !6539)
!6571 = !DILocation(line: 1333, column: 4, scope: !6539)
!6572 = !DILocation(line: 0, scope: !6539)
!6573 = !DILocation(line: 1335, column: 11, scope: !6539)
!6574 = !DILocation(line: 1336, column: 11, scope: !6539)
!6575 = !DILocation(line: 1337, column: 11, scope: !6539)
!6576 = !DILocation(line: 1339, column: 5, scope: !6539)
!6577 = !DILocation(line: 1344, column: 12, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 1344, column: 12)
!6579 = !DILocation(line: 1344, column: 27, scope: !6578)
!6580 = !DILocation(line: 1344, column: 30, scope: !6578)
!6581 = !DILocation(line: 1344, column: 12, scope: !6540)
!6582 = !DILocation(line: 1354, column: 10, scope: !6523)
!6583 = !DILocation(line: 1355, column: 21, scope: !6523)
!6584 = !DILocation(line: 1356, column: 21, scope: !6523)
!6585 = !DILocation(line: 1360, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1360, column: 7)
!6587 = !DILocation(line: 1360, column: 7, scope: !6523)
!6588 = !DILocation(line: 1362, column: 34, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1361, column: 5)
!6590 = !DILocation(line: 1363, column: 37, scope: !6589)
!6591 = !DILocation(line: 1363, column: 12, scope: !6589)
!6592 = !DILocation(line: 1362, column: 19, scope: !6589)
!6593 = !DILocation(line: 1364, column: 21, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1364, column: 11)
!6595 = !DILocation(line: 1364, column: 26, scope: !6594)
!6596 = !DILocation(line: 1364, column: 41, scope: !6594)
!6597 = !DILocation(line: 1364, column: 39, scope: !6594)
!6598 = !DILocation(line: 1364, column: 11, scope: !6589)
!6599 = !DILocation(line: 0, scope: !6586)
!6600 = !DILocation(line: 1370, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1370, column: 7)
!6602 = !DILocation(line: 1370, column: 7, scope: !6523)
!6603 = !DILocation(line: 1372, column: 35, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 1371, column: 5)
!6605 = !DILocation(line: 1373, column: 37, scope: !6604)
!6606 = !DILocation(line: 1373, column: 12, scope: !6604)
!6607 = !DILocation(line: 1372, column: 20, scope: !6604)
!6608 = !DILocation(line: 1372, column: 17, scope: !6604)
!6609 = !DILocation(line: 1374, column: 21, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 1374, column: 11)
!6611 = !DILocation(line: 1374, column: 26, scope: !6610)
!6612 = !DILocation(line: 1374, column: 41, scope: !6610)
!6613 = !DILocation(line: 1374, column: 39, scope: !6610)
!6614 = !DILocation(line: 1374, column: 11, scope: !6604)
!6615 = !DILocation(line: 1379, column: 42, scope: !6543)
!6616 = !DILocation(line: 1379, column: 57, scope: !6543)
!6617 = !DILocation(line: 1379, column: 7, scope: !6543)
!6618 = !DILocation(line: 1379, column: 63, scope: !6543)
!6619 = !DILocation(line: 1379, column: 7, scope: !6523)
!6620 = !DILocation(line: 0, scope: !6542)
!6621 = !DILocation(line: 1382, column: 11, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1382, column: 11)
!6623 = !DILocation(line: 1382, column: 11, scope: !6542)
!6624 = !DILocation(line: 1384, column: 36, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 1384, column: 16)
!6626 = !DILocation(line: 1384, column: 16, scope: !6625)
!6627 = !DILocation(line: 1384, column: 16, scope: !6622)
!6628 = !DILocation(line: 0, scope: !6622)
!6629 = !DILocation(line: 1387, column: 11, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1387, column: 11)
!6631 = !DILocation(line: 1387, column: 11, scope: !6542)
!6632 = !DILocation(line: 1389, column: 46, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1388, column: 2)
!6634 = !DILocation(line: 1389, column: 61, scope: !6633)
!6635 = !DILocation(line: 1389, column: 11, scope: !6633)
!6636 = !DILocation(line: 1392, column: 2, scope: !6633)
!6637 = !DILocation(line: 1395, column: 3, scope: !6523)
!6638 = !DILocation(line: 1404, column: 29, scope: !6546)
!6639 = !DILocation(line: 1404, column: 9, scope: !6546)
!6640 = !DILocation(line: 1404, column: 7, scope: !6523)
!6641 = !DILocation(line: 1408, column: 11, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1408, column: 11)
!6643 = !DILocation(line: 1408, column: 11, scope: !6545)
!6644 = !DILocation(line: 1410, column: 23, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1409, column: 2)
!6646 = !DILocation(line: 1410, column: 10, scope: !6645)
!6647 = !DILocation(line: 1411, column: 21, scope: !6645)
!6648 = !DILocation(line: 1411, column: 10, scope: !6645)
!6649 = !DILocation(line: 1412, column: 2, scope: !6645)
!6650 = !DILocation(line: 1413, column: 18, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1413, column: 16)
!6652 = !DILocation(line: 1413, column: 16, scope: !6642)
!6653 = !DILocation(line: 1417, column: 21, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1416, column: 2)
!6655 = !DILocation(line: 1417, column: 8, scope: !6654)
!6656 = !DILocation(line: 1418, column: 10, scope: !6654)
!6657 = !DILocation(line: 1419, column: 10, scope: !6654)
!6658 = !DILocation(line: 0, scope: !6545)
!6659 = !DILocation(line: 1420, column: 4, scope: !6654)
!6660 = !DILocation(line: 1420, column: 19, scope: !6654)
!6661 = !DILocation(line: 1421, column: 21, scope: !6654)
!6662 = !DILocation(line: 1421, column: 10, scope: !6654)
!6663 = !DILocation(line: 0, scope: !6642)
!6664 = !DILocation(line: 1423, column: 11, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1423, column: 11)
!6666 = !DILocation(line: 0, scope: !6546)
!6667 = !DILocation(line: 1390, column: 15, scope: !6633)
!6668 = !DILocation(line: 1426, column: 29, scope: !6549)
!6669 = !DILocation(line: 1426, column: 9, scope: !6549)
!6670 = !DILocation(line: 1426, column: 7, scope: !6523)
!6671 = !DILocation(line: 1430, column: 11, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1430, column: 11)
!6673 = !DILocation(line: 1430, column: 11, scope: !6548)
!6674 = !DILocation(line: 1432, column: 30, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 1431, column: 2)
!6676 = !DILocation(line: 1432, column: 17, scope: !6675)
!6677 = !DILocation(line: 1433, column: 10, scope: !6675)
!6678 = !DILocation(line: 1434, column: 2, scope: !6675)
!6679 = !DILocation(line: 1435, column: 18, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 1435, column: 16)
!6681 = !DILocation(line: 1435, column: 16, scope: !6672)
!6682 = !DILocation(line: 1439, column: 28, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 1438, column: 2)
!6684 = !DILocation(line: 1439, column: 15, scope: !6683)
!6685 = !DILocation(line: 1440, column: 10, scope: !6683)
!6686 = !DILocation(line: 1441, column: 10, scope: !6683)
!6687 = !DILocation(line: 0, scope: !6548)
!6688 = !DILocation(line: 1442, column: 4, scope: !6683)
!6689 = !DILocation(line: 1442, column: 19, scope: !6683)
!6690 = !DILocation(line: 1443, column: 10, scope: !6683)
!6691 = !DILocation(line: 0, scope: !6672)
!6692 = !DILocation(line: 1449, column: 14, scope: !6548)
!6693 = !DILocation(line: 1450, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1450, column: 11)
!6695 = !DILocation(line: 1450, column: 16, scope: !6694)
!6696 = !DILocation(line: 1450, column: 19, scope: !6694)
!6697 = !DILocation(line: 1450, column: 11, scope: !6548)
!6698 = !DILocation(line: 1452, column: 33, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1451, column: 2)
!6700 = !DILocation(line: 1452, column: 10, scope: !6699)
!6701 = !DILocation(line: 1453, column: 8, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 1453, column: 8)
!6703 = !DILocation(line: 1453, column: 8, scope: !6699)
!6704 = !DILocation(line: 1457, column: 8, scope: !6694)
!6705 = !DILocation(line: 0, scope: !6694)
!6706 = !DILocation(line: 1459, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1459, column: 11)
!6708 = !DILocation(line: 0, scope: !6549)
!6709 = !DILocation(line: 1390, column: 22, scope: !6633)
!6710 = !DILocation(line: 1463, column: 47, scope: !6523)
!6711 = !DILocation(line: 1464, column: 8, scope: !6523)
!6712 = !DILocation(line: 1463, column: 12, scope: !6523)
!6713 = !DILocation(line: 1466, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1466, column: 7)
!6715 = !DILocation(line: 1466, column: 7, scope: !6523)
!6716 = !DILocation(line: 1470, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1470, column: 7)
!6718 = !DILocation(line: 1470, column: 7, scope: !6523)
!6719 = !DILocation(line: 1472, column: 26, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1471, column: 5)
!6721 = !DILocation(line: 1472, column: 13, scope: !6720)
!6722 = !DILocation(line: 1475, column: 11, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1475, column: 11)
!6724 = !DILocation(line: 1475, column: 39, scope: !6723)
!6725 = !DILocation(line: 1475, column: 42, scope: !6723)
!6726 = !DILocation(line: 1475, column: 11, scope: !6720)
!6727 = !DILocation(line: 1476, column: 2, scope: !6723)
!6728 = !DILocation(line: 1476, column: 23, scope: !6723)
!6729 = !DILocation(line: 1477, column: 11, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1477, column: 11)
!6731 = !DILocation(line: 1477, column: 40, scope: !6730)
!6732 = !DILocation(line: 1477, column: 43, scope: !6730)
!6733 = !DILocation(line: 1477, column: 11, scope: !6720)
!6734 = !DILocation(line: 1478, column: 2, scope: !6730)
!6735 = !DILocation(line: 1478, column: 24, scope: !6730)
!6736 = !DILocation(line: 1479, column: 11, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1479, column: 11)
!6738 = !DILocation(line: 1479, column: 37, scope: !6737)
!6739 = !DILocation(line: 1479, column: 40, scope: !6737)
!6740 = !DILocation(line: 1479, column: 11, scope: !6720)
!6741 = !DILocation(line: 1480, column: 2, scope: !6737)
!6742 = !DILocation(line: 1480, column: 21, scope: !6737)
!6743 = !DILocation(line: 1481, column: 11, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1481, column: 11)
!6745 = !DILocation(line: 1481, column: 41, scope: !6744)
!6746 = !DILocation(line: 1481, column: 38, scope: !6744)
!6747 = !DILocation(line: 1481, column: 11, scope: !6720)
!6748 = !DILocation(line: 1482, column: 26, scope: !6744)
!6749 = !DILocation(line: 1482, column: 2, scope: !6744)
!6750 = !DILocation(line: 1484, column: 8, scope: !6720)
!6751 = !DILocation(line: 1483, column: 7, scope: !6720)
!6752 = !DILocation(line: 1486, column: 7, scope: !6720)
!6753 = !DILocation(line: 1487, column: 32, scope: !6720)
!6754 = !DILocation(line: 0, scope: !6720)
!6755 = !DILocation(line: 1487, column: 7, scope: !6720)
!6756 = !DILocation(line: 1489, column: 37, scope: !6720)
!6757 = !DILocation(line: 1489, column: 7, scope: !6720)
!6758 = !DILocation(line: 1490, column: 5, scope: !6720)
!6759 = !DILocation(line: 1491, column: 19, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1491, column: 12)
!6761 = !DILocation(line: 1491, column: 12, scope: !6717)
!6762 = !DILocation(line: 1492, column: 5, scope: !6760)
!6763 = !DILocation(line: 1494, column: 9, scope: !6523)
!6764 = !DILocation(line: 1495, column: 8, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1495, column: 7)
!6766 = !DILocation(line: 1495, column: 7, scope: !6523)
!6767 = !DILocation(line: 1498, column: 42, scope: !6523)
!6768 = !DILocation(line: 1498, column: 48, scope: !6523)
!6769 = !DILocation(line: 1498, column: 3, scope: !6523)
!6770 = !DILocation(line: 1499, column: 3, scope: !6523)
!6771 = !DILocation(line: 1501, column: 2, scope: !6523)
!6772 = !DILocation(line: 1502, column: 3, scope: !6523)
!6773 = !DILocation(line: 1503, column: 3, scope: !6523)
!6774 = !DILocation(line: 1504, column: 1, scope: !6523)
!6775 = distinct !DISubprogram(name: "noce_try_sign_mask", scope: !3, file: !3, line: 1902, type: !5056, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6776)
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785}
!6777 = !DILocalVariable(name: "if_info", arg: 1, scope: !6775, file: !3, line: 1902, type: !5058)
!6778 = !DILocalVariable(name: "cond", scope: !6775, file: !3, line: 1904, type: !2279)
!6779 = !DILocalVariable(name: "t", scope: !6775, file: !3, line: 1904, type: !2279)
!6780 = !DILocalVariable(name: "m", scope: !6775, file: !3, line: 1904, type: !2279)
!6781 = !DILocalVariable(name: "c", scope: !6775, file: !3, line: 1904, type: !2279)
!6782 = !DILocalVariable(name: "seq", scope: !6775, file: !3, line: 1904, type: !2279)
!6783 = !DILocalVariable(name: "mode", scope: !6775, file: !3, line: 1905, type: !189)
!6784 = !DILocalVariable(name: "code", scope: !6775, file: !3, line: 1906, type: !580)
!6785 = !DILocalVariable(name: "t_unconditional", scope: !6775, file: !3, line: 1907, type: !2239)
!6786 = !DILocation(line: 0, scope: !6775)
!6787 = !DILocation(line: 1909, column: 19, scope: !6775)
!6788 = !DILocation(line: 1910, column: 10, scope: !6775)
!6789 = !DILocation(line: 1911, column: 7, scope: !6775)
!6790 = !DILocation(line: 1912, column: 7, scope: !6775)
!6791 = !DILocation(line: 1915, column: 16, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1915, column: 7)
!6793 = !DILocation(line: 1915, column: 21, scope: !6792)
!6794 = !DILocation(line: 1915, column: 18, scope: !6792)
!6795 = !DILocation(line: 1915, column: 7, scope: !6775)
!6796 = !DILocation(line: 1917, column: 17, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1917, column: 11)
!6798 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1916, column: 5)
!6799 = !DILocation(line: 1917, column: 28, scope: !6797)
!6800 = !DILocation(line: 1917, column: 23, scope: !6797)
!6801 = !DILocation(line: 1918, column: 13, scope: !6797)
!6802 = !DILocation(line: 1918, column: 27, scope: !6797)
!6803 = !DILocation(line: 1918, column: 24, scope: !6797)
!6804 = !DILocation(line: 1918, column: 19, scope: !6797)
!6805 = !DILocation(line: 1919, column: 15, scope: !6797)
!6806 = !DILocation(line: 1919, column: 2, scope: !6797)
!6807 = !DILocation(line: 1921, column: 21, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1921, column: 12)
!6809 = !DILocation(line: 1921, column: 23, scope: !6808)
!6810 = !DILocation(line: 1921, column: 12, scope: !6792)
!6811 = !DILocation(line: 1923, column: 17, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1923, column: 11)
!6813 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1922, column: 5)
!6814 = !DILocation(line: 1923, column: 28, scope: !6812)
!6815 = !DILocation(line: 1923, column: 23, scope: !6812)
!6816 = !DILocation(line: 1924, column: 13, scope: !6812)
!6817 = !DILocation(line: 1924, column: 27, scope: !6812)
!6818 = !DILocation(line: 1924, column: 24, scope: !6812)
!6819 = !DILocation(line: 1924, column: 19, scope: !6812)
!6820 = !DILocation(line: 1925, column: 2, scope: !6812)
!6821 = !DILocation(line: 0, scope: !6792)
!6822 = !DILocation(line: 1928, column: 9, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1928, column: 7)
!6824 = !DILocation(line: 1928, column: 11, scope: !6823)
!6825 = !DILocation(line: 1928, column: 14, scope: !6823)
!6826 = !DILocation(line: 1928, column: 7, scope: !6775)
!6827 = !DILocation(line: 1932, column: 10, scope: !6775)
!6828 = !DILocation(line: 1933, column: 7, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1933, column: 7)
!6830 = !DILocation(line: 1933, column: 20, scope: !6829)
!6831 = !DILocation(line: 1933, column: 7, scope: !6775)
!6832 = !DILocation(line: 1943, column: 20, scope: !6775)
!6833 = !DILocation(line: 1943, column: 8, scope: !6775)
!6834 = !DILocation(line: 1944, column: 6, scope: !6775)
!6835 = !DILocation(line: 1944, column: 19, scope: !6775)
!6836 = !DILocation(line: 1944, column: 26, scope: !6775)
!6837 = !DILocation(line: 1945, column: 3, scope: !6775)
!6838 = !DILocation(line: 1945, column: 6, scope: !6775)
!6839 = !DILocation(line: 1945, column: 51, scope: !6775)
!6840 = !DILocation(line: 1945, column: 39, scope: !6775)
!6841 = !DILocation(line: 1947, column: 2, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1946, column: 7)
!6843 = !DILocation(line: 1947, column: 58, scope: !6842)
!6844 = !DILocation(line: 1947, column: 24, scope: !6842)
!6845 = !DILocation(line: 1947, column: 6, scope: !6842)
!6846 = !DILocation(line: 1948, column: 6, scope: !6842)
!6847 = !DILocation(line: 1946, column: 7, scope: !6775)
!6848 = !DILocation(line: 1951, column: 3, scope: !6775)
!6849 = !DILocation(line: 1955, column: 24, scope: !6775)
!6850 = !DILocation(line: 1955, column: 51, scope: !6775)
!6851 = !DILocation(line: 1955, column: 7, scope: !6775)
!6852 = !DILocation(line: 1956, column: 7, scope: !6775)
!6853 = !DILocation(line: 1956, column: 11, scope: !6775)
!6854 = !DILocation(line: 1959, column: 8, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1959, column: 7)
!6856 = !DILocation(line: 1959, column: 7, scope: !6775)
!6857 = !DILocation(line: 1961, column: 7, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 1960, column: 5)
!6859 = !DILocation(line: 1962, column: 7, scope: !6858)
!6860 = !DILocation(line: 1965, column: 33, scope: !6775)
!6861 = !DILocation(line: 1965, column: 3, scope: !6775)
!6862 = !DILocation(line: 1967, column: 9, scope: !6775)
!6863 = !DILocation(line: 1968, column: 8, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1968, column: 7)
!6865 = !DILocation(line: 1968, column: 7, scope: !6775)
!6866 = !DILocation(line: 1971, column: 42, scope: !6775)
!6867 = !DILocation(line: 1971, column: 48, scope: !6775)
!6868 = !DILocation(line: 1971, column: 3, scope: !6775)
!6869 = !DILocation(line: 1972, column: 3, scope: !6775)
!6870 = !DILocation(line: 1973, column: 1, scope: !6775)
!6871 = distinct !DISubprogram(name: "noce_emit_move_insn", scope: !3, file: !3, line: 719, type: !6872, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6874)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{null, !2279, !2279}
!6874 = !{!6875, !6876, !6877, !6878, !6879, !6880, !6881, !6884, !6885, !6886, !6906, !6911, !6912}
!6875 = !DILocalVariable(name: "x", arg: 1, scope: !6871, file: !3, line: 719, type: !2279)
!6876 = !DILocalVariable(name: "y", arg: 2, scope: !6871, file: !3, line: 719, type: !2279)
!6877 = !DILocalVariable(name: "outmode", scope: !6871, file: !3, line: 721, type: !189)
!6878 = !DILocalVariable(name: "outer", scope: !6871, file: !3, line: 722, type: !2279)
!6879 = !DILocalVariable(name: "inner", scope: !6871, file: !3, line: 722, type: !2279)
!6880 = !DILocalVariable(name: "bitpos", scope: !6871, file: !3, line: 723, type: !2240)
!6881 = !DILocalVariable(name: "seq", scope: !6882, file: !3, line: 727, type: !2279)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 726, column: 5)
!6883 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 725, column: 7)
!6884 = !DILocalVariable(name: "insn", scope: !6882, file: !3, line: 727, type: !2279)
!6885 = !DILocalVariable(name: "target", scope: !6882, file: !3, line: 727, type: !2279)
!6886 = !DILocalVariable(name: "ot", scope: !6882, file: !3, line: 728, type: !6887)
!6887 = !DIDerivedType(tag: DW_TAG_typedef, name: "optab", file: !6888, line: 55, baseType: !6889)
!6888 = !DIFile(filename: "./optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_d", file: !6888, line: 46, size: 3072, elements: !6891)
!6891 = !{!6892, !6893, !6894, !6895, !6899}
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6890, file: !6888, line: 48, baseType: !580, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !6890, file: !6888, line: 49, baseType: !2245, size: 64, offset: 64)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_suffix", scope: !6890, file: !6888, line: 50, baseType: !2243, size: 8, offset: 128)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !6890, file: !6888, line: 51, baseType: !6896, size: 64, offset: 192)
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 64)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{null, !6889, !2245, !2243, !189}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !6890, file: !6888, line: 53, baseType: !6900, size: 2784, offset: 256)
!6900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6901, size: 2784, elements: !6904)
!6901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_handlers", file: !6888, line: 41, size: 32, elements: !6902)
!6902 = !{!6903}
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "insn_code", scope: !6901, file: !6888, line: 43, baseType: !745, size: 32)
!6904 = !{!6905}
!6905 = !DISubrange(count: 87)
!6906 = !DILocalVariable(name: "op", scope: !6907, file: !3, line: 743, type: !2279)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 742, column: 6)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 741, column: 8)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 740, column: 2)
!6910 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 739, column: 11)
!6911 = !DILocalVariable(name: "size", scope: !6907, file: !3, line: 744, type: !2348)
!6912 = !DILocalVariable(name: "start", scope: !6907, file: !3, line: 745, type: !2348)
!6913 = !DILocation(line: 0, scope: !6871)
!6914 = !DILocation(line: 725, column: 7, scope: !6883)
!6915 = !DILocation(line: 725, column: 20, scope: !6883)
!6916 = !DILocation(line: 725, column: 7, scope: !6871)
!6917 = !DILocation(line: 730, column: 7, scope: !6882)
!6918 = !DILocation(line: 733, column: 15, scope: !6882)
!6919 = !DILocation(line: 733, column: 28, scope: !6882)
!6920 = !DILocation(line: 733, column: 31, scope: !6882)
!6921 = !DILocation(line: 733, column: 46, scope: !6882)
!6922 = !DILocation(line: 733, column: 62, scope: !6882)
!6923 = !DILocation(line: 733, column: 14, scope: !6882)
!6924 = !DILocation(line: 734, column: 9, scope: !6882)
!6925 = !DILocation(line: 735, column: 20, scope: !6882)
!6926 = !DILocation(line: 735, column: 9, scope: !6882)
!6927 = !DILocation(line: 0, scope: !6882)
!6928 = !DILocation(line: 736, column: 13, scope: !6882)
!6929 = !DILocation(line: 737, column: 7, scope: !6882)
!6930 = !DILocation(line: 739, column: 11, scope: !6910)
!6931 = !DILocation(line: 739, column: 33, scope: !6910)
!6932 = !DILocation(line: 739, column: 11, scope: !6882)
!6933 = !DILocation(line: 741, column: 8, scope: !6908)
!6934 = !DILocation(line: 741, column: 21, scope: !6908)
!6935 = !DILocation(line: 741, column: 8, scope: !6909)
!6936 = !DILocation(line: 743, column: 17, scope: !6907)
!6937 = !DILocation(line: 0, scope: !6907)
!6938 = !DILocation(line: 744, column: 38, scope: !6907)
!6939 = !DILocation(line: 745, column: 39, scope: !6907)
!6940 = !DILocation(line: 763, column: 8, scope: !6907)
!6941 = !DILocation(line: 764, column: 42, scope: !6907)
!6942 = !DILocation(line: 764, column: 8, scope: !6907)
!6943 = !DILocation(line: 768, column: 12, scope: !6909)
!6944 = !DILocation(line: 768, column: 4, scope: !6909)
!6945 = !DILocation(line: 771, column: 13, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 769, column: 6)
!6947 = !DILocation(line: 772, column: 12, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 772, column: 12)
!6949 = !DILocation(line: 772, column: 12, scope: !6946)
!6950 = !DILocation(line: 774, column: 5, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 773, column: 3)
!6952 = !DILocation(line: 775, column: 27, scope: !6951)
!6953 = !DILocation(line: 775, column: 45, scope: !6951)
!6954 = !DILocation(line: 775, column: 14, scope: !6951)
!6955 = !DILocation(line: 776, column: 16, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 776, column: 9)
!6957 = !DILocation(line: 776, column: 9, scope: !6951)
!6958 = !DILocation(line: 778, column: 20, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 778, column: 13)
!6960 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 777, column: 7)
!6961 = !DILocation(line: 778, column: 13, scope: !6960)
!6962 = !DILocation(line: 779, column: 4, scope: !6959)
!6963 = !DILocation(line: 780, column: 15, scope: !6960)
!6964 = !DILocation(line: 781, column: 7, scope: !6960)
!6965 = !DILocation(line: 782, column: 5, scope: !6951)
!6966 = !DILocation(line: 783, column: 3, scope: !6951)
!6967 = !DILocation(line: 788, column: 13, scope: !6946)
!6968 = !DILocation(line: 789, column: 12, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 789, column: 12)
!6970 = !DILocation(line: 789, column: 12, scope: !6946)
!6971 = !DILocation(line: 791, column: 5, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 790, column: 3)
!6973 = !DILocation(line: 792, column: 28, scope: !6972)
!6974 = !DILocation(line: 793, column: 7, scope: !6972)
!6975 = !DILocation(line: 793, column: 20, scope: !6972)
!6976 = !DILocation(line: 792, column: 14, scope: !6972)
!6977 = !DILocation(line: 795, column: 16, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 795, column: 9)
!6979 = !DILocation(line: 795, column: 9, scope: !6972)
!6980 = !DILocation(line: 797, column: 20, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 797, column: 13)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 796, column: 7)
!6983 = !DILocation(line: 797, column: 13, scope: !6982)
!6984 = !DILocation(line: 798, column: 6, scope: !6981)
!6985 = !DILocation(line: 799, column: 15, scope: !6982)
!6986 = !DILocation(line: 800, column: 7, scope: !6982)
!6987 = !DILocation(line: 801, column: 5, scope: !6972)
!6988 = !DILocation(line: 802, column: 3, scope: !6972)
!6989 = !DILocation(line: 736, column: 11, scope: !6882)
!6990 = !DILocation(line: 810, column: 7, scope: !6882)
!6991 = !DILocation(line: 811, column: 7, scope: !6882)
!6992 = !DILocation(line: 814, column: 11, scope: !6871)
!6993 = !DILocation(line: 815, column: 11, scope: !6871)
!6994 = !DILocation(line: 816, column: 13, scope: !6871)
!6995 = !DILocation(line: 817, column: 12, scope: !6871)
!6996 = !DILocation(line: 817, column: 32, scope: !6871)
!6997 = !DILocation(line: 818, column: 27, scope: !6871)
!6998 = !DILocation(line: 818, column: 55, scope: !6871)
!6999 = !DILocation(line: 818, column: 3, scope: !6871)
!7000 = !DILocation(line: 819, column: 1, scope: !6871)
!7001 = distinct !DISubprogram(name: "end_ifcvt_sequence", scope: !3, file: !3, line: 827, type: !7002, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7004)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{!2279, !5058}
!7004 = !{!7005, !7006, !7007}
!7005 = !DILocalVariable(name: "if_info", arg: 1, scope: !7001, file: !3, line: 827, type: !5058)
!7006 = !DILocalVariable(name: "insn", scope: !7001, file: !3, line: 829, type: !2279)
!7007 = !DILocalVariable(name: "seq", scope: !7001, file: !3, line: 830, type: !2279)
!7008 = !DILocation(line: 0, scope: !7001)
!7009 = !DILocation(line: 830, column: 13, scope: !7001)
!7010 = !DILocation(line: 832, column: 28, scope: !7001)
!7011 = !DILocation(line: 832, column: 3, scope: !7001)
!7012 = !DILocation(line: 833, column: 28, scope: !7001)
!7013 = !DILocation(line: 833, column: 3, scope: !7001)
!7014 = !DILocation(line: 834, column: 3, scope: !7001)
!7015 = !DILocation(line: 835, column: 3, scope: !7001)
!7016 = !DILocation(line: 841, column: 8, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 841, column: 3)
!7018 = !DILocation(line: 0, scope: !7017)
!7019 = !DILocation(line: 841, column: 3, scope: !7017)
!7020 = !DILocation(line: 842, column: 9, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 842, column: 9)
!7022 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 841, column: 3)
!7023 = !DILocation(line: 843, column: 2, scope: !7021)
!7024 = !DILocation(line: 843, column: 5, scope: !7021)
!7025 = !DILocation(line: 843, column: 27, scope: !7021)
!7026 = !DILocation(line: 842, column: 9, scope: !7022)
!7027 = !DILocation(line: 841, column: 33, scope: !7022)
!7028 = !DILocation(line: 841, column: 3, scope: !7022)
!7029 = distinct !{!7029, !7019, !7030}
!7030 = !DILocation(line: 844, column: 14, scope: !7017)
!7031 = !DILocation(line: 847, column: 1, scope: !7001)
!7032 = distinct !DISubprogram(name: "recog_memoized", scope: !7033, file: !7033, line: 150, type: !7034, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7036)
!7033 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!2240, !2279}
!7036 = !{!7037}
!7037 = !DILocalVariable(name: "insn", arg: 1, scope: !7032, file: !7033, line: 150, type: !2279)
!7038 = !DILocation(line: 0, scope: !7032)
!7039 = !DILocation(line: 152, column: 7, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7032, file: !7033, line: 152, column: 7)
!7041 = !DILocation(line: 152, column: 24, scope: !7040)
!7042 = !DILocation(line: 152, column: 7, scope: !7032)
!7043 = !DILocation(line: 153, column: 31, scope: !7040)
!7044 = !DILocation(line: 153, column: 24, scope: !7040)
!7045 = !DILocation(line: 153, column: 22, scope: !7040)
!7046 = !DILocation(line: 153, column: 5, scope: !7040)
!7047 = !DILocation(line: 154, column: 10, scope: !7032)
!7048 = !DILocation(line: 154, column: 3, scope: !7032)
!7049 = distinct !DISubprogram(name: "noce_emit_store_flag", scope: !3, file: !3, line: 650, type: !7050, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7052)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!2279, !5058, !2279, !2240, !2240}
!7052 = !{!7053, !7054, !7055, !7056, !7057, !7058, !7059, !7060, !7063}
!7053 = !DILocalVariable(name: "if_info", arg: 1, scope: !7049, file: !3, line: 650, type: !5058)
!7054 = !DILocalVariable(name: "x", arg: 2, scope: !7049, file: !3, line: 650, type: !2279)
!7055 = !DILocalVariable(name: "reversep", arg: 3, scope: !7049, file: !3, line: 650, type: !2240)
!7056 = !DILocalVariable(name: "normalize", arg: 4, scope: !7049, file: !3, line: 651, type: !2240)
!7057 = !DILocalVariable(name: "cond", scope: !7049, file: !3, line: 653, type: !2279)
!7058 = !DILocalVariable(name: "cond_complex", scope: !7049, file: !3, line: 654, type: !2240)
!7059 = !DILocalVariable(name: "code", scope: !7049, file: !3, line: 655, type: !580)
!7060 = !DILocalVariable(name: "set", scope: !7061, file: !3, line: 665, type: !2279)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 664, column: 5)
!7062 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 663, column: 7)
!7063 = !DILocalVariable(name: "tmp", scope: !7064, file: !3, line: 682, type: !2279)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 681, column: 5)
!7065 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 679, column: 7)
!7066 = !DILocation(line: 0, scope: !7049)
!7067 = !DILocation(line: 653, column: 23, scope: !7049)
!7068 = !DILocation(line: 657, column: 38, scope: !7049)
!7069 = !DILocation(line: 657, column: 21, scope: !7049)
!7070 = !DILocation(line: 658, column: 5, scope: !7049)
!7071 = !DILocation(line: 658, column: 27, scope: !7049)
!7072 = !DILocation(line: 658, column: 10, scope: !7049)
!7073 = !DILocation(line: 658, column: 8, scope: !7049)
!7074 = !DILocation(line: 663, column: 7, scope: !7049)
!7075 = !DILocation(line: 665, column: 34, scope: !7061)
!7076 = !DILocation(line: 665, column: 17, scope: !7061)
!7077 = !DILocation(line: 0, scope: !7061)
!7078 = !DILocation(line: 666, column: 14, scope: !7061)
!7079 = !DILocation(line: 667, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 667, column: 11)
!7081 = !DILocation(line: 667, column: 46, scope: !7080)
!7082 = !DILocation(line: 668, column: 4, scope: !7080)
!7083 = !DILocation(line: 668, column: 7, scope: !7080)
!7084 = !DILocation(line: 668, column: 44, scope: !7080)
!7085 = !DILocation(line: 668, column: 41, scope: !7080)
!7086 = !DILocation(line: 667, column: 11, scope: !7061)
!7087 = !DILocation(line: 669, column: 13, scope: !7080)
!7088 = !DILocation(line: 669, column: 2, scope: !7080)
!7089 = !DILocation(line: 670, column: 20, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 670, column: 11)
!7091 = !DILocation(line: 670, column: 11, scope: !7090)
!7092 = !DILocation(line: 670, column: 11, scope: !7061)
!7093 = !DILocation(line: 671, column: 13, scope: !7090)
!7094 = !DILocation(line: 671, column: 2, scope: !7090)
!7095 = !DILocation(line: 674, column: 7, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 674, column: 7)
!7097 = !DILocation(line: 674, column: 7, scope: !7049)
!7098 = !DILocation(line: 675, column: 53, scope: !7096)
!7099 = !DILocation(line: 675, column: 12, scope: !7096)
!7100 = !DILocation(line: 675, column: 5, scope: !7096)
!7101 = !DILocation(line: 677, column: 12, scope: !7096)
!7102 = !DILocation(line: 0, scope: !7096)
!7103 = !DILocation(line: 679, column: 17, scope: !7065)
!7104 = !DILocation(line: 679, column: 43, scope: !7065)
!7105 = !DILocation(line: 679, column: 31, scope: !7065)
!7106 = !DILocation(line: 679, column: 48, scope: !7065)
!7107 = !DILocation(line: 680, column: 26, scope: !7065)
!7108 = !DILocation(line: 684, column: 13, scope: !7064)
!7109 = !DILocation(line: 0, scope: !7064)
!7110 = !DILocation(line: 686, column: 13, scope: !7064)
!7111 = !DILocation(line: 688, column: 7, scope: !7064)
!7112 = !DILocation(line: 689, column: 13, scope: !7064)
!7113 = !DILocation(line: 691, column: 11, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 691, column: 11)
!7115 = !DILocation(line: 691, column: 32, scope: !7114)
!7116 = !DILocation(line: 691, column: 11, scope: !7064)
!7117 = !DILocation(line: 693, column: 10, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 692, column: 2)
!7119 = !DILocation(line: 694, column: 4, scope: !7118)
!7120 = !DILocation(line: 695, column: 4, scope: !7118)
!7121 = !DILocation(line: 697, column: 38, scope: !7118)
!7122 = !DILocation(line: 697, column: 27, scope: !7118)
!7123 = !DILocation(line: 699, column: 4, scope: !7118)
!7124 = !DILocation(line: 702, column: 7, scope: !7064)
!7125 = !DILocation(line: 703, column: 5, scope: !7065)
!7126 = !DILocation(line: 706, column: 20, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 706, column: 7)
!7128 = !DILocation(line: 706, column: 24, scope: !7127)
!7129 = !DILocation(line: 706, column: 7, scope: !7049)
!7130 = !DILocation(line: 709, column: 36, scope: !7049)
!7131 = !DILocation(line: 710, column: 6, scope: !7049)
!7132 = !DILocation(line: 711, column: 19, scope: !7049)
!7133 = !DILocation(line: 712, column: 22, scope: !7049)
!7134 = !DILocation(line: 709, column: 10, scope: !7049)
!7135 = !DILocation(line: 709, column: 3, scope: !7049)
!7136 = !DILocation(line: 713, column: 1, scope: !7049)
!7137 = distinct !DISubprogram(name: "noce_get_alt_condition", scope: !3, file: !3, line: 1511, type: !7138, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7140)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!2279, !5058, !2279, !3474}
!7140 = !{!7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7151, !7152, !7153, !7154, !7157, !7162, !7165}
!7141 = !DILocalVariable(name: "if_info", arg: 1, scope: !7137, file: !3, line: 1511, type: !5058)
!7142 = !DILocalVariable(name: "target", arg: 2, scope: !7137, file: !3, line: 1511, type: !2279)
!7143 = !DILocalVariable(name: "earliest", arg: 3, scope: !7137, file: !3, line: 1512, type: !3474)
!7144 = !DILocalVariable(name: "cond", scope: !7137, file: !3, line: 1514, type: !2279)
!7145 = !DILocalVariable(name: "set", scope: !7137, file: !3, line: 1514, type: !2279)
!7146 = !DILocalVariable(name: "insn", scope: !7137, file: !3, line: 1514, type: !2279)
!7147 = !DILocalVariable(name: "reverse", scope: !7137, file: !3, line: 1515, type: !2240)
!7148 = !DILocalVariable(name: "code", scope: !7149, file: !3, line: 1548, type: !580)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 1547, column: 5)
!7150 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1546, column: 7)
!7151 = !DILocalVariable(name: "op_a", scope: !7149, file: !3, line: 1549, type: !2279)
!7152 = !DILocalVariable(name: "op_b", scope: !7149, file: !3, line: 1550, type: !2279)
!7153 = !DILocalVariable(name: "prev_insn", scope: !7149, file: !3, line: 1551, type: !2279)
!7154 = !DILocalVariable(name: "src", scope: !7155, file: !3, line: 1561, type: !2279)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 1560, column: 2)
!7156 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1555, column: 11)
!7157 = !DILocalVariable(name: "tmp", scope: !7158, file: !3, line: 1573, type: !2279)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1572, column: 3)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1571, column: 12)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1565, column: 6)
!7161 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1564, column: 8)
!7162 = !DILocalVariable(name: "desired_val", scope: !7163, file: !3, line: 1585, type: !2365)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 1584, column: 2)
!7164 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1583, column: 11)
!7165 = !DILocalVariable(name: "actual_val", scope: !7163, file: !3, line: 1586, type: !2365)
!7166 = !DILocation(line: 0, scope: !7137)
!7167 = !DILocation(line: 1518, column: 41, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1518, column: 7)
!7169 = !DILocation(line: 1518, column: 7, scope: !7168)
!7170 = !DILocation(line: 1518, column: 7, scope: !7137)
!7171 = !DILocation(line: 1520, column: 28, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 1519, column: 5)
!7173 = !DILocation(line: 1520, column: 17, scope: !7172)
!7174 = !DILocation(line: 1521, column: 23, scope: !7172)
!7175 = !DILocation(line: 1521, column: 7, scope: !7172)
!7176 = !DILocation(line: 1524, column: 26, scope: !7137)
!7177 = !DILocation(line: 1524, column: 9, scope: !7137)
!7178 = !DILocation(line: 1525, column: 10, scope: !7137)
!7179 = !DILocation(line: 1527, column: 7, scope: !7137)
!7180 = !DILocation(line: 1527, column: 42, scope: !7137)
!7181 = !DILocation(line: 1528, column: 7, scope: !7137)
!7182 = !DILocation(line: 1528, column: 10, scope: !7137)
!7183 = !DILocation(line: 1528, column: 47, scope: !7137)
!7184 = !DILocation(line: 1528, column: 44, scope: !7137)
!7185 = !DILocation(line: 1529, column: 16, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1529, column: 7)
!7187 = !DILocation(line: 1529, column: 7, scope: !7186)
!7188 = !DILocation(line: 1529, column: 7, scope: !7137)
!7189 = !DILocation(line: 1530, column: 15, scope: !7186)
!7190 = !DILocation(line: 1530, column: 5, scope: !7186)
!7191 = !DILocation(line: 1546, column: 7, scope: !7150)
!7192 = !DILocation(line: 1546, column: 7, scope: !7137)
!7193 = !DILocation(line: 1548, column: 28, scope: !7149)
!7194 = !DILocation(line: 0, scope: !7149)
!7195 = !DILocation(line: 1549, column: 18, scope: !7149)
!7196 = !DILocation(line: 1550, column: 18, scope: !7149)
!7197 = !DILocation(line: 1554, column: 47, scope: !7149)
!7198 = !DILocation(line: 1554, column: 19, scope: !7149)
!7199 = !DILocation(line: 1555, column: 11, scope: !7156)
!7200 = !DILocation(line: 1556, column: 4, scope: !7156)
!7201 = !DILocation(line: 1556, column: 7, scope: !7156)
!7202 = !DILocation(line: 1557, column: 10, scope: !7156)
!7203 = !DILocation(line: 1557, column: 7, scope: !7156)
!7204 = !DILocation(line: 1558, column: 4, scope: !7156)
!7205 = !DILocation(line: 1558, column: 7, scope: !7156)
!7206 = !DILocation(line: 1559, column: 4, scope: !7156)
!7207 = !DILocation(line: 1559, column: 7, scope: !7156)
!7208 = !DILocation(line: 1559, column: 38, scope: !7156)
!7209 = !DILocation(line: 1555, column: 11, scope: !7149)
!7210 = !DILocation(line: 1561, column: 14, scope: !7155)
!7211 = !DILocation(line: 0, scope: !7155)
!7212 = !DILocation(line: 1562, column: 9, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1562, column: 8)
!7214 = !DILocation(line: 1562, column: 8, scope: !7155)
!7215 = !DILocation(line: 1563, column: 12, scope: !7213)
!7216 = !DILocation(line: 1563, column: 6, scope: !7213)
!7217 = !DILocation(line: 1564, column: 8, scope: !7161)
!7218 = !DILocation(line: 1564, column: 8, scope: !7155)
!7219 = !DILocation(line: 1566, column: 31, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1566, column: 12)
!7221 = !DILocation(line: 1566, column: 12, scope: !7220)
!7222 = !DILocation(line: 1566, column: 12, scope: !7160)
!7223 = !DILocation(line: 1568, column: 36, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 1568, column: 17)
!7225 = !DILocation(line: 1568, column: 17, scope: !7224)
!7226 = !DILocation(line: 1568, column: 17, scope: !7220)
!7227 = !DILocation(line: 1571, column: 12, scope: !7159)
!7228 = !DILocation(line: 1571, column: 12, scope: !7160)
!7229 = !DILocation(line: 0, scope: !7158)
!7230 = !DILocation(line: 1576, column: 12, scope: !7158)
!7231 = !DILocation(line: 1577, column: 3, scope: !7158)
!7232 = !DILocation(line: 1583, column: 11, scope: !7164)
!7233 = !DILocation(line: 1583, column: 11, scope: !7149)
!7234 = !DILocation(line: 1585, column: 32, scope: !7163)
!7235 = !DILocation(line: 0, scope: !7163)
!7236 = !DILocation(line: 1586, column: 31, scope: !7163)
!7237 = !DILocation(line: 1588, column: 4, scope: !7163)
!7238 = !DILocation(line: 1591, column: 38, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1591, column: 12)
!7240 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 1589, column: 6)
!7241 = !DILocation(line: 1591, column: 23, scope: !7239)
!7242 = !DILocation(line: 1591, column: 12, scope: !7240)
!7243 = !DILocation(line: 1594, column: 12, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1592, column: 3)
!7245 = !DILocation(line: 1595, column: 3, scope: !7244)
!7246 = !DILocation(line: 1598, column: 38, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1598, column: 12)
!7248 = !DILocation(line: 1598, column: 23, scope: !7247)
!7249 = !DILocation(line: 1598, column: 12, scope: !7240)
!7250 = !DILocation(line: 1601, column: 12, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1599, column: 3)
!7252 = !DILocation(line: 1602, column: 3, scope: !7251)
!7253 = !DILocation(line: 1605, column: 38, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1605, column: 12)
!7255 = !DILocation(line: 1605, column: 23, scope: !7254)
!7256 = !DILocation(line: 1605, column: 12, scope: !7240)
!7257 = !DILocation(line: 1608, column: 12, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 1606, column: 3)
!7259 = !DILocation(line: 1609, column: 3, scope: !7258)
!7260 = !DILocation(line: 1612, column: 38, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1612, column: 12)
!7262 = !DILocation(line: 1612, column: 23, scope: !7261)
!7263 = !DILocation(line: 1612, column: 12, scope: !7240)
!7264 = !DILocation(line: 1615, column: 12, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 1613, column: 3)
!7266 = !DILocation(line: 1616, column: 3, scope: !7265)
!7267 = !DILocation(line: 1576, column: 10, scope: !7158)
!7268 = !DILocation(line: 1575, column: 10, scope: !7158)
!7269 = !DILocation(line: 1626, column: 19, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1626, column: 11)
!7271 = !DILocation(line: 1626, column: 16, scope: !7270)
!7272 = !DILocation(line: 1627, column: 4, scope: !7270)
!7273 = !DILocation(line: 1627, column: 15, scope: !7270)
!7274 = !DILocation(line: 1627, column: 12, scope: !7270)
!7275 = !DILocation(line: 1628, column: 4, scope: !7270)
!7276 = !DILocation(line: 1628, column: 15, scope: !7270)
!7277 = !DILocation(line: 1628, column: 12, scope: !7270)
!7278 = !DILocation(line: 1626, column: 11, scope: !7149)
!7279 = !DILocation(line: 1630, column: 11, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 1629, column: 2)
!7281 = !DILocation(line: 1631, column: 25, scope: !7280)
!7282 = !DILocation(line: 1631, column: 14, scope: !7280)
!7283 = !DILocation(line: 1632, column: 4, scope: !7280)
!7284 = !DILocation(line: 1636, column: 43, scope: !7137)
!7285 = !DILocation(line: 1636, column: 10, scope: !7137)
!7286 = !DILocation(line: 1638, column: 9, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1638, column: 7)
!7288 = !DILocation(line: 1638, column: 14, scope: !7287)
!7289 = !DILocation(line: 1638, column: 19, scope: !7287)
!7290 = !DILocation(line: 1638, column: 7, scope: !7137)
!7291 = !DILocation(line: 0, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 1646, column: 9)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1645, column: 3)
!7294 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1645, column: 3)
!7295 = !DILocation(line: 1645, column: 8, scope: !7294)
!7296 = !DILocation(line: 0, scope: !7294)
!7297 = !DILocation(line: 1645, column: 38, scope: !7293)
!7298 = !DILocation(line: 1645, column: 35, scope: !7293)
!7299 = !DILocation(line: 1645, column: 3, scope: !7294)
!7300 = !DILocation(line: 1646, column: 9, scope: !7292)
!7301 = !DILocation(line: 1646, column: 23, scope: !7292)
!7302 = !DILocation(line: 1646, column: 60, scope: !7292)
!7303 = !DILocation(line: 1646, column: 63, scope: !7292)
!7304 = !DILocation(line: 1646, column: 26, scope: !7292)
!7305 = !DILocation(line: 1646, column: 9, scope: !7293)
!7306 = !DILocation(line: 1645, column: 56, scope: !7293)
!7307 = !DILocation(line: 1645, column: 3, scope: !7293)
!7308 = distinct !{!7308, !7299, !7309}
!7309 = !DILocation(line: 1647, column: 14, scope: !7294)
!7310 = !DILocation(line: 1653, column: 33, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1651, column: 9)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1650, column: 3)
!7313 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1650, column: 3)
!7314 = !DILocation(line: 0, scope: !7311)
!7315 = !DILocation(line: 1650, column: 8, scope: !7313)
!7316 = !DILocation(line: 0, scope: !7313)
!7317 = !DILocation(line: 1650, column: 43, scope: !7312)
!7318 = !DILocation(line: 1650, column: 31, scope: !7312)
!7319 = !DILocation(line: 1650, column: 3, scope: !7313)
!7320 = !DILocation(line: 1651, column: 9, scope: !7311)
!7321 = !DILocation(line: 1652, column: 2, scope: !7311)
!7322 = !DILocation(line: 1652, column: 30, scope: !7311)
!7323 = !DILocation(line: 1652, column: 6, scope: !7311)
!7324 = !DILocation(line: 1653, column: 6, scope: !7311)
!7325 = !DILocation(line: 1653, column: 9, scope: !7311)
!7326 = !DILocation(line: 1651, column: 9, scope: !7312)
!7327 = !DILocation(line: 1650, column: 56, scope: !7312)
!7328 = !DILocation(line: 1650, column: 3, scope: !7312)
!7329 = distinct !{!7329, !7319, !7330}
!7330 = !DILocation(line: 1654, column: 14, scope: !7313)
!7331 = !DILocation(line: 1657, column: 1, scope: !7137)
!7332 = distinct !DISubprogram(name: "noce_emit_cmove", scope: !3, file: !3, line: 1213, type: !7333, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7335)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{!2279, !5058, !2279, !580, !2279, !2279, !2279, !2279}
!7335 = !{!7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343}
!7336 = !DILocalVariable(name: "if_info", arg: 1, scope: !7332, file: !3, line: 1213, type: !5058)
!7337 = !DILocalVariable(name: "x", arg: 2, scope: !7332, file: !3, line: 1213, type: !2279)
!7338 = !DILocalVariable(name: "code", arg: 3, scope: !7332, file: !3, line: 1213, type: !580)
!7339 = !DILocalVariable(name: "cmp_a", arg: 4, scope: !7332, file: !3, line: 1214, type: !2279)
!7340 = !DILocalVariable(name: "cmp_b", arg: 5, scope: !7332, file: !3, line: 1214, type: !2279)
!7341 = !DILocalVariable(name: "vfalse", arg: 6, scope: !7332, file: !3, line: 1214, type: !2279)
!7342 = !DILocalVariable(name: "vtrue", arg: 7, scope: !7332, file: !3, line: 1214, type: !2279)
!7343 = !DILocalVariable(name: "tmp", scope: !7344, file: !3, line: 1223, type: !2279)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1222, column: 5)
!7345 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1221, column: 7)
!7346 = !DILocation(line: 0, scope: !7332)
!7347 = !DILocation(line: 1221, column: 16, scope: !7345)
!7348 = !DILocation(line: 1221, column: 42, scope: !7345)
!7349 = !DILocation(line: 1221, column: 30, scope: !7345)
!7350 = !DILocation(line: 1221, column: 7, scope: !7332)
!7351 = !DILocation(line: 1225, column: 13, scope: !7344)
!7352 = !DILocation(line: 0, scope: !7344)
!7353 = !DILocation(line: 1226, column: 13, scope: !7344)
!7354 = !DILocation(line: 1227, column: 13, scope: !7344)
!7355 = !DILocation(line: 1229, column: 7, scope: !7344)
!7356 = !DILocation(line: 1230, column: 13, scope: !7344)
!7357 = !DILocation(line: 1232, column: 11, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 1232, column: 11)
!7359 = !DILocation(line: 1232, column: 32, scope: !7358)
!7360 = !DILocation(line: 1232, column: 11, scope: !7344)
!7361 = !DILocation(line: 1234, column: 10, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1233, column: 2)
!7363 = !DILocation(line: 1235, column: 4, scope: !7362)
!7364 = !DILocation(line: 1236, column: 4, scope: !7362)
!7365 = !DILocation(line: 1238, column: 4, scope: !7362)
!7366 = !DILocation(line: 1241, column: 7, scope: !7344)
!7367 = !DILocation(line: 1242, column: 5, scope: !7345)
!7368 = !DILocation(line: 1245, column: 33, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1245, column: 7)
!7370 = !DILocation(line: 1245, column: 9, scope: !7369)
!7371 = !DILocation(line: 1246, column: 7, scope: !7369)
!7372 = !DILocation(line: 1246, column: 36, scope: !7369)
!7373 = !DILocation(line: 1246, column: 12, scope: !7369)
!7374 = !DILocation(line: 1245, column: 7, scope: !7332)
!7375 = !DILocation(line: 1251, column: 20, scope: !7332)
!7376 = !DILocation(line: 1252, column: 25, scope: !7332)
!7377 = !DILocation(line: 1253, column: 21, scope: !7332)
!7378 = !DILocation(line: 1250, column: 10, scope: !7332)
!7379 = !DILocation(line: 1250, column: 3, scope: !7332)
!7380 = !DILocation(line: 1261, column: 1, scope: !7332)
!7381 = distinct !DISubprogram(name: "check_cond_move_block", scope: !3, file: !3, line: 2501, type: !7382, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7385)
!7382 = !DISubroutineType(types: !7383)
!7383 = !{!2240, !2247, !3474, !7384, !2279}
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!7385 = !{!7386, !7387, !7388, !7389, !7390, !7391, !7395, !7396}
!7386 = !DILocalVariable(name: "bb", arg: 1, scope: !7381, file: !3, line: 2501, type: !2247)
!7387 = !DILocalVariable(name: "vals", arg: 2, scope: !7381, file: !3, line: 2501, type: !3474)
!7388 = !DILocalVariable(name: "regs", arg: 3, scope: !7381, file: !3, line: 2501, type: !7384)
!7389 = !DILocalVariable(name: "cond", arg: 4, scope: !7381, file: !3, line: 2501, type: !2279)
!7390 = !DILocalVariable(name: "insn", scope: !7381, file: !3, line: 2503, type: !2279)
!7391 = !DILocalVariable(name: "set", scope: !7392, file: !3, line: 2513, type: !2279)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2512, column: 5)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 2511, column: 3)
!7394 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 2511, column: 3)
!7395 = !DILocalVariable(name: "dest", scope: !7392, file: !3, line: 2513, type: !2279)
!7396 = !DILocalVariable(name: "src", scope: !7392, file: !3, line: 2513, type: !2279)
!7397 = !DILocation(line: 0, scope: !7381)
!7398 = !DILocation(line: 2507, column: 10, scope: !7381)
!7399 = !DILocation(line: 2508, column: 7, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 2508, column: 7)
!7401 = !DILocation(line: 2508, column: 21, scope: !7400)
!7402 = !DILocation(line: 2508, column: 25, scope: !7400)
!7403 = !DILocation(line: 2508, column: 7, scope: !7381)
!7404 = !DILocation(line: 2511, column: 3, scope: !7394)
!7405 = !DILocation(line: 0, scope: !7394)
!7406 = !DILocation(line: 2511, column: 3, scope: !7393)
!7407 = !DILocation(line: 2515, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2515, column: 11)
!7409 = !DILocation(line: 2515, column: 35, scope: !7408)
!7410 = !DILocation(line: 2515, column: 38, scope: !7408)
!7411 = !DILocation(line: 2515, column: 11, scope: !7392)
!7412 = !DILocation(line: 2517, column: 13, scope: !7392)
!7413 = !DILocation(line: 0, scope: !7392)
!7414 = !DILocation(line: 2518, column: 12, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2518, column: 11)
!7416 = !DILocation(line: 2518, column: 11, scope: !7392)
!7417 = !DILocation(line: 2521, column: 14, scope: !7392)
!7418 = !DILocation(line: 2522, column: 13, scope: !7392)
!7419 = !DILocation(line: 2523, column: 12, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2523, column: 11)
!7421 = !DILocation(line: 2524, column: 4, scope: !7420)
!7422 = !DILocation(line: 2524, column: 34, scope: !7420)
!7423 = !DILocation(line: 2523, column: 11, scope: !7392)
!7424 = !DILocation(line: 2527, column: 12, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2527, column: 11)
!7426 = !DILocation(line: 2527, column: 29, scope: !7425)
!7427 = !DILocation(line: 2527, column: 33, scope: !7425)
!7428 = !DILocation(line: 2527, column: 11, scope: !7392)
!7429 = !DILocation(line: 2530, column: 11, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2530, column: 11)
!7431 = !DILocation(line: 2530, column: 32, scope: !7430)
!7432 = !DILocation(line: 2530, column: 35, scope: !7430)
!7433 = !DILocation(line: 2530, column: 11, scope: !7392)
!7434 = !DILocation(line: 2533, column: 11, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2533, column: 11)
!7436 = !DILocation(line: 2533, column: 28, scope: !7435)
!7437 = !DILocation(line: 2533, column: 31, scope: !7435)
!7438 = !DILocation(line: 2533, column: 11, scope: !7392)
!7439 = !DILocation(line: 2538, column: 12, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2538, column: 11)
!7441 = !DILocation(line: 2539, column: 5, scope: !7440)
!7442 = !DILocation(line: 2539, column: 13, scope: !7440)
!7443 = !DILocation(line: 2539, column: 8, scope: !7440)
!7444 = !DILocation(line: 2539, column: 26, scope: !7440)
!7445 = !DILocation(line: 2540, column: 4, scope: !7440)
!7446 = !DILocation(line: 2540, column: 8, scope: !7440)
!7447 = !DILocation(line: 2540, column: 23, scope: !7440)
!7448 = !DILocation(line: 2540, column: 33, scope: !7440)
!7449 = !DILocation(line: 2540, column: 36, scope: !7440)
!7450 = !DILocation(line: 2541, column: 8, scope: !7440)
!7451 = !DILocation(line: 2541, column: 16, scope: !7440)
!7452 = !DILocation(line: 2541, column: 11, scope: !7440)
!7453 = !DILocation(line: 2541, column: 42, scope: !7440)
!7454 = !DILocation(line: 2538, column: 11, scope: !7392)
!7455 = !DILocation(line: 2546, column: 16, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2546, column: 11)
!7457 = !DILocation(line: 2546, column: 11, scope: !7456)
!7458 = !DILocation(line: 2546, column: 30, scope: !7456)
!7459 = !DILocation(line: 2546, column: 11, scope: !7392)
!7460 = !DILocation(line: 2551, column: 11, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2551, column: 11)
!7462 = !DILocation(line: 2551, column: 11, scope: !7392)
!7463 = !DILocation(line: 2556, column: 12, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2556, column: 11)
!7465 = !DILocation(line: 2557, column: 4, scope: !7464)
!7466 = !DILocation(line: 2557, column: 38, scope: !7464)
!7467 = !DILocation(line: 2557, column: 7, scope: !7464)
!7468 = !DILocation(line: 2556, column: 11, scope: !7392)
!7469 = !DILocation(line: 2560, column: 12, scope: !7392)
!7470 = !DILocation(line: 2560, column: 7, scope: !7392)
!7471 = !DILocation(line: 2560, column: 26, scope: !7392)
!7472 = !DILocation(line: 2562, column: 7, scope: !7392)
!7473 = !DILocation(line: 2563, column: 5, scope: !7393)
!7474 = distinct !{!7474, !7404, !7475}
!7475 = !DILocation(line: 2563, column: 5, scope: !7394)
!7476 = !DILocation(line: 2566, column: 1, scope: !7381)
!7477 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !2795, file: !2795, line: 32, type: !7478, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7480)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{null, !7384}
!7480 = !{!7481}
!7481 = !DILocalVariable(name: "vec_", arg: 1, scope: !7477, file: !2795, line: 32, type: !7384)
!7482 = !DILocation(line: 0, scope: !7477)
!7483 = !DILocation(line: 32, column: 1, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7477, file: !2795, line: 32, column: 1)
!7485 = !DILocation(line: 32, column: 1, scope: !7477)
!7486 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !2795, file: !2795, line: 31, type: !7487, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{!2240, !7489, !7, !7491}
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 64)
!7490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3480)
!7491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!7492 = !{!7493, !7494, !7495}
!7493 = !DILocalVariable(name: "vec_", arg: 1, scope: !7486, file: !2795, line: 31, type: !7489)
!7494 = !DILocalVariable(name: "ix_", arg: 2, scope: !7486, file: !2795, line: 31, type: !7)
!7495 = !DILocalVariable(name: "ptr", arg: 3, scope: !7486, file: !2795, line: 31, type: !7491)
!7496 = !DILocation(line: 0, scope: !7486)
!7497 = !DILocation(line: 31, column: 1, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7486, file: !2795, line: 31, column: 1)
!7499 = !DILocation(line: 31, column: 1, scope: !7486)
!7500 = !DILocation(line: 31, column: 1, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !2795, line: 31, column: 1)
!7502 = !DILocation(line: 31, column: 1, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7498, file: !2795, line: 31, column: 1)
!7504 = !DILocation(line: 0, scope: !7498)
!7505 = distinct !DISubprogram(name: "cond_move_convert_if_block", scope: !3, file: !3, line: 2576, type: !7506, scopeLine: 2580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7508)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{!2239, !5058, !2247, !2279, !3474, !3474, !2239}
!7508 = !{!7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7523, !7524, !7525, !7526, !7527}
!7509 = !DILocalVariable(name: "if_infop", arg: 1, scope: !7505, file: !3, line: 2576, type: !5058)
!7510 = !DILocalVariable(name: "bb", arg: 2, scope: !7505, file: !3, line: 2577, type: !2247)
!7511 = !DILocalVariable(name: "cond", arg: 3, scope: !7505, file: !3, line: 2577, type: !2279)
!7512 = !DILocalVariable(name: "then_vals", arg: 4, scope: !7505, file: !3, line: 2578, type: !3474)
!7513 = !DILocalVariable(name: "else_vals", arg: 5, scope: !7505, file: !3, line: 2578, type: !3474)
!7514 = !DILocalVariable(name: "else_block_p", arg: 6, scope: !7505, file: !3, line: 2579, type: !2239)
!7515 = !DILocalVariable(name: "code", scope: !7505, file: !3, line: 2581, type: !580)
!7516 = !DILocalVariable(name: "insn", scope: !7505, file: !3, line: 2582, type: !2279)
!7517 = !DILocalVariable(name: "cond_arg0", scope: !7505, file: !3, line: 2582, type: !2279)
!7518 = !DILocalVariable(name: "cond_arg1", scope: !7505, file: !3, line: 2582, type: !2279)
!7519 = !DILocalVariable(name: "set", scope: !7520, file: !3, line: 2590, type: !2279)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 2589, column: 5)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 2588, column: 3)
!7522 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 2588, column: 3)
!7523 = !DILocalVariable(name: "target", scope: !7520, file: !3, line: 2590, type: !2279)
!7524 = !DILocalVariable(name: "dest", scope: !7520, file: !3, line: 2590, type: !2279)
!7525 = !DILocalVariable(name: "t", scope: !7520, file: !3, line: 2590, type: !2279)
!7526 = !DILocalVariable(name: "e", scope: !7520, file: !3, line: 2590, type: !2279)
!7527 = !DILocalVariable(name: "regno", scope: !7520, file: !3, line: 2591, type: !7)
!7528 = !DILocation(line: 0, scope: !7505)
!7529 = !DILocation(line: 2584, column: 10, scope: !7505)
!7530 = !DILocation(line: 2585, column: 15, scope: !7505)
!7531 = !DILocation(line: 2586, column: 15, scope: !7505)
!7532 = !DILocation(line: 2588, column: 3, scope: !7522)
!7533 = !DILocation(line: 0, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2605, column: 11)
!7535 = !DILocation(line: 0, scope: !7522)
!7536 = !DILocation(line: 2588, column: 3, scope: !7521)
!7537 = !DILocation(line: 2594, column: 12, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2594, column: 11)
!7539 = !DILocation(line: 2594, column: 35, scope: !7538)
!7540 = !DILocation(line: 2594, column: 38, scope: !7538)
!7541 = !DILocation(line: 2594, column: 11, scope: !7520)
!7542 = !DILocation(line: 2596, column: 13, scope: !7520)
!7543 = !DILocation(line: 0, scope: !7520)
!7544 = !DILocation(line: 2597, column: 7, scope: !7520)
!7545 = !DILocation(line: 2599, column: 14, scope: !7520)
!7546 = !DILocation(line: 2600, column: 15, scope: !7520)
!7547 = !DILocation(line: 2602, column: 11, scope: !7520)
!7548 = !DILocation(line: 2603, column: 11, scope: !7520)
!7549 = !DILocation(line: 2605, column: 11, scope: !7520)
!7550 = !DILocation(line: 2609, column: 8, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2606, column: 2)
!7552 = !DILocation(line: 2612, column: 4, scope: !7551)
!7553 = !DILocation(line: 2616, column: 4, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2615, column: 2)
!7555 = !DILocation(line: 2617, column: 9, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 2617, column: 8)
!7557 = !DILocation(line: 2617, column: 8, scope: !7554)
!7558 = !DILocation(line: 2603, column: 9, scope: !7520)
!7559 = !DILocation(line: 2621, column: 16, scope: !7520)
!7560 = !DILocation(line: 2623, column: 12, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2623, column: 11)
!7562 = !DILocation(line: 2623, column: 11, scope: !7520)
!7563 = !DILocation(line: 2626, column: 18, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2626, column: 11)
!7565 = !DILocation(line: 2626, column: 11, scope: !7520)
!7566 = !DILocation(line: 2627, column: 2, scope: !7564)
!7567 = distinct !{!7567, !7532, !7568}
!7568 = !DILocation(line: 2628, column: 5, scope: !7522)
!7569 = !DILocation(line: 2631, column: 1, scope: !7505)
!7570 = distinct !DISubprogram(name: "VEC_int_heap_safe_push", scope: !2795, file: !2795, line: 32, type: !7571, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7574)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!7491, !7384, !7573}
!7573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "vec_", arg: 1, scope: !7570, file: !2795, line: 32, type: !7384)
!7576 = !DILocalVariable(name: "obj_", arg: 2, scope: !7570, file: !2795, line: 32, type: !7573)
!7577 = !DILocation(line: 0, scope: !7570)
!7578 = !DILocation(line: 32, column: 1, scope: !7570)
!7579 = distinct !DISubprogram(name: "VEC_int_heap_reserve", scope: !2795, file: !2795, line: 32, type: !7580, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7582)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!2240, !7384, !2240}
!7582 = !{!7583, !7584, !7585}
!7583 = !DILocalVariable(name: "vec_", arg: 1, scope: !7579, file: !2795, line: 32, type: !7384)
!7584 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7579, file: !2795, line: 32, type: !2240)
!7585 = !DILocalVariable(name: "extend", scope: !7579, file: !2795, line: 32, type: !2240)
!7586 = !DILocation(line: 0, scope: !7579)
!7587 = !DILocation(line: 32, column: 1, scope: !7579)
!7588 = !DILocation(line: 32, column: 1, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7579, file: !2795, line: 32, column: 1)
!7590 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !2795, file: !2795, line: 31, type: !7591, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7594)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{!7491, !7593, !2240}
!7593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!7594 = !{!7595, !7596, !7597}
!7595 = !DILocalVariable(name: "vec_", arg: 1, scope: !7590, file: !2795, line: 31, type: !7593)
!7596 = !DILocalVariable(name: "obj_", arg: 2, scope: !7590, file: !2795, line: 31, type: !2240)
!7597 = !DILocalVariable(name: "slot_", scope: !7590, file: !2795, line: 31, type: !7491)
!7598 = !DILocation(line: 0, scope: !7590)
!7599 = !DILocation(line: 31, column: 1, scope: !7590)
!7600 = distinct !DISubprogram(name: "VEC_int_base_space", scope: !2795, file: !2795, line: 31, type: !7601, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!2240, !7593, !2240}
!7603 = !{!7604, !7605}
!7604 = !DILocalVariable(name: "vec_", arg: 1, scope: !7600, file: !2795, line: 31, type: !7593)
!7605 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7600, file: !2795, line: 31, type: !2240)
!7606 = !DILocation(line: 0, scope: !7600)
!7607 = !DILocation(line: 31, column: 1, scope: !7600)
!7608 = distinct !DISubprogram(name: "single_pred_edge", scope: !325, file: !325, line: 653, type: !5001, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7609)
!7609 = !{!7610}
!7610 = !DILocalVariable(name: "bb", arg: 1, scope: !7608, file: !325, line: 653, type: !4975)
!7611 = !DILocation(line: 0, scope: !7608)
!7612 = !DILocation(line: 655, column: 3, scope: !7608)
!7613 = !DILocation(line: 656, column: 10, scope: !7608)
!7614 = !DILocation(line: 656, column: 3, scope: !7608)
!7615 = distinct !DISubprogram(name: "single_pred", scope: !325, file: !325, line: 672, type: !4992, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7616)
!7616 = !{!7617}
!7617 = !DILocalVariable(name: "bb", arg: 1, scope: !7615, file: !325, line: 672, type: !4975)
!7618 = !DILocation(line: 0, scope: !7615)
!7619 = !DILocation(line: 674, column: 10, scope: !7615)
!7620 = !DILocation(line: 674, column: 33, scope: !7615)
!7621 = !DILocation(line: 674, column: 3, scope: !7615)
!7622 = distinct !DISubprogram(name: "block_jumps_and_fallthru_p", scope: !3, file: !3, line: 3105, type: !7623, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!2240, !2247, !2247}
!7625 = !{!7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634}
!7626 = !DILocalVariable(name: "cur_bb", arg: 1, scope: !7622, file: !3, line: 3105, type: !2247)
!7627 = !DILocalVariable(name: "target_bb", arg: 2, scope: !7622, file: !3, line: 3105, type: !2247)
!7628 = !DILocalVariable(name: "cur_edge", scope: !7622, file: !3, line: 3107, type: !2265)
!7629 = !DILocalVariable(name: "fallthru_p", scope: !7622, file: !3, line: 3108, type: !2240)
!7630 = !DILocalVariable(name: "jump_p", scope: !7622, file: !3, line: 3109, type: !2240)
!7631 = !DILocalVariable(name: "insn", scope: !7622, file: !3, line: 3110, type: !2279)
!7632 = !DILocalVariable(name: "end", scope: !7622, file: !3, line: 3111, type: !2279)
!7633 = !DILocalVariable(name: "n_insns", scope: !7622, file: !3, line: 3112, type: !2240)
!7634 = !DILocalVariable(name: "ei", scope: !7622, file: !3, line: 3113, type: !4436)
!7635 = !DILocation(line: 0, scope: !7622)
!7636 = !DILocation(line: 3107, column: 3, scope: !7622)
!7637 = !DILocation(line: 3113, column: 3, scope: !7622)
!7638 = !DILocation(line: 3115, column: 8, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3115, column: 7)
!7640 = !DILocation(line: 3115, column: 19, scope: !7639)
!7641 = !DILocation(line: 3115, column: 15, scope: !7639)
!7642 = !DILocation(line: 3119, column: 7, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3119, column: 7)
!7644 = !DILocation(line: 3119, column: 34, scope: !7643)
!7645 = !DILocation(line: 3119, column: 7, scope: !7622)
!7646 = !DILocation(line: 3122, column: 3, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3122, column: 3)
!7648 = !DILocation(line: 0, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 3122, column: 3)
!7650 = !DILocation(line: 3109, column: 7, scope: !7622)
!7651 = !DILocation(line: 3122, column: 3, scope: !7649)
!7652 = !DILocation(line: 3124, column: 11, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 3124, column: 11)
!7654 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 3123, column: 5)
!7655 = !DILocation(line: 3124, column: 21, scope: !7653)
!7656 = !DILocation(line: 3124, column: 27, scope: !7653)
!7657 = !DILocation(line: 3124, column: 11, scope: !7654)
!7658 = !DILocation(line: 3128, column: 32, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 3128, column: 16)
!7660 = !DILocation(line: 3128, column: 16, scope: !7653)
!7661 = !DILocation(line: 3131, column: 26, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 3131, column: 16)
!7663 = !DILocation(line: 3131, column: 31, scope: !7662)
!7664 = !DILocation(line: 3131, column: 16, scope: !7659)
!7665 = distinct !{!7665, !7646, !7666}
!7666 = !DILocation(line: 3136, column: 5, scope: !7647)
!7667 = !DILocation(line: 3138, column: 15, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3138, column: 7)
!7669 = !DILocation(line: 3138, column: 29, scope: !7668)
!7670 = !DILocation(line: 3138, column: 7, scope: !7622)
!7671 = !DILocation(line: 3145, column: 9, scope: !7622)
!7672 = !DILocation(line: 3146, column: 10, scope: !7622)
!7673 = !DILocation(line: 3148, column: 3, scope: !7622)
!7674 = !DILocation(line: 3112, column: 7, scope: !7622)
!7675 = !DILocation(line: 3148, column: 15, scope: !7622)
!7676 = !DILocation(line: 3150, column: 11, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 3150, column: 11)
!7678 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 3149, column: 5)
!7679 = !DILocation(line: 3150, column: 11, scope: !7678)
!7680 = !DILocation(line: 3153, column: 11, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 3153, column: 11)
!7682 = !DILocation(line: 3154, column: 4, scope: !7681)
!7683 = !DILocation(line: 3154, column: 8, scope: !7681)
!7684 = !DILocation(line: 3155, column: 4, scope: !7681)
!7685 = !DILocation(line: 3155, column: 8, scope: !7681)
!7686 = !DILocation(line: 3156, column: 4, scope: !7681)
!7687 = !DILocation(line: 3156, column: 7, scope: !7681)
!7688 = !DILocation(line: 3156, column: 33, scope: !7681)
!7689 = !DILocation(line: 3157, column: 4, scope: !7681)
!7690 = !DILocation(line: 3157, column: 33, scope: !7681)
!7691 = !DILocation(line: 3153, column: 11, scope: !7678)
!7692 = !DILocation(line: 3160, column: 16, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 3160, column: 11)
!7694 = !DILocation(line: 3160, column: 11, scope: !7678)
!7695 = !DILocation(line: 3163, column: 14, scope: !7678)
!7696 = distinct !{!7696, !7673, !7697}
!7697 = !DILocation(line: 3164, column: 5, scope: !7622)
!7698 = !DILocation(line: 3167, column: 1, scope: !7622)
!7699 = distinct !DISubprogram(name: "ei_start_1", scope: !325, file: !325, line: 696, type: !7700, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7702)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!4436, !4441}
!7702 = !{!7703, !7704}
!7703 = !DILocalVariable(name: "ev", arg: 1, scope: !7699, file: !325, line: 696, type: !4441)
!7704 = !DILocalVariable(name: "i", scope: !7699, file: !325, line: 698, type: !4436)
!7705 = !DILocation(line: 0, scope: !7699)
!7706 = !DILocation(line: 700, column: 5, scope: !7699)
!7707 = !DILocation(line: 700, column: 11, scope: !7699)
!7708 = !DILocation(line: 701, column: 5, scope: !7699)
!7709 = !DILocation(line: 701, column: 15, scope: !7699)
!7710 = !DILocation(line: 703, column: 3, scope: !7699)
!7711 = distinct !DISubprogram(name: "ei_cond", scope: !325, file: !325, line: 771, type: !7712, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7715)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!2239, !4436, !7714}
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!7715 = !{!7716, !7717}
!7716 = !DILocalVariable(name: "ei", arg: 1, scope: !7711, file: !325, line: 771, type: !4436)
!7717 = !DILocalVariable(name: "p", arg: 2, scope: !7711, file: !325, line: 771, type: !7714)
!7718 = !DILocation(line: 0, scope: !7711)
!7719 = !DILocation(line: 773, column: 8, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7711, file: !325, line: 773, column: 7)
!7721 = !DILocation(line: 773, column: 7, scope: !7711)
!7722 = !DILocation(line: 775, column: 12, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !325, line: 774, column: 5)
!7724 = !DILocation(line: 776, column: 7, scope: !7723)
!7725 = !DILocation(line: 781, column: 7, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !325, line: 779, column: 5)
!7727 = !DILocation(line: 0, scope: !7720)
!7728 = !DILocation(line: 783, column: 1, scope: !7711)
!7729 = distinct !DISubprogram(name: "ei_next", scope: !325, file: !325, line: 736, type: !7730, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7733)
!7730 = !DISubroutineType(types: !7731)
!7731 = !{null, !7732}
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!7733 = !{!7734}
!7734 = !DILocalVariable(name: "i", arg: 1, scope: !7729, file: !325, line: 736, type: !7732)
!7735 = !DILocation(line: 0, scope: !7729)
!7736 = !DILocation(line: 738, column: 3, scope: !7729)
!7737 = !DILocation(line: 739, column: 11, scope: !7729)
!7738 = !DILocation(line: 740, column: 1, scope: !7729)
!7739 = distinct !DISubprogram(name: "cond_exec_process_if_block", scope: !3, file: !3, line: 371, type: !7740, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7743)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!2240, !7742, !2240}
!7742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!7743 = !{!7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7765, !7766, !7768, !7769, !7770, !7771, !7772}
!7744 = !DILocalVariable(name: "ce_info", arg: 1, scope: !7739, file: !3, line: 371, type: !7742)
!7745 = !DILocalVariable(name: "do_multiple_p", arg: 2, scope: !7739, file: !3, line: 372, type: !2240)
!7746 = !DILocalVariable(name: "test_bb", scope: !7739, file: !3, line: 374, type: !2247)
!7747 = !DILocalVariable(name: "then_bb", scope: !7739, file: !3, line: 375, type: !2247)
!7748 = !DILocalVariable(name: "else_bb", scope: !7739, file: !3, line: 376, type: !2247)
!7749 = !DILocalVariable(name: "test_expr", scope: !7739, file: !3, line: 377, type: !2279)
!7750 = !DILocalVariable(name: "then_start", scope: !7739, file: !3, line: 378, type: !2279)
!7751 = !DILocalVariable(name: "then_end", scope: !7739, file: !3, line: 379, type: !2279)
!7752 = !DILocalVariable(name: "else_start", scope: !7739, file: !3, line: 380, type: !2279)
!7753 = !DILocalVariable(name: "else_end", scope: !7739, file: !3, line: 381, type: !2279)
!7754 = !DILocalVariable(name: "max", scope: !7739, file: !3, line: 382, type: !2240)
!7755 = !DILocalVariable(name: "then_mod_ok", scope: !7739, file: !3, line: 383, type: !2240)
!7756 = !DILocalVariable(name: "true_expr", scope: !7739, file: !3, line: 384, type: !2279)
!7757 = !DILocalVariable(name: "false_expr", scope: !7739, file: !3, line: 385, type: !2279)
!7758 = !DILocalVariable(name: "true_prob_val", scope: !7739, file: !3, line: 386, type: !2279)
!7759 = !DILocalVariable(name: "false_prob_val", scope: !7739, file: !3, line: 387, type: !2279)
!7760 = !DILocalVariable(name: "n_insns", scope: !7739, file: !3, line: 388, type: !2240)
!7761 = !DILocalVariable(name: "false_code", scope: !7739, file: !3, line: 389, type: !580)
!7762 = !DILocalVariable(name: "bb", scope: !7763, file: !3, line: 470, type: !2247)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 469, column: 5)
!7764 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 468, column: 7)
!7765 = !DILocalVariable(name: "last_test_bb", scope: !7763, file: !3, line: 471, type: !2247)
!7766 = !DILocalVariable(name: "start", scope: !7767, file: !3, line: 478, type: !2279)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 477, column: 2)
!7768 = !DILocalVariable(name: "end", scope: !7767, file: !3, line: 478, type: !2279)
!7769 = !DILocalVariable(name: "t", scope: !7767, file: !3, line: 479, type: !2279)
!7770 = !DILocalVariable(name: "f", scope: !7767, file: !3, line: 479, type: !2279)
!7771 = !DILocalVariable(name: "f_code", scope: !7767, file: !3, line: 480, type: !580)
!7772 = !DILabel(scope: !7739, name: "fail", file: !3, line: 578)
!7773 = !DILocation(line: 0, scope: !7739)
!7774 = !DILocation(line: 374, column: 34, scope: !7739)
!7775 = !DILocation(line: 375, column: 34, scope: !7739)
!7776 = !DILocation(line: 376, column: 34, scope: !7739)
!7777 = !DILocation(line: 394, column: 8, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 394, column: 7)
!7779 = !DILocation(line: 394, column: 22, scope: !7778)
!7780 = !DILocation(line: 394, column: 34, scope: !7778)
!7781 = !DILocation(line: 394, column: 25, scope: !7778)
!7782 = !DILocation(line: 394, column: 7, scope: !7739)
!7783 = !DILocation(line: 396, column: 11, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 396, column: 11)
!7785 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 395, column: 5)
!7786 = !DILocation(line: 396, column: 19, scope: !7784)
!7787 = !DILocation(line: 396, column: 33, scope: !7784)
!7788 = !DILocation(line: 396, column: 24, scope: !7784)
!7789 = !DILocation(line: 396, column: 11, scope: !7785)
!7790 = !DILocation(line: 399, column: 45, scope: !7785)
!7791 = !DILocation(line: 399, column: 24, scope: !7785)
!7792 = !DILocation(line: 400, column: 41, scope: !7785)
!7793 = !DILocation(line: 401, column: 16, scope: !7785)
!7794 = !DILocation(line: 401, column: 35, scope: !7785)
!7795 = !DILocation(line: 402, column: 16, scope: !7785)
!7796 = !DILocation(line: 402, column: 33, scope: !7785)
!7797 = !DILocation(line: 403, column: 5, scope: !7785)
!7798 = !DILocation(line: 407, column: 40, scope: !7739)
!7799 = !DILocation(line: 407, column: 15, scope: !7739)
!7800 = !DILocation(line: 408, column: 9, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 408, column: 7)
!7802 = !DILocation(line: 408, column: 7, scope: !7739)
!7803 = !DILocation(line: 413, column: 21, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 413, column: 7)
!7805 = !DILocation(line: 413, column: 9, scope: !7804)
!7806 = !DILocation(line: 413, column: 7, scope: !7739)
!7807 = !DILocation(line: 419, column: 16, scope: !7739)
!7808 = !DILocation(line: 420, column: 14, scope: !7739)
!7809 = !DILocation(line: 421, column: 39, scope: !7739)
!7810 = !DILocation(line: 421, column: 22, scope: !7739)
!7811 = !DILocation(line: 421, column: 37, scope: !7739)
!7812 = !DILocation(line: 422, column: 9, scope: !7739)
!7813 = !DILocation(line: 424, column: 7, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 424, column: 7)
!7815 = !DILocation(line: 424, column: 7, scope: !7739)
!7816 = !DILocation(line: 426, column: 11, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 425, column: 5)
!7818 = !DILocation(line: 427, column: 20, scope: !7817)
!7819 = !DILocation(line: 428, column: 18, scope: !7817)
!7820 = !DILocation(line: 429, column: 44, scope: !7817)
!7821 = !DILocation(line: 429, column: 27, scope: !7817)
!7822 = !DILocation(line: 429, column: 42, scope: !7817)
!7823 = !DILocation(line: 429, column: 15, scope: !7817)
!7824 = !DILocation(line: 430, column: 5, scope: !7817)
!7825 = !DILocation(line: 432, column: 15, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 432, column: 7)
!7827 = !DILocation(line: 432, column: 7, scope: !7739)
!7828 = !DILocation(line: 440, column: 53, scope: !7739)
!7829 = !DILocation(line: 440, column: 16, scope: !7739)
!7830 = !DILocation(line: 441, column: 18, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 441, column: 7)
!7832 = !DILocation(line: 441, column: 7, scope: !7739)
!7833 = !DILocation(line: 442, column: 18, scope: !7831)
!7834 = !DILocation(line: 442, column: 5, scope: !7831)
!7835 = !DILocation(line: 0, scope: !7831)
!7836 = !DILocation(line: 457, column: 34, scope: !7739)
!7837 = !DILocation(line: 457, column: 19, scope: !7739)
!7838 = !DILocation(line: 458, column: 7, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 458, column: 7)
!7840 = !DILocation(line: 458, column: 7, scope: !7739)
!7841 = !DILocation(line: 460, column: 23, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 459, column: 5)
!7843 = !DILocation(line: 461, column: 24, scope: !7842)
!7844 = !DILocation(line: 462, column: 5, scope: !7842)
!7845 = !DILocation(line: 0, scope: !7839)
!7846 = !DILocation(line: 468, column: 16, scope: !7764)
!7847 = !DILocation(line: 468, column: 41, scope: !7764)
!7848 = !DILocation(line: 468, column: 7, scope: !7739)
!7849 = !DILocation(line: 0, scope: !7763)
!7850 = !DILocation(line: 471, column: 43, scope: !7763)
!7851 = !DILocation(line: 473, column: 13, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 473, column: 11)
!7853 = !DILocation(line: 473, column: 11, scope: !7763)
!7854 = !DILocation(line: 0, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 505, column: 8)
!7856 = !DILocation(line: 476, column: 7, scope: !7763)
!7857 = !DILocation(line: 438, column: 13, scope: !7739)
!7858 = !DILocation(line: 442, column: 16, scope: !7831)
!7859 = !DILocation(line: 482, column: 9, scope: !7767)
!7860 = !DILocation(line: 483, column: 12, scope: !7767)
!7861 = !DILocation(line: 0, scope: !7767)
!7862 = !DILocation(line: 484, column: 10, scope: !7767)
!7863 = !DILocation(line: 485, column: 8, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 485, column: 8)
!7865 = !DILocation(line: 486, column: 8, scope: !7864)
!7866 = !DILocation(line: 486, column: 13, scope: !7864)
!7867 = !DILocation(line: 485, column: 8, scope: !7767)
!7868 = !DILocation(line: 492, column: 22, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 492, column: 8)
!7870 = !DILocation(line: 492, column: 10, scope: !7869)
!7871 = !DILocation(line: 492, column: 8, scope: !7767)
!7872 = !DILocation(line: 496, column: 33, scope: !7767)
!7873 = !DILocation(line: 496, column: 8, scope: !7767)
!7874 = !DILocation(line: 497, column: 10, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 497, column: 8)
!7876 = !DILocation(line: 497, column: 8, scope: !7767)
!7877 = !DILocation(line: 500, column: 42, scope: !7767)
!7878 = !DILocation(line: 500, column: 13, scope: !7767)
!7879 = !DILocation(line: 501, column: 15, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 501, column: 8)
!7881 = !DILocation(line: 501, column: 8, scope: !7767)
!7882 = !DILocation(line: 504, column: 8, scope: !7767)
!7883 = !DILocation(line: 505, column: 17, scope: !7855)
!7884 = !DILocation(line: 505, column: 8, scope: !7855)
!7885 = !DILocation(line: 505, column: 8, scope: !7767)
!7886 = !DILocation(line: 507, column: 12, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 506, column: 6)
!7888 = !DILocation(line: 508, column: 12, scope: !7887)
!7889 = !DILocation(line: 509, column: 6, scope: !7887)
!7890 = !DILocation(line: 512, column: 12, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 511, column: 6)
!7892 = !DILocation(line: 513, column: 12, scope: !7891)
!7893 = !DILocation(line: 530, column: 17, scope: !7763)
!7894 = !DILocation(line: 529, column: 2, scope: !7767)
!7895 = distinct !{!7895, !7856, !7896}
!7896 = !DILocation(line: 530, column: 32, scope: !7763)
!7897 = !DILocation(line: 535, column: 26, scope: !7739)
!7898 = !DILocation(line: 540, column: 7, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 540, column: 7)
!7900 = !DILocation(line: 541, column: 7, scope: !7899)
!7901 = !DILocation(line: 541, column: 13, scope: !7899)
!7902 = !DILocation(line: 542, column: 4, scope: !7899)
!7903 = !DILocation(line: 542, column: 9, scope: !7899)
!7904 = !DILocation(line: 540, column: 7, scope: !7739)
!7905 = !DILocation(line: 547, column: 7, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 547, column: 7)
!7907 = !DILocation(line: 547, column: 18, scope: !7906)
!7908 = !DILocation(line: 547, column: 15, scope: !7906)
!7909 = !DILocation(line: 548, column: 12, scope: !7906)
!7910 = !DILocation(line: 547, column: 7, scope: !7739)
!7911 = !DILocation(line: 554, column: 9, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 554, column: 7)
!7913 = !DILocation(line: 554, column: 7, scope: !7739)
!7914 = !DILocation(line: 569, column: 7, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 569, column: 7)
!7916 = !DILocation(line: 569, column: 7, scope: !7739)
!7917 = !DILocation(line: 571, column: 25, scope: !7915)
!7918 = !DILocation(line: 571, column: 16, scope: !7915)
!7919 = !DILocation(line: 570, column: 5, scope: !7915)
!7920 = !DILocation(line: 574, column: 3, scope: !7739)
!7921 = !DILocation(line: 575, column: 23, scope: !7739)
!7922 = !DILocation(line: 576, column: 3, scope: !7739)
!7923 = !DILocation(line: 578, column: 2, scope: !7739)
!7924 = !DILocation(line: 584, column: 3, scope: !7739)
!7925 = !DILocation(line: 585, column: 3, scope: !7739)
!7926 = !DILocation(line: 586, column: 1, scope: !7739)
!7927 = distinct !DISubprogram(name: "ei_end_p", scope: !325, file: !325, line: 721, type: !7928, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!2239, !4436}
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "i", arg: 1, scope: !7927, file: !325, line: 721, type: !4436)
!7932 = !DILocation(line: 723, column: 22, scope: !7927)
!7933 = !DILocation(line: 723, column: 19, scope: !7927)
!7934 = !DILocation(line: 723, column: 10, scope: !7927)
!7935 = !DILocation(line: 723, column: 3, scope: !7927)
!7936 = distinct !DISubprogram(name: "ei_edge", scope: !325, file: !325, line: 752, type: !7937, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7939)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!2265, !4436}
!7939 = !{!7940}
!7940 = !DILocalVariable(name: "i", arg: 1, scope: !7936, file: !325, line: 752, type: !4436)
!7941 = !DILocation(line: 754, column: 10, scope: !7936)
!7942 = !DILocation(line: 754, column: 3, scope: !7936)
!7943 = distinct !DISubprogram(name: "ei_container", scope: !325, file: !325, line: 685, type: !7944, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7946)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!2253, !4436}
!7946 = !{!7947}
!7947 = !DILocalVariable(name: "i", arg: 1, scope: !7943, file: !325, line: 685, type: !4436)
!7948 = !DILocation(line: 687, column: 3, scope: !7943)
!7949 = !DILocation(line: 688, column: 10, scope: !7943)
!7950 = !DILocation(line: 688, column: 3, scope: !7943)
!7951 = distinct !DISubprogram(name: "cond_exec_get_condition", scope: !3, file: !3, line: 340, type: !7952, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!2279, !2279}
!7954 = !{!7955, !7956, !7957, !7958}
!7955 = !DILocalVariable(name: "jump", arg: 1, scope: !7951, file: !3, line: 340, type: !2279)
!7956 = !DILocalVariable(name: "test_if", scope: !7951, file: !3, line: 342, type: !2279)
!7957 = !DILocalVariable(name: "cond", scope: !7951, file: !3, line: 342, type: !2279)
!7958 = !DILocalVariable(name: "rev", scope: !7959, file: !3, line: 355, type: !580)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 354, column: 5)
!7960 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 352, column: 7)
!7961 = !DILocation(line: 0, scope: !7951)
!7962 = !DILocation(line: 344, column: 7, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 344, column: 7)
!7964 = !DILocation(line: 344, column: 7, scope: !7951)
!7965 = !DILocation(line: 345, column: 15, scope: !7963)
!7966 = !DILocation(line: 348, column: 10, scope: !7951)
!7967 = !DILocation(line: 352, column: 7, scope: !7960)
!7968 = !DILocation(line: 352, column: 36, scope: !7960)
!7969 = !DILocation(line: 353, column: 7, scope: !7960)
!7970 = !DILocation(line: 353, column: 10, scope: !7960)
!7971 = !DILocation(line: 353, column: 41, scope: !7960)
!7972 = !DILocation(line: 353, column: 38, scope: !7960)
!7973 = !DILocation(line: 352, column: 7, scope: !7951)
!7974 = !DILocation(line: 355, column: 27, scope: !7959)
!7975 = !DILocation(line: 0, scope: !7959)
!7976 = !DILocation(line: 356, column: 15, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 356, column: 11)
!7978 = !DILocation(line: 356, column: 11, scope: !7959)
!7979 = !DILocation(line: 359, column: 14, scope: !7959)
!7980 = !DILocation(line: 361, column: 5, scope: !7960)
!7981 = !DILocation(line: 348, column: 8, scope: !7951)
!7982 = !DILocation(line: 363, column: 3, scope: !7951)
!7983 = !DILocation(line: 364, column: 1, scope: !7951)
!7984 = distinct !DISubprogram(name: "count_bb_insns", scope: !3, file: !3, line: 113, type: !7985, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7987)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!2240, !4975}
!7987 = !{!7988, !7989, !7990}
!7988 = !DILocalVariable(name: "bb", arg: 1, scope: !7984, file: !3, line: 113, type: !4975)
!7989 = !DILocalVariable(name: "count", scope: !7984, file: !3, line: 115, type: !2240)
!7990 = !DILocalVariable(name: "insn", scope: !7984, file: !3, line: 116, type: !2279)
!7991 = !DILocation(line: 0, scope: !7984)
!7992 = !DILocation(line: 116, column: 14, scope: !7984)
!7993 = !DILocation(line: 0, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 123, column: 11)
!7995 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 119, column: 5)
!7996 = !DILocation(line: 118, column: 3, scope: !7984)
!7997 = !DILocation(line: 120, column: 11, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 120, column: 11)
!7999 = !DILocation(line: 120, column: 25, scope: !7998)
!8000 = !DILocation(line: 120, column: 28, scope: !7998)
!8001 = !DILocation(line: 120, column: 11, scope: !7995)
!8002 = !DILocation(line: 121, column: 7, scope: !7998)
!8003 = !DILocation(line: 121, column: 2, scope: !7998)
!8004 = !DILocation(line: 123, column: 16, scope: !7994)
!8005 = !DILocation(line: 123, column: 11, scope: !7995)
!8006 = !DILocation(line: 125, column: 14, scope: !7995)
!8007 = distinct !{!8007, !7996, !8008}
!8008 = !DILocation(line: 126, column: 5, scope: !7984)
!8009 = !DILocation(line: 128, column: 3, scope: !7984)
!8010 = distinct !DISubprogram(name: "block_fallthru", scope: !3, file: !3, line: 236, type: !8011, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8013)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{!2247, !2247}
!8013 = !{!8014, !8015, !8016}
!8014 = !DILocalVariable(name: "bb", arg: 1, scope: !8010, file: !3, line: 236, type: !2247)
!8015 = !DILocalVariable(name: "e", scope: !8010, file: !3, line: 238, type: !2265)
!8016 = !DILocalVariable(name: "ei", scope: !8010, file: !3, line: 239, type: !4436)
!8017 = !DILocation(line: 0, scope: !8010)
!8018 = !DILocation(line: 238, column: 3, scope: !8010)
!8019 = !DILocation(line: 239, column: 3, scope: !8010)
!8020 = !DILocation(line: 241, column: 3, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 241, column: 3)
!8022 = !DILocation(line: 0, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 241, column: 3)
!8024 = !DILocation(line: 241, column: 3, scope: !8023)
!8025 = !DILocation(line: 245, column: 11, scope: !8010)
!8026 = !DILocation(line: 242, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 242, column: 9)
!8028 = !DILocation(line: 242, column: 12, scope: !8027)
!8029 = !DILocation(line: 242, column: 18, scope: !8027)
!8030 = !DILocation(line: 242, column: 9, scope: !8023)
!8031 = distinct !{!8031, !8020, !8032}
!8032 = !DILocation(line: 243, column: 7, scope: !8021)
!8033 = !DILocation(line: 245, column: 10, scope: !8010)
!8034 = !DILocation(line: 245, column: 19, scope: !8010)
!8035 = !DILocation(line: 246, column: 1, scope: !8010)
!8036 = !DILocation(line: 245, column: 3, scope: !8010)
!8037 = distinct !DISubprogram(name: "cond_exec_process_insns", scope: !3, file: !3, line: 253, type: !8038, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8040)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!2240, !7742, !2279, !2279, !2279, !2279, !2240}
!8040 = !{!8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8051}
!8041 = !DILocalVariable(name: "ce_info", arg: 1, scope: !8037, file: !3, line: 253, type: !7742)
!8042 = !DILocalVariable(name: "start", arg: 2, scope: !8037, file: !3, line: 254, type: !2279)
!8043 = !DILocalVariable(name: "end", arg: 3, scope: !8037, file: !3, line: 255, type: !2279)
!8044 = !DILocalVariable(name: "test", arg: 4, scope: !8037, file: !3, line: 256, type: !2279)
!8045 = !DILocalVariable(name: "prob_val", arg: 5, scope: !8037, file: !3, line: 257, type: !2279)
!8046 = !DILocalVariable(name: "mod_ok", arg: 6, scope: !8037, file: !3, line: 258, type: !2240)
!8047 = !DILocalVariable(name: "must_be_last", scope: !8037, file: !3, line: 260, type: !2240)
!8048 = !DILocalVariable(name: "insn", scope: !8037, file: !3, line: 261, type: !2279)
!8049 = !DILocalVariable(name: "xtest", scope: !8037, file: !3, line: 262, type: !2279)
!8050 = !DILocalVariable(name: "pattern", scope: !8037, file: !3, line: 263, type: !2279)
!8051 = !DILabel(scope: !8052, name: "insn_done", file: !3, line: 329)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 269, column: 5)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 268, column: 3)
!8054 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 268, column: 3)
!8055 = !DILocation(line: 0, scope: !8037)
!8056 = !DILocation(line: 265, column: 8, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 265, column: 7)
!8058 = !DILocation(line: 265, column: 18, scope: !8057)
!8059 = !DILocation(line: 265, column: 14, scope: !8057)
!8060 = !DILocation(line: 0, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 290, column: 8)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 289, column: 2)
!8063 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 288, column: 11)
!8064 = !DILocation(line: 0, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 324, column: 11)
!8066 = !DILocation(line: 268, column: 3, scope: !8054)
!8067 = !DILocation(line: 0, scope: !8054)
!8068 = !DILocation(line: 270, column: 11, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 270, column: 11)
!8070 = !DILocation(line: 270, column: 25, scope: !8069)
!8071 = !DILocation(line: 270, column: 28, scope: !8069)
!8072 = !DILocation(line: 270, column: 11, scope: !8052)
!8073 = !DILocation(line: 273, column: 7, scope: !8052)
!8074 = !DILocation(line: 276, column: 11, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 276, column: 11)
!8076 = !DILocation(line: 276, column: 28, scope: !8075)
!8077 = !DILocation(line: 276, column: 31, scope: !8075)
!8078 = !DILocation(line: 276, column: 57, scope: !8075)
!8079 = !DILocation(line: 276, column: 11, scope: !8052)
!8080 = !DILocation(line: 280, column: 4, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 277, column: 2)
!8082 = !DILocation(line: 281, column: 4, scope: !8081)
!8083 = !DILocation(line: 285, column: 11, scope: !8052)
!8084 = !DILocation(line: 288, column: 11, scope: !8063)
!8085 = !DILocation(line: 288, column: 11, scope: !8052)
!8086 = !DILocation(line: 290, column: 8, scope: !8062)
!8087 = !DILocation(line: 296, column: 17, scope: !8052)
!8088 = !DILocation(line: 297, column: 15, scope: !8052)
!8089 = !DILocation(line: 301, column: 11, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 301, column: 11)
!8091 = !DILocation(line: 301, column: 30, scope: !8090)
!8092 = !DILocation(line: 301, column: 11, scope: !8052)
!8093 = !DILocation(line: 303, column: 8, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 303, column: 8)
!8095 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 302, column: 2)
!8096 = !DILocation(line: 303, column: 28, scope: !8094)
!8097 = !DILocation(line: 303, column: 25, scope: !8094)
!8098 = !DILocation(line: 303, column: 8, scope: !8095)
!8099 = !DILocation(line: 306, column: 12, scope: !8095)
!8100 = !DILocation(line: 308, column: 14, scope: !8095)
!8101 = !DILocation(line: 309, column: 2, scope: !8095)
!8102 = !DILocation(line: 0, scope: !8052)
!8103 = !DILocation(line: 311, column: 17, scope: !8052)
!8104 = !DILocation(line: 322, column: 7, scope: !8052)
!8105 = !DILocation(line: 324, column: 11, scope: !8065)
!8106 = !DILocation(line: 324, column: 25, scope: !8065)
!8107 = !DILocation(line: 325, column: 26, scope: !8065)
!8108 = !DILocation(line: 327, column: 8, scope: !8065)
!8109 = !DILocation(line: 326, column: 5, scope: !8065)
!8110 = !DILocation(line: 325, column: 2, scope: !8065)
!8111 = !DILocation(line: 329, column: 5, scope: !8052)
!8112 = !DILocation(line: 330, column: 16, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 330, column: 11)
!8114 = !DILocation(line: 330, column: 11, scope: !8052)
!8115 = !DILocation(line: 268, column: 31, scope: !8053)
!8116 = !DILocation(line: 268, column: 3, scope: !8053)
!8117 = distinct !{!8117, !8066, !8118}
!8118 = !DILocation(line: 332, column: 5, scope: !8054)
!8119 = !DILocation(line: 335, column: 1, scope: !8037)
!8120 = !DILocation(line: 260, column: 7, scope: !8037)
!8121 = !DILocation(line: 285, column: 11, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 285, column: 11)
!8123 = distinct !DISubprogram(name: "merge_if_block", scope: !3, file: !3, line: 2902, type: !8124, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8126)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{null, !4426}
!8126 = !{!8127, !8128, !8129, !8130, !8131, !8132, !8133, !8136, !8137, !8138}
!8127 = !DILocalVariable(name: "ce_info", arg: 1, scope: !8123, file: !3, line: 2902, type: !4426)
!8128 = !DILocalVariable(name: "test_bb", scope: !8123, file: !3, line: 2904, type: !2247)
!8129 = !DILocalVariable(name: "then_bb", scope: !8123, file: !3, line: 2905, type: !2247)
!8130 = !DILocalVariable(name: "else_bb", scope: !8123, file: !3, line: 2906, type: !2247)
!8131 = !DILocalVariable(name: "join_bb", scope: !8123, file: !3, line: 2907, type: !2247)
!8132 = !DILocalVariable(name: "combo_bb", scope: !8123, file: !3, line: 2908, type: !2247)
!8133 = !DILocalVariable(name: "bb", scope: !8134, file: !3, line: 2919, type: !2247)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 2918, column: 5)
!8135 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2917, column: 7)
!8136 = !DILocalVariable(name: "last_test_bb", scope: !8134, file: !3, line: 2920, type: !2247)
!8137 = !DILocalVariable(name: "fallthru", scope: !8134, file: !3, line: 2921, type: !2247)
!8138 = !DILocalVariable(name: "last", scope: !8139, file: !3, line: 2957, type: !2279)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 2956, column: 5)
!8140 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2955, column: 7)
!8141 = !DILocation(line: 0, scope: !8123)
!8142 = !DILocation(line: 2904, column: 34, scope: !8123)
!8143 = !DILocation(line: 2905, column: 34, scope: !8123)
!8144 = !DILocation(line: 2906, column: 34, scope: !8123)
!8145 = !DILocation(line: 2907, column: 34, scope: !8123)
!8146 = !DILocation(line: 2913, column: 3, scope: !8123)
!8147 = !DILocation(line: 2917, column: 16, scope: !8135)
!8148 = !DILocation(line: 2917, column: 41, scope: !8135)
!8149 = !DILocation(line: 2917, column: 7, scope: !8123)
!8150 = !DILocation(line: 0, scope: !8134)
!8151 = !DILocation(line: 2920, column: 43, scope: !8134)
!8152 = !DILocation(line: 2921, column: 30, scope: !8134)
!8153 = !DILocation(line: 2923, column: 7, scope: !8134)
!8154 = !DILocation(line: 2926, column: 15, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2924, column: 2)
!8156 = !DILocation(line: 2927, column: 4, scope: !8155)
!8157 = !DILocation(line: 2928, column: 20, scope: !8155)
!8158 = !DILocation(line: 2930, column: 17, scope: !8134)
!8159 = !DILocation(line: 2929, column: 2, scope: !8155)
!8160 = distinct !{!8160, !8153, !8161}
!8161 = !DILocation(line: 2930, column: 32, scope: !8134)
!8162 = !DILocation(line: 2937, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2937, column: 7)
!8164 = !DILocation(line: 2937, column: 7, scope: !8123)
!8165 = !DILocation(line: 2939, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2938, column: 5)
!8167 = !DILocation(line: 2940, column: 23, scope: !8166)
!8168 = !DILocation(line: 2941, column: 5, scope: !8166)
!8169 = !DILocation(line: 2946, column: 7, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2946, column: 7)
!8171 = !DILocation(line: 2946, column: 7, scope: !8123)
!8172 = !DILocation(line: 2948, column: 7, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2947, column: 5)
!8174 = !DILocation(line: 2949, column: 23, scope: !8173)
!8175 = !DILocation(line: 2950, column: 5, scope: !8173)
!8176 = !DILocation(line: 2955, column: 9, scope: !8140)
!8177 = !DILocation(line: 2955, column: 7, scope: !8123)
!8178 = !DILocation(line: 2957, column: 18, scope: !8139)
!8179 = !DILocation(line: 0, scope: !8139)
!8180 = !DILocation(line: 2961, column: 11, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 2961, column: 11)
!8182 = !DILocation(line: 2961, column: 40, scope: !8181)
!8183 = !DILocation(line: 2961, column: 11, scope: !8139)
!8184 = !DILocation(line: 2962, column: 2, scope: !8181)
!8185 = !DILocation(line: 2971, column: 2, scope: !8181)
!8186 = !DILocation(line: 2985, column: 12, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 2985, column: 12)
!8188 = !DILocation(line: 2985, column: 40, scope: !8187)
!8189 = !DILocation(line: 2986, column: 5, scope: !8187)
!8190 = !DILocation(line: 2986, column: 19, scope: !8187)
!8191 = !DILocation(line: 2986, column: 16, scope: !8187)
!8192 = !DILocation(line: 2985, column: 12, scope: !8140)
!8193 = !DILocation(line: 2990, column: 7, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2987, column: 5)
!8195 = !DILocation(line: 2991, column: 23, scope: !8194)
!8196 = !DILocation(line: 2992, column: 5, scope: !8194)
!8197 = !DILocation(line: 2999, column: 7, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2994, column: 5)
!8199 = !DILocation(line: 3003, column: 22, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 3003, column: 11)
!8201 = !DILocation(line: 3003, column: 19, scope: !8200)
!8202 = !DILocation(line: 3003, column: 11, scope: !8198)
!8203 = !DILocation(line: 3004, column: 22, scope: !8200)
!8204 = !DILocation(line: 3004, column: 2, scope: !8200)
!8205 = !DILocation(line: 3007, column: 24, scope: !8123)
!8206 = !DILocation(line: 3008, column: 1, scope: !8123)
!8207 = distinct !DISubprogram(name: "block_has_only_trap", scope: !3, file: !3, line: 3504, type: !5479, scopeLine: 3505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8208)
!8208 = !{!8209, !8210}
!8209 = !DILocalVariable(name: "bb", arg: 1, scope: !8207, file: !3, line: 3504, type: !2247)
!8210 = !DILocalVariable(name: "trap", scope: !8207, file: !3, line: 3506, type: !2279)
!8211 = !DILocation(line: 0, scope: !8207)
!8212 = !DILocation(line: 3509, column: 13, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3509, column: 7)
!8214 = !DILocation(line: 3509, column: 10, scope: !8213)
!8215 = !DILocation(line: 3509, column: 7, scope: !8207)
!8216 = !DILocation(line: 3513, column: 7, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3513, column: 7)
!8218 = !DILocation(line: 3513, column: 30, scope: !8217)
!8219 = !DILocation(line: 3513, column: 7, scope: !8207)
!8220 = !DILocation(line: 3517, column: 10, scope: !8207)
!8221 = !DILocation(line: 3518, column: 18, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3518, column: 7)
!8223 = !DILocation(line: 3518, column: 15, scope: !8222)
!8224 = !DILocation(line: 3519, column: 3, scope: !8222)
!8225 = !DILocation(line: 3519, column: 6, scope: !8222)
!8226 = !DILocation(line: 3519, column: 32, scope: !8222)
!8227 = !DILocation(line: 3520, column: 10, scope: !8222)
!8228 = !DILocation(line: 3520, column: 13, scope: !8222)
!8229 = !DILocation(line: 3520, column: 48, scope: !8222)
!8230 = !DILocation(line: 3520, column: 45, scope: !8222)
!8231 = !DILocation(line: 3518, column: 7, scope: !8207)
!8232 = !DILocation(line: 3524, column: 1, scope: !8207)
!8233 = distinct !DISubprogram(name: "cheap_bb_rtx_cost_p", scope: !3, file: !3, line: 136, type: !8234, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8236)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{!2239, !4975, !2240}
!8236 = !{!8237, !8238, !8239, !8240, !8241, !8242, !8246}
!8237 = !DILocalVariable(name: "bb", arg: 1, scope: !8233, file: !3, line: 136, type: !4975)
!8238 = !DILocalVariable(name: "max_cost", arg: 2, scope: !8233, file: !3, line: 136, type: !2240)
!8239 = !DILocalVariable(name: "count", scope: !8233, file: !3, line: 138, type: !2240)
!8240 = !DILocalVariable(name: "insn", scope: !8233, file: !3, line: 139, type: !2279)
!8241 = !DILocalVariable(name: "speed", scope: !8233, file: !3, line: 140, type: !2239)
!8242 = !DILocalVariable(name: "cost", scope: !8243, file: !3, line: 146, type: !2240)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 145, column: 2)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 144, column: 11)
!8245 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 143, column: 5)
!8246 = !DILocalVariable(name: "set", scope: !8247, file: !3, line: 159, type: !2279)
!8247 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 158, column: 4)
!8248 = !DILocation(line: 0, scope: !8233)
!8249 = !DILocation(line: 139, column: 14, scope: !8233)
!8250 = !DILocation(line: 140, column: 16, scope: !8233)
!8251 = !DILocation(line: 142, column: 3, scope: !8233)
!8252 = !DILocation(line: 138, column: 7, scope: !8233)
!8253 = !DILocation(line: 144, column: 11, scope: !8244)
!8254 = !DILocation(line: 144, column: 11, scope: !8245)
!8255 = !DILocation(line: 146, column: 30, scope: !8243)
!8256 = !DILocation(line: 146, column: 15, scope: !8243)
!8257 = !DILocation(line: 0, scope: !8243)
!8258 = !DILocation(line: 147, column: 13, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 147, column: 8)
!8260 = !DILocation(line: 147, column: 8, scope: !8243)
!8261 = !DILocation(line: 159, column: 16, scope: !8247)
!8262 = !DILocation(line: 0, scope: !8247)
!8263 = !DILocation(line: 160, column: 10, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 160, column: 10)
!8265 = !DILocation(line: 160, column: 14, scope: !8264)
!8266 = !DILocation(line: 160, column: 17, scope: !8264)
!8267 = !DILocation(line: 160, column: 10, scope: !8247)
!8268 = !DILocation(line: 162, column: 4, scope: !8243)
!8269 = !DILocation(line: 165, column: 10, scope: !8243)
!8270 = !DILocation(line: 166, column: 14, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 166, column: 8)
!8272 = !DILocation(line: 0, scope: !8244)
!8273 = !DILocation(line: 169, column: 16, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 169, column: 16)
!8275 = !DILocation(line: 169, column: 16, scope: !8244)
!8276 = !DILocation(line: 172, column: 19, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 172, column: 11)
!8278 = !DILocation(line: 172, column: 16, scope: !8277)
!8279 = !DILocation(line: 172, column: 11, scope: !8245)
!8280 = !DILocation(line: 174, column: 14, scope: !8245)
!8281 = distinct !{!8281, !8251, !8282}
!8282 = !DILocation(line: 175, column: 5, scope: !8233)
!8283 = !DILocation(line: 178, column: 1, scope: !8233)
!8284 = distinct !DISubprogram(name: "dead_or_predicable", scope: !3, file: !3, line: 3812, type: !8285, scopeLine: 3814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8287)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!2240, !2247, !2247, !2247, !2247, !2240}
!8287 = !{!8288, !8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296, !8297, !8298, !8299, !8300, !8303, !8304, !8307, !8310, !8311, !8312, !8313, !8314, !8315, !8316, !8317, !8325, !8331, !8393, !8397, !8402, !8403, !8406, !8408, !8409, !8410}
!8288 = !DILocalVariable(name: "test_bb", arg: 1, scope: !8284, file: !3, line: 3812, type: !2247)
!8289 = !DILocalVariable(name: "merge_bb", arg: 2, scope: !8284, file: !3, line: 3812, type: !2247)
!8290 = !DILocalVariable(name: "other_bb", arg: 3, scope: !8284, file: !3, line: 3813, type: !2247)
!8291 = !DILocalVariable(name: "new_dest", arg: 4, scope: !8284, file: !3, line: 3813, type: !2247)
!8292 = !DILocalVariable(name: "reversep", arg: 5, scope: !8284, file: !3, line: 3813, type: !2240)
!8293 = !DILocalVariable(name: "head", scope: !8284, file: !3, line: 3815, type: !2279)
!8294 = !DILocalVariable(name: "end", scope: !8284, file: !3, line: 3815, type: !2279)
!8295 = !DILocalVariable(name: "jump", scope: !8284, file: !3, line: 3815, type: !2279)
!8296 = !DILocalVariable(name: "earliest", scope: !8284, file: !3, line: 3815, type: !2279)
!8297 = !DILocalVariable(name: "old_dest", scope: !8284, file: !3, line: 3815, type: !2279)
!8298 = !DILocalVariable(name: "new_label", scope: !8284, file: !3, line: 3815, type: !2279)
!8299 = !DILocalVariable(name: "n_validated_changes", scope: !8284, file: !3, line: 3817, type: !2240)
!8300 = !DILocalVariable(name: "cond", scope: !8301, file: !3, line: 3874, type: !2279)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3867, column: 5)
!8302 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3866, column: 7)
!8303 = !DILocalVariable(name: "prob_val", scope: !8301, file: !3, line: 3874, type: !2279)
!8304 = !DILocalVariable(name: "rev", scope: !8305, file: !3, line: 3886, type: !580)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 3885, column: 2)
!8306 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 3884, column: 11)
!8307 = !DILocalVariable(name: "insn", scope: !8308, file: !3, line: 3911, type: !2279)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 3906, column: 5)
!8309 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3905, column: 7)
!8310 = !DILocalVariable(name: "cond", scope: !8308, file: !3, line: 3911, type: !2279)
!8311 = !DILocalVariable(name: "prev", scope: !8308, file: !3, line: 3911, type: !2279)
!8312 = !DILocalVariable(name: "merge_set", scope: !8308, file: !3, line: 3912, type: !3487)
!8313 = !DILocalVariable(name: "test_live", scope: !8308, file: !3, line: 3912, type: !3487)
!8314 = !DILocalVariable(name: "test_set", scope: !8308, file: !3, line: 3912, type: !3487)
!8315 = !DILocalVariable(name: "i", scope: !8308, file: !3, line: 3913, type: !7)
!8316 = !DILocalVariable(name: "fail", scope: !8308, file: !3, line: 3913, type: !7)
!8317 = !DILocalVariable(name: "bi", scope: !8308, file: !3, line: 3914, type: !8318)
!8318 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !2334, line: 218, baseType: !8319)
!8319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2334, line: 203, size: 256, elements: !8320)
!8320 = !{!8321, !8322, !8323, !8324}
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !8319, file: !2334, line: 206, baseType: !2337, size: 64)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !8319, file: !2334, line: 209, baseType: !2337, size: 64, offset: 64)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !8319, file: !2334, line: 212, baseType: !7, size: 32, offset: 128)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !8319, file: !2334, line: 217, baseType: !2347, size: 64, offset: 192)
!8325 = !DILocalVariable(name: "uid", scope: !8326, file: !3, line: 3969, type: !7)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 3968, column: 6)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 3967, column: 8)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 3966, column: 2)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 3965, column: 7)
!8330 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3965, column: 7)
!8331 = !DILocalVariable(name: "def_rec", scope: !8326, file: !3, line: 3970, type: !8332)
!8332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8333, size: 64)
!8333 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !8334, line: 429, baseType: !8335)
!8334 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8336, size: 64)
!8336 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !8334, line: 422, size: 704, elements: !8337)
!8337 = !{!8338, !8376, !8381, !8386}
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8336, file: !8334, line: 424, baseType: !8339, size: 512)
!8339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !8334, line: 356, size: 512, elements: !8340)
!8340 = !{!8341, !8342, !8343, !8344, !8345, !8351, !8371, !8372, !8373, !8374, !8375}
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !8339, file: !8334, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8339, file: !8334, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8339, file: !8334, line: 364, baseType: !2240, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !8339, file: !8334, line: 365, baseType: !2279, size: 64, offset: 64)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8339, file: !8334, line: 366, baseType: !8346, size: 64, offset: 128)
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8347, size: 64)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !8334, line: 449, size: 128, elements: !8348)
!8348 = !{!8349, !8350}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !8347, file: !8334, line: 451, baseType: !8333, size: 64)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8347, file: !8334, line: 452, baseType: !8346, size: 64, offset: 64)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !8339, file: !8334, line: 370, baseType: !8352, size: 64, offset: 192)
!8352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8353, size: 64)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !8334, line: 433, size: 384, elements: !8354)
!8354 = !{!8355, !8356, !8357, !8358, !8359, !8370}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !8353, file: !8334, line: 435, baseType: !2279, size: 64)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !8353, file: !8334, line: 436, baseType: !8332, size: 64, offset: 64)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !8353, file: !8334, line: 437, baseType: !8332, size: 64, offset: 128)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !8353, file: !8334, line: 439, baseType: !8332, size: 64, offset: 192)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !8353, file: !8334, line: 440, baseType: !8360, size: 64, offset: 256)
!8360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8361, size: 64)
!8361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8362, size: 64)
!8362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !8334, line: 339, size: 192, elements: !8363)
!8363 = !{!8364, !8365, !8366, !8367, !8368, !8369}
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !8362, file: !8334, line: 341, baseType: !2279, size: 64)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8362, file: !8334, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8362, file: !8334, line: 346, baseType: !2240, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !8362, file: !8334, line: 347, baseType: !7, size: 32, offset: 96)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !8362, file: !8334, line: 348, baseType: !7, size: 32, offset: 128)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !8362, file: !8334, line: 349, baseType: !7, size: 32, offset: 160)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !8353, file: !8334, line: 444, baseType: !2240, size: 32, offset: 320)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !8339, file: !8334, line: 374, baseType: !8335, size: 64, offset: 256)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !8339, file: !8334, line: 375, baseType: !8335, size: 64, offset: 320)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !8339, file: !8334, line: 376, baseType: !7, size: 32, offset: 384)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8339, file: !8334, line: 379, baseType: !2240, size: 32, offset: 416)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !8339, file: !8334, line: 382, baseType: !7, size: 32, offset: 448)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !8336, file: !8334, line: 425, baseType: !8377, size: 576)
!8377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !8334, line: 398, size: 576, elements: !8378)
!8378 = !{!8379, !8380}
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8377, file: !8334, line: 400, baseType: !8339, size: 512)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !8377, file: !8334, line: 405, baseType: !3474, size: 64, offset: 512)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !8336, file: !8334, line: 426, baseType: !8382, size: 576)
!8382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !8334, line: 388, size: 576, elements: !8383)
!8383 = !{!8384, !8385}
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8382, file: !8334, line: 390, baseType: !8339, size: 512)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !8382, file: !8334, line: 394, baseType: !2247, size: 64, offset: 512)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !8336, file: !8334, line: 427, baseType: !8387, size: 704)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !8334, line: 413, size: 704, elements: !8388)
!8388 = !{!8389, !8390, !8391, !8392}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8387, file: !8334, line: 415, baseType: !8377, size: 576)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !8387, file: !8334, line: 416, baseType: !2240, size: 32, offset: 576)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8387, file: !8334, line: 417, baseType: !2240, size: 32, offset: 608)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8387, file: !8334, line: 418, baseType: !189, size: 32, offset: 640)
!8393 = !DILocalVariable(name: "def", scope: !8394, file: !3, line: 3973, type: !8333)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3972, column: 3)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 3971, column: 8)
!8396 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 3971, column: 8)
!8397 = !DILocalVariable(name: "count", scope: !8398, file: !3, line: 4057, type: !3439)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 4056, column: 2)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 4055, column: 11)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 4051, column: 5)
!8401 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4050, column: 7)
!8402 = !DILocalVariable(name: "probability", scope: !8398, file: !3, line: 4057, type: !3439)
!8403 = !DILocalVariable(name: "insn", scope: !8404, file: !3, line: 4072, type: !2279)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 4071, column: 5)
!8405 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4070, column: 7)
!8406 = !DILocalVariable(name: "note", scope: !8407, file: !3, line: 4082, type: !2279)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 4081, column: 2)
!8408 = !DILocalVariable(name: "set", scope: !8407, file: !3, line: 4082, type: !2279)
!8409 = !DILabel(scope: !8284, name: "no_body", file: !3, line: 4030)
!8410 = !DILabel(scope: !8284, name: "cancel", file: !3, line: 4109)
!8411 = !DILocation(line: 0, scope: !8284)
!8412 = !DILocation(line: 3815, column: 3, scope: !8284)
!8413 = !DILocation(line: 3815, column: 24, scope: !8284)
!8414 = !DILocation(line: 3819, column: 10, scope: !8284)
!8415 = !DILocation(line: 3822, column: 10, scope: !8284)
!8416 = !DILocation(line: 3823, column: 9, scope: !8284)
!8417 = !DILocation(line: 3825, column: 3, scope: !8284)
!8418 = !DILocation(line: 3825, column: 10, scope: !8284)
!8419 = !DILocation(line: 3825, column: 36, scope: !8284)
!8420 = !DILocation(line: 3825, column: 29, scope: !8284)
!8421 = !DILocation(line: 3826, column: 11, scope: !8284)
!8422 = distinct !{!8422, !8417, !8421}
!8423 = !DILocation(line: 3832, column: 7, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3832, column: 7)
!8425 = !DILocation(line: 3832, column: 7, scope: !8284)
!8426 = !DILocation(line: 3835, column: 7, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3835, column: 7)
!8428 = !DILocation(line: 3835, column: 7, scope: !8284)
!8429 = !DILocation(line: 3836, column: 12, scope: !8427)
!8430 = !DILocation(line: 3836, column: 5, scope: !8427)
!8431 = !DILocation(line: 3837, column: 3, scope: !8284)
!8432 = !DILocation(line: 3837, column: 10, scope: !8284)
!8433 = !DILocation(line: 3837, column: 38, scope: !8284)
!8434 = !DILocation(line: 3837, column: 30, scope: !8284)
!8435 = !DILocation(line: 3838, column: 12, scope: !8284)
!8436 = distinct !{!8436, !8431, !8435}
!8437 = !DILocation(line: 3839, column: 7, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3839, column: 7)
!8439 = !DILocation(line: 3839, column: 7, scope: !8284)
!8440 = !DILocation(line: 3841, column: 16, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 3841, column: 11)
!8442 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 3840, column: 5)
!8443 = !DILocation(line: 3841, column: 11, scope: !8442)
!8444 = !DILocation(line: 3847, column: 7, scope: !8442)
!8445 = !DILocation(line: 0, scope: !8442)
!8446 = !DILocation(line: 3847, column: 14, scope: !8442)
!8447 = !DILocation(line: 3847, column: 42, scope: !8442)
!8448 = !DILocation(line: 3847, column: 34, scope: !8442)
!8449 = distinct !{!8449, !8444, !8450}
!8450 = !DILocation(line: 3848, column: 9, scope: !8442)
!8451 = !DILocation(line: 3851, column: 7, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3851, column: 7)
!8453 = !DILocation(line: 3851, column: 7, scope: !8284)
!8454 = !DILocation(line: 3853, column: 16, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 3853, column: 11)
!8456 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 3852, column: 5)
!8457 = !DILocation(line: 3853, column: 11, scope: !8456)
!8458 = !DILocation(line: 3859, column: 7, scope: !8456)
!8459 = !DILocation(line: 0, scope: !8456)
!8460 = !DILocation(line: 3859, column: 14, scope: !8456)
!8461 = !DILocation(line: 3859, column: 40, scope: !8456)
!8462 = !DILocation(line: 3859, column: 33, scope: !8456)
!8463 = distinct !{!8463, !8458, !8464}
!8464 = !DILocation(line: 3860, column: 8, scope: !8456)
!8465 = !DILocation(line: 3866, column: 15, scope: !8302)
!8466 = !DILocation(line: 3866, column: 7, scope: !8302)
!8467 = !DILocation(line: 3866, column: 7, scope: !8284)
!8468 = !DILocation(line: 3876, column: 14, scope: !8301)
!8469 = !DILocation(line: 0, scope: !8301)
!8470 = !DILocation(line: 3877, column: 13, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 3877, column: 11)
!8472 = !DILocation(line: 3877, column: 11, scope: !8301)
!8473 = !DILocation(line: 3880, column: 18, scope: !8301)
!8474 = !DILocation(line: 3881, column: 11, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 3881, column: 11)
!8476 = !DILocation(line: 3881, column: 11, scope: !8301)
!8477 = !DILocation(line: 3882, column: 13, scope: !8475)
!8478 = !DILocation(line: 3882, column: 2, scope: !8475)
!8479 = !DILocation(line: 3884, column: 11, scope: !8306)
!8480 = !DILocation(line: 3884, column: 11, scope: !8301)
!8481 = !DILocation(line: 3886, column: 24, scope: !8305)
!8482 = !DILocation(line: 0, scope: !8305)
!8483 = !DILocation(line: 3887, column: 12, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 3887, column: 8)
!8485 = !DILocation(line: 3887, column: 8, scope: !8305)
!8486 = !DILocation(line: 3889, column: 11, scope: !8305)
!8487 = !DILocation(line: 3891, column: 8, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 3891, column: 8)
!8489 = !DILocation(line: 3891, column: 8, scope: !8305)
!8490 = !DILocation(line: 3892, column: 17, scope: !8488)
!8491 = !DILocation(line: 3892, column: 6, scope: !8488)
!8492 = !DILocation(line: 3882, column: 11, scope: !8475)
!8493 = !DILocation(line: 3876, column: 12, scope: !8301)
!8494 = !DILocation(line: 3895, column: 11, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 3895, column: 11)
!8496 = !DILocation(line: 3896, column: 4, scope: !8495)
!8497 = !DILocation(line: 3896, column: 7, scope: !8495)
!8498 = !DILocation(line: 3895, column: 11, scope: !8301)
!8499 = !DILocation(line: 3897, column: 24, scope: !8495)
!8500 = !DILocation(line: 3897, column: 2, scope: !8495)
!8501 = !DILocation(line: 3899, column: 2, scope: !8495)
!8502 = !DILocation(line: 3901, column: 16, scope: !8301)
!8503 = !DILocation(line: 3902, column: 5, scope: !8302)
!8504 = !DILocation(line: 3817, column: 7, scope: !8284)
!8505 = !DILocation(line: 3905, column: 27, scope: !8309)
!8506 = !DILocation(line: 3905, column: 7, scope: !8284)
!8507 = !DILocation(line: 3913, column: 7, scope: !8308)
!8508 = !DILocation(line: 0, scope: !8308)
!8509 = !DILocation(line: 3914, column: 7, scope: !8308)
!8510 = !DILocation(line: 3917, column: 12, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3917, column: 7)
!8512 = !DILocation(line: 0, scope: !8511)
!8513 = !DILocation(line: 3919, column: 8, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 3919, column: 8)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 3918, column: 2)
!8516 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 3917, column: 7)
!8517 = !DILocation(line: 3919, column: 8, scope: !8515)
!8518 = !DILocation(line: 3921, column: 8, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 3921, column: 8)
!8520 = !DILocation(line: 3921, column: 8, scope: !8515)
!8521 = !DILocation(line: 3923, column: 24, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 3923, column: 12)
!8523 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 3922, column: 6)
!8524 = !DILocation(line: 3923, column: 12, scope: !8522)
!8525 = !DILocation(line: 3923, column: 12, scope: !8523)
!8526 = !DILocation(line: 3931, column: 12, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 3931, column: 12)
!8528 = !DILocation(line: 3931, column: 12, scope: !8523)
!8529 = !DILocation(line: 3934, column: 13, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8515, file: !3, line: 3934, column: 8)
!8531 = !DILocation(line: 3934, column: 8, scope: !8515)
!8532 = !DILocation(line: 3917, column: 34, scope: !8516)
!8533 = !DILocation(line: 3917, column: 7, scope: !8516)
!8534 = distinct !{!8534, !8535, !8536}
!8535 = !DILocation(line: 3917, column: 7, scope: !8511)
!8536 = !DILocation(line: 3936, column: 2, scope: !8511)
!8537 = !DILocation(line: 3938, column: 13, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3938, column: 11)
!8539 = !DILocation(line: 3938, column: 11, scope: !8308)
!8540 = !DILocation(line: 3942, column: 14, scope: !8308)
!8541 = !DILocation(line: 3943, column: 13, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3943, column: 11)
!8543 = !DILocation(line: 3943, column: 11, scope: !8308)
!8544 = !DILocation(line: 3952, column: 19, scope: !8308)
!8545 = !DILocation(line: 3953, column: 19, scope: !8308)
!8546 = !DILocation(line: 3954, column: 18, scope: !8308)
!8547 = !DILocation(line: 3962, column: 11, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3962, column: 11)
!8549 = !DILocation(line: 3962, column: 23, scope: !8548)
!8550 = !DILocation(line: 3962, column: 21, scope: !8548)
!8551 = !DILocation(line: 3962, column: 11, scope: !8308)
!8552 = !DILocation(line: 3963, column: 14, scope: !8548)
!8553 = !DILocation(line: 3963, column: 12, scope: !8548)
!8554 = !DILocation(line: 3963, column: 2, scope: !8548)
!8555 = !DILocation(line: 3965, column: 7, scope: !8330)
!8556 = !DILocation(line: 0, scope: !8330)
!8557 = !DILocation(line: 3965, column: 7, scope: !8329)
!8558 = !DILocation(line: 3967, column: 8, scope: !8327)
!8559 = !DILocation(line: 3967, column: 8, scope: !8328)
!8560 = !DILocation(line: 3969, column: 27, scope: !8326)
!8561 = !DILocation(line: 0, scope: !8326)
!8562 = !DILocation(line: 3971, column: 23, scope: !8396)
!8563 = !DILocation(line: 3971, column: 13, scope: !8396)
!8564 = !DILocation(line: 0, scope: !8396)
!8565 = !DILocation(line: 3971, column: 47, scope: !8395)
!8566 = !DILocation(line: 3971, column: 8, scope: !8396)
!8567 = !DILocation(line: 3974, column: 32, scope: !8394)
!8568 = !DILocation(line: 3974, column: 5, scope: !8394)
!8569 = !DILocation(line: 3971, column: 64, scope: !8395)
!8570 = !DILocation(line: 3971, column: 8, scope: !8395)
!8571 = distinct !{!8571, !8566, !8572}
!8572 = !DILocation(line: 3975, column: 3, scope: !8396)
!8573 = distinct !{!8573, !8555, !8574}
!8574 = !DILocation(line: 3977, column: 2, scope: !8330)
!8575 = !DILocation(line: 3981, column: 39, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3981, column: 11)
!8577 = !DILocation(line: 3981, column: 11, scope: !8308)
!8578 = !DILocation(line: 3983, column: 11, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 3983, column: 11)
!8580 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 3982, column: 2)
!8581 = !DILocation(line: 3913, column: 19, scope: !8308)
!8582 = !DILocation(line: 3983, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 3983, column: 11)
!8584 = !DILocation(line: 3985, column: 12, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 3985, column: 12)
!8586 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3984, column: 6)
!8587 = !DILocation(line: 3985, column: 14, scope: !8585)
!8588 = !DILocation(line: 3986, column: 5, scope: !8585)
!8589 = !DILocation(line: 3986, column: 10, scope: !8585)
!8590 = !DILocation(line: 3987, column: 5, scope: !8585)
!8591 = !DILocation(line: 3987, column: 10, scope: !8585)
!8592 = !DILocation(line: 3985, column: 12, scope: !8586)
!8593 = distinct !{!8593, !8578, !8594}
!8594 = !DILocation(line: 3989, column: 6, scope: !8579)
!8595 = !DILocation(line: 3997, column: 31, scope: !8308)
!8596 = !DILocation(line: 3997, column: 7, scope: !8308)
!8597 = !DILocation(line: 3998, column: 7, scope: !8308)
!8598 = !DILocation(line: 3999, column: 12, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3999, column: 7)
!8600 = !DILocation(line: 0, scope: !8599)
!8601 = !DILocation(line: 4001, column: 8, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 4001, column: 8)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 4000, column: 2)
!8604 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 3999, column: 7)
!8605 = !DILocation(line: 4001, column: 8, scope: !8603)
!8606 = !DILocation(line: 4003, column: 8, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4002, column: 6)
!8608 = !DILocation(line: 4004, column: 8, scope: !8607)
!8609 = !DILocation(line: 4005, column: 6, scope: !8607)
!8610 = !DILocation(line: 4006, column: 11, scope: !8603)
!8611 = !DILocation(line: 4007, column: 16, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 4007, column: 8)
!8613 = !DILocation(line: 4007, column: 13, scope: !8612)
!8614 = !DILocation(line: 4007, column: 8, scope: !8603)
!8615 = distinct !{!8615, !8616, !8617}
!8616 = !DILocation(line: 3999, column: 7, scope: !8599)
!8617 = !DILocation(line: 4009, column: 2, scope: !8599)
!8618 = !DILocation(line: 4017, column: 11, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 4017, column: 11)
!8620 = !DILocation(line: 4018, column: 4, scope: !8619)
!8621 = !DILocation(line: 4018, column: 7, scope: !8619)
!8622 = !DILocation(line: 4019, column: 4, scope: !8619)
!8623 = !DILocation(line: 4019, column: 37, scope: !8619)
!8624 = !DILocation(line: 4019, column: 7, scope: !8619)
!8625 = !DILocation(line: 4017, column: 11, scope: !8308)
!8626 = !DILocation(line: 4020, column: 2, scope: !8619)
!8627 = !DILocation(line: 4022, column: 7, scope: !8308)
!8628 = !DILocation(line: 4023, column: 7, scope: !8308)
!8629 = !DILocation(line: 4024, column: 7, scope: !8308)
!8630 = !DILocation(line: 4026, column: 11, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 4026, column: 11)
!8632 = !DILocation(line: 0, scope: !8309)
!8633 = !DILocation(line: 4028, column: 5, scope: !8309)
!8634 = !DILocation(line: 4030, column: 2, scope: !8284)
!8635 = !DILocation(line: 4035, column: 14, scope: !8284)
!8636 = !DILocation(line: 4036, column: 16, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4036, column: 7)
!8638 = !DILocation(line: 4036, column: 7, scope: !8284)
!8639 = !DILocation(line: 4038, column: 19, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 4037, column: 5)
!8641 = !DILocation(line: 4039, column: 11, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 4039, column: 11)
!8643 = !DILocation(line: 4039, column: 11, scope: !8640)
!8644 = !DILocation(line: 4040, column: 8, scope: !8642)
!8645 = !DILocation(line: 4041, column: 8, scope: !8642)
!8646 = !DILocation(line: 4045, column: 7, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4045, column: 7)
!8648 = !DILocation(line: 4045, column: 7, scope: !8284)
!8649 = !DILocation(line: 4046, column: 5, scope: !8647)
!8650 = !DILocation(line: 4050, column: 7, scope: !8284)
!8651 = !DILocation(line: 4052, column: 7, scope: !8400)
!8652 = !DILocation(line: 4054, column: 27, scope: !8400)
!8653 = !DILocation(line: 4054, column: 7, scope: !8400)
!8654 = !DILocation(line: 4055, column: 11, scope: !8399)
!8655 = !DILocation(line: 4055, column: 11, scope: !8400)
!8656 = !DILocation(line: 4058, column: 12, scope: !8398)
!8657 = !DILocation(line: 4058, column: 35, scope: !8398)
!8658 = !DILocation(line: 0, scope: !8398)
!8659 = !DILocation(line: 4059, column: 35, scope: !8398)
!8660 = !DILocation(line: 4059, column: 60, scope: !8398)
!8661 = !DILocation(line: 4059, column: 4, scope: !8398)
!8662 = !DILocation(line: 4059, column: 27, scope: !8398)
!8663 = !DILocation(line: 4059, column: 33, scope: !8398)
!8664 = !DILocation(line: 4060, column: 4, scope: !8398)
!8665 = !DILocation(line: 4060, column: 29, scope: !8398)
!8666 = !DILocation(line: 4060, column: 35, scope: !8398)
!8667 = !DILocation(line: 4061, column: 18, scope: !8398)
!8668 = !DILocation(line: 4061, column: 41, scope: !8398)
!8669 = !DILocation(line: 4063, column: 8, scope: !8398)
!8670 = !DILocation(line: 4063, column: 33, scope: !8398)
!8671 = !DILocation(line: 4062, column: 4, scope: !8398)
!8672 = !DILocation(line: 4062, column: 27, scope: !8398)
!8673 = !DILocation(line: 4063, column: 6, scope: !8398)
!8674 = !DILocation(line: 4064, column: 4, scope: !8398)
!8675 = !DILocation(line: 4064, column: 29, scope: !8398)
!8676 = !DILocation(line: 4064, column: 41, scope: !8398)
!8677 = !DILocation(line: 4065, column: 4, scope: !8398)
!8678 = !DILocation(line: 4066, column: 2, scope: !8398)
!8679 = !DILocation(line: 4070, column: 12, scope: !8405)
!8680 = !DILocation(line: 4070, column: 7, scope: !8284)
!8681 = !DILocation(line: 4074, column: 18, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 4074, column: 11)
!8683 = !DILocation(line: 4074, column: 15, scope: !8682)
!8684 = !DILocation(line: 4074, column: 11, scope: !8404)
!8685 = !DILocation(line: 4075, column: 22, scope: !8682)
!8686 = !DILocation(line: 4075, column: 20, scope: !8682)
!8687 = !DILocation(line: 4075, column: 2, scope: !8682)
!8688 = !DILocation(line: 0, scope: !8404)
!8689 = !DILocation(line: 4080, column: 7, scope: !8404)
!8690 = !DILocation(line: 4084, column: 10, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4084, column: 8)
!8692 = !DILocation(line: 4084, column: 8, scope: !8407)
!8693 = !DILocation(line: 4086, column: 11, scope: !8407)
!8694 = !DILocation(line: 0, scope: !8407)
!8695 = !DILocation(line: 4087, column: 10, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4087, column: 8)
!8697 = !DILocation(line: 4087, column: 8, scope: !8407)
!8698 = !DILocation(line: 4089, column: 10, scope: !8407)
!8699 = !DILocation(line: 4090, column: 9, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4090, column: 8)
!8701 = !DILocation(line: 4090, column: 13, scope: !8700)
!8702 = !DILocation(line: 4090, column: 39, scope: !8700)
!8703 = !DILocation(line: 4090, column: 17, scope: !8700)
!8704 = !DILocation(line: 4091, column: 8, scope: !8700)
!8705 = !DILocation(line: 4091, column: 34, scope: !8700)
!8706 = !DILocation(line: 4091, column: 12, scope: !8700)
!8707 = !DILocation(line: 4090, column: 8, scope: !8407)
!8708 = !DILocation(line: 4092, column: 6, scope: !8700)
!8709 = !DILocation(line: 4093, column: 16, scope: !8404)
!8710 = !DILocation(line: 4093, column: 23, scope: !8404)
!8711 = !DILocation(line: 4093, column: 34, scope: !8404)
!8712 = !DILocation(line: 4093, column: 2, scope: !8407)
!8713 = distinct !{!8713, !8689, !8714}
!8714 = !DILocation(line: 4093, column: 51, scope: !8404)
!8715 = !DILocation(line: 4095, column: 33, scope: !8404)
!8716 = !DILocation(line: 4095, column: 7, scope: !8404)
!8717 = !DILocation(line: 4096, column: 5, scope: !8404)
!8718 = !DILocation(line: 4099, column: 7, scope: !8284)
!8719 = !DILocation(line: 4101, column: 7, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4100, column: 5)
!8721 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 4099, column: 7)
!8722 = !DILocation(line: 4102, column: 20, scope: !8720)
!8723 = !DILocation(line: 4102, column: 7, scope: !8720)
!8724 = !DILocation(line: 4105, column: 5, scope: !8720)
!8725 = !DILocation(line: 4109, column: 2, scope: !8284)
!8726 = !DILocation(line: 4110, column: 3, scope: !8284)
!8727 = !DILocation(line: 4111, column: 3, scope: !8284)
!8728 = !DILocation(line: 4112, column: 1, scope: !8284)
!8729 = distinct !DISubprogram(name: "find_memory", scope: !3, file: !3, line: 3798, type: !8730, scopeLine: 3799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!2240, !3474, !2244}
!8732 = !{!8733, !8734}
!8733 = !DILocalVariable(name: "px", arg: 1, scope: !8729, file: !3, line: 3798, type: !3474)
!8734 = !DILocalVariable(name: "data", arg: 2, scope: !8729, file: !3, line: 3798, type: !2244)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 3800, column: 10, scope: !8729)
!8737 = !DILocation(line: 3800, column: 3, scope: !8729)
!8738 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !2334, file: !2334, line: 224, type: !8739, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8746)
!8739 = !DISubroutineType(types: !8740)
!8740 = !{null, !8741, !8742, !7, !8745}
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8318, size: 64)
!8742 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !2248, line: 48, baseType: !8743)
!8743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8744, size: 64)
!8744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2333)
!8745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!8746 = !{!8747, !8748, !8749, !8750}
!8747 = !DILocalVariable(name: "bi", arg: 1, scope: !8738, file: !2334, line: 224, type: !8741)
!8748 = !DILocalVariable(name: "map", arg: 2, scope: !8738, file: !2334, line: 224, type: !8742)
!8749 = !DILocalVariable(name: "start_bit", arg: 3, scope: !8738, file: !2334, line: 225, type: !7)
!8750 = !DILocalVariable(name: "bit_no", arg: 4, scope: !8738, file: !2334, line: 225, type: !8745)
!8751 = !DILocation(line: 0, scope: !8738)
!8752 = !DILocation(line: 227, column: 19, scope: !8738)
!8753 = !DILocation(line: 227, column: 12, scope: !8738)
!8754 = !DILocation(line: 228, column: 7, scope: !8738)
!8755 = !DILocation(line: 228, column: 12, scope: !8738)
!8756 = !DILocation(line: 0, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !2334, line: 233, column: 11)
!8758 = distinct !DILexicalBlock(scope: !8738, file: !2334, line: 232, column: 5)
!8759 = !DILocation(line: 231, column: 3, scope: !8738)
!8760 = !DILocation(line: 233, column: 12, scope: !8757)
!8761 = !DILocation(line: 233, column: 11, scope: !8758)
!8762 = !DILocation(line: 235, column: 13, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8757, file: !2334, line: 234, column: 2)
!8764 = !DILocation(line: 236, column: 4, scope: !8763)
!8765 = !DILocation(line: 239, column: 11, scope: !8758)
!8766 = distinct !{!8766, !8759, !8767}
!8767 = !DILocation(line: 242, column: 5, scope: !8738)
!8768 = !DILocation(line: 245, column: 11, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8738, file: !2334, line: 245, column: 7)
!8770 = !DILocation(line: 245, column: 17, scope: !8769)
!8771 = !DILocation(line: 245, column: 22, scope: !8769)
!8772 = !DILocation(line: 245, column: 7, scope: !8738)
!8773 = !DILocation(line: 246, column: 27, scope: !8769)
!8774 = !DILocation(line: 246, column: 32, scope: !8769)
!8775 = !DILocation(line: 246, column: 5, scope: !8769)
!8776 = !DILocation(line: 249, column: 7, scope: !8738)
!8777 = !DILocation(line: 249, column: 15, scope: !8738)
!8778 = !DILocation(line: 250, column: 14, scope: !8738)
!8779 = !DILocation(line: 251, column: 7, scope: !8738)
!8780 = !DILocation(line: 251, column: 12, scope: !8738)
!8781 = !DILocation(line: 257, column: 16, scope: !8738)
!8782 = !DILocation(line: 257, column: 13, scope: !8738)
!8783 = !DILocation(line: 259, column: 11, scope: !8738)
!8784 = !DILocation(line: 260, column: 1, scope: !8738)
!8785 = distinct !DISubprogram(name: "bmp_iter_set", scope: !2334, file: !2334, line: 393, type: !8786, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!2239, !8741, !8745}
!8788 = !{!8789, !8790, !8791}
!8789 = !DILocalVariable(name: "bi", arg: 1, scope: !8785, file: !2334, line: 393, type: !8741)
!8790 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8785, file: !2334, line: 393, type: !8745)
!8791 = !DILabel(scope: !8792, name: "next_bit", file: !2334, line: 398)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !2334, line: 397, column: 5)
!8793 = distinct !DILexicalBlock(scope: !8785, file: !2334, line: 396, column: 7)
!8794 = !DILocation(line: 0, scope: !8785)
!8795 = !DILocation(line: 396, column: 11, scope: !8793)
!8796 = !DILocation(line: 396, column: 7, scope: !8793)
!8797 = !DILocation(line: 396, column: 7, scope: !8785)
!8798 = !DILocation(line: 419, column: 15, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !2334, line: 418, column: 2)
!8800 = distinct !DILexicalBlock(scope: !8785, file: !2334, line: 415, column: 5)
!8801 = !DILocation(line: 399, column: 7, scope: !8792)
!8802 = !DILocation(line: 398, column: 5, scope: !8792)
!8803 = !DILocation(line: 399, column: 20, scope: !8792)
!8804 = !DILocation(line: 399, column: 25, scope: !8792)
!8805 = !DILocation(line: 399, column: 14, scope: !8792)
!8806 = !DILocation(line: 401, column: 13, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8792, file: !2334, line: 400, column: 2)
!8808 = !DILocation(line: 402, column: 12, scope: !8807)
!8809 = distinct !{!8809, !8801, !8810}
!8810 = !DILocation(line: 403, column: 2, scope: !8792)
!8811 = !DILocation(line: 410, column: 15, scope: !8785)
!8812 = !DILocation(line: 410, column: 42, scope: !8785)
!8813 = !DILocation(line: 411, column: 26, scope: !8785)
!8814 = !DILocation(line: 410, column: 11, scope: !8785)
!8815 = !DILocation(line: 412, column: 7, scope: !8785)
!8816 = !DILocation(line: 412, column: 14, scope: !8785)
!8817 = !DILocation(line: 0, scope: !8800)
!8818 = !DILocation(line: 414, column: 3, scope: !8785)
!8819 = !DILocation(line: 417, column: 7, scope: !8800)
!8820 = !DILocation(line: 417, column: 18, scope: !8800)
!8821 = !DILocation(line: 417, column: 26, scope: !8800)
!8822 = !DILocation(line: 419, column: 13, scope: !8799)
!8823 = !DILocation(line: 420, column: 8, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8799, file: !2334, line: 420, column: 8)
!8825 = !DILocation(line: 420, column: 8, scope: !8799)
!8826 = !DILocation(line: 422, column: 12, scope: !8799)
!8827 = !DILocation(line: 423, column: 15, scope: !8799)
!8828 = distinct !{!8828, !8819, !8829}
!8829 = !DILocation(line: 424, column: 2, scope: !8800)
!8830 = !DILocation(line: 427, column: 28, scope: !8800)
!8831 = !DILocation(line: 427, column: 16, scope: !8800)
!8832 = !DILocation(line: 428, column: 12, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8800, file: !2334, line: 428, column: 11)
!8834 = !DILocation(line: 428, column: 11, scope: !8800)
!8835 = !DILocation(line: 430, column: 27, scope: !8800)
!8836 = !DILocation(line: 430, column: 32, scope: !8800)
!8837 = !DILocation(line: 430, column: 15, scope: !8800)
!8838 = !DILocation(line: 431, column: 19, scope: !8800)
!8839 = distinct !{!8839, !8818, !8840}
!8840 = !DILocation(line: 432, column: 5, scope: !8785)
!8841 = !DILocation(line: 433, column: 1, scope: !8785)
!8842 = distinct !DISubprogram(name: "bmp_iter_next", scope: !2334, file: !2334, line: 382, type: !8843, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8845)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{null, !8741, !8745}
!8845 = !{!8846, !8847}
!8846 = !DILocalVariable(name: "bi", arg: 1, scope: !8842, file: !2334, line: 382, type: !8741)
!8847 = !DILocalVariable(name: "bit_no", arg: 2, scope: !8842, file: !2334, line: 382, type: !8745)
!8848 = !DILocation(line: 0, scope: !8842)
!8849 = !DILocation(line: 384, column: 7, scope: !8842)
!8850 = !DILocation(line: 384, column: 12, scope: !8842)
!8851 = !DILocation(line: 385, column: 11, scope: !8842)
!8852 = !DILocation(line: 386, column: 1, scope: !8842)
