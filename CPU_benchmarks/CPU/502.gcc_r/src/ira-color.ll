; ModuleID = 'ira-color.bc'
source_filename = "ira-color.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.ira_allocno = type { i32, i32, i32, i32, %struct.rtx_def*, %struct.ira_allocno*, %struct.ira_loop_tree_node*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ira_allocno_copy*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno_live_range*, i32, i32, i8*, i32, i32, i64, i64, i32, i32, i32, i16, %struct.ira_allocno*, i32*, i32*, i32*, i32*, i32, i32, %struct.ira_allocno*, %struct.ira_allocno*, i32 }
%struct.ira_loop_tree_node = type { %struct.basic_block_def*, %struct.loop*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, i32, i8, %struct.ira_allocno**, i8, [27 x i32], %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ira_allocno_copy = type { i32, %struct.ira_allocno*, %struct.ira_allocno*, i32, i8, %struct.rtx_def*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_loop_tree_node* }
%struct.ira_allocno_live_range = type { %struct.ira_allocno*, i32, i32, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range* }
%struct.ira_spilled_reg_stack_slot = type { %struct.bitmap_head_def, %struct.rtx_def*, i32 }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.VEC_ira_allocno_t_heap = type { %struct.VEC_ira_allocno_t_base }
%struct.VEC_ira_allocno_t_base = type { i32, i32, [1 x %struct.ira_allocno*] }
%struct.update_cost_queue_elem = type { i32, i32, %struct.ira_allocno* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.regstat_n_sets_and_refs_t = type { i32, i32 }
%struct.splay_tree_s = type { %struct.splay_tree_node_s*, i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8* }
%struct.splay_tree_node_s = type { i64, i64, %struct.splay_tree_node_s*, %struct.splay_tree_node_s* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.VEC_edge_heap = type { %struct.VEC_edge_base }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.ira_allocno_conflict_iterator = type { i8, i8*, i32, i32, i32, i32, i64 }
%struct.ira_allocno_iterator = type { i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@optimize_size = external dso_local local_unnamed_addr global i32, align 4
@flag_branch_probabilities = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@sorted_allocnos = internal unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !0
@internal_flag_ira_verbose = external dso_local local_unnamed_addr global i32, align 4
@ira_dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [58 x i8] c"      Secondary allocation: assign hard reg %d to reg %d\0A\00", align 1
@processed_coalesced_allocno_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1828
@coloring_allocno_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1822
@ira_regno_allocno_map = external dso_local local_unnamed_addr global %struct.ira_allocno**, align 8
@allocno_coalesced_p = internal unnamed_addr global i1 false, align 1, !dbg !1973
@regno_coalesced_allocno_cost = internal unnamed_addr global i32* null, align 8, !dbg !1832
@regno_coalesced_allocno_num = internal unnamed_addr global i32* null, align 8, !dbg !1834
@ira_allocnos_num = external dso_local local_unnamed_addr global i32, align 4
@flag_ira_share_spill_slots = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_equiv_len = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_equiv_const = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@ira_reg_equiv_invariant_p = external dso_local local_unnamed_addr global i8*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"      Slot %d (freq,size):\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c" a%dr%d(%d,%d)\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@ira_spilled_reg_stack_slots_num = external dso_local local_unnamed_addr global i32, align 4
@regno_max_ref_width = internal unnamed_addr global i32* null, align 8, !dbg !1836
@reg_renumber = external dso_local local_unnamed_addr global i16*, align 8
@ira_class_hard_reg_index = external dso_local local_unnamed_addr global [27 x [53 x i16]], align 16
@ira_overall_cost = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [12 x i8] c"ira-color.c\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"      Spill %d(a%d), cost=%d\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"      Spilled regs\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@consideration_allocno_bitmap = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !1824
@.str.9 = private unnamed_addr constant [36 x i8] c"        Try assign %d(a%d), cost=%d\00", align 1
@ira_spilled_reg_stack_slots = external dso_local local_unnamed_addr global %struct.ira_spilled_reg_stack_slot*, align 8
@.str.10 = private unnamed_addr constant [39 x i8] c"      Assigning %d(freq=%d) slot %d of\00", align 1
@reg_info_p = external dso_local local_unnamed_addr global %struct.reg_info_t*, align 8
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@.str.11 = private unnamed_addr constant [43 x i8] c"      Assigning %d(freq=%d) a new slot %d\0A\00", align 1
@inv_reg_alloc_order = external dso_local local_unnamed_addr global [53 x i32], align 16
@allocno_priorities = internal unnamed_addr global i32* null, align 8, !dbg !1830
@ira_conflicts_p = external dso_local local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@ira_allocnos = external dso_local local_unnamed_addr global %struct.ira_allocno**, align 8
@ira_conflict_id_allocno_map = external dso_local local_unnamed_addr global %struct.ira_allocno**, align 8
@ira_reg_class_nregs = external dso_local local_unnamed_addr global [27 x [87 x i32]], align 16
@ira_reg_classes_intersect_p = external dso_local local_unnamed_addr global [27 x [27 x i8]], align 16
@regclass_map = external dso_local local_unnamed_addr constant [53 x i32], align 16
@ira_register_move_cost = external dso_local local_unnamed_addr global [87 x [27 x i16]*], align 16
@ira_class_hard_regs_num = external dso_local local_unnamed_addr global [27 x i32], align 16
@assign_hard_reg.costs = internal global [53 x i32] zeroinitializer, align 16, !dbg !1839
@assign_hard_reg.full_costs = internal global [53 x i32] zeroinitializer, align 16, !dbg !1884
@ira_reg_mode_hard_regset = external dso_local local_unnamed_addr global [53 x [87 x i64]], align 16
@reg_class_contents = external dso_local local_unnamed_addr global [27 x i64], align 16
@ira_class_hard_regs = external dso_local local_unnamed_addr global [27 x [53 x i16]], align 16
@prohibited_class_mode_regs = external dso_local local_unnamed_addr global [27 x [87 x i64]], align 16
@allocated_hardreg_p = internal global [53 x i8] zeroinitializer, align 16, !dbg !1894
@call_used_reg_set = external dso_local local_unnamed_addr global i64, align 8
@ira_memory_move_cost = external dso_local local_unnamed_addr global [87 x [27 x [2 x i16]]], align 16
@.str.13 = private unnamed_addr constant [38 x i8] c"(memory is more profitable %d vs %d) \00", align 1
@flag_ira_algorithm = external dso_local local_unnamed_addr global i32, align 4
@allocno_stack_vec = internal global %struct.VEC_ira_allocno_t_heap* null, align 8, !dbg !1897
@.str.14 = private unnamed_addr constant [16 x i8] c"        Pushing\00", align 1
@update_cost_check = internal unnamed_addr global i32 0, align 4, !dbg !1886
@update_cost_queue = internal unnamed_addr global %struct.ira_allocno* null, align 8, !dbg !1888
@update_cost_queue_elems = internal unnamed_addr global %struct.update_cost_queue_elem* null, align 8, !dbg !1890
@update_cost_queue_tail = internal unnamed_addr global %struct.update_cost_queue_elem* null, align 8, !dbg !1892
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@.str.15 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@ira_copies_num = external dso_local local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [50 x i8] c"      Coalescing copy %d:a%dr%d-a%dr%d (freq=%d)\0A\00", align 1
@slot_coalesced_allocnos_live_ranges = internal unnamed_addr global %struct.ira_allocno_live_range** null, align 8, !dbg !1899
@.str.17 = private unnamed_addr constant [50 x i8] c"      Coalescing spilled allocnos a%dr%d->a%dr%d\0A\00", align 1
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@flag_caller_saves = external dso_local local_unnamed_addr global i32, align 4
@caller_save_needed = external dso_local local_unnamed_addr global i32, align 4
@.str.18 = private unnamed_addr constant [18 x i8] c": reassign to %d\0A\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@regstat_n_sets_and_refs = external dso_local local_unnamed_addr global %struct.regstat_n_sets_and_refs_t*, align 8
@removed_splay_allocno_vec = internal global %struct.VEC_ira_allocno_t_heap* null, align 8, !dbg !1901
@allocnos_for_spilling = internal unnamed_addr global %struct.ira_allocno** null, align 8, !dbg !1903
@.str.19 = private unnamed_addr constant [17 x i8] c"splay tree nodes\00", align 1
@splay_tree_node_pool = internal unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !1905
@.str.20 = private unnamed_addr constant [27 x i8] c"\0A**** Allocnos coloring:\0A\0A\00", align 1
@ira_loop_tree_root = external dso_local local_unnamed_addr global %struct.ira_loop_tree_node*, align 8
@flag_ira_region = external dso_local local_unnamed_addr global i32, align 4
@ira_available_class_regs = external dso_local local_unnamed_addr global [27 x i32], align 16
@.str.21 = private unnamed_addr constant [55 x i8] c"\0A  Loop %d (parent %d, header bb%d, depth %d)\0A    bbs:\00", align 1
@ira_bb_nodes = external dso_local local_unnamed_addr global %struct.ira_loop_tree_node*, align 8
@.str.22 = private unnamed_addr constant [11 x i8] c"(->%d:l%d)\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"\0A    all:\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c" %dr%d\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"\0A    modified regnos:\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"\0A    border:\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"\0A    Pressure:\00", align 1
@ira_reg_class_cover_size = external dso_local local_unnamed_addr global i32, align 4
@ira_reg_class_cover = external dso_local local_unnamed_addr global [27 x i32], align 16
@.str.28 = private unnamed_addr constant [7 x i8] c" %s=%d\00", align 1
@reg_class_names = external dso_local local_unnamed_addr global [0 x i8*], align 8
@flag_ira_coalesce = external dso_local local_unnamed_addr global i32, align 4
@.str.29 = private unnamed_addr constant [12 x i8] c"      Spill\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"  -- \00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"assign hard reg %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"assign memory\0A\00", align 1
@colorable_allocno_bucket = internal global %struct.ira_allocno* null, align 8, !dbg !1928
@uncolorable_allocno_bucket = internal global %struct.ira_allocno* null, align 8, !dbg !1930
@ira_no_alloc_regs = external dso_local local_unnamed_addr global i64, align 8
@.str.34 = private unnamed_addr constant [35 x i8] c"    Reg %d of %s has %d regs less\0A\00", align 1
@uncolorable_allocnos_num = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !1932
@uncolorable_allocnos_splay_tree = internal unnamed_addr global [27 x %struct.splay_tree_s*] zeroinitializer, align 16, !dbg !1934
@.str.35 = private unnamed_addr constant [43 x i8] c"      Pushing p%d(%d) (spill for NO_REGS)\0A\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"      Pushing\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"(potential spill: %spri=%d, cost=%d)\0A\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"bad spill, \00", align 1
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"      Popping\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"assign reg %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"spill\0A\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"New iteration of spill/restore move\0A\00", align 1
@.str.44 = private unnamed_addr constant [54 x i8] c"      Moving spill/restore for a%dr%d up from loop %d\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c" - profit %d\0A\00", align 1
@ira_max_point = external dso_local local_unnamed_addr global i32, align 4

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1978 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1991, metadata !DIExpression()), !dbg !1993
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1992, metadata !DIExpression()), !dbg !1993
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1994
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1995
  ret i32 %call, !dbg !1996
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1997 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2001
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2002
  ret i32 %call, !dbg !2003
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2004 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2058, metadata !DIExpression()), !dbg !2059
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2060
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2060
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2060
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2060
  %cmp = icmp uge i8* %0, %1, !dbg !2060
  %conv1 = zext i1 %cmp to i64, !dbg !2060
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2060
  %tobool = icmp eq i64 %expval, 0, !dbg !2060
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2060

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2060
  br label %cond.end, !dbg !2060

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2060
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2060
  %2 = load i8, i8* %0, align 1, !dbg !2060
  %conv3 = zext i8 %2 to i32, !dbg !2060
  br label %cond.end, !dbg !2060

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2060
  ret i32 %cond, !dbg !2061
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2062 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2064, metadata !DIExpression()), !dbg !2065
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2066
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2066
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2066
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2066
  %cmp = icmp uge i8* %0, %1, !dbg !2066
  %conv1 = zext i1 %cmp to i64, !dbg !2066
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2066
  %tobool = icmp eq i64 %expval, 0, !dbg !2066
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2066

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2066
  br label %cond.end, !dbg !2066

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2066
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2066
  %2 = load i8, i8* %0, align 1, !dbg !2066
  %conv3 = zext i8 %2 to i32, !dbg !2066
  br label %cond.end, !dbg !2066

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2066
  ret i32 %cond, !dbg !2067
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2068 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2069
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2069
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2069
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2069
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2069
  %cmp = icmp uge i8* %1, %2, !dbg !2069
  %conv1 = zext i1 %cmp to i64, !dbg !2069
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2069
  %tobool = icmp eq i64 %expval, 0, !dbg !2069
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2069

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2069
  br label %cond.end, !dbg !2069

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2069
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2069
  %3 = load i8, i8* %1, align 1, !dbg !2069
  %conv3 = zext i8 %3 to i32, !dbg !2069
  br label %cond.end, !dbg !2069

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2069
  ret i32 %cond, !dbg !2070
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2071 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2075, metadata !DIExpression()), !dbg !2076
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2077
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2078
  ret i32 %call, !dbg !2079
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2080 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2084, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2085, metadata !DIExpression()), !dbg !2086
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2087
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2087
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2087
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2087
  %cmp = icmp uge i8* %0, %1, !dbg !2087
  %conv1 = zext i1 %cmp to i64, !dbg !2087
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2087
  %tobool = icmp eq i64 %expval, 0, !dbg !2087
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2087

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2087
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2087
  br label %cond.end, !dbg !2087

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2087
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2087
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2087
  store i8 %conv2, i8* %0, align 1, !dbg !2087
  %conv6 = and i32 %__c, 255, !dbg !2087
  br label %cond.end, !dbg !2087

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2087
  ret i32 %cond, !dbg !2088
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2089 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2091, metadata !DIExpression()), !dbg !2093
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2092, metadata !DIExpression()), !dbg !2093
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2094
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2094
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2094
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2094
  %cmp = icmp uge i8* %0, %1, !dbg !2094
  %conv1 = zext i1 %cmp to i64, !dbg !2094
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2094
  %tobool = icmp eq i64 %expval, 0, !dbg !2094
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2094

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2094
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2094
  br label %cond.end, !dbg !2094

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2094
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2094
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2094
  store i8 %conv2, i8* %0, align 1, !dbg !2094
  %conv6 = and i32 %__c, 255, !dbg !2094
  br label %cond.end, !dbg !2094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2094
  ret i32 %cond, !dbg !2095
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2096 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2098, metadata !DIExpression()), !dbg !2099
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2100
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2100
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2100
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2100
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2100
  %cmp = icmp uge i8* %1, %2, !dbg !2100
  %conv1 = zext i1 %cmp to i64, !dbg !2100
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2100
  %tobool = icmp eq i64 %expval, 0, !dbg !2100
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2100

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2100
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2100
  br label %cond.end, !dbg !2100

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2100
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2100
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2100
  store i8 %conv4, i8* %1, align 1, !dbg !2100
  %conv6 = and i32 %__c, 255, !dbg !2100
  br label %cond.end, !dbg !2100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2100
  ret i32 %cond, !dbg !2101
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2102 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2108, metadata !DIExpression()), !dbg !2111
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2109, metadata !DIExpression()), !dbg !2111
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2110, metadata !DIExpression()), !dbg !2111
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2112
  ret i64 %call, !dbg !2113
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2114 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2116, metadata !DIExpression()), !dbg !2117
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2118
  %0 = load i32, i32* %_flags, align 8, !dbg !2118
  %and = lshr i32 %0, 4, !dbg !2118
  %and.lobit = and i32 %and, 1, !dbg !2118
  ret i32 %and.lobit, !dbg !2119
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2120 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2122, metadata !DIExpression()), !dbg !2123
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2124
  %0 = load i32, i32* %_flags, align 8, !dbg !2124
  %and = lshr i32 %0, 5, !dbg !2124
  %and.lobit = and i32 %and, 1, !dbg !2124
  ret i32 %and.lobit, !dbg !2125
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2126 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2129, metadata !DIExpression()), !dbg !2130
  %__c.off = add i32 %__c, 128, !dbg !2131
  %0 = icmp ult i32 %__c.off, 384, !dbg !2131
  br i1 %0, label %cond.true, label %cond.end, !dbg !2131

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2132
  %1 = load i32*, i32** %call, align 8, !dbg !2133
  %idxprom = sext i32 %__c to i64, !dbg !2134
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2134
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2134
  br label %cond.end, !dbg !2135

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2135
  ret i32 %cond, !dbg !2136
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2137 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2139, metadata !DIExpression()), !dbg !2140
  %__c.off = add i32 %__c, 128, !dbg !2141
  %0 = icmp ult i32 %__c.off, 384, !dbg !2141
  br i1 %0, label %cond.true, label %cond.end, !dbg !2141

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2142
  %1 = load i32*, i32** %call, align 8, !dbg !2143
  %idxprom = sext i32 %__c to i64, !dbg !2144
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2144
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2144
  br label %cond.end, !dbg !2145

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2145
  ret i32 %cond, !dbg !2146
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2147 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2152, metadata !DIExpression()), !dbg !2153
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2154
  %conv = trunc i64 %call to i32, !dbg !2155
  ret i32 %conv, !dbg !2156
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2157 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2161, metadata !DIExpression()), !dbg !2162
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2163
  ret i64 %call, !dbg !2164
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2165 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2170, metadata !DIExpression()), !dbg !2171
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2172
  ret i64 %call, !dbg !2173
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2174 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2180, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2181, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2182, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2183, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2184, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 0, metadata !2185, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2186, metadata !DIExpression()), !dbg !2190
  br label %while.cond, !dbg !2191

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2192
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2186, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2185, metadata !DIExpression()), !dbg !2190
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2193
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2191

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2194
  %div = lshr i64 %add, 1, !dbg !2196
  call void @llvm.dbg.value(metadata i64 %div, metadata !2187, metadata !DIExpression()), !dbg !2190
  %mul = mul i64 %div, %__size, !dbg !2197
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2198
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2188, metadata !DIExpression()), !dbg !2190
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2199
  call void @llvm.dbg.value(metadata i32 %call, metadata !2189, metadata !DIExpression()), !dbg !2190
  %cmp1 = icmp slt i32 %call, 0, !dbg !2200
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2202

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2203
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2205

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2206
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2185, metadata !DIExpression()), !dbg !2190
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2190
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2186, metadata !DIExpression()), !dbg !2190
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2185, metadata !DIExpression()), !dbg !2190
  br label %while.cond, !dbg !2191, !llvm.loop !2207

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2190
  ret i8* %retval.0, !dbg !2209
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2210 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2216, metadata !DIExpression()), !dbg !2217
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2218
  ret double %call, !dbg !2219
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2220 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2229, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2230, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.value(metadata i32 %base, metadata !2231, metadata !DIExpression()), !dbg !2232
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2233
  ret i64 %call, !dbg !2234
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2235 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2241, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2242, metadata !DIExpression()), !dbg !2244
  call void @llvm.dbg.value(metadata i32 %base, metadata !2243, metadata !DIExpression()), !dbg !2244
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2245
  ret i64 %call, !dbg !2246
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2247 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2258, metadata !DIExpression()), !dbg !2261
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2259, metadata !DIExpression()), !dbg !2261
  call void @llvm.dbg.value(metadata i32 %base, metadata !2260, metadata !DIExpression()), !dbg !2261
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2262
  ret i64 %call, !dbg !2263
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2264 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2268, metadata !DIExpression()), !dbg !2271
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2269, metadata !DIExpression()), !dbg !2271
  call void @llvm.dbg.value(metadata i32 %base, metadata !2270, metadata !DIExpression()), !dbg !2271
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2272
  ret i64 %call, !dbg !2273
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2274 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2314, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2315, metadata !DIExpression()), !dbg !2316
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2317
  ret i32 %call, !dbg !2318
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2319 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2321, metadata !DIExpression()), !dbg !2323
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2322, metadata !DIExpression()), !dbg !2323
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2324
  ret i32 %call, !dbg !2325
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2326 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2330, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2331, metadata !DIExpression()), !dbg !2332
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2333
  ret i32 %call, !dbg !2334
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2335 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2339, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2340, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2341, metadata !DIExpression()), !dbg !2343
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2342, metadata !DIExpression()), !dbg !2343
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2344
  ret i32 %call, !dbg !2345
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2346 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2350, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2351, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2352, metadata !DIExpression()), !dbg !2353
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2352, metadata !DIExpression(DW_OP_deref)), !dbg !2353
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2354
  ret i32 %call, !dbg !2355
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2356 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2360, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2361, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2362, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2363, metadata !DIExpression()), !dbg !2364
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2363, metadata !DIExpression(DW_OP_deref)), !dbg !2364
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2365
  ret i32 %call, !dbg !2366
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2367 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2391, metadata !DIExpression()), !dbg !2393
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2392, metadata !DIExpression()), !dbg !2393
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2394
  ret i32 %call, !dbg !2395
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2396 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2398, metadata !DIExpression()), !dbg !2400
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2399, metadata !DIExpression()), !dbg !2400
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2401
  ret i32 %call, !dbg !2402
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2403 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2407, metadata !DIExpression()), !dbg !2409
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2408, metadata !DIExpression()), !dbg !2409
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2410
  ret i32 %call, !dbg !2411
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2412 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2416, metadata !DIExpression()), !dbg !2420
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2417, metadata !DIExpression()), !dbg !2420
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2418, metadata !DIExpression()), !dbg !2420
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2419, metadata !DIExpression()), !dbg !2420
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2421
  ret i32 %call, !dbg !2422
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %loop_node, i32 %regno, i8 zeroext %exit_p) local_unnamed_addr #5 !dbg !2423 {
entry:
  %ei = alloca %struct.edge_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %edges = alloca %struct.VEC_edge_heap*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_node, metadata !2427, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %regno, metadata !2428, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i8 %exit_p, metadata !2429, metadata !DIExpression()), !dbg !2446
  %0 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2447
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !2447
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !2448
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2448
  %2 = bitcast %struct.VEC_edge_heap** %edges to i8*, !dbg !2449
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2449
  call void @llvm.dbg.value(metadata i32 0, metadata !2430, metadata !DIExpression()), !dbg !2446
  %tobool = icmp eq i8 %exit_p, 0, !dbg !2450
  br i1 %tobool, label %if.then, label %if.else, !dbg !2452

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2453
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2453
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 1, !dbg !2453
  %4 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2453
  %header = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 2, !dbg !2453
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !2453
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 0, !dbg !2453
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #8, !dbg !2453
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2453
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !2453
  store i32 %7, i32* %6, align 8, !dbg !2453
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2453
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !2453
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !2453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !2453
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2453
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2456
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2456
  %cmp4 = icmp slt i32 %regno, 0, !dbg !2458
  br i1 %cmp4, label %if.then.split.us, label %if.then.if.then.split_crit_edge, !dbg !2453

if.then.if.then.split_crit_edge:                  ; preds = %if.then
  br label %for.cond, !dbg !2453

if.then.split.us:                                 ; preds = %if.then
  br label %for.cond.us, !dbg !2453

for.cond.us:                                      ; preds = %for.inc.us, %if.then.split.us
  %freq.0.us = phi i32 [ 0, %if.then.split.us ], [ %freq.1.us, %for.inc.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  %12 = load i32, i32* %10, align 8, !dbg !2460
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !2460
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2439, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  %call1.us = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #8, !dbg !2460
  %tobool2.us = icmp eq i8 %call1.us, 0, !dbg !2453
  br i1 %tobool2.us, label %if.end50.loopexit.us-lcssa.us, label %for.body.us, !dbg !2453

for.body.us:                                      ; preds = %for.cond.us
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2461
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !2439, metadata !DIExpression()), !dbg !2446
  %src.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 0, !dbg !2462
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %src.us, align 8, !dbg !2462
  %16 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2463
  %latch.us = getelementptr inbounds %struct.loop, %struct.loop* %16, i64 0, i32 3, !dbg !2464
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %latch.us, align 8, !dbg !2464
  %cmp.us = icmp eq %struct.basic_block_def* %15, %17, !dbg !2465
  br i1 %cmp.us, label %for.inc.us, label %land.lhs.true.us, !dbg !2466

land.lhs.true.us:                                 ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !2439, metadata !DIExpression()), !dbg !2446
  %frequency.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 11, !dbg !2467
  %18 = load i32, i32* %frequency.us, align 8, !dbg !2467
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !2439, metadata !DIExpression()), !dbg !2446
  %probability.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 8, !dbg !2467
  %19 = load i32, i32* %probability.us, align 4, !dbg !2467
  %mul.us = mul nsw i32 %18, %19, !dbg !2467
  %add.us = add nsw i32 %mul.us, 5000, !dbg !2467
  %div.us = sdiv i32 %add.us, 10000, !dbg !2467
  %add16.us = add nsw i32 %freq.0.us, %div.us, !dbg !2468
  call void @llvm.dbg.value(metadata i32 %add16.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %for.inc.us, !dbg !2469

for.inc.us:                                       ; preds = %land.lhs.true.us, %for.body.us
  %freq.1.us = phi i32 [ %add16.us, %land.lhs.true.us ], [ %freq.0.us, %for.body.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.1.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2432, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !2460
  br label %for.cond.us, !dbg !2460, !llvm.loop !2470

if.end50.loopexit.us-lcssa.us:                    ; preds = %for.cond.us
  %freq.0.us.lcssa = phi i32 [ %freq.0.us, %for.cond.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.us.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.us.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %if.end50.loopexit, !dbg !2472

for.cond:                                         ; preds = %for.inc, %if.then.if.then.split_crit_edge
  %freq.0 = phi i32 [ 0, %if.then.if.then.split_crit_edge ], [ %freq.1, %for.inc ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0, metadata !2430, metadata !DIExpression()), !dbg !2446
  %20 = load i32, i32* %10, align 8, !dbg !2460
  %21 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !2460
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2439, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %20, %struct.VEC_edge_gc** %21, %struct.edge_def** nonnull %e) #8, !dbg !2460
  %tobool2 = icmp eq i8 %call1, 0, !dbg !2453
  br i1 %tobool2, label %if.end50.loopexit.us-lcssa, label %for.body, !dbg !2453

for.body:                                         ; preds = %for.cond
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2461
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !2439, metadata !DIExpression()), !dbg !2446
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 0, !dbg !2462
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2462
  %24 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2463
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %24, i64 0, i32 3, !dbg !2464
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !2464
  %cmp = icmp eq %struct.basic_block_def* %23, %25, !dbg !2465
  br i1 %cmp, label %for.inc, label %land.lhs.true, !dbg !2466

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !2439, metadata !DIExpression()), !dbg !2446
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 9, !dbg !2473
  %26 = load i32, i32* %index, align 8, !dbg !2473
  %call6 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %26) #8, !dbg !2473
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call6, i64 0, i32 3, !dbg !2473
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !2473
  %call7 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %27, i32 %regno) #6, !dbg !2474
  %tobool8 = icmp eq i32 %call7, 0, !dbg !2474
  br i1 %tobool8, label %for.inc, label %land.lhs.true9, !dbg !2475

land.lhs.true9:                                   ; preds = %land.lhs.true
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2476
  call void @llvm.dbg.value(metadata %struct.edge_def* %28, metadata !2439, metadata !DIExpression()), !dbg !2446
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i64 0, i32 1, !dbg !2476
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2476
  %index10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 9, !dbg !2476
  %30 = load i32, i32* %index10, align 8, !dbg !2476
  %call11 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %30) #8, !dbg !2476
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call11, i64 0, i32 2, !dbg !2476
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !2476
  %call12 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %31, i32 %regno) #6, !dbg !2477
  %tobool13 = icmp eq i32 %call12, 0, !dbg !2477
  br i1 %tobool13, label %for.inc, label %if.then14, !dbg !2478

if.then14:                                        ; preds = %land.lhs.true9
  %32 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2467
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !2439, metadata !DIExpression()), !dbg !2446
  %src15 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 0, !dbg !2467
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %src15, align 8, !dbg !2467
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i64 0, i32 11, !dbg !2467
  %34 = load i32, i32* %frequency, align 8, !dbg !2467
  call void @llvm.dbg.value(metadata %struct.edge_def* %32, metadata !2439, metadata !DIExpression()), !dbg !2446
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %32, i64 0, i32 8, !dbg !2467
  %35 = load i32, i32* %probability, align 4, !dbg !2467
  %mul = mul nsw i32 %34, %35, !dbg !2467
  %add = add nsw i32 %mul, 5000, !dbg !2467
  %div = sdiv i32 %add, 10000, !dbg !2467
  %add16 = add nsw i32 %freq.0, %div, !dbg !2468
  call void @llvm.dbg.value(metadata i32 %add16, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %for.inc, !dbg !2469

for.inc:                                          ; preds = %land.lhs.true9, %land.lhs.true, %for.body, %if.then14
  %freq.1 = phi i32 [ %add16, %if.then14 ], [ %freq.0, %land.lhs.true9 ], [ %freq.0, %land.lhs.true ], [ %freq.0, %for.body ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.1, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2432, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !2460
  br label %for.cond, !dbg !2460, !llvm.loop !2470

if.else:                                          ; preds = %entry
  %loop17 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_node, i64 0, i32 1, !dbg !2479
  %36 = load %struct.loop*, %struct.loop** %loop17, align 8, !dbg !2479
  %call18 = tail call %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop* %36) #6, !dbg !2481
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %call18, metadata !2440, metadata !DIExpression()), !dbg !2446
  store %struct.VEC_edge_heap* %call18, %struct.VEC_edge_heap** %edges, align 8, !dbg !2482
  call void @llvm.dbg.value(metadata i32 0, metadata !2431, metadata !DIExpression()), !dbg !2446
  %cmp24 = icmp slt i32 %regno, 0, !dbg !2483
  br i1 %cmp24, label %if.else.split.us, label %if.else.if.else.split_crit_edge, !dbg !2487

if.else.if.else.split_crit_edge:                  ; preds = %if.else
  br label %for.cond19, !dbg !2487

if.else.split.us:                                 ; preds = %if.else
  br label %for.cond19.us, !dbg !2487

for.cond19.us:                                    ; preds = %for.body23.us, %if.else.split.us
  %37 = phi %struct.VEC_edge_heap* [ %call18, %if.else.split.us ], [ %.pre1, %for.body23.us ], !dbg !2488
  %freq.2.us = phi i32 [ 0, %if.else.split.us ], [ %add46.us, %for.body23.us ], !dbg !2446
  %i.0.us = phi i32 [ 0, %if.else.split.us ], [ %inc.us, %for.body23.us ], !dbg !2489
  call void @llvm.dbg.value(metadata i32 %i.0.us, metadata !2431, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %37, metadata !2440, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %37, metadata !2440, metadata !DIExpression()), !dbg !2446
  %base.us = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %37, i64 0, i32 0, !dbg !2488
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2439, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  %call21.us = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base.us, i32 %i.0.us, %struct.edge_def** nonnull %e) #8, !dbg !2488
  %tobool22.us = icmp eq i32 %call21.us, 0, !dbg !2490
  br i1 %tobool22.us, label %for.end49.us-lcssa.us, label %for.body23.us, !dbg !2490

for.body23.us:                                    ; preds = %for.cond19.us
  %38 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2491
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2439, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !2439, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 undef, metadata !2430, metadata !DIExpression()), !dbg !2446
  %src40.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 0, !dbg !2491
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %src40.us, align 8, !dbg !2491
  %frequency41.us = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i64 0, i32 11, !dbg !2491
  %40 = load i32, i32* %frequency41.us, align 8, !dbg !2491
  %probability42.us = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 8, !dbg !2491
  %41 = load i32, i32* %probability42.us, align 4, !dbg !2491
  %mul43.us = mul nsw i32 %40, %41, !dbg !2491
  %add44.us = add nsw i32 %mul43.us, 5000, !dbg !2491
  %div45.us = sdiv i32 %add44.us, 10000, !dbg !2491
  %add46.us = add nsw i32 %freq.2.us, %div45.us, !dbg !2492
  call void @llvm.dbg.value(metadata i32 %add46.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %add46.us, metadata !2430, metadata !DIExpression()), !dbg !2446
  %inc.us = add nuw nsw i32 %i.0.us, 1, !dbg !2493
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !2431, metadata !DIExpression()), !dbg !2446
  %.pre1 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !2488
  br label %for.cond19.us, !dbg !2494, !llvm.loop !2495

for.end49.us-lcssa.us:                            ; preds = %for.cond19.us
  %freq.2.us.lcssa = phi i32 [ %freq.2.us, %for.cond19.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.us.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.us.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %for.end49, !dbg !2497

for.cond19:                                       ; preds = %for.inc48, %if.else.if.else.split_crit_edge
  %42 = phi %struct.VEC_edge_heap* [ %call18, %if.else.if.else.split_crit_edge ], [ %.pre, %for.inc48 ], !dbg !2488
  %freq.2 = phi i32 [ 0, %if.else.if.else.split_crit_edge ], [ %freq.3, %for.inc48 ], !dbg !2446
  %i.0 = phi i32 [ 0, %if.else.if.else.split_crit_edge ], [ %inc, %for.inc48 ], !dbg !2489
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2431, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %42, metadata !2440, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap* %42, metadata !2440, metadata !DIExpression()), !dbg !2446
  %base = getelementptr inbounds %struct.VEC_edge_heap, %struct.VEC_edge_heap* %42, i64 0, i32 0, !dbg !2488
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2439, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  %call21 = call fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %base, i32 %i.0, %struct.edge_def** nonnull %e) #8, !dbg !2488
  %tobool22 = icmp eq i32 %call21, 0, !dbg !2490
  br i1 %tobool22, label %for.end49.us-lcssa, label %for.body23, !dbg !2490

for.body23:                                       ; preds = %for.cond19
  %43 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2498
  call void @llvm.dbg.value(metadata %struct.edge_def* %43, metadata !2439, metadata !DIExpression()), !dbg !2446
  %src26 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %43, i64 0, i32 0, !dbg !2498
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %src26, align 8, !dbg !2498
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i64 0, i32 9, !dbg !2498
  %45 = load i32, i32* %index27, align 8, !dbg !2498
  %call28 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %45) #8, !dbg !2498
  %out29 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call28, i64 0, i32 3, !dbg !2498
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out29, align 8, !dbg !2498
  %call30 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %46, i32 %regno) #6, !dbg !2499
  %tobool31 = icmp eq i32 %call30, 0, !dbg !2499
  br i1 %tobool31, label %for.inc48, label %land.lhs.true32, !dbg !2500

land.lhs.true32:                                  ; preds = %for.body23
  %47 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2501
  call void @llvm.dbg.value(metadata %struct.edge_def* %47, metadata !2439, metadata !DIExpression()), !dbg !2446
  %dest33 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %47, i64 0, i32 1, !dbg !2501
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %dest33, align 8, !dbg !2501
  %index34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i64 0, i32 9, !dbg !2501
  %49 = load i32, i32* %index34, align 8, !dbg !2501
  %call35 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %49) #8, !dbg !2501
  %in36 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call35, i64 0, i32 2, !dbg !2501
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in36, align 8, !dbg !2501
  %call37 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %50, i32 %regno) #6, !dbg !2502
  %tobool38 = icmp eq i32 %call37, 0, !dbg !2502
  br i1 %tobool38, label %for.inc48, label %if.then39, !dbg !2503

if.then39:                                        ; preds = %land.lhs.true32
  %51 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2491
  call void @llvm.dbg.value(metadata %struct.edge_def* %51, metadata !2439, metadata !DIExpression()), !dbg !2446
  %src40 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %51, i64 0, i32 0, !dbg !2491
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %src40, align 8, !dbg !2491
  %frequency41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i64 0, i32 11, !dbg !2491
  %53 = load i32, i32* %frequency41, align 8, !dbg !2491
  call void @llvm.dbg.value(metadata %struct.edge_def* %51, metadata !2439, metadata !DIExpression()), !dbg !2446
  %probability42 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %51, i64 0, i32 8, !dbg !2491
  %54 = load i32, i32* %probability42, align 4, !dbg !2491
  %mul43 = mul nsw i32 %53, %54, !dbg !2491
  %add44 = add nsw i32 %mul43, 5000, !dbg !2491
  %div45 = sdiv i32 %add44, 10000, !dbg !2491
  %add46 = add nsw i32 %freq.2, %div45, !dbg !2492
  call void @llvm.dbg.value(metadata i32 %add46, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %for.inc48, !dbg !2504

for.inc48:                                        ; preds = %land.lhs.true32, %for.body23, %if.then39
  %freq.3 = phi i32 [ %add46, %if.then39 ], [ %freq.2, %land.lhs.true32 ], [ %freq.2, %for.body23 ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.3, metadata !2430, metadata !DIExpression()), !dbg !2446
  %inc = add nuw nsw i32 %i.0, 1, !dbg !2493
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2431, metadata !DIExpression()), !dbg !2446
  %.pre = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %edges, align 8, !dbg !2488
  br label %for.cond19, !dbg !2494, !llvm.loop !2495

for.end49.us-lcssa:                               ; preds = %for.cond19
  %freq.2.lcssa5 = phi i32 [ %freq.2, %for.cond19 ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.lcssa5, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.lcssa5, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %for.end49, !dbg !2497

for.end49:                                        ; preds = %for.end49.us-lcssa.us, %for.end49.us-lcssa
  %freq.2.lcssa = phi i32 [ %freq.2.lcssa5, %for.end49.us-lcssa ], [ %freq.2.us.lcssa, %for.end49.us-lcssa.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.2.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %edges, metadata !2440, metadata !DIExpression(DW_OP_deref)), !dbg !2446
  call fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** nonnull %edges) #8, !dbg !2497
  br label %if.end50

if.end50.loopexit.us-lcssa:                       ; preds = %for.cond
  %freq.0.lcssa4 = phi i32 [ %freq.0, %for.cond ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.lcssa4, metadata !2430, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.lcssa4, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %if.end50.loopexit, !dbg !2472

if.end50.loopexit:                                ; preds = %if.end50.loopexit.us-lcssa.us, %if.end50.loopexit.us-lcssa
  %freq.0.lcssa = phi i32 [ %freq.0.lcssa4, %if.end50.loopexit.us-lcssa ], [ %freq.0.us.lcssa, %if.end50.loopexit.us-lcssa.us ], !dbg !2446
  call void @llvm.dbg.value(metadata i32 %freq.0.lcssa, metadata !2430, metadata !DIExpression()), !dbg !2446
  br label %if.end50, !dbg !2472

if.end50:                                         ; preds = %if.end50.loopexit, %for.end49
  %freq.4 = phi i32 [ %freq.2.lcssa, %for.end49 ], [ %freq.0.lcssa, %if.end50.loopexit ], !dbg !2505
  call void @llvm.dbg.value(metadata i32 %freq.4, metadata !2430, metadata !DIExpression()), !dbg !2446
  %55 = load i32, i32* @optimize_size, align 4, !dbg !2472
  %tobool51 = icmp eq i32 %55, 0, !dbg !2472
  br i1 %tobool51, label %lor.lhs.false52, label %cond.end67, !dbg !2472

lor.lhs.false52:                                  ; preds = %if.end50
  %56 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !2472
  %tobool53 = icmp eq i32 %56, 0, !dbg !2472
  br i1 %tobool53, label %cond.false57, label %land.lhs.true54, !dbg !2472

land.lhs.true54:                                  ; preds = %lor.lhs.false52
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2472
  %cfg = getelementptr inbounds %struct.function, %struct.function* %57, i64 0, i32 1, !dbg !2472
  %58 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2472
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %58, i64 0, i32 0, !dbg !2472
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2472
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i64 0, i32 8, !dbg !2472
  %60 = load i64, i64* %count, align 8, !dbg !2472
  %tobool55 = icmp eq i64 %60, 0, !dbg !2472
  br i1 %tobool55, label %cond.end67, label %cond.false57, !dbg !2472

cond.false57:                                     ; preds = %land.lhs.true54, %lor.lhs.false52
  %div59 = sdiv i32 %freq.4, 10, !dbg !2472
  %freq.4.off = add i32 %freq.4, 9, !dbg !2472
  %61 = icmp ugt i32 %freq.4.off, 18, !dbg !2472
  %spec.select = select i1 %61, i32 %div59, i32 1, !dbg !2472
  br label %cond.end67, !dbg !2472

cond.end67:                                       ; preds = %land.lhs.true54, %if.end50, %cond.false57
  %cond68 = phi i32 [ 1000, %land.lhs.true54 ], [ 1000, %if.end50 ], [ %spec.select, %cond.false57 ], !dbg !2472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !2506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !2506
  ret i32 %cond68, !dbg !2507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2508 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2512, metadata !DIExpression()), !dbg !2514
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2515
  store i32 0, i32* %index, align 8, !dbg !2516
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2517
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2518
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2519
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2519
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2519
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2520 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2526, metadata !DIExpression()), !dbg !2527
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2528
  %tobool = icmp eq i8 %call, 0, !dbg !2528
  br i1 %tobool, label %if.then, label %if.else, !dbg !2530

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #8, !dbg !2531
  br label %return, !dbg !2533

if.else:                                          ; preds = %entry
  br label %return, !dbg !2534

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !2536
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !2536
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !2536
  ret i8 %retval.0, !dbg !2537
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !2538 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !2542, metadata !DIExpression()), !dbg !2543
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2544
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2544
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2544
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !2546
  %2 = load i32, i32* %block_info_size, align 8, !dbg !2546
  %cmp = icmp ugt i32 %2, %index, !dbg !2547
  br i1 %cmp, label %if.then, label %return, !dbg !2548

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !2549
  %3 = load i8**, i8*** %block_info, align 8, !dbg !2549
  %idxprom = zext i32 %index to i64, !dbg !2550
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !2550
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !2550
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !2550
  br label %return, !dbg !2551

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !2552
  ret %struct.df_lr_bb_info* %retval.0, !dbg !2553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !2554 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !2559, metadata !DIExpression()), !dbg !2560
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !2561
  %0 = load i32, i32* %index, align 8, !dbg !2561
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !2561
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2561
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #8, !dbg !2561
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2561
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2561

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !2561
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2561
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #8, !dbg !2561
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2561
  br label %cond.end, !dbg !2561

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2561
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !2561
  %cmp = icmp ult i32 %0, %call2, !dbg !2561
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !2561

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2561
  br label %cond.end5, !dbg !2561

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !2562
  %inc = add i32 %5, 1, !dbg !2562
  store i32 %inc, i32* %index, align 8, !dbg !2562
  ret void, !dbg !2563
}

declare dso_local %struct.VEC_edge_heap* @get_loop_exit_edges(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_iterate(%struct.VEC_edge_base* %vec_, i32 %ix_, %struct.edge_def** %ptr) unnamed_addr #0 !dbg !2564 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !2570, metadata !DIExpression()), !dbg !2573
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2571, metadata !DIExpression()), !dbg !2573
  call void @llvm.dbg.value(metadata %struct.edge_def** %ptr, metadata !2572, metadata !DIExpression()), !dbg !2573
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !2574
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2574

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !2574
  %0 = load i32, i32* %num, align 8, !dbg !2574
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2574
  br i1 %cmp, label %if.then, label %if.else, !dbg !2576

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2577
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2577
  %1 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !2577
  br label %return, !dbg !2577

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2579

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ null, %if.else ], [ %1, %if.then ], !dbg !2581
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2581
  store %struct.edge_def* %storemerge, %struct.edge_def** %ptr, align 8, !dbg !2581
  ret i32 %retval.0, !dbg !2576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_edge_heap_free(%struct.VEC_edge_heap** %vec_) unnamed_addr #0 !dbg !2582 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_heap** %vec_, metadata !2587, metadata !DIExpression()), !dbg !2588
  %0 = load %struct.VEC_edge_heap*, %struct.VEC_edge_heap** %vec_, align 8, !dbg !2589
  %tobool = icmp eq %struct.VEC_edge_heap* %0, null, !dbg !2589
  br i1 %tobool, label %if.end, label %if.then, !dbg !2591

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_edge_heap* %0 to i8*, !dbg !2591
  tail call void @free(i8* nonnull %1) #6, !dbg !2589
  br label %if.end, !dbg !2589

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_edge_heap* null, %struct.VEC_edge_heap** %vec_, align 8, !dbg !2591
  ret void, !dbg !2591
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_reassign_conflict_allocnos(i32 %start_regno) local_unnamed_addr #5 !dbg !2592 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %conflict_a = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  call void @llvm.dbg.value(metadata i32 %start_regno, metadata !2596, metadata !DIExpression()), !dbg !2609
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !2610
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2610
  %1 = bitcast %struct.ira_allocno** %conflict_a to i8*, !dbg !2610
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2610
  %2 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !2611
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2) #7, !dbg !2611
  %3 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !2612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !2612
  %call = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !2613
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2603, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata i32 0, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !2604, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #8, !dbg !2614
  %4 = bitcast %struct.ira_allocno** %conflict_a to i64*, !dbg !2616
  br label %for.cond, !dbg !2614

for.cond.loopexit:                                ; preds = %for.cond18
  %allocnos_to_color_num.3.lcssa = phi i32 [ %allocnos_to_color_num.3, %for.cond18 ], !dbg !2622
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.3.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.3.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.3.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  br label %for.cond.backedge, !dbg !2614

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %allocnos_to_color_num.0 = phi i32 [ 0, %entry ], [ %allocnos_to_color_num.0.be, %for.cond.backedge ], !dbg !2622
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.0, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !2599, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !2604, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  %call1 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #8, !dbg !2623
  %tobool = icmp eq i8 %call1, 0, !dbg !2614
  br i1 %tobool, label %for.end32, label %for.body, !dbg !2614

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !2624
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !2599, metadata !DIExpression()), !dbg !2609
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 31, !dbg !2624
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !2624
  %bf.clear = and i16 %bf.load, 256, !dbg !2624
  %tobool2 = icmp eq i16 %bf.clear, 0, !dbg !2624
  br i1 %tobool2, label %land.lhs.true, label %if.end12, !dbg !2626

land.lhs.true:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !2599, metadata !DIExpression()), !dbg !2609
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 0, !dbg !2627
  %6 = load i32, i32* %num, align 8, !dbg !2627
  %call3 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %6) #6, !dbg !2628
  %tobool4 = icmp eq i32 %call3, 0, !dbg !2628
  br i1 %tobool4, label %if.then, label %if.end12, !dbg !2629

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !2630
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !2599, metadata !DIExpression()), !dbg !2609
  %cover_class5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 9, !dbg !2630
  %8 = load i32, i32* %cover_class5, align 8, !dbg !2630
  %cmp = icmp eq i32 %8, 0, !dbg !2633
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !2599, metadata !DIExpression()), !dbg !2609
  br i1 %cmp, label %if.else, label %if.then6, !dbg !2634

if.then6:                                         ; preds = %if.then
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !2635
  %inc = add nsw i32 %allocnos_to_color_num.0, 1, !dbg !2636
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2598, metadata !DIExpression()), !dbg !2609
  %idxprom = sext i32 %allocnos_to_color_num.0 to i64, !dbg !2635
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %idxprom, !dbg !2635
  store %struct.ira_allocno* %7, %struct.ira_allocno** %arrayidx, align 8, !dbg !2637
  %.pre = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !2638
  br label %if.end, !dbg !2635

if.else:                                          ; preds = %if.then
  %assigned_p7 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 31, !dbg !2639
  %bf.load8 = load i16, i16* %assigned_p7, align 4, !dbg !2641
  %bf.set = or i16 %bf.load8, 256, !dbg !2641
  store i16 %bf.set, i16* %assigned_p7, align 4, !dbg !2641
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !2599, metadata !DIExpression()), !dbg !2609
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 3, !dbg !2642
  store i32 -1, i32* %hard_regno, align 4, !dbg !2643
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %10 = phi %struct.ira_allocno* [ %.pre, %if.then6 ], [ %7, %if.else ], !dbg !2638
  %allocnos_to_color_num.1 = phi i32 [ %inc, %if.then6 ], [ %allocnos_to_color_num.0, %if.else ], !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.1, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %10, metadata !2599, metadata !DIExpression()), !dbg !2609
  %num10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 0, !dbg !2638
  %11 = load i32, i32* %num10, align 8, !dbg !2638
  %call11 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %11) #6, !dbg !2644
  br label %if.end12, !dbg !2645

if.end12:                                         ; preds = %land.lhs.true, %for.body, %if.end
  %allocnos_to_color_num.2 = phi i32 [ %allocnos_to_color_num.0, %for.body ], [ %allocnos_to_color_num.0, %land.lhs.true ], [ %allocnos_to_color_num.1, %if.end ], !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.2, metadata !2598, metadata !DIExpression()), !dbg !2609
  %12 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !2646
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !2599, metadata !DIExpression()), !dbg !2609
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 1, !dbg !2646
  %13 = load i32, i32* %regno, align 4, !dbg !2646
  %cmp13 = icmp slt i32 %13, %start_regno, !dbg !2648
  br i1 %cmp13, label %if.then16, label %lor.lhs.false, !dbg !2649

lor.lhs.false:                                    ; preds = %if.end12
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !2599, metadata !DIExpression()), !dbg !2609
  %cover_class14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 9, !dbg !2650
  %14 = load i32, i32* %cover_class14, align 8, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %14, metadata !2602, metadata !DIExpression()), !dbg !2609
  %cmp15 = icmp eq i32 %14, 0, !dbg !2651
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2652

if.then16:                                        ; preds = %lor.lhs.false, %if.end12
  br label %for.cond.backedge, !dbg !2653

for.cond.backedge:                                ; preds = %if.then16, %for.cond.loopexit
  %allocnos_to_color_num.0.be = phi i32 [ %allocnos_to_color_num.2, %if.then16 ], [ %allocnos_to_color_num.3.lcssa, %for.cond.loopexit ]
  br label %for.cond, !dbg !2609, !llvm.loop !2654

if.end17:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !2599, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %12) #8, !dbg !2656
  br label %for.cond18, !dbg !2656

for.cond18:                                       ; preds = %for.inc, %if.end17
  %allocnos_to_color_num.3 = phi i32 [ %allocnos_to_color_num.2, %if.end17 ], [ %allocnos_to_color_num.4, %for.inc ], !dbg !2622
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.3, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_a, metadata !2600, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  %call19 = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_a) #8, !dbg !2657
  %tobool20 = icmp eq i8 %call19, 0, !dbg !2656
  br i1 %tobool20, label %for.cond.loopexit, label %for.body21, !dbg !2656, !llvm.loop !2654

for.body21:                                       ; preds = %for.cond18
  %15 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_a, align 8, !dbg !2658
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %15, metadata !2600, metadata !DIExpression()), !dbg !2609
  %num22 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %15, i64 0, i32 0, !dbg !2658
  %16 = load i32, i32* %num22, align 8, !dbg !2658
  %call23 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %16) #6, !dbg !2660
  %tobool24 = icmp eq i32 %call23, 0, !dbg !2660
  br i1 %tobool24, label %if.end26, label %for.inc, !dbg !2661

if.end26:                                         ; preds = %for.body21
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_a, align 8, !dbg !2662
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !2600, metadata !DIExpression()), !dbg !2609
  %num27 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 0, !dbg !2662
  %18 = load i32, i32* %num27, align 8, !dbg !2662
  %call28 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %18) #6, !dbg !2663
  %19 = load i64, i64* %4, align 8, !dbg !2664
  %20 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !2665
  %inc29 = add nsw i32 %allocnos_to_color_num.3, 1, !dbg !2666
  call void @llvm.dbg.value(metadata i32 %inc29, metadata !2598, metadata !DIExpression()), !dbg !2609
  %idxprom30 = sext i32 %allocnos_to_color_num.3 to i64, !dbg !2665
  %arrayidx31 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %20, i64 %idxprom30, !dbg !2665
  %21 = bitcast %struct.ira_allocno** %arrayidx31 to i64*, !dbg !2667
  store i64 %19, i64* %21, align 8, !dbg !2667
  br label %for.inc, !dbg !2668

for.inc:                                          ; preds = %for.body21, %if.end26
  %allocnos_to_color_num.4 = phi i32 [ %inc29, %if.end26 ], [ %allocnos_to_color_num.3, %for.body21 ], !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.4, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !2601, metadata !DIExpression(DW_OP_deref)), !dbg !2609
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !2657
  br label %for.cond18, !dbg !2657, !llvm.loop !2669

for.end32:                                        ; preds = %for.cond
  %allocnos_to_color_num.0.lcssa = phi i32 [ %allocnos_to_color_num.0, %for.cond ], !dbg !2622
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.0.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.0.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @llvm.dbg.value(metadata i32 %allocnos_to_color_num.0.lcssa, metadata !2598, metadata !DIExpression()), !dbg !2609
  call void @ira_free_bitmap(%struct.bitmap_head_def* %call) #6, !dbg !2671
  %cmp33 = icmp sgt i32 %allocnos_to_color_num.0.lcssa, 1, !dbg !2672
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !2674

if.then34:                                        ; preds = %for.end32
  %22 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !2675
  call fastcc void @setup_allocno_priorities(%struct.ira_allocno** %22, i32 %allocnos_to_color_num.0.lcssa) #8, !dbg !2677
  %23 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !2678
  %conv = sext i32 %allocnos_to_color_num.0.lcssa to i64, !dbg !2679
  call void @spec_qsort(i8* %23, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @allocno_priority_compare_func) #6, !dbg !2680
  br label %if.end35, !dbg !2681

if.end35:                                         ; preds = %if.then34, %for.end32
  call void @llvm.dbg.value(metadata i32 0, metadata !2597, metadata !DIExpression()), !dbg !2609
  %24 = bitcast %struct.ira_allocno** %a to i64*, !dbg !2682
  %25 = sext i32 %allocnos_to_color_num.0.lcssa to i64, !dbg !2686
  br label %for.cond36, !dbg !2686

for.cond36:                                       ; preds = %for.body39, %if.end35
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body39 ], [ 0, %if.end35 ], !dbg !2687
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !2597, metadata !DIExpression()), !dbg !2609
  %cmp37 = icmp slt i64 %indvars.iv3, %25, !dbg !2688
  br i1 %cmp37, label %for.body39, label %for.cond48.preheader, !dbg !2689

for.cond48.preheader:                             ; preds = %for.cond36
  %26 = sext i32 %allocnos_to_color_num.0.lcssa to i64, !dbg !2690
  br label %for.cond48, !dbg !2690

for.body39:                                       ; preds = %for.cond36
  %27 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !2692
  %arrayidx41 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %27, i64 %indvars.iv3, !dbg !2692
  %28 = bitcast %struct.ira_allocno** %arrayidx41 to i64*, !dbg !2692
  %29 = load i64, i64* %28, align 8, !dbg !2692
  store i64 %29, i64* %24, align 8, !dbg !2693
  %.cast1 = inttoptr i64 %29 to %struct.ira_allocno*, !dbg !2694
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast1, metadata !2599, metadata !DIExpression()), !dbg !2609
  %assigned_p42 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast1, i64 0, i32 31, !dbg !2694
  %bf.load43 = load i16, i16* %assigned_p42, align 4, !dbg !2695
  %bf.clear44 = and i16 %bf.load43, -257, !dbg !2695
  store i16 %bf.clear44, i16* %assigned_p42, align 4, !dbg !2695
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast1, metadata !2599, metadata !DIExpression()), !dbg !2609
  call fastcc void @update_curr_costs(%struct.ira_allocno* %.cast1) #8, !dbg !2696
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !2697
  call void @llvm.dbg.value(metadata i32 undef, metadata !2597, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2609
  br label %for.cond36, !dbg !2698, !llvm.loop !2699

for.cond48:                                       ; preds = %for.cond48.preheader, %for.inc68
  %indvars.iv = phi i64 [ 0, %for.cond48.preheader ], [ %indvars.iv.next, %for.inc68 ], !dbg !2701
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2597, metadata !DIExpression()), !dbg !2609
  %cmp49 = icmp slt i64 %indvars.iv, %26, !dbg !2702
  br i1 %cmp49, label %for.body51, label %for.end70, !dbg !2690

for.body51:                                       ; preds = %for.cond48
  %30 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !2704
  %arrayidx53 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %30, i64 %indvars.iv, !dbg !2704
  %31 = bitcast %struct.ira_allocno** %arrayidx53 to i64*, !dbg !2704
  %32 = load i64, i64* %31, align 8, !dbg !2704
  store i64 %32, i64* %24, align 8, !dbg !2706
  %.cast = inttoptr i64 %32 to %struct.ira_allocno*, !dbg !2707
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !2599, metadata !DIExpression()), !dbg !2609
  %call54 = call fastcc zeroext i8 @assign_hard_reg(%struct.ira_allocno* %.cast, i8 zeroext 1) #8, !dbg !2709
  %tobool55 = icmp eq i8 %call54, 0, !dbg !2709
  br i1 %tobool55, label %for.inc68, label %if.then56, !dbg !2710

if.then56:                                        ; preds = %for.body51
  %33 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !2711
  %cmp57 = icmp sgt i32 %33, 3, !dbg !2714
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !2715
  %cmp60 = icmp ne %struct._IO_FILE* %34, null, !dbg !2716
  %or.cond = and i1 %cmp57, %cmp60, !dbg !2717
  br i1 %or.cond, label %if.then62, label %for.inc68, !dbg !2717

if.then62:                                        ; preds = %if.then56
  %35 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !2718
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %35, metadata !2599, metadata !DIExpression()), !dbg !2609
  %hard_regno63 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %35, i64 0, i32 3, !dbg !2718
  %36 = load i32, i32* %hard_regno63, align 4, !dbg !2718
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %35, metadata !2599, metadata !DIExpression()), !dbg !2609
  %regno64 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %35, i64 0, i32 1, !dbg !2719
  %37 = load i32, i32* %regno64, align 4, !dbg !2719
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %34, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 %36, i32 %37) #6, !dbg !2720
  br label %for.inc68, !dbg !2720

for.inc68:                                        ; preds = %for.body51, %if.then62, %if.then56
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2721
  call void @llvm.dbg.value(metadata i32 undef, metadata !2597, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2609
  br label %for.cond48, !dbg !2722, !llvm.loop !2723

for.end70:                                        ; preds = %for.cond48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !2725
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2) #7, !dbg !2725
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2725
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2725
  ret void, !dbg !2725
}

declare dso_local %struct.bitmap_head_def* @ira_allocate_bitmap() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* %i) unnamed_addr #0 !dbg !2726 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !2731, metadata !DIExpression()), !dbg !2732
  %n = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !2733
  store i32 0, i32* %n, align 4, !dbg !2734
  ret void, !dbg !2735
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* %i, %struct.ira_allocno** %a) unnamed_addr #0 !dbg !2736 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !2740, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !2741, metadata !DIExpression()), !dbg !2743
  %n1 = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !2744
  %0 = load i32, i32* %n1, align 4, !dbg !2744
  call void @llvm.dbg.value(metadata i32 %0, metadata !2742, metadata !DIExpression()), !dbg !2743
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !2746
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !2748
  %3 = sext i32 %0 to i64, !dbg !2750
  %4 = sext i32 %1 to i64, !dbg !2750
  br label %for.cond, !dbg !2750

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %entry ], !dbg !2751
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2742, metadata !DIExpression()), !dbg !2743
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !2752
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !2753

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %2, i64 %indvars.iv, !dbg !2754
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !2754
  %cmp2 = icmp eq %struct.ira_allocno* %5, null, !dbg !2755
  br i1 %cmp2, label %for.inc, label %if.then, !dbg !2756

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.ira_allocno* [ %5, %for.body ], !dbg !2754
  %indvars.iv.lcssa3 = phi i64 [ %indvars.iv, %for.body ], !dbg !2751
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !2742, metadata !DIExpression()), !dbg !2743
  %6 = ptrtoint %struct.ira_allocno* %.lcssa to i64, !dbg !2756
  %7 = trunc i64 %indvars.iv.lcssa3 to i32, !dbg !2743
  call void @llvm.dbg.value(metadata i32 %7, metadata !2742, metadata !DIExpression()), !dbg !2743
  call void @llvm.dbg.value(metadata i32 %7, metadata !2742, metadata !DIExpression()), !dbg !2743
  %8 = bitcast %struct.ira_allocno** %a to i64*, !dbg !2757
  store i64 %6, i64* %8, align 8, !dbg !2757
  %add = add nsw i32 %7, 1, !dbg !2759
  store i32 %add, i32* %n1, align 4, !dbg !2760
  br label %cleanup, !dbg !2761

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !2762
  call void @llvm.dbg.value(metadata i32 undef, metadata !2742, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2743
  br label %for.cond, !dbg !2763, !llvm.loop !2764

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !2766

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %cleanup.loopexit ], !dbg !2743
  ret i8 %retval.0, !dbg !2766
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* %i, %struct.ira_allocno* %allocno) unnamed_addr #0 !dbg !2767 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %i, metadata !2772, metadata !DIExpression()), !dbg !2774
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !2773, metadata !DIExpression()), !dbg !2774
  %conflict_vec_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !2775
  %bf.load = load i16, i16* %conflict_vec_p, align 4, !dbg !2775
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !2775
  %0 = trunc i16 %bf.lshr to i8, !dbg !2775
  %conv = and i8 %0, 1, !dbg !2775
  %allocno_conflict_vec_p = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 0, !dbg !2776
  store i8 %conv, i8* %allocno_conflict_vec_p, align 8, !dbg !2777
  %conflict_allocno_array = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 23, !dbg !2778
  %1 = bitcast i8** %conflict_allocno_array to i64*, !dbg !2778
  %2 = load i64, i64* %1, align 8, !dbg !2778
  %vec = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 1, !dbg !2779
  %3 = bitcast i8** %vec to i64*, !dbg !2780
  store i64 %2, i64* %3, align 8, !dbg !2780
  %word_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 2, !dbg !2781
  store i32 0, i32* %word_num, align 8, !dbg !2782
  %tobool = icmp eq i8 %conv, 0, !dbg !2783
  %4 = inttoptr i64 %2 to i64*, !dbg !2785
  br i1 %tobool, label %if.else, label %if.then, !dbg !2785

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 6, !dbg !2786
  store i64 0, i64* %word, align 8, !dbg !2787
  %base_conflict_id = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 5, !dbg !2788
  store i32 0, i32* %base_conflict_id, align 4, !dbg !2789
  %bit_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 4, !dbg !2790
  store i32 0, i32* %bit_num, align 8, !dbg !2791
  %size = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 3, !dbg !2792
  store i32 0, i32* %size, align 4, !dbg !2793
  br label %if.end19, !dbg !2794

if.else:                                          ; preds = %entry
  %min = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 21, !dbg !2795
  %5 = load i32, i32* %min, align 8, !dbg !2795
  %max = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 22, !dbg !2798
  %6 = load i32, i32* %max, align 4, !dbg !2798
  %cmp = icmp slt i32 %6, %5, !dbg !2799
  br i1 %cmp, label %if.then3, label %if.else5, !dbg !2800

if.then3:                                         ; preds = %if.else
  %size4 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 3, !dbg !2801
  store i32 0, i32* %size4, align 4, !dbg !2802
  br label %if.end, !dbg !2803

if.else5:                                         ; preds = %if.else
  %sub = sub nsw i32 %6, %5, !dbg !2804
  %add = add nsw i32 %sub, 64, !dbg !2805
  %div = sdiv i32 %add, 64, !dbg !2806
  %mul = shl nsw i32 %div, 3, !dbg !2807
  %size10 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 3, !dbg !2808
  store i32 %mul, i32* %size10, align 4, !dbg !2809
  %7 = icmp ugt i32 %sub, -128
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  %8 = phi i1 [ %7, %if.else5 ], [ true, %if.then3 ]
  %bit_num11 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 4, !dbg !2810
  store i32 0, i32* %bit_num11, align 8, !dbg !2811
  %9 = load i32, i32* %min, align 8, !dbg !2812
  %base_conflict_id13 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 5, !dbg !2813
  store i32 %9, i32* %base_conflict_id13, align 4, !dbg !2814
  br i1 %8, label %cond.end, label %cond.false, !dbg !2815

cond.false:                                       ; preds = %if.end
  %10 = load i64, i64* %4, align 8, !dbg !2816
  br label %cond.end, !dbg !2815

cond.end:                                         ; preds = %if.end, %cond.false
  %cond = phi i64 [ %10, %cond.false ], [ 0, %if.end ], !dbg !2815
  %word18 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 6, !dbg !2817
  store i64 %cond, i64* %word18, align 8, !dbg !2818
  br label %if.end19

if.end19:                                         ; preds = %cond.end, %if.then
  ret void, !dbg !2819
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* %i, %struct.ira_allocno** %a) unnamed_addr #0 !dbg !2820 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %i, metadata !2824, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !2825, metadata !DIExpression()), !dbg !2827
  %allocno_conflict_vec_p = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 0, !dbg !2828
  %0 = load i8, i8* %allocno_conflict_vec_p, align 8, !dbg !2828
  %tobool = icmp eq i8 %0, 0, !dbg !2830
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !2831

for.cond.preheader:                               ; preds = %entry
  %word = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 6, !dbg !2832
  %word_num3 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 2, !dbg !2836
  %size = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 3, !dbg !2838
  %bit_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 4, !dbg !2836
  %vec12 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 1, !dbg !2832
  %1 = bitcast i8** %vec12 to i64**, !dbg !2832
  %.pre = load i64, i64* %word, align 8, !dbg !2840
  br label %for.cond, !dbg !2841

if.then:                                          ; preds = %entry
  %vec = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 1, !dbg !2842
  %2 = bitcast i8** %vec to %struct.ira_allocno***, !dbg !2842
  %3 = load %struct.ira_allocno**, %struct.ira_allocno*** %2, align 8, !dbg !2842
  %word_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 2, !dbg !2844
  %4 = load i32, i32* %word_num, align 8, !dbg !2844
  %idxprom = zext i32 %4 to i64, !dbg !2845
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %3, i64 %idxprom, !dbg !2845
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !2845
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !2826, metadata !DIExpression()), !dbg !2827
  %cmp = icmp eq %struct.ira_allocno* %5, null, !dbg !2846
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2848

if.end:                                           ; preds = %if.then
  store %struct.ira_allocno* %5, %struct.ira_allocno** %a, align 8, !dbg !2849
  br label %cleanup, !dbg !2850

for.cond:                                         ; preds = %for.cond.preheader, %if.end9
  %6 = phi i64 [ %.pre, %for.cond.preheader ], [ %10, %if.end9 ], !dbg !2840
  %cmp2 = icmp eq i64 %6, 0, !dbg !2851
  br i1 %cmp2, label %for.body, label %for.cond17.preheader, !dbg !2841

for.cond17.preheader:                             ; preds = %for.cond
  %.lcssa = phi i64 [ %6, %for.cond ], !dbg !2840
  br label %for.cond17, !dbg !2852

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %word_num3, align 8, !dbg !2854
  %inc = add i32 %7, 1, !dbg !2854
  store i32 %inc, i32* %word_num3, align 8, !dbg !2854
  %conv = zext i32 %inc to i64, !dbg !2855
  %mul = shl nuw nsw i64 %conv, 3, !dbg !2856
  %8 = load i32, i32* %size, align 4, !dbg !2857
  %conv5 = zext i32 %8 to i64, !dbg !2858
  %cmp6 = icmp ult i64 %mul, %conv5, !dbg !2859
  br i1 %cmp6, label %if.end9, label %cleanup.loopexit, !dbg !2860

if.end9:                                          ; preds = %for.body
  %mul11 = shl i32 %inc, 6, !dbg !2861
  store i32 %mul11, i32* %bit_num, align 8, !dbg !2862
  %9 = load i64*, i64** %1, align 8, !dbg !2863
  %arrayidx15 = getelementptr inbounds i64, i64* %9, i64 %conv, !dbg !2864
  %10 = load i64, i64* %arrayidx15, align 8, !dbg !2864
  store i64 %10, i64* %word, align 8, !dbg !2865
  br label %for.cond, !dbg !2866, !llvm.loop !2867

for.cond17:                                       ; preds = %for.cond17.preheader, %for.body21
  %11 = phi i64 [ %.lcssa, %for.cond17.preheader ], [ %shr, %for.body21 ], !dbg !2869
  %and = and i64 %11, 1, !dbg !2871
  %cmp19 = icmp eq i64 %and, 0, !dbg !2872
  br i1 %cmp19, label %for.body21, label %for.end26, !dbg !2852

for.body21:                                       ; preds = %for.cond17
  %12 = load i32, i32* %bit_num, align 8, !dbg !2873
  %inc23 = add i32 %12, 1, !dbg !2873
  store i32 %inc23, i32* %bit_num, align 8, !dbg !2873
  %shr = lshr i64 %11, 1, !dbg !2874
  store i64 %shr, i64* %word, align 8, !dbg !2874
  br label %for.cond17, !dbg !2875, !llvm.loop !2876

for.end26:                                        ; preds = %for.cond17
  %13 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_conflict_id_allocno_map, align 8, !dbg !2878
  %14 = load i32, i32* %bit_num, align 8, !dbg !2879
  %base_conflict_id = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 5, !dbg !2880
  %15 = load i32, i32* %base_conflict_id, align 4, !dbg !2880
  %add = add i32 %14, %15, !dbg !2881
  %idxprom28 = zext i32 %add to i64, !dbg !2878
  %arrayidx29 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %13, i64 %idxprom28, !dbg !2878
  %16 = bitcast %struct.ira_allocno** %arrayidx29 to i64*, !dbg !2878
  %17 = load i64, i64* %16, align 8, !dbg !2878
  %18 = bitcast %struct.ira_allocno** %a to i64*, !dbg !2882
  store i64 %17, i64* %18, align 8, !dbg !2882
  br label %cleanup, !dbg !2883

cleanup.loopexit:                                 ; preds = %for.body
  br label %cleanup, !dbg !2884

cleanup:                                          ; preds = %cleanup.loopexit, %if.then, %for.end26, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 1, %for.end26 ], [ 0, %if.then ], [ 0, %cleanup.loopexit ], !dbg !2885
  ret i8 %retval.0, !dbg !2884
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* %i) unnamed_addr #0 !dbg !2886 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %i, metadata !2890, metadata !DIExpression()), !dbg !2891
  %allocno_conflict_vec_p = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 0, !dbg !2892
  %0 = load i8, i8* %allocno_conflict_vec_p, align 8, !dbg !2892
  %tobool = icmp eq i8 %0, 0, !dbg !2894
  br i1 %tobool, label %if.else, label %if.then, !dbg !2895

if.then:                                          ; preds = %entry
  %word_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 2, !dbg !2896
  %1 = load i32, i32* %word_num, align 8, !dbg !2897
  %inc = add i32 %1, 1, !dbg !2897
  store i32 %inc, i32* %word_num, align 8, !dbg !2897
  br label %if.end, !dbg !2898

if.else:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 6, !dbg !2899
  %2 = load i64, i64* %word, align 8, !dbg !2901
  %shr = lshr i64 %2, 1, !dbg !2901
  store i64 %shr, i64* %word, align 8, !dbg !2901
  %bit_num = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %i, i64 0, i32 4, !dbg !2902
  %3 = load i32, i32* %bit_num, align 8, !dbg !2903
  %inc1 = add i32 %3, 1, !dbg !2903
  store i32 %inc1, i32* %bit_num, align 8, !dbg !2903
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2904
}

declare dso_local void @ira_free_bitmap(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_allocno_priorities(%struct.ira_allocno** %consideration_allocnos, i32 %n) unnamed_addr #5 !dbg !2905 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %consideration_allocnos, metadata !2909, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 %n, metadata !2910, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 0, metadata !2915, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 0, metadata !2911, metadata !DIExpression()), !dbg !2918
  %0 = sext i32 %n to i64, !dbg !2919
  br label %for.cond, !dbg !2919

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.body ], [ 0, %entry ], !dbg !2918
  %max_priority.0 = phi i32 [ %max_priority.1, %for.body ], [ 0, %entry ], !dbg !2918
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !2911, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 %max_priority.0, metadata !2915, metadata !DIExpression()), !dbg !2918
  %cmp = icmp slt i64 %indvars.iv2, %0, !dbg !2921
  br i1 %cmp, label %for.body, label %for.end, !dbg !2923

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %consideration_allocnos, i64 %indvars.iv2, !dbg !2924
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !2924
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !2917, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 undef, metadata !2913, metadata !DIExpression()), !dbg !2918
  %nrefs2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 7, !dbg !2926
  %2 = load i32, i32* %nrefs2, align 8, !dbg !2926
  %conv = sext i32 %2 to i64, !dbg !2926
  %call = tail call i32 @floor_log2(i64 %conv) #6, !dbg !2927
  %add = add nsw i32 %call, 1, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %add, metadata !2916, metadata !DIExpression()), !dbg !2918
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 12, !dbg !2929
  %3 = load i32, i32* %memory_cost, align 4, !dbg !2929
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 10, !dbg !2930
  %4 = load i32, i32* %cover_class_cost, align 4, !dbg !2930
  %sub = sub nsw i32 %3, %4, !dbg !2931
  %mul = mul nsw i32 %add, %sub, !dbg !2932
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 9, !dbg !2933
  %5 = load i32, i32* %cover_class, align 8, !dbg !2933
  %idxprom3 = zext i32 %5 to i64, !dbg !2934
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 2, !dbg !2935
  %6 = load i32, i32* %mode, align 8, !dbg !2935
  %idxprom5 = zext i32 %6 to i64, !dbg !2934
  %arrayidx6 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom3, i64 %idxprom5, !dbg !2934
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !2934
  %mul7 = mul nsw i32 %mul, %7, !dbg !2936
  call void @llvm.dbg.value(metadata i32 %mul7, metadata !2914, metadata !DIExpression()), !dbg !2918
  %8 = load i32*, i32** @allocno_priorities, align 8, !dbg !2937
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !2938
  %9 = load i32, i32* %num, align 8, !dbg !2938
  %idxprom8 = sext i32 %9 to i64, !dbg !2937
  %arrayidx9 = getelementptr inbounds i32, i32* %8, i64 %idxprom8, !dbg !2937
  store i32 %mul7, i32* %arrayidx9, align 4, !dbg !2939
  %cmp10 = icmp slt i32 %mul7, 0, !dbg !2940
  %sub12 = sub nsw i32 0, %mul7, !dbg !2942
  %spec.select = select i1 %cmp10, i32 %sub12, i32 %mul7, !dbg !2943
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2914, metadata !DIExpression()), !dbg !2918
  %cmp13 = icmp slt i32 %max_priority.0, %spec.select, !dbg !2944
  %max_priority.1 = select i1 %cmp13, i32 %spec.select, i32 %max_priority.0, !dbg !2946
  call void @llvm.dbg.value(metadata i32 %max_priority.1, metadata !2915, metadata !DIExpression()), !dbg !2918
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !2947
  call void @llvm.dbg.value(metadata i32 undef, metadata !2911, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2918
  br label %for.cond, !dbg !2948, !llvm.loop !2949

for.end:                                          ; preds = %for.cond
  %max_priority.0.lcssa = phi i32 [ %max_priority.0, %for.cond ], !dbg !2918
  call void @llvm.dbg.value(metadata i32 %max_priority.0.lcssa, metadata !2915, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 %max_priority.0.lcssa, metadata !2915, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 %max_priority.0.lcssa, metadata !2915, metadata !DIExpression()), !dbg !2918
  %cmp17 = icmp eq i32 %max_priority.0.lcssa, 0, !dbg !2951
  br i1 %cmp17, label %cond.end, label %cond.false, !dbg !2952

cond.false:                                       ; preds = %for.end
  %div = sdiv i32 2147483647, %max_priority.0.lcssa, !dbg !2953
  br label %cond.end, !dbg !2952

cond.end:                                         ; preds = %for.end, %cond.false
  %cond = phi i32 [ %div, %cond.false ], [ 1, %for.end ], !dbg !2952
  call void @llvm.dbg.value(metadata i32 %cond, metadata !2916, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.value(metadata i32 0, metadata !2911, metadata !DIExpression()), !dbg !2918
  %10 = sext i32 %n to i64, !dbg !2954
  br label %for.cond19, !dbg !2954

for.cond19:                                       ; preds = %for.body22, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ 0, %cond.end ], !dbg !2956
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2911, metadata !DIExpression()), !dbg !2918
  %cmp20 = icmp slt i64 %indvars.iv, %10, !dbg !2957
  br i1 %cmp20, label %for.body22, label %for.end39, !dbg !2959

for.body22:                                       ; preds = %for.cond19
  %arrayidx24 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %consideration_allocnos, i64 %indvars.iv, !dbg !2960
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx24, align 8, !dbg !2960
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %11, metadata !2917, metadata !DIExpression()), !dbg !2918
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 14, !dbg !2962
  %12 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !2962
  call void @llvm.dbg.value(metadata i32 %12, metadata !2912, metadata !DIExpression()), !dbg !2918
  %13 = icmp sgt i32 %12, 1, !dbg !2963
  %spec.select1 = select i1 %13, i32 %12, i32 1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !2912, metadata !DIExpression()), !dbg !2918
  %14 = load i32*, i32** @allocno_priorities, align 8, !dbg !2964
  %num29 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 0, !dbg !2965
  %15 = load i32, i32* %num29, align 8, !dbg !2965
  %idxprom30 = sext i32 %15 to i64, !dbg !2964
  %arrayidx31 = getelementptr inbounds i32, i32* %14, i64 %idxprom30, !dbg !2964
  %16 = load i32, i32* %arrayidx31, align 4, !dbg !2964
  %mul32 = mul nsw i32 %16, %cond, !dbg !2966
  %div33 = sdiv i32 %mul32, %spec.select1, !dbg !2967
  store i32 %div33, i32* %arrayidx31, align 4, !dbg !2968
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2969
  call void @llvm.dbg.value(metadata i32 undef, metadata !2911, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2918
  br label %for.cond19, !dbg !2970, !llvm.loop !2971

for.end39:                                        ; preds = %for.cond19
  ret void, !dbg !2973
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @allocno_priority_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !2974 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !2976, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !2977, metadata !DIExpression()), !dbg !2982
  %0 = bitcast i8* %v1p to %struct.ira_allocno**, !dbg !2983
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %0, align 8, !dbg !2984
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !2978, metadata !DIExpression()), !dbg !2982
  %2 = bitcast i8* %v2p to %struct.ira_allocno**, !dbg !2985
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %2, align 8, !dbg !2986
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !2979, metadata !DIExpression()), !dbg !2982
  %4 = load i32*, i32** @allocno_priorities, align 8, !dbg !2987
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !2988
  %5 = load i32, i32* %num, align 8, !dbg !2988
  %idxprom = sext i32 %5 to i64, !dbg !2987
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !2987
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2987
  call void @llvm.dbg.value(metadata i32 %6, metadata !2980, metadata !DIExpression()), !dbg !2982
  %num1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !2989
  %7 = load i32, i32* %num1, align 8, !dbg !2989
  %idxprom2 = sext i32 %7 to i64, !dbg !2990
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %idxprom2, !dbg !2990
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !2990
  call void @llvm.dbg.value(metadata i32 %8, metadata !2981, metadata !DIExpression()), !dbg !2982
  %tobool = icmp eq i32 %8, %6, !dbg !2991
  br i1 %tobool, label %if.end, label %if.then, !dbg !2993

if.then:                                          ; preds = %entry
  %sub4 = sub nsw i32 %8, %6, !dbg !2994
  br label %cleanup, !dbg !2995

if.end:                                           ; preds = %entry
  %sub7 = sub nsw i32 %5, %7, !dbg !2996
  br label %cleanup, !dbg !2997

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub4, %if.then ], [ %sub7, %if.end ], !dbg !2982
  ret i32 %retval.0, !dbg !2998
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_curr_costs(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !2999 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !3003, metadata !DIExpression()), !dbg !3013
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !3014
  %0 = load i32, i32* %cover_class1, align 8, !dbg !3014
  call void @llvm.dbg.value(metadata i32 %0, metadata !3008, metadata !DIExpression()), !dbg !3013
  %cmp = icmp eq i32 %0, 0, !dbg !3015
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3017

if.end:                                           ; preds = %entry
  %mode2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 2, !dbg !3018
  %1 = load i32, i32* %mode2, align 8, !dbg !3018
  call void @llvm.dbg.value(metadata i32 %1, metadata !3007, metadata !DIExpression()), !dbg !3013
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 15, !dbg !3019
  %2 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3019
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %2, metadata !3011, metadata !DIExpression()), !dbg !3013
  %idxprom = zext i32 %0 to i64, !dbg !3021
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 34, !dbg !3025
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 10, !dbg !3025
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 33, !dbg !3025
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 36, !dbg !3025
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 35, !dbg !3025
  br label %for.cond, !dbg !3026

for.cond:                                         ; preds = %for.inc, %if.end
  %another_a.0 = phi %struct.ira_allocno* [ undef, %if.end ], [ %another_a.2, %for.inc ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %2, %if.end ], [ %next_cp.2, %for.inc ], !dbg !3027
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %if.end ], [ %next_cp.2, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !3012, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !3011, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.0, metadata !3010, metadata !DIExpression()), !dbg !3013
  %cmp3 = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !3028
  br i1 %cmp3, label %cleanup.cont.loopexit, label %for.body, !dbg !3029

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !3030
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3030
  %cmp4 = icmp eq %struct.ira_allocno* %3, %a, !dbg !3032
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3033

if.then5:                                         ; preds = %for.body
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !3034
  %4 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3034
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %4, metadata !3012, metadata !DIExpression()), !dbg !3013
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3036
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3036
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !3010, metadata !DIExpression()), !dbg !3013
  br label %if.end12, !dbg !3037

if.else:                                          ; preds = %for.body
  %second6 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3038
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %second6, align 8, !dbg !3038
  %cmp7 = icmp eq %struct.ira_allocno* %6, %a, !dbg !3040
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !3041

if.then8:                                         ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !3042
  %7 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !3042
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %7, metadata !3012, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3010, metadata !DIExpression()), !dbg !3013
  br label %if.end12, !dbg !3044

if.else10:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 2265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3045
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.else10, %if.then5
  %another_a.2 = phi %struct.ira_allocno* [ %5, %if.then5 ], [ %3, %if.then8 ], [ %another_a.0, %if.else10 ], !dbg !3046
  %next_cp.2 = phi %struct.ira_allocno_copy* [ %4, %if.then5 ], [ %7, %if.then8 ], [ %next_cp.0, %if.else10 ], !dbg !3046
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3012, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_a.2, metadata !3010, metadata !DIExpression()), !dbg !3013
  %cover_class13 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_a.2, i64 0, i32 9, !dbg !3047
  %8 = load i32, i32* %cover_class13, align 8, !dbg !3047
  %idxprom14 = zext i32 %8 to i64, !dbg !3048
  %arrayidx15 = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %idxprom, i64 %idxprom14, !dbg !3048
  %9 = load i8, i8* %arrayidx15, align 1, !dbg !3048
  %tobool = icmp eq i8 %9, 0, !dbg !3048
  br i1 %tobool, label %for.inc, label %lor.lhs.false, !dbg !3049

lor.lhs.false:                                    ; preds = %if.end12
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_a.2, i64 0, i32 31, !dbg !3050
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !3050
  %bf.clear = and i16 %bf.load, 256, !dbg !3050
  %tobool16 = icmp eq i16 %bf.clear, 0, !dbg !3050
  br i1 %tobool16, label %for.inc, label %lor.lhs.false17, !dbg !3051

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %hard_regno18 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_a.2, i64 0, i32 3, !dbg !3052
  %10 = load i32, i32* %hard_regno18, align 4, !dbg !3052
  call void @llvm.dbg.value(metadata i32 %10, metadata !3005, metadata !DIExpression()), !dbg !3013
  %cmp19 = icmp slt i32 %10, 0, !dbg !3053
  br i1 %cmp19, label %for.inc, label %if.end21, !dbg !3054

if.end21:                                         ; preds = %lor.lhs.false17
  %idxprom22 = sext i32 %10 to i64, !dbg !3055
  %arrayidx23 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom22, !dbg !3055
  %11 = load i32, i32* %arrayidx23, align 4, !dbg !3055
  call void @llvm.dbg.value(metadata i32 %11, metadata !3009, metadata !DIExpression()), !dbg !3013
  %arrayidx27 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom, i64 %idxprom22, !dbg !3056
  %12 = load i16, i16* %arrayidx27, align 2, !dbg !3056
  %cmp28 = icmp slt i16 %12, 0, !dbg !3057
  br i1 %cmp28, label %for.inc, label %if.end31, !dbg !3059

if.end31:                                         ; preds = %if.end21
  %13 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3060
  %cmp33 = icmp eq %struct.ira_allocno* %13, %a, !dbg !3061
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !3062

cond.true:                                        ; preds = %if.end31
  %call = tail call fastcc i32 @ira_get_register_move_cost(i32 %1, i32 %11, i32 %0) #8, !dbg !3063
  br label %cond.end, !dbg !3062

cond.false:                                       ; preds = %if.end31
  %call35 = tail call fastcc i32 @ira_get_register_move_cost(i32 %1, i32 %0, i32 %11) #8, !dbg !3064
  br label %cond.end, !dbg !3062

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call35, %cond.false ], !dbg !3062
  call void @llvm.dbg.value(metadata i32 %cond, metadata !3006, metadata !DIExpression()), !dbg !3013
  %14 = load i32, i32* %cover_class_cost, align 4, !dbg !3065
  %15 = load i32*, i32** %hard_reg_costs, align 8, !dbg !3066
  tail call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_hard_reg_costs, i32 %0, i32 %14, i32* %15) #8, !dbg !3067
  %16 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !3068
  tail call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs, i32 %0, i32 0, i32* %16) #8, !dbg !3069
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 3, !dbg !3070
  %17 = load i32, i32* %freq, align 8, !dbg !3070
  %mul = mul nsw i32 %17, %cond, !dbg !3071
  %18 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !3072
  %idxprom37 = sext i16 %12 to i64, !dbg !3072
  %arrayidx38 = getelementptr inbounds i32, i32* %18, i64 %idxprom37, !dbg !3072
  %19 = load i32, i32* %arrayidx38, align 4, !dbg !3073
  %sub = sub nsw i32 %19, %mul, !dbg !3073
  store i32 %sub, i32* %arrayidx38, align 4, !dbg !3073
  %20 = load i32, i32* %freq, align 8, !dbg !3074
  %mul40 = mul nsw i32 %20, %cond, !dbg !3075
  %21 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !3076
  %arrayidx43 = getelementptr inbounds i32, i32* %21, i64 %idxprom37, !dbg !3076
  %22 = load i32, i32* %arrayidx43, align 4, !dbg !3077
  %sub44 = sub nsw i32 %22, %mul40, !dbg !3077
  store i32 %sub44, i32* %arrayidx43, align 4, !dbg !3077
  br label %for.inc, !dbg !3078

for.inc:                                          ; preds = %lor.lhs.false, %if.end12, %if.end21, %lor.lhs.false17, %cond.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.2, metadata !3011, metadata !DIExpression()), !dbg !3013
  br label %for.cond, !dbg !3079, !llvm.loop !3080

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3082

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !3082
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @assign_hard_reg(%struct.ira_allocno* %allocno, i8 zeroext %retry_p) unnamed_addr #5 !dbg !1841 {
entry:
  %conflict_allocno = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !1845, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i8 %retry_p, metadata !1846, metadata !DIExpression()), !dbg !3083
  %0 = bitcast %struct.ira_allocno** %conflict_allocno to i8*, !dbg !3084
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3084
  %1 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !3085
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !3085
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !3086
  %2 = load i32, i32* %cover_class1, align 8, !dbg !3086
  call void @llvm.dbg.value(metadata i32 %2, metadata !1862, metadata !DIExpression()), !dbg !3083
  %idxprom = zext i32 %2 to i64, !dbg !3087
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !3087
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %3, metadata !1853, metadata !DIExpression()), !dbg !3083
  %mode2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 2, !dbg !3088
  %4 = load i32, i32* %mode2, align 8, !dbg !3088
  call void @llvm.dbg.value(metadata i32 %4, metadata !1865, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 0, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 -1, metadata !1852, metadata !DIExpression()), !dbg !3083
  %conv = sext i32 %3 to i64, !dbg !3089
  %mul = shl nsw i64 %conv, 2, !dbg !3090
  %call = tail call i8* @memset(i8* bitcast ([53 x i32]* @assign_hard_reg.full_costs to i8*), i32 0, i64 %mul) #6, !dbg !3091
  call void @llvm.dbg.value(metadata i32 0, metadata !1855, metadata !DIExpression()), !dbg !3083
  %.b12 = load i1, i1* @allocno_coalesced_p, align 1, !dbg !3092
  br i1 %.b12, label %if.then, label %if.end, !dbg !3094

if.then:                                          ; preds = %entry
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !3095
  tail call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !3096
  br label %if.end, !dbg !3096

if.end:                                           ; preds = %entry, %if.then
  %call5 = tail call i8* @memset(i8* bitcast ([53 x i32]* @assign_hard_reg.costs to i8*), i32 0, i64 %mul) #6, !dbg !3097
  %call8 = tail call i8* @memset(i8* bitcast ([53 x i32]* @assign_hard_reg.full_costs to i8*), i32 0, i64 %mul) #6, !dbg !3098
  call void @llvm.dbg.value(metadata i8 0, metadata !1879, metadata !DIExpression()), !dbg !3083
  tail call fastcc void @start_update_cost() #8, !dbg !3099
  %tobool41 = icmp eq i8 %retry_p, 0, !dbg !3100
  %arrayidx80 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !3107
  %6 = sext i32 %3 to i64, !dbg !3114
  %7 = sext i32 %3 to i64, !dbg !3114
  br label %for.cond, !dbg !3114

for.cond:                                         ; preds = %for.inc132, %if.end
  %mem_cost.0 = phi i32 [ 0, %if.end ], [ %add, %for.inc132 ], !dbg !3083
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %if.end ], [ %a.0, %for.inc132 ]
  %conflicting_regs.0 = phi i64 [ 0, %if.end ], [ %conflicting_regs.1.lcssa, %for.inc132 ], !dbg !3083
  %no_stack_reg_p.0 = phi i32 [ 0, %if.end ], [ %13, %for.inc132 ], !dbg !3083
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !3115
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !3115
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.0, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !1866, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %mem_cost.0, metadata !1855, metadata !DIExpression()), !dbg !3083
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 13, !dbg !3116
  %8 = load i32, i32* %updated_memory_cost, align 8, !dbg !3116
  %add = add nsw i32 %mem_cost.0, %8, !dbg !3117
  call void @llvm.dbg.value(metadata i32 %add, metadata !1855, metadata !DIExpression()), !dbg !3083
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 27, !dbg !3118
  %9 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !3118
  %or = or i64 %conflicting_regs.0, %9, !dbg !3118
  call void @llvm.dbg.value(metadata i64 %or, metadata !1847, metadata !DIExpression()), !dbg !3083
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 34, !dbg !3119
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 33, !dbg !3120
  %10 = load i32*, i32** %hard_reg_costs, align 8, !dbg !3120
  call fastcc void @ira_allocate_and_copy_costs(i32** nonnull %updated_hard_reg_costs, i32 %2, i32* %10) #8, !dbg !3121
  %11 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !3122
  call void @llvm.dbg.value(metadata i32* %11, metadata !1860, metadata !DIExpression()), !dbg !3083
  %tobool11 = icmp eq i32 %no_stack_reg_p.0, 0, !dbg !3123
  br i1 %tobool11, label %lor.rhs, label %lor.end, !dbg !3124

lor.rhs:                                          ; preds = %for.cond
  %total_no_stack_reg_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 31, !dbg !3125
  %bf.load = load i16, i16* %total_no_stack_reg_p, align 4, !dbg !3125
  %bf.clear = lshr i16 %bf.load, 5, !dbg !3124
  %bf.clear.lobit = and i16 %bf.clear, 1, !dbg !3124
  %12 = zext i16 %bf.clear.lobit to i32, !dbg !3124
  br label %lor.end, !dbg !3124

lor.end:                                          ; preds = %for.cond, %lor.rhs
  %13 = phi i32 [ 1, %for.cond ], [ %12, %lor.rhs ]
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 11, !dbg !3126
  %14 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %14, metadata !1854, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 0, metadata !1848, metadata !DIExpression()), !dbg !3083
  %cmp16 = icmp eq i32* %11, null, !dbg !3128
  br i1 %cmp16, label %lor.end.split.us, label %lor.end.lor.end.split_crit_edge, !dbg !3131

lor.end.lor.end.split_crit_edge:                  ; preds = %lor.end
  br label %for.cond14, !dbg !3131

lor.end.split.us:                                 ; preds = %lor.end
  br label %for.cond14.us, !dbg !3131

for.cond14.us:                                    ; preds = %for.body.us, %lor.end.split.us
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %for.body.us ], [ 0, %lor.end.split.us ], !dbg !3132
  call void @llvm.dbg.value(metadata i64 %indvars.iv30, metadata !1848, metadata !DIExpression()), !dbg !3083
  %cmp.us = icmp slt i64 %indvars.iv30, %7, !dbg !3133
  br i1 %cmp.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !3134

for.body.us:                                      ; preds = %for.cond14.us
  %arrayidx30.us = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.costs, i64 0, i64 %indvars.iv30, !dbg !3135
  %15 = load i32, i32* %arrayidx30.us, align 4, !dbg !3137
  %add31.us = add nsw i32 %15, %14, !dbg !3137
  store i32 %add31.us, i32* %arrayidx30.us, align 4, !dbg !3137
  %arrayidx33.us = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %indvars.iv30, !dbg !3138
  %16 = load i32, i32* %arrayidx33.us, align 4, !dbg !3139
  %add34.us = add nsw i32 %16, %14, !dbg !3139
  store i32 %add34.us, i32* %arrayidx33.us, align 4, !dbg !3139
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !3140
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  br label %for.cond14.us, !dbg !3141, !llvm.loop !3142

for.end.us-lcssa.us:                              ; preds = %for.cond14.us
  br label %for.end, !dbg !3144

for.cond14:                                       ; preds = %for.body, %lor.end.lor.end.split_crit_edge
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.body ], [ 0, %lor.end.lor.end.split_crit_edge ], !dbg !3132
  call void @llvm.dbg.value(metadata i64 %indvars.iv28, metadata !1848, metadata !DIExpression()), !dbg !3083
  %cmp = icmp slt i64 %indvars.iv28, %6, !dbg !3133
  br i1 %cmp, label %for.body, label %for.end.us-lcssa, !dbg !3134

for.body:                                         ; preds = %for.cond14
  %arrayidx20 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv28, !dbg !3145
  %17 = load i32, i32* %arrayidx20, align 4, !dbg !3145
  %arrayidx22 = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.costs, i64 0, i64 %indvars.iv28, !dbg !3147
  %18 = load i32, i32* %arrayidx22, align 4, !dbg !3148
  %add23 = add nsw i32 %18, %17, !dbg !3148
  store i32 %add23, i32* %arrayidx22, align 4, !dbg !3148
  %19 = load i32, i32* %arrayidx20, align 4, !dbg !3149
  %arrayidx27 = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %indvars.iv28, !dbg !3150
  %20 = load i32, i32* %arrayidx27, align 4, !dbg !3151
  %add28 = add nsw i32 %20, %19, !dbg !3151
  store i32 %add28, i32* %arrayidx27, align 4, !dbg !3151
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !3140
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  br label %for.cond14, !dbg !3141, !llvm.loop !3142

for.end.us-lcssa:                                 ; preds = %for.cond14
  br label %for.end, !dbg !3144

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !1868, metadata !DIExpression(DW_OP_deref)), !dbg !3083
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %a.0) #8, !dbg !3144
  br label %for.cond36, !dbg !3144

for.cond36:                                       ; preds = %for.inc126, %for.end
  %conflicting_regs.1 = phi i64 [ %or, %for.end ], [ %conflicting_regs.5, %for.inc126 ], !dbg !3118
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_allocno, metadata !1867, metadata !DIExpression(DW_OP_deref)), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !1868, metadata !DIExpression(DW_OP_deref)), !dbg !3083
  %call37 = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_allocno) #8, !dbg !3152
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3144
  br i1 %tobool38, label %for.end127, label %for.body39, !dbg !3144

for.body39:                                       ; preds = %for.cond36
  br i1 %tobool41, label %lor.lhs.false, label %if.then44, !dbg !3153

lor.lhs.false:                                    ; preds = %for.body39
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !3154
  %22 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !3155
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %22, metadata !1867, metadata !DIExpression()), !dbg !3083
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 0, !dbg !3155
  %23 = load i32, i32* %num, align 8, !dbg !3155
  %call42 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %21, i32 %23) #6, !dbg !3156
  %tobool43 = icmp eq i32 %call42, 0, !dbg !3156
  br i1 %tobool43, label %for.inc126, label %if.then44, !dbg !3157

if.then44:                                        ; preds = %lor.lhs.false, %for.body39
  %24 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !3158
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %24, metadata !1867, metadata !DIExpression()), !dbg !3083
  %cover_class45 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 9, !dbg !3158
  %25 = load i32, i32* %cover_class45, align 8, !dbg !3158
  call void @llvm.dbg.value(metadata i32 %25, metadata !1864, metadata !DIExpression()), !dbg !3083
  %.b = load i1, i1* @allocno_coalesced_p, align 1, !dbg !3159
  br i1 %.b, label %if.then47, label %if.end55, !dbg !3161

if.then47:                                        ; preds = %if.then44
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !3162
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %24, metadata !1867, metadata !DIExpression()), !dbg !3083
  %num48 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 0, !dbg !3165
  %27 = load i32, i32* %num48, align 8, !dbg !3165
  %call49 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %26, i32 %27) #6, !dbg !3166
  %tobool50 = icmp eq i32 %call49, 0, !dbg !3166
  br i1 %tobool50, label %if.end52, label %for.inc126, !dbg !3167

if.end52:                                         ; preds = %if.then47
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !3168
  %29 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !3169
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !1867, metadata !DIExpression()), !dbg !3083
  %num53 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 0, !dbg !3169
  %30 = load i32, i32* %num53, align 8, !dbg !3169
  %call54 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %28, i32 %30) #6, !dbg !3170
  %.pre = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !3171
  br label %if.end55, !dbg !3172

if.end55:                                         ; preds = %if.then44, %if.end52
  %31 = phi %struct.ira_allocno* [ %24, %if.then44 ], [ %.pre, %if.end52 ], !dbg !3171
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !1867, metadata !DIExpression()), !dbg !3083
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 31, !dbg !3171
  %bf.load56 = load i16, i16* %assigned_p, align 4, !dbg !3171
  %bf.clear58 = and i16 %bf.load56, 256, !dbg !3171
  %tobool60 = icmp eq i16 %bf.clear58, 0, !dbg !3171
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !1867, metadata !DIExpression()), !dbg !3083
  br i1 %tobool60, label %if.else86, label %if.then61, !dbg !3173

if.then61:                                        ; preds = %if.end55
  %hard_regno62 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 3, !dbg !3174
  %32 = load i32, i32* %hard_regno62, align 4, !dbg !3174
  call void @llvm.dbg.value(metadata i32 %32, metadata !1851, metadata !DIExpression()), !dbg !3083
  %cmp63 = icmp sgt i32 %32, -1, !dbg !3175
  br i1 %cmp63, label %land.lhs.true, label %for.inc126, !dbg !3176

land.lhs.true:                                    ; preds = %if.then61
  %idxprom67 = sext i32 %32 to i64, !dbg !3177
  %arrayidx68 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom, i64 %idxprom67, !dbg !3177
  %33 = load i16, i16* %arrayidx68, align 2, !dbg !3177
  %cmp70 = icmp sgt i16 %33, -1, !dbg !3178
  br i1 %cmp70, label %if.then72, label %for.inc126, !dbg !3179

if.then72:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !1867, metadata !DIExpression()), !dbg !3083
  %mode75 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 2, !dbg !3180
  %34 = load i32, i32* %mode75, align 8, !dbg !3180
  %idxprom76 = zext i32 %34 to i64, !dbg !3180
  %arrayidx77 = getelementptr inbounds [53 x [87 x i64]], [53 x [87 x i64]]* @ira_reg_mode_hard_regset, i64 0, i64 %idxprom67, i64 %idxprom76, !dbg !3180
  %35 = load i64, i64* %arrayidx77, align 8, !dbg !3180
  %or78 = or i64 %conflicting_regs.1, %35, !dbg !3180
  call void @llvm.dbg.value(metadata i64 %or78, metadata !1847, metadata !DIExpression()), !dbg !3083
  %36 = load i64, i64* %arrayidx80, align 8, !dbg !3181
  %call81 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %36, i64 %or78) #8, !dbg !3182
  %tobool82 = icmp eq i8 %call81, 0, !dbg !3182
  br i1 %tobool82, label %for.inc126, label %fail.loopexit, !dbg !3183

if.else86:                                        ; preds = %if.end55
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 18, !dbg !3184
  %37 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3184
  %may_be_spilled_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %37, i64 0, i32 31, !dbg !3184
  %bf.load87 = load i16, i16* %may_be_spilled_p, align 4, !dbg !3184
  %bf.clear89 = and i16 %bf.load87, 512, !dbg !3184
  %tobool91 = icmp eq i16 %bf.clear89, 0, !dbg !3184
  br i1 %tobool91, label %if.then92, label %for.inc126, !dbg !3186

if.then92:                                        ; preds = %if.else86
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !1867, metadata !DIExpression()), !dbg !3083
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 36, !dbg !3187
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !1867, metadata !DIExpression()), !dbg !3083
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %31, i64 0, i32 35, !dbg !3189
  %38 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !3189
  call fastcc void @ira_allocate_and_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs, i32 %25, i32* %38) #8, !dbg !3190
  %39 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !3191
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %39, metadata !1867, metadata !DIExpression()), !dbg !3083
  %updated_conflict_hard_reg_costs93 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %39, i64 0, i32 36, !dbg !3191
  %40 = load i32*, i32** %updated_conflict_hard_reg_costs93, align 8, !dbg !3191
  call void @llvm.dbg.value(metadata i32* %40, metadata !1861, metadata !DIExpression()), !dbg !3083
  %cmp94 = icmp eq i32* %40, null, !dbg !3192
  br i1 %cmp94, label %if.end122, label %if.then96, !dbg !3194

if.then96:                                        ; preds = %if.then92
  call void @llvm.dbg.value(metadata i32 %3, metadata !1849, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3083
  %idxprom106 = zext i32 %25 to i64, !dbg !3195
  br label %for.cond97, !dbg !3199

for.cond97:                                       ; preds = %for.inc120, %if.then96
  %indvars.iv32 = phi i64 [ %indvars.iv.next33, %for.inc120 ], [ %6, %if.then96 ]
  %indvars.iv.next33 = add nsw i64 %indvars.iv32, -1, !dbg !3200
  call void @llvm.dbg.value(metadata i32 undef, metadata !1849, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3083
  %cmp98 = icmp sgt i64 %indvars.iv32, 0, !dbg !3201
  br i1 %cmp98, label %for.body100, label %if.end122.loopexit, !dbg !3202

for.body100:                                      ; preds = %for.cond97
  %arrayidx104 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom, i64 %indvars.iv.next33, !dbg !3203
  %41 = load i16, i16* %arrayidx104, align 2, !dbg !3203
  %idxprom108 = sext i16 %41 to i64, !dbg !3204
  %arrayidx109 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom106, i64 %idxprom108, !dbg !3204
  %42 = load i16, i16* %arrayidx109, align 2, !dbg !3204
  call void @llvm.dbg.value(metadata i32 undef, metadata !1850, metadata !DIExpression()), !dbg !3083
  %cmp111 = icmp slt i16 %42, 0, !dbg !3205
  br i1 %cmp111, label %for.inc120, label %if.end114, !dbg !3207

if.end114:                                        ; preds = %for.body100
  %idxprom115 = sext i16 %42 to i64, !dbg !3208
  call void @llvm.dbg.value(metadata i64 %idxprom115, metadata !1850, metadata !DIExpression()), !dbg !3083
  %arrayidx116 = getelementptr inbounds i32, i32* %40, i64 %idxprom115, !dbg !3208
  %43 = load i32, i32* %arrayidx116, align 4, !dbg !3208
  %arrayidx118 = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %indvars.iv.next33, !dbg !3209
  %44 = load i32, i32* %arrayidx118, align 4, !dbg !3210
  %sub119 = sub nsw i32 %44, %43, !dbg !3210
  store i32 %sub119, i32* %arrayidx118, align 4, !dbg !3210
  br label %for.inc120, !dbg !3211

for.inc120:                                       ; preds = %for.body100, %if.end114
  call void @llvm.dbg.value(metadata i32 undef, metadata !1849, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3083
  br label %for.cond97, !dbg !3212, !llvm.loop !3213

if.end122.loopexit:                               ; preds = %for.cond97
  br label %if.end122, !dbg !3215

if.end122:                                        ; preds = %if.end122.loopexit, %if.then92
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %39, metadata !1867, metadata !DIExpression()), !dbg !3083
  call fastcc void @queue_update_cost(%struct.ira_allocno* %39, i32 4) #8, !dbg !3216
  br label %for.inc126, !dbg !3217

for.inc126:                                       ; preds = %if.then47, %if.then72, %if.else86, %lor.lhs.false, %if.end122, %if.then61, %land.lhs.true
  %conflicting_regs.5 = phi i64 [ %conflicting_regs.1, %if.then47 ], [ %conflicting_regs.1, %lor.lhs.false ], [ %conflicting_regs.1, %land.lhs.true ], [ %conflicting_regs.1, %if.then61 ], [ %or78, %if.then72 ], [ %conflicting_regs.1, %if.end122 ], [ %conflicting_regs.1, %if.else86 ], !dbg !3218
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.5, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !1868, metadata !DIExpression(DW_OP_deref)), !dbg !3083
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !3152
  br label %for.cond36, !dbg !3152, !llvm.loop !3219

for.end127:                                       ; preds = %for.cond36
  %conflicting_regs.1.lcssa = phi i64 [ %conflicting_regs.1, %for.cond36 ], !dbg !3118
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  %cmp128 = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !3221
  br i1 %cmp128, label %for.end134, label %for.inc132, !dbg !3223

for.inc132:                                       ; preds = %for.end127
  br label %for.cond, !dbg !3224, !llvm.loop !3225

for.end134:                                       ; preds = %for.end127
  %.lcssa38 = phi i32 [ %13, %for.end127 ]
  %add.lcssa37 = phi i32 [ %add, %for.end127 ], !dbg !3117
  %conflicting_regs.1.lcssa.lcssa = phi i64 [ %conflicting_regs.1.lcssa, %for.end127 ], !dbg !3118
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i64 %conflicting_regs.1.lcssa.lcssa, metadata !1847, metadata !DIExpression()), !dbg !3083
  call fastcc void @update_conflict_hard_regno_costs(i32* getelementptr inbounds ([53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 0), i32 %2, i8 zeroext 1) #8, !dbg !3228
  call fastcc void @start_update_cost() #8, !dbg !3229
  br label %for.cond136, !dbg !3230

for.cond136:                                      ; preds = %for.inc141, %for.end134
  %allocno.pn8 = phi %struct.ira_allocno* [ %allocno, %for.end134 ], [ %a.1, %for.inc141 ]
  %a.1.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn8, i64 0, i32 19, !dbg !3232
  %a.1 = load %struct.ira_allocno*, %struct.ira_allocno** %a.1.in, align 8, !dbg !3232
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1, metadata !1866, metadata !DIExpression()), !dbg !3083
  call fastcc void @queue_update_cost(%struct.ira_allocno* %a.1, i32 4) #8, !dbg !3233
  %cmp137 = icmp eq %struct.ira_allocno* %a.1, %allocno, !dbg !3236
  br i1 %cmp137, label %for.end143, label %for.inc141, !dbg !3238

for.inc141:                                       ; preds = %for.cond136
  br label %for.cond136, !dbg !3239, !llvm.loop !3240

for.end143:                                       ; preds = %for.cond136
  call fastcc void @update_conflict_hard_regno_costs(i32* getelementptr inbounds ([53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 0), i32 %2, i8 zeroext 0) #8, !dbg !3243
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 2147483647, metadata !1856, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 0, metadata !1848, metadata !DIExpression()), !dbg !3083
  %tobool154 = icmp eq i32 %.lcssa38, 0, !dbg !3244
  %idxprom168 = zext i32 %4 to i64, !dbg !3249
  %arrayidx169 = getelementptr inbounds [27 x [87 x i64]], [27 x [87 x i64]]* @prohibited_class_mode_regs, i64 0, i64 %idxprom, i64 %idxprom168, !dbg !3249
  br i1 %tobool154, label %for.end143.for.end143.split_crit_edge, label %for.end143.split.us, !dbg !3251

for.end143.for.end143.split_crit_edge:            ; preds = %for.end143
  %45 = sext i32 %3 to i64, !dbg !3251
  br label %for.cond144, !dbg !3251

for.end143.split.us:                              ; preds = %for.end143
  %46 = sext i32 %3 to i64, !dbg !3251
  br label %for.cond144.us, !dbg !3251

for.cond144.us:                                   ; preds = %for.inc212.us, %for.end143.split.us
  %indvars.iv26 = phi i64 [ %indvars.iv.next27, %for.inc212.us ], [ 0, %for.end143.split.us ], !dbg !3252
  %min_full_cost.0.us = phi i32 [ %min_full_cost.2.us, %for.inc212.us ], [ 2147483647, %for.end143.split.us ], !dbg !3252
  %best_hard_regno.0.us = phi i32 [ %best_hard_regno.2.us, %for.inc212.us ], [ -1, %for.end143.split.us ], !dbg !3253
  call void @llvm.dbg.value(metadata i64 %indvars.iv26, metadata !1848, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.us, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.us, metadata !1858, metadata !DIExpression()), !dbg !3083
  %cmp145.us = icmp slt i64 %indvars.iv26, %46, !dbg !3254
  br i1 %cmp145.us, label %for.body147.us, label %for.end214.us-lcssa.us, !dbg !3255

for.body147.us:                                   ; preds = %for.cond144.us
  %arrayidx151.us = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom, i64 %indvars.iv26, !dbg !3256
  %47 = load i16, i16* %arrayidx151.us, align 2, !dbg !3256
  %conv152.us = sext i16 %47 to i32, !dbg !3256
  call void @llvm.dbg.value(metadata i32 %conv152.us, metadata !1851, metadata !DIExpression()), !dbg !3083
  %48 = and i16 %47, -8, !dbg !3257
  %49 = icmp eq i16 %48, 8, !dbg !3257
  br i1 %49, label %for.inc212.us, label %if.end162.us, !dbg !3257

if.end162.us:                                     ; preds = %for.body147.us
  %call163.us = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv152.us, i32 %4, i64 %conflicting_regs.1.lcssa.lcssa) #8, !dbg !3258
  %tobool164.us = icmp eq i8 %call163.us, 0, !dbg !3258
  br i1 %tobool164.us, label %for.inc212.us, label %lor.lhs.false165.us, !dbg !3259

lor.lhs.false165.us:                              ; preds = %if.end162.us
  %50 = load i64, i64* %arrayidx169, align 8, !dbg !3260
  %sh_prom.us = zext i32 %conv152.us to i64, !dbg !3260
  %shl.us = shl i64 1, %sh_prom.us, !dbg !3260
  %and.us = and i64 %50, %shl.us, !dbg !3260
  %tobool170.us = icmp eq i64 %and.us, 0, !dbg !3260
  br i1 %tobool170.us, label %if.end172.us, label %for.inc212.us, !dbg !3261

if.end172.us:                                     ; preds = %lor.lhs.false165.us
  %arrayidx176.us = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %indvars.iv26, !dbg !3262
  %51 = load i32, i32* %arrayidx176.us, align 4, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %51, metadata !1857, metadata !DIExpression()), !dbg !3083
  %idxprom177.us = sext i16 %47 to i64, !dbg !3263
  %arrayidx178.us = getelementptr inbounds [53 x i8], [53 x i8]* @allocated_hardreg_p, i64 0, i64 %idxprom177.us, !dbg !3263
  %52 = load i8, i8* %arrayidx178.us, align 1, !dbg !3263
  %tobool179.us = icmp eq i8 %52, 0, !dbg !3263
  br i1 %tobool179.us, label %land.lhs.true180.us, label %if.end203.us, !dbg !3265

land.lhs.true180.us:                              ; preds = %if.end172.us
  %53 = load i64, i64* @call_used_reg_set, align 8, !dbg !3266
  %call181.us = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv152.us, i32 %4, i64 %53) #8, !dbg !3267
  %tobool183.us = icmp eq i8 %call181.us, 0, !dbg !3267
  br i1 %tobool183.us, label %if.end203.us, label %if.then184.us, !dbg !3268

if.then184.us:                                    ; preds = %land.lhs.true180.us
  %arrayidx186.us = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom177.us, !dbg !3269
  %54 = load i32, i32* %arrayidx186.us, align 4, !dbg !3269
  call void @llvm.dbg.value(metadata i32 %54, metadata !1863, metadata !DIExpression()), !dbg !3083
  %idxprom189.us = zext i32 %54 to i64, !dbg !3271
  %arrayidx191.us = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom168, i64 %idxprom189.us, i64 0, !dbg !3271
  %55 = load i16, i16* %arrayidx191.us, align 4, !dbg !3271
  %conv192.us = sext i16 %55 to i32, !dbg !3271
  %arrayidx197.us = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom168, i64 %idxprom189.us, i64 1, !dbg !3272
  %56 = load i16, i16* %arrayidx197.us, align 2, !dbg !3272
  %conv198.us = sext i16 %56 to i32, !dbg !3272
  %add199.us = add nsw i32 %conv192.us, %conv198.us, !dbg !3273
  %sub200.us = add nsw i32 %add199.us, -1, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %sub200.us, metadata !1859, metadata !DIExpression()), !dbg !3083
  %add202.us = add nsw i32 %51, %sub200.us, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %add202.us, metadata !1857, metadata !DIExpression()), !dbg !3083
  br label %if.end203.us, !dbg !3276

if.end203.us:                                     ; preds = %if.then184.us, %land.lhs.true180.us, %if.end172.us
  %full_cost.0.us = phi i32 [ %51, %if.end172.us ], [ %add202.us, %if.then184.us ], [ %51, %land.lhs.true180.us ], !dbg !3277
  call void @llvm.dbg.value(metadata i32 %full_cost.0.us, metadata !1857, metadata !DIExpression()), !dbg !3083
  %cmp208.us = icmp sgt i32 %min_full_cost.0.us, %full_cost.0.us, !dbg !3278
  %min_full_cost.1.us = select i1 %cmp208.us, i32 %full_cost.0.us, i32 %min_full_cost.0.us, !dbg !3280
  %best_hard_regno.1.us = select i1 %cmp208.us, i32 %conv152.us, i32 %best_hard_regno.0.us, !dbg !3280
  br label %for.inc212.us, !dbg !3280

for.inc212.us:                                    ; preds = %if.end203.us, %lor.lhs.false165.us, %if.end162.us, %for.body147.us
  %min_full_cost.2.us = phi i32 [ %min_full_cost.0.us, %for.body147.us ], [ %min_full_cost.0.us, %lor.lhs.false165.us ], [ %min_full_cost.0.us, %if.end162.us ], [ %min_full_cost.1.us, %if.end203.us ], !dbg !3083
  %best_hard_regno.2.us = phi i32 [ %best_hard_regno.0.us, %for.body147.us ], [ %best_hard_regno.0.us, %lor.lhs.false165.us ], [ %best_hard_regno.0.us, %if.end162.us ], [ %best_hard_regno.1.us, %if.end203.us ], !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.2.us, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.2.us, metadata !1858, metadata !DIExpression()), !dbg !3083
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !3281
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  br label %for.cond144.us, !dbg !3282, !llvm.loop !3283

for.end214.us-lcssa.us:                           ; preds = %for.cond144.us
  %min_full_cost.0.us.lcssa = phi i32 [ %min_full_cost.0.us, %for.cond144.us ], !dbg !3252
  %best_hard_regno.0.us.lcssa = phi i32 [ %best_hard_regno.0.us, %for.cond144.us ], !dbg !3253
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.us.lcssa, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.us.lcssa, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.us.lcssa, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.us.lcssa, metadata !1852, metadata !DIExpression()), !dbg !3083
  br label %for.end214, !dbg !3285

for.cond144:                                      ; preds = %for.inc212, %for.end143.for.end143.split_crit_edge
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %for.inc212 ], [ 0, %for.end143.for.end143.split_crit_edge ], !dbg !3252
  %min_full_cost.0 = phi i32 [ %min_full_cost.2, %for.inc212 ], [ 2147483647, %for.end143.for.end143.split_crit_edge ], !dbg !3252
  %best_hard_regno.0 = phi i32 [ %best_hard_regno.2, %for.inc212 ], [ -1, %for.end143.for.end143.split_crit_edge ], !dbg !3253
  call void @llvm.dbg.value(metadata i64 %indvars.iv24, metadata !1848, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0, metadata !1858, metadata !DIExpression()), !dbg !3083
  %cmp145 = icmp slt i64 %indvars.iv24, %45, !dbg !3254
  br i1 %cmp145, label %for.body147, label %for.end214.us-lcssa, !dbg !3255

for.body147:                                      ; preds = %for.cond144
  %arrayidx151 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom, i64 %indvars.iv24, !dbg !3256
  %57 = load i16, i16* %arrayidx151, align 2, !dbg !3256
  %conv152 = sext i16 %57 to i32, !dbg !3256
  call void @llvm.dbg.value(metadata i32 %conv152, metadata !1851, metadata !DIExpression()), !dbg !3083
  %call163 = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv152, i32 %4, i64 %conflicting_regs.1.lcssa.lcssa) #8, !dbg !3258
  %tobool164 = icmp eq i8 %call163, 0, !dbg !3258
  br i1 %tobool164, label %for.inc212, label %lor.lhs.false165, !dbg !3259

lor.lhs.false165:                                 ; preds = %for.body147
  %58 = load i64, i64* %arrayidx169, align 8, !dbg !3260
  %sh_prom = zext i32 %conv152 to i64, !dbg !3260
  %shl = shl i64 1, %sh_prom, !dbg !3260
  %and = and i64 %58, %shl, !dbg !3260
  %tobool170 = icmp eq i64 %and, 0, !dbg !3260
  br i1 %tobool170, label %if.end172, label %for.inc212, !dbg !3261

if.end172:                                        ; preds = %lor.lhs.false165
  %arrayidx176 = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %indvars.iv24, !dbg !3262
  %59 = load i32, i32* %arrayidx176, align 4, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %59, metadata !1857, metadata !DIExpression()), !dbg !3083
  %idxprom177 = sext i16 %57 to i64, !dbg !3263
  %arrayidx178 = getelementptr inbounds [53 x i8], [53 x i8]* @allocated_hardreg_p, i64 0, i64 %idxprom177, !dbg !3263
  %60 = load i8, i8* %arrayidx178, align 1, !dbg !3263
  %tobool179 = icmp eq i8 %60, 0, !dbg !3263
  br i1 %tobool179, label %land.lhs.true180, label %if.end203, !dbg !3265

land.lhs.true180:                                 ; preds = %if.end172
  %61 = load i64, i64* @call_used_reg_set, align 8, !dbg !3266
  %call181 = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv152, i32 %4, i64 %61) #8, !dbg !3267
  %tobool183 = icmp eq i8 %call181, 0, !dbg !3267
  br i1 %tobool183, label %if.end203, label %if.then184, !dbg !3268

if.then184:                                       ; preds = %land.lhs.true180
  %arrayidx186 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom177, !dbg !3269
  %62 = load i32, i32* %arrayidx186, align 4, !dbg !3269
  call void @llvm.dbg.value(metadata i32 %62, metadata !1863, metadata !DIExpression()), !dbg !3083
  %idxprom189 = zext i32 %62 to i64, !dbg !3271
  %arrayidx191 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom168, i64 %idxprom189, i64 0, !dbg !3271
  %63 = load i16, i16* %arrayidx191, align 4, !dbg !3271
  %conv192 = sext i16 %63 to i32, !dbg !3271
  %arrayidx197 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom168, i64 %idxprom189, i64 1, !dbg !3272
  %64 = load i16, i16* %arrayidx197, align 2, !dbg !3272
  %conv198 = sext i16 %64 to i32, !dbg !3272
  %add199 = add nsw i32 %conv192, %conv198, !dbg !3273
  %sub200 = add nsw i32 %add199, -1, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %sub200, metadata !1859, metadata !DIExpression()), !dbg !3083
  %add202 = add nsw i32 %59, %sub200, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %add202, metadata !1857, metadata !DIExpression()), !dbg !3083
  br label %if.end203, !dbg !3276

if.end203:                                        ; preds = %land.lhs.true180, %if.end172, %if.then184
  %full_cost.0 = phi i32 [ %59, %if.end172 ], [ %add202, %if.then184 ], [ %59, %land.lhs.true180 ], !dbg !3277
  call void @llvm.dbg.value(metadata i32 %full_cost.0, metadata !1857, metadata !DIExpression()), !dbg !3083
  %cmp208 = icmp sgt i32 %min_full_cost.0, %full_cost.0, !dbg !3278
  %min_full_cost.1 = select i1 %cmp208, i32 %full_cost.0, i32 %min_full_cost.0, !dbg !3280
  %best_hard_regno.1 = select i1 %cmp208, i32 %conv152, i32 %best_hard_regno.0, !dbg !3280
  br label %for.inc212, !dbg !3280

for.inc212:                                       ; preds = %lor.lhs.false165, %for.body147, %if.end203
  %min_full_cost.2 = phi i32 [ %min_full_cost.0, %lor.lhs.false165 ], [ %min_full_cost.0, %for.body147 ], [ %min_full_cost.1, %if.end203 ], !dbg !3083
  %best_hard_regno.2 = phi i32 [ %best_hard_regno.0, %lor.lhs.false165 ], [ %best_hard_regno.0, %for.body147 ], [ %best_hard_regno.1, %if.end203 ], !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.2, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.2, metadata !1858, metadata !DIExpression()), !dbg !3083
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !3281
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  br label %for.cond144, !dbg !3282, !llvm.loop !3283

for.end214.us-lcssa:                              ; preds = %for.cond144
  %min_full_cost.0.lcssa35 = phi i32 [ %min_full_cost.0, %for.cond144 ], !dbg !3252
  %best_hard_regno.0.lcssa34 = phi i32 [ %best_hard_regno.0, %for.cond144 ], !dbg !3253
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.lcssa35, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.lcssa34, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.lcssa35, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.lcssa34, metadata !1852, metadata !DIExpression()), !dbg !3083
  br label %for.end214, !dbg !3285

for.end214:                                       ; preds = %for.end214.us-lcssa.us, %for.end214.us-lcssa
  %min_full_cost.0.lcssa = phi i32 [ %min_full_cost.0.lcssa35, %for.end214.us-lcssa ], [ %min_full_cost.0.us.lcssa, %for.end214.us-lcssa.us ], !dbg !3252
  %best_hard_regno.0.lcssa = phi i32 [ %best_hard_regno.0.lcssa34, %for.end214.us-lcssa ], [ %best_hard_regno.0.us.lcssa, %for.end214.us-lcssa.us ], !dbg !3253
  call void @llvm.dbg.value(metadata i32 %min_full_cost.0.lcssa, metadata !1858, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.0.lcssa, metadata !1852, metadata !DIExpression()), !dbg !3083
  %cmp215 = icmp sgt i32 %min_full_cost.0.lcssa, %add.lcssa37, !dbg !3285
  br i1 %cmp215, label %if.then217, label %fail, !dbg !3287

if.then217:                                       ; preds = %for.end214
  %65 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3288
  %cmp220 = icmp sgt i32 %65, 3, !dbg !3291
  %or.cond2 = and i1 %tobool41, %cmp220, !dbg !3292
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3293
  %cmp223 = icmp ne %struct._IO_FILE* %66, null, !dbg !3294
  %or.cond3 = and i1 %or.cond2, %cmp223, !dbg !3292
  br i1 %or.cond3, label %if.then225, label %fail, !dbg !3292

if.then225:                                       ; preds = %if.then217
  %call226 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %66, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %add.lcssa37, i32 %min_full_cost.0.lcssa) #6, !dbg !3295
  br label %fail, !dbg !3295

fail.loopexit:                                    ; preds = %if.then72
  br label %fail, !dbg !3296

fail:                                             ; preds = %fail.loopexit, %for.end214, %if.then217, %if.then225
  %best_hard_regno.4 = phi i32 [ %best_hard_regno.0.lcssa, %for.end214 ], [ -1, %if.then217 ], [ -1, %if.then225 ], [ -1, %fail.loopexit ], !dbg !3083
  call void @llvm.dbg.value(metadata i32 %best_hard_regno.4, metadata !1852, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.label(metadata !1880), !dbg !3298
  %67 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !3296
  %cmp229 = icmp ne i32 %67, 1, !dbg !3299
  %cmp232 = icmp slt i32 %best_hard_regno.4, 0, !dbg !3300
  %or.cond4 = and i1 %cmp229, %cmp232, !dbg !3301
  br i1 %or.cond4, label %land.lhs.true234, label %if.end273, !dbg !3301

land.lhs.true234:                                 ; preds = %fail
  %next_coalesced_allocno235 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 19, !dbg !3302
  %68 = load %struct.ira_allocno*, %struct.ira_allocno** %next_coalesced_allocno235, align 8, !dbg !3302
  %cmp236 = icmp eq %struct.ira_allocno* %68, %allocno, !dbg !3303
  br i1 %cmp236, label %if.end273, label %if.then238, !dbg !3304

if.then238:                                       ; preds = %land.lhs.true234
  call void @llvm.dbg.value(metadata i32 0, metadata !1849, metadata !DIExpression()), !dbg !3083
  br label %for.cond240, !dbg !3305

for.cond240:                                      ; preds = %for.inc248, %if.then238
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc248 ], [ 0, %if.then238 ], !dbg !3308
  %a.2 = phi %struct.ira_allocno* [ %a.2.pre, %for.inc248 ], [ %68, %if.then238 ], !dbg !3308
  call void @llvm.dbg.value(metadata i64 %indvars.iv22, metadata !1849, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.2, metadata !1866, metadata !DIExpression()), !dbg !3083
  %69 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !3309
  %indvars.iv.next23 = add nuw i64 %indvars.iv22, 1, !dbg !3312
  call void @llvm.dbg.value(metadata i32 undef, metadata !1849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  %arrayidx243 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %69, i64 %indvars.iv22, !dbg !3309
  store %struct.ira_allocno* %a.2, %struct.ira_allocno** %arrayidx243, align 8, !dbg !3313
  %cmp244 = icmp eq %struct.ira_allocno* %a.2, %allocno, !dbg !3314
  br i1 %cmp244, label %for.end250, label %for.inc248, !dbg !3316

for.inc248:                                       ; preds = %for.cond240
  %a.2.in.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.2, i64 0, i32 19, !dbg !3308
  %a.2.pre = load %struct.ira_allocno*, %struct.ira_allocno** %a.2.in.phi.trans.insert, align 8, !dbg !3308
  br label %for.cond240, !dbg !3317, !llvm.loop !3318

for.end250:                                       ; preds = %for.cond240
  %indvars.iv22.lcssa = phi i64 [ %indvars.iv22, %for.cond240 ], !dbg !3308
  %indvars.iv.next23.lcssa = phi i64 [ %indvars.iv.next23, %for.cond240 ], !dbg !3312
  call void @llvm.dbg.value(metadata i64 %indvars.iv22.lcssa, metadata !1849, metadata !DIExpression()), !dbg !3083
  %70 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !3321
  %conv251 = and i64 %indvars.iv.next23.lcssa, 4294967295, !dbg !3322
  call void @spec_qsort(i8* %70, i64 %conv251, i64 8, i32 (i8*, i8*)* nonnull @allocno_cost_compare_func) #6, !dbg !3323
  call void @llvm.dbg.value(metadata i32 0, metadata !1848, metadata !DIExpression()), !dbg !3083
  %71 = add i64 %indvars.iv22.lcssa, 1, !dbg !3324
  %wide.trip.count = and i64 %71, 4294967295, !dbg !3326
  br label %for.cond252, !dbg !3324

for.cond252:                                      ; preds = %for.inc270, %for.end250
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc270 ], [ 0, %for.end250 ], !dbg !3328
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1848, metadata !DIExpression()), !dbg !3083
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !3326
  br i1 %exitcond, label %cleanup.loopexit, label %for.body255, !dbg !3329

for.body255:                                      ; preds = %for.cond252
  %72 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !3330
  %arrayidx257 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %72, i64 %indvars.iv, !dbg !3330
  %73 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx257, align 8, !dbg !3330
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %73, metadata !1866, metadata !DIExpression()), !dbg !3083
  %first_coalesced_allocno258 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %73, i64 0, i32 18, !dbg !3332
  store %struct.ira_allocno* %73, %struct.ira_allocno** %first_coalesced_allocno258, align 8, !dbg !3333
  %next_coalesced_allocno259 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %73, i64 0, i32 19, !dbg !3334
  store %struct.ira_allocno* %73, %struct.ira_allocno** %next_coalesced_allocno259, align 8, !dbg !3335
  %call260 = call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** nonnull @allocno_stack_vec, %struct.ira_allocno* %73) #8, !dbg !3336
  %74 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3337
  %cmp261 = icmp sgt i32 %74, 3, !dbg !3339
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3340
  %cmp264 = icmp ne %struct._IO_FILE* %75, null, !dbg !3341
  %or.cond5 = and i1 %cmp261, %cmp264, !dbg !3342
  br i1 %or.cond5, label %if.then266, label %for.inc270, !dbg !3342

if.then266:                                       ; preds = %for.body255
  %call267 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %75, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !3343
  call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %73) #8, !dbg !3345
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3346
  %call268 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3347
  br label %for.inc270, !dbg !3348

for.inc270:                                       ; preds = %for.body255, %if.then266
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3349
  call void @llvm.dbg.value(metadata i32 undef, metadata !1848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3083
  br label %for.cond252, !dbg !3350, !llvm.loop !3351

if.end273:                                        ; preds = %land.lhs.true234, %fail
  %cmp274 = icmp sgt i32 %best_hard_regno.4, -1, !dbg !3353
  br i1 %cmp274, label %if.then276, label %if.end279, !dbg !3355

if.then276:                                       ; preds = %if.end273
  %idxprom277 = sext i32 %best_hard_regno.4 to i64, !dbg !3356
  %arrayidx278 = getelementptr inbounds [53 x i8], [53 x i8]* @allocated_hardreg_p, i64 0, i64 %idxprom277, !dbg !3356
  store i8 1, i8* %arrayidx278, align 1, !dbg !3357
  br label %if.end279, !dbg !3356

if.end279:                                        ; preds = %if.then276, %if.end273
  br i1 %cmp274, label %if.end279.split.us, label %if.end279.if.end279.split_crit_edge, !dbg !3358

if.end279.if.end279.split_crit_edge:              ; preds = %if.end279
  br label %for.cond281, !dbg !3358

if.end279.split.us:                               ; preds = %if.end279
  br label %for.cond281.us, !dbg !3358

for.cond281.us:                                   ; preds = %for.inc294.us, %if.end279.split.us
  %allocno.pn6.us = phi %struct.ira_allocno* [ %allocno, %if.end279.split.us ], [ %a.3.us, %for.inc294.us ]
  %a.3.in.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn6.us, i64 0, i32 19, !dbg !3360
  %a.3.us = load %struct.ira_allocno*, %struct.ira_allocno** %a.3.in.us, align 8, !dbg !3360
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.3.us, metadata !1866, metadata !DIExpression()), !dbg !3083
  %hard_regno282.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.3.us, i64 0, i32 3, !dbg !3361
  store i32 %best_hard_regno.4, i32* %hard_regno282.us, align 4, !dbg !3364
  %assigned_p283.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.3.us, i64 0, i32 31, !dbg !3365
  %bf.load284.us = load i16, i16* %assigned_p283.us, align 4, !dbg !3366
  %bf.set.us = or i16 %bf.load284.us, 256, !dbg !3366
  store i16 %bf.set.us, i16* %assigned_p283.us, align 4, !dbg !3366
  call fastcc void @update_copy_costs(%struct.ira_allocno* %a.3.us, i8 zeroext 1) #8, !dbg !3367
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %a.3.us) #6, !dbg !3369
  %cmp290.us = icmp eq %struct.ira_allocno* %a.3.us, %allocno, !dbg !3370
  br i1 %cmp290.us, label %for.end296.us-lcssa.us, label %for.inc294.us, !dbg !3372

for.inc294.us:                                    ; preds = %for.cond281.us
  br label %for.cond281.us, !dbg !3373, !llvm.loop !3374

for.end296.us-lcssa.us:                           ; preds = %for.cond281.us
  br label %for.end296, !dbg !3377

for.cond281:                                      ; preds = %for.inc294, %if.end279.if.end279.split_crit_edge
  %allocno.pn6 = phi %struct.ira_allocno* [ %allocno, %if.end279.if.end279.split_crit_edge ], [ %a.3, %for.inc294 ]
  %a.3.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn6, i64 0, i32 19, !dbg !3360
  %a.3 = load %struct.ira_allocno*, %struct.ira_allocno** %a.3.in, align 8, !dbg !3360
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.3, metadata !1866, metadata !DIExpression()), !dbg !3083
  %hard_regno282 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.3, i64 0, i32 3, !dbg !3361
  store i32 %best_hard_regno.4, i32* %hard_regno282, align 4, !dbg !3364
  %assigned_p283 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.3, i64 0, i32 31, !dbg !3365
  %bf.load284 = load i16, i16* %assigned_p283, align 4, !dbg !3366
  %bf.set = or i16 %bf.load284, 256, !dbg !3366
  store i16 %bf.set, i16* %assigned_p283, align 4, !dbg !3366
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %a.3) #6, !dbg !3369
  %cmp290 = icmp eq %struct.ira_allocno* %a.3, %allocno, !dbg !3370
  br i1 %cmp290, label %for.end296.us-lcssa, label %for.inc294, !dbg !3372

for.inc294:                                       ; preds = %for.cond281
  br label %for.cond281, !dbg !3373, !llvm.loop !3374

for.end296.us-lcssa:                              ; preds = %for.cond281
  br label %for.end296, !dbg !3377

for.end296:                                       ; preds = %for.end296.us-lcssa.us, %for.end296.us-lcssa
  %best_hard_regno.4.lobit = lshr i32 %best_hard_regno.4, 31, !dbg !3377
  %77 = trunc i32 %best_hard_regno.4.lobit to i8, !dbg !3377
  %.not = xor i8 %77, 1, !dbg !3377
  br label %cleanup, !dbg !3378

cleanup.loopexit:                                 ; preds = %for.cond252
  br label %cleanup, !dbg !3379

cleanup:                                          ; preds = %cleanup.loopexit, %for.end296
  %retval.0 = phi i8 [ %.not, %for.end296 ], [ 0, %cleanup.loopexit ], !dbg !3083
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !3379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3379
  ret i8 %retval.0, !dbg !3379
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_sort_regnos_for_alter_reg(i32* %pseudo_regnos, i32 %n, i32* %reg_max_ref_width) local_unnamed_addr #5 !dbg !3380 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  call void @llvm.dbg.value(metadata i32* %pseudo_regnos, metadata !3384, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 %n, metadata !3385, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32* %reg_max_ref_width, metadata !3386, metadata !DIExpression()), !dbg !3396
  %call = tail call i32 @max_reg_num() #6, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %call, metadata !3387, metadata !DIExpression()), !dbg !3396
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !3398
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3398
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !3399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !3399
  %call1 = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !3400
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !3401
  %call2 = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !3402
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !3403
  call void @llvm.dbg.value(metadata i32 0, metadata !3388, metadata !DIExpression()), !dbg !3396
  %2 = sext i32 %n to i64, !dbg !3404
  br label %for.cond, !dbg !3404

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc ], [ 0, %entry ], !dbg !3406
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !3388, metadata !DIExpression()), !dbg !3396
  %cmp = icmp slt i64 %indvars.iv5, %2, !dbg !3407
  br i1 %cmp, label %for.body, label %for.end, !dbg !3409

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %pseudo_regnos, i64 %indvars.iv5, !dbg !3410
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %3, metadata !3389, metadata !DIExpression()), !dbg !3396
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !3412
  %idxprom3 = sext i32 %3 to i64, !dbg !3412
  %arrayidx4 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %idxprom3, !dbg !3412
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx4, align 8, !dbg !3412
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !3392, metadata !DIExpression()), !dbg !3396
  %cmp5 = icmp eq %struct.ira_allocno* %5, null, !dbg !3413
  br i1 %cmp5, label %for.inc, label %if.then, !dbg !3415

if.then:                                          ; preds = %for.body
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !3416
  %num6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 0, !dbg !3417
  %7 = load i32, i32* %num6, align 8, !dbg !3417
  %call7 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %7) #6, !dbg !3418
  br label %for.inc, !dbg !3418

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !3419
  call void @llvm.dbg.value(metadata i32 undef, metadata !3388, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3396
  br label %for.cond, !dbg !3420, !llvm.loop !3421

for.end:                                          ; preds = %for.cond
  store i1 false, i1* @allocno_coalesced_p, align 1, !dbg !3423
  tail call fastcc void @coalesce_allocnos(i8 zeroext 1) #8, !dbg !3424
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !3425
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %8) #6, !dbg !3426
  %conv = sext i32 %call to i64, !dbg !3427
  %mul = shl nsw i64 %conv, 2, !dbg !3428
  %call8 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !3429
  store i8* %call8, i8** bitcast (i32** @regno_coalesced_allocno_cost to i8**), align 8, !dbg !3430
  %call11 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !3431
  store i8* %call11, i8** bitcast (i32** @regno_coalesced_allocno_num to i8**), align 8, !dbg !3432
  %call14 = tail call i8* @memset(i8* %call11, i32 0, i64 %mul) #6, !dbg !3433
  tail call fastcc void @setup_coalesced_allocno_costs_and_nums(i32* %pseudo_regnos, i32 %n) #8, !dbg !3434
  %9 = bitcast i32* %pseudo_regnos to i8*, !dbg !3435
  %conv15 = sext i32 %n to i64, !dbg !3436
  tail call void @spec_qsort(i8* %9, i64 %conv15, i64 4, i32 (i8*, i8*)* nonnull @coalesced_pseudo_reg_freq_compare) #6, !dbg !3437
  %10 = load i32, i32* @ira_allocnos_num, align 4, !dbg !3438
  %conv16 = sext i32 %10 to i64, !dbg !3438
  %mul17 = shl nsw i64 %conv16, 3, !dbg !3439
  %call18 = tail call i8* @ira_allocate(i64 %mul17) #6, !dbg !3440
  %11 = bitcast i8* %call18 to %struct.ira_allocno**, !dbg !3441
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %11, metadata !3395, metadata !DIExpression()), !dbg !3396
  %call19 = tail call fastcc i32 @collect_spilled_coalesced_allocnos(i32* %pseudo_regnos, i32 %n, %struct.ira_allocno** %11) #8, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %call19, metadata !3390, metadata !DIExpression()), !dbg !3396
  %12 = load i32, i32* @flag_ira_share_spill_slots, align 4, !dbg !3443
  %tobool = icmp eq i32 %12, 0, !dbg !3443
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !3445

land.lhs.true:                                    ; preds = %for.end
  %call20 = tail call fastcc zeroext i8 @coalesce_spill_slots(%struct.ira_allocno** %11, i32 %call19) #8, !dbg !3446
  %tobool22 = icmp eq i8 %call20, 0, !dbg !3446
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !3447

if.then23:                                        ; preds = %land.lhs.true
  tail call fastcc void @setup_coalesced_allocno_costs_and_nums(i32* %pseudo_regnos, i32 %n) #8, !dbg !3448
  tail call void @spec_qsort(i8* %9, i64 %conv15, i64 4, i32 (i8*, i8*)* nonnull @coalesced_pseudo_reg_freq_compare) #6, !dbg !3450
  %call25 = tail call fastcc i32 @collect_spilled_coalesced_allocnos(i32* %pseudo_regnos, i32 %n, %struct.ira_allocno** %11) #8, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %call25, metadata !3390, metadata !DIExpression()), !dbg !3396
  br label %if.end26, !dbg !3452

if.end26:                                         ; preds = %land.lhs.true, %for.end, %if.then23
  %num.0 = phi i32 [ %call25, %if.then23 ], [ %call19, %land.lhs.true ], [ %call19, %for.end ], !dbg !3396
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !3390, metadata !DIExpression()), !dbg !3396
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !3453
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %13) #6, !dbg !3454
  store i1 false, i1* @allocno_coalesced_p, align 1, !dbg !3455
  call void @llvm.dbg.value(metadata i32 1, metadata !3391, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 0, metadata !3388, metadata !DIExpression()), !dbg !3396
  %14 = bitcast %struct.ira_allocno** %a to i64*, !dbg !3456
  %15 = sext i32 %num.0 to i64, !dbg !3461
  br label %for.cond27, !dbg !3461

for.cond27:                                       ; preds = %for.inc116, %if.end26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc116 ], [ 0, %if.end26 ], !dbg !3462
  %slot_num.0 = phi i32 [ %slot_num.1, %for.inc116 ], [ 1, %if.end26 ], !dbg !3463
  call void @llvm.dbg.value(metadata i32 %slot_num.0, metadata !3391, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3388, metadata !DIExpression()), !dbg !3396
  %cmp28 = icmp slt i64 %indvars.iv, %15, !dbg !3464
  br i1 %cmp28, label %for.body30, label %for.end118, !dbg !3465

for.body30:                                       ; preds = %for.cond27
  %arrayidx32 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %11, i64 %indvars.iv, !dbg !3466
  %16 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx32, align 8, !dbg !3466
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !3392, metadata !DIExpression()), !dbg !3396
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 18, !dbg !3467
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3467
  %cmp33 = icmp eq %struct.ira_allocno* %17, %16, !dbg !3469
  br i1 %cmp33, label %lor.lhs.false, label %for.inc116, !dbg !3470

lor.lhs.false:                                    ; preds = %for.body30
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 3, !dbg !3471
  %18 = load i32, i32* %hard_regno, align 4, !dbg !3471
  %cmp35 = icmp sgt i32 %18, -1, !dbg !3472
  br i1 %cmp35, label %for.inc116, label %lor.lhs.false37, !dbg !3473

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %regno38 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 1, !dbg !3474
  %19 = load i32, i32* %regno38, align 4, !dbg !3474
  %20 = load i32, i32* @ira_reg_equiv_len, align 4, !dbg !3475
  %cmp39 = icmp slt i32 %19, %20, !dbg !3476
  br i1 %cmp39, label %land.lhs.true41, label %if.end54, !dbg !3477

land.lhs.true41:                                  ; preds = %lor.lhs.false37
  %21 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !3478
  %idxprom43 = sext i32 %19 to i64, !dbg !3478
  %arrayidx44 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %21, i64 %idxprom43, !dbg !3478
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx44, align 8, !dbg !3478
  %cmp45 = icmp eq %struct.rtx_def* %22, null, !dbg !3479
  br i1 %cmp45, label %lor.lhs.false47, label %for.inc116, !dbg !3480

lor.lhs.false47:                                  ; preds = %land.lhs.true41
  %23 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !3481
  %arrayidx50 = getelementptr inbounds i8, i8* %23, i64 %idxprom43, !dbg !3481
  %24 = load i8, i8* %arrayidx50, align 1, !dbg !3481
  %tobool52 = icmp eq i8 %24, 0, !dbg !3481
  br i1 %tobool52, label %if.end54, label %for.inc116, !dbg !3482

if.end54:                                         ; preds = %lor.lhs.false47, %lor.lhs.false37
  %25 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3483
  %cmp55 = icmp sgt i32 %25, 3, !dbg !3485
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3486
  %cmp58 = icmp ne %struct._IO_FILE* %26, null, !dbg !3487
  %or.cond = and i1 %cmp55, %cmp58, !dbg !3488
  br i1 %or.cond, label %if.then60, label %if.end62, !dbg !3488

if.then60:                                        ; preds = %if.end54
  %call61 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i32 %slot_num.0) #6, !dbg !3489
  br label %if.end62, !dbg !3489

if.end62:                                         ; preds = %if.then60, %if.end54
  call void @llvm.dbg.value(metadata i32 %inc63, metadata !3391, metadata !DIExpression()), !dbg !3396
  %next_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 19, !dbg !3490
  %27 = bitcast %struct.ira_allocno** %next_coalesced_allocno to i64*, !dbg !3490
  %28 = load i64, i64* %27, align 8, !dbg !3490
  store i64 %28, i64* %14, align 8, !dbg !3491
  %sub = xor i32 %slot_num.0, -1, !dbg !3492
  %29 = inttoptr i64 %28 to %struct.ira_allocno*, !dbg !3495
  br label %for.cond64, !dbg !3495

for.cond64:                                       ; preds = %for.inc105, %if.end62
  %30 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %31 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %32 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %33 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %34 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %35 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %36 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ]
  %37 = phi %struct.ira_allocno* [ %58, %for.inc105 ], [ %29, %if.end62 ], !dbg !3496
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %37, metadata !3393, metadata !DIExpression()), !dbg !3396
  %hard_regno65 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %37, i64 0, i32 3, !dbg !3496
  store i32 %sub, i32* %hard_regno65, align 4, !dbg !3497
  %38 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3498
  %cmp66 = icmp sgt i32 %38, 3, !dbg !3500
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3501
  %cmp69 = icmp ne %struct._IO_FILE* %39, null, !dbg !3502
  %or.cond1 = and i1 %cmp66, %cmp69, !dbg !3503
  br i1 %or.cond1, label %if.then71, label %if.end100, !dbg !3503

if.then71:                                        ; preds = %for.cond64
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %36, metadata !3393, metadata !DIExpression()), !dbg !3396
  %num72 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %36, i64 0, i32 0, !dbg !3504
  %40 = load i32, i32* %num72, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %36, metadata !3393, metadata !DIExpression()), !dbg !3396
  %regno73 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %36, i64 0, i32 1, !dbg !3505
  %41 = load i32, i32* %regno73, align 4, !dbg !3505
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %36, metadata !3393, metadata !DIExpression()), !dbg !3396
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %36, i64 0, i32 8, !dbg !3506
  %42 = load i32, i32* %freq, align 4, !dbg !3506
  %43 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !3507
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %35, metadata !3393, metadata !DIExpression()), !dbg !3396
  %regno74 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %35, i64 0, i32 1, !dbg !3507
  %44 = load i32, i32* %regno74, align 4, !dbg !3507
  %idxprom75 = sext i32 %44 to i64, !dbg !3507
  %arrayidx76 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom75, !dbg !3507
  %45 = bitcast %struct.rtx_def** %arrayidx76 to i32**, !dbg !3507
  %46 = load i32*, i32** %45, align 8, !dbg !3507
  %bf.load = load i32, i32* %46, align 8, !dbg !3507
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3507
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3507
  %idxprom77 = zext i32 %bf.clear to i64, !dbg !3507
  %arrayidx78 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom77, !dbg !3507
  %47 = load i8, i8* %arrayidx78, align 1, !dbg !3507
  %conv80 = zext i8 %47 to i32, !dbg !3507
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %34, metadata !3393, metadata !DIExpression()), !dbg !3396
  %regno81 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %34, i64 0, i32 1, !dbg !3507
  %48 = load i32, i32* %regno81, align 4, !dbg !3507
  %idxprom82 = sext i32 %48 to i64, !dbg !3507
  %arrayidx83 = getelementptr inbounds i32, i32* %reg_max_ref_width, i64 %idxprom82, !dbg !3507
  %49 = load i32, i32* %arrayidx83, align 4, !dbg !3507
  %cmp84 = icmp ult i32 %49, %conv80, !dbg !3507
  br i1 %cmp84, label %cond.true, label %cond.false, !dbg !3507

cond.true:                                        ; preds = %if.then71
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !3393, metadata !DIExpression()), !dbg !3396
  %regno86 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 1, !dbg !3507
  %50 = load i32, i32* %regno86, align 4, !dbg !3507
  %idxprom87 = sext i32 %50 to i64, !dbg !3507
  %arrayidx88 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom87, !dbg !3507
  %51 = bitcast %struct.rtx_def** %arrayidx88 to i32**, !dbg !3507
  %52 = load i32*, i32** %51, align 8, !dbg !3507
  %bf.load89 = load i32, i32* %52, align 8, !dbg !3507
  %bf.lshr90 = lshr i32 %bf.load89, 16, !dbg !3507
  %bf.clear91 = and i32 %bf.lshr90, 255, !dbg !3507
  %idxprom92 = zext i32 %bf.clear91 to i64, !dbg !3507
  %arrayidx93 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom92, !dbg !3507
  %53 = load i8, i8* %arrayidx93, align 1, !dbg !3507
  %conv95 = zext i8 %53 to i32, !dbg !3507
  br label %cond.end, !dbg !3507

cond.false:                                       ; preds = %if.then71
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %33, metadata !3393, metadata !DIExpression()), !dbg !3396
  %regno96 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %33, i64 0, i32 1, !dbg !3507
  %54 = load i32, i32* %regno96, align 4, !dbg !3507
  %idxprom97 = sext i32 %54 to i64, !dbg !3507
  %arrayidx98 = getelementptr inbounds i32, i32* %reg_max_ref_width, i64 %idxprom97, !dbg !3507
  %55 = load i32, i32* %arrayidx98, align 4, !dbg !3507
  br label %cond.end, !dbg !3507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv95, %cond.true ], [ %55, %cond.false ], !dbg !3507
  %call99 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 %40, i32 %41, i32 %42, i32 %cond) #6, !dbg !3508
  br label %if.end100, !dbg !3508

if.end100:                                        ; preds = %cond.end, %for.cond64
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !3393, metadata !DIExpression()), !dbg !3396
  %cmp101 = icmp eq %struct.ira_allocno* %31, %16, !dbg !3509
  br i1 %cmp101, label %for.end107, label %for.inc105, !dbg !3511

for.inc105:                                       ; preds = %if.end100
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %30, metadata !3393, metadata !DIExpression()), !dbg !3396
  %next_coalesced_allocno106 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %30, i64 0, i32 19, !dbg !3512
  %56 = bitcast %struct.ira_allocno** %next_coalesced_allocno106 to i64*, !dbg !3512
  %57 = load i64, i64* %56, align 8, !dbg !3512
  store i64 %57, i64* %14, align 8, !dbg !3513
  %58 = inttoptr i64 %57 to %struct.ira_allocno*, !dbg !3514
  br label %for.cond64, !dbg !3514, !llvm.loop !3515

for.end107:                                       ; preds = %if.end100
  %inc63 = add nsw i32 %slot_num.0, 1, !dbg !3518
  %59 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3519
  %cmp108 = icmp sgt i32 %59, 3, !dbg !3521
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3522
  %cmp111 = icmp ne %struct._IO_FILE* %60, null, !dbg !3523
  %or.cond2 = and i1 %cmp108, %cmp111, !dbg !3524
  br i1 %or.cond2, label %if.then113, label %for.inc116, !dbg !3524

if.then113:                                       ; preds = %for.end107
  %call114 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !3525
  br label %for.inc116, !dbg !3525

for.inc116:                                       ; preds = %lor.lhs.false47, %land.lhs.true41, %for.body30, %for.end107, %if.then113, %lor.lhs.false
  %slot_num.1 = phi i32 [ %slot_num.0, %lor.lhs.false47 ], [ %slot_num.0, %land.lhs.true41 ], [ %slot_num.0, %lor.lhs.false ], [ %slot_num.0, %for.body30 ], [ %inc63, %if.then113 ], [ %inc63, %for.end107 ], !dbg !3396
  call void @llvm.dbg.value(metadata i32 %slot_num.1, metadata !3391, metadata !DIExpression()), !dbg !3396
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3526
  call void @llvm.dbg.value(metadata i32 undef, metadata !3388, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3396
  br label %for.cond27, !dbg !3527, !llvm.loop !3528

for.end118:                                       ; preds = %for.cond27
  %slot_num.0.lcssa = phi i32 [ %slot_num.0, %for.cond27 ], !dbg !3463
  call void @llvm.dbg.value(metadata i32 %slot_num.0.lcssa, metadata !3391, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 %slot_num.0.lcssa, metadata !3391, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 %slot_num.0.lcssa, metadata !3391, metadata !DIExpression()), !dbg !3396
  %sub119 = add nsw i32 %slot_num.0.lcssa, -1, !dbg !3530
  store i32 %sub119, i32* @ira_spilled_reg_stack_slots_num, align 4, !dbg !3531
  tail call void @ira_free(i8* %call18) #6, !dbg !3532
  store i32* %reg_max_ref_width, i32** @regno_max_ref_width, align 8, !dbg !3533
  tail call void @spec_qsort(i8* %9, i64 %conv15, i64 4, i32 (i8*, i8*)* nonnull @coalesced_pseudo_reg_slot_compare) #6, !dbg !3534
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3394, metadata !DIExpression(DW_OP_deref)), !dbg !3396
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #8, !dbg !3535
  br label %for.cond121, !dbg !3535

for.cond121:                                      ; preds = %for.body124, %for.end118
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !3393, metadata !DIExpression(DW_OP_deref)), !dbg !3396
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !3394, metadata !DIExpression(DW_OP_deref)), !dbg !3396
  %call122 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #8, !dbg !3537
  %tobool123 = icmp eq i8 %call122, 0, !dbg !3535
  br i1 %tobool123, label %for.end127, label %for.body124, !dbg !3535

for.body124:                                      ; preds = %for.cond121
  %61 = load i64, i64* %14, align 8, !dbg !3539
  %.cast = inttoptr i64 %61 to %struct.ira_allocno*, !dbg !3541
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !3393, metadata !DIExpression()), !dbg !3396
  %first_coalesced_allocno125 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 18, !dbg !3541
  %62 = bitcast %struct.ira_allocno** %first_coalesced_allocno125 to i64*, !dbg !3542
  store i64 %61, i64* %62, align 8, !dbg !3542
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !3393, metadata !DIExpression()), !dbg !3396
  %next_coalesced_allocno126 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 19, !dbg !3543
  %63 = bitcast %struct.ira_allocno** %next_coalesced_allocno126 to i64*, !dbg !3544
  store i64 %61, i64* %63, align 8, !dbg !3544
  br label %for.cond121, !dbg !3537, !llvm.loop !3545

for.end127:                                       ; preds = %for.cond121
  %64 = load i8*, i8** bitcast (i32** @regno_coalesced_allocno_num to i8**), align 8, !dbg !3547
  call void @ira_free(i8* %64) #6, !dbg !3548
  %65 = load i8*, i8** bitcast (i32** @regno_coalesced_allocno_cost to i8**), align 8, !dbg !3549
  call void @ira_free(i8* %65) #6, !dbg !3550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !3551
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3551
  ret void, !dbg !3551
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @coalesce_allocnos(i8 zeroext %reload_p) unnamed_addr #5 !dbg !3552 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i8 %reload_p, metadata !3556, metadata !DIExpression()), !dbg !3576
  %0 = bitcast i32* %j to i8*, !dbg !3577
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3577
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !3578
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3578
  %2 = load i32, i32* @ira_copies_num, align 4, !dbg !3579
  %conv = sext i32 %2 to i64, !dbg !3579
  %mul = shl nsw i64 %conv, 3, !dbg !3580
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !3581
  %3 = bitcast i8* %call to %struct.ira_allocno_copy**, !dbg !3582
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy** %3, metadata !3560, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 0, metadata !3566, metadata !DIExpression()), !dbg !3576
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !3583
  call void @llvm.dbg.value(metadata i32* %j, metadata !3563, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3568, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %j) #8, !dbg !3583
  %tobool3 = icmp eq i8 %reload_p, 0, !dbg !3585
  br label %for.cond, !dbg !3583

for.cond:                                         ; preds = %for.inc106, %entry
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %entry ], [ %next_cp.4, %for.inc106 ]
  %cp_num.0 = phi i32 [ 0, %entry ], [ %cp_num.4, %for.inc106 ], !dbg !3589
  call void @llvm.dbg.value(metadata i32 %cp_num.0, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32* %j, metadata !3563, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3568, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3590
  %tobool = icmp eq i8 %call1, 0, !dbg !3583
  br i1 %tobool, label %for.end107, label %for.body, !dbg !3583

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !3591
  %6 = load i32, i32* %j, align 4, !dbg !3592
  call void @llvm.dbg.value(metadata i32 %6, metadata !3563, metadata !DIExpression()), !dbg !3576
  %idxprom = zext i32 %6 to i64, !dbg !3591
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %5, i64 %idxprom, !dbg !3591
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !3591
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !3557, metadata !DIExpression()), !dbg !3576
  %regno2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 1, !dbg !3593
  %8 = load i32, i32* %regno2, align 4, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %8, metadata !3567, metadata !DIExpression()), !dbg !3576
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false, !dbg !3594

land.lhs.true:                                    ; preds = %for.body
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 31, !dbg !3595
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !3595
  %bf.clear = and i16 %bf.load, 256, !dbg !3595
  %tobool4 = icmp eq i16 %bf.clear, 0, !dbg !3595
  br i1 %tobool4, label %lor.lhs.false, label %for.inc106, !dbg !3596

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  br i1 %tobool3, label %if.end, label %land.lhs.true7, !dbg !3597

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %assigned_p8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 31, !dbg !3598
  %bf.load9 = load i16, i16* %assigned_p8, align 4, !dbg !3598
  %bf.clear11 = and i16 %bf.load9, 256, !dbg !3598
  %tobool13 = icmp eq i16 %bf.clear11, 0, !dbg !3598
  br i1 %tobool13, label %for.inc106, label %lor.lhs.false14, !dbg !3599

lor.lhs.false14:                                  ; preds = %land.lhs.true7
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 3, !dbg !3600
  %9 = load i32, i32* %hard_regno, align 4, !dbg !3600
  %cmp = icmp sgt i32 %9, -1, !dbg !3601
  br i1 %cmp, label %for.inc106, label %lor.lhs.false16, !dbg !3602

lor.lhs.false16:                                  ; preds = %lor.lhs.false14
  %10 = load i32, i32* @ira_reg_equiv_len, align 4, !dbg !3603
  %cmp17 = icmp slt i32 %8, %10, !dbg !3604
  br i1 %cmp17, label %land.lhs.true19, label %if.end, !dbg !3605

land.lhs.true19:                                  ; preds = %lor.lhs.false16
  %11 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !3606
  %idxprom20 = sext i32 %8 to i64, !dbg !3606
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idxprom20, !dbg !3606
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8, !dbg !3606
  %cmp22 = icmp eq %struct.rtx_def* %12, null, !dbg !3607
  br i1 %cmp22, label %lor.lhs.false24, label %for.inc106, !dbg !3608

lor.lhs.false24:                                  ; preds = %land.lhs.true19
  %13 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !3609
  %arrayidx26 = getelementptr inbounds i8, i8* %13, i64 %idxprom20, !dbg !3609
  %14 = load i8, i8* %arrayidx26, align 1, !dbg !3609
  %tobool28 = icmp eq i8 %14, 0, !dbg !3609
  br i1 %tobool28, label %if.end, label %for.inc106, !dbg !3610

if.end:                                           ; preds = %lor.lhs.false24, %lor.lhs.false, %lor.lhs.false16
  %cover_class29 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 9, !dbg !3611
  %15 = load i32, i32* %cover_class29, align 8, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %15, metadata !3561, metadata !DIExpression()), !dbg !3576
  %mode30 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 2, !dbg !3612
  %16 = load i32, i32* %mode30, align 8, !dbg !3612
  call void @llvm.dbg.value(metadata i32 %16, metadata !3562, metadata !DIExpression()), !dbg !3576
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 15, !dbg !3613
  %17 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !3613
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %17, metadata !3558, metadata !DIExpression()), !dbg !3576
  br i1 %tobool3, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !3615

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond31, !dbg !3615

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond31.us, !dbg !3615

for.cond31.us:                                    ; preds = %for.inc.us, %if.end.split.us
  %next_cp.1.us = phi %struct.ira_allocno_copy* [ %next_cp.0, %if.end.split.us ], [ %next_cp.3.us, %for.inc.us ]
  %cp.0.us = phi %struct.ira_allocno_copy* [ %17, %if.end.split.us ], [ %next_cp.3.us, %for.inc.us ], !dbg !3616
  %cp_num.1.us = phi i32 [ %cp_num.0, %if.end.split.us ], [ %cp_num.3.us, %for.inc.us ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.us, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0.us, metadata !3558, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us, metadata !3559, metadata !DIExpression()), !dbg !3576
  %cmp32.us = icmp eq %struct.ira_allocno_copy* %cp.0.us, null, !dbg !3617
  br i1 %cmp32.us, label %for.inc106.loopexit.us-lcssa.us, label %for.body34.us, !dbg !3619

for.body34.us:                                    ; preds = %for.cond31.us
  %first.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 1, !dbg !3620
  %18 = load %struct.ira_allocno*, %struct.ira_allocno** %first.us, align 8, !dbg !3620
  %cmp35.us = icmp eq %struct.ira_allocno* %18, %7, !dbg !3623
  br i1 %cmp35.us, label %if.then37.us, label %if.else.us, !dbg !3624

if.else.us:                                       ; preds = %for.body34.us
  %second99.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 2, !dbg !3625
  %19 = load %struct.ira_allocno*, %struct.ira_allocno** %second99.us, align 8, !dbg !3625
  %cmp100.us = icmp eq %struct.ira_allocno* %19, %7, !dbg !3627
  br i1 %cmp100.us, label %if.then102.us, label %if.else103.us, !dbg !3628

if.else103.us:                                    ; preds = %if.else.us
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 1667, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3629
  br label %for.inc.us

if.then102.us:                                    ; preds = %if.else.us
  %next_second_allocno_copy.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 9, !dbg !3630
  %20 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy.us, align 8, !dbg !3630
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %20, metadata !3559, metadata !DIExpression()), !dbg !3576
  br label %for.inc.us, !dbg !3631

if.then37.us:                                     ; preds = %for.body34.us
  %next_first_allocno_copy.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 7, !dbg !3632
  %21 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy.us, align 8, !dbg !3632
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %21, metadata !3559, metadata !DIExpression()), !dbg !3576
  %second.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 2, !dbg !3634
  %22 = load %struct.ira_allocno*, %struct.ira_allocno** %second.us, align 8, !dbg !3634
  %cover_class43.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 9, !dbg !3635
  %23 = load i32, i32* %cover_class43.us, align 8, !dbg !3635
  %cmp44.us = icmp eq i32 %23, %15, !dbg !3637
  br i1 %cmp44.us, label %land.lhs.true46.us, label %for.inc.us, !dbg !3638

land.lhs.true46.us:                               ; preds = %if.then37.us
  %mode48.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 2, !dbg !3639
  %24 = load i32, i32* %mode48.us, align 8, !dbg !3639
  %cmp49.us = icmp eq i32 %24, %16, !dbg !3640
  br i1 %cmp49.us, label %land.lhs.true51.us, label %for.inc.us, !dbg !3641

land.lhs.true51.us:                               ; preds = %land.lhs.true46.us
  %insn.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 5, !dbg !3642
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.us, align 8, !dbg !3642
  %cmp52.us = icmp eq %struct.rtx_def* %25, null, !dbg !3643
  br i1 %cmp52.us, label %lor.lhs.false54.us, label %land.lhs.true57.us, !dbg !3644

lor.lhs.false54.us:                               ; preds = %land.lhs.true51.us
  %constraint_p.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 4, !dbg !3645
  %26 = load i8, i8* %constraint_p.us, align 4, !dbg !3645
  %tobool56.us = icmp eq i8 %26, 0, !dbg !3646
  br i1 %tobool56.us, label %for.inc.us, label %land.lhs.true57.us, !dbg !3647

land.lhs.true57.us:                               ; preds = %lor.lhs.false54.us, %land.lhs.true51.us
  br i1 true, label %land.lhs.true59.us, label %land.lhs.true57.us.lor.lhs.false67.us_crit_edge, !dbg !3648

land.lhs.true57.us.lor.lhs.false67.us_crit_edge:  ; preds = %land.lhs.true57.us
  br label %lor.lhs.false67.us, !dbg !3648

land.lhs.true59.us:                               ; preds = %land.lhs.true57.us
  %assigned_p61.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 31, !dbg !3649
  %bf.load62.us = load i16, i16* %assigned_p61.us, align 4, !dbg !3649
  %bf.clear64.us = and i16 %bf.load62.us, 256, !dbg !3649
  %tobool66.us = icmp eq i16 %bf.clear64.us, 0, !dbg !3649
  br i1 %tobool66.us, label %if.then95.us, label %lor.lhs.false67.us, !dbg !3650

lor.lhs.false67.us:                               ; preds = %land.lhs.true57.us.lor.lhs.false67.us_crit_edge, %land.lhs.true59.us
  br i1 true, label %for.inc.us, label %land.lhs.true70.us, !dbg !3651

land.lhs.true70.us:                               ; preds = %lor.lhs.false67.us
  br i1 undef, label %land.lhs.true70.us.for.inc.us_crit_edge, label %land.lhs.true78.us, !dbg !3652

land.lhs.true70.us.for.inc.us_crit_edge:          ; preds = %land.lhs.true70.us
  br label %for.inc.us, !dbg !3652

land.lhs.true78.us:                               ; preds = %land.lhs.true70.us
  br i1 undef, label %land.lhs.true83.us, label %land.lhs.true78.us.for.inc.us_crit_edge, !dbg !3653

land.lhs.true78.us.for.inc.us_crit_edge:          ; preds = %land.lhs.true78.us
  br label %for.inc.us, !dbg !3653

land.lhs.true83.us:                               ; preds = %land.lhs.true78.us
  br i1 undef, label %lor.lhs.false86.us, label %land.lhs.true83.us.if.then95.us_crit_edge, !dbg !3654

land.lhs.true83.us.if.then95.us_crit_edge:        ; preds = %land.lhs.true83.us
  br label %if.then95.us, !dbg !3654

lor.lhs.false86.us:                               ; preds = %land.lhs.true83.us
  br i1 undef, label %land.lhs.true90.us, label %lor.lhs.false86.us.for.inc.us_crit_edge, !dbg !3655

lor.lhs.false86.us.for.inc.us_crit_edge:          ; preds = %lor.lhs.false86.us
  br label %for.inc.us, !dbg !3655

land.lhs.true90.us:                               ; preds = %lor.lhs.false86.us
  br i1 undef, label %land.lhs.true90.us.if.then95.us_crit_edge, label %land.lhs.true90.us.for.inc.us_crit_edge, !dbg !3656

land.lhs.true90.us.if.then95.us_crit_edge:        ; preds = %land.lhs.true90.us
  br label %if.then95.us, !dbg !3656

land.lhs.true90.us.for.inc.us_crit_edge:          ; preds = %land.lhs.true90.us
  br label %for.inc.us, !dbg !3656

if.then95.us:                                     ; preds = %land.lhs.true83.us.if.then95.us_crit_edge, %land.lhs.true90.us.if.then95.us_crit_edge, %land.lhs.true59.us
  %inc.us = add nsw i32 %cp_num.1.us, 1, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !3566, metadata !DIExpression()), !dbg !3576
  %idxprom96.us = sext i32 %cp_num.1.us to i64, !dbg !3658
  %arrayidx97.us = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %3, i64 %idxprom96.us, !dbg !3658
  store %struct.ira_allocno_copy* %cp.0.us, %struct.ira_allocno_copy** %arrayidx97.us, align 8, !dbg !3659
  br label %for.inc.us, !dbg !3658

for.inc.us:                                       ; preds = %land.lhs.true70.us.for.inc.us_crit_edge, %land.lhs.true78.us.for.inc.us_crit_edge, %lor.lhs.false86.us.for.inc.us_crit_edge, %land.lhs.true90.us.for.inc.us_crit_edge, %if.then95.us, %lor.lhs.false67.us, %lor.lhs.false54.us, %land.lhs.true46.us, %if.then37.us, %if.then102.us, %if.else103.us
  %next_cp.3.us = phi %struct.ira_allocno_copy* [ %21, %if.then95.us ], [ undef, %land.lhs.true90.us.for.inc.us_crit_edge ], [ undef, %lor.lhs.false86.us.for.inc.us_crit_edge ], [ undef, %land.lhs.true78.us.for.inc.us_crit_edge ], [ undef, %land.lhs.true70.us.for.inc.us_crit_edge ], [ %21, %lor.lhs.false67.us ], [ %21, %lor.lhs.false54.us ], [ %21, %land.lhs.true46.us ], [ %21, %if.then37.us ], [ %20, %if.then102.us ], [ %next_cp.1.us, %if.else103.us ], !dbg !3660
  %cp_num.3.us = phi i32 [ %inc.us, %if.then95.us ], [ undef, %land.lhs.true90.us.for.inc.us_crit_edge ], [ undef, %lor.lhs.false86.us.for.inc.us_crit_edge ], [ undef, %land.lhs.true78.us.for.inc.us_crit_edge ], [ undef, %land.lhs.true70.us.for.inc.us_crit_edge ], [ %cp_num.1.us, %lor.lhs.false67.us ], [ %cp_num.1.us, %lor.lhs.false54.us ], [ %cp_num.1.us, %land.lhs.true46.us ], [ %cp_num.1.us, %if.then37.us ], [ %cp_num.1.us, %if.then102.us ], [ %cp_num.1.us, %if.else103.us ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.3.us, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3.us, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3.us, metadata !3558, metadata !DIExpression()), !dbg !3576
  br label %for.cond31.us, !dbg !3661, !llvm.loop !3662

for.inc106.loopexit.us-lcssa.us:                  ; preds = %for.cond31.us
  %next_cp.1.us.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1.us, %for.cond31.us ]
  %cp_num.1.us.lcssa = phi i32 [ %cp_num.1.us, %for.cond31.us ], !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us.lcssa, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.us.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us.lcssa, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.us.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  br label %for.inc106.loopexit, !dbg !3590

for.cond31:                                       ; preds = %for.inc, %if.end.if.end.split_crit_edge
  %next_cp.1 = phi %struct.ira_allocno_copy* [ %next_cp.0, %if.end.if.end.split_crit_edge ], [ %next_cp.3, %for.inc ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %17, %if.end.if.end.split_crit_edge ], [ %next_cp.3, %for.inc ], !dbg !3616
  %cp_num.1 = phi i32 [ %cp_num.0, %if.end.if.end.split_crit_edge ], [ %cp_num.3, %for.inc ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !3558, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1, metadata !3559, metadata !DIExpression()), !dbg !3576
  %cmp32 = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !3617
  br i1 %cmp32, label %for.inc106.loopexit.us-lcssa, label %for.body34, !dbg !3619

for.body34:                                       ; preds = %for.cond31
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !3620
  %27 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !3620
  %cmp35 = icmp eq %struct.ira_allocno* %27, %7, !dbg !3623
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !3624

if.then37:                                        ; preds = %for.body34
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !3632
  %28 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !3632
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %28, metadata !3559, metadata !DIExpression()), !dbg !3576
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3634
  %29 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !3634
  %regno38 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 1, !dbg !3634
  %30 = load i32, i32* %regno38, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %30, metadata !3567, metadata !DIExpression()), !dbg !3576
  %insn = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 5, !dbg !3642
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3642
  %cmp52 = icmp eq %struct.rtx_def* %31, null, !dbg !3643
  br i1 %cmp52, label %lor.lhs.false54, label %land.lhs.true57, !dbg !3644

lor.lhs.false54:                                  ; preds = %if.then37
  %constraint_p = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 4, !dbg !3645
  %32 = load i8, i8* %constraint_p, align 4, !dbg !3645
  %tobool56 = icmp eq i8 %32, 0, !dbg !3646
  br i1 %tobool56, label %for.inc, label %land.lhs.true57, !dbg !3647

land.lhs.true57:                                  ; preds = %lor.lhs.false54, %if.then37
  br i1 false, label %land.lhs.true59, label %lor.lhs.false67, !dbg !3648

land.lhs.true59:                                  ; preds = %land.lhs.true57
  br i1 undef, label %land.lhs.true59.if.then95_crit_edge, label %land.lhs.true59.lor.lhs.false67_crit_edge, !dbg !3650

land.lhs.true59.lor.lhs.false67_crit_edge:        ; preds = %land.lhs.true59
  br label %lor.lhs.false67, !dbg !3650

land.lhs.true59.if.then95_crit_edge:              ; preds = %land.lhs.true59
  br label %if.then95, !dbg !3650

lor.lhs.false67:                                  ; preds = %land.lhs.true59.lor.lhs.false67_crit_edge, %land.lhs.true57
  br i1 false, label %lor.lhs.false67.for.inc_crit_edge, label %land.lhs.true70, !dbg !3651

lor.lhs.false67.for.inc_crit_edge:                ; preds = %lor.lhs.false67
  br label %for.inc, !dbg !3651

land.lhs.true70:                                  ; preds = %lor.lhs.false67
  %assigned_p72 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 31, !dbg !3664
  %bf.load73 = load i16, i16* %assigned_p72, align 4, !dbg !3664
  %bf.clear75 = and i16 %bf.load73, 256, !dbg !3664
  %tobool77 = icmp eq i16 %bf.clear75, 0, !dbg !3664
  br i1 %tobool77, label %for.inc, label %land.lhs.true78, !dbg !3652

land.lhs.true78:                                  ; preds = %land.lhs.true70
  %hard_regno80 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 3, !dbg !3665
  %33 = load i32, i32* %hard_regno80, align 4, !dbg !3665
  %cmp81 = icmp slt i32 %33, 0, !dbg !3666
  br i1 %cmp81, label %land.lhs.true83, label %for.inc, !dbg !3653

land.lhs.true83:                                  ; preds = %land.lhs.true78
  %34 = load i32, i32* @ira_reg_equiv_len, align 4, !dbg !3667
  %cmp84 = icmp slt i32 %30, %34, !dbg !3668
  br i1 %cmp84, label %lor.lhs.false86, label %if.then95, !dbg !3654

lor.lhs.false86:                                  ; preds = %land.lhs.true83
  %35 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !3669
  %idxprom87 = sext i32 %30 to i64, !dbg !3669
  %arrayidx88 = getelementptr inbounds i8, i8* %35, i64 %idxprom87, !dbg !3669
  %36 = load i8, i8* %arrayidx88, align 1, !dbg !3669
  %tobool89 = icmp eq i8 %36, 0, !dbg !3669
  br i1 %tobool89, label %land.lhs.true90, label %for.inc, !dbg !3655

land.lhs.true90:                                  ; preds = %lor.lhs.false86
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !3670
  %arrayidx92 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 %idxprom87, !dbg !3670
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx92, align 8, !dbg !3670
  %cmp93 = icmp eq %struct.rtx_def* %38, null, !dbg !3671
  br i1 %cmp93, label %if.then95, label %for.inc, !dbg !3656

if.then95:                                        ; preds = %land.lhs.true59.if.then95_crit_edge, %land.lhs.true83, %land.lhs.true90
  %inc = add nsw i32 %cp_num.1, 1, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3566, metadata !DIExpression()), !dbg !3576
  %idxprom96 = sext i32 %cp_num.1 to i64, !dbg !3658
  %arrayidx97 = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %3, i64 %idxprom96, !dbg !3658
  store %struct.ira_allocno_copy* %cp.0, %struct.ira_allocno_copy** %arrayidx97, align 8, !dbg !3659
  br label %for.inc, !dbg !3658

if.else:                                          ; preds = %for.body34
  %second99 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !3625
  %39 = load %struct.ira_allocno*, %struct.ira_allocno** %second99, align 8, !dbg !3625
  %cmp100 = icmp eq %struct.ira_allocno* %39, %7, !dbg !3627
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !3628

if.then102:                                       ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !3630
  %40 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !3630
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %40, metadata !3559, metadata !DIExpression()), !dbg !3576
  br label %for.inc, !dbg !3631

if.else103:                                       ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 1667, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3629
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false67.for.inc_crit_edge, %lor.lhs.false86, %land.lhs.true70, %lor.lhs.false54, %if.then95, %land.lhs.true90, %land.lhs.true78, %if.else103, %if.then102
  %next_cp.3 = phi %struct.ira_allocno_copy* [ %28, %if.then95 ], [ %28, %land.lhs.true90 ], [ %28, %lor.lhs.false86 ], [ %28, %land.lhs.true78 ], [ %28, %land.lhs.true70 ], [ undef, %lor.lhs.false67.for.inc_crit_edge ], [ %28, %lor.lhs.false54 ], [ %40, %if.then102 ], [ %next_cp.1, %if.else103 ], !dbg !3660
  %cp_num.3 = phi i32 [ %inc, %if.then95 ], [ %cp_num.1, %land.lhs.true90 ], [ %cp_num.1, %lor.lhs.false86 ], [ %cp_num.1, %land.lhs.true78 ], [ %cp_num.1, %land.lhs.true70 ], [ undef, %lor.lhs.false67.for.inc_crit_edge ], [ %cp_num.1, %lor.lhs.false54 ], [ %cp_num.1, %if.then102 ], [ %cp_num.1, %if.else103 ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.3, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !3558, metadata !DIExpression()), !dbg !3576
  br label %for.cond31, !dbg !3661, !llvm.loop !3662

for.inc106.loopexit.us-lcssa:                     ; preds = %for.cond31
  %next_cp.1.lcssa12 = phi %struct.ira_allocno_copy* [ %next_cp.1, %for.cond31 ]
  %cp_num.1.lcssa11 = phi i32 [ %cp_num.1, %for.cond31 ], !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa12, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.lcssa11, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa12, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.lcssa11, metadata !3566, metadata !DIExpression()), !dbg !3576
  br label %for.inc106.loopexit, !dbg !3590

for.inc106.loopexit:                              ; preds = %for.inc106.loopexit.us-lcssa.us, %for.inc106.loopexit.us-lcssa
  %next_cp.1.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1.lcssa12, %for.inc106.loopexit.us-lcssa ], [ %next_cp.1.us.lcssa, %for.inc106.loopexit.us-lcssa.us ]
  %cp_num.1.lcssa = phi i32 [ %cp_num.1.lcssa11, %for.inc106.loopexit.us-lcssa ], [ %cp_num.1.us.lcssa, %for.inc106.loopexit.us-lcssa.us ], !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.1.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  br label %for.inc106, !dbg !3590

for.inc106:                                       ; preds = %for.inc106.loopexit, %lor.lhs.false24, %land.lhs.true19, %land.lhs.true7, %land.lhs.true, %lor.lhs.false14
  %next_cp.4 = phi %struct.ira_allocno_copy* [ %next_cp.0, %lor.lhs.false24 ], [ %next_cp.0, %land.lhs.true19 ], [ %next_cp.0, %lor.lhs.false14 ], [ %next_cp.0, %land.lhs.true7 ], [ %next_cp.0, %land.lhs.true ], [ %next_cp.1.lcssa, %for.inc106.loopexit ]
  %cp_num.4 = phi i32 [ %cp_num.0, %lor.lhs.false24 ], [ %cp_num.0, %land.lhs.true19 ], [ %cp_num.0, %lor.lhs.false14 ], [ %cp_num.0, %land.lhs.true7 ], [ %cp_num.0, %land.lhs.true ], [ %cp_num.1.lcssa, %for.inc106.loopexit ], !dbg !3589
  call void @llvm.dbg.value(metadata i32 %cp_num.4, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.4, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32* %j, metadata !3563, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !3568, metadata !DIExpression(DW_OP_deref)), !dbg !3576
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !3590
  br label %for.cond, !dbg !3590, !llvm.loop !3672

for.end107:                                       ; preds = %for.cond
  %cp_num.0.lcssa = phi i32 [ %cp_num.0, %for.cond ], !dbg !3589
  call void @llvm.dbg.value(metadata i32 %cp_num.0.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.0.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.0.lcssa, metadata !3566, metadata !DIExpression()), !dbg !3576
  %conv108 = sext i32 %cp_num.0.lcssa to i64, !dbg !3674
  call void @spec_qsort(i8* %call, i64 %conv108, i64 8, i32 (i8*, i8*)* nonnull @copy_freq_compare_func) #6, !dbg !3675
  br label %for.cond109, !dbg !3676

for.cond109.loopexit:                             ; preds = %for.cond147
  %n.0.lcssa = phi i32 [ %n.0, %for.cond147 ], !dbg !3677
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3565, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3565, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3565, metadata !DIExpression()), !dbg !3576
  br label %for.cond109, !dbg !3682

for.cond109:                                      ; preds = %for.cond109.loopexit, %for.end107
  %cp_num.5 = phi i32 [ %cp_num.0.lcssa, %for.end107 ], [ %n.0.lcssa, %for.cond109.loopexit ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %cp_num.5, metadata !3566, metadata !DIExpression()), !dbg !3576
  %cmp110 = icmp eq i32 %cp_num.5, 0, !dbg !3683
  br i1 %cmp110, label %for.end166, label %for.cond113.preheader, !dbg !3682

for.cond113.preheader:                            ; preds = %for.cond109
  %41 = sext i32 %cp_num.5 to i64, !dbg !3684
  br label %for.cond113, !dbg !3684

for.cond113:                                      ; preds = %for.cond113.preheader, %for.inc144
  %indvars.iv = phi i64 [ 0, %for.cond113.preheader ], [ %indvars.iv.next, %for.inc144 ], !dbg !3686
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3564, metadata !DIExpression()), !dbg !3576
  %cmp114 = icmp slt i64 %indvars.iv, %41, !dbg !3687
  br i1 %cmp114, label %for.body116, label %for.end146.loopexit, !dbg !3684

for.body116:                                      ; preds = %for.cond113
  %arrayidx118 = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %3, i64 %indvars.iv, !dbg !3689
  %42 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %arrayidx118, align 8, !dbg !3689
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %42, metadata !3558, metadata !DIExpression()), !dbg !3576
  %first119 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %42, i64 0, i32 1, !dbg !3691
  %43 = load %struct.ira_allocno*, %struct.ira_allocno** %first119, align 8, !dbg !3691
  %second120 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %42, i64 0, i32 2, !dbg !3693
  %44 = load %struct.ira_allocno*, %struct.ira_allocno** %second120, align 8, !dbg !3693
  %call121 = call fastcc zeroext i8 @coalesced_allocno_conflict_p(%struct.ira_allocno* %43, %struct.ira_allocno* %44, i8 zeroext %reload_p) #8, !dbg !3694
  %tobool122 = icmp eq i8 %call121, 0, !dbg !3694
  br i1 %tobool122, label %if.then123, label %for.inc144, !dbg !3695

if.then123:                                       ; preds = %for.body116
  %.lcssa = phi %struct.ira_allocno_copy* [ %42, %for.body116 ], !dbg !3689
  %first119.lcssa = phi %struct.ira_allocno** [ %first119, %for.body116 ], !dbg !3691
  %second120.lcssa = phi %struct.ira_allocno** [ %second120, %for.body116 ], !dbg !3693
  %indvars.iv.lcssa10 = phi i64 [ %indvars.iv, %for.body116 ], !dbg !3686
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa10, metadata !3564, metadata !DIExpression()), !dbg !3576
  store i1 true, i1* @allocno_coalesced_p, align 1, !dbg !3696
  %45 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3698
  %cmp124 = icmp sgt i32 %45, 3, !dbg !3700
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3701
  %cmp127 = icmp ne %struct._IO_FILE* %46, null, !dbg !3702
  %or.cond = and i1 %cmp124, %cmp127, !dbg !3703
  br i1 %or.cond, label %if.then129, label %if.end139, !dbg !3703

if.then129:                                       ; preds = %if.then123
  %num = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %.lcssa, i64 0, i32 0, !dbg !3704
  %47 = load i32, i32* %num, align 8, !dbg !3704
  %48 = load %struct.ira_allocno*, %struct.ira_allocno** %first119.lcssa, align 8, !dbg !3705
  %num131 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %48, i64 0, i32 0, !dbg !3705
  %49 = load i32, i32* %num131, align 8, !dbg !3705
  %regno133 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %48, i64 0, i32 1, !dbg !3706
  %50 = load i32, i32* %regno133, align 4, !dbg !3706
  %51 = load %struct.ira_allocno*, %struct.ira_allocno** %second120.lcssa, align 8, !dbg !3707
  %num135 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %51, i64 0, i32 0, !dbg !3707
  %52 = load i32, i32* %num135, align 8, !dbg !3707
  %regno137 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %51, i64 0, i32 1, !dbg !3708
  %53 = load i32, i32* %regno137, align 4, !dbg !3708
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %.lcssa, i64 0, i32 3, !dbg !3709
  %54 = load i32, i32* %freq, align 8, !dbg !3709
  %call138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %46, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0), i32 %47, i32 %49, i32 %50, i32 %52, i32 %53, i32 %54) #6, !dbg !3710
  br label %if.end139, !dbg !3710

if.end139:                                        ; preds = %if.then129, %if.then123
  %55 = load %struct.ira_allocno*, %struct.ira_allocno** %first119.lcssa, align 8, !dbg !3711
  %56 = load %struct.ira_allocno*, %struct.ira_allocno** %second120.lcssa, align 8, !dbg !3712
  call fastcc void @merge_allocnos(%struct.ira_allocno* %55, %struct.ira_allocno* %56) #8, !dbg !3713
  %inc142 = add nuw i64 %indvars.iv.lcssa10, 1, !dbg !3714
  br label %for.end146, !dbg !3715

for.inc144:                                       ; preds = %for.body116
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3716
  call void @llvm.dbg.value(metadata i32 undef, metadata !3564, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3576
  br label %for.cond113, !dbg !3717, !llvm.loop !3718

for.end146.loopexit:                              ; preds = %for.cond113
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond113 ], !dbg !3686
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !3564, metadata !DIExpression()), !dbg !3576
  br label %for.end146, !dbg !3720

for.end146:                                       ; preds = %for.end146.loopexit, %if.end139
  %i.1 = phi i64 [ %inc142, %if.end139 ], [ %indvars.iv.lcssa, %for.end146.loopexit ], !dbg !3686
  call void @llvm.dbg.value(metadata i32 0, metadata !3565, metadata !DIExpression()), !dbg !3576
  %sext = shl i64 %i.1, 32, !dbg !3720
  %57 = ashr exact i64 %sext, 32, !dbg !3720
  %58 = sext i32 %cp_num.5 to i64, !dbg !3720
  br label %for.cond147, !dbg !3720

for.cond147:                                      ; preds = %for.inc163, %for.end146
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc163 ], [ %57, %for.end146 ], !dbg !3721
  %n.0 = phi i32 [ %n.1, %for.inc163 ], [ 0, %for.end146 ], !dbg !3677
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3565, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !3564, metadata !DIExpression()), !dbg !3576
  %cmp148 = icmp slt i64 %indvars.iv8, %58, !dbg !3722
  br i1 %cmp148, label %for.body150, label %for.cond109.loopexit, !dbg !3724, !llvm.loop !3725

for.body150:                                      ; preds = %for.cond147
  %arrayidx152 = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %3, i64 %indvars.iv8, !dbg !3727
  %59 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %arrayidx152, align 8, !dbg !3727
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %59, metadata !3558, metadata !DIExpression()), !dbg !3576
  %first153 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %59, i64 0, i32 1, !dbg !3729
  %60 = load %struct.ira_allocno*, %struct.ira_allocno** %first153, align 8, !dbg !3729
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %60, i64 0, i32 18, !dbg !3729
  %61 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3729
  %second154 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %59, i64 0, i32 2, !dbg !3731
  %62 = load %struct.ira_allocno*, %struct.ira_allocno** %second154, align 8, !dbg !3731
  %first_coalesced_allocno155 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %62, i64 0, i32 18, !dbg !3731
  %63 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno155, align 8, !dbg !3731
  %cmp156 = icmp eq %struct.ira_allocno* %61, %63, !dbg !3732
  br i1 %cmp156, label %for.inc163, label %if.then158, !dbg !3733

if.then158:                                       ; preds = %for.body150
  %inc159 = add nsw i32 %n.0, 1, !dbg !3734
  call void @llvm.dbg.value(metadata i32 %inc159, metadata !3565, metadata !DIExpression()), !dbg !3576
  %idxprom160 = sext i32 %n.0 to i64, !dbg !3735
  %arrayidx161 = getelementptr inbounds %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %3, i64 %idxprom160, !dbg !3735
  store %struct.ira_allocno_copy* %59, %struct.ira_allocno_copy** %arrayidx161, align 8, !dbg !3736
  br label %for.inc163, !dbg !3735

for.inc163:                                       ; preds = %for.body150, %if.then158
  %n.1 = phi i32 [ %inc159, %if.then158 ], [ %n.0, %for.body150 ], !dbg !3677
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !3565, metadata !DIExpression()), !dbg !3576
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, 1, !dbg !3737
  call void @llvm.dbg.value(metadata i32 undef, metadata !3564, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3576
  br label %for.cond147, !dbg !3738, !llvm.loop !3739

for.end166:                                       ; preds = %for.cond109
  call void @ira_free(i8* %call) #6, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !3742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3742
  ret void, !dbg !3742
}

declare dso_local i8* @ira_allocate(i64) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_coalesced_allocno_costs_and_nums(i32* %pseudo_regnos, i32 %n) unnamed_addr #5 !dbg !3743 {
entry:
  call void @llvm.dbg.value(metadata i32* %pseudo_regnos, metadata !3747, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 %n, metadata !3748, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 0, metadata !3749, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 0, metadata !3750, metadata !DIExpression()), !dbg !3755
  %0 = sext i32 %n to i64, !dbg !3756
  br label %for.cond, !dbg !3756

for.cond:                                         ; preds = %for.inc31, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc31 ], [ 0, %entry ], !dbg !3758
  %num.0 = phi i32 [ %num.1, %for.inc31 ], [ 0, %entry ], !dbg !3758
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3749, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !3750, metadata !DIExpression()), !dbg !3755
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !3759
  br i1 %cmp, label %for.body, label %for.end33, !dbg !3761

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %pseudo_regnos, i64 %indvars.iv, !dbg !3762
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %1, metadata !3751, metadata !DIExpression()), !dbg !3755
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !3764
  %idxprom1 = sext i32 %1 to i64, !dbg !3764
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %2, i64 %idxprom1, !dbg !3764
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx2, align 8, !dbg !3764
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3753, metadata !DIExpression()), !dbg !3755
  %cmp3 = icmp eq %struct.ira_allocno* %3, null, !dbg !3765
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3767

if.then:                                          ; preds = %for.body
  %4 = load i32*, i32** @regno_coalesced_allocno_cost, align 8, !dbg !3768
  %arrayidx5 = getelementptr inbounds i32, i32* %4, i64 %idxprom1, !dbg !3768
  store i32 0, i32* %arrayidx5, align 4, !dbg !3770
  %inc = add nsw i32 %num.0, 1, !dbg !3771
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3750, metadata !DIExpression()), !dbg !3755
  %5 = load i32*, i32** @regno_coalesced_allocno_num, align 8, !dbg !3772
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 %idxprom1, !dbg !3772
  store i32 %inc, i32* %arrayidx7, align 4, !dbg !3773
  br label %for.inc31, !dbg !3774

if.end:                                           ; preds = %for.body
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 18, !dbg !3775
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3775
  %cmp8 = icmp eq %struct.ira_allocno* %6, %3, !dbg !3777
  br i1 %cmp8, label %if.end10, label %for.inc31, !dbg !3778

if.end10:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %inc11, metadata !3750, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 0, metadata !3752, metadata !DIExpression()), !dbg !3755
  br label %for.cond12, !dbg !3779

for.cond12:                                       ; preds = %for.inc, %if.end10
  %cost.0 = phi i32 [ 0, %if.end10 ], [ %add, %for.inc ], !dbg !3781
  %.pn = phi %struct.ira_allocno* [ %3, %if.end10 ], [ %a.0, %for.inc ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.pn, i64 0, i32 19, !dbg !3781
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !3781
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !3754, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !3752, metadata !DIExpression()), !dbg !3755
  %freq = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 8, !dbg !3782
  %7 = load i32, i32* %freq, align 4, !dbg !3782
  %add = add nsw i32 %cost.0, %7, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %add, metadata !3752, metadata !DIExpression()), !dbg !3755
  %cmp13 = icmp eq %struct.ira_allocno* %a.0, %3, !dbg !3786
  br i1 %cmp13, label %for.end, label %for.inc, !dbg !3788

for.inc:                                          ; preds = %for.cond12
  br label %for.cond12, !dbg !3789, !llvm.loop !3790

for.end:                                          ; preds = %for.cond12
  %add.lcssa = phi i32 [ %add, %for.cond12 ], !dbg !3785
  %inc11 = add nsw i32 %num.0, 1, !dbg !3793
  br label %for.cond18, !dbg !3794

for.cond18:                                       ; preds = %for.inc28, %for.end
  %.pn1 = phi %struct.ira_allocno* [ %3, %for.end ], [ %a.1, %for.inc28 ]
  %a.1.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.pn1, i64 0, i32 19, !dbg !3796
  %a.1 = load %struct.ira_allocno*, %struct.ira_allocno** %a.1.in, align 8, !dbg !3796
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1, metadata !3754, metadata !DIExpression()), !dbg !3755
  %8 = load i32*, i32** @regno_coalesced_allocno_num, align 8, !dbg !3797
  %regno19 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.1, i64 0, i32 1, !dbg !3800
  %9 = load i32, i32* %regno19, align 4, !dbg !3800
  %idxprom20 = sext i32 %9 to i64, !dbg !3797
  %arrayidx21 = getelementptr inbounds i32, i32* %8, i64 %idxprom20, !dbg !3797
  store i32 %inc11, i32* %arrayidx21, align 4, !dbg !3801
  %10 = load i32*, i32** @regno_coalesced_allocno_cost, align 8, !dbg !3802
  %11 = load i32, i32* %regno19, align 4, !dbg !3803
  %idxprom23 = sext i32 %11 to i64, !dbg !3802
  %arrayidx24 = getelementptr inbounds i32, i32* %10, i64 %idxprom23, !dbg !3802
  store i32 %add.lcssa, i32* %arrayidx24, align 4, !dbg !3804
  %cmp25 = icmp eq %struct.ira_allocno* %a.1, %3, !dbg !3805
  br i1 %cmp25, label %for.inc31.loopexit, label %for.inc28, !dbg !3807

for.inc28:                                        ; preds = %for.cond18
  br label %for.cond18, !dbg !3808, !llvm.loop !3809

for.inc31.loopexit:                               ; preds = %for.cond18
  br label %for.inc31, !dbg !3812

for.inc31:                                        ; preds = %for.inc31.loopexit, %if.end, %if.then
  %num.1 = phi i32 [ %inc, %if.then ], [ %num.0, %if.end ], [ %inc11, %for.inc31.loopexit ], !dbg !3758
  call void @llvm.dbg.value(metadata i32 %num.1, metadata !3750, metadata !DIExpression()), !dbg !3755
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3812
  call void @llvm.dbg.value(metadata i32 undef, metadata !3749, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3755
  br label %for.cond, !dbg !3813, !llvm.loop !3814

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !3816
}

; Function Attrs: nounwind uwtable
define internal i32 @coalesced_pseudo_reg_freq_compare(i8* %v1p, i8* %v2p) #5 !dbg !3817 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !3819, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !3820, metadata !DIExpression()), !dbg !3824
  %0 = bitcast i8* %v1p to i32*, !dbg !3825
  %1 = load i32, i32* %0, align 4, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1, metadata !3821, metadata !DIExpression()), !dbg !3824
  %2 = bitcast i8* %v2p to i32*, !dbg !3827
  %3 = load i32, i32* %2, align 4, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %3, metadata !3822, metadata !DIExpression()), !dbg !3824
  %4 = load i32*, i32** @regno_coalesced_allocno_cost, align 8, !dbg !3829
  %idxprom = sext i32 %3 to i64, !dbg !3829
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !3829
  %5 = load i32, i32* %arrayidx, align 4, !dbg !3829
  %idxprom1 = sext i32 %1 to i64, !dbg !3831
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1, !dbg !3831
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !3831
  %sub = sub nsw i32 %5, %6, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3823, metadata !DIExpression()), !dbg !3824
  %cmp = icmp eq i32 %sub, 0, !dbg !3833
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3834

if.end:                                           ; preds = %entry
  %7 = load i32*, i32** @regno_coalesced_allocno_num, align 8, !dbg !3835
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 %idxprom1, !dbg !3835
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !3835
  %arrayidx6 = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !3837
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !3837
  %sub7 = sub nsw i32 %8, %9, !dbg !3838
  call void @llvm.dbg.value(metadata i32 %sub7, metadata !3823, metadata !DIExpression()), !dbg !3824
  %cmp8 = icmp eq i32 %sub7, 0, !dbg !3839
  %sub11 = sub nsw i32 %1, %3, !dbg !3840
  %spec.select = select i1 %cmp8, i32 %sub11, i32 %sub7, !dbg !3841
  ret i32 %spec.select, !dbg !3841

cleanup:                                          ; preds = %entry
  ret i32 %sub, !dbg !3842
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @collect_spilled_coalesced_allocnos(i32* %pseudo_regnos, i32 %n, %struct.ira_allocno** %spilled_coalesced_allocnos) unnamed_addr #5 !dbg !3843 {
entry:
  call void @llvm.dbg.value(metadata i32* %pseudo_regnos, metadata !3847, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %n, metadata !3848, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %spilled_coalesced_allocnos, metadata !3849, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3850, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3851, metadata !DIExpression()), !dbg !3854
  %0 = sext i32 %n to i64, !dbg !3855
  br label %for.cond, !dbg !3855

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3857
  %num.0 = phi i32 [ %num.1, %for.inc ], [ 0, %entry ], !dbg !3858
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3850, metadata !DIExpression()), !dbg !3854
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !3859
  br i1 %cmp, label %for.body, label %for.end, !dbg !3861

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %pseudo_regnos, i64 %indvars.iv, !dbg !3862
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %1, metadata !3852, metadata !DIExpression()), !dbg !3854
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !3864
  %idxprom1 = sext i32 %1 to i64, !dbg !3864
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %2, i64 %idxprom1, !dbg !3864
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx2, align 8, !dbg !3864
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3853, metadata !DIExpression()), !dbg !3854
  %cmp3 = icmp eq %struct.ira_allocno* %3, null, !dbg !3865
  br i1 %cmp3, label %for.inc, label %lor.lhs.false, !dbg !3867

lor.lhs.false:                                    ; preds = %for.body
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 3, !dbg !3868
  %4 = load i32, i32* %hard_regno, align 4, !dbg !3868
  %cmp4 = icmp sgt i32 %4, -1, !dbg !3869
  br i1 %cmp4, label %for.inc, label %lor.lhs.false5, !dbg !3870

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 18, !dbg !3871
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3871
  %cmp6 = icmp eq %struct.ira_allocno* %5, %3, !dbg !3872
  br i1 %cmp6, label %if.end, label %for.inc, !dbg !3873

if.end:                                           ; preds = %lor.lhs.false5
  %inc = add nsw i32 %num.0, 1, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3851, metadata !DIExpression()), !dbg !3854
  %idxprom7 = sext i32 %num.0 to i64, !dbg !3875
  %arrayidx8 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %spilled_coalesced_allocnos, i64 %idxprom7, !dbg !3875
  store %struct.ira_allocno* %3, %struct.ira_allocno** %arrayidx8, align 8, !dbg !3876
  br label %for.inc, !dbg !3877

for.inc:                                          ; preds = %lor.lhs.false5, %for.body, %lor.lhs.false, %if.end
  %num.1 = phi i32 [ %inc, %if.end ], [ %num.0, %lor.lhs.false5 ], [ %num.0, %lor.lhs.false ], [ %num.0, %for.body ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %num.1, metadata !3851, metadata !DIExpression()), !dbg !3854
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3878
  call void @llvm.dbg.value(metadata i32 undef, metadata !3850, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3854
  br label %for.cond, !dbg !3879, !llvm.loop !3880

for.end:                                          ; preds = %for.cond
  %num.0.lcssa = phi i32 [ %num.0, %for.cond ], !dbg !3858
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %num.0.lcssa, metadata !3851, metadata !DIExpression()), !dbg !3854
  ret i32 %num.0.lcssa, !dbg !3882
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @coalesce_spill_slots(%struct.ira_allocno** %spilled_coalesced_allocnos, i32 %num) unnamed_addr #5 !dbg !3883 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %spilled_coalesced_allocnos, metadata !3887, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %num, metadata !3888, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8 0, metadata !3895, metadata !DIExpression()), !dbg !3897
  %call = tail call %struct.bitmap_head_def* @regstat_get_setjmp_crosses() #6, !dbg !3898
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3896, metadata !DIExpression()), !dbg !3897
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !3899
  %conv = sext i32 %0 to i64, !dbg !3899
  %mul = shl nsw i64 %conv, 3, !dbg !3900
  %call1 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !3901
  store i8* %call1, i8** bitcast (%struct.ira_allocno_live_range*** @slot_coalesced_allocnos_live_ranges to i8**), align 8, !dbg !3902
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !3903
  %conv2 = sext i32 %1 to i64, !dbg !3903
  %mul3 = shl nsw i64 %conv2, 3, !dbg !3904
  %call4 = tail call i8* @memset(i8* %call1, i32 0, i64 %mul3) #6, !dbg !3905
  call void @llvm.dbg.value(metadata i32 0, metadata !3892, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 0, metadata !3889, metadata !DIExpression()), !dbg !3897
  %2 = sext i32 %num to i64, !dbg !3906
  br label %for.cond, !dbg !3906

for.cond:                                         ; preds = %for.inc77, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc77 ], [ 0, %entry ], !dbg !3908
  %last_coalesced_allocno_num.0 = phi i32 [ %last_coalesced_allocno_num.2, %for.inc77 ], [ 0, %entry ], !dbg !3908
  %a.0 = phi %struct.ira_allocno* [ %a.3, %for.inc77 ], [ undef, %entry ]
  %merged_p.0 = phi i8 [ %merged_p.2, %for.inc77 ], [ 0, %entry ], !dbg !3909
  call void @llvm.dbg.value(metadata i8 %merged_p.0, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3889, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %last_coalesced_allocno_num.0, metadata !3892, metadata !DIExpression()), !dbg !3897
  %cmp = icmp slt i64 %indvars.iv4, %2, !dbg !3910
  br i1 %cmp, label %for.body, label %for.cond80.preheader, !dbg !3912

for.cond80.preheader:                             ; preds = %for.cond
  %merged_p.0.lcssa = phi i8 [ %merged_p.0, %for.cond ], !dbg !3909
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8 %merged_p.0.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3897
  br label %for.cond80, !dbg !3913

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %spilled_coalesced_allocnos, i64 %indvars.iv4, !dbg !3915
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !3915
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !3893, metadata !DIExpression()), !dbg !3897
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 18, !dbg !3917
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !3917
  %cmp6 = icmp eq %struct.ira_allocno* %4, %3, !dbg !3919
  br i1 %cmp6, label %lor.lhs.false, label %for.inc77, !dbg !3920

lor.lhs.false:                                    ; preds = %for.body
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 1, !dbg !3921
  %5 = load i32, i32* %regno, align 4, !dbg !3921
  %call8 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %5) #6, !dbg !3922
  %tobool = icmp eq i32 %call8, 0, !dbg !3922
  br i1 %tobool, label %lor.lhs.false9, label %for.inc77, !dbg !3923

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %regno, align 4, !dbg !3924
  %7 = load i32, i32* @ira_reg_equiv_len, align 4, !dbg !3925
  %cmp11 = icmp slt i32 %6, %7, !dbg !3926
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !3927

land.lhs.true:                                    ; preds = %lor.lhs.false9
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !3928
  %idxprom14 = sext i32 %6 to i64, !dbg !3928
  %arrayidx15 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom14, !dbg !3928
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx15, align 8, !dbg !3928
  %cmp16 = icmp eq %struct.rtx_def* %9, null, !dbg !3929
  br i1 %cmp16, label %lor.lhs.false18, label %for.inc77, !dbg !3930

lor.lhs.false18:                                  ; preds = %land.lhs.true
  %10 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !3931
  %arrayidx21 = getelementptr inbounds i8, i8* %10, i64 %idxprom14, !dbg !3931
  %11 = load i8, i8* %arrayidx21, align 1, !dbg !3931
  %tobool23 = icmp eq i8 %11, 0, !dbg !3931
  br i1 %tobool23, label %if.end, label %for.inc77, !dbg !3932

if.end:                                           ; preds = %lor.lhs.false18, %lor.lhs.false9
  call void @llvm.dbg.value(metadata i32 0, metadata !3890, metadata !DIExpression()), !dbg !3897
  br label %for.cond24, !dbg !3933

for.cond24:                                       ; preds = %for.inc, %if.end
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc ], [ 0, %if.end ], !dbg !3935
  %a.1 = phi %struct.ira_allocno* [ %12, %for.inc ], [ %a.0, %if.end ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3890, metadata !DIExpression()), !dbg !3897
  %cmp25 = icmp ult i64 %indvars.iv2, %indvars.iv4, !dbg !3936
  %exitcond = icmp eq i64 %indvars.iv2, %indvars.iv4, !dbg !3936
  br i1 %exitcond, label %for.end, label %for.body27, !dbg !3938

for.body27:                                       ; preds = %for.cond24
  %arrayidx29 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %spilled_coalesced_allocnos, i64 %indvars.iv2, !dbg !3939
  %12 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx29, align 8, !dbg !3939
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !3894, metadata !DIExpression()), !dbg !3897
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 41, !dbg !3941
  %13 = load i32, i32* %temp, align 8, !dbg !3941
  call void @llvm.dbg.value(metadata i32 %13, metadata !3891, metadata !DIExpression()), !dbg !3897
  %first_coalesced_allocno30 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 18, !dbg !3942
  %14 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno30, align 8, !dbg !3942
  %cmp31 = icmp eq %struct.ira_allocno* %14, %12, !dbg !3944
  br i1 %cmp31, label %land.lhs.true33, label %for.inc, !dbg !3945

land.lhs.true33:                                  ; preds = %for.body27
  %regno34 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 1, !dbg !3946
  %15 = load i32, i32* %regno34, align 4, !dbg !3946
  %call35 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %15) #6, !dbg !3947
  %tobool36 = icmp eq i32 %call35, 0, !dbg !3947
  br i1 %tobool36, label %land.lhs.true37, label %for.inc, !dbg !3948

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %16 = load i32, i32* %regno34, align 4, !dbg !3949
  %17 = load i32, i32* @ira_reg_equiv_len, align 4, !dbg !3950
  %cmp39 = icmp slt i32 %16, %17, !dbg !3951
  br i1 %cmp39, label %lor.lhs.false41, label %land.lhs.true52, !dbg !3952

lor.lhs.false41:                                  ; preds = %land.lhs.true37
  %18 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !3953
  %idxprom43 = sext i32 %16 to i64, !dbg !3953
  %arrayidx44 = getelementptr inbounds i8, i8* %18, i64 %idxprom43, !dbg !3953
  %19 = load i8, i8* %arrayidx44, align 1, !dbg !3953
  %tobool45 = icmp eq i8 %19, 0, !dbg !3953
  br i1 %tobool45, label %land.lhs.true46, label %for.inc, !dbg !3954

land.lhs.true46:                                  ; preds = %lor.lhs.false41
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !3955
  %arrayidx49 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom43, !dbg !3955
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !3955
  %cmp50 = icmp eq %struct.rtx_def* %21, null, !dbg !3956
  br i1 %cmp50, label %land.lhs.true52, label %for.inc, !dbg !3957

land.lhs.true52:                                  ; preds = %land.lhs.true37, %land.lhs.true46
  %call53 = tail call fastcc zeroext i8 @slot_coalesced_allocno_live_ranges_intersect_p(%struct.ira_allocno* %3, i32 %13) #8, !dbg !3958
  %tobool54 = icmp eq i8 %call53, 0, !dbg !3958
  br i1 %tobool54, label %for.end, label %for.inc, !dbg !3959

for.inc:                                          ; preds = %land.lhs.true52, %lor.lhs.false41, %land.lhs.true33, %for.body27, %land.lhs.true46
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3960
  call void @llvm.dbg.value(metadata i32 undef, metadata !3890, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3897
  br label %for.cond24, !dbg !3961, !llvm.loop !3962

for.end:                                          ; preds = %for.cond24, %land.lhs.true52
  %cmp25.lcssa = phi i1 [ %cmp25, %for.cond24 ], [ %cmp25, %land.lhs.true52 ], !dbg !3936
  %a.2 = phi %struct.ira_allocno* [ %a.1, %for.cond24 ], [ %12, %land.lhs.true52 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3890, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3890, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.2, metadata !3894, metadata !DIExpression()), !dbg !3897
  br i1 %cmp25.lcssa, label %if.else, label %if.then59, !dbg !3964

if.then59:                                        ; preds = %for.end
  %inc60 = add nsw i32 %last_coalesced_allocno_num.0, 1, !dbg !3965
  call void @llvm.dbg.value(metadata i32 %inc60, metadata !3892, metadata !DIExpression()), !dbg !3897
  %temp61 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 41, !dbg !3968
  store i32 %last_coalesced_allocno_num.0, i32* %temp61, align 8, !dbg !3969
  tail call fastcc void @setup_slot_coalesced_allocno_live_ranges(%struct.ira_allocno* %3) #8, !dbg !3970
  br label %for.inc77, !dbg !3971

if.else:                                          ; preds = %for.end
  store i1 true, i1* @allocno_coalesced_p, align 1, !dbg !3972
  call void @llvm.dbg.value(metadata i8 1, metadata !3895, metadata !DIExpression()), !dbg !3897
  %22 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !3974
  %cmp62 = icmp sgt i32 %22, 3, !dbg !3976
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !3977
  %cmp65 = icmp ne %struct._IO_FILE* %23, null, !dbg !3978
  %or.cond = and i1 %cmp62, %cmp65, !dbg !3979
  br i1 %or.cond, label %if.then67, label %if.end73, !dbg !3979

if.then67:                                        ; preds = %if.else
  %num68 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !3980
  %24 = load i32, i32* %num68, align 8, !dbg !3980
  %25 = load i32, i32* %regno, align 4, !dbg !3981
  %num70 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.2, i64 0, i32 0, !dbg !3982
  %26 = load i32, i32* %num70, align 8, !dbg !3982
  %regno71 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.2, i64 0, i32 1, !dbg !3983
  %27 = load i32, i32* %regno71, align 4, !dbg !3983
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %23, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.17, i64 0, i64 0), i32 %24, i32 %25, i32 %26, i32 %27) #6, !dbg !3984
  br label %if.end73, !dbg !3984

if.end73:                                         ; preds = %if.then67, %if.else
  %temp74 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.2, i64 0, i32 41, !dbg !3985
  %28 = load i32, i32* %temp74, align 8, !dbg !3985
  %temp75 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 41, !dbg !3986
  store i32 %28, i32* %temp75, align 8, !dbg !3987
  tail call fastcc void @setup_slot_coalesced_allocno_live_ranges(%struct.ira_allocno* %3) #8, !dbg !3988
  tail call fastcc void @merge_allocnos(%struct.ira_allocno* %a.2, %struct.ira_allocno* %3) #8, !dbg !3989
  br label %for.inc77

for.inc77:                                        ; preds = %lor.lhs.false18, %land.lhs.true, %lor.lhs.false, %for.body, %if.then59, %if.end73
  %last_coalesced_allocno_num.2 = phi i32 [ %last_coalesced_allocno_num.0, %lor.lhs.false18 ], [ %last_coalesced_allocno_num.0, %land.lhs.true ], [ %last_coalesced_allocno_num.0, %lor.lhs.false ], [ %last_coalesced_allocno_num.0, %for.body ], [ %inc60, %if.then59 ], [ %last_coalesced_allocno_num.0, %if.end73 ], !dbg !3897
  %a.3 = phi %struct.ira_allocno* [ %a.0, %lor.lhs.false18 ], [ %a.0, %land.lhs.true ], [ %a.0, %lor.lhs.false ], [ %a.0, %for.body ], [ %a.2, %if.then59 ], [ %a.2, %if.end73 ]
  %merged_p.2 = phi i8 [ %merged_p.0, %lor.lhs.false18 ], [ %merged_p.0, %land.lhs.true ], [ %merged_p.0, %lor.lhs.false ], [ %merged_p.0, %for.body ], [ %merged_p.0, %if.then59 ], [ 1, %if.end73 ], !dbg !3909
  call void @llvm.dbg.value(metadata i8 %merged_p.2, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.3, metadata !3894, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %last_coalesced_allocno_num.2, metadata !3892, metadata !DIExpression()), !dbg !3897
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3990
  call void @llvm.dbg.value(metadata i32 undef, metadata !3889, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3897
  br label %for.cond, !dbg !3991, !llvm.loop !3992

for.cond80:                                       ; preds = %for.cond80.preheader, %for.body83
  %indvars.iv = phi i64 [ 0, %for.cond80.preheader ], [ %indvars.iv.next, %for.body83 ], !dbg !3994
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3889, metadata !DIExpression()), !dbg !3897
  %29 = load i32, i32* @ira_allocnos_num, align 4, !dbg !3995
  %30 = sext i32 %29 to i64, !dbg !3997
  %cmp81 = icmp slt i64 %indvars.iv, %30, !dbg !3997
  %31 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @slot_coalesced_allocnos_live_ranges, align 8, !dbg !3897
  br i1 %cmp81, label %for.body83, label %for.end88, !dbg !3913

for.body83:                                       ; preds = %for.cond80
  %arrayidx85 = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %31, i64 %indvars.iv, !dbg !3998
  %32 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %arrayidx85, align 8, !dbg !3998
  tail call void @ira_finish_allocno_live_range_list(%struct.ira_allocno_live_range* %32) #6, !dbg !3999
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4000
  call void @llvm.dbg.value(metadata i32 undef, metadata !3889, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3897
  br label %for.cond80, !dbg !4001, !llvm.loop !4002

for.end88:                                        ; preds = %for.cond80
  %.lcssa = phi %struct.ira_allocno_live_range** [ %31, %for.cond80 ], !dbg !3897
  %33 = bitcast %struct.ira_allocno_live_range** %.lcssa to i8*, !dbg !4004
  tail call void @ira_free(i8* %33) #6, !dbg !4005
  ret i8 %merged_p.0.lcssa, !dbg !4006
}

declare dso_local void @ira_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @coalesced_pseudo_reg_slot_compare(i8* %v1p, i8* %v2p) #5 !dbg !4007 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !4009, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !4010, metadata !DIExpression()), !dbg !4020
  %0 = bitcast i8* %v1p to i32*, !dbg !4021
  %1 = load i32, i32* %0, align 4, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %1, metadata !4011, metadata !DIExpression()), !dbg !4020
  %2 = bitcast i8* %v2p to i32*, !dbg !4023
  %3 = load i32, i32* %2, align 4, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %3, metadata !4012, metadata !DIExpression()), !dbg !4020
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4025
  %idxprom = sext i32 %1 to i64, !dbg !4025
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %idxprom, !dbg !4025
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4025
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !4013, metadata !DIExpression()), !dbg !4020
  %idxprom1 = sext i32 %3 to i64, !dbg !4026
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %idxprom1, !dbg !4026
  %6 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx2, align 8, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %6, metadata !4014, metadata !DIExpression()), !dbg !4020
  %cmp = icmp eq %struct.ira_allocno* %5, null, !dbg !4027
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4029

lor.lhs.false:                                    ; preds = %entry
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 3, !dbg !4030
  %7 = load i32, i32* %hard_regno, align 4, !dbg !4030
  %cmp3 = icmp sgt i32 %7, -1, !dbg !4031
  br i1 %cmp3, label %if.then, label %if.else, !dbg !4032

if.then:                                          ; preds = %lor.lhs.false, %entry
  %cmp4 = icmp eq %struct.ira_allocno* %6, null, !dbg !4033
  br i1 %cmp4, label %if.then8, label %lor.lhs.false5, !dbg !4036

lor.lhs.false5:                                   ; preds = %if.then
  %hard_regno6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 3, !dbg !4037
  %8 = load i32, i32* %hard_regno6, align 4, !dbg !4037
  %cmp7 = icmp sgt i32 %8, -1, !dbg !4038
  br i1 %cmp7, label %if.then8, label %cleanup, !dbg !4039

if.then8:                                         ; preds = %lor.lhs.false5, %if.then
  %sub = sub nsw i32 %1, %3, !dbg !4040
  br label %cleanup, !dbg !4041

if.else:                                          ; preds = %lor.lhs.false
  %cmp9 = icmp eq %struct.ira_allocno* %6, null, !dbg !4042
  br i1 %cmp9, label %cleanup, label %lor.lhs.false10, !dbg !4044

lor.lhs.false10:                                  ; preds = %if.else
  %hard_regno11 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %6, i64 0, i32 3, !dbg !4045
  %9 = load i32, i32* %hard_regno11, align 4, !dbg !4045
  %cmp12 = icmp sgt i32 %9, -1, !dbg !4046
  br i1 %cmp12, label %cleanup, label %if.end15, !dbg !4047

if.end15:                                         ; preds = %lor.lhs.false10
  %sub20 = sub i32 %9, %7, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %sub20, metadata !4015, metadata !DIExpression()), !dbg !4020
  %cmp21 = icmp eq i32 %sub20, 0, !dbg !4050
  br i1 %cmp21, label %if.end24, label %if.then22, !dbg !4051

if.then22:                                        ; preds = %if.end15
  %10 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !4052
  %tobool = icmp eq i8 %10, 0, !dbg !4052
  %sub23 = sub nsw i32 0, %sub20, !dbg !4052
  %cond = select i1 %tobool, i32 %sub23, i32 %sub20, !dbg !4052
  br label %cleanup, !dbg !4052

if.end24:                                         ; preds = %if.end15
  %11 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4053
  %arrayidx26 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idxprom, !dbg !4053
  %12 = bitcast %struct.rtx_def** %arrayidx26 to i32**, !dbg !4053
  %13 = load i32*, i32** %12, align 8, !dbg !4053
  %bf.load = load i32, i32* %13, align 8, !dbg !4053
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4053
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4053
  %idxprom27 = zext i32 %bf.clear to i64, !dbg !4053
  %arrayidx28 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27, !dbg !4053
  %14 = load i8, i8* %arrayidx28, align 1, !dbg !4053
  %conv30 = zext i8 %14 to i32, !dbg !4053
  %15 = load i32*, i32** @regno_max_ref_width, align 8, !dbg !4053
  %arrayidx32 = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !4053
  %16 = load i32, i32* %arrayidx32, align 4, !dbg !4053
  %cmp33 = icmp ult i32 %16, %conv30, !dbg !4053
  br i1 %cmp33, label %cond.true35, label %cond.false45, !dbg !4053

cond.true35:                                      ; preds = %if.end24
  br label %cond.end48, !dbg !4053

cond.false45:                                     ; preds = %if.end24
  br label %cond.end48, !dbg !4053

cond.end48:                                       ; preds = %cond.false45, %cond.true35
  %cond49 = phi i32 [ %conv30, %cond.true35 ], [ %16, %cond.false45 ], !dbg !4053
  call void @llvm.dbg.value(metadata i32 %cond49, metadata !4018, metadata !DIExpression()), !dbg !4020
  %arrayidx51 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %11, i64 %idxprom1, !dbg !4054
  %17 = bitcast %struct.rtx_def** %arrayidx51 to i32**, !dbg !4054
  %18 = load i32*, i32** %17, align 8, !dbg !4054
  %bf.load52 = load i32, i32* %18, align 8, !dbg !4054
  %bf.lshr53 = lshr i32 %bf.load52, 16, !dbg !4054
  %bf.clear54 = and i32 %bf.lshr53, 255, !dbg !4054
  %idxprom55 = zext i32 %bf.clear54 to i64, !dbg !4054
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom55, !dbg !4054
  %19 = load i8, i8* %arrayidx56, align 1, !dbg !4054
  %conv58 = zext i8 %19 to i32, !dbg !4054
  %arrayidx60 = getelementptr inbounds i32, i32* %15, i64 %idxprom1, !dbg !4054
  %20 = load i32, i32* %arrayidx60, align 4, !dbg !4054
  %cmp61 = icmp ult i32 %20, %conv58, !dbg !4054
  br i1 %cmp61, label %cond.true63, label %cond.false73, !dbg !4054

cond.true63:                                      ; preds = %cond.end48
  br label %cond.end76, !dbg !4054

cond.false73:                                     ; preds = %cond.end48
  br label %cond.end76, !dbg !4054

cond.end76:                                       ; preds = %cond.false73, %cond.true63
  %cond77 = phi i32 [ %conv58, %cond.true63 ], [ %20, %cond.false73 ], !dbg !4054
  call void @llvm.dbg.value(metadata i32 %cond77, metadata !4019, metadata !DIExpression()), !dbg !4020
  %sub78 = sub nsw i32 %cond77, %cond49, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %sub78, metadata !4015, metadata !DIExpression()), !dbg !4020
  %cmp79 = icmp eq i32 %sub78, 0, !dbg !4057
  %sub83 = sub nsw i32 %1, %3, !dbg !4058
  %spec.select = select i1 %cmp79, i32 %sub83, i32 %sub78, !dbg !4059
  ret i32 %spec.select, !dbg !4059

cleanup:                                          ; preds = %if.then22, %if.else, %lor.lhs.false10, %lor.lhs.false5, %if.then8
  %retval.0 = phi i32 [ %sub, %if.then8 ], [ 1, %lor.lhs.false5 ], [ -1, %lor.lhs.false10 ], [ -1, %if.else ], [ %cond, %if.then22 ], !dbg !4020
  ret i32 %retval.0, !dbg !4060
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_mark_allocation_change(i32 %regno) local_unnamed_addr #5 !dbg !4061 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4063, metadata !DIExpression()), !dbg !4069
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4070
  %idxprom = sext i32 %regno to i64, !dbg !4070
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom, !dbg !4070
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4070
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !4064, metadata !DIExpression()), !dbg !4069
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 9, !dbg !4071
  %2 = load i32, i32* %cover_class1, align 8, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %2, metadata !4068, metadata !DIExpression()), !dbg !4069
  %3 = load i16*, i16** @reg_renumber, align 8, !dbg !4072
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !4072
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !4072
  %conv = sext i16 %4 to i32, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4066, metadata !DIExpression()), !dbg !4069
  %hard_regno4 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 3, !dbg !4073
  %5 = load i32, i32* %hard_regno4, align 4, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %5, metadata !4065, metadata !DIExpression()), !dbg !4069
  %cmp = icmp eq i32 %5, %conv, !dbg !4075
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !4076

if.end:                                           ; preds = %entry
  %cmp6 = icmp slt i32 %5, 0, !dbg !4077
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !4079

if.then8:                                         ; preds = %if.end
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 12, !dbg !4080
  %6 = load i32, i32* %memory_cost, align 4, !dbg !4080
  br label %if.end19, !dbg !4081

if.else:                                          ; preds = %if.end
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 33, !dbg !4082
  %7 = load i32*, i32** %hard_reg_costs, align 8, !dbg !4082
  %cmp9 = icmp eq i32* %7, null, !dbg !4084
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !4082

cond.true:                                        ; preds = %if.else
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 10, !dbg !4085
  br label %cond.end, !dbg !4082

cond.false:                                       ; preds = %if.else
  %idxprom12 = zext i32 %2 to i64, !dbg !4086
  %idxprom14 = sext i32 %5 to i64, !dbg !4086
  %arrayidx15 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom12, i64 %idxprom14, !dbg !4086
  %8 = load i16, i16* %arrayidx15, align 2, !dbg !4086
  %idxprom16 = sext i16 %8 to i64, !dbg !4087
  %arrayidx17 = getelementptr inbounds i32, i32* %7, i64 %idxprom16, !dbg !4087
  br label %cond.end, !dbg !4082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32* [ %cover_class_cost, %cond.true ], [ %arrayidx17, %cond.false ]
  %cond = load i32, i32* %cond.in, align 4, !dbg !4082
  tail call fastcc void @update_copy_costs(%struct.ira_allocno* %1, i8 zeroext 0) #8, !dbg !4088
  br label %if.end19

if.end19:                                         ; preds = %cond.end, %if.then8
  %.pn = phi i32 [ %6, %if.then8 ], [ %cond, %cond.end ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4067, metadata !DIExpression()), !dbg !4069
  %9 = load i32, i32* @ira_overall_cost, align 4, !dbg !4089
  %sub20 = add nsw i32 %9, %.pn, !dbg !4089
  store i32 %sub20, i32* @ira_overall_cost, align 4, !dbg !4089
  store i32 %conv, i32* %hard_regno4, align 4, !dbg !4090
  %cmp22 = icmp slt i16 %4, 0, !dbg !4091
  br i1 %cmp22, label %if.then24, label %if.else27, !dbg !4093

if.then24:                                        ; preds = %if.end19
  store i32 -1, i32* %hard_regno4, align 4, !dbg !4094
  %memory_cost26 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 12, !dbg !4096
  %10 = load i32, i32* %memory_cost26, align 4, !dbg !4096
  %add = sub i32 %10, %.pn, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %add, metadata !4067, metadata !DIExpression()), !dbg !4069
  br label %if.end54, !dbg !4098

if.else27:                                        ; preds = %if.end19
  %idxprom28 = zext i32 %2 to i64, !dbg !4099
  %idxprom30 = sext i16 %4 to i64, !dbg !4099
  %arrayidx31 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom28, i64 %idxprom30, !dbg !4099
  %11 = load i16, i16* %arrayidx31, align 2, !dbg !4099
  %cmp33 = icmp sgt i16 %11, -1, !dbg !4101
  br i1 %cmp33, label %if.then35, label %if.end54, !dbg !4102

if.then35:                                        ; preds = %if.else27
  %hard_reg_costs36 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 33, !dbg !4103
  %12 = load i32*, i32** %hard_reg_costs36, align 8, !dbg !4103
  %cmp37 = icmp eq i32* %12, null, !dbg !4105
  br i1 %cmp37, label %cond.true39, label %cond.false41, !dbg !4103

cond.true39:                                      ; preds = %if.then35
  %cover_class_cost40 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 10, !dbg !4106
  br label %cond.end49, !dbg !4103

cond.false41:                                     ; preds = %if.then35
  %idxprom47 = sext i16 %11 to i64, !dbg !4107
  %arrayidx48 = getelementptr inbounds i32, i32* %12, i64 %idxprom47, !dbg !4107
  br label %cond.end49, !dbg !4103

cond.end49:                                       ; preds = %cond.false41, %cond.true39
  %cond50.in = phi i32* [ %cover_class_cost40, %cond.true39 ], [ %arrayidx48, %cond.false41 ]
  %cond50 = load i32, i32* %cond50.in, align 4, !dbg !4103
  %add51 = sub i32 %cond50, %.pn, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %add51, metadata !4067, metadata !DIExpression()), !dbg !4069
  tail call fastcc void @update_copy_costs(%struct.ira_allocno* %1, i8 zeroext 1) #8, !dbg !4109
  %.pre = load i32, i32* @ira_overall_cost, align 4, !dbg !4110
  br label %if.end54, !dbg !4111

if.end54:                                         ; preds = %cond.end49, %if.else27, %if.then24
  %13 = phi i32 [ %sub20, %if.then24 ], [ %.pre, %cond.end49 ], [ %sub20, %if.else27 ], !dbg !4110
  %cost.2 = phi i32 [ %add, %if.then24 ], [ %add51, %cond.end49 ], [ 0, %if.else27 ], !dbg !4112
  call void @llvm.dbg.value(metadata i32 %cost.2, metadata !4067, metadata !DIExpression()), !dbg !4069
  %add55 = add nsw i32 %13, %cost.2, !dbg !4110
  store i32 %add55, i32* @ira_overall_cost, align 4, !dbg !4110
  br label %cleanup.cont, !dbg !4113

cleanup.cont:                                     ; preds = %if.end54, %entry
  ret void, !dbg !4113
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_copy_costs(%struct.ira_allocno* %allocno, i8 zeroext %decr_p) unnamed_addr #5 !dbg !4114 {
entry:
  %allocno.addr = alloca %struct.ira_allocno*, align 8
  %divisor = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !4118, metadata !DIExpression()), !dbg !4131
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** %allocno.addr, align 8
  call void @llvm.dbg.value(metadata i8 %decr_p, metadata !4119, metadata !DIExpression()), !dbg !4131
  %0 = bitcast i32* %divisor to i8*, !dbg !4132
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4132
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !4118, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 undef, metadata !4123, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cover_class2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !4133
  %1 = load i32, i32* %cover_class2, align 8, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %1, metadata !4127, metadata !DIExpression()), !dbg !4131
  %cmp = icmp eq i32 %1, 0, !dbg !4134
  br i1 %cmp, label %cleanup, label %if.end, !dbg !4136

if.end:                                           ; preds = %entry
  %hard_regno1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 3, !dbg !4137
  %2 = load i32, i32* %hard_regno1, align 4, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %2, metadata !4123, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 undef, metadata !4120, metadata !DIExpression()), !dbg !4131
  %idxprom5 = sext i32 %2 to i64, !dbg !4138
  %arrayidx6 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom5, !dbg !4138
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %3, metadata !4126, metadata !DIExpression()), !dbg !4131
  tail call fastcc void @start_update_cost() #8, !dbg !4139
  call void @llvm.dbg.value(metadata i32 1, metadata !4124, metadata !DIExpression()), !dbg !4131
  store i32 1, i32* %divisor, align 4, !dbg !4140
  %idxprom22 = zext i32 %3 to i64, !dbg !4141
  %tobool33 = icmp eq i8 %decr_p, 0, !dbg !4147
  br label %do.body, !dbg !4149

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %if.end
  %4 = phi %struct.ira_allocno* [ %allocno, %if.end ], [ %.pre, %do.cond.do.body_crit_edge ], !dbg !4150
  %another_allocno.0 = phi %struct.ira_allocno* [ undef, %if.end ], [ %another_allocno.1.lcssa, %do.cond.do.body_crit_edge ]
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %if.end ], [ %next_cp.1.lcssa, %do.cond.do.body_crit_edge ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.0, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !4118, metadata !DIExpression()), !dbg !4131
  %mode7 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 2, !dbg !4150
  %5 = load i32, i32* %mode7, align 8, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %5, metadata !4125, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !4118, metadata !DIExpression()), !dbg !4131
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 15, !dbg !4151
  %6 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !4151
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %6, metadata !4129, metadata !DIExpression()), !dbg !4131
  br i1 %tobool33, label %do.body.split.us, label %do.body.do.body.split_crit_edge, !dbg !4152

do.body.do.body.split_crit_edge:                  ; preds = %do.body
  br label %for.cond, !dbg !4152

do.body.split.us:                                 ; preds = %do.body
  br label %for.cond.us, !dbg !4152

for.cond.us:                                      ; preds = %for.inc.us, %do.body.split.us
  %another_allocno.1.us = phi %struct.ira_allocno* [ %another_allocno.0, %do.body.split.us ], [ %another_allocno.3.us, %for.inc.us ]
  %cp.0.us = phi %struct.ira_allocno_copy* [ %6, %do.body.split.us ], [ %next_cp.3.us, %for.inc.us ], !dbg !4153
  %next_cp.1.us = phi %struct.ira_allocno_copy* [ %next_cp.0, %do.body.split.us ], [ %next_cp.3.us, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0.us, metadata !4129, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.us, metadata !4128, metadata !DIExpression()), !dbg !4131
  %cmp8.us = icmp eq %struct.ira_allocno_copy* %cp.0.us, null, !dbg !4154
  br i1 %cmp8.us, label %do.cond.us-lcssa.us, label %for.body.us, !dbg !4155

for.body.us:                                      ; preds = %for.cond.us
  %first.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 1, !dbg !4156
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %first.us, align 8, !dbg !4156
  %8 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %8, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp10.us = icmp eq %struct.ira_allocno* %7, %8, !dbg !4159
  br i1 %cmp10.us, label %if.then12.us, label %if.else.us, !dbg !4160

if.else.us:                                       ; preds = %for.body.us
  %second13.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 2, !dbg !4161
  %9 = load %struct.ira_allocno*, %struct.ira_allocno** %second13.us, align 8, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %8, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp14.us = icmp eq %struct.ira_allocno* %9, %8, !dbg !4163
  br i1 %cmp14.us, label %if.then16.us, label %if.else18.us, !dbg !4164

if.else18.us:                                     ; preds = %if.else.us
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 280, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4165
  br label %if.end20.us

if.then16.us:                                     ; preds = %if.else.us
  %next_second_allocno_copy.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 9, !dbg !4166
  %10 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy.us, align 8, !dbg !4166
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %10, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !4128, metadata !DIExpression()), !dbg !4131
  br label %if.end20.us, !dbg !4168

if.then12.us:                                     ; preds = %for.body.us
  %next_first_allocno_copy.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 7, !dbg !4169
  %11 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy.us, align 8, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %11, metadata !4130, metadata !DIExpression()), !dbg !4131
  %second.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 2, !dbg !4171
  %12 = load %struct.ira_allocno*, %struct.ira_allocno** %second.us, align 8, !dbg !4171
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !4128, metadata !DIExpression()), !dbg !4131
  br label %if.end20.us, !dbg !4172

if.end20.us:                                      ; preds = %if.then12.us, %if.then16.us, %if.else18.us
  %another_allocno.3.us = phi %struct.ira_allocno* [ %12, %if.then12.us ], [ %7, %if.then16.us ], [ %another_allocno.1.us, %if.else18.us ], !dbg !4173
  %next_cp.3.us = phi %struct.ira_allocno_copy* [ %11, %if.then12.us ], [ %10, %if.then16.us ], [ %next_cp.1.us, %if.else18.us ], !dbg !4173
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3.us, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.3.us, metadata !4128, metadata !DIExpression()), !dbg !4131
  %cover_class21.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 9, !dbg !4174
  %13 = load i32, i32* %cover_class21.us, align 8, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %13, metadata !4127, metadata !DIExpression()), !dbg !4131
  %idxprom24.us = zext i32 %13 to i64, !dbg !4175
  %arrayidx25.us = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %idxprom22, i64 %idxprom24.us, !dbg !4175
  %14 = load i8, i8* %arrayidx25.us, align 1, !dbg !4175
  %tobool.us = icmp eq i8 %14, 0, !dbg !4175
  br i1 %tobool.us, label %for.inc.us, label %lor.lhs.false.us, !dbg !4176

lor.lhs.false.us:                                 ; preds = %if.end20.us
  %assigned_p.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 31, !dbg !4177
  %bf.load.us = load i16, i16* %assigned_p.us, align 4, !dbg !4177
  %bf.clear.us = and i16 %bf.load.us, 256, !dbg !4177
  %tobool26.us = icmp eq i16 %bf.clear.us, 0, !dbg !4177
  br i1 %tobool26.us, label %if.end28.us, label %for.inc.us, !dbg !4178

if.end28.us:                                      ; preds = %lor.lhs.false.us
  %second29.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 2, !dbg !4179
  %15 = load %struct.ira_allocno*, %struct.ira_allocno** %second29.us, align 8, !dbg !4179
  %16 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !4180
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp30.us = icmp eq %struct.ira_allocno* %15, %16, !dbg !4181
  br i1 %cmp30.us, label %cond.true.us, label %cond.false.us, !dbg !4182

cond.false.us:                                    ; preds = %if.end28.us
  %call32.us = call fastcc i32 @ira_get_register_move_cost(i32 %5, i32 %13, i32 %3) #8, !dbg !4183
  br label %cond.end.us, !dbg !4182

cond.true.us:                                     ; preds = %if.end28.us
  %call.us = call fastcc i32 @ira_get_register_move_cost(i32 %5, i32 %3, i32 %13) #8, !dbg !4184
  br label %cond.end.us, !dbg !4182

cond.end.us:                                      ; preds = %cond.true.us, %cond.false.us
  %cond.us = phi i32 [ %call.us, %cond.true.us ], [ %call32.us, %cond.false.us ], !dbg !4182
  call void @llvm.dbg.value(metadata i32 %cond.us, metadata !4121, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i32 %cond.us, metadata !4121, metadata !DIExpression()), !dbg !4131
  %freq.us = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0.us, i64 0, i32 3, !dbg !4185
  %17 = load i32, i32* %freq.us, align 8, !dbg !4185
  %mul.us = mul nsw i32 %17, %cond.us, !dbg !4186
  %18 = load i32, i32* %divisor, align 4, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %18, metadata !4124, metadata !DIExpression()), !dbg !4131
  %div.us = sdiv i32 %mul.us, %18, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %div.us, metadata !4122, metadata !DIExpression()), !dbg !4131
  %cmp36.us = icmp eq i32 %div.us, 0, !dbg !4189
  br i1 %cmp36.us, label %for.inc.us, label %if.end39.us, !dbg !4191

if.end39.us:                                      ; preds = %cond.end.us
  %updated_hard_reg_costs.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 34, !dbg !4192
  %updated_cover_class_cost.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 11, !dbg !4193
  %19 = load i32, i32* %updated_cover_class_cost.us, align 8, !dbg !4193
  %hard_reg_costs.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 33, !dbg !4194
  %20 = load i32*, i32** %hard_reg_costs.us, align 8, !dbg !4194
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_hard_reg_costs.us, i32 %13, i32 %19, i32* %20) #8, !dbg !4195
  %updated_conflict_hard_reg_costs.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 36, !dbg !4196
  %conflict_hard_reg_costs.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3.us, i64 0, i32 35, !dbg !4197
  %21 = load i32*, i32** %conflict_hard_reg_costs.us, align 8, !dbg !4197
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs.us, i32 %13, i32 0, i32* %21) #8, !dbg !4198
  %arrayidx43.us = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom24.us, i64 %idxprom5, !dbg !4199
  %22 = load i16, i16* %arrayidx43.us, align 2, !dbg !4199
  %23 = load i32*, i32** %updated_hard_reg_costs.us, align 8, !dbg !4200
  %idxprom46.us = sext i16 %22 to i64, !dbg !4200
  %arrayidx47.us = getelementptr inbounds i32, i32* %23, i64 %idxprom46.us, !dbg !4200
  %24 = load i32, i32* %arrayidx47.us, align 4, !dbg !4201
  %add.us = add nsw i32 %24, %div.us, !dbg !4201
  store i32 %add.us, i32* %arrayidx47.us, align 4, !dbg !4201
  %25 = load i32*, i32** %updated_conflict_hard_reg_costs.us, align 8, !dbg !4202
  %arrayidx50.us = getelementptr inbounds i32, i32* %25, i64 %idxprom46.us, !dbg !4202
  %26 = load i32, i32* %arrayidx50.us, align 4, !dbg !4203
  %add51.us = add nsw i32 %26, %div.us, !dbg !4203
  store i32 %add51.us, i32* %arrayidx50.us, align 4, !dbg !4203
  %27 = load i32, i32* %divisor, align 4, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %27, metadata !4124, metadata !DIExpression()), !dbg !4131
  %mul52.us = shl nsw i32 %27, 2, !dbg !4205
  call fastcc void @queue_update_cost(%struct.ira_allocno* %another_allocno.3.us, i32 %mul52.us) #8, !dbg !4206
  br label %for.inc.us, !dbg !4207

for.inc.us:                                       ; preds = %if.end39.us, %cond.end.us, %lor.lhs.false.us, %if.end20.us
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3.us, metadata !4129, metadata !DIExpression()), !dbg !4131
  br label %for.cond.us, !dbg !4208, !llvm.loop !4209

do.cond.us-lcssa.us:                              ; preds = %for.cond.us
  %another_allocno.1.us.lcssa = phi %struct.ira_allocno* [ %another_allocno.1.us, %for.cond.us ]
  %next_cp.1.us.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1.us, %for.cond.us ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.us.lcssa, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us.lcssa, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.us.lcssa, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.us.lcssa, metadata !4130, metadata !DIExpression()), !dbg !4131
  br label %do.cond, !dbg !4211

for.cond:                                         ; preds = %for.inc, %do.body.do.body.split_crit_edge
  %another_allocno.1 = phi %struct.ira_allocno* [ %another_allocno.0, %do.body.do.body.split_crit_edge ], [ %another_allocno.3, %for.inc ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %6, %do.body.do.body.split_crit_edge ], [ %next_cp.3, %for.inc ], !dbg !4153
  %next_cp.1 = phi %struct.ira_allocno_copy* [ %next_cp.0, %do.body.do.body.split_crit_edge ], [ %next_cp.3, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !4129, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1, metadata !4128, metadata !DIExpression()), !dbg !4131
  %cmp8 = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !4154
  br i1 %cmp8, label %do.cond.us-lcssa, label %for.body, !dbg !4155

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !4156
  %28 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !4156
  %29 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp10 = icmp eq %struct.ira_allocno* %28, %29, !dbg !4159
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !4160

if.then12:                                        ; preds = %for.body
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !4169
  %30 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !4169
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %30, metadata !4130, metadata !DIExpression()), !dbg !4131
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !4171
  %31 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !4171
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %31, metadata !4128, metadata !DIExpression()), !dbg !4131
  br label %if.end20, !dbg !4172

if.else:                                          ; preds = %for.body
  %second13 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !4161
  %32 = load %struct.ira_allocno*, %struct.ira_allocno** %second13, align 8, !dbg !4161
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp14 = icmp eq %struct.ira_allocno* %32, %29, !dbg !4163
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !4164

if.then16:                                        ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !4166
  %33 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !4166
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %33, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %28, metadata !4128, metadata !DIExpression()), !dbg !4131
  br label %if.end20, !dbg !4168

if.else18:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 280, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4165
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.else18, %if.then12
  %another_allocno.3 = phi %struct.ira_allocno* [ %31, %if.then12 ], [ %28, %if.then16 ], [ %another_allocno.1, %if.else18 ], !dbg !4173
  %next_cp.3 = phi %struct.ira_allocno_copy* [ %30, %if.then12 ], [ %33, %if.then16 ], [ %next_cp.1, %if.else18 ], !dbg !4173
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.3, metadata !4128, metadata !DIExpression()), !dbg !4131
  %cover_class21 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 9, !dbg !4174
  %34 = load i32, i32* %cover_class21, align 8, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %34, metadata !4127, metadata !DIExpression()), !dbg !4131
  %idxprom24 = zext i32 %34 to i64, !dbg !4175
  %arrayidx25 = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %idxprom22, i64 %idxprom24, !dbg !4175
  %35 = load i8, i8* %arrayidx25, align 1, !dbg !4175
  %tobool = icmp eq i8 %35, 0, !dbg !4175
  br i1 %tobool, label %for.inc, label %lor.lhs.false, !dbg !4176

lor.lhs.false:                                    ; preds = %if.end20
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 31, !dbg !4177
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !4177
  %bf.clear = and i16 %bf.load, 256, !dbg !4177
  %tobool26 = icmp eq i16 %bf.clear, 0, !dbg !4177
  br i1 %tobool26, label %if.end28, label %for.inc, !dbg !4178

if.end28:                                         ; preds = %lor.lhs.false
  %second29 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !4179
  %36 = load %struct.ira_allocno*, %struct.ira_allocno** %second29, align 8, !dbg !4179
  %37 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !4180
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %37, metadata !4118, metadata !DIExpression()), !dbg !4131
  %cmp30 = icmp eq %struct.ira_allocno* %36, %37, !dbg !4181
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !4182

cond.true:                                        ; preds = %if.end28
  %call = call fastcc i32 @ira_get_register_move_cost(i32 %5, i32 %3, i32 %34) #8, !dbg !4184
  br label %cond.end, !dbg !4182

cond.false:                                       ; preds = %if.end28
  %call32 = call fastcc i32 @ira_get_register_move_cost(i32 %5, i32 %34, i32 %3) #8, !dbg !4183
  br label %cond.end, !dbg !4182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call32, %cond.false ], !dbg !4182
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4121, metadata !DIExpression()), !dbg !4131
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 3, !dbg !4185
  %38 = load i32, i32* %freq, align 8, !dbg !4185
  %39 = mul i32 %cond, %38, !dbg !4186
  %mul = sub i32 0, %39, !dbg !4186
  %40 = load i32, i32* %divisor, align 4, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %40, metadata !4124, metadata !DIExpression()), !dbg !4131
  %div = sdiv i32 %mul, %40, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %div, metadata !4122, metadata !DIExpression()), !dbg !4131
  %cmp36 = icmp eq i32 %div, 0, !dbg !4189
  br i1 %cmp36, label %for.inc, label %if.end39, !dbg !4191

if.end39:                                         ; preds = %cond.end
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 34, !dbg !4192
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 11, !dbg !4193
  %41 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !4193
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 33, !dbg !4194
  %42 = load i32*, i32** %hard_reg_costs, align 8, !dbg !4194
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_hard_reg_costs, i32 %34, i32 %41, i32* %42) #8, !dbg !4195
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 36, !dbg !4196
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 35, !dbg !4197
  %43 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !4197
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs, i32 %34, i32 0, i32* %43) #8, !dbg !4198
  %arrayidx43 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom24, i64 %idxprom5, !dbg !4199
  %44 = load i16, i16* %arrayidx43, align 2, !dbg !4199
  %45 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !4200
  %idxprom46 = sext i16 %44 to i64, !dbg !4200
  %arrayidx47 = getelementptr inbounds i32, i32* %45, i64 %idxprom46, !dbg !4200
  %46 = load i32, i32* %arrayidx47, align 4, !dbg !4201
  %add = add nsw i32 %46, %div, !dbg !4201
  store i32 %add, i32* %arrayidx47, align 4, !dbg !4201
  %47 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !4202
  %arrayidx50 = getelementptr inbounds i32, i32* %47, i64 %idxprom46, !dbg !4202
  %48 = load i32, i32* %arrayidx50, align 4, !dbg !4203
  %add51 = add nsw i32 %48, %div, !dbg !4203
  store i32 %add51, i32* %arrayidx50, align 4, !dbg !4203
  %49 = load i32, i32* %divisor, align 4, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %49, metadata !4124, metadata !DIExpression()), !dbg !4131
  %mul52 = shl nsw i32 %49, 2, !dbg !4205
  call fastcc void @queue_update_cost(%struct.ira_allocno* %another_allocno.3, i32 %mul52) #8, !dbg !4206
  br label %for.inc, !dbg !4207

for.inc:                                          ; preds = %lor.lhs.false, %if.end20, %cond.end, %if.end39
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !4129, metadata !DIExpression()), !dbg !4131
  br label %for.cond, !dbg !4208, !llvm.loop !4209

do.cond.us-lcssa:                                 ; preds = %for.cond
  %another_allocno.1.lcssa4 = phi %struct.ira_allocno* [ %another_allocno.1, %for.cond ]
  %next_cp.1.lcssa3 = phi %struct.ira_allocno_copy* [ %next_cp.1, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa4, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa3, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa4, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa3, metadata !4130, metadata !DIExpression()), !dbg !4131
  br label %do.cond, !dbg !4211

do.cond:                                          ; preds = %do.cond.us-lcssa.us, %do.cond.us-lcssa
  %another_allocno.1.lcssa = phi %struct.ira_allocno* [ %another_allocno.1.lcssa4, %do.cond.us-lcssa ], [ %another_allocno.1.us.lcssa, %do.cond.us-lcssa.us ]
  %next_cp.1.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1.lcssa3, %do.cond.us-lcssa ], [ %next_cp.1.us.lcssa, %do.cond.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !4128, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !4130, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %allocno.addr, metadata !4118, metadata !DIExpression(DW_OP_deref)), !dbg !4131
  call void @llvm.dbg.value(metadata i32* %divisor, metadata !4124, metadata !DIExpression(DW_OP_deref)), !dbg !4131
  %call53 = call fastcc zeroext i8 @get_next_update_cost(%struct.ira_allocno** nonnull %allocno.addr, i32* nonnull %divisor) #8, !dbg !4211
  %tobool54 = icmp eq i8 %call53, 0, !dbg !4212
  br i1 %tobool54, label %cleanup.loopexit, label %do.cond.do.body_crit_edge, !dbg !4212, !llvm.loop !4213

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  %.pre = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !4150
  br label %do.body, !dbg !4212

cleanup.loopexit:                                 ; preds = %do.cond
  br label %cleanup, !dbg !4215

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4215
  ret void, !dbg !4215
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_mark_memory_move_deletion(i32 %dst_regno, i32 %src_regno) local_unnamed_addr #5 !dbg !4216 {
entry:
  call void @llvm.dbg.value(metadata i32 %dst_regno, metadata !4220, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %src_regno, metadata !4221, metadata !DIExpression()), !dbg !4224
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4225
  %idxprom = sext i32 %dst_regno to i64, !dbg !4225
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom, !dbg !4225
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !4222, metadata !DIExpression()), !dbg !4224
  %idxprom1 = sext i32 %src_regno to i64, !dbg !4226
  %arrayidx2 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom1, !dbg !4226
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx2, align 8, !dbg !4226
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !4223, metadata !DIExpression()), !dbg !4224
  %dont_reassign_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 31, !dbg !4227
  %bf.load = load i16, i16* %dont_reassign_p, align 4, !dbg !4228
  %bf.set = or i16 %bf.load, 8, !dbg !4228
  store i16 %bf.set, i16* %dont_reassign_p, align 4, !dbg !4228
  %dont_reassign_p3 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 31, !dbg !4229
  %bf.load4 = load i16, i16* %dont_reassign_p3, align 4, !dbg !4230
  %bf.set6 = or i16 %bf.load4, 8, !dbg !4230
  store i16 %bf.set6, i16* %dont_reassign_p3, align 4, !dbg !4230
  ret void, !dbg !4231
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ira_reassign_pseudos(i32* %spilled_pseudo_regs, i32 %num, i64 %bad_spill_regs, i64* %pseudo_forbidden_regs, i64* %pseudo_previous_regs, %struct.bitmap_head_def* %spilled) local_unnamed_addr #5 !dbg !4232 {
entry:
  %conflict_a = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  call void @llvm.dbg.value(metadata i32* %spilled_pseudo_regs, metadata !4236, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %num, metadata !4237, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %bad_spill_regs, metadata !4238, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64* %pseudo_forbidden_regs, metadata !4239, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64* %pseudo_previous_regs, metadata !4240, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %spilled, metadata !4241, metadata !DIExpression()), !dbg !4251
  %0 = bitcast %struct.ira_allocno** %conflict_a to i8*, !dbg !4252
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4252
  %1 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !4253
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !4253
  %cmp = icmp sgt i32 %num, 1, !dbg !4254
  br i1 %cmp, label %if.then, label %if.end, !dbg !4256

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %spilled_pseudo_regs to i8*, !dbg !4257
  %conv = sext i32 %num to i64, !dbg !4258
  tail call void @spec_qsort(i8* %2, i64 %conv, i64 4, i32 (i8*, i8*)* nonnull @pseudo_reg_compare) #6, !dbg !4259
  br label %if.end, !dbg !4259

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4243, metadata !DIExpression()), !dbg !4251
  %3 = sext i32 %num to i64, !dbg !4260
  br label %for.cond, !dbg !4260

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc ], [ 0, %if.end ], !dbg !4262
  %m.0 = phi i32 [ %m.1, %for.inc ], [ 0, %if.end ], !dbg !4262
  %changed_p.0 = phi i8 [ %changed_p.1, %for.inc ], [ 0, %if.end ], !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.0, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !4242, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %m.0, metadata !4243, metadata !DIExpression()), !dbg !4251
  %cmp1 = icmp slt i64 %indvars.iv7, %3, !dbg !4263
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4265

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i32, i32* %spilled_pseudo_regs, i64 %indvars.iv7, !dbg !4266
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %4, metadata !4245, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %bad_spill_regs, metadata !4249, metadata !DIExpression()), !dbg !4251
  %idxprom3 = sext i32 %4 to i64, !dbg !4268
  %arrayidx4 = getelementptr inbounds i64, i64* %pseudo_forbidden_regs, i64 %idxprom3, !dbg !4268
  %5 = load i64, i64* %arrayidx4, align 8, !dbg !4268
  %or = or i64 %5, %bad_spill_regs, !dbg !4268
  call void @llvm.dbg.value(metadata i64 %or, metadata !4249, metadata !DIExpression()), !dbg !4251
  %arrayidx6 = getelementptr inbounds i64, i64* %pseudo_previous_regs, i64 %idxprom3, !dbg !4269
  %6 = load i64, i64* %arrayidx6, align 8, !dbg !4269
  %or7 = or i64 %or, %6, !dbg !4269
  call void @llvm.dbg.value(metadata i64 %or7, metadata !4249, metadata !DIExpression()), !dbg !4251
  %7 = load i16*, i16** @reg_renumber, align 8, !dbg !4270
  %arrayidx9 = getelementptr inbounds i16, i16* %7, i64 %idxprom3, !dbg !4270
  %8 = load i16, i16* %arrayidx9, align 2, !dbg !4270
  %cmp11 = icmp slt i16 %8, 0, !dbg !4270
  br i1 %cmp11, label %cond.end, label %cond.true, !dbg !4270

cond.true:                                        ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 2929, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4270
  br label %cond.end, !dbg !4270

cond.end:                                         ; preds = %for.body, %cond.true
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4271
  %arrayidx14 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %idxprom3, !dbg !4271
  %10 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx14, align 8, !dbg !4271
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %10, metadata !4247, metadata !DIExpression()), !dbg !4251
  tail call void @ira_mark_allocation_change(i32 %4) #8, !dbg !4272
  %11 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4273
  %cmp15 = icmp sgt i32 %11, 3, !dbg !4275
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4276
  %cmp17 = icmp ne %struct._IO_FILE* %12, null, !dbg !4277
  %or.cond = and i1 %cmp15, %cmp17, !dbg !4278
  br i1 %or.cond, label %if.then19, label %if.end21, !dbg !4278

if.then19:                                        ; preds = %cond.end
  %num20 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 0, !dbg !4279
  %13 = load i32, i32* %num20, align 8, !dbg !4279
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 12, !dbg !4280
  %14 = load i32, i32* %memory_cost, align 4, !dbg !4280
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 10, !dbg !4281
  %15 = load i32, i32* %cover_class_cost, align 4, !dbg !4281
  %sub = sub nsw i32 %14, %15, !dbg !4282
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %4, i32 %13, i32 %sub) #6, !dbg !4283
  br label %if.end21, !dbg !4283

if.end21:                                         ; preds = %if.then19, %cond.end
  %call22 = tail call fastcc zeroext i8 @allocno_reload_assign(%struct.ira_allocno* %10, i64 %or7) #8, !dbg !4284
  %16 = load i16*, i16** @reg_renumber, align 8, !dbg !4285
  %arrayidx24 = getelementptr inbounds i16, i16* %16, i64 %idxprom3, !dbg !4285
  %17 = load i16, i16* %arrayidx24, align 2, !dbg !4285
  %cmp26 = icmp sgt i16 %17, -1, !dbg !4287
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !4288

if.then28:                                        ; preds = %if.end21
  %call29 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %spilled, i32 %4) #6, !dbg !4289
  call void @llvm.dbg.value(metadata i8 1, metadata !4246, metadata !DIExpression()), !dbg !4251
  br label %for.inc, !dbg !4291

if.else:                                          ; preds = %if.end21
  %inc = add nsw i32 %m.0, 1, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4243, metadata !DIExpression()), !dbg !4251
  %idxprom30 = sext i32 %m.0 to i64, !dbg !4293
  %arrayidx31 = getelementptr inbounds i32, i32* %spilled_pseudo_regs, i64 %idxprom30, !dbg !4293
  store i32 %4, i32* %arrayidx31, align 4, !dbg !4294
  br label %for.inc

for.inc:                                          ; preds = %if.then28, %if.else
  %m.1 = phi i32 [ %m.0, %if.then28 ], [ %inc, %if.else ], !dbg !4295
  %changed_p.1 = phi i8 [ 1, %if.then28 ], [ %changed_p.0, %if.else ], !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.1, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %m.1, metadata !4243, metadata !DIExpression()), !dbg !4251
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !4296
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4251
  br label %for.cond, !dbg !4297, !llvm.loop !4298

for.end:                                          ; preds = %for.cond
  %m.0.lcssa = phi i32 [ %m.0, %for.cond ], !dbg !4262
  %changed_p.0.lcssa = phi i8 [ %changed_p.0, %for.cond ], !dbg !4251
  call void @llvm.dbg.value(metadata i32 %m.0.lcssa, metadata !4243, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %m.0.lcssa, metadata !4243, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %m.0.lcssa, metadata !4243, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.0.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  %cmp34 = icmp eq i32 %m.0.lcssa, 0, !dbg !4300
  br i1 %cmp34, label %cleanup, label %if.end37, !dbg !4302

if.end37:                                         ; preds = %for.end
  %18 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4303
  %cmp38 = icmp sgt i32 %18, 3, !dbg !4305
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4306
  %cmp41 = icmp ne %struct._IO_FILE* %19, null, !dbg !4307
  %or.cond1 = and i1 %cmp38, %cmp41, !dbg !4308
  br i1 %or.cond1, label %if.then43, label %if.end56, !dbg !4308

if.then43:                                        ; preds = %if.end37
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !4309
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4251
  %20 = sext i32 %m.0.lcssa to i64, !dbg !4311
  br label %for.cond45, !dbg !4311

for.cond45:                                       ; preds = %for.body48, %if.then43
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body48 ], [ 0, %if.then43 ], !dbg !4313
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !4242, metadata !DIExpression()), !dbg !4251
  %cmp46 = icmp slt i64 %indvars.iv5, %20, !dbg !4314
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4316
  br i1 %cmp46, label %for.body48, label %for.end54, !dbg !4317

for.body48:                                       ; preds = %for.cond45
  %arrayidx50 = getelementptr inbounds i32, i32* %spilled_pseudo_regs, i64 %indvars.iv5, !dbg !4318
  %22 = load i32, i32* %arrayidx50, align 4, !dbg !4318
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %22) #6, !dbg !4319
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !4320
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4251
  br label %for.cond45, !dbg !4321, !llvm.loop !4322

for.end54:                                        ; preds = %for.cond45
  %.lcssa = phi %struct._IO_FILE* [ %21, %for.cond45 ], !dbg !4316
  %call55 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4324
  br label %if.end56, !dbg !4325

if.end56:                                         ; preds = %for.end54, %if.end37
  call void @llvm.dbg.value(metadata i32 0, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4251
  %23 = bitcast %struct.ira_allocno** %conflict_a to i64*, !dbg !4326
  %24 = sext i32 %m.0.lcssa to i64, !dbg !4334
  br label %for.cond57, !dbg !4334

for.cond57:                                       ; preds = %for.inc85, %if.end56
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc85 ], [ 0, %if.end56 ], !dbg !4335
  %n.0 = phi i32 [ %n.1.lcssa, %for.inc85 ], [ 0, %if.end56 ], !dbg !4336
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !4242, metadata !DIExpression()), !dbg !4251
  %cmp58 = icmp slt i64 %indvars.iv3, %24, !dbg !4337
  br i1 %cmp58, label %for.body60, label %for.end87, !dbg !4338

for.body60:                                       ; preds = %for.cond57
  %arrayidx62 = getelementptr inbounds i32, i32* %spilled_pseudo_regs, i64 %indvars.iv3, !dbg !4339
  %25 = load i32, i32* %arrayidx62, align 4, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %25, metadata !4245, metadata !DIExpression()), !dbg !4251
  %26 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4340
  %idxprom63 = sext i32 %25 to i64, !dbg !4340
  %arrayidx64 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %26, i64 %idxprom63, !dbg !4340
  %27 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx64, align 8, !dbg !4340
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %27, metadata !4247, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !4250, metadata !DIExpression(DW_OP_deref)), !dbg !4251
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %27) #8, !dbg !4341
  br label %for.cond65, !dbg !4341

for.cond65:                                       ; preds = %for.inc83, %for.body60
  %n.1 = phi i32 [ %n.0, %for.body60 ], [ %n.2, %for.inc83 ], !dbg !4336
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_a, metadata !4248, metadata !DIExpression(DW_OP_deref)), !dbg !4251
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !4250, metadata !DIExpression(DW_OP_deref)), !dbg !4251
  %call66 = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_a) #8, !dbg !4342
  %tobool = icmp eq i8 %call66, 0, !dbg !4341
  br i1 %tobool, label %for.inc85, label %for.body67, !dbg !4341

for.body67:                                       ; preds = %for.cond65
  %28 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_a, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %28, metadata !4248, metadata !DIExpression()), !dbg !4251
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 3, !dbg !4343
  %29 = load i32, i32* %hard_regno, align 4, !dbg !4343
  %cmp68 = icmp slt i32 %29, 0, !dbg !4344
  br i1 %cmp68, label %land.lhs.true70, label %for.inc83, !dbg !4345

land.lhs.true70:                                  ; preds = %for.body67
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %28, metadata !4248, metadata !DIExpression()), !dbg !4251
  %dont_reassign_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 31, !dbg !4346
  %bf.load = load i16, i16* %dont_reassign_p, align 4, !dbg !4346
  %bf.clear = and i16 %bf.load, 8, !dbg !4346
  %tobool71 = icmp eq i16 %bf.clear, 0, !dbg !4346
  br i1 %tobool71, label %land.lhs.true72, label %for.inc83, !dbg !4347

land.lhs.true72:                                  ; preds = %land.lhs.true70
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !4348
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %28, metadata !4248, metadata !DIExpression()), !dbg !4251
  %num73 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 0, !dbg !4349
  %31 = load i32, i32* %num73, align 8, !dbg !4349
  %call74 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %30, i32 %31) #6, !dbg !4350
  %tobool75 = icmp eq i32 %call74, 0, !dbg !4350
  br i1 %tobool75, label %if.then76, label %for.inc83, !dbg !4351

if.then76:                                        ; preds = %land.lhs.true72
  %32 = load i64, i64* %23, align 8, !dbg !4352
  %33 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !4353
  %inc77 = add nsw i32 %n.1, 1, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %inc77, metadata !4244, metadata !DIExpression()), !dbg !4251
  %idxprom78 = sext i32 %n.1 to i64, !dbg !4353
  %arrayidx79 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %33, i64 %idxprom78, !dbg !4353
  %34 = bitcast %struct.ira_allocno** %arrayidx79 to i64*, !dbg !4355
  store i64 %32, i64* %34, align 8, !dbg !4355
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !4356
  %36 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_a, align 8, !dbg !4357
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %36, metadata !4248, metadata !DIExpression()), !dbg !4251
  %num80 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %36, i64 0, i32 0, !dbg !4357
  %37 = load i32, i32* %num80, align 8, !dbg !4357
  %call81 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %35, i32 %37) #6, !dbg !4358
  br label %for.inc83, !dbg !4359

for.inc83:                                        ; preds = %land.lhs.true72, %land.lhs.true70, %for.body67, %if.then76
  %n.2 = phi i32 [ %n.1, %land.lhs.true70 ], [ %n.1, %land.lhs.true72 ], [ %inc77, %if.then76 ], [ %n.1, %for.body67 ], !dbg !4335
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !4250, metadata !DIExpression(DW_OP_deref)), !dbg !4251
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !4342
  br label %for.cond65, !dbg !4342, !llvm.loop !4360

for.inc85:                                        ; preds = %for.cond65
  %n.1.lcssa = phi i32 [ %n.1, %for.cond65 ], !dbg !4336
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4251
  br label %for.cond57, !dbg !4363, !llvm.loop !4364

for.end87:                                        ; preds = %for.cond57
  %n.0.lcssa = phi i32 [ %n.0, %for.cond57 ], !dbg !4336
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !4244, metadata !DIExpression()), !dbg !4251
  %cmp88 = icmp eq i32 %n.0.lcssa, 0, !dbg !4366
  br i1 %cmp88, label %cleanup, label %if.then90, !dbg !4368

if.then90:                                        ; preds = %for.end87
  %38 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !4369
  call fastcc void @setup_allocno_priorities(%struct.ira_allocno** %38, i32 %n.0.lcssa) #8, !dbg !4371
  %39 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !4372
  %conv91 = sext i32 %n.0.lcssa to i64, !dbg !4373
  call void @spec_qsort(i8* %39, i64 %conv91, i64 8, i32 (i8*, i8*)* nonnull @allocno_priority_compare_func) #6, !dbg !4374
  call void @llvm.dbg.value(metadata i32 0, metadata !4242, metadata !DIExpression()), !dbg !4251
  %40 = sext i32 %n.0.lcssa to i64, !dbg !4375
  br label %for.cond92, !dbg !4375

for.cond92:                                       ; preds = %for.inc122, %if.then90
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc122 ], [ 0, %if.then90 ], !dbg !4377
  %changed_p.2 = phi i8 [ %changed_p.3, %for.inc122 ], [ %changed_p.0.lcssa, %if.then90 ], !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.2, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4242, metadata !DIExpression()), !dbg !4251
  %cmp93 = icmp slt i64 %indvars.iv, %40, !dbg !4378
  br i1 %cmp93, label %for.body95, label %cleanup.loopexit, !dbg !4380

for.body95:                                       ; preds = %for.cond92
  %41 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !4381
  %arrayidx97 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %41, i64 %indvars.iv, !dbg !4381
  %42 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx97, align 8, !dbg !4381
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %42, metadata !4247, metadata !DIExpression()), !dbg !4251
  %regno98 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %42, i64 0, i32 1, !dbg !4383
  %43 = load i32, i32* %regno98, align 4, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %43, metadata !4245, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i64 %bad_spill_regs, metadata !4249, metadata !DIExpression()), !dbg !4251
  %idxprom99 = sext i32 %43 to i64, !dbg !4384
  %arrayidx100 = getelementptr inbounds i64, i64* %pseudo_forbidden_regs, i64 %idxprom99, !dbg !4384
  %44 = load i64, i64* %arrayidx100, align 8, !dbg !4384
  %or101 = or i64 %44, %bad_spill_regs, !dbg !4384
  call void @llvm.dbg.value(metadata i64 %or101, metadata !4249, metadata !DIExpression()), !dbg !4251
  %arrayidx103 = getelementptr inbounds i64, i64* %pseudo_previous_regs, i64 %idxprom99, !dbg !4385
  %45 = load i64, i64* %arrayidx103, align 8, !dbg !4385
  %or104 = or i64 %or101, %45, !dbg !4385
  call void @llvm.dbg.value(metadata i64 %or104, metadata !4249, metadata !DIExpression()), !dbg !4251
  %46 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4386
  %cmp105 = icmp sgt i32 %46, 3, !dbg !4388
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4389
  %cmp108 = icmp ne %struct._IO_FILE* %47, null, !dbg !4390
  %or.cond2 = and i1 %cmp105, %cmp108, !dbg !4391
  br i1 %or.cond2, label %if.then110, label %if.end116, !dbg !4391

if.then110:                                       ; preds = %for.body95
  %num111 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %42, i64 0, i32 0, !dbg !4392
  %48 = load i32, i32* %num111, align 8, !dbg !4392
  %memory_cost112 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %42, i64 0, i32 12, !dbg !4393
  %49 = load i32, i32* %memory_cost112, align 4, !dbg !4393
  %cover_class_cost113 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %42, i64 0, i32 10, !dbg !4394
  %50 = load i32, i32* %cover_class_cost113, align 4, !dbg !4394
  %sub114 = sub nsw i32 %49, %50, !dbg !4395
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %47, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i32 %43, i32 %48, i32 %sub114) #6, !dbg !4396
  br label %if.end116, !dbg !4396

if.end116:                                        ; preds = %if.then110, %for.body95
  %call117 = call fastcc zeroext i8 @allocno_reload_assign(%struct.ira_allocno* %42, i64 %or104) #8, !dbg !4397
  %tobool118 = icmp eq i8 %call117, 0, !dbg !4397
  br i1 %tobool118, label %for.inc122, label %if.then119, !dbg !4399

if.then119:                                       ; preds = %if.end116
  call void @llvm.dbg.value(metadata i8 1, metadata !4246, metadata !DIExpression()), !dbg !4251
  %call120 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %spilled, i32 %43) #6, !dbg !4400
  br label %for.inc122, !dbg !4402

for.inc122:                                       ; preds = %if.end116, %if.then119
  %changed_p.3 = phi i8 [ 1, %if.then119 ], [ %changed_p.2, %if.end116 ], !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.3, metadata !4246, metadata !DIExpression()), !dbg !4251
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4403
  call void @llvm.dbg.value(metadata i32 undef, metadata !4242, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4251
  br label %for.cond92, !dbg !4404, !llvm.loop !4405

cleanup.loopexit:                                 ; preds = %for.cond92
  %changed_p.2.lcssa = phi i8 [ %changed_p.2, %for.cond92 ], !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.2.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.2.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8 %changed_p.2.lcssa, metadata !4246, metadata !DIExpression()), !dbg !4251
  br label %cleanup, !dbg !4407

cleanup:                                          ; preds = %cleanup.loopexit, %for.end87, %for.end
  %retval.0 = phi i8 [ %changed_p.0.lcssa, %for.end ], [ %changed_p.0.lcssa, %for.end87 ], [ %changed_p.2.lcssa, %cleanup.loopexit ], !dbg !4251
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !4407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4407
  ret i8 %retval.0, !dbg !4407
}

; Function Attrs: nounwind uwtable
define internal i32 @pseudo_reg_compare(i8* %v1p, i8* %v2p) #5 !dbg !4408 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !4410, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !4411, metadata !DIExpression()), !dbg !4415
  %0 = bitcast i8* %v1p to i32*, !dbg !4416
  %1 = load i32, i32* %0, align 4, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %1, metadata !4412, metadata !DIExpression()), !dbg !4415
  %2 = bitcast i8* %v2p to i32*, !dbg !4418
  %3 = load i32, i32* %2, align 4, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %3, metadata !4413, metadata !DIExpression()), !dbg !4415
  %4 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !4420
  %idxprom = sext i32 %3 to i64, !dbg !4420
  %freq = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %4, i64 %idxprom, i32 0, !dbg !4420
  %5 = load i32, i32* %freq, align 4, !dbg !4420
  %idxprom1 = sext i32 %1 to i64, !dbg !4422
  %freq3 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %4, i64 %idxprom1, i32 0, !dbg !4422
  %6 = load i32, i32* %freq3, align 4, !dbg !4422
  %sub = sub nsw i32 %5, %6, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4414, metadata !DIExpression()), !dbg !4415
  %cmp = icmp eq i32 %sub, 0, !dbg !4424
  %sub4 = sub nsw i32 %1, %3, !dbg !4425
  %retval.0 = select i1 %cmp, i32 %sub4, i32 %sub, !dbg !4425
  ret i32 %retval.0, !dbg !4426
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @allocno_reload_assign(%struct.ira_allocno* %a, i64 %forbidden_regs) unnamed_addr #5 !dbg !4427 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !4431, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i64 %forbidden_regs, metadata !4432, metadata !DIExpression()), !dbg !4436
  %regno1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 1, !dbg !4437
  %0 = load i32, i32* %regno1, align 4, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %0, metadata !4435, metadata !DIExpression()), !dbg !4436
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 27, !dbg !4438
  %1 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !4438
  %or = or i64 %1, %forbidden_regs, !dbg !4438
  store i64 %or, i64* %total_conflict_hard_regs, align 8, !dbg !4438
  %2 = load i32, i32* @flag_caller_saves, align 4, !dbg !4439
  %tobool = icmp eq i32 %2, 0, !dbg !4439
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4441

land.lhs.true:                                    ; preds = %entry
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 30, !dbg !4442
  %3 = load i32, i32* %calls_crossed_num, align 8, !dbg !4442
  %cmp = icmp eq i32 %3, 0, !dbg !4443
  br i1 %cmp, label %if.end, label %if.then, !dbg !4444

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, i64* @call_used_reg_set, align 8, !dbg !4445
  %or3 = or i64 %or, %4, !dbg !4445
  store i64 %or3, i64* %total_conflict_hard_regs, align 8, !dbg !4445
  br label %if.end, !dbg !4445

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 31, !dbg !4446
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !4447
  %bf.clear = and i16 %bf.load, -257, !dbg !4447
  store i16 %bf.clear, i16* %assigned_p, align 4, !dbg !4447
  %cover_class4 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !4448
  %5 = load i32, i32* %cover_class4, align 8, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %5, metadata !4434, metadata !DIExpression()), !dbg !4436
  tail call fastcc void @update_curr_costs(%struct.ira_allocno* %a) #8, !dbg !4449
  %call = tail call fastcc zeroext i8 @assign_hard_reg(%struct.ira_allocno* %a, i8 zeroext 1) #8, !dbg !4450
  %hard_regno5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 3, !dbg !4451
  %6 = load i32, i32* %hard_regno5, align 4, !dbg !4451
  call void @llvm.dbg.value(metadata i32 %6, metadata !4433, metadata !DIExpression()), !dbg !4436
  %conv = trunc i32 %6 to i16, !dbg !4452
  %7 = load i16*, i16** @reg_renumber, align 8, !dbg !4453
  %idxprom = sext i32 %0 to i64, !dbg !4453
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !4453
  store i16 %conv, i16* %arrayidx, align 2, !dbg !4454
  %cmp6 = icmp slt i32 %6, 0, !dbg !4455
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !4457

if.then8:                                         ; preds = %if.end
  store i32 -1, i32* %hard_regno5, align 4, !dbg !4458
  br label %if.end28, !dbg !4459

if.else:                                          ; preds = %if.end
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 12, !dbg !4460
  %8 = load i32, i32* %memory_cost, align 4, !dbg !4460
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 33, !dbg !4462
  %9 = load i32*, i32** %hard_reg_costs, align 8, !dbg !4462
  %cmp10 = icmp eq i32* %9, null, !dbg !4463
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4462

cond.true:                                        ; preds = %if.else
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 10, !dbg !4464
  br label %cond.end, !dbg !4462

cond.false:                                       ; preds = %if.else
  %idxprom13 = zext i32 %5 to i64, !dbg !4465
  %idxprom15 = sext i32 %6 to i64, !dbg !4465
  %arrayidx16 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom13, i64 %idxprom15, !dbg !4465
  %10 = load i16, i16* %arrayidx16, align 2, !dbg !4465
  %idxprom17 = sext i16 %10 to i64, !dbg !4466
  %arrayidx18 = getelementptr inbounds i32, i32* %9, i64 %idxprom17, !dbg !4466
  br label %cond.end, !dbg !4462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32* [ %cover_class_cost, %cond.true ], [ %arrayidx18, %cond.false ]
  %cond = load i32, i32* %cond.in, align 4, !dbg !4462
  %11 = load i32, i32* @ira_overall_cost, align 4, !dbg !4467
  %sub2 = sub i32 %cond, %8, !dbg !4467
  %sub19 = add i32 %11, %sub2, !dbg !4467
  store i32 %sub19, i32* @ira_overall_cost, align 4, !dbg !4467
  %calls_crossed_num20 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 30, !dbg !4468
  %12 = load i32, i32* %calls_crossed_num20, align 8, !dbg !4468
  %cmp21 = icmp eq i32 %12, 0, !dbg !4470
  br i1 %cmp21, label %if.end28, label %land.lhs.true23, !dbg !4471

land.lhs.true23:                                  ; preds = %cond.end
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 2, !dbg !4472
  %13 = load i32, i32* %mode, align 8, !dbg !4472
  %14 = load i64, i64* @call_used_reg_set, align 8, !dbg !4473
  %call24 = tail call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %6, i32 %13, i64 %14) #8, !dbg !4474
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4474
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4475

if.then26:                                        ; preds = %land.lhs.true23
  store i32 1, i32* @caller_save_needed, align 4, !dbg !4476
  br label %if.end28, !dbg !4478

if.end28:                                         ; preds = %land.lhs.true23, %cond.end, %if.then26, %if.then8
  %15 = load i16*, i16** @reg_renumber, align 8, !dbg !4479
  %arrayidx30 = getelementptr inbounds i16, i16* %15, i64 %idxprom, !dbg !4479
  %16 = load i16, i16* %arrayidx30, align 2, !dbg !4479
  %cmp32 = icmp sgt i16 %16, -1, !dbg !4481
  %17 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4482
  %cmp35 = icmp sgt i32 %17, 3, !dbg !4482
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4482
  %cmp38 = icmp ne %struct._IO_FILE* %18, null, !dbg !4482
  %or.cond = and i1 %cmp35, %cmp38, !dbg !4482
  br i1 %cmp32, label %if.then34, label %if.else60, !dbg !4483

if.then34:                                        ; preds = %if.end28
  br i1 %or.cond, label %if.then40, label %if.end45, !dbg !4484

if.then40:                                        ; preds = %if.then34
  %conv43 = sext i16 %16 to i32, !dbg !4487
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %conv43) #6, !dbg !4488
  br label %if.end45, !dbg !4488

if.end45:                                         ; preds = %if.then40, %if.then34
  %19 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4489
  %arrayidx47 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %idxprom, !dbg !4489
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8, !dbg !4489
  %call48 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %20) #8, !dbg !4489
  %21 = load i16*, i16** @reg_renumber, align 8, !dbg !4489
  %arrayidx50 = getelementptr inbounds i16, i16* %21, i64 %idxprom, !dbg !4489
  %22 = load i16, i16* %arrayidx50, align 2, !dbg !4489
  %conv51 = sext i16 %22 to i32, !dbg !4489
  %23 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4489
  %arrayidx53 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom, !dbg !4489
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx53, align 8, !dbg !4489
  tail call void @df_ref_change_reg_with_loc(i32 %call48, i32 %conv51, %struct.rtx_def* %24) #6, !dbg !4489
  %25 = load i16*, i16** @reg_renumber, align 8, !dbg !4489
  %arrayidx55 = getelementptr inbounds i16, i16* %25, i64 %idxprom, !dbg !4489
  %26 = load i16, i16* %arrayidx55, align 2, !dbg !4489
  %conv56 = sext i16 %26 to i32, !dbg !4489
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4489
  %arrayidx58 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom, !dbg !4489
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx58, align 8, !dbg !4489
  %arrayidx59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4489
  %rt_uint = bitcast %union.rtunion_def* %arrayidx59 to i32*, !dbg !4489
  store i32 %conv56, i32* %rt_uint, align 8, !dbg !4489
  tail call void @mark_home_live(i32 %0) #6, !dbg !4490
  br label %if.end69, !dbg !4491

if.else60:                                        ; preds = %if.end28
  br i1 %or.cond, label %if.then66, label %if.end69, !dbg !4492

if.then66:                                        ; preds = %if.else60
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4494
  br label %if.end69, !dbg !4494

if.end69:                                         ; preds = %if.else60, %if.then66, %if.end45
  %29 = load i16*, i16** @reg_renumber, align 8, !dbg !4495
  %arrayidx71 = getelementptr inbounds i16, i16* %29, i64 %idxprom, !dbg !4495
  %30 = load i16, i16* %arrayidx71, align 2, !dbg !4495
  %.lobit = lshr i16 %30, 15, !dbg !4495
  %31 = trunc i16 %.lobit to i8, !dbg !4495
  %.not = xor i8 %31, 1, !dbg !4495
  ret i8 %.not, !dbg !4496
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @ira_reuse_stack_slot(i32 %regno, i32 %inherent_size, i32 %total_size) local_unnamed_addr #5 !dbg !4497 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4501, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %inherent_size, metadata !4502, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %total_size, metadata !4503, metadata !DIExpression()), !dbg !4530
  %0 = bitcast i32* %i to i8*, !dbg !4531
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4531
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4532
  %idxprom = sext i32 %regno to i64, !dbg !4532
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %idxprom, !dbg !4532
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4532
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !4512, metadata !DIExpression()), !dbg !4530
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4533
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #7, !dbg !4533
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* null, metadata !4515, metadata !DIExpression()), !dbg !4530
  %4 = load i32, i32* @flag_ira_share_spill_slots, align 4, !dbg !4534
  %tobool = icmp eq i32 %4, 0, !dbg !4534
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4536

if.end:                                           ; preds = %entry
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 3, !dbg !4537
  %5 = load i32, i32* %hard_regno, align 4, !dbg !4537
  %sub1 = sub i32 -2, %5, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %sub1, metadata !4505, metadata !DIExpression()), !dbg !4530
  %cmp = icmp eq i32 %sub1, -1, !dbg !4539
  br i1 %cmp, label %for.cond.preheader, label %if.then2, !dbg !4540

for.cond.preheader:                               ; preds = %if.end
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 15, !dbg !4541
  br label %for.cond, !dbg !4543

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ira_spilled_reg_stack_slot*, %struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots, align 8, !dbg !4544
  %idxprom3 = sext i32 %sub1 to i64, !dbg !4544
  %arrayidx4 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %6, i64 %idxprom3, !dbg !4544
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %arrayidx4, metadata !4515, metadata !DIExpression()), !dbg !4530
  %mem = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %6, i64 %idxprom3, i32 1, !dbg !4546
  %7 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !4546
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !4513, metadata !DIExpression()), !dbg !4530
  br label %if.end76, !dbg !4547

for.cond:                                         ; preds = %for.cond.preheader, %for.inc62
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc62 ]
  %another_allocno.0 = phi %struct.ira_allocno* [ undef, %for.cond.preheader ], [ %another_allocno.6, %for.inc62 ]
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %for.cond.preheader ], [ %next_cp.5, %for.inc62 ]
  %best_cost.0 = phi i32 [ -1, %for.cond.preheader ], [ %best_cost.3, %for.inc62 ], !dbg !4548
  %best_slot_num.0 = phi i32 [ -1, %for.cond.preheader ], [ %best_slot_num.3, %for.inc62 ], !dbg !4549
  %slot.0 = phi %struct.ira_spilled_reg_stack_slot* [ null, %for.cond.preheader ], [ %arrayidx7, %for.inc62 ], !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %slot.0, metadata !4515, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4505, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_slot_num.0, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_cost.0, metadata !4508, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.0, metadata !4511, metadata !DIExpression()), !dbg !4530
  %8 = load i32, i32* @ira_spilled_reg_stack_slots_num, align 4, !dbg !4550
  %9 = sext i32 %8 to i64, !dbg !4551
  %cmp5 = icmp slt i64 %indvars.iv, %9, !dbg !4551
  br i1 %cmp5, label %for.body, label %for.end63, !dbg !4543

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ira_spilled_reg_stack_slot*, %struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots, align 8, !dbg !4552
  %arrayidx7 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %10, i64 %indvars.iv, !dbg !4552
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %arrayidx7, metadata !4515, metadata !DIExpression()), !dbg !4530
  %mem8 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %10, i64 %indvars.iv, i32 1, !dbg !4553
  %11 = load %struct.rtx_def*, %struct.rtx_def** %mem8, align 8, !dbg !4553
  %cmp9 = icmp eq %struct.rtx_def* %11, null, !dbg !4555
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !4556
  br i1 %cmp9, label %for.inc62, label %if.end11, !dbg !4556

if.end11:                                         ; preds = %for.body
  %width = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %10, i64 %indvars.iv, i32 2, !dbg !4557
  %13 = load i32, i32* %width, align 8, !dbg !4557
  %cmp12 = icmp ult i32 %13, %total_size, !dbg !4559
  br i1 %cmp12, label %for.inc62, label %lor.lhs.false, !dbg !4560

lor.lhs.false:                                    ; preds = %if.end11
  %bf.load = load i32, i32* %12, align 8, !dbg !4561
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4561
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4561
  %idxprom14 = zext i32 %bf.clear to i64, !dbg !4561
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom14, !dbg !4561
  %14 = load i8, i8* %arrayidx15, align 1, !dbg !4561
  %conv16 = zext i8 %14 to i32, !dbg !4561
  %cmp17 = icmp ult i32 %conv16, %inherent_size, !dbg !4562
  br i1 %cmp17, label %for.inc62, label %if.end20, !dbg !4563

if.end20:                                         ; preds = %lor.lhs.false
  %spilled_regs = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %arrayidx7, i64 0, i32 0, !dbg !4564
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %spilled_regs, i32 53, i32* nonnull %i) #8, !dbg !4564
  br label %for.cond21, !dbg !4564

for.cond21:                                       ; preds = %for.inc, %if.end20
  %another_allocno.1 = phi %struct.ira_allocno* [ %another_allocno.0, %if.end20 ], [ %17, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !4566
  %tobool22 = icmp eq i8 %call, 0, !dbg !4564
  br i1 %tobool22, label %for.end, label %for.body23, !dbg !4564

for.body23:                                       ; preds = %for.cond21
  %15 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4568
  %16 = load i32, i32* %i, align 4, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %16, metadata !4504, metadata !DIExpression()), !dbg !4530
  %idxprom24 = zext i32 %16 to i64, !dbg !4568
  %arrayidx25 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %15, i64 %idxprom24, !dbg !4568
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx25, align 8, !dbg !4568
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !4511, metadata !DIExpression()), !dbg !4530
  %call26 = call fastcc zeroext i8 @allocnos_have_intersected_live_ranges_p(%struct.ira_allocno* %2, %struct.ira_allocno* %17) #8, !dbg !4571
  %tobool27 = icmp eq i8 %call26, 0, !dbg !4571
  br i1 %tobool27, label %for.inc, label %for.inc62.loopexit, !dbg !4573

for.inc:                                          ; preds = %for.body23
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !4566
  br label %for.cond21, !dbg !4566, !llvm.loop !4574

for.end:                                          ; preds = %for.cond21
  %another_allocno.1.lcssa = phi %struct.ira_allocno* [ %another_allocno.1, %for.cond21 ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 0, metadata !4507, metadata !DIExpression()), !dbg !4530
  %18 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !4576
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %18, metadata !4509, metadata !DIExpression()), !dbg !4530
  br label %for.cond30, !dbg !4577

for.cond30:                                       ; preds = %for.inc56, %for.end
  %another_allocno.2 = phi %struct.ira_allocno* [ %another_allocno.1.lcssa, %for.end ], [ %another_allocno.4, %for.inc56 ]
  %next_cp.1 = phi %struct.ira_allocno_copy* [ %next_cp.0, %for.end ], [ %next_cp.3, %for.inc56 ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %18, %for.end ], [ %next_cp.3, %for.inc56 ], !dbg !4541
  %cost.0 = phi i32 [ 0, %for.end ], [ %cost.2, %for.inc56 ], !dbg !4578
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !4507, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !4509, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.2, metadata !4511, metadata !DIExpression()), !dbg !4530
  %cmp31 = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !4579
  br i1 %cmp31, label %for.end57, label %for.body33, !dbg !4581

for.body33:                                       ; preds = %for.cond30
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !4582
  %19 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !4582
  %cmp34 = icmp eq %struct.ira_allocno* %19, %2, !dbg !4585
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !4586

if.then36:                                        ; preds = %for.body33
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !4587
  %20 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !4587
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %20, metadata !4510, metadata !DIExpression()), !dbg !4530
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !4589
  %21 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !4589
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %21, metadata !4511, metadata !DIExpression()), !dbg !4530
  br label %if.end45, !dbg !4590

if.else37:                                        ; preds = %for.body33
  %second38 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !4591
  %22 = load %struct.ira_allocno*, %struct.ira_allocno** %second38, align 8, !dbg !4591
  %cmp39 = icmp eq %struct.ira_allocno* %22, %2, !dbg !4593
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !4594

if.then41:                                        ; preds = %if.else37
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !4595
  %23 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !4595
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %23, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !4511, metadata !DIExpression()), !dbg !4530
  br label %if.end45, !dbg !4597

if.else43:                                        ; preds = %if.else37
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 3074, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4598
  br label %if.end45

if.end45:                                         ; preds = %if.then41, %if.else43, %if.then36
  %another_allocno.4 = phi %struct.ira_allocno* [ %21, %if.then36 ], [ %19, %if.then41 ], [ %another_allocno.2, %if.else43 ], !dbg !4599
  %next_cp.3 = phi %struct.ira_allocno_copy* [ %20, %if.then36 ], [ %23, %if.then41 ], [ %next_cp.1, %if.else43 ], !dbg !4599
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.4, metadata !4511, metadata !DIExpression()), !dbg !4530
  %insn = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 5, !dbg !4600
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4600
  %cmp46 = icmp eq %struct.rtx_def* %24, null, !dbg !4602
  br i1 %cmp46, label %for.inc56, label %if.end49, !dbg !4603

if.end49:                                         ; preds = %if.end45
  %regno51 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.4, i64 0, i32 1, !dbg !4604
  %25 = load i32, i32* %regno51, align 4, !dbg !4604
  %call52 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %spilled_regs, i32 %25) #6, !dbg !4606
  %tobool53 = icmp eq i32 %call52, 0, !dbg !4606
  br i1 %tobool53, label %for.inc56, label %if.then54, !dbg !4607

if.then54:                                        ; preds = %if.end49
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 3, !dbg !4608
  %26 = load i32, i32* %freq, align 8, !dbg !4608
  %add = add nsw i32 %cost.0, %26, !dbg !4609
  call void @llvm.dbg.value(metadata i32 %add, metadata !4507, metadata !DIExpression()), !dbg !4530
  br label %for.inc56, !dbg !4610

for.inc56:                                        ; preds = %if.end49, %if.then54, %if.end45
  %cost.2 = phi i32 [ %cost.0, %if.end45 ], [ %add, %if.then54 ], [ %cost.0, %if.end49 ], !dbg !4541
  call void @llvm.dbg.value(metadata i32 %cost.2, metadata !4507, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !4509, metadata !DIExpression()), !dbg !4530
  br label %for.cond30, !dbg !4611, !llvm.loop !4612

for.end57:                                        ; preds = %for.cond30
  %another_allocno.2.lcssa = phi %struct.ira_allocno* [ %another_allocno.2, %for.cond30 ]
  %next_cp.1.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1, %for.cond30 ]
  %cost.0.lcssa = phi i32 [ %cost.0, %for.cond30 ], !dbg !4578
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.2.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4507, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.2.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4507, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.2.lcssa, metadata !4511, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4507, metadata !DIExpression()), !dbg !4530
  %cmp58 = icmp sgt i32 %cost.0.lcssa, %best_cost.0, !dbg !4614
  %spec.select = select i1 %cmp58, i32 %cost.0.lcssa, i32 %best_cost.0, !dbg !4616
  %27 = trunc i64 %indvars.iv to i32, !dbg !4616
  %spec.select1 = select i1 %cmp58, i32 %27, i32 %best_slot_num.0, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4508, metadata !DIExpression()), !dbg !4530
  br label %for.inc62, !dbg !4617

for.inc62.loopexit:                               ; preds = %for.body23
  %.lcssa = phi %struct.ira_allocno* [ %17, %for.body23 ], !dbg !4568
  br label %for.inc62, !dbg !4618

for.inc62:                                        ; preds = %for.inc62.loopexit, %for.end57, %if.end11, %lor.lhs.false, %for.body
  %another_allocno.6 = phi %struct.ira_allocno* [ %another_allocno.0, %for.body ], [ %another_allocno.0, %lor.lhs.false ], [ %another_allocno.0, %if.end11 ], [ %another_allocno.2.lcssa, %for.end57 ], [ %.lcssa, %for.inc62.loopexit ]
  %next_cp.5 = phi %struct.ira_allocno_copy* [ %next_cp.0, %for.body ], [ %next_cp.0, %lor.lhs.false ], [ %next_cp.0, %if.end11 ], [ %next_cp.1.lcssa, %for.end57 ], [ %next_cp.0, %for.inc62.loopexit ]
  %best_cost.3 = phi i32 [ %best_cost.0, %for.body ], [ %best_cost.0, %lor.lhs.false ], [ %best_cost.0, %if.end11 ], [ %spec.select, %for.end57 ], [ %best_cost.0, %for.inc62.loopexit ], !dbg !4548
  %best_slot_num.3 = phi i32 [ %best_slot_num.0, %for.body ], [ %best_slot_num.0, %lor.lhs.false ], [ %best_slot_num.0, %if.end11 ], [ %spec.select1, %for.end57 ], [ %best_slot_num.0, %for.inc62.loopexit ], !dbg !4549
  call void @llvm.dbg.value(metadata i32 %best_slot_num.3, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_cost.3, metadata !4508, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.5, metadata !4510, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.6, metadata !4511, metadata !DIExpression()), !dbg !4530
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4618
  call void @llvm.dbg.value(metadata i32 undef, metadata !4505, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4530
  br label %for.cond, !dbg !4619, !llvm.loop !4620

for.end63:                                        ; preds = %for.cond
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %for.cond ]
  %best_cost.0.lcssa = phi i32 [ %best_cost.0, %for.cond ], !dbg !4548
  %best_slot_num.0.lcssa = phi i32 [ %best_slot_num.0, %for.cond ], !dbg !4549
  %slot.0.lcssa = phi %struct.ira_spilled_reg_stack_slot* [ %slot.0, %for.cond ], !dbg !4530
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa, metadata !4505, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_cost.0.lcssa, metadata !4508, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_slot_num.0.lcssa, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %slot.0.lcssa, metadata !4515, metadata !DIExpression()), !dbg !4530
  %28 = trunc i64 %indvars.iv.lcssa to i32, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_cost.0.lcssa, metadata !4508, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_slot_num.0.lcssa, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %28, metadata !4505, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %slot.0.lcssa, metadata !4515, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_cost.0.lcssa, metadata !4508, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %best_slot_num.0.lcssa, metadata !4506, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %28, metadata !4505, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %slot.0.lcssa, metadata !4515, metadata !DIExpression()), !dbg !4530
  %cmp64 = icmp sgt i32 %best_cost.0.lcssa, -1, !dbg !4622
  br i1 %cmp64, label %if.then66, label %if.end76, !dbg !4624

if.then66:                                        ; preds = %for.end63
  call void @llvm.dbg.value(metadata i32 %best_slot_num.0.lcssa, metadata !4505, metadata !DIExpression()), !dbg !4530
  %29 = load %struct.ira_spilled_reg_stack_slot*, %struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots, align 8, !dbg !4625
  %idxprom67 = sext i32 %best_slot_num.0.lcssa to i64, !dbg !4625
  %arrayidx68 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %29, i64 %idxprom67, !dbg !4625
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %arrayidx68, metadata !4515, metadata !DIExpression()), !dbg !4530
  %spilled_regs69 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %arrayidx68, i64 0, i32 0, !dbg !4627
  %call70 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %spilled_regs69, i32 %regno) #6, !dbg !4627
  %mem71 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %29, i64 %idxprom67, i32 1, !dbg !4628
  %30 = load %struct.rtx_def*, %struct.rtx_def** %mem71, align 8, !dbg !4628
  call void @llvm.dbg.value(metadata %struct.rtx_def* %30, metadata !4513, metadata !DIExpression()), !dbg !4530
  %sub73 = sub i32 -2, %best_slot_num.0.lcssa, !dbg !4629
  store i32 %sub73, i32* %hard_regno, align 4, !dbg !4630
  br label %if.end76, !dbg !4631

if.end76:                                         ; preds = %for.end63, %if.then66, %if.then2
  %slot_num.2 = phi i32 [ %sub1, %if.then2 ], [ %best_slot_num.0.lcssa, %if.then66 ], [ %28, %for.end63 ], !dbg !4530
  %x.1 = phi %struct.rtx_def* [ %7, %if.then2 ], [ %30, %if.then66 ], [ null, %for.end63 ], !dbg !4632
  %slot.2 = phi %struct.ira_spilled_reg_stack_slot* [ %arrayidx4, %if.then2 ], [ %arrayidx68, %if.then66 ], [ %slot.0.lcssa, %for.end63 ], !dbg !4632
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* %slot.2, metadata !4515, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.1, metadata !4513, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %slot_num.2, metadata !4505, metadata !DIExpression()), !dbg !4530
  %cmp77 = icmp eq %struct.rtx_def* %x.1, null, !dbg !4633
  br i1 %cmp77, label %cleanup, label %if.then79, !dbg !4635

if.then79:                                        ; preds = %if.end76
  %spilled_regs80 = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %slot.2, i64 0, i32 0, !dbg !4636
  %call81 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %spilled_regs80, i32 %regno) #6, !dbg !4636
  %31 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4638
  %cmp82 = icmp sgt i32 %31, 3, !dbg !4640
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4641
  %tobool84 = icmp ne %struct._IO_FILE* %32, null, !dbg !4641
  %or.cond = and i1 %cmp82, %tobool84, !dbg !4642
  br i1 %or.cond, label %if.then85, label %cleanup, !dbg !4642

if.then85:                                        ; preds = %if.then79
  %33 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !4643
  %freq88 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %33, i64 %idxprom, i32 0, !dbg !4643
  %34 = load i32, i32* %freq88, align 4, !dbg !4643
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i32 %regno, i32 %34, i32 %slot_num.2) #6, !dbg !4645
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %spilled_regs80, i32 53, i32* nonnull %i) #8, !dbg !4646
  br label %for.cond91, !dbg !4646

for.cond91:                                       ; preds = %for.inc100, %if.then85
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  %call92 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !4648
  %tobool93 = icmp eq i8 %call92, 0, !dbg !4646
  br i1 %tobool93, label %for.end101, label %for.body94, !dbg !4646

for.body94:                                       ; preds = %for.cond91
  %35 = load i32, i32* %i, align 4, !dbg !4650
  call void @llvm.dbg.value(metadata i32 %35, metadata !4504, metadata !DIExpression()), !dbg !4530
  %cmp95 = icmp eq i32 %35, %regno, !dbg !4653
  br i1 %cmp95, label %for.inc100, label %if.then97, !dbg !4654

if.then97:                                        ; preds = %for.body94
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %35, metadata !4504, metadata !DIExpression()), !dbg !4530
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %35) #6, !dbg !4656
  br label %for.inc100, !dbg !4656

for.inc100:                                       ; preds = %for.body94, %if.then97
  call void @llvm.dbg.value(metadata i32* %i, metadata !4504, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4514, metadata !DIExpression(DW_OP_deref)), !dbg !4530
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !4648
  br label %for.cond91, !dbg !4648, !llvm.loop !4657

for.end101:                                       ; preds = %for.cond91
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4659
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4660
  br label %cleanup, !dbg !4661

cleanup:                                          ; preds = %if.end76, %entry, %for.end101, %if.then79
  %retval.0 = phi %struct.rtx_def* [ null, %entry ], [ %x.1, %if.then79 ], [ %x.1, %for.end101 ], [ null, %if.end76 ], !dbg !4530
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #7, !dbg !4662
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4662
  ret %struct.rtx_def* %retval.0, !dbg !4662
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4663 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4671, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4672, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %start_bit, metadata !4673, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4674, metadata !DIExpression()), !dbg !4675
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4676
  %1 = load i64, i64* %0, align 8, !dbg !4676
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4677
  store i64 %1, i64* %2, align 8, !dbg !4677
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4678
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4679
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4680
  %div = lshr i32 %start_bit, 7, !dbg !4683
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4685
  br label %while.body, !dbg !4685

while.body:                                       ; preds = %entry, %if.end5
  %4 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %5 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %6 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %.in = phi i64 [ %1, %entry ], [ %11, %if.end5 ]
  %7 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %8 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ], !dbg !4686
  %9 = inttoptr i64 %.in to i64*, !dbg !4685
  %tobool = icmp eq %struct.bitmap_element_def* %8, null, !dbg !4687
  br i1 %tobool, label %if.then, label %if.end, !dbg !4688

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4689
  br label %while.end, !dbg !4691

if.end:                                           ; preds = %while.body
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %7, i64 0, i32 2, !dbg !4692
  %10 = load i32, i32* %indx, align 8, !dbg !4692
  %cmp = icmp ult i32 %10, %div, !dbg !4693
  br i1 %cmp, label %if.end5, label %while.end.loopexit, !dbg !4694

if.end5:                                          ; preds = %if.end
  %11 = load i64, i64* %9, align 8, !dbg !4695
  store i64 %11, i64* %2, align 8, !dbg !4696
  %12 = inttoptr i64 %11 to %struct.bitmap_element_def*, !dbg !4685
  br label %while.body, !dbg !4685, !llvm.loop !4697

while.end.loopexit:                               ; preds = %if.end
  %.lcssa11 = phi %struct.bitmap_element_def* [ %4, %if.end ]
  %.lcssa9 = phi %struct.bitmap_element_def* [ %5, %if.end ]
  %.lcssa7 = phi %struct.bitmap_element_def* [ %6, %if.end ]
  br label %while.end, !dbg !4699

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %13 = phi %struct.bitmap_element_def* [ %.lcssa11, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %14 = phi %struct.bitmap_element_def* [ %.lcssa9, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %15 = phi %struct.bitmap_element_def* [ %.lcssa7, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4699
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4701
  %16 = load i32, i32* %indx9, align 8, !dbg !4701
  %cmp11 = icmp eq i32 %16, %div, !dbg !4702
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4703

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %14, i64 0, i32 2, !dbg !4704
  %17 = load i32, i32* %indx14, align 8, !dbg !4704
  %mul = shl i32 %17, 7, !dbg !4705
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4673, metadata !DIExpression()), !dbg !4675
  br label %if.end15, !dbg !4706

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ %start_bit, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4673, metadata !DIExpression()), !dbg !4675
  %div16 = lshr i32 %start_bit.addr.0, 6, !dbg !4707
  %rem = and i32 %div16, 1, !dbg !4708
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4709
  store i32 %rem, i32* %word_no, align 8, !dbg !4710
  %idxprom = zext i32 %rem to i64, !dbg !4711
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %13, i64 0, i32 3, i64 %idxprom, !dbg !4711
  %18 = load i64, i64* %arrayidx, align 8, !dbg !4711
  %rem20 = and i32 %start_bit.addr.0, 63, !dbg !4712
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4713
  %sh_prom = zext i32 %rem20 to i64, !dbg !4714
  %shr = lshr i64 %18, %sh_prom, !dbg !4714
  store i64 %shr, i64* %bits21, align 8, !dbg !4714
  %tobool23 = icmp eq i64 %shr, 0, !dbg !4715
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4715
  %add = add i32 %start_bit.addr.0, %lnot.ext, !dbg !4716
  call void @llvm.dbg.value(metadata i32 %add, metadata !4673, metadata !DIExpression()), !dbg !4675
  store i32 %add, i32* %bit_no, align 4, !dbg !4717
  ret void, !dbg !4718
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4719 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4723, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4724, metadata !DIExpression()), !dbg !4728
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4729
  %0 = load i64, i64* %bits, align 8, !dbg !4729
  %tobool = icmp eq i64 %0, 0, !dbg !4730
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4731

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4732
  br label %next_bit, !dbg !4735

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4725), !dbg !4736
  br label %while.cond, !dbg !4735

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4737
  %and = and i64 %2, 1, !dbg !4738
  %tobool2 = icmp eq i64 %and, 0, !dbg !4739
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4735

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4740
  store i64 %shr, i64* %bits, align 8, !dbg !4740
  %3 = load i32, i32* %bit_no, align 4, !dbg !4742
  %add = add i32 %3, 1, !dbg !4742
  store i32 %add, i32* %bit_no, align 4, !dbg !4742
  %.pre = load i64, i64* %bits, align 8, !dbg !4737
  br label %while.cond, !dbg !4735, !llvm.loop !4743

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4745
  %sub = add i32 %4, 63, !dbg !4746
  %div = and i32 %sub, -64, !dbg !4747
  store i32 %div, i32* %bit_no, align 4, !dbg !4748
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4749
  %5 = load i32, i32* %word_no, align 8, !dbg !4750
  %inc = add i32 %5, 1, !dbg !4750
  store i32 %inc, i32* %word_no, align 8, !dbg !4750
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4751
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4751
  br label %while.body6, !dbg !4752

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4753

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4754
  %cmp = icmp eq i32 %8, 2, !dbg !4755
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4751
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4753

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4732
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4732
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4732
  store i64 %10, i64* %bits, align 8, !dbg !4756
  %tobool14 = icmp eq i64 %10, 0, !dbg !4757
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4759

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4760
  %add17 = add i32 %11, 64, !dbg !4760
  store i32 %add17, i32* %bit_no, align 4, !dbg !4760
  %12 = load i32, i32* %word_no, align 8, !dbg !4761
  %inc19 = add i32 %12, 1, !dbg !4761
  store i32 %inc19, i32* %word_no, align 8, !dbg !4761
  br label %while.cond7, !dbg !4753, !llvm.loop !4762

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4751
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4764
  %14 = load i64, i64* %13, align 8, !dbg !4764
  store i64 %14, i64* %6, align 8, !dbg !4765
  %tobool24 = icmp eq i64 %14, 0, !dbg !4766
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4768

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4768
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4769
  %16 = load i32, i32* %indx, align 8, !dbg !4769
  %mul28 = shl i32 %16, 7, !dbg !4770
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4771
  store i32 0, i32* %word_no, align 8, !dbg !4772
  br label %while.body6, !dbg !4752, !llvm.loop !4773

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4775

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4775

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4728
  ret i8 %retval.0, !dbg !4775
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @allocnos_have_intersected_live_ranges_p(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2) unnamed_addr #5 !dbg !4776 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !4780, metadata !DIExpression()), !dbg !4782
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !4781, metadata !DIExpression()), !dbg !4782
  %cmp = icmp eq %struct.ira_allocno* %a1, %a2, !dbg !4783
  br i1 %cmp, label %return, label %if.end, !dbg !4785

if.end:                                           ; preds = %entry
  %reg = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 4, !dbg !4786
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4786
  %cmp1 = icmp eq %struct.rtx_def* %0, null, !dbg !4788
  br i1 %cmp1, label %if.end13, label %land.lhs.true, !dbg !4789

land.lhs.true:                                    ; preds = %if.end
  %reg2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2, i64 0, i32 4, !dbg !4790
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !4790
  %cmp3 = icmp eq %struct.rtx_def* %1, null, !dbg !4791
  br i1 %cmp3, label %if.end13, label %land.lhs.true4, !dbg !4792

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4793
  %rt_uint = bitcast %union.rtunion_def* %2 to i32*, !dbg !4793
  %3 = load i32, i32* %rt_uint, align 8, !dbg !4793
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4794
  %rt_uint10 = bitcast %union.rtunion_def* %4 to i32*, !dbg !4794
  %5 = load i32, i32* %rt_uint10, align 8, !dbg !4794
  %cmp11 = icmp eq i32 %3, %5, !dbg !4795
  br i1 %cmp11, label %return, label %if.end13, !dbg !4796

if.end13:                                         ; preds = %land.lhs.true, %if.end, %land.lhs.true4
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 20, !dbg !4797
  %6 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !4797
  %live_ranges14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2, i64 0, i32 20, !dbg !4798
  %7 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges14, align 8, !dbg !4798
  %call = tail call zeroext i8 @ira_allocno_live_ranges_intersect_p(%struct.ira_allocno_live_range* %6, %struct.ira_allocno_live_range* %7) #6, !dbg !4799
  br label %return, !dbg !4800

return:                                           ; preds = %land.lhs.true4, %entry, %if.end13
  %retval.0 = phi i8 [ %call, %if.end13 ], [ 0, %entry ], [ 0, %land.lhs.true4 ], !dbg !4782
  ret i8 %retval.0, !dbg !4801
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4802 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4807, metadata !DIExpression()), !dbg !4808
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4809
  %0 = load i64, i64* %bits, align 8, !dbg !4810
  %shr = lshr i64 %0, 1, !dbg !4810
  store i64 %shr, i64* %bits, align 8, !dbg !4810
  %1 = load i32, i32* %bit_no, align 4, !dbg !4811
  %add = add i32 %1, 1, !dbg !4811
  store i32 %add, i32* %bit_no, align 4, !dbg !4811
  ret void, !dbg !4812
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local void @ira_mark_new_stack_slot(%struct.rtx_def* %x, i32 %regno, i32 %total_size) local_unnamed_addr #5 !dbg !4813 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !4817, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %regno, metadata !4818, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %total_size, metadata !4819, metadata !DIExpression()), !dbg !4823
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4824
  %idxprom = sext i32 %regno to i64, !dbg !4824
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %idxprom, !dbg !4824
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !4824
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !4822, metadata !DIExpression()), !dbg !4823
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 3, !dbg !4825
  %2 = load i32, i32* %hard_regno, align 4, !dbg !4825
  %sub1 = sub i32 -2, %2, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %sub1, metadata !4821, metadata !DIExpression()), !dbg !4823
  %cmp = icmp eq i32 %sub1, -1, !dbg !4827
  br i1 %cmp, label %if.then, label %if.end, !dbg !4829

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @ira_spilled_reg_stack_slots_num, align 4, !dbg !4830
  %inc = add nsw i32 %3, 1, !dbg !4830
  store i32 %inc, i32* @ira_spilled_reg_stack_slots_num, align 4, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %3, metadata !4821, metadata !DIExpression()), !dbg !4823
  %sub3 = sub i32 -2, %3, !dbg !4832
  store i32 %sub3, i32* %hard_regno, align 4, !dbg !4833
  br label %if.end, !dbg !4834

if.end:                                           ; preds = %if.then, %entry
  %slot_num.0 = phi i32 [ %3, %if.then ], [ %sub1, %entry ], !dbg !4823
  call void @llvm.dbg.value(metadata i32 %slot_num.0, metadata !4821, metadata !DIExpression()), !dbg !4823
  %4 = load %struct.ira_spilled_reg_stack_slot*, %struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots, align 8, !dbg !4835
  %idxprom5 = sext i32 %slot_num.0 to i64, !dbg !4835
  call void @llvm.dbg.value(metadata %struct.ira_spilled_reg_stack_slot* undef, metadata !4820, metadata !DIExpression()), !dbg !4823
  %spilled_regs = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %4, i64 %idxprom5, i32 0, !dbg !4836
  tail call fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %spilled_regs, %struct.bitmap_obstack* nonnull @reg_obstack) #8, !dbg !4836
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %spilled_regs, i32 %regno) #6, !dbg !4837
  %mem = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %4, i64 %idxprom5, i32 1, !dbg !4838
  store %struct.rtx_def* %x, %struct.rtx_def** %mem, align 8, !dbg !4839
  %width = getelementptr inbounds %struct.ira_spilled_reg_stack_slot, %struct.ira_spilled_reg_stack_slot* %4, i64 %idxprom5, i32 2, !dbg !4840
  store i32 %total_size, i32* %width, align 8, !dbg !4841
  %5 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4842
  %cmp8 = icmp sgt i32 %5, 3, !dbg !4844
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4845
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !4845
  %or.cond = and i1 %cmp8, %tobool, !dbg !4846
  br i1 %or.cond, label %if.then9, label %if.end13, !dbg !4846

if.then9:                                         ; preds = %if.end
  %7 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !4847
  %freq = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %7, i64 %idxprom, i32 0, !dbg !4847
  %8 = load i32, i32* %freq, align 4, !dbg !4847
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i32 %regno, i32 %8, i32 %slot_num.0) #6, !dbg !4848
  br label %if.end13, !dbg !4848

if.end13:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !4849
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) unnamed_addr #0 !dbg !4850 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %head, metadata !4854, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata %struct.bitmap_obstack* @reg_obstack, metadata !4855, metadata !DIExpression()), !dbg !4856
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 1, !dbg !4857
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !4858
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 0, !dbg !4859
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !4860
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %head, i64 0, i32 3, !dbg !4861
  store %struct.bitmap_obstack* @reg_obstack, %struct.bitmap_obstack** %obstack1, align 8, !dbg !4862
  ret void, !dbg !4863
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @ira_better_spill_reload_regno_p(i32* %regnos, i32* %other_regnos, %struct.rtx_def* %in, %struct.rtx_def* %out, %struct.rtx_def* %insn) local_unnamed_addr #5 !dbg !4864 {
entry:
  %length = alloca i32, align 4
  %other_length = alloca i32, align 4
  %nrefs = alloca i32, align 4
  %other_nrefs = alloca i32, align 4
  %call_used_count = alloca i32, align 4
  %other_call_used_count = alloca i32, align 4
  %hard_regno = alloca i32, align 4
  %other_hard_regno = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32* %regnos, metadata !4868, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %other_regnos, metadata !4869, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in, metadata !4870, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %out, metadata !4871, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4872, metadata !DIExpression()), !dbg !4883
  %0 = bitcast i32* %length to i8*, !dbg !4884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4884
  %1 = bitcast i32* %other_length to i8*, !dbg !4884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !4884
  %2 = bitcast i32* %nrefs to i8*, !dbg !4885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #7, !dbg !4885
  %3 = bitcast i32* %other_nrefs to i8*, !dbg !4885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7, !dbg !4885
  %4 = bitcast i32* %call_used_count to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !4886
  %5 = bitcast i32* %other_call_used_count to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4886
  %6 = bitcast i32* %hard_regno to i8*, !dbg !4887
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7, !dbg !4887
  %7 = bitcast i32* %other_hard_regno to i8*, !dbg !4887
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !4887
  call void @llvm.dbg.value(metadata i32* %length, metadata !4875, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %nrefs, metadata !4877, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %call_used_count, metadata !4879, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %hard_regno, metadata !4881, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  %call = call fastcc i32 @calculate_spill_cost(i32* %regnos, %struct.rtx_def* %in, %struct.rtx_def* %out, %struct.rtx_def* %insn, i32* nonnull %length, i32* nonnull %nrefs, i32* nonnull %call_used_count, i32* nonnull %hard_regno) #8, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %call, metadata !4873, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %other_length, metadata !4876, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %other_nrefs, metadata !4878, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %other_call_used_count, metadata !4880, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  call void @llvm.dbg.value(metadata i32* %other_hard_regno, metadata !4882, metadata !DIExpression(DW_OP_deref)), !dbg !4883
  %call1 = call fastcc i32 @calculate_spill_cost(i32* %other_regnos, %struct.rtx_def* %in, %struct.rtx_def* %out, %struct.rtx_def* %insn, i32* nonnull %other_length, i32* nonnull %other_nrefs, i32* nonnull %other_call_used_count, i32* nonnull %other_hard_regno) #8, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %call1, metadata !4874, metadata !DIExpression()), !dbg !4883
  %8 = load i32, i32* %nrefs, align 4, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %8, metadata !4877, metadata !DIExpression()), !dbg !4883
  %cmp = icmp eq i32 %8, 0, !dbg !4892
  %9 = load i32, i32* %other_nrefs, align 4, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %9, metadata !4878, metadata !DIExpression()), !dbg !4883
  %cmp2 = icmp ne i32 %9, 0, !dbg !4894
  %or.cond = and i1 %cmp, %cmp2, !dbg !4895
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !4895

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %8, metadata !4877, metadata !DIExpression()), !dbg !4883
  %cmp3 = icmp ne i32 %8, 0, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %9, metadata !4878, metadata !DIExpression()), !dbg !4883
  %cmp5 = icmp eq i32 %9, 0, !dbg !4898
  %or.cond1 = and i1 %cmp3, %cmp5, !dbg !4899
  br i1 %or.cond1, label %cleanup, label %if.end7, !dbg !4899

if.end7:                                          ; preds = %if.end
  %cmp8 = icmp eq i32 %call, %call1, !dbg !4900
  br i1 %cmp8, label %if.end12, label %if.then9, !dbg !4902

if.then9:                                         ; preds = %if.end7
  %cmp10 = icmp slt i32 %call, %call1, !dbg !4903
  br label %cleanup, !dbg !4904

if.end12:                                         ; preds = %if.end7
  %10 = load i32, i32* %length, align 4, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %10, metadata !4875, metadata !DIExpression()), !dbg !4883
  %11 = load i32, i32* %other_length, align 4, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %11, metadata !4876, metadata !DIExpression()), !dbg !4883
  %cmp13 = icmp eq i32 %10, %11, !dbg !4908
  br i1 %cmp13, label %if.end19, label %if.then15, !dbg !4909

if.then15:                                        ; preds = %if.end12
  call void @llvm.dbg.value(metadata i32 %10, metadata !4875, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32 %11, metadata !4876, metadata !DIExpression()), !dbg !4883
  %cmp16 = icmp sgt i32 %10, %11, !dbg !4910
  br label %cleanup, !dbg !4911

if.end19:                                         ; preds = %if.end12
  %12 = load i32, i32* %hard_regno, align 4, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %12, metadata !4881, metadata !DIExpression()), !dbg !4883
  %13 = load i32, i32* %other_hard_regno, align 4, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %13, metadata !4882, metadata !DIExpression()), !dbg !4883
  %14 = or i32 %12, %13, !dbg !4915
  %15 = icmp sgt i32 %14, -1, !dbg !4915
  br i1 %15, label %if.then25, label %cleanup, !dbg !4915

if.then25:                                        ; preds = %if.end19
  call void @llvm.dbg.value(metadata i32 %12, metadata !4881, metadata !DIExpression()), !dbg !4883
  %idxprom = sext i32 %12 to i64, !dbg !4916
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i64 0, i64 %idxprom, !dbg !4916
  %16 = load i32, i32* %arrayidx, align 4, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %13, metadata !4882, metadata !DIExpression()), !dbg !4883
  %idxprom26 = sext i32 %13 to i64, !dbg !4917
  %arrayidx27 = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i64 0, i64 %idxprom26, !dbg !4917
  %17 = load i32, i32* %arrayidx27, align 4, !dbg !4917
  %cmp28 = icmp slt i32 %16, %17, !dbg !4918
  br label %cleanup, !dbg !4919

cleanup:                                          ; preds = %if.end19, %if.end, %entry, %if.then25, %if.then15, %if.then9
  %retval.0.shrunk = phi i1 [ %cmp10, %if.then9 ], [ %cmp16, %if.then15 ], [ %cmp28, %if.then25 ], [ true, %entry ], [ false, %if.end ], [ false, %if.end19 ]
  %retval.0 = zext i1 %retval.0.shrunk to i8, !dbg !4883
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !4920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !4920
  ret i8 %retval.0, !dbg !4920
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @calculate_spill_cost(i32* %regnos, %struct.rtx_def* %in, %struct.rtx_def* %out, %struct.rtx_def* %insn, i32* %excess_pressure_live_length, i32* %nrefs, i32* %call_used_count, i32* %first_hard_regno) unnamed_addr #5 !dbg !4921 {
entry:
  call void @llvm.dbg.value(metadata i32* %regnos, metadata !4925, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %in, metadata !4926, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %out, metadata !4927, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4928, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32* %excess_pressure_live_length, metadata !4929, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32* %nrefs, metadata !4930, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32* %call_used_count, metadata !4931, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32* %first_hard_regno, metadata !4932, metadata !DIExpression()), !dbg !4945
  store i32 0, i32* %nrefs, align 4, !dbg !4946
  call void @llvm.dbg.value(metadata i32 0, metadata !4933, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4934, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4943, metadata !DIExpression()), !dbg !4945
  %tobool23 = icmp eq %struct.rtx_def* %in, null, !dbg !4947
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %in, i64 0, i32 0, !dbg !4947
  %tobool30 = icmp eq %struct.rtx_def* %out, null, !dbg !4947
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %out, i64 0, i32 0, !dbg !4947
  %arrayidx81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 1, !dbg !4951
  %rt_bb = bitcast %struct.object_block** %arrayidx81 to %struct.basic_block_def**, !dbg !4951
  br label %for.cond, !dbg !4954

for.cond:                                         ; preds = %for.inc97, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc97 ], [ 0, %entry ], !dbg !4955
  %cost.0 = phi i32 [ %cost.1, %for.inc97 ], [ 0, %entry ], !dbg !4955
  %count.0 = phi i32 [ %spec.select, %for.inc97 ], [ 0, %entry ], !dbg !4955
  %length.0 = phi i32 [ %add5, %for.inc97 ], [ 0, %entry ], !dbg !4955
  call void @llvm.dbg.value(metadata i32 %length.0, metadata !4943, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %count.0, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !4934, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !4933, metadata !DIExpression()), !dbg !4945
  %arrayidx = getelementptr inbounds i32, i32* %regnos, i64 %indvars.iv2, !dbg !4956
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %2, metadata !4935, metadata !DIExpression()), !dbg !4945
  %cmp = icmp slt i32 %2, 0, !dbg !4957
  br i1 %cmp, label %for.end99, label %if.end, !dbg !4959

if.end:                                           ; preds = %for.cond
  %call = tail call fastcc i32 @REG_N_REFS(i32 %2) #8, !dbg !4960
  %3 = load i32, i32* %nrefs, align 4, !dbg !4961
  %add = add nsw i32 %3, %call, !dbg !4961
  store i32 %add, i32* %nrefs, align 4, !dbg !4961
  %4 = load i16*, i16** @reg_renumber, align 8, !dbg !4962
  %idxprom1 = sext i32 %2 to i64, !dbg !4962
  %arrayidx2 = getelementptr inbounds i16, i16* %4, i64 %idxprom1, !dbg !4962
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !4962
  %conv = sext i16 %5 to i32, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4936, metadata !DIExpression()), !dbg !4945
  %6 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !4963
  %arrayidx4 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %6, i64 %idxprom1, !dbg !4963
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx4, align 8, !dbg !4963
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !4944, metadata !DIExpression()), !dbg !4945
  %excess_pressure_points_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 14, !dbg !4964
  %8 = load i32, i32* %excess_pressure_points_num, align 4, !dbg !4964
  %add5 = add nsw i32 %length.0, %8, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %add5, metadata !4943, metadata !DIExpression()), !dbg !4945
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 12, !dbg !4966
  %9 = load i32, i32* %memory_cost, align 4, !dbg !4966
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 10, !dbg !4967
  %10 = load i32, i32* %cover_class_cost, align 4, !dbg !4967
  %sub = sub nsw i32 %9, %10, !dbg !4968
  %add6 = add nsw i32 %cost.0, %sub, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %add6, metadata !4934, metadata !DIExpression()), !dbg !4945
  %idxprom7 = sext i16 %5 to i64, !dbg !4970
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 2, !dbg !4971
  %11 = load i32, i32* %mode, align 8, !dbg !4971
  %idxprom9 = zext i32 %11 to i64, !dbg !4970
  %arrayidx10 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom7, i64 %idxprom9, !dbg !4970
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !4970
  %conv11 = zext i8 %12 to i32, !dbg !4970
  call void @llvm.dbg.value(metadata i32 %conv11, metadata !4940, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 0, metadata !4937, metadata !DIExpression()), !dbg !4945
  %13 = load i64, i64* @call_used_reg_set, align 8, !dbg !4972
  %14 = sext i16 %5 to i64, !dbg !4976
  %wide.trip.count = zext i8 %12 to i64, !dbg !4977
  br label %for.cond12, !dbg !4976

for.cond12:                                       ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ], !dbg !4978
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4937, metadata !DIExpression()), !dbg !4945
  %15 = trunc i64 %indvars.iv to i32, !dbg !4979
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4977
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4979

for.body:                                         ; preds = %for.cond12
  %16 = add nsw i64 %indvars.iv, %14, !dbg !4980
  %sh_prom = and i64 %16, 4294967295, !dbg !4980
  %shl = shl i64 1, %sh_prom, !dbg !4980
  %and = and i64 %13, %shl, !dbg !4980
  %tobool = icmp eq i64 %and, 0, !dbg !4980
  br i1 %tobool, label %for.end, label %for.inc, !dbg !4981

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4982
  call void @llvm.dbg.value(metadata i32 undef, metadata !4937, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4945
  br label %for.cond12, !dbg !4983, !llvm.loop !4984

for.end:                                          ; preds = %for.cond12, %for.body
  %.lcssa = phi i32 [ %15, %for.cond12 ], [ %15, %for.body ], !dbg !4979
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4937, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4937, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4937, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !4937, metadata !DIExpression()), !dbg !4945
  %cmp18 = icmp eq i32 %.lcssa, %conv11, !dbg !4986
  %inc21 = zext i1 %cmp18 to i32, !dbg !4988
  %spec.select = add nuw nsw i32 %count.0, %inc21, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4938, metadata !DIExpression()), !dbg !4945
  br i1 %tobool23, label %land.end, label %land.lhs.true, !dbg !4989

land.lhs.true:                                    ; preds = %for.end
  %bf.load = load i32, i32* %0, align 8, !dbg !4990
  %bf.clear = and i32 %bf.load, 65535, !dbg !4990
  %cmp24 = icmp eq i32 %bf.clear, 37, !dbg !4990
  br i1 %cmp24, label %land.rhs, label %land.end, !dbg !4991

land.rhs:                                         ; preds = %land.lhs.true
  %call26 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %in) #8, !dbg !4992
  %cmp27 = icmp eq i32 %call26, %conv, !dbg !4993
  br label %land.end

land.end:                                         ; preds = %for.end, %land.rhs, %land.lhs.true
  %17 = phi i1 [ false, %land.lhs.true ], [ false, %for.end ], [ %cmp27, %land.rhs ], !dbg !4947
  call void @llvm.dbg.value(metadata i1 %17, metadata !4941, metadata !DIExpression()), !dbg !4945
  br i1 %tobool30, label %land.end40, label %land.lhs.true31, !dbg !4994

land.lhs.true31:                                  ; preds = %land.end
  %bf.load32 = load i32, i32* %1, align 8, !dbg !4995
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4995
  %cmp34 = icmp eq i32 %bf.clear33, 37, !dbg !4995
  br i1 %cmp34, label %land.rhs36, label %land.end40, !dbg !4996

land.rhs36:                                       ; preds = %land.lhs.true31
  %call37 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* nonnull %out) #8, !dbg !4997
  %cmp38 = icmp eq i32 %call37, %conv, !dbg !4998
  br label %land.end40

land.end40:                                       ; preds = %land.end, %land.rhs36, %land.lhs.true31
  %18 = phi i1 [ false, %land.lhs.true31 ], [ false, %land.end ], [ %cmp38, %land.rhs36 ], !dbg !4947
  call void @llvm.dbg.value(metadata i1 %18, metadata !4942, metadata !DIExpression()), !dbg !4945
  %or.cond = or i1 %17, %18, !dbg !4999
  br i1 %or.cond, label %land.lhs.true47, label %for.inc97, !dbg !4999

land.lhs.true47:                                  ; preds = %land.end40
  %call48 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %conv) #6, !dbg !5000
  %cmp49 = icmp eq %struct.rtx_def* %call48, null, !dbg !5001
  br i1 %cmp49, label %for.inc97, label %if.then51, !dbg !5002

if.then51:                                        ; preds = %land.lhs.true47
  call void @llvm.dbg.value(metadata i32 0, metadata !4939, metadata !DIExpression()), !dbg !4945
  br i1 %17, label %if.then53, label %if.end62, !dbg !5003

if.then53:                                        ; preds = %if.then51
  %19 = load i32, i32* %mode, align 8, !dbg !5004
  %idxprom55 = zext i32 %19 to i64, !dbg !5006
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 9, !dbg !5007
  %20 = load i32, i32* %cover_class, align 8, !dbg !5007
  %idxprom57 = zext i32 %20 to i64, !dbg !5006
  %arrayidx59 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom55, i64 %idxprom57, i64 1, !dbg !5006
  %21 = load i16, i16* %arrayidx59, align 2, !dbg !5006
  %conv60 = sext i16 %21 to i32, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %conv60, metadata !4939, metadata !DIExpression()), !dbg !4945
  br label %if.end62, !dbg !5008

if.end62:                                         ; preds = %if.then53, %if.then51
  %saved_cost.0 = phi i32 [ %conv60, %if.then53 ], [ 0, %if.then51 ], !dbg !4951
  call void @llvm.dbg.value(metadata i32 %saved_cost.0, metadata !4939, metadata !DIExpression()), !dbg !4945
  br i1 %18, label %if.then64, label %if.end74, !dbg !5009

if.then64:                                        ; preds = %if.end62
  %22 = load i32, i32* %mode, align 8, !dbg !5010
  %idxprom66 = zext i32 %22 to i64, !dbg !5012
  %cover_class68 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 9, !dbg !5013
  %23 = load i32, i32* %cover_class68, align 8, !dbg !5013
  %idxprom69 = zext i32 %23 to i64, !dbg !5012
  %arrayidx71 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom66, i64 %idxprom69, i64 0, !dbg !5012
  %24 = load i16, i16* %arrayidx71, align 4, !dbg !5012
  %conv72 = sext i16 %24 to i32, !dbg !5012
  %add73 = add nsw i32 %saved_cost.0, %conv72, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %add73, metadata !4939, metadata !DIExpression()), !dbg !4945
  br label %if.end74, !dbg !5015

if.end74:                                         ; preds = %if.then64, %if.end62
  %saved_cost.1 = phi i32 [ %add73, %if.then64 ], [ %saved_cost.0, %if.end62 ], !dbg !4951
  call void @llvm.dbg.value(metadata i32 %saved_cost.1, metadata !4939, metadata !DIExpression()), !dbg !4945
  %25 = load i32, i32* @optimize_size, align 4, !dbg !5016
  %tobool75 = icmp eq i32 %25, 0, !dbg !5016
  br i1 %tobool75, label %lor.lhs.false76, label %cond.end92, !dbg !5016

lor.lhs.false76:                                  ; preds = %if.end74
  %26 = load i32, i32* @flag_branch_probabilities, align 4, !dbg !5016
  %tobool77 = icmp eq i32 %26, 0, !dbg !5016
  br i1 %tobool77, label %cond.false, label %land.lhs.true78, !dbg !5016

land.lhs.true78:                                  ; preds = %lor.lhs.false76
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5016
  %cfg = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 1, !dbg !5016
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5016
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 0, !dbg !5016
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5016
  %count79 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i64 0, i32 8, !dbg !5016
  %30 = load i64, i64* %count79, align 8, !dbg !5016
  %tobool80 = icmp eq i64 %30, 0, !dbg !5016
  br i1 %tobool80, label %cond.end92, label %cond.false, !dbg !5016

cond.false:                                       ; preds = %land.lhs.true78, %lor.lhs.false76
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5016
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i64 0, i32 11, !dbg !5016
  %32 = load i32, i32* %frequency, align 8, !dbg !5016
  %.off = add i32 %32, 9, !dbg !5016
  %33 = icmp ugt i32 %.off, 18, !dbg !5016
  br i1 %33, label %cond.true83, label %cond.end92, !dbg !5016

cond.true83:                                      ; preds = %cond.false
  %div90 = sdiv i32 %32, 10, !dbg !5016
  br label %cond.end92, !dbg !5016

cond.end92:                                       ; preds = %land.lhs.true78, %if.end74, %cond.true83, %cond.false
  %cond93 = phi i32 [ 1000, %land.lhs.true78 ], [ 1000, %if.end74 ], [ %div90, %cond.true83 ], [ 1, %cond.false ], !dbg !5016
  %mul94 = mul nsw i32 %cond93, %saved_cost.1, !dbg !5017
  %sub95 = sub nsw i32 %add6, %mul94, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %sub95, metadata !4934, metadata !DIExpression()), !dbg !4945
  br label %for.inc97, !dbg !5019

for.inc97:                                        ; preds = %land.lhs.true47, %cond.end92, %land.end40
  %cost.1 = phi i32 [ %sub95, %cond.end92 ], [ %add6, %land.lhs.true47 ], [ %add6, %land.end40 ], !dbg !4947
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !4934, metadata !DIExpression()), !dbg !4945
  %indvars.iv.next3 = add nuw i64 %indvars.iv2, 1, !dbg !5020
  call void @llvm.dbg.value(metadata i32 undef, metadata !4933, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4945
  br label %for.cond, !dbg !5021, !llvm.loop !5022

for.end99:                                        ; preds = %for.cond
  %cost.0.lcssa = phi i32 [ %cost.0, %for.cond ], !dbg !4955
  %count.0.lcssa = phi i32 [ %count.0, %for.cond ], !dbg !4955
  %length.0.lcssa = phi i32 [ %length.0, %for.cond ], !dbg !4955
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4934, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %length.0.lcssa, metadata !4943, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4934, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %length.0.lcssa, metadata !4943, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !4934, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %count.0.lcssa, metadata !4938, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %length.0.lcssa, metadata !4943, metadata !DIExpression()), !dbg !4945
  store i32 %length.0.lcssa, i32* %excess_pressure_live_length, align 4, !dbg !5025
  store i32 %count.0.lcssa, i32* %call_used_count, align 4, !dbg !5026
  call void @llvm.dbg.value(metadata i32 -1, metadata !4936, metadata !DIExpression()), !dbg !4945
  %34 = load i32, i32* %regnos, align 4, !dbg !5027
  %cmp101 = icmp sgt i32 %34, -1, !dbg !5029
  br i1 %cmp101, label %if.then103, label %if.end108, !dbg !5030

if.then103:                                       ; preds = %for.end99
  %35 = load i16*, i16** @reg_renumber, align 8, !dbg !5031
  %idxprom105 = sext i32 %34 to i64, !dbg !5031
  %arrayidx106 = getelementptr inbounds i16, i16* %35, i64 %idxprom105, !dbg !5031
  %36 = load i16, i16* %arrayidx106, align 2, !dbg !5031
  %conv107 = sext i16 %36 to i32, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %conv107, metadata !4936, metadata !DIExpression()), !dbg !4945
  br label %if.end108, !dbg !5033

if.end108:                                        ; preds = %if.then103, %for.end99
  %hard_regno.0 = phi i32 [ %conv107, %if.then103 ], [ -1, %for.end99 ], !dbg !4945
  call void @llvm.dbg.value(metadata i32 %hard_regno.0, metadata !4936, metadata !DIExpression()), !dbg !4945
  store i32 %hard_regno.0, i32* %first_hard_regno, align 4, !dbg !5034
  ret i32 %cost.0.lcssa, !dbg !5035
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_initiate_assign() local_unnamed_addr #5 !dbg !5036 {
entry:
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5039
  %conv = sext i32 %0 to i64, !dbg !5039
  %mul = shl nsw i64 %conv, 3, !dbg !5040
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !5041
  store i8* %call, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !5042
  %call1 = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !5043
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !5044
  tail call fastcc void @initiate_cost_update() #8, !dbg !5045
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5046
  %conv2 = sext i32 %1 to i64, !dbg !5046
  %mul3 = shl nsw i64 %conv2, 2, !dbg !5047
  %call4 = tail call i8* @ira_allocate(i64 %mul3) #6, !dbg !5048
  store i8* %call4, i8** bitcast (i32** @allocno_priorities to i8**), align 8, !dbg !5049
  ret void, !dbg !5050
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initiate_cost_update() unnamed_addr #5 !dbg !5051 {
entry:
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5054
  %conv = sext i32 %0 to i64, !dbg !5054
  %mul = shl nsw i64 %conv, 4, !dbg !5055
  call void @llvm.dbg.value(metadata i64 %mul, metadata !5053, metadata !DIExpression()), !dbg !5056
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !5057
  store i8* %call, i8** bitcast (%struct.update_cost_queue_elem** @update_cost_queue_elems to i8**), align 8, !dbg !5058
  %call1 = tail call i8* @memset(i8* %call, i32 0, i64 %mul) #6, !dbg !5059
  store i32 0, i32* @update_cost_check, align 4, !dbg !5060
  ret void, !dbg !5061
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_finish_assign() local_unnamed_addr #5 !dbg !5062 {
entry:
  %0 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !5063
  tail call void @ira_free(i8* %0) #6, !dbg !5064
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !5065
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %1) #6, !dbg !5066
  tail call fastcc void @finish_cost_update() #8, !dbg !5067
  %2 = load i8*, i8** bitcast (i32** @allocno_priorities to i8**), align 8, !dbg !5068
  tail call void @ira_free(i8* %2) #6, !dbg !5069
  ret void, !dbg !5070
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finish_cost_update() unnamed_addr #5 !dbg !5071 {
entry:
  %0 = load i8*, i8** bitcast (%struct.update_cost_queue_elem** @update_cost_queue_elems to i8**), align 8, !dbg !5072
  tail call void @ira_free(i8* %0) #6, !dbg !5073
  ret void, !dbg !5074
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_color() local_unnamed_addr #5 !dbg !5075 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5079
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5079
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5080
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5078, metadata !DIExpression(DW_OP_deref)), !dbg !5081
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #8, !dbg !5082
  br label %for.cond, !dbg !5082

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5077, metadata !DIExpression(DW_OP_deref)), !dbg !5081
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5078, metadata !DIExpression(DW_OP_deref)), !dbg !5081
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #8, !dbg !5084
  %tobool = icmp eq i8 %call, 0, !dbg !5082
  br i1 %tobool, label %for.end, label %for.body, !dbg !5082

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5077, metadata !DIExpression()), !dbg !5081
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 12, !dbg !5086
  %3 = load i32, i32* %memory_cost, align 4, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5077, metadata !DIExpression()), !dbg !5081
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 13, !dbg !5088
  store i32 %3, i32* %updated_memory_cost, align 8, !dbg !5089
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5077, metadata !DIExpression()), !dbg !5081
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 10, !dbg !5090
  %4 = load i32, i32* %cover_class_cost, align 4, !dbg !5090
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5077, metadata !DIExpression()), !dbg !5081
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 11, !dbg !5091
  store i32 %4, i32* %updated_cover_class_cost, align 8, !dbg !5092
  br label %for.cond, !dbg !5084, !llvm.loop !5093

for.end:                                          ; preds = %for.cond
  %5 = load i8, i8* @ira_conflicts_p, align 1, !dbg !5095
  %tobool1 = icmp eq i8 %5, 0, !dbg !5095
  br i1 %tobool1, label %if.else, label %if.then, !dbg !5097

if.then:                                          ; preds = %for.end
  call fastcc void @color() #8, !dbg !5098
  br label %if.end, !dbg !5098

if.else:                                          ; preds = %for.end
  call fastcc void @fast_allocation() #8, !dbg !5099
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5100
  ret void, !dbg !5100
}

; Function Attrs: nounwind uwtable
define internal fastcc void @color() unnamed_addr #5 !dbg !5101 {
entry:
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5102
  %call = tail call fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %0) #8, !dbg !5102
  store %struct.VEC_ira_allocno_t_heap* %call, %struct.VEC_ira_allocno_t_heap** @allocno_stack_vec, align 8, !dbg !5103
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5104
  %call1 = tail call fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %1) #8, !dbg !5104
  store %struct.VEC_ira_allocno_t_heap* %call1, %struct.VEC_ira_allocno_t_heap** @removed_splay_allocno_vec, align 8, !dbg !5105
  %call2 = tail call i8* @memset(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @allocated_hardreg_p, i64 0, i64 0), i32 0, i64 53) #6, !dbg !5106
  tail call void @ira_initiate_assign() #8, !dbg !5107
  tail call fastcc void @do_coloring() #8, !dbg !5108
  tail call void @ira_finish_assign() #8, !dbg !5109
  tail call fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** nonnull @removed_splay_allocno_vec) #8, !dbg !5110
  tail call fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** nonnull @allocno_stack_vec) #8, !dbg !5111
  tail call fastcc void @move_spill_restore() #8, !dbg !5112
  ret void, !dbg !5113
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fast_allocation() unnamed_addr #5 !dbg !5114 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5130
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5131
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5131
  %2 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5132
  %conv = sext i32 %2 to i64, !dbg !5132
  %mul = shl nsw i64 %conv, 3, !dbg !5133
  %call = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !5134
  store i8* %call, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !5135
  call void @llvm.dbg.value(metadata i32 0, metadata !5119, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5126, metadata !DIExpression(DW_OP_deref)), !dbg !5136
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #8, !dbg !5137
  %3 = bitcast %struct.ira_allocno** %a to i64*, !dbg !5139
  br label %for.cond, !dbg !5137

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.body ], [ 0, %entry ], !dbg !5136
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !5119, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5125, metadata !DIExpression(DW_OP_deref)), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5126, metadata !DIExpression(DW_OP_deref)), !dbg !5136
  %call1 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #8, !dbg !5141
  %tobool = icmp eq i8 %call1, 0, !dbg !5137
  br i1 %tobool, label %for.end, label %for.body, !dbg !5137

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %3, align 8, !dbg !5142
  %5 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !5143
  %indvars.iv.next21 = add nuw i64 %indvars.iv20, 1, !dbg !5144
  call void @llvm.dbg.value(metadata i32 undef, metadata !5119, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %5, i64 %indvars.iv20, !dbg !5143
  %6 = bitcast %struct.ira_allocno** %arrayidx to i64*, !dbg !5145
  store i64 %4, i64* %6, align 8, !dbg !5145
  br label %for.cond, !dbg !5141, !llvm.loop !5146

for.end:                                          ; preds = %for.cond
  %indvars.iv20.lcssa = phi i64 [ %indvars.iv20, %for.cond ], !dbg !5136
  call void @llvm.dbg.value(metadata i64 %indvars.iv20.lcssa, metadata !5119, metadata !DIExpression()), !dbg !5136
  %7 = trunc i64 %indvars.iv20.lcssa to i32, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %7, metadata !5119, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %7, metadata !5119, metadata !DIExpression()), !dbg !5136
  %8 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5148
  %conv2 = sext i32 %8 to i64, !dbg !5148
  %mul3 = shl nsw i64 %conv2, 2, !dbg !5149
  %call4 = call i8* @ira_allocate(i64 %mul3) #6, !dbg !5150
  store i8* %call4, i8** bitcast (i32** @allocno_priorities to i8**), align 8, !dbg !5151
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !5152
  call fastcc void @setup_allocno_priorities(%struct.ira_allocno** %9, i32 %7) #8, !dbg !5153
  %10 = load i32, i32* @ira_max_point, align 4, !dbg !5154
  %conv5 = sext i32 %10 to i64, !dbg !5154
  %mul6 = shl nsw i64 %conv5, 3, !dbg !5155
  %call7 = call i8* @ira_allocate(i64 %mul6) #6, !dbg !5156
  %11 = bitcast i8* %call7 to i64*, !dbg !5157
  call void @llvm.dbg.value(metadata i64* %11, metadata !5129, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 0, metadata !5116, metadata !DIExpression()), !dbg !5136
  br label %for.cond8, !dbg !5158

for.cond8:                                        ; preds = %for.body10, %for.end
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %for.body10 ], [ 0, %for.end ], !dbg !5160
  call void @llvm.dbg.value(metadata i64 %indvars.iv18, metadata !5116, metadata !DIExpression()), !dbg !5136
  %12 = load i32, i32* @ira_max_point, align 4, !dbg !5161
  %13 = sext i32 %12 to i64, !dbg !5163
  %cmp = icmp slt i64 %indvars.iv18, %13, !dbg !5163
  br i1 %cmp, label %for.body10, label %for.end14, !dbg !5164

for.body10:                                       ; preds = %for.cond8
  %arrayidx12 = getelementptr inbounds i64, i64* %11, i64 %indvars.iv18, !dbg !5165
  store i64 0, i64* %arrayidx12, align 8, !dbg !5165
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !5166
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond8, !dbg !5167, !llvm.loop !5168

for.end14:                                        ; preds = %for.cond8
  %14 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !5170
  %conv15 = and i64 %indvars.iv20.lcssa, 4294967295, !dbg !5171
  call void @spec_qsort(i8* %14, i64 %conv15, i64 8, i32 (i8*, i8*)* nonnull @allocno_priority_compare_func) #6, !dbg !5172
  call void @llvm.dbg.value(metadata i32 0, metadata !5116, metadata !DIExpression()), !dbg !5136
  %wide.trip.count = and i64 %indvars.iv20.lcssa, 4294967295, !dbg !5173
  br label %for.cond16, !dbg !5176

for.cond16:                                       ; preds = %for.inc106, %for.end14
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc106 ], [ 0, %for.end14 ], !dbg !5177
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !5116, metadata !DIExpression()), !dbg !5136
  %15 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !5136
  %exitcond = icmp eq i64 %indvars.iv16, %wide.trip.count, !dbg !5173
  br i1 %exitcond, label %for.end108, label %for.body19, !dbg !5178

for.body19:                                       ; preds = %for.cond16
  %arrayidx21 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %15, i64 %indvars.iv16, !dbg !5179
  %16 = bitcast %struct.ira_allocno** %arrayidx21 to i64*, !dbg !5179
  %17 = load i64, i64* %16, align 8, !dbg !5179
  store i64 %17, i64* %3, align 8, !dbg !5181
  %.cast = inttoptr i64 %17 to %struct.ira_allocno*, !dbg !5182
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !5125, metadata !DIExpression()), !dbg !5136
  %conflict_hard_regs22 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 26, !dbg !5182
  %18 = load i64, i64* %conflict_hard_regs22, align 8, !dbg !5182
  call void @llvm.dbg.value(metadata i64 %18, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !5125, metadata !DIExpression()), !dbg !5136
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 20, !dbg !5183
  br label %for.cond23, !dbg !5185

for.cond23:                                       ; preds = %for.inc36, %for.body19
  %r.0.in = phi %struct.ira_allocno_live_range** [ %live_ranges, %for.body19 ], [ %next, %for.inc36 ]
  %conflict_hard_regs.0 = phi i64 [ %18, %for.body19 ], [ %conflict_hard_regs.1.lcssa, %for.inc36 ], !dbg !5182
  %r.0 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.0.in, align 8, !dbg !5186
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.0, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.0, metadata !5127, metadata !DIExpression()), !dbg !5136
  %cmp24 = icmp eq %struct.ira_allocno_live_range* %r.0, null, !dbg !5187
  br i1 %cmp24, label %for.end37, label %for.body26, !dbg !5189

for.body26:                                       ; preds = %for.cond23
  %start = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 1, !dbg !5190
  %19 = load i32, i32* %start, align 8, !dbg !5190
  call void @llvm.dbg.value(metadata i32 %19, metadata !5117, metadata !DIExpression()), !dbg !5136
  %finish = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 2, !dbg !5192
  %20 = load i32, i32* %finish, align 4, !dbg !5192
  %21 = sext i32 %19 to i64, !dbg !5194
  %22 = sext i32 %20 to i64, !dbg !5194
  br label %for.cond27, !dbg !5194

for.cond27:                                       ; preds = %for.body30, %for.body26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body30 ], [ %21, %for.body26 ], !dbg !5195
  %conflict_hard_regs.1 = phi i64 [ %or, %for.body30 ], [ %conflict_hard_regs.0, %for.body26 ], !dbg !5195
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5117, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.1, metadata !5128, metadata !DIExpression()), !dbg !5136
  %cmp28 = icmp sgt i64 %indvars.iv, %22, !dbg !5196
  br i1 %cmp28, label %for.inc36, label %for.body30, !dbg !5197

for.body30:                                       ; preds = %for.cond27
  %arrayidx32 = getelementptr inbounds i64, i64* %11, i64 %indvars.iv, !dbg !5198
  %23 = load i64, i64* %arrayidx32, align 8, !dbg !5198
  %or = or i64 %conflict_hard_regs.1, %23, !dbg !5198
  call void @llvm.dbg.value(metadata i64 %or, metadata !5128, metadata !DIExpression()), !dbg !5136
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5199
  call void @llvm.dbg.value(metadata i32 undef, metadata !5117, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond27, !dbg !5200, !llvm.loop !5201

for.inc36:                                        ; preds = %for.cond27
  %conflict_hard_regs.1.lcssa = phi i64 [ %conflict_hard_regs.1, %for.cond27 ], !dbg !5195
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.1.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.1.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.1.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  %next = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.0, i64 0, i32 3, !dbg !5203
  br label %for.cond23, !dbg !5204, !llvm.loop !5205

for.end37:                                        ; preds = %for.cond23
  %conflict_hard_regs.0.lcssa = phi i64 [ %conflict_hard_regs.0, %for.cond23 ], !dbg !5182
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i64 %conflict_hard_regs.0.lcssa, metadata !5128, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !5125, metadata !DIExpression()), !dbg !5136
  %cover_class38 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 9, !dbg !5207
  %24 = load i32, i32* %cover_class38, align 8, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %24, metadata !5123, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !5125, metadata !DIExpression()), !dbg !5136
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 31, !dbg !5208
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !5209
  %bf.set = or i16 %bf.load, 256, !dbg !5209
  store i16 %bf.set, i16* %assigned_p, align 4, !dbg !5209
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !5125, metadata !DIExpression()), !dbg !5136
  %hard_regno39 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 3, !dbg !5210
  store i32 -1, i32* %hard_regno39, align 4, !dbg !5211
  %idxprom40 = zext i32 %24 to i64, !dbg !5212
  %arrayidx41 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom40, !dbg !5212
  %25 = load i64, i64* %arrayidx41, align 8, !dbg !5212
  %call42 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %25, i64 %conflict_hard_regs.0.lcssa) #8, !dbg !5214
  %tobool43 = icmp eq i8 %call42, 0, !dbg !5214
  br i1 %tobool43, label %if.end, label %for.inc106, !dbg !5215

if.end:                                           ; preds = %for.end37
  %26 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5216
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %26, metadata !5125, metadata !DIExpression()), !dbg !5136
  %mode44 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %26, i64 0, i32 2, !dbg !5216
  %27 = load i32, i32* %mode44, align 8, !dbg !5216
  call void @llvm.dbg.value(metadata i32 %27, metadata !5124, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %26, metadata !5125, metadata !DIExpression()), !dbg !5136
  %no_stack_reg_p45 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %26, i64 0, i32 31, !dbg !5217
  %bf.load46 = load i16, i16* %no_stack_reg_p45, align 4, !dbg !5217
  %28 = and i16 %bf.load46, 16, !dbg !5217
  %arrayidx50 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom40, !dbg !5218
  %29 = load i32, i32* %arrayidx50, align 4, !dbg !5218
  call void @llvm.dbg.value(metadata i32 %29, metadata !5120, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5136
  %tobool61 = icmp eq i16 %28, 0, !dbg !5219
  %idxprom73 = zext i32 %27 to i64, !dbg !5224
  %arrayidx74 = getelementptr inbounds [27 x [87 x i64]], [27 x [87 x i64]]* @prohibited_class_mode_regs, i64 0, i64 %idxprom40, i64 %idxprom73, !dbg !5224
  br i1 %tobool61, label %if.end.if.end.split_crit_edge, label %if.end.split.us, !dbg !5226

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  %30 = sext i32 %29 to i64, !dbg !5226
  br label %for.cond51, !dbg !5226

if.end.split.us:                                  ; preds = %if.end
  %31 = sext i32 %29 to i64, !dbg !5226
  br label %for.cond51.us, !dbg !5226

for.cond51.us:                                    ; preds = %for.inc103.us, %if.end.split.us
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %for.inc103.us ], [ 0, %if.end.split.us ], !dbg !5227
  call void @llvm.dbg.value(metadata i64 %indvars.iv10, metadata !5117, metadata !DIExpression()), !dbg !5136
  %cmp52.us = icmp slt i64 %indvars.iv10, %31, !dbg !5228
  br i1 %cmp52.us, label %for.body54.us, label %for.inc106.loopexit4.us-lcssa.us, !dbg !5229

for.body54.us:                                    ; preds = %for.cond51.us
  %arrayidx58.us = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom40, i64 %indvars.iv10, !dbg !5230
  %32 = load i16, i16* %arrayidx58.us, align 2, !dbg !5230
  %conv59.us = sext i16 %32 to i32, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %conv59.us, metadata !5121, metadata !DIExpression()), !dbg !5136
  %33 = and i16 %32, -8, !dbg !5231
  %34 = icmp eq i16 %33, 8, !dbg !5231
  br i1 %34, label %for.inc103.us, label %if.end68.us, !dbg !5231

if.end68.us:                                      ; preds = %for.body54.us
  %call69.us = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv59.us, i32 %27, i64 %conflict_hard_regs.0.lcssa) #8, !dbg !5232
  %tobool70.us = icmp eq i8 %call69.us, 0, !dbg !5232
  br i1 %tobool70.us, label %for.inc103.us, label %lor.lhs.false.us, !dbg !5233

lor.lhs.false.us:                                 ; preds = %if.end68.us
  %35 = load i64, i64* %arrayidx74, align 8, !dbg !5234
  %sh_prom.us = zext i32 %conv59.us to i64, !dbg !5234
  %shl.us = shl i64 1, %sh_prom.us, !dbg !5234
  %and.us = and i64 %35, %shl.us, !dbg !5234
  %tobool75.us = icmp eq i64 %and.us, 0, !dbg !5234
  br i1 %tobool75.us, label %if.end77.us-lcssa.us, label %for.inc103.us, !dbg !5235

for.inc103.us:                                    ; preds = %lor.lhs.false.us, %if.end68.us, %for.body54.us
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !5236
  call void @llvm.dbg.value(metadata i32 undef, metadata !5117, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond51.us, !dbg !5237, !llvm.loop !5238

for.inc106.loopexit4.us-lcssa.us:                 ; preds = %for.cond51.us
  br label %for.inc106.loopexit4, !dbg !5240

if.end77.us-lcssa.us:                             ; preds = %lor.lhs.false.us
  %.lcssa22 = phi i16 [ %32, %lor.lhs.false.us ], !dbg !5230
  %conv59.us.lcssa = phi i32 [ %conv59.us, %lor.lhs.false.us ], !dbg !5230
  br label %if.end77, !dbg !5230

for.cond51:                                       ; preds = %for.inc103, %if.end.if.end.split_crit_edge
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc103 ], [ 0, %if.end.if.end.split_crit_edge ], !dbg !5227
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !5117, metadata !DIExpression()), !dbg !5136
  %cmp52 = icmp slt i64 %indvars.iv12, %30, !dbg !5228
  br i1 %cmp52, label %for.body54, label %for.inc106.loopexit4.us-lcssa, !dbg !5229

for.body54:                                       ; preds = %for.cond51
  %arrayidx58 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom40, i64 %indvars.iv12, !dbg !5230
  %36 = load i16, i16* %arrayidx58, align 2, !dbg !5230
  %conv59 = sext i16 %36 to i32, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %conv59, metadata !5121, metadata !DIExpression()), !dbg !5136
  %call69 = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %conv59, i32 %27, i64 %conflict_hard_regs.0.lcssa) #8, !dbg !5232
  %tobool70 = icmp eq i8 %call69, 0, !dbg !5232
  br i1 %tobool70, label %for.inc103, label %lor.lhs.false, !dbg !5233

lor.lhs.false:                                    ; preds = %for.body54
  %37 = load i64, i64* %arrayidx74, align 8, !dbg !5234
  %sh_prom = zext i32 %conv59 to i64, !dbg !5234
  %shl = shl i64 1, %sh_prom, !dbg !5234
  %and = and i64 %37, %shl, !dbg !5234
  %tobool75 = icmp eq i64 %and, 0, !dbg !5234
  br i1 %tobool75, label %if.end77.us-lcssa, label %for.inc103, !dbg !5235

if.end77.us-lcssa:                                ; preds = %lor.lhs.false
  %.lcssa23 = phi i16 [ %36, %lor.lhs.false ], !dbg !5230
  %conv59.lcssa = phi i32 [ %conv59, %lor.lhs.false ], !dbg !5230
  br label %if.end77, !dbg !5230

if.end77:                                         ; preds = %if.end77.us-lcssa.us, %if.end77.us-lcssa
  %conv59.le.pre-phi = phi i32 [ %conv59.us.lcssa, %if.end77.us-lcssa.us ], [ %conv59.lcssa, %if.end77.us-lcssa ], !dbg !5230
  %.lcssa = phi i16 [ %.lcssa22, %if.end77.us-lcssa.us ], [ %.lcssa23, %if.end77.us-lcssa ], !dbg !5230
  %38 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5241
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %38, metadata !5125, metadata !DIExpression()), !dbg !5136
  %hard_regno78 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %38, i64 0, i32 3, !dbg !5241
  store i32 %conv59.le.pre-phi, i32* %hard_regno78, align 4, !dbg !5242
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %38, metadata !5125, metadata !DIExpression()), !dbg !5136
  %live_ranges79 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %38, i64 0, i32 20, !dbg !5243
  %idxprom90 = sext i16 %.lcssa to i64, !dbg !5245
  %arrayidx93 = getelementptr inbounds [53 x [87 x i64]], [53 x [87 x i64]]* @ira_reg_mode_hard_regset, i64 0, i64 %idxprom90, i64 %idxprom73, !dbg !5245
  br label %for.cond80, !dbg !5249

for.cond80:                                       ; preds = %for.inc100, %if.end77
  %r.1.in = phi %struct.ira_allocno_live_range** [ %live_ranges79, %if.end77 ], [ %next101, %for.inc100 ]
  %r.1 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %r.1.in, align 8, !dbg !5250
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %r.1, metadata !5127, metadata !DIExpression()), !dbg !5136
  %cmp81 = icmp eq %struct.ira_allocno_live_range* %r.1, null, !dbg !5251
  br i1 %cmp81, label %for.inc106.loopexit, label %for.body83, !dbg !5252

for.body83:                                       ; preds = %for.cond80
  %start84 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 1, !dbg !5253
  %39 = load i32, i32* %start84, align 8, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %39, metadata !5118, metadata !DIExpression()), !dbg !5136
  %finish86 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 2, !dbg !5245
  %40 = sext i32 %39 to i64, !dbg !5254
  br label %for.cond85, !dbg !5254

for.cond85:                                       ; preds = %for.body89, %for.body83
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %for.body89 ], [ %40, %for.body83 ], !dbg !5255
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !5118, metadata !DIExpression()), !dbg !5136
  %41 = load i32, i32* %finish86, align 4, !dbg !5256
  %42 = sext i32 %41 to i64, !dbg !5257
  %cmp87 = icmp sgt i64 %indvars.iv14, %42, !dbg !5257
  br i1 %cmp87, label %for.inc100, label %for.body89, !dbg !5258

for.body89:                                       ; preds = %for.cond85
  %43 = load i64, i64* %arrayidx93, align 8, !dbg !5259
  %arrayidx95 = getelementptr inbounds i64, i64* %11, i64 %indvars.iv14, !dbg !5259
  %44 = load i64, i64* %arrayidx95, align 8, !dbg !5259
  %or96 = or i64 %44, %43, !dbg !5259
  store i64 %or96, i64* %arrayidx95, align 8, !dbg !5259
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, 1, !dbg !5260
  call void @llvm.dbg.value(metadata i32 undef, metadata !5118, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond85, !dbg !5261, !llvm.loop !5262

for.inc100:                                       ; preds = %for.cond85
  %next101 = getelementptr inbounds %struct.ira_allocno_live_range, %struct.ira_allocno_live_range* %r.1, i64 0, i32 3, !dbg !5264
  br label %for.cond80, !dbg !5265, !llvm.loop !5266

for.inc103:                                       ; preds = %lor.lhs.false, %for.body54
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !5236
  call void @llvm.dbg.value(metadata i32 undef, metadata !5117, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond51, !dbg !5237, !llvm.loop !5238

for.inc106.loopexit:                              ; preds = %for.cond80
  br label %for.inc106, !dbg !5240

for.inc106.loopexit4.us-lcssa:                    ; preds = %for.cond51
  br label %for.inc106.loopexit4, !dbg !5240

for.inc106.loopexit4:                             ; preds = %for.inc106.loopexit4.us-lcssa.us, %for.inc106.loopexit4.us-lcssa
  br label %for.inc106, !dbg !5240

for.inc106:                                       ; preds = %for.inc106.loopexit4, %for.inc106.loopexit, %for.end37
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !5240
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5136
  br label %for.cond16, !dbg !5268, !llvm.loop !5269

for.end108:                                       ; preds = %for.cond16
  %.lcssa24 = phi %struct.ira_allocno** [ %15, %for.cond16 ], !dbg !5136
  %45 = bitcast %struct.ira_allocno** %.lcssa24 to i8*, !dbg !5271
  call void @ira_free(i8* %45) #6, !dbg !5272
  call void @ira_free(i8* %call7) #6, !dbg !5273
  %46 = load i8*, i8** bitcast (i32** @allocno_priorities to i8**), align 8, !dbg !5274
  call void @ira_free(i8* %46) #6, !dbg !5275
  %47 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5276
  %cmp109 = icmp sgt i32 %47, 1, !dbg !5278
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5279
  %cmp112 = icmp ne %struct._IO_FILE* %48, null, !dbg !5280
  %or.cond2 = and i1 %cmp109, %cmp112, !dbg !5281
  br i1 %or.cond2, label %if.then114, label %if.end115, !dbg !5281

if.then114:                                       ; preds = %for.end108
  call void @ira_print_disposition(%struct._IO_FILE* nonnull %48) #6, !dbg !5282
  br label %if.end115, !dbg !5282

if.end115:                                        ; preds = %if.then114, %for.end108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5283
  ret void, !dbg !5283
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5284 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5289
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5289
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5289

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5289
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5289
  br label %cond.end, !dbg !5289

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5289
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5289
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !5290
  %conv3 = zext i1 %cmp to i8, !dbg !5291
  ret i8 %conv3, !dbg !5292
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5293 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5298
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5298
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5298

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !5298
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5298
  br label %cond.end, !dbg !5298

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5298
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !5298
  ret %struct.edge_def* %call2, !dbg !5299
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5300 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5304, metadata !DIExpression()), !dbg !5305
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5306
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5306

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5306
  %0 = load i32, i32* %num, align 8, !dbg !5306
  br label %cond.end, !dbg !5306

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5306
  ret i32 %cond, !dbg !5306
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5307 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5312
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5312

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5312
  br label %cond.end, !dbg !5312

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5313
  ret %struct.VEC_edge_gc* %0, !dbg !5314
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5315 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5319, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5320, metadata !DIExpression()), !dbg !5321
  br label %land.end, !dbg !5322

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5322
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5322
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5322
  ret %struct.edge_def* %0, !dbg !5322
}

declare dso_local void @free(i8*) local_unnamed_addr #2

declare dso_local i32 @floor_log2(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @ira_get_register_move_cost(i32 %mode, i32 %from, i32 %to) unnamed_addr #0 !dbg !5323 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5327, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i32 %from, metadata !5328, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i32 %to, metadata !5329, metadata !DIExpression()), !dbg !5330
  %idxprom = zext i32 %mode to i64, !dbg !5331
  %arrayidx = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_register_move_cost, i64 0, i64 %idxprom, !dbg !5331
  %0 = load [27 x i16]*, [27 x i16]** %arrayidx, align 8, !dbg !5331
  %cmp = icmp eq [27 x i16]* %0, null, !dbg !5333
  br i1 %cmp, label %if.then, label %if.end, !dbg !5334

if.then:                                          ; preds = %entry
  tail call void @ira_init_register_move_cost(i32 %mode) #6, !dbg !5335
  %.pre = load [27 x i16]*, [27 x i16]** %arrayidx, align 8, !dbg !5336
  br label %if.end, !dbg !5335

if.end:                                           ; preds = %if.then, %entry
  %1 = phi [27 x i16]* [ %.pre, %if.then ], [ %0, %entry ], !dbg !5336
  %idxprom3 = zext i32 %from to i64, !dbg !5336
  %idxprom5 = zext i32 %to to i64, !dbg !5336
  %arrayidx6 = getelementptr inbounds [27 x i16], [27 x i16]* %1, i64 %idxprom3, i64 %idxprom5, !dbg !5336
  %2 = load i16, i16* %arrayidx6, align 2, !dbg !5336
  %conv = zext i16 %2 to i32, !dbg !5336
  ret i32 %conv, !dbg !5337
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocate_and_set_or_copy_costs(i32** %vec, i32 %cover_class, i32 %val, i32* %src) unnamed_addr #0 !dbg !5338 {
entry:
  call void @llvm.dbg.value(metadata i32** %vec, metadata !5343, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !5344, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata i32 %val, metadata !5345, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata i32* %src, metadata !5346, metadata !DIExpression()), !dbg !5350
  %0 = load i32*, i32** %vec, align 8, !dbg !5351
  %cmp = icmp eq i32* %0, null, !dbg !5353
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !5354

if.end:                                           ; preds = %entry
  %call = tail call i32* @ira_allocate_cost_vector(i32 %cover_class) #6, !dbg !5355
  call void @llvm.dbg.value(metadata i32* %call, metadata !5348, metadata !DIExpression()), !dbg !5350
  store i32* %call, i32** %vec, align 8, !dbg !5356
  %idxprom = zext i32 %cover_class to i64, !dbg !5357
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !5357
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %1, metadata !5349, metadata !DIExpression()), !dbg !5350
  %cmp1 = icmp eq i32* %src, null, !dbg !5358
  br i1 %cmp1, label %for.cond.preheader, label %if.then2, !dbg !5360

for.cond.preheader:                               ; preds = %if.end
  %2 = sext i32 %1 to i64, !dbg !5361
  br label %for.cond, !dbg !5361

if.then2:                                         ; preds = %if.end
  %3 = bitcast i32* %call to i8*, !dbg !5364
  %4 = bitcast i32* %src to i8*, !dbg !5365
  %conv = sext i32 %1 to i64, !dbg !5366
  %mul = shl nsw i64 %conv, 2, !dbg !5367
  %call3 = tail call i8* @memcpy(i8* %3, i8* nonnull %4, i64 %mul) #6, !dbg !5368
  br label %cleanup.cont, !dbg !5368

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !5369
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5347, metadata !DIExpression()), !dbg !5350
  %cmp4 = icmp slt i64 %indvars.iv, %2, !dbg !5370
  br i1 %cmp4, label %for.body, label %cleanup.cont.loopexit, !dbg !5361

for.body:                                         ; preds = %for.cond
  %arrayidx7 = getelementptr inbounds i32, i32* %call, i64 %indvars.iv, !dbg !5372
  store i32 %val, i32* %arrayidx7, align 4, !dbg !5373
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5374
  call void @llvm.dbg.value(metadata i32 undef, metadata !5347, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5350
  br label %for.cond, !dbg !5375, !llvm.loop !5376

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5378

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry, %if.then2
  ret void, !dbg !5378
}

declare dso_local void @ira_init_register_move_cost(i32) local_unnamed_addr #2

declare dso_local i32* @ira_allocate_cost_vector(i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @start_update_cost() unnamed_addr #5 !dbg !5379 {
entry:
  %0 = load i32, i32* @update_cost_check, align 4, !dbg !5380
  %inc = add nsw i32 %0, 1, !dbg !5380
  store i32 %inc, i32* @update_cost_check, align 4, !dbg !5380
  store %struct.ira_allocno* null, %struct.ira_allocno** @update_cost_queue, align 8, !dbg !5381
  ret void, !dbg !5382
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocate_and_copy_costs(i32** %vec, i32 %cover_class, i32* %src) unnamed_addr #0 !dbg !5383 {
entry:
  call void @llvm.dbg.value(metadata i32** %vec, metadata !5387, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !5388, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32* %src, metadata !5389, metadata !DIExpression()), !dbg !5391
  %0 = load i32*, i32** %vec, align 8, !dbg !5392
  %cmp = icmp ne i32* %0, null, !dbg !5394
  %cmp1 = icmp eq i32* %src, null, !dbg !5395
  %or.cond = or i1 %cmp, %cmp1, !dbg !5396
  br i1 %or.cond, label %cleanup.cont, label %if.end, !dbg !5396

if.end:                                           ; preds = %entry
  %call = tail call i32* @ira_allocate_cost_vector(i32 %cover_class) #6, !dbg !5397
  store i32* %call, i32** %vec, align 8, !dbg !5398
  %idxprom = zext i32 %cover_class to i64, !dbg !5399
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !5399
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %1, metadata !5390, metadata !DIExpression()), !dbg !5391
  %.cast = bitcast i32* %call to i8*, !dbg !5400
  %2 = bitcast i32* %src to i8*, !dbg !5401
  %conv = sext i32 %1 to i64, !dbg !5402
  %mul = shl nsw i64 %conv, 2, !dbg !5403
  %call2 = tail call i8* @memcpy(i8* %.cast, i8* %2, i64 %mul) #6, !dbg !5404
  br label %cleanup.cont, !dbg !5405

cleanup.cont:                                     ; preds = %if.end, %entry
  ret void, !dbg !5405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_subset_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !5406 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !5411, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i64 %y, metadata !5412, metadata !DIExpression()), !dbg !5413
  %neg = xor i64 %y, -1, !dbg !5414
  %and = and i64 %neg, %x, !dbg !5415
  %cmp = icmp eq i64 %and, 0, !dbg !5416
  %conv1 = zext i1 %cmp to i8, !dbg !5417
  ret i8 %conv1, !dbg !5418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @queue_update_cost(%struct.ira_allocno* %allocno, i32 %divisor) unnamed_addr #0 !dbg !5419 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !5423, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32 %divisor, metadata !5424, metadata !DIExpression()), !dbg !5426
  %0 = load %struct.update_cost_queue_elem*, %struct.update_cost_queue_elem** @update_cost_queue_elems, align 8, !dbg !5427
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 0, !dbg !5428
  %1 = load i32, i32* %num, align 8, !dbg !5428
  %idxprom = sext i32 %1 to i64, !dbg !5427
  %arrayidx = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %0, i64 %idxprom, !dbg !5427
  call void @llvm.dbg.value(metadata %struct.update_cost_queue_elem* %arrayidx, metadata !5425, metadata !DIExpression()), !dbg !5426
  %check = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %arrayidx, i64 0, i32 0, !dbg !5429
  %2 = load i32, i32* %check, align 8, !dbg !5429
  %3 = load i32, i32* @update_cost_check, align 4, !dbg !5431
  %cmp = icmp eq i32 %2, %3, !dbg !5432
  br i1 %cmp, label %if.end7, label %land.lhs.true, !dbg !5433

land.lhs.true:                                    ; preds = %entry
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !5434
  %4 = load i32, i32* %cover_class, align 8, !dbg !5434
  %cmp1 = icmp eq i32 %4, 0, !dbg !5435
  br i1 %cmp1, label %if.end7, label %if.then, !dbg !5436

if.then:                                          ; preds = %land.lhs.true
  store i32 %3, i32* %check, align 8, !dbg !5437
  %divisor3 = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %0, i64 %idxprom, i32 1, !dbg !5439
  store i32 %divisor, i32* %divisor3, align 4, !dbg !5440
  %next = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %0, i64 %idxprom, i32 2, !dbg !5441
  store %struct.ira_allocno* null, %struct.ira_allocno** %next, align 8, !dbg !5442
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** @update_cost_queue, align 8, !dbg !5443
  %cmp4 = icmp eq %struct.ira_allocno* %5, null, !dbg !5445
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5446

if.then5:                                         ; preds = %if.then
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** @update_cost_queue, align 8, !dbg !5447
  br label %if.end, !dbg !5448

if.else:                                          ; preds = %if.then
  %6 = load %struct.update_cost_queue_elem*, %struct.update_cost_queue_elem** @update_cost_queue_tail, align 8, !dbg !5449
  %next6 = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %6, i64 0, i32 2, !dbg !5450
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** %next6, align 8, !dbg !5451
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  store %struct.update_cost_queue_elem* %arrayidx, %struct.update_cost_queue_elem** @update_cost_queue_tail, align 8, !dbg !5452
  br label %if.end7, !dbg !5453

if.end7:                                          ; preds = %land.lhs.true, %entry, %if.end
  ret void, !dbg !5454
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_conflict_hard_regno_costs(i32* %costs, i32 %cover_class, i8 zeroext %decr_p) unnamed_addr #5 !dbg !5455 {
entry:
  %divisor = alloca i32, align 4
  %allocno = alloca %struct.ira_allocno*, align 8
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds ([53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 0), metadata !5459, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %cover_class, metadata !5460, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8 %decr_p, metadata !5461, metadata !DIExpression()), !dbg !5478
  %0 = bitcast i32* %divisor to i8*, !dbg !5479
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5479
  %1 = bitcast %struct.ira_allocno** %allocno to i8*, !dbg !5480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5480
  %idxprom = zext i32 %cover_class to i64, !dbg !5481
  %tobool56 = icmp eq i8 %decr_p, 0, !dbg !5486
  br label %while.cond, !dbg !5493

while.cond.loopexit:                              ; preds = %for.cond
  %another_allocno.1.lcssa = phi %struct.ira_allocno* [ %another_allocno.1, %for.cond ]
  %next_cp.1.lcssa = phi %struct.ira_allocno_copy* [ %next_cp.1, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1.lcssa, metadata !5477, metadata !DIExpression()), !dbg !5478
  br label %while.cond, !dbg !5493

while.cond:                                       ; preds = %while.cond.loopexit, %entry
  %another_allocno.0 = phi %struct.ira_allocno* [ undef, %entry ], [ %another_allocno.1.lcssa, %while.cond.loopexit ]
  %next_cp.0 = phi %struct.ira_allocno_copy* [ undef, %entry ], [ %next_cp.1.lcssa, %while.cond.loopexit ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.0, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.0, metadata !5475, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32* %divisor, metadata !5468, metadata !DIExpression(DW_OP_deref)), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %allocno, metadata !5474, metadata !DIExpression(DW_OP_deref)), !dbg !5478
  %call = call fastcc zeroext i8 @get_next_update_cost(%struct.ira_allocno** nonnull %allocno, i32* nonnull %divisor) #8, !dbg !5494
  %tobool = icmp eq i8 %call, 0, !dbg !5493
  br i1 %tobool, label %while.end, label %while.body, !dbg !5493

while.body:                                       ; preds = %while.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno, align 8, !dbg !5495
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5474, metadata !DIExpression()), !dbg !5478
  %allocno_copies = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 15, !dbg !5495
  %3 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %allocno_copies, align 8, !dbg !5495
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %3, metadata !5476, metadata !DIExpression()), !dbg !5478
  br label %for.cond, !dbg !5496

for.cond:                                         ; preds = %for.inc70, %while.body
  %another_allocno.1 = phi %struct.ira_allocno* [ %another_allocno.0, %while.body ], [ %another_allocno.3, %for.inc70 ]
  %cp.0 = phi %struct.ira_allocno_copy* [ %3, %while.body ], [ %next_cp.3, %for.inc70 ], !dbg !5497
  %next_cp.1 = phi %struct.ira_allocno_copy* [ %next_cp.0, %while.body ], [ %next_cp.3, %for.inc70 ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.1, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %cp.0, metadata !5476, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.1, metadata !5475, metadata !DIExpression()), !dbg !5478
  %cmp = icmp eq %struct.ira_allocno_copy* %cp.0, null, !dbg !5498
  br i1 %cmp, label %while.cond.loopexit, label %for.body, !dbg !5499, !llvm.loop !5500

for.body:                                         ; preds = %for.cond
  %first = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 1, !dbg !5502
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %first, align 8, !dbg !5502
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno, align 8, !dbg !5504
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !5474, metadata !DIExpression()), !dbg !5478
  %cmp1 = icmp eq %struct.ira_allocno* %4, %5, !dbg !5505
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5506

if.then:                                          ; preds = %for.body
  %next_first_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 7, !dbg !5507
  %6 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_first_allocno_copy, align 8, !dbg !5507
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %6, metadata !5477, metadata !DIExpression()), !dbg !5478
  %second = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !5509
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %second, align 8, !dbg !5509
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !5475, metadata !DIExpression()), !dbg !5478
  br label %if.end7, !dbg !5510

if.else:                                          ; preds = %for.body
  %second2 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 2, !dbg !5511
  %8 = load %struct.ira_allocno*, %struct.ira_allocno** %second2, align 8, !dbg !5511
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !5474, metadata !DIExpression()), !dbg !5478
  %cmp3 = icmp eq %struct.ira_allocno* %8, %5, !dbg !5513
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !5514

if.then4:                                         ; preds = %if.else
  %next_second_allocno_copy = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 9, !dbg !5515
  %9 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %next_second_allocno_copy, align 8, !dbg !5515
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %9, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5475, metadata !DIExpression()), !dbg !5478
  br label %if.end7, !dbg !5517

if.else6:                                         ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5518
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.else6, %if.then
  %another_allocno.3 = phi %struct.ira_allocno* [ %7, %if.then ], [ %4, %if.then4 ], [ %another_allocno.1, %if.else6 ], !dbg !5519
  %next_cp.3 = phi %struct.ira_allocno_copy* [ %6, %if.then ], [ %9, %if.then4 ], [ %next_cp.1, %if.else6 ], !dbg !5519
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %another_allocno.3, metadata !5475, metadata !DIExpression()), !dbg !5478
  %cover_class8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 9, !dbg !5520
  %10 = load i32, i32* %cover_class8, align 8, !dbg !5520
  call void @llvm.dbg.value(metadata i32 %10, metadata !5473, metadata !DIExpression()), !dbg !5478
  %idxprom9 = zext i32 %10 to i64, !dbg !5521
  %arrayidx10 = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %idxprom, i64 %idxprom9, !dbg !5521
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !5521
  %tobool11 = icmp eq i8 %11, 0, !dbg !5521
  br i1 %tobool11, label %for.inc70, label %lor.lhs.false, !dbg !5522

lor.lhs.false:                                    ; preds = %if.end7
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 31, !dbg !5523
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !5523
  %bf.clear = and i16 %bf.load, 256, !dbg !5523
  %tobool12 = icmp eq i16 %bf.clear, 0, !dbg !5523
  br i1 %tobool12, label %lor.lhs.false13, label %for.inc70, !dbg !5524

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 18, !dbg !5525
  %12 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !5525
  %may_be_spilled_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 31, !dbg !5525
  %bf.load14 = load i16, i16* %may_be_spilled_p, align 4, !dbg !5525
  %bf.clear16 = and i16 %bf.load14, 512, !dbg !5525
  %tobool18 = icmp eq i16 %bf.clear16, 0, !dbg !5525
  br i1 %tobool18, label %if.end20, label %for.inc70, !dbg !5526

if.end20:                                         ; preds = %lor.lhs.false13
  %arrayidx22 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom9, !dbg !5527
  %13 = load i32, i32* %arrayidx22, align 4, !dbg !5527
  call void @llvm.dbg.value(metadata i32 %13, metadata !5464, metadata !DIExpression()), !dbg !5478
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 36, !dbg !5528
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 35, !dbg !5529
  %14 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !5529
  call fastcc void @ira_allocate_and_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs, i32 %10, i32* %14) #8, !dbg !5530
  %15 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !5531
  call void @llvm.dbg.value(metadata i32* %15, metadata !5471, metadata !DIExpression()), !dbg !5478
  %cmp24 = icmp eq i32* %15, null, !dbg !5532
  br i1 %cmp24, label %if.end20.if.end62_crit_edge, label %if.else26, !dbg !5533

if.end20.if.end62_crit_edge:                      ; preds = %if.end20
  %.pre = load i32, i32* %divisor, align 4, !dbg !5534
  br label %if.end62, !dbg !5533

if.else26:                                        ; preds = %if.end20
  %freq27 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %cp.0, i64 0, i32 3, !dbg !5536
  %16 = load i32, i32* %freq27, align 8, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %16, metadata !5466, metadata !DIExpression()), !dbg !5478
  %freq28 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %another_allocno.3, i64 0, i32 8, !dbg !5537
  %17 = load i32, i32* %freq28, align 4, !dbg !5537
  call void @llvm.dbg.value(metadata i32 %17, metadata !5465, metadata !DIExpression()), !dbg !5478
  %cmp29 = icmp eq i32 %17, 0, !dbg !5538
  %spec.select = select i1 %cmp29, i32 1, i32 %17, !dbg !5540
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !5465, metadata !DIExpression()), !dbg !5478
  %18 = load i32, i32* %divisor, align 4, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %18, metadata !5468, metadata !DIExpression()), !dbg !5478
  %mul = mul nsw i32 %spec.select, %18, !dbg !5542
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5467, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8 0, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %13, metadata !5462, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5478
  br i1 %tobool56, label %if.else26.split.us, label %if.else26.if.else26.split_crit_edge, !dbg !5543

if.else26.if.else26.split_crit_edge:              ; preds = %if.else26
  %19 = sext i32 %13 to i64, !dbg !5543
  br label %for.cond32, !dbg !5543

if.else26.split.us:                               ; preds = %if.else26
  %20 = sext i32 %13 to i64, !dbg !5543
  br label %for.cond32.us, !dbg !5543

for.cond32.us:                                    ; preds = %for.inc.us, %if.else26.split.us
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.inc.us ], [ %20, %if.else26.split.us ], !dbg !5544
  %cont_p.0.us = phi i8 [ %cont_p.1.us, %for.inc.us ], [ 0, %if.else26.split.us ], !dbg !5544
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, -1, !dbg !5545
  call void @llvm.dbg.value(metadata i32 undef, metadata !5462, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5478
  call void @llvm.dbg.value(metadata i8 %cont_p.0.us, metadata !5472, metadata !DIExpression()), !dbg !5478
  %cmp33.us = icmp sgt i64 %indvars.iv5, 0, !dbg !5546
  br i1 %cmp33.us, label %for.body34.us, label %if.end62.loopexit.us-lcssa.us, !dbg !5547

for.body34.us:                                    ; preds = %for.cond32.us
  %arrayidx38.us = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom9, i64 %indvars.iv.next6, !dbg !5548
  %21 = load i16, i16* %arrayidx38.us, align 2, !dbg !5548
  %idxprom41.us = sext i16 %21 to i64, !dbg !5549
  %arrayidx42.us = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom, i64 %idxprom41.us, !dbg !5549
  %22 = load i16, i16* %arrayidx42.us, align 2, !dbg !5549
  %cmp44.us = icmp slt i16 %22, 0, !dbg !5550
  br i1 %cmp44.us, label %for.inc.us, label %if.end47.us, !dbg !5552

if.end47.us:                                      ; preds = %for.body34.us
  %arrayidx49.us = getelementptr inbounds i32, i32* %15, i64 %indvars.iv.next6, !dbg !5553
  %23 = load i32, i32* %arrayidx49.us, align 4, !dbg !5553
  %mul50.us = mul nsw i32 %23, %16, !dbg !5554
  %div51.us = sdiv i32 %mul50.us, %mul, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %div51.us, metadata !5463, metadata !DIExpression()), !dbg !5478
  %cmp52.us = icmp eq i32 %div51.us, 0, !dbg !5556
  br i1 %cmp52.us, label %for.inc.us, label %if.end55.us, !dbg !5558

if.end55.us:                                      ; preds = %if.end47.us
  call void @llvm.dbg.value(metadata i8 1, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 %div51.us, metadata !5463, metadata !DIExpression()), !dbg !5478
  %idxprom60.us = sext i16 %22 to i64, !dbg !5559
  %arrayidx61.us = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %idxprom60.us, !dbg !5559
  %24 = load i32, i32* %arrayidx61.us, align 4, !dbg !5560
  %add.us = add nsw i32 %24, %div51.us, !dbg !5560
  store i32 %add.us, i32* %arrayidx61.us, align 4, !dbg !5560
  br label %for.inc.us, !dbg !5561

for.inc.us:                                       ; preds = %if.end55.us, %if.end47.us, %for.body34.us
  %cont_p.1.us = phi i8 [ 1, %if.end55.us ], [ %cont_p.0.us, %for.body34.us ], [ %cont_p.0.us, %if.end47.us ], !dbg !5562
  call void @llvm.dbg.value(metadata i8 %cont_p.1.us, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 undef, metadata !5462, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5478
  br label %for.cond32.us, !dbg !5563, !llvm.loop !5564

if.end62.loopexit.us-lcssa.us:                    ; preds = %for.cond32.us
  %cont_p.0.us.lcssa = phi i8 [ %cont_p.0.us, %for.cond32.us ], !dbg !5544
  call void @llvm.dbg.value(metadata i8 %cont_p.0.us.lcssa, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8 %cont_p.0.us.lcssa, metadata !5472, metadata !DIExpression()), !dbg !5478
  br label %if.end62.loopexit, !dbg !5566

for.cond32:                                       ; preds = %for.inc, %if.else26.if.else26.split_crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %19, %if.else26.if.else26.split_crit_edge ], !dbg !5544
  %cont_p.0 = phi i8 [ %cont_p.1, %for.inc ], [ 0, %if.else26.if.else26.split_crit_edge ], !dbg !5544
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5545
  call void @llvm.dbg.value(metadata i32 undef, metadata !5462, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5478
  call void @llvm.dbg.value(metadata i8 %cont_p.0, metadata !5472, metadata !DIExpression()), !dbg !5478
  %cmp33 = icmp sgt i64 %indvars.iv, 0, !dbg !5546
  br i1 %cmp33, label %for.body34, label %if.end62.loopexit.us-lcssa, !dbg !5547

for.body34:                                       ; preds = %for.cond32
  %arrayidx38 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom9, i64 %indvars.iv.next, !dbg !5548
  %25 = load i16, i16* %arrayidx38, align 2, !dbg !5548
  %idxprom41 = sext i16 %25 to i64, !dbg !5549
  %arrayidx42 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom, i64 %idxprom41, !dbg !5549
  %26 = load i16, i16* %arrayidx42, align 2, !dbg !5549
  %cmp44 = icmp slt i16 %26, 0, !dbg !5550
  br i1 %cmp44, label %for.inc, label %if.end47, !dbg !5552

if.end47:                                         ; preds = %for.body34
  %arrayidx49 = getelementptr inbounds i32, i32* %15, i64 %indvars.iv.next, !dbg !5553
  %27 = load i32, i32* %arrayidx49, align 4, !dbg !5553
  %mul50 = mul nsw i32 %27, %16, !dbg !5554
  %div51 = sdiv i32 %mul50, %mul, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %div51, metadata !5463, metadata !DIExpression()), !dbg !5478
  %cmp52 = icmp eq i32 %div51, 0, !dbg !5556
  br i1 %cmp52, label %for.inc, label %if.end55, !dbg !5558

if.end55:                                         ; preds = %if.end47
  call void @llvm.dbg.value(metadata i8 1, metadata !5472, metadata !DIExpression()), !dbg !5478
  %idxprom60 = sext i16 %26 to i64, !dbg !5559
  %arrayidx61 = getelementptr inbounds [53 x i32], [53 x i32]* @assign_hard_reg.full_costs, i64 0, i64 %idxprom60, !dbg !5559
  %28 = load i32, i32* %arrayidx61, align 4, !dbg !5560
  %add = sub i32 %28, %div51, !dbg !5560
  store i32 %add, i32* %arrayidx61, align 4, !dbg !5560
  br label %for.inc, !dbg !5561

for.inc:                                          ; preds = %if.end47, %for.body34, %if.end55
  %cont_p.1 = phi i8 [ 1, %if.end55 ], [ %cont_p.0, %for.body34 ], [ %cont_p.0, %if.end47 ], !dbg !5562
  call void @llvm.dbg.value(metadata i8 %cont_p.1, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i32 undef, metadata !5462, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5478
  br label %for.cond32, !dbg !5563, !llvm.loop !5564

if.end62.loopexit.us-lcssa:                       ; preds = %for.cond32
  %cont_p.0.lcssa7 = phi i8 [ %cont_p.0, %for.cond32 ], !dbg !5544
  call void @llvm.dbg.value(metadata i8 %cont_p.0.lcssa7, metadata !5472, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.value(metadata i8 %cont_p.0.lcssa7, metadata !5472, metadata !DIExpression()), !dbg !5478
  br label %if.end62.loopexit, !dbg !5566

if.end62.loopexit:                                ; preds = %if.end62.loopexit.us-lcssa.us, %if.end62.loopexit.us-lcssa
  %cont_p.0.lcssa = phi i8 [ %cont_p.0.lcssa7, %if.end62.loopexit.us-lcssa ], [ %cont_p.0.us.lcssa, %if.end62.loopexit.us-lcssa.us ], !dbg !5544
  call void @llvm.dbg.value(metadata i8 %cont_p.0.lcssa, metadata !5472, metadata !DIExpression()), !dbg !5478
  br label %if.end62, !dbg !5566

if.end62:                                         ; preds = %if.end20.if.end62_crit_edge, %if.end62.loopexit
  %29 = phi i32 [ %.pre, %if.end20.if.end62_crit_edge ], [ %18, %if.end62.loopexit ], !dbg !5534
  %cont_p.2 = phi i8 [ 1, %if.end20.if.end62_crit_edge ], [ %cont_p.0.lcssa, %if.end62.loopexit ], !dbg !5567
  call void @llvm.dbg.value(metadata i8 %cont_p.2, metadata !5472, metadata !DIExpression()), !dbg !5478
  %tobool64 = icmp ne i8 %cont_p.2, 0, !dbg !5566
  call void @llvm.dbg.value(metadata i32 %29, metadata !5468, metadata !DIExpression()), !dbg !5478
  %cmp65 = icmp slt i32 %29, 257, !dbg !5568
  %or.cond = and i1 %tobool64, %cmp65, !dbg !5569
  br i1 %or.cond, label %if.then67, label %for.inc70, !dbg !5569

if.then67:                                        ; preds = %if.end62
  call void @llvm.dbg.value(metadata i32 %29, metadata !5468, metadata !DIExpression()), !dbg !5478
  %mul68 = shl nsw i32 %29, 2, !dbg !5570
  call fastcc void @queue_update_cost(%struct.ira_allocno* %another_allocno.3, i32 %mul68) #8, !dbg !5571
  br label %for.inc70, !dbg !5571

for.inc70:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.end7, %if.end62, %if.then67
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %next_cp.3, metadata !5476, metadata !DIExpression()), !dbg !5478
  br label %for.cond, !dbg !5572, !llvm.loop !5573

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !5575
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5575
  ret void, !dbg !5575
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %hard_regno, i32 %mode, i64 %hard_regset) unnamed_addr #0 !dbg !5576 {
entry:
  call void @llvm.dbg.value(metadata i32 %hard_regno, metadata !5580, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5581, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i64 %hard_regset, metadata !5582, metadata !DIExpression()), !dbg !5584
  %idxprom = sext i32 %hard_regno to i64, !dbg !5585
  %idxprom1 = zext i32 %mode to i64, !dbg !5585
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !5585
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !5585
  %conv = zext i8 %0 to i32, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5583, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5584
  br label %for.cond, !dbg !5587

for.cond:                                         ; preds = %for.inc, %entry
  %i.0.in = phi i32 [ %conv, %entry ], [ %i.0, %for.inc ]
  %i.0 = add nsw i32 %i.0.in, -1, !dbg !5588
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5583, metadata !DIExpression()), !dbg !5584
  %cmp = icmp sgt i32 %i.0.in, 0, !dbg !5589
  br i1 %cmp, label %for.body, label %cleanup, !dbg !5591

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, %hard_regno, !dbg !5592
  %sh_prom = zext i32 %add to i64, !dbg !5592
  %shl = shl i64 1, %sh_prom, !dbg !5592
  %and = and i64 %shl, %hard_regset, !dbg !5592
  %tobool = icmp eq i64 %and, 0, !dbg !5592
  br i1 %tobool, label %for.inc, label %cleanup, !dbg !5594

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5583, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5584
  br label %for.cond, !dbg !5595, !llvm.loop !5596

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !5584
  ret i8 %retval.0, !dbg !5598
}

; Function Attrs: nounwind uwtable
define internal i32 @allocno_cost_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !5599 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !5601, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !5602, metadata !DIExpression()), !dbg !5607
  %0 = bitcast i8* %v1p to %struct.ira_allocno**, !dbg !5608
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %0, align 8, !dbg !5609
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !5603, metadata !DIExpression()), !dbg !5607
  %2 = bitcast i8* %v2p to %struct.ira_allocno**, !dbg !5610
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %2, align 8, !dbg !5611
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5604, metadata !DIExpression()), !dbg !5607
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 13, !dbg !5612
  %4 = load i32, i32* %updated_memory_cost, align 8, !dbg !5612
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 11, !dbg !5613
  %5 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !5613
  %sub = sub nsw i32 %4, %5, !dbg !5614
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5605, metadata !DIExpression()), !dbg !5607
  %updated_memory_cost1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 13, !dbg !5615
  %6 = load i32, i32* %updated_memory_cost1, align 8, !dbg !5615
  %updated_cover_class_cost2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 11, !dbg !5616
  %7 = load i32, i32* %updated_cover_class_cost2, align 8, !dbg !5616
  %sub3 = sub nsw i32 %6, %7, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %sub3, metadata !5606, metadata !DIExpression()), !dbg !5607
  %tobool = icmp eq i32 %sub, %sub3, !dbg !5618
  br i1 %tobool, label %if.end, label %if.then, !dbg !5620

if.then:                                          ; preds = %entry
  %sub5 = sub nsw i32 %sub, %sub3, !dbg !5621
  br label %cleanup, !dbg !5622

if.end:                                           ; preds = %entry
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !5623
  %8 = load i32, i32* %num, align 8, !dbg !5623
  %num6 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !5624
  %9 = load i32, i32* %num6, align 8, !dbg !5624
  %sub7 = sub nsw i32 %8, %9, !dbg !5625
  br label %cleanup, !dbg !5626

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub5, %if.then ], [ %sub7, %if.end ], !dbg !5607
  ret i32 %retval.0, !dbg !5627
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** %vec_, %struct.ira_allocno* %obj_) unnamed_addr #0 !dbg !5628 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !5633, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %obj_, metadata !5634, metadata !DIExpression()), !dbg !5635
  %call = tail call fastcc i32 @VEC_ira_allocno_t_heap_reserve(%struct.VEC_ira_allocno_t_heap** %vec_, i32 1) #8, !dbg !5636
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !5636
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !5636
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5636

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %0, i64 0, i32 0, !dbg !5636
  br label %cond.end, !dbg !5636

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_allocno_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5636
  %call1 = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_quick_push(%struct.VEC_ira_allocno_t_base* %cond, %struct.ira_allocno* %obj_) #8, !dbg !5636
  ret %struct.ira_allocno** %call1, !dbg !5636
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_coalesced_allocno(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !5637 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !5639, metadata !DIExpression()), !dbg !5641
  br label %for.cond, !dbg !5642

for.cond:                                         ; preds = %if.end, %entry
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %entry ], [ %a.0, %if.end ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !5644
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5644
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5640, metadata !DIExpression()), !dbg !5641
  tail call void @ira_print_expanded_allocno(%struct.ira_allocno* %a.0) #6, !dbg !5645
  %cmp = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !5648
  br i1 %cmp, label %for.end, label %if.end, !dbg !5650

if.end:                                           ; preds = %for.cond
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5651
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5652
  br label %for.cond, !dbg !5653, !llvm.loop !5654

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5657
}

declare dso_local void @ira_free_allocno_updated_costs(%struct.ira_allocno*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @get_next_update_cost(%struct.ira_allocno** %allocno, i32* %divisor) unnamed_addr #0 !dbg !5658 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %allocno, metadata !5662, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i32* %divisor, metadata !5663, metadata !DIExpression()), !dbg !5665
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** @update_cost_queue, align 8, !dbg !5666
  %cmp = icmp eq %struct.ira_allocno* %0, null, !dbg !5668
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5669

if.end:                                           ; preds = %entry
  %1 = ptrtoint %struct.ira_allocno* %0 to i64, !dbg !5669
  %2 = bitcast %struct.ira_allocno** %allocno to i64*, !dbg !5670
  store i64 %1, i64* %2, align 8, !dbg !5670
  %3 = load %struct.update_cost_queue_elem*, %struct.update_cost_queue_elem** @update_cost_queue_elems, align 8, !dbg !5671
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 0, !dbg !5672
  %4 = load i32, i32* %num, align 8, !dbg !5672
  %idxprom = sext i32 %4 to i64, !dbg !5671
  call void @llvm.dbg.value(metadata %struct.update_cost_queue_elem* undef, metadata !5664, metadata !DIExpression()), !dbg !5665
  %divisor1 = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %3, i64 %idxprom, i32 1, !dbg !5673
  %5 = load i32, i32* %divisor1, align 4, !dbg !5673
  store i32 %5, i32* %divisor, align 4, !dbg !5674
  %next = getelementptr inbounds %struct.update_cost_queue_elem, %struct.update_cost_queue_elem* %3, i64 %idxprom, i32 2, !dbg !5675
  %6 = bitcast %struct.ira_allocno** %next to i64*, !dbg !5675
  %7 = load i64, i64* %6, align 8, !dbg !5675
  store i64 %7, i64* bitcast (%struct.ira_allocno** @update_cost_queue to i64*), align 8, !dbg !5676
  br label %cleanup, !dbg !5677

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i8 [ 1, %if.end ], [ 0, %entry ], !dbg !5665
  ret i8 %retval.0, !dbg !5678
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_heap_reserve(%struct.VEC_ira_allocno_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5679 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !5683, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 1, metadata !5684, metadata !DIExpression()), !dbg !5686
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !5687
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !5687
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5687

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %0, i64 0, i32 0, !dbg !5687
  br label %cond.end, !dbg !5687

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_ira_allocno_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5687
  %call = tail call fastcc i32 @VEC_ira_allocno_t_base_space(%struct.VEC_ira_allocno_t_base* %cond, i32 1) #8, !dbg !5687
  %tobool1 = icmp eq i32 %call, 0, !dbg !5687
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5685, metadata !DIExpression()), !dbg !5686
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5687

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_ira_allocno_t_heap** %vec_ to i8**, !dbg !5688
  %2 = load i8*, i8** %1, align 8, !dbg !5688
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5688
  store i8* %call3, i8** %1, align 8, !dbg !5688
  br label %if.end, !dbg !5688

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5687
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno** @VEC_ira_allocno_t_base_quick_push(%struct.VEC_ira_allocno_t_base* %vec_, %struct.ira_allocno* %obj_) unnamed_addr #0 !dbg !5690 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !5695, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %obj_, metadata !5696, metadata !DIExpression()), !dbg !5698
  %num1 = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !5699
  %0 = load i32, i32* %num1, align 8, !dbg !5699
  %inc = add i32 %0, 1, !dbg !5699
  store i32 %inc, i32* %num1, align 8, !dbg !5699
  %idxprom = zext i32 %0 to i64, !dbg !5699
  %arrayidx = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5699
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %arrayidx, metadata !5697, metadata !DIExpression()), !dbg !5698
  store %struct.ira_allocno* %obj_, %struct.ira_allocno** %arrayidx, align 8, !dbg !5699
  ret %struct.ira_allocno** %arrayidx, !dbg !5699
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_base_space(%struct.VEC_ira_allocno_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5700 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !5704, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.value(metadata i32 1, metadata !5705, metadata !DIExpression()), !dbg !5706
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !5707
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5707

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 1, !dbg !5707
  %0 = load i32, i32* %alloc, align 4, !dbg !5707
  %num = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !5707
  %1 = load i32, i32* %num, align 8, !dbg !5707
  %cmp1 = icmp ne i32 %0, %1, !dbg !5707
  %phitmp = zext i1 %cmp1 to i32, !dbg !5707
  br label %cond.end, !dbg !5707

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5707
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local void @ira_print_expanded_allocno(%struct.ira_allocno*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @copy_freq_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !5708 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !5710, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !5711, metadata !DIExpression()), !dbg !5716
  %0 = bitcast i8* %v1p to %struct.ira_allocno_copy**, !dbg !5717
  %1 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %0, align 8, !dbg !5718
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %1, metadata !5712, metadata !DIExpression()), !dbg !5716
  %2 = bitcast i8* %v2p to %struct.ira_allocno_copy**, !dbg !5719
  %3 = load %struct.ira_allocno_copy*, %struct.ira_allocno_copy** %2, align 8, !dbg !5720
  call void @llvm.dbg.value(metadata %struct.ira_allocno_copy* %3, metadata !5713, metadata !DIExpression()), !dbg !5716
  %freq = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %1, i64 0, i32 3, !dbg !5721
  %4 = load i32, i32* %freq, align 8, !dbg !5721
  call void @llvm.dbg.value(metadata i32 %4, metadata !5714, metadata !DIExpression()), !dbg !5716
  %freq1 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %3, i64 0, i32 3, !dbg !5722
  %5 = load i32, i32* %freq1, align 8, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %5, metadata !5715, metadata !DIExpression()), !dbg !5716
  %tobool = icmp eq i32 %5, %4, !dbg !5723
  br i1 %tobool, label %if.end, label %if.then, !dbg !5725

if.then:                                          ; preds = %entry
  %sub2 = sub nsw i32 %5, %4, !dbg !5726
  br label %cleanup, !dbg !5727

if.end:                                           ; preds = %entry
  %num = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %1, i64 0, i32 0, !dbg !5728
  %6 = load i32, i32* %num, align 8, !dbg !5728
  %num3 = getelementptr inbounds %struct.ira_allocno_copy, %struct.ira_allocno_copy* %3, i64 0, i32 0, !dbg !5729
  %7 = load i32, i32* %num3, align 8, !dbg !5729
  %sub4 = sub nsw i32 %6, %7, !dbg !5730
  br label %cleanup, !dbg !5731

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub2, %if.then ], [ %sub4, %if.end ], !dbg !5716
  ret i32 %retval.0, !dbg !5732
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @coalesced_allocno_conflict_p(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2, i8 zeroext %reload_p) unnamed_addr #5 !dbg !5733 {
entry:
  %conflict_allocno = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !5737, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !5738, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i8 %reload_p, metadata !5739, metadata !DIExpression()), !dbg !5743
  %0 = bitcast %struct.ira_allocno** %conflict_allocno to i8*, !dbg !5744
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5744
  %1 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !5745
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5745
  %.b4 = load i1, i1* @allocno_coalesced_p, align 1, !dbg !5746
  br i1 %.b4, label %if.then, label %if.end3, !dbg !5748

if.then:                                          ; preds = %entry
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !5749
  tail call void @bitmap_clear(%struct.bitmap_head_def* %2) #6, !dbg !5751
  br label %for.cond, !dbg !5752

for.cond:                                         ; preds = %for.inc, %if.then
  %a1.pn = phi %struct.ira_allocno* [ %a1, %if.then ], [ %a.0, %for.inc ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1.pn, i64 0, i32 19, !dbg !5754
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5754
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5740, metadata !DIExpression()), !dbg !5743
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !5755
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 0, !dbg !5758
  %4 = load i32, i32* %num, align 8, !dbg !5758
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %4) #6, !dbg !5759
  %cmp = icmp eq %struct.ira_allocno* %a.0, %a1, !dbg !5760
  br i1 %cmp, label %if.end3.loopexit, label %for.inc, !dbg !5762

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !5763, !llvm.loop !5764

if.end3.loopexit:                                 ; preds = %for.cond
  br label %if.end3, !dbg !5767

if.end3:                                          ; preds = %entry, %if.end3.loopexit
  %tobool6 = icmp eq i8 %reload_p, 0, !dbg !5769
  %next_coalesced_allocno8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 19, !dbg !5773
  %5 = bitcast %struct.ira_allocno** %next_coalesced_allocno8 to i64*, !dbg !5773
  %6 = bitcast %struct.ira_allocno** %conflict_allocno to i64*, !dbg !5773
  br i1 %tobool6, label %if.end3.split.us, label %if.end3.if.end3.split_crit_edge, !dbg !5767

if.end3.if.end3.split_crit_edge:                  ; preds = %if.end3
  br label %for.cond5, !dbg !5767

if.end3.split.us:                                 ; preds = %if.end3
  br label %for.cond5.us, !dbg !5767

for.cond5.us:                                     ; preds = %for.inc37.us, %if.end3.split.us
  %a2.pn.us = phi %struct.ira_allocno* [ %a2, %if.end3.split.us ], [ %a.1.us, %for.inc37.us ]
  %a.1.in.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2.pn.us, i64 0, i32 19, !dbg !5776
  %a.1.us = load %struct.ira_allocno*, %struct.ira_allocno** %a.1.in.us, align 8, !dbg !5776
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1.us, metadata !5740, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !5742, metadata !DIExpression(DW_OP_deref)), !dbg !5743
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %a.1.us) #8, !dbg !5777
  br label %for.cond20.us, !dbg !5777

for.cond20.us:                                    ; preds = %for.inc30.us, %for.cond5.us
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_allocno, metadata !5741, metadata !DIExpression(DW_OP_deref)), !dbg !5743
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !5742, metadata !DIExpression(DW_OP_deref)), !dbg !5743
  %call21.us = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_allocno) #8, !dbg !5780
  %tobool22.us = icmp eq i8 %call21.us, 0, !dbg !5777
  br i1 %tobool22.us, label %if.end32.loopexit.us, label %for.body.us, !dbg !5777

for.body.us:                                      ; preds = %for.cond20.us
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !5782
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !5741, metadata !DIExpression()), !dbg !5743
  %cmp23.us = icmp eq %struct.ira_allocno* %7, %a1, !dbg !5784
  br i1 %cmp23.us, label %cleanup.loopexit.us-lcssa.us, label %lor.lhs.false.us, !dbg !5785

lor.lhs.false.us:                                 ; preds = %for.body.us
  %.b = load i1, i1* @allocno_coalesced_p, align 1, !dbg !5786
  br i1 %.b, label %land.lhs.true.us, label %for.inc30.us, !dbg !5787

land.lhs.true.us:                                 ; preds = %lor.lhs.false.us
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !5788
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !5741, metadata !DIExpression()), !dbg !5743
  %num25.us = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 0, !dbg !5789
  %9 = load i32, i32* %num25.us, align 8, !dbg !5789
  %call26.us = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !5790
  %tobool27.us = icmp eq i32 %call26.us, 0, !dbg !5790
  br i1 %tobool27.us, label %for.inc30.us, label %cleanup.loopexit.us-lcssa.us, !dbg !5791

for.inc30.us:                                     ; preds = %lor.lhs.false.us, %land.lhs.true.us
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !5742, metadata !DIExpression(DW_OP_deref)), !dbg !5743
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !5780
  br label %for.cond20.us, !dbg !5780, !llvm.loop !5792

for.inc37.us:                                     ; preds = %if.end32.loopexit.us
  br label %for.cond5.us, !dbg !5794, !llvm.loop !5795

if.end32.loopexit.us:                             ; preds = %for.cond20.us
  %cmp33.us = icmp eq %struct.ira_allocno* %a.1.us, %a2, !dbg !5798
  br i1 %cmp33.us, label %cleanup.loopexit3.us-lcssa.us, label %for.inc37.us, !dbg !5800

cleanup.loopexit.us-lcssa.us:                     ; preds = %land.lhs.true.us, %for.body.us
  br label %cleanup, !dbg !5801

cleanup.loopexit3.us-lcssa.us:                    ; preds = %if.end32.loopexit.us
  br label %cleanup.loopexit3, !dbg !5801

for.cond5:                                        ; preds = %for.inc37, %if.end3.if.end3.split_crit_edge
  %a2.pn = phi %struct.ira_allocno* [ %a2, %if.end3.if.end3.split_crit_edge ], [ %a.1, %for.inc37 ]
  %a.1.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2.pn, i64 0, i32 19, !dbg !5776
  %a.1 = load %struct.ira_allocno*, %struct.ira_allocno** %a.1.in, align 8, !dbg !5776
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1, metadata !5740, metadata !DIExpression()), !dbg !5743
  %10 = load i64, i64* %5, align 8, !dbg !5802
  br label %for.cond9, !dbg !5803

for.cond9:                                        ; preds = %for.inc17, %for.cond5
  %storemerge = phi i64 [ %10, %for.cond5 ], [ %14, %for.inc17 ], !dbg !5773
  %.in = phi i64 [ %10, %for.cond5 ], [ %14, %for.inc17 ]
  store i64 %storemerge, i64* %6, align 8, !dbg !5773
  %11 = inttoptr i64 %.in to %struct.ira_allocno*, !dbg !5804
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %11, metadata !5741, metadata !DIExpression()), !dbg !5743
  %call10 = call fastcc zeroext i8 @allocnos_have_intersected_live_ranges_p(%struct.ira_allocno* %a.1, %struct.ira_allocno* %11) #8, !dbg !5808
  %tobool11 = icmp eq i8 %call10, 0, !dbg !5808
  br i1 %tobool11, label %if.end13, label %cleanup.loopexit1.us-lcssa, !dbg !5809

if.end13:                                         ; preds = %for.cond9
  %12 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !5810
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !5741, metadata !DIExpression()), !dbg !5743
  %cmp14 = icmp eq %struct.ira_allocno* %12, %a1, !dbg !5812
  br i1 %cmp14, label %if.end32.loopexit2, label %for.inc17, !dbg !5813

for.inc17:                                        ; preds = %if.end13
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %12, metadata !5741, metadata !DIExpression()), !dbg !5743
  %next_coalesced_allocno18 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %12, i64 0, i32 19, !dbg !5814
  %13 = bitcast %struct.ira_allocno** %next_coalesced_allocno18 to i64*, !dbg !5814
  %14 = load i64, i64* %13, align 8, !dbg !5814
  br label %for.cond9, !dbg !5815, !llvm.loop !5816

if.end32.loopexit2:                               ; preds = %if.end13
  %cmp33 = icmp eq %struct.ira_allocno* %a.1, %a2, !dbg !5798
  br i1 %cmp33, label %cleanup.loopexit3.us-lcssa, label %for.inc37, !dbg !5800

for.inc37:                                        ; preds = %if.end32.loopexit2
  br label %for.cond5, !dbg !5794, !llvm.loop !5795

cleanup.loopexit1.us-lcssa:                       ; preds = %for.cond9
  br label %cleanup, !dbg !5801

cleanup.loopexit3.us-lcssa:                       ; preds = %if.end32.loopexit2
  br label %cleanup.loopexit3, !dbg !5801

cleanup.loopexit3:                                ; preds = %cleanup.loopexit3.us-lcssa.us, %cleanup.loopexit3.us-lcssa
  br label %cleanup, !dbg !5801

cleanup:                                          ; preds = %cleanup.loopexit3, %cleanup.loopexit1.us-lcssa, %cleanup.loopexit.us-lcssa.us
  %retval.0 = phi i8 [ 1, %cleanup.loopexit.us-lcssa.us ], [ 1, %cleanup.loopexit1.us-lcssa ], [ 0, %cleanup.loopexit3 ], !dbg !5743
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !5801
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5801
  ret i8 %retval.0, !dbg !5801
}

; Function Attrs: nounwind uwtable
define internal fastcc void @merge_allocnos(%struct.ira_allocno* %a1, %struct.ira_allocno* %a2) unnamed_addr #5 !dbg !5819 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a1, metadata !5823, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !5824, metadata !DIExpression()), !dbg !5829
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a1, i64 0, i32 18, !dbg !5830
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !5830
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %0, metadata !5826, metadata !DIExpression()), !dbg !5829
  %first_coalesced_allocno1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2, i64 0, i32 18, !dbg !5831
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno1, align 8, !dbg !5831
  %cmp = icmp eq %struct.ira_allocno* %0, %1, !dbg !5833
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5834

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a2, metadata !5827, metadata !DIExpression()), !dbg !5829
  br label %for.cond, !dbg !5835

for.cond:                                         ; preds = %for.inc, %if.end
  %a2.pn = phi %struct.ira_allocno* [ %a2, %if.end ], [ %a.0, %for.inc ]
  %last.0 = phi %struct.ira_allocno* [ %a2, %if.end ], [ %a.0, %for.inc ], !dbg !5837
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a2.pn, i64 0, i32 19, !dbg !5837
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5837
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %last.0, metadata !5827, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5825, metadata !DIExpression()), !dbg !5829
  %first_coalesced_allocno2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 18, !dbg !5838
  store %struct.ira_allocno* %0, %struct.ira_allocno** %first_coalesced_allocno2, align 8, !dbg !5841
  %cmp3 = icmp eq %struct.ira_allocno* %a.0, %a2, !dbg !5842
  br i1 %cmp3, label %for.end, label %for.inc, !dbg !5844

for.inc:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5827, metadata !DIExpression()), !dbg !5829
  br label %for.cond, !dbg !5845, !llvm.loop !5846

for.end:                                          ; preds = %for.cond
  %last.0.lcssa = phi %struct.ira_allocno* [ %last.0, %for.cond ], !dbg !5837
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %last.0.lcssa, metadata !5827, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %last.0.lcssa, metadata !5827, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %last.0.lcssa, metadata !5827, metadata !DIExpression()), !dbg !5829
  %next_coalesced_allocno7 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 19, !dbg !5849
  %2 = bitcast %struct.ira_allocno** %next_coalesced_allocno7 to i64*, !dbg !5849
  %3 = load i64, i64* %2, align 8, !dbg !5849
  store %struct.ira_allocno* %a2, %struct.ira_allocno** %next_coalesced_allocno7, align 8, !dbg !5850
  %next_coalesced_allocno9 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %last.0.lcssa, i64 0, i32 19, !dbg !5851
  %4 = bitcast %struct.ira_allocno** %next_coalesced_allocno9 to i64*, !dbg !5852
  store i64 %3, i64* %4, align 8, !dbg !5852
  br label %cleanup.cont, !dbg !5853

cleanup.cont:                                     ; preds = %for.end, %entry
  ret void, !dbg !5853
}

declare dso_local %struct.bitmap_head_def* @regstat_get_setjmp_crosses() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @slot_coalesced_allocno_live_ranges_intersect_p(%struct.ira_allocno* %allocno, i32 %n) unnamed_addr #5 !dbg !5854 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !5858, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.value(metadata i32 %n, metadata !5859, metadata !DIExpression()), !dbg !5861
  %idxprom = sext i32 %n to i64, !dbg !5862
  br label %for.cond, !dbg !5867

for.cond:                                         ; preds = %for.inc, %entry
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %entry ], [ %a.0, %for.inc ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !5868
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5868
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5860, metadata !DIExpression()), !dbg !5861
  %0 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @slot_coalesced_allocnos_live_ranges, align 8, !dbg !5869
  %arrayidx = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %0, i64 %idxprom, !dbg !5869
  %1 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %arrayidx, align 8, !dbg !5869
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 20, !dbg !5870
  %2 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !5870
  %call = tail call zeroext i8 @ira_allocno_live_ranges_intersect_p(%struct.ira_allocno_live_range* %1, %struct.ira_allocno_live_range* %2) #6, !dbg !5871
  %tobool = icmp eq i8 %call, 0, !dbg !5871
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5872

if.end:                                           ; preds = %for.cond
  %cmp = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !5873
  br i1 %cmp, label %cleanup, label %for.inc, !dbg !5875

for.inc:                                          ; preds = %if.end
  br label %for.cond, !dbg !5876, !llvm.loop !5877

cleanup:                                          ; preds = %for.cond, %if.end
  %retval.0 = phi i8 [ 1, %for.cond ], [ 0, %if.end ], !dbg !5861
  ret i8 %retval.0, !dbg !5880
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_slot_coalesced_allocno_live_ranges(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !5881 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !5883, metadata !DIExpression()), !dbg !5887
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 41, !dbg !5888
  %0 = load i32, i32* %temp, align 8, !dbg !5888
  call void @llvm.dbg.value(metadata i32 %0, metadata !5884, metadata !DIExpression()), !dbg !5887
  %idxprom = sext i32 %0 to i64, !dbg !5889
  br label %for.cond, !dbg !5893

for.cond:                                         ; preds = %for.inc, %entry
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %entry ], [ %a.0, %for.inc ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !5894
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !5894
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !5885, metadata !DIExpression()), !dbg !5887
  %live_ranges = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 20, !dbg !5895
  %1 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %live_ranges, align 8, !dbg !5895
  %call = tail call %struct.ira_allocno_live_range* @ira_copy_allocno_live_range_list(%struct.ira_allocno_live_range* %1) #6, !dbg !5896
  call void @llvm.dbg.value(metadata %struct.ira_allocno_live_range* %call, metadata !5886, metadata !DIExpression()), !dbg !5887
  %2 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @slot_coalesced_allocnos_live_ranges, align 8, !dbg !5897
  %arrayidx = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %2, i64 %idxprom, !dbg !5897
  %3 = load %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %arrayidx, align 8, !dbg !5897
  %call1 = tail call %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range* %3, %struct.ira_allocno_live_range* %call) #6, !dbg !5898
  %4 = load %struct.ira_allocno_live_range**, %struct.ira_allocno_live_range*** @slot_coalesced_allocnos_live_ranges, align 8, !dbg !5899
  %arrayidx3 = getelementptr inbounds %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range** %4, i64 %idxprom, !dbg !5899
  store %struct.ira_allocno_live_range* %call1, %struct.ira_allocno_live_range** %arrayidx3, align 8, !dbg !5900
  %cmp = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !5901
  br i1 %cmp, label %for.end, label %for.inc, !dbg !5903

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !5904, !llvm.loop !5905

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5908
}

declare dso_local void @ira_finish_allocno_live_range_list(%struct.ira_allocno_live_range*) local_unnamed_addr #2

declare dso_local zeroext i8 @ira_allocno_live_ranges_intersect_p(%struct.ira_allocno_live_range*, %struct.ira_allocno_live_range*) local_unnamed_addr #2

declare dso_local %struct.ira_allocno_live_range* @ira_copy_allocno_live_range_list(%struct.ira_allocno_live_range*) local_unnamed_addr #2

declare dso_local %struct.ira_allocno_live_range* @ira_merge_allocno_live_ranges(%struct.ira_allocno_live_range*, %struct.ira_allocno_live_range*) local_unnamed_addr #2

declare dso_local void @df_ref_change_reg_with_loc(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !5909 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5916, metadata !DIExpression()), !dbg !5917
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5918
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5918
  %0 = load i32, i32* %rt_uint, align 8, !dbg !5918
  ret i32 %0, !dbg !5919
}

declare dso_local void @mark_home_live(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @REG_N_REFS(i32 %regno) unnamed_addr #0 !dbg !5920 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !5925
  %idxprom = sext i32 %regno to i64, !dbg !5925
  %refs = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %0, i64 %idxprom, i32 1, !dbg !5926
  %1 = load i32, i32* %refs, align 4, !dbg !5926
  ret i32 %1, !dbg !5927
}

declare dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ira_allocno_t_heap* @VEC_ira_allocno_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5928 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5932, metadata !DIExpression()), !dbg !5933
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5934
  %0 = bitcast i8* %call to %struct.VEC_ira_allocno_t_heap*, !dbg !5934
  ret %struct.VEC_ira_allocno_t_heap* %0, !dbg !5934
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_coloring() unnamed_addr #5 !dbg !5935 {
entry:
  %call = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !5936
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !5937
  %0 = load i32, i32* @ira_allocnos_num, align 4, !dbg !5938
  %conv = sext i32 %0 to i64, !dbg !5938
  %mul = shl nsw i64 %conv, 3, !dbg !5939
  %call1 = tail call i8* @ira_allocate(i64 %mul) #6, !dbg !5940
  store i8* %call1, i8** bitcast (%struct.ira_allocno*** @allocnos_for_spilling to i8**), align 8, !dbg !5941
  %call2 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i64 32, i64 100) #6, !dbg !5942
  store %struct.alloc_pool_def* %call2, %struct.alloc_pool_def** @splay_tree_node_pool, align 8, !dbg !5943
  %1 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5944
  %cmp = icmp sgt i32 %1, 0, !dbg !5946
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5947
  %cmp4 = icmp ne %struct._IO_FILE* %2, null, !dbg !5948
  %or.cond = and i1 %cmp, %cmp4, !dbg !5949
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5949

if.then:                                          ; preds = %entry
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !5950
  br label %if.end, !dbg !5950

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !5951
  tail call void @ira_traverse_loop_tree(i8 zeroext 0, %struct.ira_loop_tree_node* %3, void (%struct.ira_loop_tree_node*)* nonnull @color_pass, void (%struct.ira_loop_tree_node*)* null) #6, !dbg !5952
  %4 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5953
  %cmp7 = icmp sgt i32 %4, 1, !dbg !5955
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5956
  %cmp10 = icmp ne %struct._IO_FILE* %5, null, !dbg !5957
  %or.cond1 = and i1 %cmp7, %cmp10, !dbg !5958
  br i1 %or.cond1, label %if.then12, label %if.end13, !dbg !5958

if.then12:                                        ; preds = %if.end
  tail call void @ira_print_disposition(%struct._IO_FILE* nonnull %5) #6, !dbg !5959
  br label %if.end13, !dbg !5959

if.end13:                                         ; preds = %if.then12, %if.end
  %6 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @splay_tree_node_pool, align 8, !dbg !5960
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %6) #6, !dbg !5961
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !5962
  tail call void @ira_free_bitmap(%struct.bitmap_head_def* %7) #6, !dbg !5963
  %8 = load i8*, i8** bitcast (%struct.ira_allocno*** @allocnos_for_spilling to i8**), align 8, !dbg !5964
  tail call void @ira_free(i8* %8) #6, !dbg !5965
  ret void, !dbg !5966
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ira_allocno_t_heap_free(%struct.VEC_ira_allocno_t_heap** %vec_) unnamed_addr #0 !dbg !5967 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_heap** %vec_, metadata !5971, metadata !DIExpression()), !dbg !5972
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !5973
  %tobool = icmp eq %struct.VEC_ira_allocno_t_heap* %0, null, !dbg !5973
  br i1 %tobool, label %if.end, label %if.then, !dbg !5975

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ira_allocno_t_heap* %0 to i8*, !dbg !5975
  tail call void @free(i8* nonnull %1) #6, !dbg !5973
  br label %if.end, !dbg !5973

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ira_allocno_t_heap* null, %struct.VEC_ira_allocno_t_heap** %vec_, align 8, !dbg !5975
  ret void, !dbg !5975
}

; Function Attrs: nounwind uwtable
define internal fastcc void @move_spill_restore() unnamed_addr #5 !dbg !5976 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !5995
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5996
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #7, !dbg !5996
  br label %for.cond, !dbg !5997

for.cond:                                         ; preds = %for.end180, %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !5983, metadata !DIExpression()), !dbg !5998
  %2 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5999
  %cmp = icmp sgt i32 %2, 0, !dbg !6004
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6005
  %cmp1 = icmp ne %struct._IO_FILE* %3, null, !dbg !6006
  %or.cond = and i1 %cmp, %cmp1, !dbg !6007
  br i1 %or.cond, label %if.then, label %if.end, !dbg !6007

if.then:                                          ; preds = %for.cond
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !6008
  br label %if.end, !dbg !6008

if.end:                                           ; preds = %if.then, %for.cond
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5994, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #8, !dbg !6009
  br label %for.cond2.outer, !dbg !6009

for.cond2.outer:                                  ; preds = %if.end179, %if.end
  %changed_p.0.ph = phi i8 [ %changed_p.1, %if.end179 ], [ 0, %if.end ]
  br label %for.cond2, !dbg !6009

for.cond2:                                        ; preds = %for.cond2.outer, %if.then22
  call void @llvm.dbg.value(metadata i8 %changed_p.0.ph, metadata !5983, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5988, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5994, metadata !DIExpression(DW_OP_deref)), !dbg !5998
  %call3 = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #8, !dbg !6011
  %tobool = icmp eq i8 %call3, 0, !dbg !6009
  br i1 %tobool, label %for.end180, label %for.body, !dbg !6009

for.body:                                         ; preds = %for.cond2
  %4 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6013
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %regno4 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 1, !dbg !6013
  %5 = load i32, i32* %regno4, align 4, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %5, metadata !5979, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 6, !dbg !6015
  %6 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !6015
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %6, metadata !5992, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 17, !dbg !6016
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !6016
  %cmp5 = icmp eq %struct.ira_allocno* %7, null, !dbg !6018
  br i1 %cmp5, label %lor.lhs.false, label %if.then22, !dbg !6019

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %cap = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 16, !dbg !6020
  %8 = load %struct.ira_allocno*, %struct.ira_allocno** %cap, align 8, !dbg !6020
  %cmp6 = icmp eq %struct.ira_allocno* %8, null, !dbg !6021
  br i1 %cmp6, label %lor.lhs.false7, label %if.then22, !dbg !6022

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %hard_regno8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 3, !dbg !6023
  %9 = load i32, i32* %hard_regno8, align 4, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %9, metadata !5980, metadata !DIExpression()), !dbg !5998
  %cmp9 = icmp slt i32 %9, 0, !dbg !6024
  br i1 %cmp9, label %if.then22, label %lor.lhs.false10, !dbg !6025

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %6, i64 0, i32 5, !dbg !6026
  %10 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %children, align 8, !dbg !6026
  %cmp11 = icmp eq %struct.ira_loop_tree_node* %10, null, !dbg !6027
  br i1 %cmp11, label %if.then22, label %lor.lhs.false12, !dbg !6028

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %11 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !6029
  %idxprom = sext i32 %5 to i64, !dbg !6029
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom, !dbg !6029
  %12 = load i8, i8* %arrayidx, align 1, !dbg !6029
  %tobool13 = icmp eq i8 %12, 0, !dbg !6029
  br i1 %tobool13, label %lor.lhs.false14, label %if.then22, !dbg !6030

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %13 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !6031
  %arrayidx16 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %13, i64 %idxprom, !dbg !6031
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx16, align 8, !dbg !6031
  %cmp17 = icmp eq %struct.rtx_def* %14, null, !dbg !6032
  br i1 %cmp17, label %lor.lhs.false19, label %if.then22, !dbg !6033

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %6, i64 0, i32 13, !dbg !6034
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !6034
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %4, metadata !5988, metadata !DIExpression()), !dbg !5998
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %4, i64 0, i32 0, !dbg !6035
  %16 = load i32, i32* %num, align 8, !dbg !6035
  %call20 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %15, i32 %16) #6, !dbg !6036
  %tobool21 = icmp eq i32 %call20, 0, !dbg !6036
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6037

if.then22:                                        ; preds = %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false, %for.body, %lor.lhs.false10, %lor.lhs.false7
  br label %for.cond2, !dbg !6038, !llvm.loop !6039

if.end23:                                         ; preds = %lor.lhs.false19
  %idxprom.lcssa = phi i64 [ %idxprom, %lor.lhs.false19 ], !dbg !6029
  %.lcssa13 = phi i32 [ %9, %lor.lhs.false19 ], !dbg !6023
  %.lcssa12 = phi i32 [ %5, %lor.lhs.false19 ], !dbg !6013
  %.lcssa = phi %struct.ira_loop_tree_node* [ %6, %lor.lhs.false19 ], !dbg !6015
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6041
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5988, metadata !DIExpression()), !dbg !5998
  %mode24 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 2, !dbg !6041
  %18 = load i32, i32* %mode24, align 8, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %18, metadata !5986, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5988, metadata !DIExpression()), !dbg !5998
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 9, !dbg !6042
  %19 = load i32, i32* %cover_class, align 8, !dbg !6042
  call void @llvm.dbg.value(metadata i32 %19, metadata !5987, metadata !DIExpression()), !dbg !5998
  %idxprom25 = zext i32 %19 to i64, !dbg !6043
  %idxprom27 = sext i32 %.lcssa13 to i64, !dbg !6043
  %arrayidx28 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom25, i64 %idxprom27, !dbg !6043
  %20 = load i16, i16* %arrayidx28, align 2, !dbg !6043
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5988, metadata !DIExpression()), !dbg !5998
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 12, !dbg !6044
  %21 = load i32, i32* %memory_cost, align 4, !dbg !6044
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5988, metadata !DIExpression()), !dbg !5998
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 33, !dbg !6045
  %22 = load i32*, i32** %hard_reg_costs, align 8, !dbg !6045
  %cmp30 = icmp eq i32* %22, null, !dbg !6046
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !5988, metadata !DIExpression()), !dbg !5998
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !6045

cond.true:                                        ; preds = %if.end23
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 10, !dbg !6047
  %.pre = sext i16 %20 to i64, !dbg !6048
  br label %cond.end, !dbg !6045

cond.false:                                       ; preds = %if.end23
  %idxprom33 = sext i16 %20 to i64, !dbg !6052
  %arrayidx34 = getelementptr inbounds i32, i32* %22, i64 %idxprom33, !dbg !6052
  br label %cond.end, !dbg !6045

cond.end:                                         ; preds = %cond.false, %cond.true
  %idxprom53.pre-phi = phi i64 [ %idxprom33, %cond.false ], [ %.pre, %cond.true ], !dbg !6048
  %cond.in = phi i32* [ %arrayidx34, %cond.false ], [ %cover_class_cost, %cond.true ]
  %cond = load i32, i32* %cond.in, align 4, !dbg !6045
  %sub = sub nsw i32 %21, %cond, !dbg !6053
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5978, metadata !DIExpression()), !dbg !5998
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 0, i32 4, !dbg !6054
  %idxprom65 = zext i32 %18 to i64, !dbg !6055
  %arrayidx69 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom65, i64 %idxprom25, i64 0, !dbg !6055
  %arrayidx75 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom65, i64 %idxprom25, i64 1, !dbg !6055
  br label %for.cond35, !dbg !6057

for.cond35:                                       ; preds = %for.inc, %cond.end
  %subloop_node.0.in = phi %struct.ira_loop_tree_node** [ %subloops, %cond.end ], [ %subloop_next, %for.inc ]
  %cost.0 = phi i32 [ %sub, %cond.end ], [ %cost.3, %for.inc ], !dbg !6058
  %subloop_node.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in, align 8, !dbg !6059
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !5978, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0, metadata !5993, metadata !DIExpression()), !dbg !5998
  %cmp36 = icmp eq %struct.ira_loop_tree_node* %subloop_node.0, null, !dbg !6060
  br i1 %cmp36, label %for.end, label %for.body38, !dbg !6061

for.body38:                                       ; preds = %for.cond35
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 9, !dbg !6062
  %23 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6062
  %arrayidx40 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %23, i64 %idxprom.lcssa, !dbg !6063
  %24 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx40, align 8, !dbg !6063
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %24, metadata !5990, metadata !DIExpression()), !dbg !5998
  %cmp41 = icmp eq %struct.ira_allocno* %24, null, !dbg !6064
  br i1 %cmp41, label %for.inc, label %if.end44, !dbg !6066

if.end44:                                         ; preds = %for.body38
  %memory_cost45 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 12, !dbg !6067
  %25 = load i32, i32* %memory_cost45, align 4, !dbg !6067
  %hard_reg_costs46 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 33, !dbg !6068
  %26 = load i32*, i32** %hard_reg_costs46, align 8, !dbg !6068
  %cmp47 = icmp eq i32* %26, null, !dbg !6069
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !6068

cond.true49:                                      ; preds = %if.end44
  %cover_class_cost50 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 10, !dbg !6070
  br label %cond.end55, !dbg !6068

cond.false51:                                     ; preds = %if.end44
  %arrayidx54 = getelementptr inbounds i32, i32* %26, i64 %idxprom53.pre-phi, !dbg !6071
  br label %cond.end55, !dbg !6068

cond.end55:                                       ; preds = %cond.false51, %cond.true49
  %cond56.in = phi i32* [ %cover_class_cost50, %cond.true49 ], [ %arrayidx54, %cond.false51 ]
  %cond56 = load i32, i32* %cond56.in, align 4, !dbg !6068
  %sub572 = sub i32 %cond56, %25, !dbg !6072
  %sub58 = add i32 %cost.0, %sub572, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %sub58, metadata !5978, metadata !DIExpression()), !dbg !5998
  %call59 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* nonnull %subloop_node.0, i32 %.lcssa12, i8 zeroext 1) #8, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %call59, metadata !5985, metadata !DIExpression()), !dbg !5998
  %call60 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* nonnull %subloop_node.0, i32 %.lcssa12, i8 zeroext 0) #8, !dbg !6074
  call void @llvm.dbg.value(metadata i32 %call60, metadata !5984, metadata !DIExpression()), !dbg !5998
  %hard_regno61 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %24, i64 0, i32 3, !dbg !6075
  %27 = load i32, i32* %hard_regno61, align 4, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %27, metadata !5981, metadata !DIExpression()), !dbg !5998
  %cmp62 = icmp slt i32 %27, 0, !dbg !6076
  %28 = load i16, i16* %arrayidx69, align 4, !dbg !6055
  %conv70 = sext i16 %28 to i32, !dbg !6055
  %mul = mul nsw i32 %call59, %conv70, !dbg !6055
  %29 = load i16, i16* %arrayidx75, align 2, !dbg !6055
  %conv76 = sext i16 %29 to i32, !dbg !6055
  %mul77 = mul nsw i32 %call60, %conv76, !dbg !6055
  %add = add nsw i32 %mul, %mul77, !dbg !6055
  br i1 %cmp62, label %if.then64, label %if.else, !dbg !6077

if.then64:                                        ; preds = %cond.end55
  %sub78 = sub nsw i32 %sub58, %add, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %sub78, metadata !5978, metadata !DIExpression()), !dbg !5998
  br label %for.inc, !dbg !6079

if.else:                                          ; preds = %cond.end55
  %add94 = add nsw i32 %sub58, %add, !dbg !6080
  call void @llvm.dbg.value(metadata i32 %add94, metadata !5978, metadata !DIExpression()), !dbg !5998
  %cmp95 = icmp eq i32 %27, %.lcssa13, !dbg !6082
  br i1 %cmp95, label %for.inc, label %if.then97, !dbg !6084

if.then97:                                        ; preds = %if.else
  %call98 = call fastcc i32 @ira_get_register_move_cost(i32 %18, i32 %19, i32 %19) #8, !dbg !6085
  %add99 = add nsw i32 %call59, %call60, !dbg !6086
  %mul100 = mul nsw i32 %call98, %add99, !dbg !6087
  %sub101 = sub nsw i32 %add94, %mul100, !dbg !6088
  call void @llvm.dbg.value(metadata i32 %sub101, metadata !5978, metadata !DIExpression()), !dbg !5998
  br label %for.inc, !dbg !6089

for.inc:                                          ; preds = %if.else, %if.then64, %if.then97, %for.body38
  %cost.3 = phi i32 [ %cost.0, %for.body38 ], [ %sub78, %if.then64 ], [ %sub101, %if.then97 ], [ %add94, %if.else ], !dbg !6090
  call void @llvm.dbg.value(metadata i32 %cost.3, metadata !5978, metadata !DIExpression()), !dbg !5998
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 2, !dbg !6091
  br label %for.cond35, !dbg !6092, !llvm.loop !6093

for.end:                                          ; preds = %for.cond35
  %cost.0.lcssa = phi i32 [ %cost.0, %for.cond35 ], !dbg !6058
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5978, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5978, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata i32 %cost.0.lcssa, metadata !5978, metadata !DIExpression()), !dbg !5998
  %parent104 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 0, i32 6, !dbg !6095
  %30 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent104, align 8, !dbg !6095
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %30, metadata !5991, metadata !DIExpression()), !dbg !5998
  %cmp105 = icmp eq %struct.ira_loop_tree_node* %30, null, !dbg !6097
  br i1 %cmp105, label %if.end162, label %land.lhs.true107, !dbg !6098

land.lhs.true107:                                 ; preds = %for.end
  %regno_allocno_map108 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %30, i64 0, i32 9, !dbg !6099
  %31 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map108, align 8, !dbg !6099
  %arrayidx110 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %31, i64 %idxprom.lcssa, !dbg !6100
  %32 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx110, align 8, !dbg !6100
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %32, metadata !5989, metadata !DIExpression()), !dbg !5998
  %cmp111 = icmp eq %struct.ira_allocno* %32, null, !dbg !6101
  br i1 %cmp111, label %if.end162, label %if.then113, !dbg !6102

if.then113:                                       ; preds = %land.lhs.true107
  %call114 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %.lcssa, i32 %.lcssa12, i8 zeroext 1) #8, !dbg !6103
  call void @llvm.dbg.value(metadata i32 %call114, metadata !5985, metadata !DIExpression()), !dbg !5998
  %call115 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %.lcssa, i32 %.lcssa12, i8 zeroext 0) #8, !dbg !6105
  call void @llvm.dbg.value(metadata i32 %call115, metadata !5984, metadata !DIExpression()), !dbg !5998
  %hard_regno116 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %32, i64 0, i32 3, !dbg !6106
  %33 = load i32, i32* %hard_regno116, align 4, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %33, metadata !5981, metadata !DIExpression()), !dbg !5998
  %cmp117 = icmp slt i32 %33, 0, !dbg !6108
  br i1 %cmp117, label %if.then119, label %if.else136, !dbg !6109

if.then119:                                       ; preds = %if.then113
  %34 = load i16, i16* %arrayidx69, align 4, !dbg !6110
  %conv125 = sext i16 %34 to i32, !dbg !6110
  %mul126 = mul nsw i32 %call114, %conv125, !dbg !6111
  %35 = load i16, i16* %arrayidx75, align 2, !dbg !6112
  %conv132 = sext i16 %35 to i32, !dbg !6112
  %mul133 = mul nsw i32 %call115, %conv132, !dbg !6113
  %add134 = add nsw i32 %mul126, %mul133, !dbg !6114
  %sub135 = sub nsw i32 %cost.0.lcssa, %add134, !dbg !6115
  call void @llvm.dbg.value(metadata i32 %sub135, metadata !5978, metadata !DIExpression()), !dbg !5998
  br label %if.end162, !dbg !6116

if.else136:                                       ; preds = %if.then113
  %36 = load i16, i16* %arrayidx75, align 2, !dbg !6117
  %conv142 = sext i16 %36 to i32, !dbg !6117
  %mul143 = mul nsw i32 %call114, %conv142, !dbg !6119
  %37 = load i16, i16* %arrayidx69, align 4, !dbg !6120
  %conv149 = sext i16 %37 to i32, !dbg !6120
  %mul150 = mul nsw i32 %call115, %conv149, !dbg !6121
  %add151 = add nsw i32 %mul143, %mul150, !dbg !6122
  %add152 = add nsw i32 %cost.0.lcssa, %add151, !dbg !6123
  call void @llvm.dbg.value(metadata i32 %add152, metadata !5978, metadata !DIExpression()), !dbg !5998
  %cmp153 = icmp eq i32 %33, %.lcssa13, !dbg !6124
  br i1 %cmp153, label %if.end162, label %if.then155, !dbg !6126

if.then155:                                       ; preds = %if.else136
  %call156 = call fastcc i32 @ira_get_register_move_cost(i32 %18, i32 %19, i32 %19) #8, !dbg !6127
  %add157 = add nsw i32 %call114, %call115, !dbg !6128
  %mul158 = mul nsw i32 %call156, %add157, !dbg !6129
  %sub159 = sub nsw i32 %add152, %mul158, !dbg !6130
  call void @llvm.dbg.value(metadata i32 %sub159, metadata !5978, metadata !DIExpression()), !dbg !5998
  br label %if.end162, !dbg !6131

if.end162:                                        ; preds = %if.else136, %land.lhs.true107, %for.end, %if.then119, %if.then155
  %cost.6 = phi i32 [ %cost.0.lcssa, %land.lhs.true107 ], [ %cost.0.lcssa, %for.end ], [ %sub135, %if.then119 ], [ %sub159, %if.then155 ], [ %add152, %if.else136 ], !dbg !6090
  call void @llvm.dbg.value(metadata i32 %cost.6, metadata !5978, metadata !DIExpression()), !dbg !5998
  %cmp163 = icmp slt i32 %cost.6, 0, !dbg !6132
  br i1 %cmp163, label %if.then165, label %if.end179, !dbg !6134

if.then165:                                       ; preds = %if.end162
  %38 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !6135
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %38, metadata !5988, metadata !DIExpression()), !dbg !5998
  %hard_regno166 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %38, i64 0, i32 3, !dbg !6135
  store i32 -1, i32* %hard_regno166, align 4, !dbg !6137
  %39 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6138
  %cmp167 = icmp sgt i32 %39, 3, !dbg !6140
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6141
  %cmp170 = icmp ne %struct._IO_FILE* %40, null, !dbg !6142
  %or.cond1 = and i1 %cmp167, %cmp170, !dbg !6143
  br i1 %or.cond1, label %if.then172, label %if.end179, !dbg !6143

if.then172:                                       ; preds = %if.then165
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %38, metadata !5988, metadata !DIExpression()), !dbg !5998
  %num173 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %38, i64 0, i32 0, !dbg !6144
  %41 = load i32, i32* %num173, align 8, !dbg !6144
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %.lcssa, i64 0, i32 1, !dbg !6146
  %42 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6146
  %num174 = getelementptr inbounds %struct.loop, %struct.loop* %42, i64 0, i32 0, !dbg !6147
  %43 = load i32, i32* %num174, align 8, !dbg !6147
  %call175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %40, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.44, i64 0, i64 0), i32 %41, i32 %.lcssa12, i32 %43) #6, !dbg !6148
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6149
  %sub176 = sub nsw i32 0, %cost.6, !dbg !6150
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), i32 %sub176) #6, !dbg !6151
  br label %if.end179, !dbg !6152

if.end179:                                        ; preds = %if.then165, %if.then172, %if.end162
  %changed_p.1 = phi i8 [ %changed_p.0.ph, %if.end162 ], [ 1, %if.then172 ], [ 1, %if.then165 ], !dbg !6153
  call void @llvm.dbg.value(metadata i8 %changed_p.1, metadata !5983, metadata !DIExpression()), !dbg !5998
  br label %for.cond2.outer, !dbg !6011, !llvm.loop !6039

for.end180:                                       ; preds = %for.cond2
  %changed_p.0.ph.lcssa = phi i8 [ %changed_p.0.ph, %for.cond2 ]
  %tobool181 = icmp eq i8 %changed_p.0.ph.lcssa, 0, !dbg !6154
  br i1 %tobool181, label %for.end184, label %for.cond, !dbg !6156, !llvm.loop !6157

for.end184:                                       ; preds = %for.end180
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #7, !dbg !6160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6160
  ret void, !dbg !6160
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #2

declare dso_local void @ira_traverse_loop_tree(i8 zeroext, %struct.ira_loop_tree_node*, void (%struct.ira_loop_tree_node*)*, void (%struct.ira_loop_tree_node*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @color_pass(%struct.ira_loop_tree_node* %loop_tree_node) #5 !dbg !6161 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !6165, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 -1, metadata !6168, metadata !DIExpression()), !dbg !6180
  %0 = bitcast i32* %j to i8*, !dbg !6181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6181
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6182
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6182
  %2 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6183
  %cmp = icmp sgt i32 %2, 1, !dbg !6185
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6186
  %cmp1 = icmp ne %struct._IO_FILE* %3, null, !dbg !6187
  %or.cond = and i1 %cmp, %cmp1, !dbg !6188
  br i1 %or.cond, label %if.then, label %if.end, !dbg !6188

if.then:                                          ; preds = %entry
  tail call fastcc void @print_loop_title(%struct.ira_loop_tree_node* %loop_tree_node) #8, !dbg !6189
  br label %if.end, !dbg !6189

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6190
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 12, !dbg !6191
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !6191
  tail call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5) #6, !dbg !6192
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !6193
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6194
  tail call void @bitmap_copy(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %7) #6, !dbg !6195
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !6196
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %8, i32 0, i32* nonnull %j) #8, !dbg !6196
  br label %for.cond, !dbg !6196

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6198
  %tobool = icmp eq i8 %call, 0, !dbg !6196
  br i1 %tobool, label %for.end, label %for.body, !dbg !6196

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6200
  %10 = load i32, i32* %j, align 4, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %10, metadata !6172, metadata !DIExpression()), !dbg !6180
  %idxprom = zext i32 %10 to i64, !dbg !6200
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %9, i64 %idxprom, !dbg !6200
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6200
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %11, metadata !6177, metadata !DIExpression()), !dbg !6180
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 31, !dbg !6203
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !6203
  %bf.clear = and i16 %bf.load, 256, !dbg !6203
  %tobool2 = icmp eq i16 %bf.clear, 0, !dbg !6203
  br i1 %tobool2, label %for.inc, label %if.end4, !dbg !6205

if.end4:                                          ; preds = %for.body
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6206
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 0, !dbg !6207
  %13 = load i32, i32* %num, align 8, !dbg !6207
  %call5 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %12, i32 %13) #6, !dbg !6208
  br label %for.inc, !dbg !6209

for.inc:                                          ; preds = %for.body, %if.end4
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6198
  br label %for.cond, !dbg !6198, !llvm.loop !6210

for.end:                                          ; preds = %for.cond
  call fastcc void @color_allocnos() #8, !dbg !6212
  %14 = load i32, i32* @flag_ira_region, align 4, !dbg !6213
  %15 = add i32 %14, -1, !dbg !6215
  %16 = icmp ult i32 %15, 2, !dbg !6215
  br i1 %16, label %if.then8, label %if.end52, !dbg !6215

if.then8:                                         ; preds = %for.end
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !6216
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %17, i32 0, i32* nonnull %j) #8, !dbg !6216
  br label %for.cond10, !dbg !6216

for.cond10:                                       ; preds = %for.inc50, %if.then8
  %index.0 = phi i32 [ -1, %if.then8 ], [ %index.3, %for.inc50 ], !dbg !6218
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  %call11 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6219
  %tobool12 = icmp eq i8 %call11, 0, !dbg !6216
  br i1 %tobool12, label %if.end52.loopexit, label %for.body13, !dbg !6216

for.body13:                                       ; preds = %for.cond10
  %18 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6221
  %19 = load i32, i32* %j, align 4, !dbg !6223
  call void @llvm.dbg.value(metadata i32 %19, metadata !6172, metadata !DIExpression()), !dbg !6180
  %idxprom14 = zext i32 %19 to i64, !dbg !6221
  %arrayidx15 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %18, i64 %idxprom14, !dbg !6221
  %20 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx15, align 8, !dbg !6221
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %20, metadata !6177, metadata !DIExpression()), !dbg !6180
  %cap_member = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 17, !dbg !6224
  %21 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !6224
  %cmp16 = icmp eq %struct.ira_allocno* %21, null, !dbg !6226
  br i1 %cmp16, label %for.inc50, label %if.end18, !dbg !6227

if.end18:                                         ; preds = %for.body13
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %19, metadata !6172, metadata !DIExpression()), !dbg !6180
  %call19 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %22, i32 %19) #6, !dbg !6229
  call void @llvm.dbg.value(metadata i32 undef, metadata !6175, metadata !DIExpression()), !dbg !6180
  %23 = load i32, i32* @flag_ira_region, align 4, !dbg !6230
  %cmp21 = icmp eq i32 %23, 2, !dbg !6232
  br i1 %cmp21, label %land.lhs.true22, label %for.inc50, !dbg !6233

land.lhs.true22:                                  ; preds = %if.end18
  %cover_class20 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 9, !dbg !6234
  %24 = load i32, i32* %cover_class20, align 8, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %24, metadata !6175, metadata !DIExpression()), !dbg !6180
  %idxprom23 = zext i32 %24 to i64, !dbg !6235
  %arrayidx24 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 11, i64 %idxprom23, !dbg !6235
  %25 = load i32, i32* %arrayidx24, align 4, !dbg !6235
  %arrayidx26 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom23, !dbg !6236
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !6236
  %cmp27 = icmp sgt i32 %25, %26, !dbg !6237
  br i1 %cmp27, label %for.inc50, label %if.then28, !dbg !6238

if.then28:                                        ; preds = %land.lhs.true22
  call void @llvm.dbg.value(metadata i32 undef, metadata !6174, metadata !DIExpression()), !dbg !6180
  %hard_regno30 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 3, !dbg !6239
  %27 = load i32, i32* %hard_regno30, align 4, !dbg !6239
  call void @llvm.dbg.value(metadata i32 %27, metadata !6167, metadata !DIExpression()), !dbg !6180
  %cmp31 = icmp sgt i32 %27, -1, !dbg !6241
  br i1 %cmp31, label %if.then32, label %if.end37, !dbg !6243

if.then32:                                        ; preds = %if.then28
  %idxprom35 = sext i32 %27 to i64, !dbg !6244
  %arrayidx36 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom23, i64 %idxprom35, !dbg !6244
  %28 = load i16, i16* %arrayidx36, align 2, !dbg !6244
  %conv = sext i16 %28 to i32, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6168, metadata !DIExpression()), !dbg !6180
  br label %if.end37, !dbg !6246

if.end37:                                         ; preds = %if.then32, %if.then28
  %index.1 = phi i32 [ %conv, %if.then32 ], [ %index.0, %if.then28 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.1, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 undef, metadata !6166, metadata !DIExpression()), !dbg !6180
  %29 = load %struct.ira_allocno*, %struct.ira_allocno** %cap_member, align 8, !dbg !6247
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !6178, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* undef, metadata !6179, metadata !DIExpression()), !dbg !6180
  %hard_regno41 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 3, !dbg !6248
  store i32 %27, i32* %hard_regno41, align 4, !dbg !6249
  %assigned_p42 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 31, !dbg !6250
  %bf.load43 = load i16, i16* %assigned_p42, align 4, !dbg !6251
  %bf.set = or i16 %bf.load43, 256, !dbg !6251
  store i16 %bf.set, i16* %assigned_p42, align 4, !dbg !6251
  br i1 %cmp31, label %if.then47, label %if.end48, !dbg !6252

if.then47:                                        ; preds = %if.end37
  call fastcc void @update_copy_costs(%struct.ira_allocno* %29, i8 zeroext 1) #8, !dbg !6253
  br label %if.end48, !dbg !6253

if.end48:                                         ; preds = %if.then47, %if.end37
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %29) #6, !dbg !6255
  br label %for.inc50, !dbg !6256

for.inc50:                                        ; preds = %land.lhs.true22, %if.end18, %if.end48, %for.body13
  %index.3 = phi i32 [ %index.0, %for.body13 ], [ %index.1, %if.end48 ], [ %index.0, %land.lhs.true22 ], [ %index.0, %if.end18 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.3, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6219
  br label %for.cond10, !dbg !6219, !llvm.loop !6257

if.end52.loopexit:                                ; preds = %for.cond10
  %index.0.lcssa = phi i32 [ %index.0, %for.cond10 ], !dbg !6218
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.0.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  br label %if.end52, !dbg !6259

if.end52:                                         ; preds = %if.end52.loopexit, %for.end
  %index.4 = phi i32 [ -1, %for.end ], [ %index.0.lcssa, %if.end52.loopexit ], !dbg !6218
  call void @llvm.dbg.value(metadata i32 %index.4, metadata !6168, metadata !DIExpression()), !dbg !6180
  %subloops = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 4, !dbg !6259
  br label %for.cond53, !dbg !6261

for.cond53:                                       ; preds = %for.inc205, %if.end52
  %index.5 = phi i32 [ %index.4, %if.end52 ], [ %index.6.lcssa, %for.inc205 ], !dbg !6218
  %subloop_node.0.in = phi %struct.ira_loop_tree_node** [ %subloops, %if.end52 ], [ %subloop_next, %for.inc205 ]
  %subloop_node.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in, align 8, !dbg !6262
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.5, metadata !6168, metadata !DIExpression()), !dbg !6180
  %cmp54 = icmp eq %struct.ira_loop_tree_node* %subloop_node.0, null, !dbg !6263
  br i1 %cmp54, label %for.end206, label %for.body56, !dbg !6265

for.body56:                                       ; preds = %for.cond53
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !6266
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %30, i32 0, i32* nonnull %j) #8, !dbg !6266
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 9, !dbg !6269
  br label %for.cond57, !dbg !6266

for.cond57:                                       ; preds = %for.inc203, %for.body56
  %index.6 = phi i32 [ %index.5, %for.body56 ], [ %index.7, %for.inc203 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.6, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  %call58 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6272
  %tobool59 = icmp eq i8 %call58, 0, !dbg !6266
  br i1 %tobool59, label %for.inc205, label %for.body60, !dbg !6266

for.body60:                                       ; preds = %for.cond57
  %31 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6273
  %32 = load i32, i32* %j, align 4, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %32, metadata !6172, metadata !DIExpression()), !dbg !6180
  %idxprom61 = zext i32 %32 to i64, !dbg !6273
  %arrayidx62 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %31, i64 %idxprom61, !dbg !6273
  %33 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx62, align 8, !dbg !6273
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %33, metadata !6177, metadata !DIExpression()), !dbg !6180
  %mode63 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %33, i64 0, i32 2, !dbg !6275
  %34 = load i32, i32* %mode63, align 8, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %34, metadata !6174, metadata !DIExpression()), !dbg !6180
  %cover_class64 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %33, i64 0, i32 9, !dbg !6276
  %35 = load i32, i32* %cover_class64, align 8, !dbg !6276
  call void @llvm.dbg.value(metadata i32 %35, metadata !6175, metadata !DIExpression()), !dbg !6180
  %hard_regno65 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %33, i64 0, i32 3, !dbg !6277
  %36 = load i32, i32* %hard_regno65, align 4, !dbg !6277
  call void @llvm.dbg.value(metadata i32 %36, metadata !6167, metadata !DIExpression()), !dbg !6180
  %cmp66 = icmp sgt i32 %36, -1, !dbg !6278
  br i1 %cmp66, label %if.then68, label %if.end74, !dbg !6280

if.then68:                                        ; preds = %for.body60
  %idxprom69 = zext i32 %35 to i64, !dbg !6281
  %idxprom71 = sext i32 %36 to i64, !dbg !6281
  %arrayidx72 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom69, i64 %idxprom71, !dbg !6281
  %37 = load i16, i16* %arrayidx72, align 2, !dbg !6281
  %conv73 = sext i16 %37 to i32, !dbg !6281
  call void @llvm.dbg.value(metadata i32 %conv73, metadata !6168, metadata !DIExpression()), !dbg !6180
  br label %if.end74, !dbg !6283

if.end74:                                         ; preds = %if.then68, %for.body60
  %index.7 = phi i32 [ %conv73, %if.then68 ], [ %index.6, %for.body60 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.7, metadata !6168, metadata !DIExpression()), !dbg !6180
  %regno75 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %33, i64 0, i32 1, !dbg !6284
  %38 = load i32, i32* %regno75, align 4, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %38, metadata !6166, metadata !DIExpression()), !dbg !6180
  %39 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !6285
  %idxprom76 = sext i32 %38 to i64, !dbg !6286
  %arrayidx77 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %39, i64 %idxprom76, !dbg !6286
  %40 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx77, align 8, !dbg !6286
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %40, metadata !6178, metadata !DIExpression()), !dbg !6180
  %cmp78 = icmp eq %struct.ira_allocno* %40, null, !dbg !6287
  br i1 %cmp78, label %for.inc203, label %lor.lhs.false80, !dbg !6289

lor.lhs.false80:                                  ; preds = %if.end74
  %cap = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 16, !dbg !6290
  %41 = load %struct.ira_allocno*, %struct.ira_allocno** %cap, align 8, !dbg !6290
  %cmp81 = icmp eq %struct.ira_allocno* %41, null, !dbg !6291
  br i1 %cmp81, label %if.end84, label %for.inc203, !dbg !6292

if.end84:                                         ; preds = %lor.lhs.false80
  %42 = load i32, i32* @flag_ira_region, align 4, !dbg !6293
  %cmp85 = icmp eq i32 %42, 2, !dbg !6295
  br i1 %cmp85, label %land.lhs.true87, label %if.end113, !dbg !6296

land.lhs.true87:                                  ; preds = %if.end84
  %idxprom89 = zext i32 %35 to i64, !dbg !6297
  %arrayidx90 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 11, i64 %idxprom89, !dbg !6297
  %43 = load i32, i32* %arrayidx90, align 4, !dbg !6297
  %arrayidx92 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom89, !dbg !6298
  %44 = load i32, i32* %arrayidx92, align 4, !dbg !6298
  %cmp93 = icmp sgt i32 %43, %44, !dbg !6299
  br i1 %cmp93, label %if.end113, label %if.then95, !dbg !6300

if.then95:                                        ; preds = %land.lhs.true87
  %assigned_p96 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 31, !dbg !6301
  %bf.load97 = load i16, i16* %assigned_p96, align 4, !dbg !6301
  %bf.clear99 = and i16 %bf.load97, 256, !dbg !6301
  %tobool101 = icmp eq i16 %bf.clear99, 0, !dbg !6301
  br i1 %tobool101, label %if.then102, label %for.inc203, !dbg !6304

if.then102:                                       ; preds = %if.then95
  %hard_regno103 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 3, !dbg !6305
  store i32 %36, i32* %hard_regno103, align 4, !dbg !6307
  %bf.set107 = or i16 %bf.load97, 256, !dbg !6308
  store i16 %bf.set107, i16* %assigned_p96, align 4, !dbg !6308
  br i1 %cmp66, label %if.then110, label %if.end111, !dbg !6309

if.then110:                                       ; preds = %if.then102
  call fastcc void @update_copy_costs(%struct.ira_allocno* nonnull %40, i8 zeroext 1) #8, !dbg !6310
  br label %if.end111, !dbg !6310

if.end111:                                        ; preds = %if.then110, %if.then102
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* nonnull %40) #6, !dbg !6312
  br label %for.inc203, !dbg !6313

if.end113:                                        ; preds = %land.lhs.true87, %if.end84
  %call114 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* nonnull %subloop_node.0, i32 %38, i8 zeroext 1) #8, !dbg !6314
  call void @llvm.dbg.value(metadata i32 %call114, metadata !6170, metadata !DIExpression()), !dbg !6180
  %call115 = call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* nonnull %subloop_node.0, i32 %38, i8 zeroext 0) #8, !dbg !6315
  call void @llvm.dbg.value(metadata i32 %call115, metadata !6171, metadata !DIExpression()), !dbg !6180
  %45 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !6316
  %arrayidx117 = getelementptr inbounds i8, i8* %45, i64 %idxprom76, !dbg !6316
  %46 = load i8, i8* %arrayidx117, align 1, !dbg !6316
  %tobool119 = icmp eq i8 %46, 0, !dbg !6316
  br i1 %tobool119, label %lor.lhs.false120, label %if.then125, !dbg !6318

lor.lhs.false120:                                 ; preds = %if.end113
  %47 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !6319
  %arrayidx122 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %47, i64 %idxprom76, !dbg !6319
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx122, align 8, !dbg !6319
  %cmp123 = icmp eq %struct.rtx_def* %48, null, !dbg !6320
  br i1 %cmp123, label %if.else, label %if.then125, !dbg !6321

if.then125:                                       ; preds = %lor.lhs.false120, %if.end113
  %assigned_p126 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 31, !dbg !6322
  %bf.load127 = load i16, i16* %assigned_p126, align 4, !dbg !6322
  %bf.clear129 = and i16 %bf.load127, 256, !dbg !6322
  %tobool131 = icmp eq i16 %bf.clear129, 0, !dbg !6322
  br i1 %tobool131, label %if.then132, label %for.inc203, !dbg !6325

if.then132:                                       ; preds = %if.then125
  %hard_regno133 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 3, !dbg !6326
  store i32 %36, i32* %hard_regno133, align 4, !dbg !6328
  %bf.set137 = or i16 %bf.load127, 256, !dbg !6329
  store i16 %bf.set137, i16* %assigned_p126, align 4, !dbg !6329
  br i1 %cmp66, label %if.then140, label %if.end141, !dbg !6330

if.then140:                                       ; preds = %if.then132
  call fastcc void @update_copy_costs(%struct.ira_allocno* nonnull %40, i8 zeroext 1) #8, !dbg !6331
  br label %if.end141, !dbg !6331

if.end141:                                        ; preds = %if.then140, %if.then132
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* nonnull %40) #6, !dbg !6333
  br label %for.inc203, !dbg !6334

if.else:                                          ; preds = %lor.lhs.false120
  %cmp143 = icmp slt i32 %36, 0, !dbg !6335
  br i1 %cmp143, label %if.then145, label %if.else159, !dbg !6337

if.then145:                                       ; preds = %if.else
  %idxprom146 = zext i32 %34 to i64, !dbg !6338
  %idxprom148 = zext i32 %35 to i64, !dbg !6338
  %arrayidx150 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom146, i64 %idxprom148, i64 1, !dbg !6338
  %49 = load i16, i16* %arrayidx150, align 2, !dbg !6338
  %conv151 = sext i16 %49 to i32, !dbg !6338
  %mul = mul nsw i32 %call115, %conv151, !dbg !6340
  %arrayidx156 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom146, i64 %idxprom148, i64 0, !dbg !6341
  %50 = load i16, i16* %arrayidx156, align 4, !dbg !6341
  %conv157 = sext i16 %50 to i32, !dbg !6341
  %mul158 = mul nsw i32 %call114, %conv157, !dbg !6342
  %add = add nsw i32 %mul, %mul158, !dbg !6343
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 13, !dbg !6344
  %51 = load i32, i32* %updated_memory_cost, align 8, !dbg !6345
  %sub = sub nsw i32 %51, %add, !dbg !6345
  store i32 %sub, i32* %updated_memory_cost, align 8, !dbg !6345
  br label %for.inc203, !dbg !6346

if.else159:                                       ; preds = %if.else
  %cover_class160 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 9, !dbg !6347
  %52 = load i32, i32* %cover_class160, align 8, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %52, metadata !6176, metadata !DIExpression()), !dbg !6180
  %call161 = call fastcc i32 @ira_get_register_move_cost(i32 %34, i32 %35, i32 %35) #8, !dbg !6349
  %add162 = add nsw i32 %call114, %call115, !dbg !6350
  %mul163 = mul nsw i32 %call161, %add162, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %mul163, metadata !6169, metadata !DIExpression()), !dbg !6180
  %updated_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 34, !dbg !6352
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 11, !dbg !6353
  %53 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !6353
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 33, !dbg !6354
  %54 = load i32*, i32** %hard_reg_costs, align 8, !dbg !6354
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_hard_reg_costs, i32 %52, i32 %53, i32* %54) #8, !dbg !6355
  %updated_conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 36, !dbg !6356
  %conflict_hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 35, !dbg !6357
  %55 = load i32*, i32** %conflict_hard_reg_costs, align 8, !dbg !6357
  call fastcc void @ira_allocate_and_set_or_copy_costs(i32** nonnull %updated_conflict_hard_reg_costs, i32 %52, i32 0, i32* %55) #8, !dbg !6358
  %56 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !6359
  %idxprom165 = sext i32 %index.7 to i64, !dbg !6359
  %arrayidx166 = getelementptr inbounds i32, i32* %56, i64 %idxprom165, !dbg !6359
  %57 = load i32, i32* %arrayidx166, align 4, !dbg !6360
  %sub167 = sub nsw i32 %57, %mul163, !dbg !6360
  store i32 %sub167, i32* %arrayidx166, align 4, !dbg !6360
  %58 = load i32*, i32** %updated_conflict_hard_reg_costs, align 8, !dbg !6361
  %arrayidx170 = getelementptr inbounds i32, i32* %58, i64 %idxprom165, !dbg !6361
  %59 = load i32, i32* %arrayidx170, align 4, !dbg !6362
  %sub171 = sub nsw i32 %59, %mul163, !dbg !6362
  store i32 %sub171, i32* %arrayidx170, align 4, !dbg !6362
  %60 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !6363
  %61 = load i32*, i32** %updated_hard_reg_costs, align 8, !dbg !6365
  %arrayidx175 = getelementptr inbounds i32, i32* %61, i64 %idxprom165, !dbg !6365
  %62 = load i32, i32* %arrayidx175, align 4, !dbg !6365
  %cmp176 = icmp sgt i32 %60, %62, !dbg !6366
  br i1 %cmp176, label %if.then178, label %if.end183, !dbg !6367

if.then178:                                       ; preds = %if.else159
  store i32 %62, i32* %updated_cover_class_cost, align 8, !dbg !6368
  br label %if.end183, !dbg !6369

if.end183:                                        ; preds = %if.then178, %if.else159
  %idxprom184 = zext i32 %34 to i64, !dbg !6370
  %idxprom186 = zext i32 %35 to i64, !dbg !6370
  %arrayidx188 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom184, i64 %idxprom186, i64 0, !dbg !6370
  %63 = load i16, i16* %arrayidx188, align 4, !dbg !6370
  %conv189 = sext i16 %63 to i32, !dbg !6370
  %mul190 = mul nsw i32 %call115, %conv189, !dbg !6371
  %arrayidx195 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom184, i64 %idxprom186, i64 1, !dbg !6372
  %64 = load i16, i16* %arrayidx195, align 2, !dbg !6372
  %conv196 = sext i16 %64 to i32, !dbg !6372
  %mul197 = mul nsw i32 %call114, %conv196, !dbg !6373
  %add198 = add nsw i32 %mul190, %mul197, !dbg !6374
  %updated_memory_cost199 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %40, i64 0, i32 13, !dbg !6375
  %65 = load i32, i32* %updated_memory_cost199, align 8, !dbg !6376
  %add200 = add nsw i32 %65, %add198, !dbg !6376
  store i32 %add200, i32* %updated_memory_cost199, align 8, !dbg !6376
  br label %for.inc203

for.inc203:                                       ; preds = %if.then95, %if.then125, %lor.lhs.false80, %if.end141, %if.end183, %if.then145, %if.end111, %if.end74
  call void @llvm.dbg.value(metadata i32* %j, metadata !6172, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6173, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6272
  br label %for.cond57, !dbg !6272, !llvm.loop !6377

for.inc205:                                       ; preds = %for.cond57
  %index.6.lcssa = phi i32 [ %index.6, %for.cond57 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.6.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.6.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %index.6.lcssa, metadata !6168, metadata !DIExpression()), !dbg !6180
  %subloop_next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 2, !dbg !6379
  br label %for.cond53, !dbg !6380, !llvm.loop !6381

for.end206:                                       ; preds = %for.cond53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6383
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6383
  ret void, !dbg !6383
}

declare dso_local void @ira_print_disposition(%struct._IO_FILE*) local_unnamed_addr #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_loop_title(%struct.ira_loop_tree_node* %loop_tree_node) unnamed_addr #5 !dbg !6384 {
entry:
  %j = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %loop_tree_node, metadata !6386, metadata !DIExpression()), !dbg !6397
  %0 = bitcast i32* %j to i8*, !dbg !6398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6398
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6399
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6399
  %2 = bitcast %struct.edge_def** %e to i8*, !dbg !6400
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6400
  %3 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !6401
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !6401
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6402
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 1, !dbg !6403
  %5 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !6403
  %num = getelementptr inbounds %struct.loop, %struct.loop* %5, i64 0, i32 0, !dbg !6404
  %6 = load i32, i32* %num, align 8, !dbg !6404
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 6, !dbg !6405
  %7 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent, align 8, !dbg !6405
  %cmp = icmp eq %struct.ira_loop_tree_node* %7, null, !dbg !6406
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !6407

cond.false:                                       ; preds = %entry
  %loop2 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %7, i64 0, i32 1, !dbg !6408
  %8 = load %struct.loop*, %struct.loop** %loop2, align 8, !dbg !6408
  %num3 = getelementptr inbounds %struct.loop, %struct.loop* %8, i64 0, i32 0, !dbg !6409
  %9 = load i32, i32* %num3, align 8, !dbg !6409
  br label %cond.end, !dbg !6407

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %9, %cond.false ], [ -1, %entry ], !dbg !6407
  %header = getelementptr inbounds %struct.loop, %struct.loop* %5, i64 0, i32 2, !dbg !6410
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !6410
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 9, !dbg !6411
  %11 = load i32, i32* %index, align 8, !dbg !6411
  %call = tail call fastcc i32 @loop_depth(%struct.loop* %5) #8, !dbg !6412
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i32 %6, i32 %cond, i32 %11, i32 %call) #6, !dbg !6413
  %children = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 5, !dbg !6414
  %12 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !6416
  %13 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !6416
  %14 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !6416
  %15 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !6421
  %16 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !6421
  br label %for.cond, !dbg !6423

for.cond:                                         ; preds = %for.inc29, %cond.end
  %subloop_node.0.in = phi %struct.ira_loop_tree_node** [ %children, %cond.end ], [ %next, %for.inc29 ]
  %subloop_node.0 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %subloop_node.0.in, align 8, !dbg !6424
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %subloop_node.0, metadata !6389, metadata !DIExpression()), !dbg !6397
  %cmp7 = icmp eq %struct.ira_loop_tree_node* %subloop_node.0, null, !dbg !6425
  br i1 %cmp7, label %for.end30, label %for.body, !dbg !6426

for.body:                                         ; preds = %for.cond
  %bb = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 0, !dbg !6427
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6427
  %cmp8 = icmp eq %struct.basic_block_def* %17, null, !dbg !6428
  br i1 %cmp8, label %for.inc29, label %if.then, !dbg !6429

if.then:                                          ; preds = %for.body
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6430
  %index10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i64 0, i32 9, !dbg !6431
  %19 = load i32, i32* %index10, align 8, !dbg !6431
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %19) #6, !dbg !6432
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7, !dbg !6433
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6433
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i64 0, i32 1, !dbg !6433
  %call13 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !6433
  %21 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 0, !dbg !6433
  store i32 %21, i32* %13, align 8, !dbg !6433
  %22 = extractvalue { i32, %struct.VEC_edge_gc** } %call13, 1, !dbg !6433
  store %struct.VEC_edge_gc** %22, %struct.VEC_edge_gc*** %14, align 8, !dbg !6433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %12, i64 16, i1 false), !dbg !6433
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7, !dbg !6433
  br label %for.cond14, !dbg !6433

for.cond14:                                       ; preds = %for.inc, %if.then
  %23 = load i32, i32* %15, align 8, !dbg !6434
  %24 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %16, align 8, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !6391, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %call15 = call fastcc zeroext i8 @ei_cond(i32 %23, %struct.VEC_edge_gc** %24, %struct.edge_def** nonnull %e) #8, !dbg !6434
  %tobool = icmp eq i8 %call15, 0, !dbg !6433
  br i1 %tobool, label %for.inc29.loopexit, label %for.body16, !dbg !6433

for.body16:                                       ; preds = %for.cond14
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !6435
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6391, metadata !DIExpression()), !dbg !6397
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %25, i64 0, i32 1, !dbg !6437
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6437
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6438
  %cfg = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, i32 1, !dbg !6438
  %28 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6438
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %28, i64 0, i32 1, !dbg !6438
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6438
  %cmp17 = icmp eq %struct.basic_block_def* %26, %29, !dbg !6439
  br i1 %cmp17, label %for.inc, label %land.lhs.true, !dbg !6440

land.lhs.true:                                    ; preds = %for.body16
  %30 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_bb_nodes, align 8, !dbg !6441
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6391, metadata !DIExpression()), !dbg !6397
  %index19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 9, !dbg !6441
  %31 = load i32, i32* %index19, align 8, !dbg !6441
  %idxprom = sext i32 %31 to i64, !dbg !6441
  %parent20 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %30, i64 %idxprom, i32 6, !dbg !6442
  %32 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent20, align 8, !dbg !6442
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %32, metadata !6390, metadata !DIExpression()), !dbg !6397
  %cmp21 = icmp eq %struct.ira_loop_tree_node* %32, %loop_tree_node, !dbg !6443
  br i1 %cmp21, label %for.inc, label %if.then22, !dbg !6444

if.then22:                                        ; preds = %land.lhs.true
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6445
  call void @llvm.dbg.value(metadata %struct.edge_def* %25, metadata !6391, metadata !DIExpression()), !dbg !6397
  %loop25 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %32, i64 0, i32 1, !dbg !6446
  %34 = load %struct.loop*, %struct.loop** %loop25, align 8, !dbg !6446
  %num26 = getelementptr inbounds %struct.loop, %struct.loop* %34, i64 0, i32 0, !dbg !6447
  %35 = load i32, i32* %num26, align 8, !dbg !6447
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 %31, i32 %35) #6, !dbg !6448
  br label %for.inc, !dbg !6448

for.inc:                                          ; preds = %land.lhs.true, %for.body16, %if.then22
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !6392, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #8, !dbg !6434
  br label %for.cond14, !dbg !6434, !llvm.loop !6449

for.inc29.loopexit:                               ; preds = %for.cond14
  br label %for.inc29, !dbg !6451

for.inc29:                                        ; preds = %for.inc29.loopexit, %for.body
  %next = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %subloop_node.0, i64 0, i32 3, !dbg !6451
  br label %for.cond, !dbg !6452, !llvm.loop !6453

for.end30:                                        ; preds = %for.cond
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6455
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !6456
  %all_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 12, !dbg !6457
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_allocnos, align 8, !dbg !6457
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %37, i32 0, i32* nonnull %j) #8, !dbg !6457
  br label %for.cond32, !dbg !6457

for.cond32:                                       ; preds = %for.body35, %for.end30
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %call33 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6459
  %tobool34 = icmp eq i8 %call33, 0, !dbg !6457
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6397
  br i1 %tobool34, label %for.end40, label %for.body35, !dbg !6457

for.body35:                                       ; preds = %for.cond32
  %39 = load i32, i32* %j, align 4, !dbg !6461
  call void @llvm.dbg.value(metadata i32 %39, metadata !6387, metadata !DIExpression()), !dbg !6397
  %40 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6462
  call void @llvm.dbg.value(metadata i32 %39, metadata !6387, metadata !DIExpression()), !dbg !6397
  %idxprom36 = zext i32 %39 to i64, !dbg !6462
  %arrayidx37 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %40, i64 %idxprom36, !dbg !6462
  %41 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx37, align 8, !dbg !6462
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %41, i64 0, i32 1, !dbg !6462
  %42 = load i32, i32* %regno, align 4, !dbg !6462
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 %39, i32 %42) #6, !dbg !6463
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6459
  br label %for.cond32, !dbg !6459, !llvm.loop !6464

for.end40:                                        ; preds = %for.cond32
  %.lcssa6 = phi %struct._IO_FILE* [ %38, %for.cond32 ], !dbg !6397
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !6466
  %modified_regnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 14, !dbg !6467
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %modified_regnos, align 8, !dbg !6467
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %43, i32 0, i32* nonnull %j) #8, !dbg !6467
  br label %for.cond42, !dbg !6467

for.cond42:                                       ; preds = %for.body45, %for.end40
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %call43 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6469
  %tobool44 = icmp eq i8 %call43, 0, !dbg !6467
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6397
  br i1 %tobool44, label %for.end48, label %for.body45, !dbg !6467

for.body45:                                       ; preds = %for.cond42
  %45 = load i32, i32* %j, align 4, !dbg !6471
  call void @llvm.dbg.value(metadata i32 %45, metadata !6387, metadata !DIExpression()), !dbg !6397
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i32 %45) #6, !dbg !6472
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6469
  br label %for.cond42, !dbg !6469, !llvm.loop !6473

for.end48:                                        ; preds = %for.cond42
  %.lcssa5 = phi %struct._IO_FILE* [ %44, %for.cond42 ], !dbg !6397
  %call49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !6475
  %border_allocnos = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 13, !dbg !6476
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %border_allocnos, align 8, !dbg !6476
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %46, i32 0, i32* nonnull %j) #8, !dbg !6476
  br label %for.cond50, !dbg !6476

for.cond50:                                       ; preds = %for.body53, %for.end48
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  %call51 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6478
  %tobool52 = icmp eq i8 %call51, 0, !dbg !6476
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6397
  br i1 %tobool52, label %for.end59, label %for.body53, !dbg !6476

for.body53:                                       ; preds = %for.cond50
  %48 = load i32, i32* %j, align 4, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %48, metadata !6387, metadata !DIExpression()), !dbg !6397
  %49 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6481
  call void @llvm.dbg.value(metadata i32 %48, metadata !6387, metadata !DIExpression()), !dbg !6397
  %idxprom54 = zext i32 %48 to i64, !dbg !6481
  %arrayidx55 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %49, i64 %idxprom54, !dbg !6481
  %50 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx55, align 8, !dbg !6481
  %regno56 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %50, i64 0, i32 1, !dbg !6481
  %51 = load i32, i32* %regno56, align 4, !dbg !6481
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 %48, i32 %51) #6, !dbg !6482
  call void @llvm.dbg.value(metadata i32* %j, metadata !6387, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6388, metadata !DIExpression(DW_OP_deref)), !dbg !6397
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %j) #8, !dbg !6478
  br label %for.cond50, !dbg !6478, !llvm.loop !6483

for.end59:                                        ; preds = %for.cond50
  %.lcssa = phi %struct._IO_FILE* [ %47, %for.cond50 ], !dbg !6397
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !6485
  call void @llvm.dbg.value(metadata i32 0, metadata !6387, metadata !DIExpression()), !dbg !6397
  br label %for.cond61, !dbg !6486

for.cond61:                                       ; preds = %cleanup, %for.end59
  %52 = phi i32 [ 0, %for.end59 ], [ %inc, %cleanup ], !dbg !6487
  store i32 %52, i32* %j, align 4, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %52, metadata !6387, metadata !DIExpression()), !dbg !6397
  %53 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6488
  %cmp62 = icmp slt i32 %52, %53, !dbg !6489
  br i1 %cmp62, label %for.body63, label %for.end78, !dbg !6490

for.body63:                                       ; preds = %for.cond61
  call void @llvm.dbg.value(metadata i32 %52, metadata !6387, metadata !DIExpression()), !dbg !6397
  %idxprom64 = zext i32 %52 to i64, !dbg !6491
  %arrayidx65 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %idxprom64, !dbg !6491
  %54 = load i32, i32* %arrayidx65, align 4, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %54, metadata !6393, metadata !DIExpression()), !dbg !6492
  %idxprom66 = zext i32 %54 to i64, !dbg !6493
  %arrayidx67 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %loop_tree_node, i64 0, i32 11, i64 %idxprom66, !dbg !6493
  %55 = load i32, i32* %arrayidx67, align 4, !dbg !6493
  %cmp68 = icmp eq i32 %55, 0, !dbg !6495
  br i1 %cmp68, label %cleanup, label %if.end70, !dbg !6496

if.end70:                                         ; preds = %for.body63
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6497
  %arrayidx72 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom66, !dbg !6498
  %57 = load i8*, i8** %arrayidx72, align 8, !dbg !6498
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* %57, i32 %55) #6, !dbg !6499
  %.pre = load i32, i32* %j, align 4, !dbg !6500
  br label %cleanup, !dbg !6501

cleanup:                                          ; preds = %for.body63, %if.end70
  %58 = phi i32 [ %52, %for.body63 ], [ %.pre, %if.end70 ], !dbg !6500
  call void @llvm.dbg.value(metadata i32 %58, metadata !6387, metadata !DIExpression()), !dbg !6397
  %inc = add i32 %58, 1, !dbg !6500
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6387, metadata !DIExpression()), !dbg !6397
  br label %for.cond61, !dbg !6502, !llvm.loop !6503

for.end78:                                        ; preds = %for.cond61
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6505
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !6507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !6507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6507
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6507
  ret void, !dbg !6507
}

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @color_allocnos() unnamed_addr #5 !dbg !6508 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %0 = bitcast i32* %i to i8*, !dbg !6514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6514
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6515
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6515
  store i1 false, i1* @allocno_coalesced_p, align 1, !dbg !6516
  %call = tail call %struct.bitmap_head_def* @ira_allocate_bitmap() #6, !dbg !6517
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !6518
  %2 = load i32, i32* @flag_ira_coalesce, align 4, !dbg !6519
  %tobool = icmp eq i32 %2, 0, !dbg !6519
  br i1 %tobool, label %if.end, label %if.then, !dbg !6521

if.then:                                          ; preds = %entry
  tail call fastcc void @coalesce_allocnos(i8 zeroext 0) #8, !dbg !6522
  br label %if.end, !dbg !6522

if.end:                                           ; preds = %entry, %if.then
  %3 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !6523
  %cmp = icmp eq i32 %3, 1, !dbg !6525
  br i1 %cmp, label %if.then1, label %if.else57, !dbg !6526

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !6511, metadata !DIExpression()), !dbg !6527
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6528
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %i) #8, !dbg !6528
  br label %for.cond, !dbg !6528

for.cond:                                         ; preds = %for.inc, %if.then1
  %n.0 = phi i32 [ 0, %if.then1 ], [ %n.1, %for.inc ], !dbg !6531
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !6511, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %call2 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6532
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6528
  br i1 %tobool3, label %for.end, label %for.body, !dbg !6528

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6534
  %6 = load i32, i32* %i, align 4, !dbg !6536
  call void @llvm.dbg.value(metadata i32 %6, metadata !6510, metadata !DIExpression()), !dbg !6527
  %idxprom = zext i32 %6 to i64, !dbg !6534
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %5, i64 %idxprom, !dbg !6534
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6534
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !6513, metadata !DIExpression()), !dbg !6527
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 9, !dbg !6537
  %8 = load i32, i32* %cover_class, align 8, !dbg !6537
  %cmp4 = icmp eq i32 %8, 0, !dbg !6539
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !6540

if.then5:                                         ; preds = %for.body
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 3, !dbg !6541
  store i32 -1, i32* %hard_regno, align 4, !dbg !6543
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 31, !dbg !6544
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !6545
  %bf.set = or i16 %bf.load, 256, !dbg !6545
  store i16 %bf.set, i16* %assigned_p, align 4, !dbg !6545
  %9 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6546
  %cmp6 = icmp sgt i32 %9, 3, !dbg !6548
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6549
  %cmp7 = icmp ne %struct._IO_FILE* %10, null, !dbg !6550
  %or.cond = and i1 %cmp6, %cmp7, !dbg !6551
  br i1 %or.cond, label %if.then8, label %for.inc, !dbg !6551

if.then8:                                         ; preds = %if.then5
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !6552
  call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %7) #8, !dbg !6554
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6555
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6556
  br label %for.inc, !dbg !6557

if.end12:                                         ; preds = %for.body
  %12 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !6558
  %inc = add i32 %n.0, 1, !dbg !6559
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6511, metadata !DIExpression()), !dbg !6527
  %idxprom13 = zext i32 %n.0 to i64, !dbg !6558
  %arrayidx14 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %12, i64 %idxprom13, !dbg !6558
  store %struct.ira_allocno* %7, %struct.ira_allocno** %arrayidx14, align 8, !dbg !6560
  br label %for.inc, !dbg !6561

for.inc:                                          ; preds = %if.then5, %if.then8, %if.end12
  %n.1 = phi i32 [ %inc, %if.end12 ], [ %n.0, %if.then8 ], [ %n.0, %if.then5 ], !dbg !6562
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !6511, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6532
  br label %for.cond, !dbg !6532, !llvm.loop !6563

for.end:                                          ; preds = %for.cond
  %n.0.lcssa = phi i32 [ %n.0, %for.cond ], !dbg !6531
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !6511, metadata !DIExpression()), !dbg !6527
  %cmp15 = icmp eq i32 %n.0.lcssa, 0, !dbg !6565
  br i1 %cmp15, label %if.end85, label %if.then16, !dbg !6567

if.then16:                                        ; preds = %for.end
  %13 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !6568
  call fastcc void @setup_allocno_priorities(%struct.ira_allocno** %13, i32 %n.0.lcssa) #8, !dbg !6570
  %14 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !6571
  %conv = zext i32 %n.0.lcssa to i64, !dbg !6572
  call void @spec_qsort(i8* %14, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @allocno_priority_compare_func) #6, !dbg !6573
  call void @llvm.dbg.value(metadata i32 0, metadata !6510, metadata !DIExpression()), !dbg !6527
  br label %for.cond17, !dbg !6574

for.cond17:                                       ; preds = %for.inc53, %if.then16
  %15 = phi i32 [ 0, %if.then16 ], [ %inc54, %for.inc53 ], !dbg !6576
  store i32 %15, i32* %i, align 4, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %15, metadata !6510, metadata !DIExpression()), !dbg !6527
  %cmp18 = icmp ult i32 %15, %n.0.lcssa, !dbg !6577
  br i1 %cmp18, label %for.body20, label %if.end85.loopexit, !dbg !6579

for.body20:                                       ; preds = %for.cond17
  %16 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %15, metadata !6510, metadata !DIExpression()), !dbg !6527
  %idxprom21 = zext i32 %15 to i64, !dbg !6580
  %arrayidx22 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %16, i64 %idxprom21, !dbg !6580
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx22, align 8, !dbg !6580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !6513, metadata !DIExpression()), !dbg !6527
  %18 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6582
  %cmp23 = icmp sgt i32 %18, 3, !dbg !6584
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6585
  %cmp26 = icmp ne %struct._IO_FILE* %19, null, !dbg !6586
  %or.cond1 = and i1 %cmp23, %cmp26, !dbg !6587
  br i1 %or.cond1, label %if.then28, label %if.end31, !dbg !6587

if.then28:                                        ; preds = %for.body20
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !6588
  call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %17) #8, !dbg !6590
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6591
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !6592
  br label %if.end31, !dbg !6593

if.end31:                                         ; preds = %if.then28, %for.body20
  %call32 = call fastcc zeroext i8 @assign_hard_reg(%struct.ira_allocno* %17, i8 zeroext 0) #8, !dbg !6594
  %tobool33 = icmp eq i8 %call32, 0, !dbg !6594
  %21 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6596
  %cmp35 = icmp sgt i32 %21, 3, !dbg !6596
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6596
  %cmp38 = icmp ne %struct._IO_FILE* %22, null, !dbg !6596
  %or.cond2 = and i1 %cmp35, %cmp38, !dbg !6596
  br i1 %tobool33, label %if.else, label %if.then34, !dbg !6597

if.then34:                                        ; preds = %if.end31
  br i1 %or.cond2, label %if.then40, label %for.inc53, !dbg !6598

if.then40:                                        ; preds = %if.then34
  %hard_regno41 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 3, !dbg !6601
  %23 = load i32, i32* %hard_regno41, align 4, !dbg !6601
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), i32 %23) #6, !dbg !6602
  br label %for.inc53, !dbg !6602

if.else:                                          ; preds = %if.end31
  br i1 %or.cond2, label %if.then49, label %for.inc53, !dbg !6603

if.then49:                                        ; preds = %if.else
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6606
  br label %for.inc53, !dbg !6606

for.inc53:                                        ; preds = %if.then40, %if.then34, %if.then49, %if.else
  %24 = load i32, i32* %i, align 4, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %24, metadata !6510, metadata !DIExpression()), !dbg !6527
  %inc54 = add i32 %24, 1, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %inc54, metadata !6510, metadata !DIExpression()), !dbg !6527
  br label %for.cond17, !dbg !6608, !llvm.loop !6609

if.else57:                                        ; preds = %if.end
  store %struct.ira_allocno* null, %struct.ira_allocno** @colorable_allocno_bucket, align 8, !dbg !6611
  store %struct.ira_allocno* null, %struct.ira_allocno** @uncolorable_allocno_bucket, align 8, !dbg !6613
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6614
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %25, i32 0, i32* nonnull %i) #8, !dbg !6614
  br label %for.cond58, !dbg !6614

for.cond58:                                       ; preds = %for.inc83, %if.else57
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %call59 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6616
  %tobool60 = icmp eq i8 %call59, 0, !dbg !6614
  br i1 %tobool60, label %for.end84, label %for.body61, !dbg !6614

for.body61:                                       ; preds = %for.cond58
  %26 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6618
  %27 = load i32, i32* %i, align 4, !dbg !6620
  call void @llvm.dbg.value(metadata i32 %27, metadata !6510, metadata !DIExpression()), !dbg !6527
  %idxprom62 = zext i32 %27 to i64, !dbg !6618
  %arrayidx63 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %26, i64 %idxprom62, !dbg !6618
  %28 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx63, align 8, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %28, metadata !6513, metadata !DIExpression()), !dbg !6527
  %cover_class64 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 9, !dbg !6621
  %29 = load i32, i32* %cover_class64, align 8, !dbg !6621
  %cmp65 = icmp eq i32 %29, 0, !dbg !6623
  br i1 %cmp65, label %if.then67, label %if.end82, !dbg !6624

if.then67:                                        ; preds = %for.body61
  %hard_regno68 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 3, !dbg !6625
  store i32 -1, i32* %hard_regno68, align 4, !dbg !6627
  %assigned_p69 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %28, i64 0, i32 31, !dbg !6628
  %bf.load70 = load i16, i16* %assigned_p69, align 4, !dbg !6629
  %bf.set72 = or i16 %bf.load70, 256, !dbg !6629
  store i16 %bf.set72, i16* %assigned_p69, align 4, !dbg !6629
  %30 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6630
  %cmp73 = icmp sgt i32 %30, 3, !dbg !6632
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6633
  %cmp76 = icmp ne %struct._IO_FILE* %31, null, !dbg !6634
  %or.cond4 = and i1 %cmp73, %cmp76, !dbg !6635
  br i1 %or.cond4, label %if.then78, label %for.inc83, !dbg !6635

if.then78:                                        ; preds = %if.then67
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !6636
  call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %28) #8, !dbg !6638
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !6639
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !6640
  br label %for.inc83, !dbg !6641

if.end82:                                         ; preds = %for.body61
  call fastcc void @put_allocno_into_bucket(%struct.ira_allocno* %28) #8, !dbg !6642
  br label %for.inc83, !dbg !6643

for.inc83:                                        ; preds = %if.then67, %if.then78, %if.end82
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6616
  br label %for.cond58, !dbg !6616, !llvm.loop !6644

for.end84:                                        ; preds = %for.cond58
  call fastcc void @push_allocnos_to_stack() #8, !dbg !6646
  call fastcc void @pop_allocnos_from_stack() #8, !dbg !6647
  br label %if.end85

if.end85.loopexit:                                ; preds = %for.cond17
  br label %if.end85, !dbg !6648

if.end85:                                         ; preds = %if.end85.loopexit, %for.end, %for.end84
  %33 = load i32, i32* @flag_ira_coalesce, align 4, !dbg !6648
  %tobool86 = icmp eq i32 %33, 0, !dbg !6648
  br i1 %tobool86, label %if.end96, label %if.then87, !dbg !6650

if.then87:                                        ; preds = %if.end85
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !6651
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %34, i32 0, i32* nonnull %i) #8, !dbg !6651
  br label %for.cond88, !dbg !6651

for.cond88:                                       ; preds = %for.body91, %if.then87
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  %call89 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6653
  %tobool90 = icmp eq i8 %call89, 0, !dbg !6651
  br i1 %tobool90, label %if.end96.loopexit, label %for.body91, !dbg !6651

for.body91:                                       ; preds = %for.cond88
  %35 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6655
  %36 = load i32, i32* %i, align 4, !dbg !6657
  call void @llvm.dbg.value(metadata i32 %36, metadata !6510, metadata !DIExpression()), !dbg !6527
  %idxprom92 = zext i32 %36 to i64, !dbg !6655
  %arrayidx93 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %35, i64 %idxprom92, !dbg !6655
  %37 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx93, align 8, !dbg !6655
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %37, metadata !6513, metadata !DIExpression()), !dbg !6527
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %37, i64 0, i32 18, !dbg !6658
  store %struct.ira_allocno* %37, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !6659
  %next_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %37, i64 0, i32 19, !dbg !6660
  store %struct.ira_allocno* %37, %struct.ira_allocno** %next_coalesced_allocno, align 8, !dbg !6661
  call void @llvm.dbg.value(metadata i32* %i, metadata !6510, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6512, metadata !DIExpression(DW_OP_deref)), !dbg !6527
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #8, !dbg !6653
  br label %for.cond88, !dbg !6653, !llvm.loop !6662

if.end96.loopexit:                                ; preds = %for.cond88
  br label %if.end96, !dbg !6664

if.end96:                                         ; preds = %if.end96.loopexit, %if.end85
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !6664
  call void @ira_free_bitmap(%struct.bitmap_head_def* %38) #6, !dbg !6665
  store i1 false, i1* @allocno_coalesced_p, align 1, !dbg !6666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !6667
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !6667
  ret void, !dbg !6667
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !6668 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !6674, metadata !DIExpression()), !dbg !6675
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !6676
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !6676
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !6676
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6676

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !6676
  br label %cond.end, !dbg !6676

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6676
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !6676
  ret i32 %call, !dbg !6677
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !6678 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !6684, metadata !DIExpression()), !dbg !6685
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !6686
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6686

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !6686
  %0 = load i32, i32* %num, align 8, !dbg !6686
  br label %cond.end, !dbg !6686

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6686
  ret i32 %cond, !dbg !6686
}

; Function Attrs: nounwind uwtable
define internal fastcc void @put_allocno_into_bucket(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !6687 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !6689, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 undef, metadata !6690, metadata !DIExpression()), !dbg !6691
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 18, !dbg !6692
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** %first_coalesced_allocno, align 8, !dbg !6692
  %cmp = icmp eq %struct.ira_allocno* %0, %allocno, !dbg !6694
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !6695

if.end:                                           ; preds = %entry
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !6696
  %1 = load i32, i32* %cover_class1, align 8, !dbg !6696
  call void @llvm.dbg.value(metadata i32 %1, metadata !6690, metadata !DIExpression()), !dbg !6691
  %in_graph_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !6697
  %bf.load = load i16, i16* %in_graph_p, align 4, !dbg !6698
  %bf.set = or i16 %bf.load, 128, !dbg !6698
  store i16 %bf.set, i16* %in_graph_p, align 4, !dbg !6698
  tail call fastcc void @setup_allocno_left_conflicts_size(%struct.ira_allocno* %allocno) #8, !dbg !6699
  tail call fastcc void @setup_allocno_available_regs_num(%struct.ira_allocno* %allocno) #8, !dbg !6700
  %left_conflicts_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 37, !dbg !6701
  %2 = load i32, i32* %left_conflicts_size, align 8, !dbg !6701
  %idxprom = zext i32 %1 to i64, !dbg !6703
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 2, !dbg !6704
  %3 = load i32, i32* %mode, align 8, !dbg !6704
  %idxprom2 = zext i32 %3 to i64, !dbg !6703
  %arrayidx3 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom2, !dbg !6703
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !6703
  %add = add nsw i32 %2, %4, !dbg !6705
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 38, !dbg !6706
  %5 = load i32, i32* %available_regs_num, align 4, !dbg !6706
  %cmp4 = icmp sgt i32 %add, %5, !dbg !6707
  br i1 %cmp4, label %if.else, label %if.then5, !dbg !6708

if.then5:                                         ; preds = %if.end
  tail call fastcc void @add_allocno_to_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** nonnull @colorable_allocno_bucket) #8, !dbg !6709
  br label %cleanup.cont, !dbg !6709

if.else:                                          ; preds = %if.end
  tail call fastcc void @add_allocno_to_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** nonnull @uncolorable_allocno_bucket) #8, !dbg !6710
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.else, %if.then5
  ret void, !dbg !6711
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_allocnos_to_stack() unnamed_addr #5 !dbg !6712 {
entry:
  %cover_class_allocnos_num = alloca [27 x i32], align 16
  %cover_class_allocnos = alloca [27 x %struct.ira_allocno**], align 16
  %0 = bitcast [27 x i32]* %cover_class_allocnos_num to i8*, !dbg !6731
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %0) #7, !dbg !6731
  call void @llvm.dbg.declare(metadata [27 x i32]* %cover_class_allocnos_num, metadata !6727, metadata !DIExpression()), !dbg !6732
  %1 = bitcast [27 x %struct.ira_allocno**]* %cover_class_allocnos to i8*, !dbg !6733
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %1) #7, !dbg !6733
  call void @llvm.dbg.declare(metadata [27 x %struct.ira_allocno**]* %cover_class_allocnos, metadata !6728, metadata !DIExpression()), !dbg !6734
  %2 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @removed_splay_allocno_vec, align 8, !dbg !6735
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %2, i64 0, i32 0, !dbg !6735
  tail call fastcc void @VEC_ira_allocno_t_base_truncate(%struct.VEC_ira_allocno_t_base* %base, i32 0) #8, !dbg !6735
  call void @llvm.dbg.value(metadata i32 0, metadata !6724, metadata !DIExpression()), !dbg !6736
  %3 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6737
  %4 = sext i32 %3 to i64, !dbg !6740
  br label %for.cond, !dbg !6740

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.body ], [ 0, %entry ], !dbg !6741
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !6724, metadata !DIExpression()), !dbg !6736
  %cmp = icmp slt i64 %indvars.iv8, %4, !dbg !6742
  br i1 %cmp, label %for.body, label %for.end, !dbg !6743

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv8, !dbg !6744
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6744
  call void @llvm.dbg.value(metadata i32 %5, metadata !6718, metadata !DIExpression()), !dbg !6736
  %idxprom1 = zext i32 %5 to i64, !dbg !6746
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* %cover_class_allocnos_num, i64 0, i64 %idxprom1, !dbg !6746
  store i32 0, i32* %arrayidx2, align 4, !dbg !6747
  %arrayidx4 = getelementptr inbounds [27 x %struct.ira_allocno**], [27 x %struct.ira_allocno**]* %cover_class_allocnos, i64 0, i64 %idxprom1, !dbg !6748
  store %struct.ira_allocno** null, %struct.ira_allocno*** %arrayidx4, align 8, !dbg !6749
  %arrayidx6 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom1, !dbg !6750
  store %struct.splay_tree_s* null, %struct.splay_tree_s** %arrayidx6, align 8, !dbg !6751
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !6752
  call void @llvm.dbg.value(metadata i32 undef, metadata !6724, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6736
  br label %for.cond, !dbg !6753, !llvm.loop !6754

for.end:                                          ; preds = %for.cond
  br label %for.cond7, !dbg !6756

for.cond7:                                        ; preds = %for.inc22, %for.end
  %allocno.0.in = phi %struct.ira_allocno** [ @uncolorable_allocno_bucket, %for.end ], [ %next_bucket_allocno, %for.inc22 ]
  %allocno.0 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.0.in, align 8, !dbg !6758
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.0, metadata !6714, metadata !DIExpression()), !dbg !6736
  %cmp8 = icmp eq %struct.ira_allocno* %allocno.0, null, !dbg !6759
  br i1 %cmp8, label %for.cond24.preheader, label %for.body9, !dbg !6761

for.cond24.preheader:                             ; preds = %for.cond7
  br label %for.cond24, !dbg !6762

for.body9:                                        ; preds = %for.cond7
  %cover_class10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.0, i64 0, i32 9, !dbg !6764
  %6 = load i32, i32* %cover_class10, align 8, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %6, metadata !6718, metadata !DIExpression()), !dbg !6736
  %cmp11 = icmp eq i32 %6, 0, !dbg !6766
  br i1 %cmp11, label %for.inc22, label %if.then, !dbg !6767

if.then:                                          ; preds = %for.body9
  %idxprom12 = zext i32 %6 to i64, !dbg !6768
  %arrayidx13 = getelementptr inbounds [27 x i32], [27 x i32]* %cover_class_allocnos_num, i64 0, i64 %idxprom12, !dbg !6768
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !6770
  %inc14 = add nsw i32 %7, 1, !dbg !6770
  store i32 %inc14, i32* %arrayidx13, align 4, !dbg !6770
  call void @llvm.dbg.value(metadata i32 0, metadata !6730, metadata !DIExpression()), !dbg !6736
  br label %for.cond15, !dbg !6771

for.cond15:                                       ; preds = %for.inc18, %if.then
  %cost.0 = phi i32 [ 0, %if.then ], [ %add, %for.inc18 ], !dbg !6773
  %allocno.0.pn = phi %struct.ira_allocno* [ %allocno.0, %if.then ], [ %a.0, %for.inc18 ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.0.pn, i64 0, i32 19, !dbg !6774
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !6774
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !6715, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %cost.0, metadata !6730, metadata !DIExpression()), !dbg !6736
  %call = tail call fastcc i32 @calculate_allocno_spill_cost(%struct.ira_allocno* %a.0) #8, !dbg !6775
  %add = add nsw i32 %cost.0, %call, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %add, metadata !6730, metadata !DIExpression()), !dbg !6736
  %cmp16 = icmp eq %struct.ira_allocno* %a.0, %allocno.0, !dbg !6779
  br i1 %cmp16, label %for.end20, label %for.inc18, !dbg !6781

for.inc18:                                        ; preds = %for.cond15
  br label %for.cond15, !dbg !6782, !llvm.loop !6783

for.end20:                                        ; preds = %for.cond15
  %add.lcssa = phi i32 [ %add, %for.cond15 ], !dbg !6778
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.0, i64 0, i32 41, !dbg !6786
  store i32 %add.lcssa, i32* %temp, align 8, !dbg !6787
  br label %for.inc22, !dbg !6788

for.inc22:                                        ; preds = %for.body9, %for.end20
  %next_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.0, i64 0, i32 39, !dbg !6789
  br label %for.cond7, !dbg !6790, !llvm.loop !6791

for.cond24:                                       ; preds = %for.cond24.preheader, %for.inc49
  %indvars.iv6 = phi i64 [ 0, %for.cond24.preheader ], [ %indvars.iv.next7, %for.inc49 ], !dbg !6793
  %num.0 = phi i32 [ 0, %for.cond24.preheader ], [ %num.1, %for.inc49 ], !dbg !6793
  call void @llvm.dbg.value(metadata i32 %num.0, metadata !6726, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !6724, metadata !DIExpression()), !dbg !6736
  %8 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6794
  %9 = sext i32 %8 to i64, !dbg !6796
  %cmp25 = icmp slt i64 %indvars.iv6, %9, !dbg !6796
  br i1 %cmp25, label %for.body26, label %for.end51, !dbg !6762

for.body26:                                       ; preds = %for.cond24
  %arrayidx28 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv6, !dbg !6797
  %10 = load i32, i32* %arrayidx28, align 4, !dbg !6797
  call void @llvm.dbg.value(metadata i32 %10, metadata !6718, metadata !DIExpression()), !dbg !6736
  %idxprom29 = zext i32 %10 to i64, !dbg !6799
  %arrayidx30 = getelementptr inbounds [27 x i32], [27 x i32]* %cover_class_allocnos_num, i64 0, i64 %idxprom29, !dbg !6799
  %11 = load i32, i32* %arrayidx30, align 4, !dbg !6799
  %cmp31 = icmp eq i32 %11, 0, !dbg !6801
  br i1 %cmp31, label %if.end40, label %if.then32, !dbg !6802

if.then32:                                        ; preds = %for.body26
  %12 = load %struct.ira_allocno**, %struct.ira_allocno*** @allocnos_for_spilling, align 8, !dbg !6803
  %idx.ext = sext i32 %num.0 to i64, !dbg !6805
  %add.ptr = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %12, i64 %idx.ext, !dbg !6805
  %arrayidx34 = getelementptr inbounds [27 x %struct.ira_allocno**], [27 x %struct.ira_allocno**]* %cover_class_allocnos, i64 0, i64 %idxprom29, !dbg !6806
  store %struct.ira_allocno** %add.ptr, %struct.ira_allocno*** %arrayidx34, align 8, !dbg !6807
  %add37 = add nsw i32 %num.0, %11, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %add37, metadata !6726, metadata !DIExpression()), !dbg !6736
  store i32 0, i32* %arrayidx30, align 4, !dbg !6809
  br label %if.end40, !dbg !6810

if.end40:                                         ; preds = %for.body26, %if.then32
  %num.1 = phi i32 [ %add37, %if.then32 ], [ %num.0, %for.body26 ], !dbg !6793
  call void @llvm.dbg.value(metadata i32 %num.1, metadata !6726, metadata !DIExpression()), !dbg !6736
  %arrayidx42 = getelementptr inbounds [27 x i32], [27 x i32]* @uncolorable_allocnos_num, i64 0, i64 %idxprom29, !dbg !6811
  %13 = load i32, i32* %arrayidx42, align 4, !dbg !6811
  %cmp43 = icmp sgt i32 %13, 4000, !dbg !6811
  br i1 %cmp43, label %if.then44, label %for.inc49, !dbg !6813

if.then44:                                        ; preds = %if.end40
  %call45 = tail call %struct.splay_tree_s* @splay_tree_new_with_allocator(i32 (i64, i64)* nonnull @allocno_spill_priority_compare, void (i64)* null, void (i64)* null, i8* (i32, i8*)* nonnull @splay_tree_allocate, void (i8*, i8*)* nonnull @splay_tree_free, i8* null) #6, !dbg !6814
  %arrayidx47 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom29, !dbg !6815
  store %struct.splay_tree_s* %call45, %struct.splay_tree_s** %arrayidx47, align 8, !dbg !6816
  br label %for.inc49, !dbg !6815

for.inc49:                                        ; preds = %if.end40, %if.then44
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !6817
  call void @llvm.dbg.value(metadata i32 undef, metadata !6724, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6736
  br label %for.cond24, !dbg !6818, !llvm.loop !6819

for.end51:                                        ; preds = %for.cond24
  br label %for.cond52, !dbg !6821

for.cond52:                                       ; preds = %for.inc74, %for.end51
  %allocno.1.in = phi %struct.ira_allocno** [ @uncolorable_allocno_bucket, %for.end51 ], [ %next_bucket_allocno75, %for.inc74 ]
  %allocno.1 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.1.in, align 8, !dbg !6823
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.1, metadata !6714, metadata !DIExpression()), !dbg !6736
  %cmp53 = icmp eq %struct.ira_allocno* %allocno.1, null, !dbg !6824
  br i1 %cmp53, label %for.cond77.preheader, label %for.body54, !dbg !6826

for.cond77.preheader:                             ; preds = %for.cond52
  br label %for.cond77, !dbg !6827

for.body54:                                       ; preds = %for.cond52
  %cover_class55 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.1, i64 0, i32 9, !dbg !6829
  %14 = load i32, i32* %cover_class55, align 8, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %14, metadata !6718, metadata !DIExpression()), !dbg !6736
  %cmp56 = icmp eq i32 %14, 0, !dbg !6831
  br i1 %cmp56, label %for.inc74, label %if.then57, !dbg !6832

if.then57:                                        ; preds = %for.body54
  %idxprom58 = zext i32 %14 to i64, !dbg !6833
  %arrayidx59 = getelementptr inbounds [27 x %struct.ira_allocno**], [27 x %struct.ira_allocno**]* %cover_class_allocnos, i64 0, i64 %idxprom58, !dbg !6833
  %15 = load %struct.ira_allocno**, %struct.ira_allocno*** %arrayidx59, align 8, !dbg !6833
  %arrayidx61 = getelementptr inbounds [27 x i32], [27 x i32]* %cover_class_allocnos_num, i64 0, i64 %idxprom58, !dbg !6835
  %16 = load i32, i32* %arrayidx61, align 4, !dbg !6836
  %inc62 = add nsw i32 %16, 1, !dbg !6836
  store i32 %inc62, i32* %arrayidx61, align 4, !dbg !6836
  %idxprom63 = sext i32 %16 to i64, !dbg !6833
  %arrayidx64 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %15, i64 %idxprom63, !dbg !6833
  store %struct.ira_allocno* %allocno.1, %struct.ira_allocno** %arrayidx64, align 8, !dbg !6837
  %arrayidx66 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom58, !dbg !6838
  %17 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx66, align 8, !dbg !6838
  %cmp67 = icmp eq %struct.splay_tree_s* %17, null, !dbg !6840
  br i1 %cmp67, label %for.inc74, label %if.then68, !dbg !6841

if.then68:                                        ; preds = %if.then57
  %18 = ptrtoint %struct.ira_allocno* %allocno.1 to i64, !dbg !6842
  %call71 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* nonnull %17, i64 %18, i64 %18) #6, !dbg !6843
  br label %for.inc74, !dbg !6843

for.inc74:                                        ; preds = %if.then57, %for.body54, %if.then68
  %next_bucket_allocno75 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.1, i64 0, i32 39, !dbg !6844
  br label %for.cond52, !dbg !6845, !llvm.loop !6846

for.cond77:                                       ; preds = %for.cond77.backedge, %for.cond77.preheader
  tail call fastcc void @push_only_colorable() #8, !dbg !6848
  %19 = load %struct.ira_allocno*, %struct.ira_allocno** @uncolorable_allocno_bucket, align 8, !dbg !6851
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %19, metadata !6714, metadata !DIExpression()), !dbg !6736
  %cmp78 = icmp eq %struct.ira_allocno* %19, null, !dbg !6852
  br i1 %cmp78, label %for.cond222.preheader, label %if.end80, !dbg !6854

for.cond222.preheader:                            ; preds = %for.cond77
  br label %for.cond222, !dbg !6855

if.end80:                                         ; preds = %for.cond77
  %cover_class81 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %19, i64 0, i32 9, !dbg !6857
  %20 = load i32, i32* %cover_class81, align 8, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %20, metadata !6718, metadata !DIExpression()), !dbg !6736
  %cmp82 = icmp eq i32 %20, 0, !dbg !6858
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !6860

if.then83:                                        ; preds = %if.end80
  tail call fastcc void @push_allocno_to_spill(%struct.ira_allocno* nonnull %19) #8, !dbg !6861
  br label %for.cond77.backedge, !dbg !6863

for.cond77.backedge:                              ; preds = %if.then83, %if.end220
  br label %for.cond77, !dbg !6848, !llvm.loop !6864

if.end84:                                         ; preds = %if.end80
  %idxprom85 = zext i32 %20 to i64, !dbg !6866
  %arrayidx86 = getelementptr inbounds [27 x i32], [27 x i32]* @uncolorable_allocnos_num, i64 0, i64 %idxprom85, !dbg !6866
  %21 = load i32, i32* %arrayidx86, align 4, !dbg !6866
  %cmp87 = icmp sgt i32 %21, 4000, !dbg !6866
  br i1 %cmp87, label %for.cond89.preheader, label %if.else, !dbg !6868

for.cond89.preheader:                             ; preds = %if.end84
  br label %for.cond89, !dbg !6869

for.cond89:                                       ; preds = %for.cond89.preheader, %if.end117
  %22 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @removed_splay_allocno_vec, align 8, !dbg !6872
  %base92 = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %22, i64 0, i32 0, !dbg !6872
  %call96 = tail call fastcc i32 @VEC_ira_allocno_t_base_length(%struct.VEC_ira_allocno_t_base* %base92) #8, !dbg !6872
  %cmp97 = icmp eq i32 %call96, 0, !dbg !6874
  br i1 %cmp97, label %for.end118, label %for.body98, !dbg !6869

for.body98:                                       ; preds = %for.cond89
  %23 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @removed_splay_allocno_vec, align 8, !dbg !6875
  %base101 = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %23, i64 0, i32 0, !dbg !6875
  %call105 = tail call fastcc %struct.ira_allocno* @VEC_ira_allocno_t_base_pop(%struct.VEC_ira_allocno_t_base* %base101) #8, !dbg !6875
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %call105, metadata !6714, metadata !DIExpression()), !dbg !6736
  %splay_removed_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call105, i64 0, i32 31, !dbg !6877
  %bf.load = load i16, i16* %splay_removed_p, align 4, !dbg !6878
  %bf.clear = and i16 %bf.load, -1025, !dbg !6878
  store i16 %bf.clear, i16* %splay_removed_p, align 4, !dbg !6878
  %cover_class106 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call105, i64 0, i32 9, !dbg !6879
  %24 = load i32, i32* %cover_class106, align 8, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %24, metadata !6719, metadata !DIExpression()), !dbg !6736
  %left_conflicts_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call105, i64 0, i32 37, !dbg !6880
  %25 = load i32, i32* %left_conflicts_size, align 8, !dbg !6880
  %idxprom107 = zext i32 %24 to i64, !dbg !6882
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call105, i64 0, i32 2, !dbg !6883
  %26 = load i32, i32* %mode, align 8, !dbg !6883
  %idxprom109 = zext i32 %26 to i64, !dbg !6882
  %arrayidx110 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom107, i64 %idxprom109, !dbg !6882
  %27 = load i32, i32* %arrayidx110, align 4, !dbg !6882
  %add111 = add nsw i32 %25, %27, !dbg !6884
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call105, i64 0, i32 38, !dbg !6885
  %28 = load i32, i32* %available_regs_num, align 4, !dbg !6885
  %cmp112 = icmp sgt i32 %add111, %28, !dbg !6886
  br i1 %cmp112, label %if.then113, label %if.end117, !dbg !6887

if.then113:                                       ; preds = %for.body98
  %arrayidx115 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom107, !dbg !6888
  %29 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx115, align 8, !dbg !6888
  %30 = ptrtoint %struct.ira_allocno* %call105 to i64, !dbg !6889
  %call116 = tail call %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s* %29, i64 %30, i64 %30) #6, !dbg !6890
  br label %if.end117, !dbg !6890

if.end117:                                        ; preds = %if.then113, %for.body98
  br label %for.cond89, !dbg !6891, !llvm.loop !6892

for.end118:                                       ; preds = %for.cond89
  %arrayidx120 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom85, !dbg !6894
  %31 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx120, align 8, !dbg !6894
  %call121 = tail call %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s* %31) #6, !dbg !6895
  %32 = bitcast %struct.splay_tree_node_s* %call121 to %struct.ira_allocno**, !dbg !6896
  %33 = load %struct.ira_allocno*, %struct.ira_allocno** %32, align 8, !dbg !6896
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %33, metadata !6714, metadata !DIExpression()), !dbg !6736
  %34 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx120, align 8, !dbg !6897
  %35 = ptrtoint %struct.ira_allocno* %33 to i64, !dbg !6898
  tail call void @splay_tree_remove(%struct.splay_tree_s* %34, i64 %35) #6, !dbg !6899
  br label %if.end220, !dbg !6900

if.else:                                          ; preds = %if.end84
  %arrayidx125 = getelementptr inbounds [27 x i32], [27 x i32]* %cover_class_allocnos_num, i64 0, i64 %idxprom85, !dbg !6901
  %36 = load i32, i32* %arrayidx125, align 4, !dbg !6901
  call void @llvm.dbg.value(metadata i32 %36, metadata !6726, metadata !DIExpression()), !dbg !6736
  %arrayidx127 = getelementptr inbounds [27 x %struct.ira_allocno**], [27 x %struct.ira_allocno**]* %cover_class_allocnos, i64 0, i64 %idxprom85, !dbg !6903
  %37 = load %struct.ira_allocno**, %struct.ira_allocno*** %arrayidx127, align 8, !dbg !6903
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %37, metadata !6717, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.ira_allocno* null, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 0, metadata !6722, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 0, metadata !6720, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 0, metadata !6724, metadata !DIExpression()), !dbg !6736
  %sub = add nsw i32 %36, -1, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6725, metadata !DIExpression()), !dbg !6736
  br label %for.cond128, !dbg !6906

for.cond128:                                      ; preds = %if.end205, %if.else
  %i.2 = phi i32 [ 0, %if.else ], [ %i.3, %if.end205 ], !dbg !6907
  %allocno_cost.0 = phi i32 [ 0, %if.else ], [ %allocno_cost.2, %if.end205 ], !dbg !6908
  %j.0 = phi i32 [ %sub, %if.else ], [ %spec.select, %if.end205 ], !dbg !6909
  %allocno_pri.0 = phi i32 [ 0, %if.else ], [ %allocno_pri.2, %if.end205 ], !dbg !6908
  %allocno.2 = phi %struct.ira_allocno* [ null, %if.else ], [ %allocno.4, %if.end205 ], !dbg !6908
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.2, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %allocno_pri.0, metadata !6720, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6725, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %allocno_cost.0, metadata !6722, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !6724, metadata !DIExpression()), !dbg !6736
  %cmp129 = icmp sgt i32 %i.2, %j.0, !dbg !6910
  br i1 %cmp129, label %for.end216, label %for.body130, !dbg !6912

for.body130:                                      ; preds = %for.cond128
  %idxprom131 = sext i32 %i.2 to i64, !dbg !6913
  %arrayidx132 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %37, i64 %idxprom131, !dbg !6913
  %38 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx132, align 8, !dbg !6913
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %38, metadata !6716, metadata !DIExpression()), !dbg !6736
  %in_graph_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %38, i64 0, i32 31, !dbg !6915
  %bf.load133 = load i16, i16* %in_graph_p, align 4, !dbg !6915
  %39 = trunc i16 %bf.load133 to i8, !dbg !6915
  %tobool135 = icmp slt i8 %39, 0, !dbg !6915
  %40 = ptrtoint %struct.ira_allocno* %38 to i64, !dbg !6917
  br i1 %tobool135, label %if.end153, label %land.lhs.true, !dbg !6917

land.lhs.true:                                    ; preds = %for.body130
  %idxprom136 = sext i32 %j.0 to i64, !dbg !6918
  %arrayidx137 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %37, i64 %idxprom136, !dbg !6918
  %41 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx137, align 8, !dbg !6918
  %in_graph_p138 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %41, i64 0, i32 31, !dbg !6918
  %bf.load139 = load i16, i16* %in_graph_p138, align 4, !dbg !6918
  %42 = trunc i16 %bf.load139 to i8, !dbg !6918
  %tobool143 = icmp slt i8 %42, 0, !dbg !6918
  br i1 %tobool143, label %if.then144, label %if.end153, !dbg !6919

if.then144:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %41, metadata !6716, metadata !DIExpression()), !dbg !6736
  %43 = bitcast %struct.ira_allocno** %arrayidx137 to i64*, !dbg !6920
  store i64 %40, i64* %43, align 8, !dbg !6920
  store %struct.ira_allocno* %41, %struct.ira_allocno** %arrayidx132, align 8, !dbg !6922
  %bf.load155.pre = load i16, i16* %in_graph_p138, align 4, !dbg !6923
  %.pre = trunc i16 %bf.load155.pre to i8, !dbg !6923
  br label %if.end153, !dbg !6925

if.end153:                                        ; preds = %if.then144, %land.lhs.true, %for.body130
  %.pre-phi = phi i8 [ %.pre, %if.then144 ], [ %39, %land.lhs.true ], [ %39, %for.body130 ], !dbg !6923
  %i_allocno.0 = phi %struct.ira_allocno* [ %41, %if.then144 ], [ %38, %land.lhs.true ], [ %38, %for.body130 ], !dbg !6926
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %i_allocno.0, metadata !6716, metadata !DIExpression()), !dbg !6736
  %in_graph_p154 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %i_allocno.0, i64 0, i32 31, !dbg !6923
  %tobool159 = icmp slt i8 %.pre-phi, 0, !dbg !6923
  br i1 %tobool159, label %if.then160, label %if.end205, !dbg !6927

if.then160:                                       ; preds = %if.end153
  %inc161 = add nsw i32 %i.2, 1, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %inc161, metadata !6724, metadata !DIExpression()), !dbg !6736
  %temp162 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %i_allocno.0, i64 0, i32 41, !dbg !6930
  %44 = load i32, i32* %temp162, align 8, !dbg !6930
  call void @llvm.dbg.value(metadata i32 %44, metadata !6723, metadata !DIExpression()), !dbg !6736
  %call163 = tail call fastcc i32 @allocno_spill_priority(%struct.ira_allocno* %i_allocno.0) #8, !dbg !6931
  call void @llvm.dbg.value(metadata i32 %call163, metadata !6721, metadata !DIExpression()), !dbg !6736
  %cmp164 = icmp eq %struct.ira_allocno* %allocno.2, null, !dbg !6932
  br i1 %cmp164, label %if.then203, label %lor.lhs.false, !dbg !6934

lor.lhs.false:                                    ; preds = %if.then160
  %bf.load165 = load i16, i16* %in_graph_p154, align 4, !dbg !6935
  %bf.clear167 = and i16 %bf.load165, 64, !dbg !6935
  %tobool169 = icmp eq i16 %bf.clear167, 0, !dbg !6935
  br i1 %tobool169, label %land.lhs.true170, label %lor.lhs.false177, !dbg !6936

land.lhs.true170:                                 ; preds = %lor.lhs.false
  %bad_spill_p171 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.2, i64 0, i32 31, !dbg !6937
  %bf.load172 = load i16, i16* %bad_spill_p171, align 4, !dbg !6937
  %bf.clear174 = and i16 %bf.load172, 64, !dbg !6937
  %tobool176 = icmp eq i16 %bf.clear174, 0, !dbg !6937
  br i1 %tobool176, label %lor.lhs.false177, label %if.then203, !dbg !6938

lor.lhs.false177:                                 ; preds = %land.lhs.true170, %lor.lhs.false
  br i1 %tobool169, label %land.lhs.true191, label %land.lhs.true184, !dbg !6939

land.lhs.true184:                                 ; preds = %lor.lhs.false177
  %bad_spill_p185 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.2, i64 0, i32 31, !dbg !6940
  %bf.load186 = load i16, i16* %bad_spill_p185, align 4, !dbg !6940
  %bf.clear188 = and i16 %bf.load186, 64, !dbg !6940
  %tobool190 = icmp eq i16 %bf.clear188, 0, !dbg !6940
  br i1 %tobool190, label %if.end205, label %land.lhs.true191, !dbg !6941

land.lhs.true191:                                 ; preds = %land.lhs.true184, %lor.lhs.false177
  %cmp192 = icmp sgt i32 %allocno_pri.0, %call163, !dbg !6942
  br i1 %cmp192, label %if.then203, label %lor.lhs.false193, !dbg !6943

lor.lhs.false193:                                 ; preds = %land.lhs.true191
  %cmp194 = icmp eq i32 %allocno_pri.0, %call163, !dbg !6944
  br i1 %cmp194, label %land.lhs.true195, label %if.end205, !dbg !6945

land.lhs.true195:                                 ; preds = %lor.lhs.false193
  %cmp196 = icmp sgt i32 %allocno_cost.0, %44, !dbg !6946
  br i1 %cmp196, label %if.then203, label %lor.lhs.false197, !dbg !6947

lor.lhs.false197:                                 ; preds = %land.lhs.true195
  %cmp198 = icmp eq i32 %allocno_cost.0, %44, !dbg !6948
  br i1 %cmp198, label %land.lhs.true199, label %if.end205, !dbg !6949

land.lhs.true199:                                 ; preds = %lor.lhs.false197
  %num200 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.2, i64 0, i32 0, !dbg !6950
  %45 = load i32, i32* %num200, align 8, !dbg !6950
  %num201 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %i_allocno.0, i64 0, i32 0, !dbg !6951
  %46 = load i32, i32* %num201, align 8, !dbg !6951
  %cmp202 = icmp sgt i32 %45, %46, !dbg !6952
  br i1 %cmp202, label %if.then203, label %if.end205, !dbg !6953

if.then203:                                       ; preds = %land.lhs.true170, %land.lhs.true199, %land.lhs.true195, %land.lhs.true191, %if.then160
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %i_allocno.0, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %44, metadata !6722, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %call163, metadata !6720, metadata !DIExpression()), !dbg !6736
  br label %if.end205, !dbg !6954

if.end205:                                        ; preds = %land.lhs.true184, %lor.lhs.false193, %lor.lhs.false197, %land.lhs.true199, %if.then203, %if.end153
  %i.3 = phi i32 [ %i.2, %if.end153 ], [ %inc161, %if.then203 ], [ %inc161, %land.lhs.true199 ], [ %inc161, %lor.lhs.false197 ], [ %inc161, %lor.lhs.false193 ], [ %inc161, %land.lhs.true184 ], !dbg !6907
  %allocno_cost.2 = phi i32 [ %allocno_cost.0, %if.end153 ], [ %44, %if.then203 ], [ %allocno_cost.0, %land.lhs.true199 ], [ %allocno_cost.0, %lor.lhs.false197 ], [ %allocno_cost.0, %lor.lhs.false193 ], [ %allocno_cost.0, %land.lhs.true184 ], !dbg !6908
  %allocno_pri.2 = phi i32 [ %allocno_pri.0, %if.end153 ], [ %call163, %if.then203 ], [ %allocno_pri.0, %land.lhs.true199 ], [ %allocno_pri.0, %lor.lhs.false197 ], [ %allocno_pri.0, %lor.lhs.false193 ], [ %allocno_pri.0, %land.lhs.true184 ], !dbg !6908
  %allocno.4 = phi %struct.ira_allocno* [ %allocno.2, %if.end153 ], [ %i_allocno.0, %if.then203 ], [ %allocno.2, %land.lhs.true199 ], [ %allocno.2, %lor.lhs.false197 ], [ %allocno.2, %lor.lhs.false193 ], [ %allocno.2, %land.lhs.true184 ], !dbg !6908
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.4, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %allocno_pri.2, metadata !6720, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %allocno_cost.2, metadata !6722, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %i.3, metadata !6724, metadata !DIExpression()), !dbg !6736
  %idxprom206 = sext i32 %j.0 to i64, !dbg !6956
  %arrayidx207 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %37, i64 %idxprom206, !dbg !6956
  %47 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx207, align 8, !dbg !6956
  %in_graph_p208 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %47, i64 0, i32 31, !dbg !6956
  %bf.load209 = load i16, i16* %in_graph_p208, align 4, !dbg !6956
  %48 = lshr i16 %bf.load209, 7, !dbg !6958
  %49 = and i16 %48, 1, !dbg !6958
  %50 = xor i16 %49, 1, !dbg !6958
  %.not = zext i16 %50 to i32, !dbg !6958
  %spec.select = sub i32 %j.0, %.not, !dbg !6958
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6725, metadata !DIExpression()), !dbg !6736
  br label %for.cond128, !dbg !6959, !llvm.loop !6960

for.end216:                                       ; preds = %for.cond128
  %j.0.lcssa = phi i32 [ %j.0, %for.cond128 ], !dbg !6909
  %allocno.2.lcssa = phi %struct.ira_allocno* [ %allocno.2, %for.cond128 ], !dbg !6908
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6725, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.2.lcssa, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6725, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.2.lcssa, metadata !6714, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa, metadata !6725, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.2.lcssa, metadata !6714, metadata !DIExpression()), !dbg !6736
  %add217 = add nsw i32 %j.0.lcssa, 1, !dbg !6962
  store i32 %add217, i32* %arrayidx125, align 4, !dbg !6963
  br label %if.end220

if.end220:                                        ; preds = %for.end216, %for.end118
  %allocno.5 = phi %struct.ira_allocno* [ %33, %for.end118 ], [ %allocno.2.lcssa, %for.end216 ], !dbg !6964
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno.5, metadata !6714, metadata !DIExpression()), !dbg !6736
  tail call fastcc void @remove_allocno_from_bucket_and_push(%struct.ira_allocno* %allocno.5, i8 zeroext 0) #8, !dbg !6965
  br label %for.cond77.backedge, !dbg !6966

for.cond222:                                      ; preds = %for.cond222.preheader, %for.inc234
  %indvars.iv = phi i64 [ 0, %for.cond222.preheader ], [ %indvars.iv.next, %for.inc234 ], !dbg !6967
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6724, metadata !DIExpression()), !dbg !6736
  %51 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !6968
  %52 = sext i32 %51 to i64, !dbg !6970
  %cmp223 = icmp slt i64 %indvars.iv, %52, !dbg !6970
  br i1 %cmp223, label %for.body224, label %for.end236, !dbg !6855

for.body224:                                      ; preds = %for.cond222
  %arrayidx226 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !6971
  %53 = load i32, i32* %arrayidx226, align 4, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %53, metadata !6718, metadata !DIExpression()), !dbg !6736
  %idxprom227 = zext i32 %53 to i64, !dbg !6973
  %arrayidx228 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom227, !dbg !6973
  %54 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx228, align 8, !dbg !6973
  %cmp229 = icmp eq %struct.splay_tree_s* %54, null, !dbg !6975
  br i1 %cmp229, label %for.inc234, label %if.then230, !dbg !6976

if.then230:                                       ; preds = %for.body224
  tail call void @splay_tree_delete(%struct.splay_tree_s* nonnull %54) #6, !dbg !6977
  br label %for.inc234, !dbg !6977

for.inc234:                                       ; preds = %for.body224, %if.then230
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6978
  call void @llvm.dbg.value(metadata i32 undef, metadata !6724, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6736
  br label %for.cond222, !dbg !6979, !llvm.loop !6980

for.end236:                                       ; preds = %for.cond222
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %1) #7, !dbg !6982
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %0) #7, !dbg !6982
  ret void, !dbg !6982
}

; Function Attrs: nounwind uwtable
define internal fastcc void @pop_allocnos_from_stack() unnamed_addr #5 !dbg !6983 {
entry:
  br label %for.cond, !dbg !6987

for.cond:                                         ; preds = %if.end45, %entry
  %0 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @allocno_stack_vec, align 8, !dbg !6988
  %base = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %0, i64 0, i32 0, !dbg !6988
  %call = tail call fastcc i32 @VEC_ira_allocno_t_base_length(%struct.VEC_ira_allocno_t_base* %base) #8, !dbg !6988
  %cmp = icmp eq i32 %call, 0, !dbg !6991
  br i1 %cmp, label %for.end, label %for.body, !dbg !6992

for.body:                                         ; preds = %for.cond
  %1 = load %struct.VEC_ira_allocno_t_heap*, %struct.VEC_ira_allocno_t_heap** @allocno_stack_vec, align 8, !dbg !6993
  %base3 = getelementptr inbounds %struct.VEC_ira_allocno_t_heap, %struct.VEC_ira_allocno_t_heap* %1, i64 0, i32 0, !dbg !6993
  %call7 = tail call fastcc %struct.ira_allocno* @VEC_ira_allocno_t_base_pop(%struct.VEC_ira_allocno_t_base* %base3) #8, !dbg !6993
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %call7, metadata !6985, metadata !DIExpression()), !dbg !6995
  %cover_class8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 9, !dbg !6996
  %2 = load i32, i32* %cover_class8, align 8, !dbg !6996
  call void @llvm.dbg.value(metadata i32 %2, metadata !6986, metadata !DIExpression()), !dbg !6995
  %3 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !6997
  %cmp9 = icmp sgt i32 %3, 3, !dbg !6999
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7000
  %cmp10 = icmp ne %struct._IO_FILE* %4, null, !dbg !7001
  %or.cond = and i1 %cmp9, %cmp10, !dbg !7002
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7002

if.then:                                          ; preds = %for.body
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !7003
  tail call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %call7) #8, !dbg !7005
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7006
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !7007
  br label %if.end, !dbg !7008

if.end:                                           ; preds = %if.then, %for.body
  %cmp13 = icmp eq i32 %2, 0, !dbg !7009
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !7011

if.then14:                                        ; preds = %if.end
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 3, !dbg !7012
  store i32 -1, i32* %hard_regno, align 4, !dbg !7014
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 31, !dbg !7015
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !7016
  %bf.set = or i16 %bf.load, 256, !dbg !7016
  store i16 %bf.set, i16* %assigned_p, align 4, !dbg !7016
  %6 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7017
  %cmp15 = icmp sgt i32 %6, 3, !dbg !7019
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7020
  %cmp17 = icmp ne %struct._IO_FILE* %7, null, !dbg !7021
  %or.cond1 = and i1 %cmp15, %cmp17, !dbg !7022
  br i1 %or.cond1, label %if.then18, label %if.end45, !dbg !7022

if.then18:                                        ; preds = %if.then14
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !7023
  br label %if.end45, !dbg !7023

if.else:                                          ; preds = %if.end
  %call21 = tail call fastcc zeroext i8 @assign_hard_reg(%struct.ira_allocno* %call7, i8 zeroext 0) #8, !dbg !7024
  %tobool22 = icmp eq i8 %call21, 0, !dbg !7024
  br i1 %tobool22, label %if.else31, label %if.then23, !dbg !7026

if.then23:                                        ; preds = %if.else
  %8 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7027
  %cmp24 = icmp sgt i32 %8, 3, !dbg !7030
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7031
  %cmp26 = icmp ne %struct._IO_FILE* %9, null, !dbg !7032
  %or.cond2 = and i1 %cmp24, %cmp26, !dbg !7033
  br i1 %or.cond2, label %if.then27, label %if.end45, !dbg !7033

if.then27:                                        ; preds = %if.then23
  %hard_regno28 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 3, !dbg !7034
  %10 = load i32, i32* %hard_regno28, align 4, !dbg !7034
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i32 %10) #6, !dbg !7035
  br label %if.end45, !dbg !7035

if.else31:                                        ; preds = %if.else
  %assigned_p32 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 31, !dbg !7036
  %bf.load33 = load i16, i16* %assigned_p32, align 4, !dbg !7036
  %bf.clear34 = and i16 %bf.load33, 256, !dbg !7036
  %tobool35 = icmp eq i16 %bf.clear34, 0, !dbg !7036
  br i1 %tobool35, label %if.end45, label %if.then36, !dbg !7038

if.then36:                                        ; preds = %if.else31
  %11 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7039
  %cmp37 = icmp sgt i32 %11, 3, !dbg !7042
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7043
  %cmp39 = icmp ne %struct._IO_FILE* %12, null, !dbg !7044
  %or.cond3 = and i1 %cmp37, %cmp39, !dbg !7045
  br i1 %or.cond3, label %if.then40, label %if.end45, !dbg !7045

if.then40:                                        ; preds = %if.then36
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !7046
  br label %if.end45, !dbg !7046

if.end45:                                         ; preds = %if.else31, %if.then27, %if.then23, %if.then36, %if.then40, %if.then14, %if.then18
  %in_graph_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %call7, i64 0, i32 31, !dbg !7047
  %bf.load46 = load i16, i16* %in_graph_p, align 4, !dbg !7048
  %bf.set48 = or i16 %bf.load46, 128, !dbg !7048
  store i16 %bf.set48, i16* %in_graph_p, align 4, !dbg !7048
  br label %for.cond, !dbg !7049, !llvm.loop !7050

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7052
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_allocno_left_conflicts_size(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !7053 {
entry:
  %conflict_allocno = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7055, metadata !DIExpression()), !dbg !7078
  %0 = bitcast %struct.ira_allocno** %conflict_allocno to i8*, !dbg !7079
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7079
  %1 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !7080
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7080
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !7081
  %2 = load i32, i32* %cover_class1, align 8, !dbg !7081
  call void @llvm.dbg.value(metadata i32 %2, metadata !7062, metadata !DIExpression()), !dbg !7078
  %idxprom = zext i32 %2 to i64, !dbg !7082
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !7082
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7082
  call void @llvm.dbg.value(metadata i32 %3, metadata !7057, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 0, metadata !7063, metadata !DIExpression()), !dbg !7078
  br label %for.cond, !dbg !7083

for.cond:                                         ; preds = %for.inc, %entry
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %entry ], [ %a.0, %for.inc ]
  %temp_set.0 = phi i64 [ 0, %entry ], [ %or, %for.inc ], !dbg !7078
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !7085
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7085
  call void @llvm.dbg.value(metadata i64 %temp_set.0, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7060, metadata !DIExpression()), !dbg !7078
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 27, !dbg !7086
  %4 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !7086
  %or = or i64 %temp_set.0, %4, !dbg !7086
  call void @llvm.dbg.value(metadata i64 %or, metadata !7063, metadata !DIExpression()), !dbg !7078
  %cmp = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !7089
  br i1 %cmp, label %for.end, label %for.inc, !dbg !7091

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !7092, !llvm.loop !7093

for.end:                                          ; preds = %for.cond
  %or.lcssa = phi i64 [ %or, %for.cond ], !dbg !7086
  %arrayidx4 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !7096
  %5 = load i64, i64* %arrayidx4, align 8, !dbg !7096
  %and = and i64 %or.lcssa, %5, !dbg !7096
  call void @llvm.dbg.value(metadata i64 %and, metadata !7063, metadata !DIExpression()), !dbg !7078
  %6 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !7097
  %neg = xor i64 %6, -1, !dbg !7097
  %and5 = and i64 %and, %neg, !dbg !7097
  call void @llvm.dbg.value(metadata i64 %and5, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 0, metadata !7059, metadata !DIExpression()), !dbg !7078
  %call = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and5) #8, !dbg !7098
  %tobool = icmp eq i8 %call, 0, !dbg !7098
  br i1 %tobool, label %for.cond7.preheader, label %if.end28, !dbg !7100

for.cond7.preheader:                              ; preds = %for.end
  %7 = sext i32 %3 to i64, !dbg !7101
  br label %for.cond7, !dbg !7101

for.cond7:                                        ; preds = %for.cond7.preheader, %for.inc25
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.inc25 ], !dbg !7078
  %conflict_allocnos_size.0 = phi i32 [ 0, %for.cond7.preheader ], [ %conflict_allocnos_size.1, %for.inc25 ], !dbg !7078
  %temp_set.1 = phi i64 [ %and5, %for.cond7.preheader ], [ %temp_set.2, %for.inc25 ], !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.1, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7056, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.0, metadata !7059, metadata !DIExpression()), !dbg !7078
  %cmp8 = icmp slt i64 %indvars.iv, %7, !dbg !7103
  br i1 %cmp8, label %for.body, label %if.end28.loopexit, !dbg !7101

for.body:                                         ; preds = %for.cond7
  %arrayidx12 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom, i64 %indvars.iv, !dbg !7105
  %8 = load i16, i16* %arrayidx12, align 2, !dbg !7105
  %conv = sext i16 %8 to i64, !dbg !7105
  %sh_prom = and i64 %conv, 4294967295, !dbg !7107
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7058, metadata !DIExpression()), !dbg !7078
  %shl = shl i64 1, %sh_prom, !dbg !7107
  %and13 = and i64 %temp_set.1, %shl, !dbg !7107
  %tobool14 = icmp eq i64 %and13, 0, !dbg !7107
  br i1 %tobool14, label %for.inc25, label %if.then15, !dbg !7109

if.then15:                                        ; preds = %for.body
  %inc = add nsw i32 %conflict_allocnos_size.0, 1, !dbg !7110
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7059, metadata !DIExpression()), !dbg !7078
  %neg18 = xor i64 %shl, -1, !dbg !7112
  %and19 = and i64 %temp_set.1, %neg18, !dbg !7112
  call void @llvm.dbg.value(metadata i64 %and19, metadata !7063, metadata !DIExpression()), !dbg !7078
  %call20 = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and19) #8, !dbg !7113
  %tobool21 = icmp eq i8 %call20, 0, !dbg !7113
  br i1 %tobool21, label %for.inc25, label %if.end28.loopexit, !dbg !7115

for.inc25:                                        ; preds = %if.then15, %for.body
  %conflict_allocnos_size.1 = phi i32 [ %conflict_allocnos_size.0, %for.body ], [ %inc, %if.then15 ], !dbg !7078
  %temp_set.2 = phi i64 [ %temp_set.1, %for.body ], [ %and19, %if.then15 ], !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.2, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.1, metadata !7059, metadata !DIExpression()), !dbg !7078
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7116
  call void @llvm.dbg.value(metadata i32 undef, metadata !7056, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7078
  br label %for.cond7, !dbg !7117, !llvm.loop !7118

if.end28.loopexit:                                ; preds = %for.cond7, %if.then15
  %conflict_allocnos_size.3.ph = phi i32 [ %inc, %if.then15 ], [ %conflict_allocnos_size.0, %for.cond7 ]
  br label %if.end28, !dbg !7120

if.end28:                                         ; preds = %if.end28.loopexit, %for.end
  %conflict_allocnos_size.3 = phi i32 [ 0, %for.end ], [ %conflict_allocnos_size.3.ph, %if.end28.loopexit ], !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.3, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 0, metadata !7063, metadata !DIExpression()), !dbg !7078
  %.b2 = load i1, i1* @allocno_coalesced_p, align 1, !dbg !7120
  br i1 %.b2, label %if.then30, label %if.end31, !dbg !7122

if.then30:                                        ; preds = %if.end28
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7123
  tail call void @bitmap_clear(%struct.bitmap_head_def* %9) #6, !dbg !7124
  br label %if.end31, !dbg !7124

if.end31:                                         ; preds = %if.end28, %if.then30
  %cmp32 = icmp eq i32 %2, 0, !dbg !7125
  br i1 %cmp32, label %if.end96, label %if.then34, !dbg !7126

if.then34:                                        ; preds = %if.end31
  %10 = bitcast %struct.ira_allocno** %conflict_allocno to i64*, !dbg !7127
  br label %for.cond36, !dbg !7128

for.cond36:                                       ; preds = %for.inc93, %if.then34
  %conflict_allocnos_size.4 = phi i32 [ %conflict_allocnos_size.3, %if.then34 ], [ %conflict_allocnos_size.5.lcssa, %for.inc93 ], !dbg !7129
  %allocno.pn1 = phi %struct.ira_allocno* [ %allocno, %if.then34 ], [ %a.1, %for.inc93 ]
  %temp_set.3 = phi i64 [ 0, %if.then34 ], [ %temp_set.4.lcssa, %for.inc93 ], !dbg !7130
  %a.1.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn1, i64 0, i32 19, !dbg !7131
  %a.1 = load %struct.ira_allocno*, %struct.ira_allocno** %a.1.in, align 8, !dbg !7131
  call void @llvm.dbg.value(metadata i64 %temp_set.3, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.1, metadata !7060, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.4, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7064, metadata !DIExpression(DW_OP_deref)), !dbg !7078
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %a.1) #8, !dbg !7132
  br label %for.cond37, !dbg !7132

for.cond37:                                       ; preds = %for.inc87, %for.cond36
  %conflict_allocnos_size.5 = phi i32 [ %conflict_allocnos_size.4, %for.cond36 ], [ %conflict_allocnos_size.11, %for.inc87 ], !dbg !7129
  %temp_set.4 = phi i64 [ %temp_set.3, %for.cond36 ], [ %temp_set.10, %for.inc87 ], !dbg !7130
  call void @llvm.dbg.value(metadata i64 %temp_set.4, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_allocno, metadata !7061, metadata !DIExpression(DW_OP_deref)), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7064, metadata !DIExpression(DW_OP_deref)), !dbg !7078
  %call38 = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_allocno) #8, !dbg !7133
  %tobool39 = icmp eq i8 %call38, 0, !dbg !7132
  br i1 %tobool39, label %for.end88, label %for.body40, !dbg !7132

for.body40:                                       ; preds = %for.cond37
  %11 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7134
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %11, metadata !7061, metadata !DIExpression()), !dbg !7078
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %11, i64 0, i32 18, !dbg !7134
  %12 = bitcast %struct.ira_allocno** %first_coalesced_allocno to i64*, !dbg !7134
  %13 = load i64, i64* %12, align 8, !dbg !7134
  store i64 %13, i64* %10, align 8, !dbg !7135
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @consideration_allocno_bitmap, align 8, !dbg !7136
  %.cast = inttoptr i64 %13 to %struct.ira_allocno*, !dbg !7137
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !7061, metadata !DIExpression()), !dbg !7078
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 0, !dbg !7137
  %15 = load i32, i32* %num, align 8, !dbg !7137
  %call41 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %14, i32 %15) #6, !dbg !7138
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7138
  br i1 %tobool42, label %for.inc87, label %if.then43, !dbg !7139

if.then43:                                        ; preds = %for.body40
  %.b = load i1, i1* @allocno_coalesced_p, align 1, !dbg !7140
  br i1 %.b, label %if.then45, label %if.end53, !dbg !7142

if.then45:                                        ; preds = %if.then43
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7143
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7146
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !7061, metadata !DIExpression()), !dbg !7078
  %num46 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 0, !dbg !7146
  %18 = load i32, i32* %num46, align 8, !dbg !7146
  %call47 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %16, i32 %18) #6, !dbg !7147
  %tobool48 = icmp eq i32 %call47, 0, !dbg !7147
  br i1 %tobool48, label %if.end50, label %for.inc87, !dbg !7148

if.end50:                                         ; preds = %if.then45
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7149
  %20 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7150
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %20, metadata !7061, metadata !DIExpression()), !dbg !7078
  %num51 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %20, i64 0, i32 0, !dbg !7150
  %21 = load i32, i32* %num51, align 8, !dbg !7150
  %call52 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %21) #6, !dbg !7151
  br label %if.end53, !dbg !7152

if.end53:                                         ; preds = %if.then43, %if.end50
  %22 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7153
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %22, metadata !7061, metadata !DIExpression()), !dbg !7078
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 31, !dbg !7153
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !7153
  %bf.clear = and i16 %bf.load, 256, !dbg !7153
  %tobool54 = icmp eq i16 %bf.clear, 0, !dbg !7153
  br i1 %tobool54, label %if.then55, label %if.else, !dbg !7154

if.then55:                                        ; preds = %if.end53
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %22, metadata !7061, metadata !DIExpression()), !dbg !7078
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 2, !dbg !7155
  %23 = load i32, i32* %mode, align 8, !dbg !7155
  %idxprom58 = zext i32 %23 to i64, !dbg !7156
  %arrayidx59 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom58, !dbg !7156
  %24 = load i32, i32* %arrayidx59, align 4, !dbg !7156
  %add = add nsw i32 %conflict_allocnos_size.5, %24, !dbg !7157
  call void @llvm.dbg.value(metadata i32 %add, metadata !7059, metadata !DIExpression()), !dbg !7078
  br label %for.inc87, !dbg !7158

if.else:                                          ; preds = %if.end53
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %22, metadata !7061, metadata !DIExpression()), !dbg !7078
  %hard_regno60 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 3, !dbg !7159
  %25 = load i32, i32* %hard_regno60, align 4, !dbg !7159
  call void @llvm.dbg.value(metadata i32 %25, metadata !7058, metadata !DIExpression()), !dbg !7078
  %cmp61 = icmp sgt i32 %25, -1, !dbg !7160
  br i1 %cmp61, label %if.then63, label %for.inc87, !dbg !7161

if.then63:                                        ; preds = %if.else
  %idxprom64 = sext i32 %25 to i64, !dbg !7162
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %22, metadata !7061, metadata !DIExpression()), !dbg !7078
  %mode66 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %22, i64 0, i32 2, !dbg !7163
  %26 = load i32, i32* %mode66, align 8, !dbg !7163
  %idxprom67 = zext i32 %26 to i64, !dbg !7162
  %arrayidx68 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom64, i64 %idxprom67, !dbg !7162
  %27 = load i8, i8* %arrayidx68, align 1, !dbg !7162
  %conv69 = zext i8 %27 to i32, !dbg !7162
  %add70 = add nsw i32 %25, %conv69, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %add70, metadata !7065, metadata !DIExpression()), !dbg !7165
  br label %while.cond, !dbg !7166

while.cond:                                       ; preds = %if.end82, %if.then63
  %conflict_allocnos_size.6 = phi i32 [ %conflict_allocnos_size.5, %if.then63 ], [ %conflict_allocnos_size.7, %if.end82 ], !dbg !7129
  %hard_regno.0 = phi i32 [ %25, %if.then63 ], [ %inc83, %if.end82 ], !dbg !7167
  %temp_set.5 = phi i64 [ %temp_set.4, %if.then63 ], [ %temp_set.6, %if.end82 ], !dbg !7130
  call void @llvm.dbg.value(metadata i64 %temp_set.5, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %hard_regno.0, metadata !7058, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.6, metadata !7059, metadata !DIExpression()), !dbg !7078
  %cmp71 = icmp slt i32 %hard_regno.0, %add70, !dbg !7168
  br i1 %cmp71, label %while.body, label %for.inc87.loopexit, !dbg !7166

while.body:                                       ; preds = %while.cond
  %sh_prom73 = zext i32 %hard_regno.0 to i64, !dbg !7169
  %shl74 = shl i64 1, %sh_prom73, !dbg !7169
  %and75 = and i64 %temp_set.5, %shl74, !dbg !7169
  %tobool76 = icmp eq i64 %and75, 0, !dbg !7169
  br i1 %tobool76, label %if.then77, label %if.end82, !dbg !7172

if.then77:                                        ; preds = %while.body
  %inc78 = add nsw i32 %conflict_allocnos_size.6, 1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %inc78, metadata !7059, metadata !DIExpression()), !dbg !7078
  %or81 = or i64 %temp_set.5, %shl74, !dbg !7175
  call void @llvm.dbg.value(metadata i64 %or81, metadata !7063, metadata !DIExpression()), !dbg !7078
  br label %if.end82, !dbg !7176

if.end82:                                         ; preds = %while.body, %if.then77
  %conflict_allocnos_size.7 = phi i32 [ %conflict_allocnos_size.6, %while.body ], [ %inc78, %if.then77 ], !dbg !7078
  %temp_set.6 = phi i64 [ %temp_set.5, %while.body ], [ %or81, %if.then77 ], !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.6, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.7, metadata !7059, metadata !DIExpression()), !dbg !7078
  %inc83 = add nsw i32 %hard_regno.0, 1, !dbg !7177
  call void @llvm.dbg.value(metadata i32 %inc83, metadata !7058, metadata !DIExpression()), !dbg !7078
  br label %while.cond, !dbg !7166, !llvm.loop !7178

for.inc87.loopexit:                               ; preds = %while.cond
  %conflict_allocnos_size.6.lcssa = phi i32 [ %conflict_allocnos_size.6, %while.cond ], !dbg !7129
  %temp_set.5.lcssa = phi i64 [ %temp_set.5, %while.cond ], !dbg !7130
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.6.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.5.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.6.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.5.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.6.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.5.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  br label %for.inc87, !dbg !7133

for.inc87:                                        ; preds = %for.inc87.loopexit, %if.then45, %for.body40, %if.else, %if.then55
  %conflict_allocnos_size.11 = phi i32 [ %conflict_allocnos_size.5, %if.then45 ], [ %conflict_allocnos_size.5, %for.body40 ], [ %add, %if.then55 ], [ %conflict_allocnos_size.5, %if.else ], [ %conflict_allocnos_size.6.lcssa, %for.inc87.loopexit ], !dbg !7129
  %temp_set.10 = phi i64 [ %temp_set.4, %if.then45 ], [ %temp_set.4, %for.body40 ], [ %temp_set.4, %if.then55 ], [ %temp_set.4, %if.else ], [ %temp_set.5.lcssa, %for.inc87.loopexit ], !dbg !7130
  call void @llvm.dbg.value(metadata i64 %temp_set.10, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.11, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7064, metadata !DIExpression(DW_OP_deref)), !dbg !7078
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !7133
  br label %for.cond37, !dbg !7133, !llvm.loop !7180

for.end88:                                        ; preds = %for.cond37
  %conflict_allocnos_size.5.lcssa = phi i32 [ %conflict_allocnos_size.5, %for.cond37 ], !dbg !7129
  %temp_set.4.lcssa = phi i64 [ %temp_set.4, %for.cond37 ], !dbg !7130
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.4.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.4.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i64 %temp_set.4.lcssa, metadata !7063, metadata !DIExpression()), !dbg !7078
  %cmp89 = icmp eq %struct.ira_allocno* %a.1, %allocno, !dbg !7182
  br i1 %cmp89, label %if.end96.loopexit, label %for.inc93, !dbg !7184

for.inc93:                                        ; preds = %for.end88
  br label %for.cond36, !dbg !7185, !llvm.loop !7186

if.end96.loopexit:                                ; preds = %for.end88
  %conflict_allocnos_size.5.lcssa.lcssa = phi i32 [ %conflict_allocnos_size.5.lcssa, %for.end88 ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.5.lcssa.lcssa, metadata !7059, metadata !DIExpression()), !dbg !7078
  br label %if.end96, !dbg !7189

if.end96:                                         ; preds = %if.end96.loopexit, %if.end31
  %conflict_allocnos_size.12 = phi i32 [ %conflict_allocnos_size.3, %if.end31 ], [ %conflict_allocnos_size.5.lcssa.lcssa, %if.end96.loopexit ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %conflict_allocnos_size.12, metadata !7059, metadata !DIExpression()), !dbg !7078
  %left_conflicts_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 37, !dbg !7189
  store i32 %conflict_allocnos_size.12, i32* %left_conflicts_size, align 8, !dbg !7190
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7191
  ret void, !dbg !7191
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_allocno_available_regs_num(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !7192 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7194, metadata !DIExpression()), !dbg !7203
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !7204
  %0 = load i32, i32* %cover_class1, align 8, !dbg !7204
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7203
  %idxprom = zext i32 %0 to i64, !dbg !7205
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %idxprom, !dbg !7205
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7205
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 38, !dbg !7206
  store i32 %1, i32* %available_regs_num, align 4, !dbg !7207
  %cmp = icmp eq i32 %0, 0, !dbg !7208
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !7210

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !7202, metadata !DIExpression()), !dbg !7203
  %arrayidx3 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom, !dbg !7211
  %2 = load i32, i32* %arrayidx3, align 4, !dbg !7211
  call void @llvm.dbg.value(metadata i32 %2, metadata !7197, metadata !DIExpression()), !dbg !7203
  br label %for.cond, !dbg !7212

for.cond:                                         ; preds = %for.inc, %if.end
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %if.end ], [ %a.0, %for.inc ]
  %temp_set.0 = phi i64 [ 0, %if.end ], [ %or, %for.inc ], !dbg !7203
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !7214
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7214
  call void @llvm.dbg.value(metadata i64 %temp_set.0, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7201, metadata !DIExpression()), !dbg !7203
  %total_conflict_hard_regs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 27, !dbg !7215
  %3 = load i64, i64* %total_conflict_hard_regs, align 8, !dbg !7215
  %or = or i64 %temp_set.0, %3, !dbg !7215
  call void @llvm.dbg.value(metadata i64 %or, metadata !7202, metadata !DIExpression()), !dbg !7203
  %cmp4 = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !7218
  br i1 %cmp4, label %for.end, label %for.inc, !dbg !7220

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !7221, !llvm.loop !7222

for.end:                                          ; preds = %for.cond
  %or.lcssa = phi i64 [ %or, %for.cond ], !dbg !7215
  %mode8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 2, !dbg !7225
  %4 = load i32, i32* %mode8, align 8, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %4, metadata !7199, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7196, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %2, metadata !7195, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7203
  %idxprom17 = zext i32 %4 to i64, !dbg !7226
  %arrayidx18 = getelementptr inbounds [27 x [87 x i64]], [27 x [87 x i64]]* @prohibited_class_mode_regs, i64 0, i64 %idxprom, i64 %idxprom17, !dbg !7226
  %5 = sext i32 %2 to i64, !dbg !7231
  br label %for.cond9, !dbg !7231

for.cond9:                                        ; preds = %for.inc25, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc25 ], [ %5, %for.end ], !dbg !7232
  %n.0 = phi i32 [ %n.1, %for.inc25 ], [ 0, %for.end ], !dbg !7232
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7232
  call void @llvm.dbg.value(metadata i32 undef, metadata !7195, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !7196, metadata !DIExpression()), !dbg !7203
  %cmp10 = icmp sgt i64 %indvars.iv, 0, !dbg !7233
  br i1 %cmp10, label %for.body, label %for.end26, !dbg !7234

for.body:                                         ; preds = %for.cond9
  %arrayidx14 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom, i64 %indvars.iv.next, !dbg !7235
  %6 = load i16, i16* %arrayidx14, align 2, !dbg !7235
  %conv = sext i16 %6 to i64, !dbg !7235
  %sh_prom = and i64 %conv, 4294967295, !dbg !7236
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7198, metadata !DIExpression()), !dbg !7203
  %shl = shl i64 1, %sh_prom, !dbg !7236
  %and = and i64 %or.lcssa, %shl, !dbg !7236
  %tobool = icmp eq i64 %and, 0, !dbg !7236
  br i1 %tobool, label %lor.lhs.false, label %if.then23, !dbg !7237

lor.lhs.false:                                    ; preds = %for.body
  %7 = load i64, i64* %arrayidx18, align 8, !dbg !7238
  %and21 = and i64 %7, %shl, !dbg !7238
  %tobool22 = icmp eq i64 %and21, 0, !dbg !7238
  br i1 %tobool22, label %for.inc25, label %if.then23, !dbg !7239

if.then23:                                        ; preds = %lor.lhs.false, %for.body
  %inc = add nsw i32 %n.0, 1, !dbg !7240
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7196, metadata !DIExpression()), !dbg !7203
  br label %for.inc25, !dbg !7241

for.inc25:                                        ; preds = %lor.lhs.false, %if.then23
  %n.1 = phi i32 [ %inc, %if.then23 ], [ %n.0, %lor.lhs.false ], !dbg !7232
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !7196, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 undef, metadata !7195, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7203
  br label %for.cond9, !dbg !7242, !llvm.loop !7243

for.end26:                                        ; preds = %for.cond9
  %n.0.lcssa = phi i32 [ %n.0, %for.cond9 ], !dbg !7232
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7196, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7196, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !7196, metadata !DIExpression()), !dbg !7203
  %8 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7245
  %cmp27 = icmp sgt i32 %8, 2, !dbg !7247
  %cmp29 = icmp sgt i32 %n.0.lcssa, 0, !dbg !7248
  %or.cond = and i1 %cmp27, %cmp29, !dbg !7249
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7250
  %cmp32 = icmp ne %struct._IO_FILE* %9, null, !dbg !7251
  %or.cond1 = and i1 %or.cond, %cmp32, !dbg !7249
  br i1 %or.cond1, label %if.then34, label %if.end37, !dbg !7249

if.then34:                                        ; preds = %for.end26
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 1, !dbg !7252
  %10 = load i32, i32* %regno, align 4, !dbg !7252
  %arrayidx36 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom, !dbg !7253
  %11 = load i8*, i8** %arrayidx36, align 8, !dbg !7253
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i32 %10, i8* %11, i32 %n.0.lcssa) #6, !dbg !7254
  %.pre = load i32, i32* %available_regs_num, align 4, !dbg !7255
  br label %if.end37, !dbg !7254

if.end37:                                         ; preds = %if.then34, %for.end26
  %12 = phi i32 [ %.pre, %if.then34 ], [ %1, %for.end26 ], !dbg !7255
  %sub39 = sub nsw i32 %12, %n.0.lcssa, !dbg !7255
  store i32 %sub39, i32* %available_regs_num, align 4, !dbg !7255
  br label %cleanup.cont, !dbg !7256

cleanup.cont:                                     ; preds = %if.end37, %entry
  ret void, !dbg !7256
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_allocno_to_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** %bucket_ptr) unnamed_addr #5 !dbg !7257 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7261, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %bucket_ptr, metadata !7262, metadata !DIExpression()), !dbg !7265
  %cmp = icmp eq %struct.ira_allocno** %bucket_ptr, @uncolorable_allocno_bucket, !dbg !7266
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7268

land.lhs.true:                                    ; preds = %entry
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !7269
  %0 = load i32, i32* %cover_class1, align 8, !dbg !7269
  call void @llvm.dbg.value(metadata i32 %0, metadata !7264, metadata !DIExpression()), !dbg !7265
  %cmp2 = icmp eq i32 %0, 0, !dbg !7270
  br i1 %cmp2, label %if.end, label %if.then, !dbg !7271

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %0 to i64, !dbg !7272
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @uncolorable_allocnos_num, i64 0, i64 %idxprom, !dbg !7272
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7274
  %inc = add nsw i32 %1, 1, !dbg !7274
  store i32 %inc, i32* %arrayidx, align 4, !dbg !7274
  br label %if.end, !dbg !7275

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %bucket_ptr, align 8, !dbg !7276
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !7263, metadata !DIExpression()), !dbg !7265
  %next_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 39, !dbg !7277
  store %struct.ira_allocno* %2, %struct.ira_allocno** %next_bucket_allocno, align 8, !dbg !7278
  %prev_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 40, !dbg !7279
  store %struct.ira_allocno* null, %struct.ira_allocno** %prev_bucket_allocno, align 8, !dbg !7280
  %cmp3 = icmp eq %struct.ira_allocno* %2, null, !dbg !7281
  br i1 %cmp3, label %if.end6, label %if.then4, !dbg !7283

if.then4:                                         ; preds = %if.end
  %prev_bucket_allocno5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 40, !dbg !7284
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** %prev_bucket_allocno5, align 8, !dbg !7285
  br label %if.end6, !dbg !7284

if.end6:                                          ; preds = %if.end, %if.then4
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** %bucket_ptr, align 8, !dbg !7286
  ret void, !dbg !7287
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_empty_p(i64 %x) unnamed_addr #0 !dbg !7288 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !7292, metadata !DIExpression()), !dbg !7293
  %cmp = icmp eq i64 %x, 0, !dbg !7294
  %conv1 = zext i1 %cmp to i8, !dbg !7295
  ret i8 %conv1, !dbg !7296
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ira_allocno_t_base_truncate(%struct.VEC_ira_allocno_t_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !7297 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 0, metadata !7302, metadata !DIExpression()), !dbg !7303
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !7304
  br label %cond.true, !dbg !7304

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7304

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !7304

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !7304

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !7305
  store i32 0, i32* %num3, align 8, !dbg !7305
  br label %if.end, !dbg !7305

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7304
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @calculate_allocno_spill_cost(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !7307 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !7311, metadata !DIExpression()), !dbg !7319
  %regno1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 1, !dbg !7320
  %0 = load i32, i32* %regno1, align 4, !dbg !7320
  call void @llvm.dbg.value(metadata i32 %0, metadata !7312, metadata !DIExpression()), !dbg !7319
  %updated_memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 13, !dbg !7321
  %1 = load i32, i32* %updated_memory_cost, align 8, !dbg !7321
  %updated_cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 11, !dbg !7322
  %2 = load i32, i32* %updated_cover_class_cost, align 8, !dbg !7322
  %sub = sub nsw i32 %1, %2, !dbg !7323
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7313, metadata !DIExpression()), !dbg !7319
  %cap = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 16, !dbg !7324
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %cap, align 8, !dbg !7324
  %cmp = icmp eq %struct.ira_allocno* %3, null, !dbg !7326
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7327

if.end:                                           ; preds = %entry
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 6, !dbg !7328
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !7328
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %4, metadata !7318, metadata !DIExpression()), !dbg !7319
  %parent = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 0, i32 6, !dbg !7329
  %5 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %parent, align 8, !dbg !7329
  call void @llvm.dbg.value(metadata %struct.ira_loop_tree_node* %5, metadata !7317, metadata !DIExpression()), !dbg !7319
  %cmp2 = icmp eq %struct.ira_loop_tree_node* %5, null, !dbg !7331
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !7332

if.end4:                                          ; preds = %if.end
  %regno_allocno_map = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %5, i64 0, i32 9, !dbg !7333
  %6 = load %struct.ira_allocno**, %struct.ira_allocno*** %regno_allocno_map, align 8, !dbg !7333
  %idxprom = sext i32 %0 to i64, !dbg !7335
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %6, i64 %idxprom, !dbg !7335
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !7316, metadata !DIExpression()), !dbg !7319
  %cmp5 = icmp eq %struct.ira_allocno* %7, null, !dbg !7336
  br i1 %cmp5, label %cleanup, label %if.end7, !dbg !7337

if.end7:                                          ; preds = %if.end4
  %mode8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 2, !dbg !7338
  %8 = load i32, i32* %mode8, align 8, !dbg !7338
  call void @llvm.dbg.value(metadata i32 %8, metadata !7314, metadata !DIExpression()), !dbg !7319
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !7339
  %9 = load i32, i32* %cover_class, align 8, !dbg !7339
  call void @llvm.dbg.value(metadata i32 %9, metadata !7315, metadata !DIExpression()), !dbg !7319
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 3, !dbg !7340
  %10 = load i32, i32* %hard_regno, align 4, !dbg !7340
  %cmp9 = icmp slt i32 %10, 0, !dbg !7342
  %idxprom11 = zext i32 %8 to i64, !dbg !7343
  %idxprom13 = zext i32 %9 to i64, !dbg !7343
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !7344

if.then10:                                        ; preds = %if.end7
  %arrayidx15 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom11, i64 %idxprom13, i64 0, !dbg !7345
  %11 = load i16, i16* %arrayidx15, align 4, !dbg !7345
  %conv = sext i16 %11 to i32, !dbg !7345
  %call = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 1) #8, !dbg !7346
  %mul = mul nsw i32 %call, %conv, !dbg !7347
  %arrayidx20 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom11, i64 %idxprom13, i64 1, !dbg !7348
  %12 = load i16, i16* %arrayidx20, align 2, !dbg !7348
  %conv21 = sext i16 %12 to i32, !dbg !7348
  %call22 = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 0) #8, !dbg !7349
  %mul23 = mul nsw i32 %call22, %conv21, !dbg !7350
  %add = add nsw i32 %mul, %mul23, !dbg !7351
  %sub24 = sub nsw i32 %sub, %add, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %sub24, metadata !7313, metadata !DIExpression()), !dbg !7319
  br label %cleanup, !dbg !7353

if.else:                                          ; preds = %if.end7
  %arrayidx29 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom11, i64 %idxprom13, i64 1, !dbg !7354
  %13 = load i16, i16* %arrayidx29, align 2, !dbg !7354
  %conv30 = sext i16 %13 to i32, !dbg !7354
  %call31 = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 1) #8, !dbg !7355
  %mul32 = mul nsw i32 %call31, %conv30, !dbg !7356
  %arrayidx37 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %idxprom11, i64 %idxprom13, i64 0, !dbg !7357
  %14 = load i16, i16* %arrayidx37, align 4, !dbg !7357
  %conv38 = sext i16 %14 to i32, !dbg !7357
  %call39 = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 0) #8, !dbg !7358
  %mul40 = mul nsw i32 %call39, %conv38, !dbg !7359
  %add41 = add nsw i32 %mul32, %mul40, !dbg !7360
  %call42 = tail call fastcc i32 @ira_get_register_move_cost(i32 %8, i32 %9, i32 %9) #8, !dbg !7361
  %call43 = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 0) #8, !dbg !7362
  %call44 = tail call i32 @ira_loop_edge_freq(%struct.ira_loop_tree_node* %4, i32 %0, i8 zeroext 1) #8, !dbg !7363
  %add45 = add nsw i32 %call43, %call44, !dbg !7364
  %mul46 = mul nsw i32 %call42, %add45, !dbg !7365
  %sub47 = sub nsw i32 %add41, %mul46, !dbg !7366
  %add48 = add nsw i32 %sub, %sub47, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %add48, metadata !7313, metadata !DIExpression()), !dbg !7319
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.then10, %if.else, %if.end4, %if.end
  %retval.0 = phi i32 [ %sub, %entry ], [ %sub, %if.end ], [ %sub, %if.end4 ], [ %sub24, %if.then10 ], [ %add48, %if.else ], !dbg !7319
  ret i32 %retval.0, !dbg !7368
}

declare dso_local %struct.splay_tree_s* @splay_tree_new_with_allocator(i32 (i64, i64)*, void (i64)*, void (i64)*, i8* (i32, i8*)*, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @allocno_spill_priority_compare(i64 %k1, i64 %k2) #5 !dbg !7369 {
entry:
  call void @llvm.dbg.value(metadata i64 %k1, metadata !7371, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.value(metadata i64 %k2, metadata !7372, metadata !DIExpression()), !dbg !7378
  %0 = inttoptr i64 %k1 to %struct.ira_allocno*, !dbg !7379
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %0, metadata !7376, metadata !DIExpression()), !dbg !7378
  %1 = inttoptr i64 %k2 to %struct.ira_allocno*, !dbg !7380
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !7377, metadata !DIExpression()), !dbg !7378
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 41, !dbg !7381
  %2 = load i32, i32* %temp, align 8, !dbg !7381
  %left_conflicts_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 37, !dbg !7382
  %3 = load i32, i32* %left_conflicts_size, align 8, !dbg !7382
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 9, !dbg !7383
  %4 = load i32, i32* %cover_class, align 8, !dbg !7383
  %idxprom = zext i32 %4 to i64, !dbg !7384
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 2, !dbg !7385
  %5 = load i32, i32* %mode, align 8, !dbg !7385
  %idxprom1 = zext i32 %5 to i64, !dbg !7384
  %arrayidx2 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !7384
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !7384
  %mul = mul nsw i32 %3, %6, !dbg !7386
  %add = add nsw i32 %mul, 1, !dbg !7387
  %div = sdiv i32 %2, %add, !dbg !7388
  call void @llvm.dbg.value(metadata i32 %div, metadata !7373, metadata !DIExpression()), !dbg !7378
  %temp3 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 41, !dbg !7389
  %7 = load i32, i32* %temp3, align 8, !dbg !7389
  %left_conflicts_size4 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 37, !dbg !7390
  %8 = load i32, i32* %left_conflicts_size4, align 8, !dbg !7390
  %cover_class5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 9, !dbg !7391
  %9 = load i32, i32* %cover_class5, align 8, !dbg !7391
  %idxprom6 = zext i32 %9 to i64, !dbg !7392
  %mode8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 2, !dbg !7393
  %10 = load i32, i32* %mode8, align 8, !dbg !7393
  %idxprom9 = zext i32 %10 to i64, !dbg !7392
  %arrayidx10 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom6, i64 %idxprom9, !dbg !7392
  %11 = load i32, i32* %arrayidx10, align 4, !dbg !7392
  %mul11 = mul nsw i32 %8, %11, !dbg !7394
  %add12 = add nsw i32 %mul11, 1, !dbg !7395
  %div13 = sdiv i32 %7, %add12, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %div13, metadata !7374, metadata !DIExpression()), !dbg !7378
  %sub = sub nsw i32 %div, %div13, !dbg !7397
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7375, metadata !DIExpression()), !dbg !7378
  %cmp = icmp eq i32 %sub, 0, !dbg !7399
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7400

if.end:                                           ; preds = %entry
  %sub16 = sub nsw i32 %2, %7, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %sub16, metadata !7375, metadata !DIExpression()), !dbg !7378
  %cmp17 = icmp eq i32 %sub16, 0, !dbg !7403
  br i1 %cmp17, label %if.end19, label %cleanup, !dbg !7404

if.end19:                                         ; preds = %if.end
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %0, i64 0, i32 0, !dbg !7405
  %12 = load i32, i32* %num, align 8, !dbg !7405
  %num20 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !7406
  %13 = load i32, i32* %num20, align 8, !dbg !7406
  %sub21 = sub nsw i32 %12, %13, !dbg !7407
  br label %cleanup, !dbg !7408

cleanup:                                          ; preds = %if.end, %entry, %if.end19
  %retval.0 = phi i32 [ %sub21, %if.end19 ], [ %sub, %entry ], [ %sub16, %if.end ], !dbg !7378
  ret i32 %retval.0, !dbg !7409
}

; Function Attrs: nounwind uwtable
define internal i8* @splay_tree_allocate(i32 %size, i8* %data) #5 !dbg !7410 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i8* %data, metadata !7413, metadata !DIExpression()), !dbg !7414
  %cmp = icmp eq i32 %size, 32, !dbg !7415
  br i1 %cmp, label %if.end, label %if.then, !dbg !7417

if.then:                                          ; preds = %entry
  %conv2 = sext i32 %size to i64, !dbg !7418
  %call = tail call i8* @ira_allocate(i64 %conv2) #6, !dbg !7419
  br label %return, !dbg !7420

if.end:                                           ; preds = %entry
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @splay_tree_node_pool, align 8, !dbg !7421
  %call3 = tail call i8* @pool_alloc(%struct.alloc_pool_def* %0) #6, !dbg !7422
  br label %return, !dbg !7423

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call3, %if.end ], !dbg !7414
  ret i8* %retval.0, !dbg !7424
}

; Function Attrs: nounwind uwtable
define internal void @splay_tree_free(i8* %node, i8* %data) #5 !dbg !7425 {
entry:
  call void @llvm.dbg.value(metadata i8* %node, metadata !7427, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.value(metadata i8* %data, metadata !7428, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.value(metadata i32 0, metadata !7429, metadata !DIExpression()), !dbg !7431
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !7432
  %1 = sext i32 %0 to i64, !dbg !7435
  br label %for.cond, !dbg !7435

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !7436
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7429, metadata !DIExpression()), !dbg !7431
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !7437
  br i1 %cmp, label %for.body, label %for.end, !dbg !7438

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !7439
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %2, metadata !7430, metadata !DIExpression()), !dbg !7431
  %idxprom1 = zext i32 %2 to i64, !dbg !7441
  %arrayidx2 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom1, !dbg !7441
  %3 = bitcast %struct.splay_tree_s** %arrayidx2 to i8**, !dbg !7441
  %4 = load i8*, i8** %3, align 8, !dbg !7441
  %cmp3 = icmp eq i8* %4, %node, !dbg !7443
  br i1 %cmp3, label %if.then, label %for.inc, !dbg !7444

if.then:                                          ; preds = %for.body
  tail call void @ira_free(i8* %node) #6, !dbg !7445
  br label %cleanup.cont, !dbg !7447

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7448
  call void @llvm.dbg.value(metadata i32 undef, metadata !7429, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7431
  br label %for.cond, !dbg !7449, !llvm.loop !7450

for.end:                                          ; preds = %for.cond
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @splay_tree_node_pool, align 8, !dbg !7452
  tail call void @pool_free(%struct.alloc_pool_def* %5, i8* %node) #6, !dbg !7453
  br label %cleanup.cont, !dbg !7454

cleanup.cont:                                     ; preds = %if.then, %for.end
  ret void, !dbg !7454
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_insert(%struct.splay_tree_s*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @push_only_colorable() unnamed_addr #5 !dbg !7455 {
entry:
  tail call fastcc void @sort_bucket(%struct.ira_allocno** nonnull @colorable_allocno_bucket) #8, !dbg !7456
  br label %for.cond, !dbg !7457

for.cond:                                         ; preds = %for.body, %entry
  %0 = load %struct.ira_allocno*, %struct.ira_allocno** @colorable_allocno_bucket, align 8, !dbg !7458
  %cmp = icmp eq %struct.ira_allocno* %0, null, !dbg !7461
  br i1 %cmp, label %for.end, label %for.body, !dbg !7462

for.body:                                         ; preds = %for.cond
  tail call fastcc void @remove_allocno_from_bucket_and_push(%struct.ira_allocno* nonnull %0, i8 zeroext 1) #8, !dbg !7463
  br label %for.cond, !dbg !7464, !llvm.loop !7465

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7467
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_allocno_to_spill(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !7468 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7470, metadata !DIExpression()), !dbg !7471
  tail call fastcc void @delete_allocno_from_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** nonnull @uncolorable_allocno_bucket) #8, !dbg !7472
  %may_be_spilled_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !7473
  %bf.load = load i16, i16* %may_be_spilled_p, align 4, !dbg !7474
  %bf.set = or i16 %bf.load, 512, !dbg !7474
  store i16 %bf.set, i16* %may_be_spilled_p, align 4, !dbg !7474
  %0 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7475
  %cmp = icmp sgt i32 %0, 3, !dbg !7477
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7478
  %cmp1 = icmp ne %struct._IO_FILE* %1, null, !dbg !7479
  %or.cond = and i1 %cmp, %cmp1, !dbg !7480
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7480

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 0, !dbg !7481
  %2 = load i32, i32* %num, align 8, !dbg !7481
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 1, !dbg !7482
  %3 = load i32, i32* %regno, align 4, !dbg !7482
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0), i32 %2, i32 %3) #6, !dbg !7483
  br label %if.end, !dbg !7483

if.end:                                           ; preds = %if.then, %entry
  tail call fastcc void @push_allocno_to_stack(%struct.ira_allocno* %allocno) #8, !dbg !7484
  ret void, !dbg !7485
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ira_allocno_t_base_length(%struct.VEC_ira_allocno_t_base* %vec_) unnamed_addr #0 !dbg !7486 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !7492, metadata !DIExpression()), !dbg !7493
  %tobool = icmp eq %struct.VEC_ira_allocno_t_base* %vec_, null, !dbg !7494
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7494

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !7494
  %0 = load i32, i32* %num, align 8, !dbg !7494
  br label %cond.end, !dbg !7494

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7494
  ret i32 %cond, !dbg !7494
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ira_allocno* @VEC_ira_allocno_t_base_pop(%struct.VEC_ira_allocno_t_base* %vec_) unnamed_addr #0 !dbg !7495 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ira_allocno_t_base* %vec_, metadata !7499, metadata !DIExpression()), !dbg !7501
  %num1 = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 0, !dbg !7502
  %0 = load i32, i32* %num1, align 8, !dbg !7502
  %dec = add i32 %0, -1, !dbg !7502
  store i32 %dec, i32* %num1, align 8, !dbg !7502
  %idxprom = zext i32 %dec to i64, !dbg !7502
  %arrayidx = getelementptr inbounds %struct.VEC_ira_allocno_t_base, %struct.VEC_ira_allocno_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7502
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !7502
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !7500, metadata !DIExpression()), !dbg !7501
  ret %struct.ira_allocno* %1, !dbg !7502
}

declare dso_local %struct.splay_tree_node_s* @splay_tree_min(%struct.splay_tree_s*) local_unnamed_addr #2

declare dso_local void @splay_tree_remove(%struct.splay_tree_s*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @allocno_spill_priority(%struct.ira_allocno* %a) unnamed_addr #5 !dbg !7503 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a, metadata !7505, metadata !DIExpression()), !dbg !7506
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 41, !dbg !7507
  %0 = load i32, i32* %temp, align 8, !dbg !7507
  %left_conflicts_size = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 37, !dbg !7508
  %1 = load i32, i32* %left_conflicts_size, align 8, !dbg !7508
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 9, !dbg !7509
  %2 = load i32, i32* %cover_class, align 8, !dbg !7509
  %idxprom = zext i32 %2 to i64, !dbg !7510
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a, i64 0, i32 2, !dbg !7511
  %3 = load i32, i32* %mode, align 8, !dbg !7511
  %idxprom1 = zext i32 %3 to i64, !dbg !7510
  %arrayidx2 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !7510
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !7510
  %mul = mul nsw i32 %1, %4, !dbg !7512
  %add = add nsw i32 %mul, 1, !dbg !7513
  %div = sdiv i32 %0, %add, !dbg !7514
  ret i32 %div, !dbg !7515
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_allocno_from_bucket_and_push(%struct.ira_allocno* %allocno, i8 zeroext %colorable_p) unnamed_addr #5 !dbg !7516 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7518, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8 %colorable_p, metadata !7519, metadata !DIExpression()), !dbg !7521
  %tobool = icmp eq i8 %colorable_p, 0, !dbg !7522
  br i1 %tobool, label %if.else, label %if.then, !dbg !7524

if.then:                                          ; preds = %entry
  tail call fastcc void @delete_allocno_from_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** nonnull @colorable_allocno_bucket) #8, !dbg !7525
  br label %if.end, !dbg !7525

if.else:                                          ; preds = %entry
  tail call fastcc void @delete_allocno_from_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** nonnull @uncolorable_allocno_bucket) #8, !dbg !7526
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %0 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !7527
  %cmp = icmp sgt i32 %0, 3, !dbg !7529
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7530
  %cmp1 = icmp ne %struct._IO_FILE* %1, null, !dbg !7531
  %or.cond = and i1 %cmp, %cmp1, !dbg !7532
  br i1 %or.cond, label %if.then2, label %if.end11, !dbg !7532

if.then2:                                         ; preds = %if.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !7533
  tail call fastcc void @print_coalesced_allocno(%struct.ira_allocno* %allocno) #8, !dbg !7535
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !7536
  br i1 %tobool, label %if.else6, label %if.then4, !dbg !7538

if.then4:                                         ; preds = %if.then2
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !7539
  br label %if.end11, !dbg !7539

if.else6:                                         ; preds = %if.then2
  %bad_spill_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !7540
  %bf.load = load i16, i16* %bad_spill_p, align 4, !dbg !7540
  %bf.clear = and i16 %bf.load, 64, !dbg !7540
  %tobool7 = icmp eq i16 %bf.clear, 0, !dbg !7540
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), !dbg !7540
  %call8 = tail call fastcc i32 @allocno_spill_priority(%struct.ira_allocno* %allocno) #8, !dbg !7541
  %temp = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 41, !dbg !7542
  %3 = load i32, i32* %temp, align 8, !dbg !7542
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i8* %cond, i32 %call8, i32 %3) #6, !dbg !7543
  br label %if.end11

if.end11:                                         ; preds = %if.then4, %if.else6, %if.end
  call void @llvm.dbg.value(metadata i32 undef, metadata !7520, metadata !DIExpression()), !dbg !7521
  br i1 %tobool, label %if.then14, label %if.end17, !dbg !7544

if.then14:                                        ; preds = %if.end11
  %may_be_spilled_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !7545
  %bf.load15 = load i16, i16* %may_be_spilled_p, align 4, !dbg !7547
  %bf.set = or i16 %bf.load15, 512, !dbg !7547
  store i16 %bf.set, i16* %may_be_spilled_p, align 4, !dbg !7547
  br label %if.end17, !dbg !7545

if.end17:                                         ; preds = %if.end11, %if.then14
  tail call fastcc void @push_allocno_to_stack(%struct.ira_allocno* %allocno) #8, !dbg !7548
  ret void, !dbg !7549
}

declare dso_local void @splay_tree_delete(%struct.splay_tree_s*) local_unnamed_addr #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sort_bucket(%struct.ira_allocno** %bucket_ptr) unnamed_addr #5 !dbg !7550 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno** @colorable_allocno_bucket, metadata !7554, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 0, metadata !7557, metadata !DIExpression()), !dbg !7558
  br label %for.cond, !dbg !7559

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %entry ], !dbg !7561
  %a.0.in = phi %struct.ira_allocno** [ %next_bucket_allocno, %for.body ], [ @colorable_allocno_bucket, %entry ]
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7561
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7555, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !7557, metadata !DIExpression()), !dbg !7558
  %cmp = icmp eq %struct.ira_allocno* %a.0, null, !dbg !7562
  br i1 %cmp, label %for.end, label %for.body, !dbg !7564

for.body:                                         ; preds = %for.cond
  %0 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !7565
  %indvars.iv.next2 = add nuw i64 %indvars.iv1, 1, !dbg !7566
  call void @llvm.dbg.value(metadata i32 undef, metadata !7557, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7558
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %0, i64 %indvars.iv1, !dbg !7565
  store %struct.ira_allocno* %a.0, %struct.ira_allocno** %arrayidx, align 8, !dbg !7567
  %next_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 39, !dbg !7568
  br label %for.cond, !dbg !7569, !llvm.loop !7570

for.end:                                          ; preds = %for.cond
  %indvars.iv1.lcssa = phi i64 [ %indvars.iv1, %for.cond ], !dbg !7561
  call void @llvm.dbg.value(metadata i64 %indvars.iv1.lcssa, metadata !7557, metadata !DIExpression()), !dbg !7558
  %1 = trunc i64 %indvars.iv1.lcssa to i32, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %1, metadata !7557, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 %1, metadata !7557, metadata !DIExpression()), !dbg !7558
  %cmp1 = icmp ult i32 %1, 2, !dbg !7572
  br i1 %cmp1, label %cleanup.cont, label %if.end, !dbg !7574

if.end:                                           ; preds = %for.end
  %2 = load i8*, i8** bitcast (%struct.ira_allocno*** @sorted_allocnos to i8**), align 8, !dbg !7575
  %conv = and i64 %indvars.iv1.lcssa, 4294967295, !dbg !7576
  tail call void @spec_qsort(i8* %2, i64 %conv, i64 8, i32 (i8*, i8*)* nonnull @bucket_allocno_compare_func) #6, !dbg !7577
  call void @llvm.dbg.value(metadata %struct.ira_allocno* null, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 %1, metadata !7557, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7558
  %3 = and i64 %indvars.iv1.lcssa, 4294967295, !dbg !7578
  br label %for.cond2, !dbg !7578

for.cond2:                                        ; preds = %for.inc14, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc14 ], [ %3, %if.end ]
  %head.0 = phi %struct.ira_allocno* [ %5, %for.inc14 ], [ null, %if.end ], !dbg !7558
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !7580
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %head.0, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 undef, metadata !7557, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7558
  %cmp3 = icmp sgt i64 %indvars.iv, 0, !dbg !7581
  br i1 %cmp3, label %for.body5, label %for.end16, !dbg !7583

for.body5:                                        ; preds = %for.cond2
  %4 = load %struct.ira_allocno**, %struct.ira_allocno*** @sorted_allocnos, align 8, !dbg !7584
  %arrayidx7 = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %4, i64 %indvars.iv.next, !dbg !7584
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx7, align 8, !dbg !7584
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !7555, metadata !DIExpression()), !dbg !7558
  %next_bucket_allocno8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 39, !dbg !7586
  store %struct.ira_allocno* %head.0, %struct.ira_allocno** %next_bucket_allocno8, align 8, !dbg !7587
  %prev_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %5, i64 0, i32 40, !dbg !7588
  store %struct.ira_allocno* null, %struct.ira_allocno** %prev_bucket_allocno, align 8, !dbg !7589
  %cmp9 = icmp eq %struct.ira_allocno* %head.0, null, !dbg !7590
  br i1 %cmp9, label %for.inc14, label %if.then11, !dbg !7592

if.then11:                                        ; preds = %for.body5
  %prev_bucket_allocno12 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %head.0, i64 0, i32 40, !dbg !7593
  store %struct.ira_allocno* %5, %struct.ira_allocno** %prev_bucket_allocno12, align 8, !dbg !7594
  br label %for.inc14, !dbg !7593

for.inc14:                                        ; preds = %for.body5, %if.then11
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %5, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 undef, metadata !7557, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7558
  br label %for.cond2, !dbg !7595, !llvm.loop !7596

for.end16:                                        ; preds = %for.cond2
  %head.0.lcssa = phi %struct.ira_allocno* [ %head.0, %for.cond2 ], !dbg !7558
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %head.0.lcssa, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %head.0.lcssa, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %head.0.lcssa, metadata !7556, metadata !DIExpression()), !dbg !7558
  store %struct.ira_allocno* %head.0.lcssa, %struct.ira_allocno** @colorable_allocno_bucket, align 8, !dbg !7598
  br label %cleanup.cont, !dbg !7599

cleanup.cont:                                     ; preds = %for.end16, %for.end
  ret void, !dbg !7599
}

; Function Attrs: nounwind uwtable
define internal i32 @bucket_allocno_compare_func(i8* %v1p, i8* %v2p) #5 !dbg !7600 {
entry:
  %a1_freq = alloca i32, align 4
  %a2_freq = alloca i32, align 4
  %a1_num = alloca i32, align 4
  %a2_num = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !7602, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !7603, metadata !DIExpression()), !dbg !7611
  %0 = bitcast i8* %v1p to %struct.ira_allocno**, !dbg !7612
  %1 = load %struct.ira_allocno*, %struct.ira_allocno** %0, align 8, !dbg !7613
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %1, metadata !7604, metadata !DIExpression()), !dbg !7611
  %2 = bitcast i8* %v2p to %struct.ira_allocno**, !dbg !7614
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %2, align 8, !dbg !7615
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !7605, metadata !DIExpression()), !dbg !7611
  %4 = bitcast i32* %a1_freq to i8*, !dbg !7616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !7616
  %5 = bitcast i32* %a2_freq to i8*, !dbg !7616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7, !dbg !7616
  %6 = bitcast i32* %a1_num to i8*, !dbg !7616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7, !dbg !7616
  %7 = bitcast i32* %a2_num to i8*, !dbg !7616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !7616
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 9, !dbg !7617
  %8 = load i32, i32* %cover_class, align 8, !dbg !7617
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 9, !dbg !7619
  %9 = load i32, i32* %cover_class1, align 8, !dbg !7619
  %sub = sub i32 %8, %9, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7606, metadata !DIExpression()), !dbg !7611
  %cmp = icmp eq i32 %sub, 0, !dbg !7621
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7622

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %a1_freq, metadata !7607, metadata !DIExpression(DW_OP_deref)), !dbg !7611
  call void @llvm.dbg.value(metadata i32* %a1_num, metadata !7609, metadata !DIExpression(DW_OP_deref)), !dbg !7611
  call fastcc void @get_coalesced_allocnos_attributes(%struct.ira_allocno* %1, i32* nonnull %a1_freq, i32* nonnull %a1_num) #8, !dbg !7623
  call void @llvm.dbg.value(metadata i32* %a2_freq, metadata !7608, metadata !DIExpression(DW_OP_deref)), !dbg !7611
  call void @llvm.dbg.value(metadata i32* %a2_num, metadata !7610, metadata !DIExpression(DW_OP_deref)), !dbg !7611
  call fastcc void @get_coalesced_allocnos_attributes(%struct.ira_allocno* %3, i32* nonnull %a2_freq, i32* nonnull %a2_num) #8, !dbg !7624
  %10 = load i32, i32* %a2_num, align 4, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %10, metadata !7610, metadata !DIExpression()), !dbg !7611
  %11 = load i32, i32* %a1_num, align 4, !dbg !7627
  call void @llvm.dbg.value(metadata i32 %11, metadata !7609, metadata !DIExpression()), !dbg !7611
  %sub2 = sub nsw i32 %10, %11, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %sub2, metadata !7606, metadata !DIExpression()), !dbg !7611
  %cmp3 = icmp eq i32 %sub2, 0, !dbg !7629
  br i1 %cmp3, label %if.else, label %cleanup, !dbg !7630

if.else:                                          ; preds = %if.end
  %12 = load i32, i32* %a1_freq, align 4, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %12, metadata !7607, metadata !DIExpression()), !dbg !7611
  %13 = load i32, i32* %a2_freq, align 4, !dbg !7633
  call void @llvm.dbg.value(metadata i32 %13, metadata !7608, metadata !DIExpression()), !dbg !7611
  %sub5 = sub nsw i32 %12, %13, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %sub5, metadata !7606, metadata !DIExpression()), !dbg !7611
  %cmp6 = icmp eq i32 %sub5, 0, !dbg !7635
  br i1 %cmp6, label %if.end9, label %cleanup, !dbg !7636

if.end9:                                          ; preds = %if.else
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 0, !dbg !7637
  %14 = load i32, i32* %num, align 8, !dbg !7637
  %num10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %1, i64 0, i32 0, !dbg !7638
  %15 = load i32, i32* %num10, align 8, !dbg !7638
  %sub11 = sub nsw i32 %14, %15, !dbg !7639
  br label %cleanup, !dbg !7640

cleanup:                                          ; preds = %if.else, %if.end, %entry, %if.end9
  %retval.0 = phi i32 [ %sub11, %if.end9 ], [ %sub, %entry ], [ %sub2, %if.end ], [ %sub5, %if.else ], !dbg !7611
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !7641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7, !dbg !7641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7, !dbg !7641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !7641
  ret i32 %retval.0, !dbg !7641
}

; Function Attrs: nounwind uwtable
define internal fastcc void @get_coalesced_allocnos_attributes(%struct.ira_allocno* %allocno, i32* %freq, i32* %num) unnamed_addr #5 !dbg !7642 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7646, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32* %freq, metadata !7647, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32* %num, metadata !7648, metadata !DIExpression()), !dbg !7650
  store i32 0, i32* %freq, align 4, !dbg !7651
  store i32 0, i32* %num, align 4, !dbg !7652
  br label %for.cond, !dbg !7653

for.cond:                                         ; preds = %for.inc, %entry
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %entry ], [ %a.0, %for.inc ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !7655
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7655
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7649, metadata !DIExpression()), !dbg !7650
  %freq1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 8, !dbg !7656
  %0 = load i32, i32* %freq1, align 4, !dbg !7656
  %1 = load i32, i32* %freq, align 4, !dbg !7659
  %add = add nsw i32 %1, %0, !dbg !7659
  store i32 %add, i32* %freq, align 4, !dbg !7659
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 38, !dbg !7660
  %2 = load i32, i32* %available_regs_num, align 4, !dbg !7660
  %3 = load i32, i32* %num, align 4, !dbg !7661
  %add2 = add nsw i32 %3, %2, !dbg !7661
  store i32 %add2, i32* %num, align 4, !dbg !7661
  %cmp = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !7662
  br i1 %cmp, label %for.end, label %for.inc, !dbg !7664

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !7665, !llvm.loop !7666

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7669
}

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_allocno_from_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** %bucket_ptr) unnamed_addr #5 !dbg !7670 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7672, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %bucket_ptr, metadata !7673, metadata !DIExpression()), !dbg !7677
  %cmp = icmp eq %struct.ira_allocno** %bucket_ptr, @uncolorable_allocno_bucket, !dbg !7678
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7680

land.lhs.true:                                    ; preds = %entry
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !7681
  %0 = load i32, i32* %cover_class1, align 8, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %0, metadata !7676, metadata !DIExpression()), !dbg !7677
  %cmp2 = icmp eq i32 %0, 0, !dbg !7682
  br i1 %cmp2, label %if.end, label %if.then, !dbg !7683

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %0 to i64, !dbg !7684
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @uncolorable_allocnos_num, i64 0, i64 %idxprom, !dbg !7684
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7686
  %dec = add nsw i32 %1, -1, !dbg !7686
  store i32 %dec, i32* %arrayidx, align 4, !dbg !7686
  br label %if.end, !dbg !7687

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %prev_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 40, !dbg !7688
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %prev_bucket_allocno, align 8, !dbg !7688
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !7674, metadata !DIExpression()), !dbg !7677
  %next_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 39, !dbg !7689
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %next_bucket_allocno, align 8, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !7675, metadata !DIExpression()), !dbg !7677
  %cmp3 = icmp eq %struct.ira_allocno* %2, null, !dbg !7690
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !7692

if.then4:                                         ; preds = %if.end
  %next_bucket_allocno5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 39, !dbg !7693
  store %struct.ira_allocno* %3, %struct.ira_allocno** %next_bucket_allocno5, align 8, !dbg !7694
  br label %if.end6, !dbg !7693

if.else:                                          ; preds = %if.end
  store %struct.ira_allocno* %3, %struct.ira_allocno** %bucket_ptr, align 8, !dbg !7695
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  %cmp7 = icmp eq %struct.ira_allocno* %3, null, !dbg !7697
  br i1 %cmp7, label %if.end10, label %if.then8, !dbg !7699

if.then8:                                         ; preds = %if.end6
  %prev_bucket_allocno9 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 40, !dbg !7700
  store %struct.ira_allocno* %2, %struct.ira_allocno** %prev_bucket_allocno9, align 8, !dbg !7701
  br label %if.end10, !dbg !7700

if.end10:                                         ; preds = %if.end6, %if.then8
  ret void, !dbg !7702
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_allocno_to_stack(%struct.ira_allocno* %allocno) unnamed_addr #5 !dbg !7703 {
entry:
  %conflict_allocno = alloca %struct.ira_allocno*, align 8
  %aci = alloca %struct.ira_allocno_conflict_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7705, metadata !DIExpression()), !dbg !7713
  %0 = bitcast %struct.ira_allocno** %conflict_allocno to i8*, !dbg !7714
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7714
  %1 = getelementptr inbounds %struct.ira_allocno_conflict_iterator, %struct.ira_allocno_conflict_iterator* %aci, i64 0, i32 0, !dbg !7715
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7715
  %in_graph_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 31, !dbg !7716
  %bf.load = load i16, i16* %in_graph_p, align 4, !dbg !7717
  %bf.clear = and i16 %bf.load, -129, !dbg !7717
  store i16 %bf.clear, i16* %in_graph_p, align 4, !dbg !7717
  %call = tail call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** nonnull @allocno_stack_vec, %struct.ira_allocno* %allocno) #8, !dbg !7718
  %cover_class1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 9, !dbg !7719
  %2 = load i32, i32* %cover_class1, align 8, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %2, metadata !7711, metadata !DIExpression()), !dbg !7713
  %cmp = icmp eq i32 %2, 0, !dbg !7720
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7722

if.end:                                           ; preds = %entry
  %idxprom = zext i32 %2 to i64, !dbg !7723
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno, i64 0, i32 2, !dbg !7724
  %3 = load i32, i32* %mode, align 8, !dbg !7724
  %idxprom2 = zext i32 %3 to i64, !dbg !7723
  %arrayidx3 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom2, !dbg !7723
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !7723
  call void @llvm.dbg.value(metadata i32 %4, metadata !7708, metadata !DIExpression()), !dbg !7713
  %.b1 = load i1, i1* @allocno_coalesced_p, align 1, !dbg !7725
  br i1 %.b1, label %if.then4, label %if.end5, !dbg !7727

if.then4:                                         ; preds = %if.end
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7728
  tail call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !7729
  br label %if.end5, !dbg !7729

if.end5:                                          ; preds = %if.end, %if.then4
  %6 = bitcast %struct.ira_allocno** %conflict_allocno to i64*, !dbg !7730
  %arrayidx45 = getelementptr inbounds [27 x %struct.splay_tree_s*], [27 x %struct.splay_tree_s*]* @uncolorable_allocnos_splay_tree, i64 0, i64 %idxprom, !dbg !7737
  %arrayidx55 = getelementptr inbounds [27 x i32], [27 x i32]* @uncolorable_allocnos_num, i64 0, i64 %idxprom, !dbg !7737
  br label %for.cond, !dbg !7743

for.cond:                                         ; preds = %for.inc76, %if.end5
  %allocno.pn = phi %struct.ira_allocno* [ %allocno, %if.end5 ], [ %a.0, %for.inc76 ]
  %a.0.in = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %allocno.pn, i64 0, i32 19, !dbg !7744
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !7744
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !7709, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7712, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call fastcc void @ira_allocno_conflict_iter_init(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno* %a.0) #8, !dbg !7745
  br label %for.cond6, !dbg !7745

for.cond6:                                        ; preds = %for.inc, %for.cond
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %conflict_allocno, metadata !7710, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7712, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  %call7 = call fastcc zeroext i8 @ira_allocno_conflict_iter_cond(%struct.ira_allocno_conflict_iterator* nonnull %aci, %struct.ira_allocno** nonnull %conflict_allocno) #8, !dbg !7746
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7745
  br i1 %tobool8, label %for.end, label %for.body, !dbg !7745

for.body:                                         ; preds = %for.cond6
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7747
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !7710, metadata !DIExpression()), !dbg !7713
  %first_coalesced_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 18, !dbg !7747
  %8 = bitcast %struct.ira_allocno** %first_coalesced_allocno to i64*, !dbg !7747
  %9 = load i64, i64* %8, align 8, !dbg !7747
  store i64 %9, i64* %6, align 8, !dbg !7748
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @coloring_allocno_bitmap, align 8, !dbg !7749
  %.cast = inttoptr i64 %9 to %struct.ira_allocno*, !dbg !7750
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %.cast, metadata !7710, metadata !DIExpression()), !dbg !7713
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.cast, i64 0, i32 0, !dbg !7750
  %11 = load i32, i32* %num, align 8, !dbg !7750
  %call9 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !7751
  %tobool10 = icmp eq i32 %call9, 0, !dbg !7751
  br i1 %tobool10, label %for.inc, label %if.then11, !dbg !7752

if.then11:                                        ; preds = %for.body
  %.b = load i1, i1* @allocno_coalesced_p, align 1, !dbg !7753
  br i1 %.b, label %if.then13, label %if.end21, !dbg !7755

if.then13:                                        ; preds = %if.then11
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7756
  %13 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7759
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %13, metadata !7710, metadata !DIExpression()), !dbg !7713
  %num14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %13, i64 0, i32 0, !dbg !7759
  %14 = load i32, i32* %num14, align 8, !dbg !7759
  %call15 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %12, i32 %14) #6, !dbg !7760
  %tobool16 = icmp eq i32 %call15, 0, !dbg !7760
  br i1 %tobool16, label %if.end18, label %for.inc, !dbg !7761

if.end18:                                         ; preds = %if.then13
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @processed_coalesced_allocno_bitmap, align 8, !dbg !7762
  %16 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7763
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %16, metadata !7710, metadata !DIExpression()), !dbg !7713
  %num19 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %16, i64 0, i32 0, !dbg !7763
  %17 = load i32, i32* %num19, align 8, !dbg !7763
  %call20 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %17) #6, !dbg !7764
  br label %if.end21, !dbg !7765

if.end21:                                         ; preds = %if.then11, %if.end18
  %18 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7766
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %in_graph_p22 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 31, !dbg !7766
  %bf.load23 = load i16, i16* %in_graph_p22, align 4, !dbg !7766
  %19 = trunc i16 %bf.load23 to i8, !dbg !7766
  %tobool25 = icmp slt i8 %19, 0, !dbg !7766
  %20 = ptrtoint %struct.ira_allocno* %18 to i64, !dbg !7767
  br i1 %tobool25, label %land.lhs.true, label %for.inc, !dbg !7767

land.lhs.true:                                    ; preds = %if.end21
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %bf.clear28 = and i16 %bf.load23, 256, !dbg !7768
  %tobool30 = icmp eq i16 %bf.clear28, 0, !dbg !7768
  br i1 %tobool30, label %if.then31, label %for.inc, !dbg !7769

if.then31:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %left_conflicts_size32 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 37, !dbg !7770
  %21 = load i32, i32* %left_conflicts_size32, align 8, !dbg !7770
  call void @llvm.dbg.value(metadata i32 %21, metadata !7706, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %mode35 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 2, !dbg !7771
  %22 = load i32, i32* %mode35, align 8, !dbg !7771
  %idxprom36 = zext i32 %22 to i64, !dbg !7772
  %arrayidx37 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom, i64 %idxprom36, !dbg !7772
  %23 = load i32, i32* %arrayidx37, align 4, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %23, metadata !7707, metadata !DIExpression()), !dbg !7713
  %add = add nsw i32 %21, %23, !dbg !7773
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %available_regs_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %18, i64 0, i32 38, !dbg !7775
  %24 = load i32, i32* %available_regs_num, align 4, !dbg !7775
  %cmp38 = icmp sgt i32 %add, %24, !dbg !7776
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %sub = sub nsw i32 %21, %4, !dbg !7777
  br i1 %cmp38, label %if.end41, label %if.then39, !dbg !7778

if.then39:                                        ; preds = %if.then31
  store i32 %sub, i32* %left_conflicts_size32, align 8, !dbg !7779
  br label %for.inc, !dbg !7781

if.end41:                                         ; preds = %if.then31
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7706, metadata !DIExpression()), !dbg !7713
  %25 = load %struct.splay_tree_s*, %struct.splay_tree_s** %arrayidx45, align 8, !dbg !7782
  %cmp46 = icmp eq %struct.splay_tree_s* %25, null, !dbg !7783
  br i1 %cmp46, label %if.end64, label %land.lhs.true47, !dbg !7784

land.lhs.true47:                                  ; preds = %if.end41
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %18, metadata !7710, metadata !DIExpression()), !dbg !7713
  %bf.clear50 = and i16 %bf.load23, 1024, !dbg !7785
  %tobool52 = icmp eq i16 %bf.clear50, 0, !dbg !7785
  br i1 %tobool52, label %land.lhs.true53, label %if.end64, !dbg !7786

land.lhs.true53:                                  ; preds = %land.lhs.true47
  %26 = load i32, i32* %arrayidx55, align 4, !dbg !7787
  %cmp56 = icmp sgt i32 %26, 4000, !dbg !7787
  br i1 %cmp56, label %if.then57, label %if.end64, !dbg !7788

if.then57:                                        ; preds = %land.lhs.true53
  call void @splay_tree_remove(%struct.splay_tree_s* nonnull %25, i64 %20) #6, !dbg !7789
  %27 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7791
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %27, metadata !7710, metadata !DIExpression()), !dbg !7713
  %splay_removed_p60 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %27, i64 0, i32 31, !dbg !7791
  %bf.load61 = load i16, i16* %splay_removed_p60, align 4, !dbg !7792
  %bf.set = or i16 %bf.load61, 1024, !dbg !7792
  store i16 %bf.set, i16* %splay_removed_p60, align 4, !dbg !7792
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %27, metadata !7710, metadata !DIExpression()), !dbg !7713
  %call63 = call fastcc %struct.ira_allocno** @VEC_ira_allocno_t_heap_safe_push(%struct.VEC_ira_allocno_t_heap** nonnull @removed_splay_allocno_vec, %struct.ira_allocno* %27) #8, !dbg !7793
  %.pre = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7794
  %available_regs_num67.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %.pre, i64 0, i32 38, !dbg !7795
  %.pre2 = load i32, i32* %available_regs_num67.phi.trans.insert, align 4, !dbg !7797
  br label %if.end64, !dbg !7798

if.end64:                                         ; preds = %land.lhs.true47, %if.end41, %if.then57, %land.lhs.true53
  %28 = phi i32 [ %24, %land.lhs.true47 ], [ %24, %if.end41 ], [ %.pre2, %if.then57 ], [ %24, %land.lhs.true53 ], !dbg !7797
  %29 = phi %struct.ira_allocno* [ %18, %land.lhs.true47 ], [ %18, %if.end41 ], [ %.pre, %if.then57 ], [ %18, %land.lhs.true53 ], !dbg !7794
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !7710, metadata !DIExpression()), !dbg !7713
  %left_conflicts_size65 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %29, i64 0, i32 37, !dbg !7794
  store i32 %sub, i32* %left_conflicts_size65, align 8, !dbg !7799
  %add66 = add nsw i32 %sub, %23, !dbg !7800
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !7710, metadata !DIExpression()), !dbg !7713
  %cmp68 = icmp sgt i32 %add66, %28, !dbg !7801
  br i1 %cmp68, label %for.inc, label %if.then69, !dbg !7802

if.then69:                                        ; preds = %if.end64
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %29, metadata !7710, metadata !DIExpression()), !dbg !7713
  call fastcc void @delete_allocno_from_bucket(%struct.ira_allocno* %29, %struct.ira_allocno** nonnull @uncolorable_allocno_bucket) #8, !dbg !7803
  %30 = load %struct.ira_allocno*, %struct.ira_allocno** %conflict_allocno, align 8, !dbg !7805
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %30, metadata !7710, metadata !DIExpression()), !dbg !7713
  call fastcc void @add_allocno_to_ordered_bucket(%struct.ira_allocno* %30, %struct.ira_allocno** nonnull @colorable_allocno_bucket) #8, !dbg !7806
  br label %for.inc, !dbg !7807

for.inc:                                          ; preds = %if.then13, %if.end64, %land.lhs.true, %for.body, %if.then69, %if.end21, %if.then39
  call void @llvm.dbg.value(metadata %struct.ira_allocno_conflict_iterator* %aci, metadata !7712, metadata !DIExpression(DW_OP_deref)), !dbg !7713
  call fastcc void @ira_allocno_conflict_iter_next(%struct.ira_allocno_conflict_iterator* nonnull %aci) #8, !dbg !7746
  br label %for.cond6, !dbg !7746, !llvm.loop !7808

for.end:                                          ; preds = %for.cond6
  %cmp73 = icmp eq %struct.ira_allocno* %a.0, %allocno, !dbg !7810
  br i1 %cmp73, label %cleanup.loopexit, label %for.inc76, !dbg !7812

for.inc76:                                        ; preds = %for.end
  br label %for.cond, !dbg !7813, !llvm.loop !7814

cleanup.loopexit:                                 ; preds = %for.end
  br label %cleanup, !dbg !7817

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #7, !dbg !7817
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7817
  ret void, !dbg !7817
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_allocno_to_ordered_bucket(%struct.ira_allocno* %allocno, %struct.ira_allocno** %bucket_ptr) unnamed_addr #5 !dbg !7818 {
entry:
  %allocno.addr = alloca %struct.ira_allocno*, align 8
  %before = alloca %struct.ira_allocno*, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %allocno, metadata !7820, metadata !DIExpression()), !dbg !7825
  store %struct.ira_allocno* %allocno, %struct.ira_allocno** %allocno.addr, align 8
  call void @llvm.dbg.value(metadata %struct.ira_allocno** @colorable_allocno_bucket, metadata !7821, metadata !DIExpression()), !dbg !7825
  %0 = bitcast %struct.ira_allocno** %before to i8*, !dbg !7826
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7826
  %1 = load i64, i64* bitcast (%struct.ira_allocno** @colorable_allocno_bucket to i64*), align 8, !dbg !7827
  %2 = bitcast %struct.ira_allocno** %before to i64*, !dbg !7829
  store i64 %1, i64* %2, align 8, !dbg !7829
  call void @llvm.dbg.value(metadata %struct.ira_allocno* null, metadata !7823, metadata !DIExpression()), !dbg !7825
  %3 = bitcast %struct.ira_allocno** %allocno.addr to i8*, !dbg !7830
  %4 = inttoptr i64 %1 to %struct.ira_allocno*, !dbg !7833
  br label %for.cond, !dbg !7833

for.cond:                                         ; preds = %for.inc, %entry
  %5 = phi %struct.ira_allocno* [ %4, %entry ], [ %13, %for.inc ]
  %6 = phi %struct.ira_allocno* [ %4, %entry ], [ %13, %for.inc ]
  %7 = phi i64 [ %1, %entry ], [ %12, %for.inc ]
  %8 = phi %struct.ira_allocno* [ %4, %entry ], [ %13, %for.inc ], !dbg !7834
  %after.0 = phi %struct.ira_allocno* [ null, %entry ], [ %10, %for.inc ], !dbg !7835
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.0, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %8, metadata !7822, metadata !DIExpression()), !dbg !7825
  %cmp3 = icmp eq %struct.ira_allocno* %8, null, !dbg !7836
  br i1 %cmp3, label %for.end.loopexit, label %for.body, !dbg !7837

for.body:                                         ; preds = %for.cond
  %call = call i32 @bucket_allocno_compare_func(i8* nonnull %3, i8* nonnull %0) #8, !dbg !7838
  %cmp4 = icmp slt i32 %call, 0, !dbg !7839
  br i1 %cmp4, label %for.body.for.end_crit_edge, label %for.inc, !dbg !7840

for.body.for.end_crit_edge:                       ; preds = %for.body
  %after.0.lcssa8 = phi %struct.ira_allocno* [ %after.0, %for.body ], !dbg !7835
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.0.lcssa8, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.0.lcssa8, metadata !7823, metadata !DIExpression()), !dbg !7825
  %.pre = load i64, i64* %2, align 8, !dbg !7841
  %9 = inttoptr i64 %.pre to %struct.ira_allocno*, !dbg !7840
  br label %for.end, !dbg !7840

for.inc:                                          ; preds = %for.body
  %10 = load %struct.ira_allocno*, %struct.ira_allocno** %before, align 8, !dbg !7842
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %10, metadata !7822, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %10, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %10, metadata !7822, metadata !DIExpression()), !dbg !7825
  %next_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %10, i64 0, i32 39, !dbg !7843
  %11 = bitcast %struct.ira_allocno** %next_bucket_allocno to i64*, !dbg !7843
  %12 = load i64, i64* %11, align 8, !dbg !7843
  store i64 %12, i64* %2, align 8, !dbg !7844
  %13 = inttoptr i64 %12 to %struct.ira_allocno*, !dbg !7845
  br label %for.cond, !dbg !7845, !llvm.loop !7846

for.end.loopexit:                                 ; preds = %for.cond
  %.lcssa13 = phi %struct.ira_allocno* [ %5, %for.cond ]
  %.lcssa11 = phi %struct.ira_allocno* [ %6, %for.cond ]
  %.lcssa = phi i64 [ %7, %for.cond ]
  %after.0.lcssa = phi %struct.ira_allocno* [ %after.0, %for.cond ], !dbg !7835
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.0.lcssa, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.0.lcssa, metadata !7823, metadata !DIExpression()), !dbg !7825
  br label %for.end, !dbg !7848

for.end:                                          ; preds = %for.end.loopexit, %for.body.for.end_crit_edge
  %after.09 = phi %struct.ira_allocno* [ %after.0.lcssa8, %for.body.for.end_crit_edge ], [ %after.0.lcssa, %for.end.loopexit ]
  %14 = phi %struct.ira_allocno* [ %9, %for.body.for.end_crit_edge ], [ %.lcssa13, %for.end.loopexit ]
  %15 = phi %struct.ira_allocno* [ %9, %for.body.for.end_crit_edge ], [ %.lcssa11, %for.end.loopexit ]
  %16 = phi i64 [ %.pre, %for.body.for.end_crit_edge ], [ %.lcssa, %for.end.loopexit ], !dbg !7841
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.09, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %after.09, metadata !7823, metadata !DIExpression()), !dbg !7825
  %17 = load %struct.ira_allocno*, %struct.ira_allocno** %allocno.addr, align 8, !dbg !7848
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !7820, metadata !DIExpression()), !dbg !7825
  %next_bucket_allocno7 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 39, !dbg !7848
  %18 = bitcast %struct.ira_allocno** %next_bucket_allocno7 to i64*, !dbg !7849
  store i64 %16, i64* %18, align 8, !dbg !7849
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %17, metadata !7820, metadata !DIExpression()), !dbg !7825
  %prev_bucket_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %17, i64 0, i32 40, !dbg !7850
  store %struct.ira_allocno* %after.09, %struct.ira_allocno** %prev_bucket_allocno, align 8, !dbg !7851
  %cmp8 = icmp eq %struct.ira_allocno* %after.09, null, !dbg !7852
  %19 = ptrtoint %struct.ira_allocno* %17 to i64, !dbg !7854
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7855

if.then9:                                         ; preds = %for.end
  store i64 %19, i64* bitcast (%struct.ira_allocno** @colorable_allocno_bucket to i64*), align 8, !dbg !7856
  br label %if.end11, !dbg !7857

if.else:                                          ; preds = %for.end
  %next_bucket_allocno10 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %after.09, i64 0, i32 39, !dbg !7858
  %20 = bitcast %struct.ira_allocno** %next_bucket_allocno10 to i64*, !dbg !7859
  store i64 %19, i64* %20, align 8, !dbg !7859
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %15, metadata !7822, metadata !DIExpression()), !dbg !7825
  %cmp12 = icmp eq %struct.ira_allocno* %15, null, !dbg !7860
  br i1 %cmp12, label %if.end15, label %if.then13, !dbg !7862

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %14, metadata !7822, metadata !DIExpression()), !dbg !7825
  %prev_bucket_allocno14 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %14, i64 0, i32 40, !dbg !7863
  %21 = bitcast %struct.ira_allocno** %prev_bucket_allocno14 to i64*, !dbg !7864
  store i64 %19, i64* %21, align 8, !dbg !7864
  br label %if.end15, !dbg !7863

if.end15:                                         ; preds = %if.end11, %if.then13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7865
  ret void, !dbg !7865
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1974, !1975, !1976}
!llvm.ident = !{!1977}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sorted_allocnos", scope: !2, file: !3, line: 66, type: !574, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !563, globals: !1821, nameTableKind: None)
!3 = !DIFile(filename: "ira-color.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !154, !158, !163, !182, !189, !196, !390, !420}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !146, line: 31, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149, !150, !151, !152, !153}
!148 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!152 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !146, line: 91, baseType: !7, size: 32, elements: !155)
!155 = !{!156, !157}
!156 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!158 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !159, line: 474, baseType: !7, size: 32, elements: !160)
!159 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !164, line: 280, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!166 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !164, line: 1817, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188}
!184 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !164, line: 1805, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !164, line: 39, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!198 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!228 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!229 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!230 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!231 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!232 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!233 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!234 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!235 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!236 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!237 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!238 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!239 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!240 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!241 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!242 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!243 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!244 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!245 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!246 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!247 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!248 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!249 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!250 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!251 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!252 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!253 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!254 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!255 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!256 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!257 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!258 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!259 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!260 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!261 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!262 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!263 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!264 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!265 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!266 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!267 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!268 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!269 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!270 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!271 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!272 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!273 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!274 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!275 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!276 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!277 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!278 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!280 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!281 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!282 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!283 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!284 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!285 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!286 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!287 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!288 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!289 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!290 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!291 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!292 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!293 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!294 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!295 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!296 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!297 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!298 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!299 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!300 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!301 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!302 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!303 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!304 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!305 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!306 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!307 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!308 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!309 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!310 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!311 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!312 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!313 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!314 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!315 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!316 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!317 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!318 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!320 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!321 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!322 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!323 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!324 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!325 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!326 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!327 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!328 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!329 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!330 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!331 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!332 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!333 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!334 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!335 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!336 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!337 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!338 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!339 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!340 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!341 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!342 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!343 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!344 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!345 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!346 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!347 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!348 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!349 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!350 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!362 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!363 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!364 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!365 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!366 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!367 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!383 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!384 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!385 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!386 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!387 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!388 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!389 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !159, line: 1188, baseType: !7, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419}
!392 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!393 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!394 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!395 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!396 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!397 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!398 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!399 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!400 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!401 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!402 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!403 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!404 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!405 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!406 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!407 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!408 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!409 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!410 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!411 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!412 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!413 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!414 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!415 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!416 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!417 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!418 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!419 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !421, line: 45, baseType: !7, size: 32, elements: !422)
!421 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!423 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!424 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!425 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!426 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!427 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!428 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!429 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!430 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!431 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!432 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!433 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!434 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!435 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!436 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!437 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!438 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!439 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!440 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!441 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!442 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!443 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!444 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!445 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!446 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!447 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!448 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!449 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!450 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!451 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!452 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!453 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!454 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!455 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!456 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!457 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!458 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!459 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!460 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!461 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!462 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!463 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!464 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!465 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!466 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!467 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!468 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!469 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!470 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!471 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!472 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!473 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!474 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!475 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!476 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!477 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!478 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!479 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!480 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!481 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!482 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!483 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!484 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!485 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!486 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!487 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!488 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!489 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!490 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!491 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!492 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!493 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!494 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!495 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!496 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!497 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!498 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!499 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!500 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!501 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!502 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!503 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!504 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!505 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!506 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!507 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!508 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!509 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!510 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!511 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!512 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!513 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!514 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!515 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!516 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!517 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!518 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!519 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!520 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!521 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!522 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!523 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!524 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!525 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!526 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!527 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!528 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!529 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!530 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!531 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!532 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!533 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!534 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!535 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!536 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!537 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!538 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!539 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!540 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!541 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!542 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!543 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!544 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!545 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!546 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!547 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!548 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!549 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!550 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!551 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!552 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!553 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!554 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!555 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!556 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!557 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!558 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!559 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!560 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!561 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!562 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!563 = !{!564, !565, !566, !567, !570, !571, !573, !574, !585, !1780, !5, !7, !1781, !975, !1789, !1790, !1752, !1792, !1804, !1805, !1807, !1809, !420, !1810, !1816, !1819, !575, !1820}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!566 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_t", file: !576, line: 63, baseType: !577)
!576 = !DIFile(filename: "./ira-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno", file: !576, line: 232, size: 1984, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !1681, !1682, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1731, !1732, !1733, !1734, !1735, !1746, !1747, !1748, !1749, !1750, !1751, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !578, file: !576, line: 237, baseType: !566, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !578, file: !576, line: 239, baseType: !566, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !578, file: !576, line: 242, baseType: !5, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "hard_regno", scope: !578, file: !576, line: 249, baseType: !566, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !578, file: !576, line: 251, baseType: !585, size: 64, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !586, line: 50, baseType: !587)
!586 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !421, line: 240, size: 384, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !588, file: !421, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !588, file: !421, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !588, file: !421, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !588, file: !421, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !588, file: !421, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !588, file: !421, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !588, file: !421, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !588, file: !421, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !588, file: !421, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !588, file: !421, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !588, file: !421, line: 321, baseType: !601, size: 320, offset: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !421, line: 315, size: 320, elements: !602)
!602 = !{!603, !1648, !1650, !1679, !1680}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !601, file: !421, line: 316, baseType: !604, size: 64)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 64, elements: !620)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !421, line: 183, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !421, line: 166, size: 64, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !622, !623, !635, !638, !700, !1626, !1627, !1638, !1645}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !606, file: !421, line: 168, baseType: !566, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !606, file: !421, line: 169, baseType: !7, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !606, file: !421, line: 170, baseType: !571, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !606, file: !421, line: 171, baseType: !585, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !606, file: !421, line: 172, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !586, line: 53, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !421, line: 359, size: 128, elements: !616)
!616 = !{!617, !618}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !615, file: !421, line: 360, baseType: !566, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !615, file: !421, line: 361, baseType: !619, size: 64, offset: 64)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !585, size: 64, elements: !620)
!620 = !{!621}
!621 = !DISubrange(count: 1)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !606, file: !421, line: 173, baseType: !5, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !606, file: !421, line: 174, baseType: !624, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !421, line: 133, baseType: !625)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 115, size: 32, elements: !626)
!626 = !{!627, !628, !629, !630, !631, !632, !633, !634}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !625, file: !421, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !625, file: !421, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !625, file: !421, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !625, file: !421, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !625, file: !421, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !625, file: !421, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !625, file: !421, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !625, file: !421, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !606, file: !421, line: 175, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !421, line: 175, flags: DIFlagFwdDecl)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !606, file: !421, line: 176, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !641, line: 75, size: 256, elements: !642)
!641 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!642 = !{!643, !658, !659, !660}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !640, file: !641, line: 76, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !641, line: 68, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !641, line: 63, size: 320, elements: !647)
!647 = !{!648, !650, !651, !652}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !646, file: !641, line: 64, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !646, file: !641, line: 65, baseType: !649, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !646, file: !641, line: 66, baseType: !7, size: 32, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !646, file: !641, line: 67, baseType: !653, size: 128, offset: 192)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 128, elements: !656)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !641, line: 29, baseType: !655)
!655 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!656 = !{!657}
!657 = !DISubrange(count: 2)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !640, file: !641, line: 77, baseType: !644, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !640, file: !641, line: 78, baseType: !7, size: 32, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !640, file: !641, line: 79, baseType: !661, size: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !641, line: 49, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !641, line: 45, size: 832, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !663, file: !641, line: 46, baseType: !649, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !663, file: !641, line: 47, baseType: !639, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !663, file: !641, line: 48, baseType: !668, size: 704, offset: 128)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !669, line: 164, size: 704, elements: !670)
!669 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!670 = !{!671, !673, !683, !684, !685, !686, !687, !688, !692, !696, !697, !698, !699}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !668, file: !669, line: 166, baseType: !672, size: 64)
!672 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !668, file: !669, line: 167, baseType: !674, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !669, line: 157, size: 192, elements: !676)
!676 = !{!677, !678, !679}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !675, file: !669, line: 159, baseType: !568, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !675, file: !669, line: 160, baseType: !674, size: 64, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !675, file: !669, line: 161, baseType: !680, size: 32, offset: 128)
!680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 32, elements: !681)
!681 = !{!682}
!682 = !DISubrange(count: 4)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !668, file: !669, line: 168, baseType: !568, size: 64, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !668, file: !669, line: 169, baseType: !568, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !668, file: !669, line: 170, baseType: !568, size: 64, offset: 256)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !668, file: !669, line: 171, baseType: !672, size: 64, offset: 320)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !668, file: !669, line: 172, baseType: !566, size: 32, offset: 384)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !668, file: !669, line: 176, baseType: !689, size: 64, offset: 448)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{!674, !570, !672}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !668, file: !669, line: 177, baseType: !693, size: 64, offset: 512)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !570, !674}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !668, file: !669, line: 178, baseType: !570, size: 64, offset: 576)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !668, file: !669, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !668, file: !669, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !668, file: !669, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !606, file: !421, line: 177, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !586, line: 56, baseType: !702)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !164, line: 3371, size: 1792, elements: !704)
!704 = !{!705, !738, !744, !755, !774, !785, !790, !797, !803, !816, !828, !866, !871, !899, !907, !908, !913, !922, !928, !933, !937, !941, !1253, !1302, !1308, !1315, !1322, !1345, !1370, !1387, !1399, !1421, !1436, !1608}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !703, file: !164, line: 3372, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !164, line: 360, size: 64, elements: !707)
!707 = !{!708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !706, file: !164, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !706, file: !164, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !706, file: !164, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !706, file: !164, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !706, file: !164, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !706, file: !164, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !706, file: !164, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !706, file: !164, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !706, file: !164, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !706, file: !164, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !706, file: !164, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !706, file: !164, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !706, file: !164, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !706, file: !164, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !706, file: !164, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !706, file: !164, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !706, file: !164, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !706, file: !164, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !706, file: !164, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !706, file: !164, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !706, file: !164, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !706, file: !164, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !706, file: !164, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !706, file: !164, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !706, file: !164, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !706, file: !164, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !706, file: !164, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !706, file: !164, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !706, file: !164, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !706, file: !164, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !703, file: !164, line: 3373, baseType: !739, size: 192)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !164, line: 402, size: 192, elements: !740)
!740 = !{!741, !742, !743}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !739, file: !164, line: 403, baseType: !706, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !739, file: !164, line: 404, baseType: !701, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !739, file: !164, line: 405, baseType: !701, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !703, file: !164, line: 3374, baseType: !745, size: 320)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !164, line: 1384, size: 320, elements: !746)
!746 = !{!747, !748}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !745, file: !164, line: 1385, baseType: !739, size: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !745, file: !164, line: 1386, baseType: !749, size: 128, offset: 192)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !750, line: 58, baseType: !751)
!750 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !750, line: 54, size: 128, elements: !752)
!752 = !{!753, !754}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !751, file: !750, line: 56, baseType: !655, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !751, file: !750, line: 57, baseType: !672, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !703, file: !164, line: 3375, baseType: !756, size: 256)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !164, line: 1397, size: 256, elements: !757)
!757 = !{!758, !759}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !756, file: !164, line: 1398, baseType: !739, size: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !756, file: !164, line: 1399, baseType: !760, size: 64, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !762, line: 52, size: 256, elements: !763)
!762 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!763 = !{!764, !765, !766, !767, !768, !769, !770}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !761, file: !762, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !761, file: !762, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !761, file: !762, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !761, file: !762, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !761, file: !762, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !761, file: !762, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !761, file: !762, line: 62, baseType: !771, size: 192, offset: 64)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !655, size: 192, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 3)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !703, file: !164, line: 3376, baseType: !775, size: 256)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !164, line: 1408, size: 256, elements: !776)
!776 = !{!777, !778}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !775, file: !164, line: 1409, baseType: !739, size: 192)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !775, file: !164, line: 1410, baseType: !779, size: 64, offset: 192)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !781, line: 27, size: 192, elements: !782)
!781 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !780, file: !781, line: 29, baseType: !749, size: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !780, file: !781, line: 30, baseType: !5, size: 32, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !703, file: !164, line: 3377, baseType: !786, size: 256)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !164, line: 1437, size: 256, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !786, file: !164, line: 1438, baseType: !739, size: 192)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !786, file: !164, line: 1439, baseType: !701, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !703, file: !164, line: 3378, baseType: !791, size: 256)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !164, line: 1418, size: 256, elements: !792)
!792 = !{!793, !794, !795}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !791, file: !164, line: 1419, baseType: !739, size: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !791, file: !164, line: 1420, baseType: !566, size: 32, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !791, file: !164, line: 1421, baseType: !796, size: 8, offset: 224)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 8, elements: !620)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !703, file: !164, line: 3379, baseType: !798, size: 320)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !164, line: 1428, size: 320, elements: !799)
!799 = !{!800, !801, !802}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !798, file: !164, line: 1429, baseType: !739, size: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !798, file: !164, line: 1430, baseType: !701, size: 64, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !798, file: !164, line: 1431, baseType: !701, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !703, file: !164, line: 3380, baseType: !804, size: 320)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !164, line: 1460, size: 320, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !804, file: !164, line: 1461, baseType: !739, size: 192)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !804, file: !164, line: 1462, baseType: !808, size: 128, offset: 192)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !809, line: 31, size: 128, elements: !810)
!809 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!810 = !{!811, !814, !815}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !808, file: !809, line: 32, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !808, file: !809, line: 33, baseType: !7, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !808, file: !809, line: 34, baseType: !7, size: 32, offset: 96)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !703, file: !164, line: 3381, baseType: !817, size: 384)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !164, line: 2507, size: 384, elements: !818)
!818 = !{!819, !820, !825, !826, !827}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !817, file: !164, line: 2508, baseType: !739, size: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !817, file: !164, line: 2509, baseType: !821, size: 32, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !822, line: 58, baseType: !823)
!822 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !824, line: 44, baseType: !7)
!824 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!825 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !817, file: !164, line: 2510, baseType: !7, size: 32, offset: 224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !817, file: !164, line: 2511, baseType: !701, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !817, file: !164, line: 2512, baseType: !701, size: 64, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !703, file: !164, line: 3382, baseType: !829, size: 896)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !164, line: 2652, size: 896, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !829, file: !164, line: 2653, baseType: !817, size: 384)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !829, file: !164, line: 2654, baseType: !701, size: 64, offset: 384)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !829, file: !164, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !829, file: !164, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !829, file: !164, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !829, file: !164, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !829, file: !164, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !829, file: !164, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !829, file: !164, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !829, file: !164, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !829, file: !164, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !829, file: !164, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !829, file: !164, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !829, file: !164, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !829, file: !164, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !829, file: !164, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !829, file: !164, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !829, file: !164, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !829, file: !164, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !829, file: !164, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !829, file: !164, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !829, file: !164, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !829, file: !164, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !829, file: !164, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !829, file: !164, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !829, file: !164, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !829, file: !164, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !829, file: !164, line: 2703, baseType: !7, size: 32, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !829, file: !164, line: 2705, baseType: !701, size: 64, offset: 576)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !829, file: !164, line: 2706, baseType: !701, size: 64, offset: 640)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !829, file: !164, line: 2707, baseType: !701, size: 64, offset: 704)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !829, file: !164, line: 2708, baseType: !701, size: 64, offset: 768)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !829, file: !164, line: 2711, baseType: !864, size: 64, offset: 832)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !164, line: 2711, flags: DIFlagFwdDecl)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !703, file: !164, line: 3383, baseType: !867, size: 960)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !164, line: 2756, size: 960, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !867, file: !164, line: 2757, baseType: !829, size: 896)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !867, file: !164, line: 2758, baseType: !585, size: 64, offset: 896)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !703, file: !164, line: 3384, baseType: !872, size: 1472)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !164, line: 3114, size: 1472, elements: !873)
!873 = !{!874, !895, !896, !897, !898}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !872, file: !164, line: 3115, baseType: !875, size: 1216)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !164, line: 2984, size: 1216, elements: !876)
!876 = !{!877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !875, file: !164, line: 2985, baseType: !867, size: 960)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !875, file: !164, line: 2986, baseType: !701, size: 64, offset: 960)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !875, file: !164, line: 2987, baseType: !701, size: 64, offset: 1024)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !875, file: !164, line: 2988, baseType: !701, size: 64, offset: 1088)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !875, file: !164, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !875, file: !164, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !875, file: !164, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !875, file: !164, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !875, file: !164, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !875, file: !164, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !875, file: !164, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !875, file: !164, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !875, file: !164, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !875, file: !164, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !875, file: !164, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !875, file: !164, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !875, file: !164, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !875, file: !164, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !872, file: !164, line: 3117, baseType: !701, size: 64, offset: 1216)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !872, file: !164, line: 3119, baseType: !701, size: 64, offset: 1280)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !872, file: !164, line: 3121, baseType: !701, size: 64, offset: 1344)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !872, file: !164, line: 3123, baseType: !701, size: 64, offset: 1408)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !703, file: !164, line: 3385, baseType: !900, size: 1088)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !164, line: 2874, size: 1088, elements: !901)
!901 = !{!902, !903, !904}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !900, file: !164, line: 2875, baseType: !867, size: 960)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !900, file: !164, line: 2876, baseType: !585, size: 64, offset: 960)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !900, file: !164, line: 2877, baseType: !905, size: 64, offset: 1024)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !164, line: 2856, flags: DIFlagFwdDecl)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !703, file: !164, line: 3386, baseType: !875, size: 1216)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !703, file: !164, line: 3387, baseType: !909, size: 1280)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !164, line: 3093, size: 1280, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !909, file: !164, line: 3094, baseType: !875, size: 1216)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !909, file: !164, line: 3095, baseType: !905, size: 64, offset: 1216)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !703, file: !164, line: 3388, baseType: !914, size: 1216)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !164, line: 2824, size: 1216, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !914, file: !164, line: 2825, baseType: !829, size: 896)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !914, file: !164, line: 2827, baseType: !701, size: 64, offset: 896)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !914, file: !164, line: 2828, baseType: !701, size: 64, offset: 960)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !914, file: !164, line: 2829, baseType: !701, size: 64, offset: 1024)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !914, file: !164, line: 2830, baseType: !701, size: 64, offset: 1088)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !914, file: !164, line: 2831, baseType: !701, size: 64, offset: 1152)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !703, file: !164, line: 3389, baseType: !923, size: 1024)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !164, line: 2850, size: 1024, elements: !924)
!924 = !{!925, !926, !927}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !923, file: !164, line: 2851, baseType: !867, size: 960)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !923, file: !164, line: 2852, baseType: !566, size: 32, offset: 960)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !923, file: !164, line: 2853, baseType: !566, size: 32, offset: 992)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !703, file: !164, line: 3390, baseType: !929, size: 1024)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !164, line: 2857, size: 1024, elements: !930)
!930 = !{!931, !932}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !929, file: !164, line: 2858, baseType: !867, size: 960)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !929, file: !164, line: 2859, baseType: !905, size: 64, offset: 960)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !703, file: !164, line: 3391, baseType: !934, size: 960)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !164, line: 2862, size: 960, elements: !935)
!935 = !{!936}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !934, file: !164, line: 2863, baseType: !867, size: 960)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !703, file: !164, line: 3392, baseType: !938, size: 1472)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !164, line: 3304, size: 1472, elements: !939)
!939 = !{!940}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !938, file: !164, line: 3305, baseType: !872, size: 1472)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !703, file: !164, line: 3393, baseType: !942, size: 1792)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !164, line: 3248, size: 1792, elements: !943)
!943 = !{!944, !945, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !942, file: !164, line: 3249, baseType: !872, size: 1472)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !942, file: !164, line: 3251, baseType: !946, size: 64, offset: 1472)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !948, line: 463, size: 1152, elements: !949)
!948 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!949 = !{!950, !953, !1113, !1114, !1117, !1176, !1177, !1178, !1179, !1180, !1181, !1205, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !947, file: !948, line: 464, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !948, line: 464, flags: DIFlagFwdDecl)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !947, file: !948, line: 467, baseType: !954, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !956)
!956 = !{!957, !1088, !1089, !1102, !1103, !1104, !1105, !1106, !1107, !1109, !1111, !1112}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !955, file: !135, line: 377, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !586, line: 111, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !961)
!961 = !{!962, !997, !998, !999, !1058, !1062, !1063, !1064, !1082, !1083, !1084, !1085, !1086, !1087}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !960, file: !135, line: 219, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !966)
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !965, file: !135, line: 151, baseType: !968, size: 128)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !970)
!970 = !{!971, !972, !973}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !969, file: !135, line: 150, baseType: !7, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !969, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !969, file: !135, line: 150, baseType: !974, size: 64, offset: 64)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 64, elements: !620)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !586, line: 108, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !978)
!978 = !{!979, !980, !981, !989, !990, !991, !992, !993, !994, !995}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !977, file: !135, line: 124, baseType: !959, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !977, file: !135, line: 125, baseType: !959, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !977, file: !135, line: 131, baseType: !982, size: 64, offset: 128)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !983)
!983 = !{!984, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !982, file: !135, line: 129, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !586, line: 66, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !586, line: 65, flags: DIFlagFwdDecl)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !982, file: !135, line: 130, baseType: !585, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !977, file: !135, line: 134, baseType: !570, size: 64, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !977, file: !135, line: 137, baseType: !701, size: 64, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !977, file: !135, line: 138, baseType: !821, size: 32, offset: 320)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !977, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !977, file: !135, line: 144, baseType: !566, size: 32, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !977, file: !135, line: 145, baseType: !566, size: 32, offset: 416)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !977, file: !135, line: 146, baseType: !996, size: 64, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !672)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !960, file: !135, line: 220, baseType: !963, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !960, file: !135, line: 223, baseType: !570, size: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !960, file: !135, line: 226, baseType: !1000, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !146, line: 100, size: 1216, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006, !1007, !1012, !1013, !1014, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1048, !1056, !1057}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1001, file: !146, line: 102, baseType: !566, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1001, file: !146, line: 105, baseType: !7, size: 32, offset: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1001, file: !146, line: 108, baseType: !959, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1001, file: !146, line: 111, baseType: !959, size: 64, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1001, file: !146, line: 114, baseType: !1008, size: 64, offset: 192)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !146, line: 41, size: 64, elements: !1009)
!1009 = !{!1010, !1011}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1008, file: !146, line: 42, baseType: !145, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1008, file: !146, line: 43, baseType: !7, size: 32, offset: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1001, file: !146, line: 117, baseType: !7, size: 32, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1001, file: !146, line: 120, baseType: !7, size: 32, offset: 288)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1001, file: !146, line: 123, baseType: !1015, size: 64, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !146, line: 87, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !146, line: 87, size: 128, elements: !1018)
!1018 = !{!1019}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1017, file: !146, line: 87, baseType: !1020, size: 128)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !146, line: 85, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !146, line: 85, size: 128, elements: !1022)
!1022 = !{!1023, !1024, !1025}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1021, file: !146, line: 85, baseType: !7, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1021, file: !146, line: 85, baseType: !7, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1021, file: !146, line: 85, baseType: !1026, size: 64, offset: 64)
!1026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 64, elements: !620)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !146, line: 84, baseType: !1000)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1001, file: !146, line: 126, baseType: !1000, size: 64, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1001, file: !146, line: 129, baseType: !1000, size: 64, offset: 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1001, file: !146, line: 132, baseType: !570, size: 64, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1001, file: !146, line: 139, baseType: !701, size: 64, offset: 576)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1001, file: !146, line: 143, baseType: !749, size: 128, offset: 640)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1001, file: !146, line: 146, baseType: !749, size: 128, offset: 768)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1001, file: !146, line: 148, baseType: !565, size: 8, offset: 896)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1001, file: !146, line: 149, baseType: !565, size: 8, offset: 904)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1001, file: !146, line: 153, baseType: !154, size: 32, offset: 928)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1001, file: !146, line: 156, baseType: !1038, size: 64, offset: 960)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !146, line: 48, size: 320, elements: !1040)
!1040 = !{!1041, !1045, !1046, !1047}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1039, file: !146, line: 50, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !586, line: 58, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !586, line: 57, flags: DIFlagFwdDecl)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1039, file: !146, line: 59, baseType: !749, size: 128, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1039, file: !146, line: 64, baseType: !565, size: 8, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1039, file: !146, line: 67, baseType: !1038, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1001, file: !146, line: 159, baseType: !1049, size: 64, offset: 1024)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !146, line: 72, size: 256, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1050, file: !146, line: 74, baseType: !976, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1050, file: !146, line: 77, baseType: !1049, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1050, file: !146, line: 78, baseType: !1049, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1050, file: !146, line: 81, baseType: !1049, size: 64, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1001, file: !146, line: 162, baseType: !565, size: 8, offset: 1088)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1001, file: !146, line: 166, baseType: !701, size: 64, offset: 1152)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !960, file: !135, line: 229, baseType: !1059, size: 128, offset: 256)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1060, size: 128, elements: !656)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !960, file: !135, line: 232, baseType: !959, size: 64, offset: 384)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !960, file: !135, line: 233, baseType: !959, size: 64, offset: 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !960, file: !135, line: 238, baseType: !1065, size: 64, offset: 512)
!1065 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1066)
!1066 = !{!1067, !1073}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1065, file: !135, line: 236, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1069, file: !135, line: 275, baseType: !985, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1069, file: !135, line: 278, baseType: !985, size: 64, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1065, file: !135, line: 237, baseType: !1074, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1075, file: !135, line: 261, baseType: !585, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1075, file: !135, line: 262, baseType: !585, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1075, file: !135, line: 266, baseType: !585, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1075, file: !135, line: 267, baseType: !585, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1075, file: !135, line: 270, baseType: !566, size: 32, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !960, file: !135, line: 241, baseType: !996, size: 64, offset: 576)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !960, file: !135, line: 244, baseType: !566, size: 32, offset: 640)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !960, file: !135, line: 247, baseType: !566, size: 32, offset: 672)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !960, file: !135, line: 250, baseType: !566, size: 32, offset: 704)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !960, file: !135, line: 253, baseType: !566, size: 32, offset: 736)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !960, file: !135, line: 256, baseType: !566, size: 32, offset: 768)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !955, file: !135, line: 378, baseType: !958, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !955, file: !135, line: 381, baseType: !1090, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1093)
!1093 = !{!1094}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1092, file: !135, line: 282, baseType: !1095, size: 128)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1096, file: !135, line: 281, baseType: !7, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1096, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1096, file: !135, line: 281, baseType: !1101, size: 64, offset: 64)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 64, elements: !620)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !955, file: !135, line: 384, baseType: !566, size: 32, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !955, file: !135, line: 387, baseType: !566, size: 32, offset: 224)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !955, file: !135, line: 390, baseType: !566, size: 32, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !955, file: !135, line: 394, baseType: !1090, size: 64, offset: 320)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !955, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !955, file: !135, line: 399, baseType: !1108, size: 64, offset: 416)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !656)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !955, file: !135, line: 402, baseType: !1110, size: 64, offset: 480)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !656)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !955, file: !135, line: 406, baseType: !566, size: 32, offset: 544)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !955, file: !135, line: 409, baseType: !566, size: 32, offset: 576)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !947, file: !948, line: 470, baseType: !986, size: 64, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !947, file: !948, line: 473, baseType: !1115, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !948, line: 166, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !947, file: !948, line: 476, baseType: !1118, size: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !146, line: 187, size: 256, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1175}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1119, file: !146, line: 189, baseType: !566, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1119, file: !146, line: 192, baseType: !1015, size: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1119, file: !146, line: 197, baseType: !1124, size: 64, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1125, line: 144, baseType: !1126)
!1125 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1125, line: 100, size: 896, elements: !1128)
!1128 = !{!1129, !1137, !1142, !1147, !1149, !1152, !1153, !1154, !1155, !1156, !1161, !1163, !1164, !1169, !1174}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1127, file: !1125, line: 102, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1125, line: 52, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1125, line: 47, baseType: !7)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1127, file: !1125, line: 105, baseType: !1138, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1125, line: 59, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!566, !1135, !1135}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1127, file: !1125, line: 108, baseType: !1143, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1125, line: 63, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !570}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1127, file: !1125, line: 111, baseType: !1148, size: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1127, file: !1125, line: 114, baseType: !1150, size: 64, offset: 256)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1151, line: 46, baseType: !655)
!1151 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1127, file: !1125, line: 117, baseType: !1150, size: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1127, file: !1125, line: 120, baseType: !1150, size: 64, offset: 384)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1127, file: !1125, line: 124, baseType: !7, size: 32, offset: 448)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1127, file: !1125, line: 128, baseType: !7, size: 32, offset: 480)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1127, file: !1125, line: 131, baseType: !1157, size: 64, offset: 512)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1125, line: 75, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!570, !1150, !1150}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1127, file: !1125, line: 132, baseType: !1162, size: 64, offset: 576)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1125, line: 78, baseType: !1144)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1127, file: !1125, line: 135, baseType: !570, size: 64, offset: 640)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1127, file: !1125, line: 136, baseType: !1165, size: 64, offset: 704)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1125, line: 82, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!570, !570, !1150, !1150}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1127, file: !1125, line: 137, baseType: !1170, size: 64, offset: 768)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1125, line: 83, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !570, !570}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1127, file: !1125, line: 141, baseType: !7, size: 32, offset: 832)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1119, file: !146, line: 200, baseType: !1000, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !947, file: !948, line: 479, baseType: !1124, size: 64, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !947, file: !948, line: 484, baseType: !701, size: 64, offset: 384)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !947, file: !948, line: 488, baseType: !701, size: 64, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !947, file: !948, line: 493, baseType: !701, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !947, file: !948, line: 496, baseType: !701, size: 64, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !947, file: !948, line: 501, baseType: !1182, size: 64, offset: 640)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !159, line: 2355, size: 576, elements: !1184)
!1184 = !{!1185, !1188, !1189, !1190, !1191, !1193, !1194, !1199, !1200, !1201, !1202, !1203, !1204}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1183, file: !159, line: 2356, baseType: !1186, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !159, line: 2356, flags: DIFlagFwdDecl)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1183, file: !159, line: 2357, baseType: !571, size: 64, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1183, file: !159, line: 2358, baseType: !566, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1183, file: !159, line: 2359, baseType: !566, size: 32, offset: 160)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1183, file: !159, line: 2360, baseType: !1192, size: 128, offset: 192)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !681)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1183, file: !159, line: 2364, baseType: !566, size: 32, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1183, file: !159, line: 2367, baseType: !1195, size: 128, offset: 384)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !159, line: 2349, size: 128, elements: !1196)
!1196 = !{!1197, !1198}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1195, file: !159, line: 2351, baseType: !585, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1195, file: !159, line: 2352, baseType: !672, size: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1183, file: !159, line: 2371, baseType: !158, size: 32, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1183, file: !159, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1183, file: !159, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1183, file: !159, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1183, file: !159, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1183, file: !159, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !947, file: !948, line: 504, baseType: !1206, size: 64, offset: 704)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !948, line: 504, flags: DIFlagFwdDecl)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !947, file: !948, line: 507, baseType: !1124, size: 64, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !947, file: !948, line: 510, baseType: !566, size: 32, offset: 832)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !947, file: !948, line: 513, baseType: !566, size: 32, offset: 864)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !947, file: !948, line: 516, baseType: !821, size: 32, offset: 896)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !947, file: !948, line: 519, baseType: !821, size: 32, offset: 928)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !947, file: !948, line: 522, baseType: !7, size: 32, offset: 960)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !947, file: !948, line: 523, baseType: !7, size: 32, offset: 992)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !947, file: !948, line: 528, baseType: !571, size: 64, offset: 1024)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !947, file: !948, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !947, file: !948, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !947, file: !948, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !947, file: !948, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !947, file: !948, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !947, file: !948, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !947, file: !948, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !947, file: !948, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !947, file: !948, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !947, file: !948, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !947, file: !948, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !947, file: !948, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !947, file: !948, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !947, file: !948, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !947, file: !948, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !947, file: !948, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !942, file: !164, line: 3254, baseType: !701, size: 64, offset: 1536)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !942, file: !164, line: 3257, baseType: !701, size: 64, offset: 1600)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !942, file: !164, line: 3258, baseType: !701, size: 64, offset: 1664)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !942, file: !164, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !942, file: !164, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !942, file: !164, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !942, file: !164, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !942, file: !164, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !942, file: !164, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !942, file: !164, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !942, file: !164, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !942, file: !164, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !942, file: !164, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !942, file: !164, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !942, file: !164, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !942, file: !164, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !942, file: !164, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !942, file: !164, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !942, file: !164, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !942, file: !164, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !942, file: !164, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !703, file: !164, line: 3394, baseType: !1254, size: 1344)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !164, line: 2279, size: 1344, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1281, !1282, !1283, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1254, file: !164, line: 2280, baseType: !739, size: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1254, file: !164, line: 2281, baseType: !701, size: 64, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1254, file: !164, line: 2282, baseType: !701, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1254, file: !164, line: 2283, baseType: !701, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1254, file: !164, line: 2284, baseType: !701, size: 64, offset: 384)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1254, file: !164, line: 2285, baseType: !7, size: 32, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1254, file: !164, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1254, file: !164, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1254, file: !164, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1254, file: !164, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1254, file: !164, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1254, file: !164, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1254, file: !164, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1254, file: !164, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1254, file: !164, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1254, file: !164, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1254, file: !164, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1254, file: !164, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1254, file: !164, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1254, file: !164, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1254, file: !164, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1254, file: !164, line: 2305, baseType: !7, size: 32, offset: 512)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1254, file: !164, line: 2306, baseType: !1279, size: 32, offset: 544)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1280, line: 31, baseType: !566)
!1280 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1254, file: !164, line: 2307, baseType: !701, size: 64, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1254, file: !164, line: 2308, baseType: !701, size: 64, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1254, file: !164, line: 2314, baseType: !1284, size: 64, offset: 704)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !164, line: 2309, size: 64, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1284, file: !164, line: 2310, baseType: !566, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1284, file: !164, line: 2311, baseType: !571, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1284, file: !164, line: 2312, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !164, line: 2277, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1254, file: !164, line: 2315, baseType: !701, size: 64, offset: 768)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1254, file: !164, line: 2316, baseType: !701, size: 64, offset: 832)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1254, file: !164, line: 2317, baseType: !701, size: 64, offset: 896)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1254, file: !164, line: 2318, baseType: !701, size: 64, offset: 960)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1254, file: !164, line: 2319, baseType: !701, size: 64, offset: 1024)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1254, file: !164, line: 2320, baseType: !701, size: 64, offset: 1088)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1254, file: !164, line: 2321, baseType: !701, size: 64, offset: 1152)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1254, file: !164, line: 2322, baseType: !701, size: 64, offset: 1216)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1254, file: !164, line: 2324, baseType: !1300, size: 64, offset: 1280)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !164, line: 2324, flags: DIFlagFwdDecl)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !703, file: !164, line: 3395, baseType: !1303, size: 320)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !164, line: 1469, size: 320, elements: !1304)
!1304 = !{!1305, !1306, !1307}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1303, file: !164, line: 1470, baseType: !739, size: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1303, file: !164, line: 1471, baseType: !701, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1303, file: !164, line: 1472, baseType: !701, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !703, file: !164, line: 3396, baseType: !1309, size: 320)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !164, line: 1482, size: 320, elements: !1310)
!1310 = !{!1311, !1312, !1313}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1309, file: !164, line: 1483, baseType: !739, size: 192)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1309, file: !164, line: 1484, baseType: !566, size: 32, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1309, file: !164, line: 1485, baseType: !1314, size: 64, offset: 256)
!1314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !701, size: 64, elements: !620)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !703, file: !164, line: 3397, baseType: !1316, size: 384)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !164, line: 1829, size: 384, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1316, file: !164, line: 1830, baseType: !739, size: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1316, file: !164, line: 1831, baseType: !821, size: 32, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1316, file: !164, line: 1832, baseType: !701, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1316, file: !164, line: 1835, baseType: !1314, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !703, file: !164, line: 3398, baseType: !1323, size: 704)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !164, line: 1898, size: 704, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1332}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1323, file: !164, line: 1899, baseType: !739, size: 192)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1323, file: !164, line: 1902, baseType: !701, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1323, file: !164, line: 1905, baseType: !1042, size: 64, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1323, file: !164, line: 1908, baseType: !7, size: 32, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1323, file: !164, line: 1911, baseType: !1330, size: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !164, line: 1876, flags: DIFlagFwdDecl)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1323, file: !164, line: 1914, baseType: !1333, size: 256, offset: 448)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !164, line: 1883, size: 256, elements: !1334)
!1334 = !{!1335, !1337, !1338, !1343}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1333, file: !164, line: 1884, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1333, file: !164, line: 1885, baseType: !1336, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1333, file: !164, line: 1891, baseType: !1339, size: 64, offset: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1333, file: !164, line: 1891, size: 64, elements: !1340)
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1339, file: !164, line: 1891, baseType: !1042, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1339, file: !164, line: 1891, baseType: !701, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1333, file: !164, line: 1892, baseType: !1344, size: 64, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !703, file: !164, line: 3399, baseType: !1346, size: 704)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !164, line: 2008, size: 704, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352, !1353, !1365, !1366, !1367, !1368, !1369}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1346, file: !164, line: 2009, baseType: !739, size: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1346, file: !164, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1346, file: !164, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1346, file: !164, line: 2014, baseType: !821, size: 32, offset: 224)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1346, file: !164, line: 2016, baseType: !701, size: 64, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1346, file: !164, line: 2017, baseType: !1354, size: 64, offset: 320)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !164, line: 183, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !164, line: 183, size: 128, elements: !1357)
!1357 = !{!1358}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1356, file: !164, line: 183, baseType: !1359, size: 128)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !164, line: 182, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !164, line: 182, size: 128, elements: !1361)
!1361 = !{!1362, !1363, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1360, file: !164, line: 182, baseType: !7, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1360, file: !164, line: 182, baseType: !7, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1360, file: !164, line: 182, baseType: !1314, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1346, file: !164, line: 2019, baseType: !701, size: 64, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1346, file: !164, line: 2020, baseType: !701, size: 64, offset: 448)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1346, file: !164, line: 2021, baseType: !701, size: 64, offset: 512)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1346, file: !164, line: 2022, baseType: !701, size: 64, offset: 576)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1346, file: !164, line: 2023, baseType: !701, size: 64, offset: 640)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !703, file: !164, line: 3400, baseType: !1371, size: 832)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !164, line: 2430, size: 832, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1371, file: !164, line: 2431, baseType: !739, size: 192)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1371, file: !164, line: 2433, baseType: !701, size: 64, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1371, file: !164, line: 2434, baseType: !701, size: 64, offset: 256)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1371, file: !164, line: 2435, baseType: !701, size: 64, offset: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1371, file: !164, line: 2436, baseType: !701, size: 64, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1371, file: !164, line: 2437, baseType: !1354, size: 64, offset: 448)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1371, file: !164, line: 2438, baseType: !701, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1371, file: !164, line: 2440, baseType: !701, size: 64, offset: 576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1371, file: !164, line: 2441, baseType: !701, size: 64, offset: 640)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1371, file: !164, line: 2443, baseType: !1383, size: 128, offset: 704)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !164, line: 182, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !164, line: 182, size: 128, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1384, file: !164, line: 182, baseType: !1359, size: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !703, file: !164, line: 3401, baseType: !1388, size: 320)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !164, line: 3327, size: 320, elements: !1389)
!1389 = !{!1390, !1391, !1398}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1388, file: !164, line: 3329, baseType: !739, size: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1388, file: !164, line: 3330, baseType: !1392, size: 64, offset: 192)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !164, line: 3320, size: 192, elements: !1394)
!1394 = !{!1395, !1396, !1397}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1393, file: !164, line: 3322, baseType: !1392, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1393, file: !164, line: 3323, baseType: !1392, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1393, file: !164, line: 3324, baseType: !701, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1388, file: !164, line: 3331, baseType: !1392, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !703, file: !164, line: 3402, baseType: !1400, size: 256)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !164, line: 1540, size: 256, elements: !1401)
!1401 = !{!1402, !1403}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1400, file: !164, line: 1541, baseType: !739, size: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1400, file: !164, line: 1542, baseType: !1404, size: 64, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !164, line: 1538, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !164, line: 1538, size: 192, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1406, file: !164, line: 1538, baseType: !1409, size: 192)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !164, line: 1537, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !164, line: 1537, size: 192, elements: !1411)
!1411 = !{!1412, !1413, !1414}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1410, file: !164, line: 1537, baseType: !7, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1410, file: !164, line: 1537, baseType: !7, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1410, file: !164, line: 1537, baseType: !1415, size: 128, offset: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1416, size: 128, elements: !620)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !164, line: 1535, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !164, line: 1532, size: 128, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1417, file: !164, line: 1533, baseType: !701, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1417, file: !164, line: 1534, baseType: !701, size: 64, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !703, file: !164, line: 3403, baseType: !1422, size: 512)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !164, line: 1938, size: 512, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1433, !1434, !1435}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1422, file: !164, line: 1939, baseType: !739, size: 192)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1422, file: !164, line: 1940, baseType: !821, size: 32, offset: 192)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1422, file: !164, line: 1941, baseType: !163, size: 32, offset: 224)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1422, file: !164, line: 1946, baseType: !1428, size: 32, offset: 256)
!1428 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !164, line: 1942, size: 32, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1428, file: !164, line: 1943, baseType: !182, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1428, file: !164, line: 1944, baseType: !189, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1428, file: !164, line: 1945, baseType: !196, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1422, file: !164, line: 1950, baseType: !985, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1422, file: !164, line: 1951, baseType: !985, size: 64, offset: 384)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1422, file: !164, line: 1953, baseType: !1314, size: 64, offset: 448)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !703, file: !164, line: 3404, baseType: !1437, size: 1664)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !164, line: 3337, size: 1664, elements: !1438)
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1437, file: !164, line: 3338, baseType: !739, size: 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1437, file: !164, line: 3341, baseType: !1441, size: 1472, offset: 192)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1442, line: 410, size: 1472, elements: !1443)
!1442 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1441, file: !1442, line: 412, baseType: !566, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1441, file: !1442, line: 413, baseType: !566, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1441, file: !1442, line: 414, baseType: !566, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1441, file: !1442, line: 415, baseType: !566, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1441, file: !1442, line: 416, baseType: !566, size: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1441, file: !1442, line: 417, baseType: !566, size: 32, offset: 160)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1441, file: !1442, line: 418, baseType: !565, size: 8, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1441, file: !1442, line: 419, baseType: !565, size: 8, offset: 200)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1441, file: !1442, line: 420, baseType: !1453, size: 8, offset: 208)
!1453 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1441, file: !1442, line: 421, baseType: !1453, size: 8, offset: 216)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1441, file: !1442, line: 422, baseType: !1453, size: 8, offset: 224)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1441, file: !1442, line: 423, baseType: !1453, size: 8, offset: 232)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1441, file: !1442, line: 424, baseType: !1453, size: 8, offset: 240)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1441, file: !1442, line: 425, baseType: !1453, size: 8, offset: 248)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1441, file: !1442, line: 426, baseType: !1453, size: 8, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1441, file: !1442, line: 427, baseType: !1453, size: 8, offset: 264)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1441, file: !1442, line: 428, baseType: !1453, size: 8, offset: 272)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1441, file: !1442, line: 429, baseType: !1453, size: 8, offset: 280)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1441, file: !1442, line: 430, baseType: !1453, size: 8, offset: 288)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1441, file: !1442, line: 431, baseType: !1453, size: 8, offset: 296)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1441, file: !1442, line: 432, baseType: !1453, size: 8, offset: 304)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1441, file: !1442, line: 433, baseType: !1453, size: 8, offset: 312)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1441, file: !1442, line: 434, baseType: !1453, size: 8, offset: 320)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1441, file: !1442, line: 435, baseType: !1453, size: 8, offset: 328)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1441, file: !1442, line: 436, baseType: !1453, size: 8, offset: 336)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1441, file: !1442, line: 437, baseType: !1453, size: 8, offset: 344)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1441, file: !1442, line: 438, baseType: !1453, size: 8, offset: 352)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1441, file: !1442, line: 439, baseType: !1453, size: 8, offset: 360)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1441, file: !1442, line: 440, baseType: !1453, size: 8, offset: 368)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1441, file: !1442, line: 441, baseType: !1453, size: 8, offset: 376)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1441, file: !1442, line: 442, baseType: !1453, size: 8, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1441, file: !1442, line: 443, baseType: !1453, size: 8, offset: 392)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1441, file: !1442, line: 444, baseType: !1453, size: 8, offset: 400)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1441, file: !1442, line: 445, baseType: !1453, size: 8, offset: 408)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1441, file: !1442, line: 446, baseType: !1453, size: 8, offset: 416)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1441, file: !1442, line: 447, baseType: !1453, size: 8, offset: 424)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1441, file: !1442, line: 448, baseType: !1453, size: 8, offset: 432)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1441, file: !1442, line: 449, baseType: !1453, size: 8, offset: 440)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1441, file: !1442, line: 450, baseType: !1453, size: 8, offset: 448)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1441, file: !1442, line: 451, baseType: !1453, size: 8, offset: 456)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1441, file: !1442, line: 452, baseType: !1453, size: 8, offset: 464)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1441, file: !1442, line: 453, baseType: !1453, size: 8, offset: 472)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1441, file: !1442, line: 454, baseType: !1453, size: 8, offset: 480)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1441, file: !1442, line: 455, baseType: !1453, size: 8, offset: 488)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1441, file: !1442, line: 456, baseType: !1453, size: 8, offset: 496)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1441, file: !1442, line: 457, baseType: !1453, size: 8, offset: 504)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1441, file: !1442, line: 458, baseType: !1453, size: 8, offset: 512)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1441, file: !1442, line: 459, baseType: !1453, size: 8, offset: 520)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1441, file: !1442, line: 460, baseType: !1453, size: 8, offset: 528)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1441, file: !1442, line: 461, baseType: !1453, size: 8, offset: 536)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1441, file: !1442, line: 462, baseType: !1453, size: 8, offset: 544)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1441, file: !1442, line: 463, baseType: !1453, size: 8, offset: 552)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1441, file: !1442, line: 464, baseType: !1453, size: 8, offset: 560)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1441, file: !1442, line: 465, baseType: !1453, size: 8, offset: 568)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1441, file: !1442, line: 466, baseType: !1453, size: 8, offset: 576)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1441, file: !1442, line: 467, baseType: !1453, size: 8, offset: 584)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1441, file: !1442, line: 468, baseType: !1453, size: 8, offset: 592)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1441, file: !1442, line: 469, baseType: !1453, size: 8, offset: 600)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1441, file: !1442, line: 470, baseType: !1453, size: 8, offset: 608)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1441, file: !1442, line: 471, baseType: !1453, size: 8, offset: 616)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1441, file: !1442, line: 472, baseType: !1453, size: 8, offset: 624)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1441, file: !1442, line: 473, baseType: !1453, size: 8, offset: 632)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1441, file: !1442, line: 474, baseType: !1453, size: 8, offset: 640)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1441, file: !1442, line: 475, baseType: !1453, size: 8, offset: 648)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1441, file: !1442, line: 476, baseType: !1453, size: 8, offset: 656)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1441, file: !1442, line: 477, baseType: !1453, size: 8, offset: 664)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1441, file: !1442, line: 478, baseType: !1453, size: 8, offset: 672)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1441, file: !1442, line: 479, baseType: !1453, size: 8, offset: 680)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1441, file: !1442, line: 480, baseType: !1453, size: 8, offset: 688)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1441, file: !1442, line: 481, baseType: !1453, size: 8, offset: 696)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1441, file: !1442, line: 482, baseType: !1453, size: 8, offset: 704)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1441, file: !1442, line: 483, baseType: !1453, size: 8, offset: 712)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1441, file: !1442, line: 484, baseType: !1453, size: 8, offset: 720)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1441, file: !1442, line: 485, baseType: !1453, size: 8, offset: 728)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1441, file: !1442, line: 486, baseType: !1453, size: 8, offset: 736)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1441, file: !1442, line: 487, baseType: !1453, size: 8, offset: 744)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1441, file: !1442, line: 488, baseType: !1453, size: 8, offset: 752)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1441, file: !1442, line: 489, baseType: !1453, size: 8, offset: 760)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1441, file: !1442, line: 490, baseType: !1453, size: 8, offset: 768)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1441, file: !1442, line: 491, baseType: !1453, size: 8, offset: 776)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1441, file: !1442, line: 492, baseType: !1453, size: 8, offset: 784)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1441, file: !1442, line: 493, baseType: !1453, size: 8, offset: 792)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1441, file: !1442, line: 494, baseType: !1453, size: 8, offset: 800)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1441, file: !1442, line: 495, baseType: !1453, size: 8, offset: 808)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1441, file: !1442, line: 496, baseType: !1453, size: 8, offset: 816)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1441, file: !1442, line: 497, baseType: !1453, size: 8, offset: 824)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1441, file: !1442, line: 498, baseType: !1453, size: 8, offset: 832)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1441, file: !1442, line: 499, baseType: !1453, size: 8, offset: 840)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1441, file: !1442, line: 500, baseType: !1453, size: 8, offset: 848)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1441, file: !1442, line: 501, baseType: !1453, size: 8, offset: 856)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1441, file: !1442, line: 502, baseType: !1453, size: 8, offset: 864)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1441, file: !1442, line: 503, baseType: !1453, size: 8, offset: 872)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1441, file: !1442, line: 504, baseType: !1453, size: 8, offset: 880)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1441, file: !1442, line: 505, baseType: !1453, size: 8, offset: 888)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1441, file: !1442, line: 506, baseType: !1453, size: 8, offset: 896)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1441, file: !1442, line: 507, baseType: !1453, size: 8, offset: 904)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1441, file: !1442, line: 508, baseType: !1453, size: 8, offset: 912)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1441, file: !1442, line: 509, baseType: !1453, size: 8, offset: 920)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1441, file: !1442, line: 510, baseType: !1453, size: 8, offset: 928)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1441, file: !1442, line: 511, baseType: !1453, size: 8, offset: 936)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1441, file: !1442, line: 512, baseType: !1453, size: 8, offset: 944)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1441, file: !1442, line: 513, baseType: !1453, size: 8, offset: 952)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1441, file: !1442, line: 514, baseType: !1453, size: 8, offset: 960)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1441, file: !1442, line: 515, baseType: !1453, size: 8, offset: 968)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1441, file: !1442, line: 516, baseType: !1453, size: 8, offset: 976)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1441, file: !1442, line: 517, baseType: !1453, size: 8, offset: 984)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1441, file: !1442, line: 518, baseType: !1453, size: 8, offset: 992)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1441, file: !1442, line: 519, baseType: !1453, size: 8, offset: 1000)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1441, file: !1442, line: 520, baseType: !1453, size: 8, offset: 1008)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1441, file: !1442, line: 521, baseType: !1453, size: 8, offset: 1016)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1441, file: !1442, line: 522, baseType: !1453, size: 8, offset: 1024)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1441, file: !1442, line: 523, baseType: !1453, size: 8, offset: 1032)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1441, file: !1442, line: 524, baseType: !1453, size: 8, offset: 1040)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1441, file: !1442, line: 525, baseType: !1453, size: 8, offset: 1048)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1441, file: !1442, line: 526, baseType: !1453, size: 8, offset: 1056)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1441, file: !1442, line: 527, baseType: !1453, size: 8, offset: 1064)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1441, file: !1442, line: 528, baseType: !1453, size: 8, offset: 1072)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1441, file: !1442, line: 529, baseType: !1453, size: 8, offset: 1080)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1441, file: !1442, line: 530, baseType: !1453, size: 8, offset: 1088)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1441, file: !1442, line: 531, baseType: !1453, size: 8, offset: 1096)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1441, file: !1442, line: 532, baseType: !1453, size: 8, offset: 1104)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1441, file: !1442, line: 533, baseType: !1453, size: 8, offset: 1112)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1441, file: !1442, line: 534, baseType: !1453, size: 8, offset: 1120)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1441, file: !1442, line: 535, baseType: !1453, size: 8, offset: 1128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1441, file: !1442, line: 536, baseType: !1453, size: 8, offset: 1136)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1441, file: !1442, line: 537, baseType: !1453, size: 8, offset: 1144)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1441, file: !1442, line: 538, baseType: !1453, size: 8, offset: 1152)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1441, file: !1442, line: 539, baseType: !1453, size: 8, offset: 1160)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1441, file: !1442, line: 540, baseType: !1453, size: 8, offset: 1168)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1441, file: !1442, line: 541, baseType: !1453, size: 8, offset: 1176)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1441, file: !1442, line: 542, baseType: !1453, size: 8, offset: 1184)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1441, file: !1442, line: 543, baseType: !1453, size: 8, offset: 1192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1441, file: !1442, line: 544, baseType: !1453, size: 8, offset: 1200)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1441, file: !1442, line: 545, baseType: !1453, size: 8, offset: 1208)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1441, file: !1442, line: 546, baseType: !1453, size: 8, offset: 1216)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1441, file: !1442, line: 547, baseType: !1453, size: 8, offset: 1224)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1441, file: !1442, line: 548, baseType: !1453, size: 8, offset: 1232)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1441, file: !1442, line: 549, baseType: !1453, size: 8, offset: 1240)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1441, file: !1442, line: 550, baseType: !1453, size: 8, offset: 1248)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1441, file: !1442, line: 551, baseType: !1453, size: 8, offset: 1256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1441, file: !1442, line: 552, baseType: !1453, size: 8, offset: 1264)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1441, file: !1442, line: 553, baseType: !1453, size: 8, offset: 1272)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1441, file: !1442, line: 554, baseType: !1453, size: 8, offset: 1280)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1441, file: !1442, line: 555, baseType: !1453, size: 8, offset: 1288)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1441, file: !1442, line: 556, baseType: !1453, size: 8, offset: 1296)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1441, file: !1442, line: 557, baseType: !1453, size: 8, offset: 1304)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1441, file: !1442, line: 558, baseType: !1453, size: 8, offset: 1312)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1441, file: !1442, line: 559, baseType: !1453, size: 8, offset: 1320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1441, file: !1442, line: 560, baseType: !1453, size: 8, offset: 1328)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1441, file: !1442, line: 561, baseType: !1453, size: 8, offset: 1336)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1441, file: !1442, line: 562, baseType: !1453, size: 8, offset: 1344)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1441, file: !1442, line: 563, baseType: !1453, size: 8, offset: 1352)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1441, file: !1442, line: 564, baseType: !1453, size: 8, offset: 1360)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1441, file: !1442, line: 565, baseType: !1453, size: 8, offset: 1368)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1441, file: !1442, line: 566, baseType: !1453, size: 8, offset: 1376)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1441, file: !1442, line: 567, baseType: !1453, size: 8, offset: 1384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1441, file: !1442, line: 568, baseType: !1453, size: 8, offset: 1392)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1441, file: !1442, line: 569, baseType: !1453, size: 8, offset: 1400)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1441, file: !1442, line: 570, baseType: !1453, size: 8, offset: 1408)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1441, file: !1442, line: 571, baseType: !1453, size: 8, offset: 1416)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1441, file: !1442, line: 572, baseType: !1453, size: 8, offset: 1424)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1441, file: !1442, line: 573, baseType: !1453, size: 8, offset: 1432)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1441, file: !1442, line: 574, baseType: !1453, size: 8, offset: 1440)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !703, file: !164, line: 3405, baseType: !1609, size: 384)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !164, line: 3352, size: 384, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1609, file: !164, line: 3353, baseType: !739, size: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1609, file: !164, line: 3356, baseType: !1613, size: 192, offset: 192)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1442, line: 578, size: 192, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1613, file: !1442, line: 580, baseType: !566, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1613, file: !1442, line: 581, baseType: !566, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1613, file: !1442, line: 582, baseType: !566, size: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1613, file: !1442, line: 583, baseType: !566, size: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1613, file: !1442, line: 584, baseType: !565, size: 8, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1613, file: !1442, line: 585, baseType: !565, size: 8, offset: 136)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1613, file: !1442, line: 586, baseType: !565, size: 8, offset: 144)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1613, file: !1442, line: 587, baseType: !565, size: 8, offset: 152)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1613, file: !1442, line: 588, baseType: !565, size: 8, offset: 160)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1613, file: !1442, line: 589, baseType: !565, size: 8, offset: 168)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1613, file: !1442, line: 590, baseType: !565, size: 8, offset: 176)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !606, file: !421, line: 178, baseType: !959, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !606, file: !421, line: 179, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !421, line: 150, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !421, line: 142, size: 320, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635, !1636, !1637}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1630, file: !421, line: 144, baseType: !701, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1630, file: !421, line: 145, baseType: !585, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1630, file: !421, line: 146, baseType: !585, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1630, file: !421, line: 147, baseType: !1279, size: 32, offset: 192)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1630, file: !421, line: 148, baseType: !7, size: 32, offset: 224)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1630, file: !421, line: 149, baseType: !565, size: 8, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !606, file: !421, line: 180, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !421, line: 162, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !421, line: 159, size: 128, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1641, file: !421, line: 160, baseType: !701, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1641, file: !421, line: 161, baseType: !672, size: 64, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !606, file: !421, line: 181, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !421, line: 181, flags: DIFlagFwdDecl)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !601, file: !421, line: 317, baseType: !1649, size: 64)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !672, size: 64, elements: !620)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !601, file: !421, line: 318, baseType: !1651, size: 320)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !421, line: 188, size: 320, elements: !1652)
!1652 = !{!1653, !1655, !1678}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1651, file: !421, line: 190, baseType: !1654, size: 192)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 192, elements: !772)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1651, file: !421, line: 193, baseType: !1656, size: 64, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !421, line: 206, size: 320, elements: !1658)
!1658 = !{!1659, !1663, !1664, !1665, !1677}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1657, file: !421, line: 208, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !586, line: 62, baseType: !1662)
!1662 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !586, line: 61, flags: DIFlagFwdDecl)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1657, file: !421, line: 211, baseType: !7, size: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1657, file: !421, line: 214, baseType: !672, size: 64, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1657, file: !421, line: 224, baseType: !1666, size: 64, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !421, line: 202, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !421, line: 202, size: 128, elements: !1669)
!1669 = !{!1670}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1668, file: !421, line: 202, baseType: !1671, size: 128)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !421, line: 200, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !421, line: 200, size: 128, elements: !1673)
!1673 = !{!1674, !1675, !1676}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1672, file: !421, line: 200, baseType: !7, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1672, file: !421, line: 200, baseType: !7, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1672, file: !421, line: 200, baseType: !619, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1657, file: !421, line: 234, baseType: !1666, size: 64, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1651, file: !421, line: 197, baseType: !672, size: 64, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !601, file: !421, line: 319, baseType: !761, size: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !601, file: !421, line: 320, baseType: !780, size: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_allocno", scope: !578, file: !576, line: 255, baseType: !575, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !578, file: !576, line: 260, baseType: !1683, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_loop_tree_node_t", file: !576, line: 73, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_loop_tree_node", file: !576, line: 83, size: 1728, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1702, !1704, !1705, !1706}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1685, file: !576, line: 86, baseType: !958, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !1685, file: !576, line: 87, baseType: !1000, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "subloop_next", scope: !1685, file: !576, line: 90, baseType: !1683, size: 64, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1685, file: !576, line: 90, baseType: !1683, size: 64, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "subloops", scope: !1685, file: !576, line: 93, baseType: !1683, size: 64, offset: 256)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1685, file: !576, line: 93, baseType: !1683, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1685, file: !576, line: 95, baseType: !1683, size: 64, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1685, file: !576, line: 98, baseType: !566, size: 32, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "to_remove_p", scope: !1685, file: !576, line: 105, baseType: !565, size: 8, offset: 480)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "regno_allocno_map", scope: !1685, file: !576, line: 114, baseType: !574, size: 64, offset: 512)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "entered_from_non_parent_p", scope: !1685, file: !576, line: 119, baseType: !565, size: 8, offset: 576)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !1685, file: !576, line: 123, baseType: !1699, size: 864, offset: 608)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 864, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 27)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "all_allocnos", scope: !1685, file: !576, line: 127, baseType: !1703, size: 64, offset: 1472)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !586, line: 47, baseType: !639)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "border_allocnos", scope: !1685, file: !576, line: 130, baseType: !1703, size: 64, offset: 1536)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "modified_regnos", scope: !1685, file: !576, line: 134, baseType: !1703, size: 64, offset: 1600)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "local_copies", scope: !1685, file: !576, line: 137, baseType: !1703, size: 64, offset: 1664)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nrefs", scope: !578, file: !576, line: 266, baseType: !566, size: 32, offset: 320)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !578, file: !576, line: 268, baseType: !566, size: 32, offset: 352)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class", scope: !578, file: !576, line: 271, baseType: !390, size: 32, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class_cost", scope: !578, file: !576, line: 274, baseType: !566, size: 32, offset: 416)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "updated_cover_class_cost", scope: !578, file: !576, line: 274, baseType: !566, size: 32, offset: 448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "memory_cost", scope: !578, file: !576, line: 282, baseType: !566, size: 32, offset: 480)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "updated_memory_cost", scope: !578, file: !576, line: 282, baseType: !566, size: 32, offset: 512)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "excess_pressure_points_num", scope: !578, file: !576, line: 288, baseType: !566, size: 32, offset: 544)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "allocno_copies", scope: !578, file: !576, line: 292, baseType: !1716, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_copy_t", file: !576, line: 64, baseType: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_copy", file: !576, line: 506, size: 640, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1718, file: !576, line: 509, baseType: !566, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1718, file: !576, line: 512, baseType: !575, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !1718, file: !576, line: 512, baseType: !575, size: 64, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1718, file: !576, line: 514, baseType: !566, size: 32, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "constraint_p", scope: !1718, file: !576, line: 515, baseType: !565, size: 8, offset: 224)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1718, file: !576, line: 521, baseType: !585, size: 64, offset: 256)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "prev_first_allocno_copy", scope: !1718, file: !576, line: 524, baseType: !1716, size: 64, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "next_first_allocno_copy", scope: !1718, file: !576, line: 524, baseType: !1716, size: 64, offset: 384)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "prev_second_allocno_copy", scope: !1718, file: !576, line: 527, baseType: !1716, size: 64, offset: 448)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "next_second_allocno_copy", scope: !1718, file: !576, line: 527, baseType: !1716, size: 64, offset: 512)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !1718, file: !576, line: 529, baseType: !1683, size: 64, offset: 576)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !578, file: !576, line: 295, baseType: !575, size: 64, offset: 640)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "cap_member", scope: !578, file: !576, line: 298, baseType: !575, size: 64, offset: 704)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "first_coalesced_allocno", scope: !578, file: !576, line: 302, baseType: !575, size: 64, offset: 768)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next_coalesced_allocno", scope: !578, file: !576, line: 303, baseType: !575, size: 64, offset: 832)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "live_ranges", scope: !578, file: !576, line: 308, baseType: !1736, size: 64, offset: 896)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocno_live_range_t", file: !576, line: 62, baseType: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_live_range", file: !576, line: 199, size: 320, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "allocno", scope: !1738, file: !576, line: 202, baseType: !575, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1738, file: !576, line: 204, baseType: !566, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !1738, file: !576, line: 204, baseType: !566, size: 32, offset: 96)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1738, file: !576, line: 207, baseType: !1736, size: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "start_next", scope: !1738, file: !576, line: 209, baseType: !1736, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "finish_next", scope: !1738, file: !576, line: 209, baseType: !1736, size: 64, offset: 256)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !578, file: !576, line: 314, baseType: !566, size: 32, offset: 960)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !578, file: !576, line: 314, baseType: !566, size: 32, offset: 992)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array", scope: !578, file: !576, line: 319, baseType: !570, size: 64, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_id", scope: !578, file: !576, line: 322, baseType: !566, size: 32, offset: 1088)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array_size", scope: !578, file: !576, line: 324, baseType: !7, size: 32, offset: 1120)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_regs", scope: !578, file: !576, line: 329, baseType: !1752, size: 64, offset: 1152)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1753, line: 42, baseType: !655)
!1753 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "total_conflict_hard_regs", scope: !578, file: !576, line: 329, baseType: !1752, size: 64, offset: 1216)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocnos_num", scope: !578, file: !576, line: 332, baseType: !566, size: 32, offset: 1280)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "call_freq", scope: !578, file: !576, line: 335, baseType: !566, size: 32, offset: 1312)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "calls_crossed_num", scope: !578, file: !576, line: 337, baseType: !566, size: 32, offset: 1344)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest_p", scope: !578, file: !576, line: 342, baseType: !7, size: 1, offset: 1376, flags: DIFlagBitField, extraData: i64 1376)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "somewhere_renamed_p", scope: !578, file: !576, line: 346, baseType: !7, size: 1, offset: 1377, flags: DIFlagBitField, extraData: i64 1376)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "child_renamed_p", scope: !578, file: !576, line: 349, baseType: !7, size: 1, offset: 1378, flags: DIFlagBitField, extraData: i64 1376)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "dont_reassign_p", scope: !578, file: !576, line: 354, baseType: !7, size: 1, offset: 1379, flags: DIFlagBitField, extraData: i64 1376)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "no_stack_reg_p", scope: !578, file: !576, line: 359, baseType: !7, size: 1, offset: 1380, flags: DIFlagBitField, extraData: i64 1376)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "total_no_stack_reg_p", scope: !578, file: !576, line: 359, baseType: !7, size: 1, offset: 1381, flags: DIFlagBitField, extraData: i64 1376)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "bad_spill_p", scope: !578, file: !576, line: 364, baseType: !7, size: 1, offset: 1382, flags: DIFlagBitField, extraData: i64 1376)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "in_graph_p", scope: !578, file: !576, line: 367, baseType: !7, size: 1, offset: 1383, flags: DIFlagBitField, extraData: i64 1376)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "assigned_p", scope: !578, file: !576, line: 370, baseType: !7, size: 1, offset: 1384, flags: DIFlagBitField, extraData: i64 1376)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_spilled_p", scope: !578, file: !576, line: 373, baseType: !7, size: 1, offset: 1385, flags: DIFlagBitField, extraData: i64 1376)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "splay_removed_p", scope: !578, file: !576, line: 376, baseType: !7, size: 1, offset: 1386, flags: DIFlagBitField, extraData: i64 1376)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_vec_p", scope: !578, file: !576, line: 381, baseType: !7, size: 1, offset: 1387, flags: DIFlagBitField, extraData: i64 1376)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest", scope: !578, file: !576, line: 385, baseType: !575, size: 64, offset: 1408)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "hard_reg_costs", scope: !578, file: !576, line: 400, baseType: !573, size: 64, offset: 1472)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "updated_hard_reg_costs", scope: !578, file: !576, line: 400, baseType: !573, size: 64, offset: 1536)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_reg_costs", scope: !578, file: !576, line: 407, baseType: !573, size: 64, offset: 1600)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "updated_conflict_hard_reg_costs", scope: !578, file: !576, line: 407, baseType: !573, size: 64, offset: 1664)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "left_conflicts_size", scope: !578, file: !576, line: 411, baseType: !566, size: 32, offset: 1728)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "available_regs_num", scope: !578, file: !576, line: 414, baseType: !566, size: 32, offset: 1760)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "next_bucket_allocno", scope: !578, file: !576, line: 417, baseType: !575, size: 64, offset: 1792)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bucket_allocno", scope: !578, file: !576, line: 418, baseType: !575, size: 64, offset: 1856)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !578, file: !576, line: 420, baseType: !566, size: 32, offset: 1920)
!1780 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !1783, line: 826, size: 256, elements: !1784)
!1783 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1784 = !{!1785, !1786, !1787, !1788}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1782, file: !1783, line: 829, baseType: !1703, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1782, file: !1783, line: 831, baseType: !1703, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1782, file: !1783, line: 834, baseType: !1703, size: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1782, file: !1783, line: 835, baseType: !1703, size: 64, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_allocno_t_heap", file: !576, line: 68, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_allocno_t_heap", file: !576, line: 68, size: 128, elements: !1795)
!1795 = !{!1796}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1794, file: !576, line: 68, baseType: !1797, size: 128)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ira_allocno_t_base", file: !576, line: 67, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ira_allocno_t_base", file: !576, line: 67, size: 128, elements: !1799)
!1799 = !{!1800, !1801, !1802}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1798, file: !576, line: 67, baseType: !7, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1798, file: !576, line: 67, baseType: !7, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1798, file: !576, line: 67, baseType: !1803, size: 64, offset: 64)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !575, size: 64, elements: !620)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "update_cost_queue_elem", file: !3, line: 139, size: 128, elements: !1812)
!1812 = !{!1813, !1814, !1815}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1811, file: !3, line: 142, baseType: !566, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "divisor", scope: !1811, file: !3, line: 146, baseType: !566, size: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1811, file: !3, line: 149, baseType: !575, size: 64, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_key", file: !1817, line: 62, baseType: !1818)
!1817 = !DIFile(filename: "./include/splay-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "libi_uhostptr_t", file: !1817, line: 41, baseType: !655)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_value", file: !1817, line: 63, baseType: !1818)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1821 = !{!1822, !1824, !1826, !1828, !0, !1830, !1832, !1834, !1836, !1839, !1884, !1886, !1888, !1890, !1892, !1894, !1897, !1899, !1901, !1903, !1905, !1928, !1930, !1932, !1934}
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "coloring_allocno_bitmap", scope: !2, file: !3, line: 48, type: !1703, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "consideration_allocno_bitmap", scope: !2, file: !3, line: 54, type: !1703, isLocal: true, isDefinition: true)
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "allocno_coalesced_p", scope: !2, file: !3, line: 59, type: !565, isLocal: true, isDefinition: true)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "processed_coalesced_allocno_bitmap", scope: !2, file: !3, line: 63, type: !1703, isLocal: true, isDefinition: true)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "allocno_priorities", scope: !2, file: !3, line: 1710, type: !573, isLocal: true, isDefinition: true)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "regno_coalesced_allocno_cost", scope: !2, file: !3, line: 2382, type: !573, isLocal: true, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "regno_coalesced_allocno_num", scope: !2, file: !3, line: 2383, type: !573, isLocal: true, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "regno_max_ref_width", scope: !2, file: !3, line: 2406, type: !1838, isLocal: true, isDefinition: true)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "costs", scope: !1841, file: !3, line: 451, type: !1881, isLocal: true, isDefinition: true)
!1841 = distinct !DISubprogram(name: "assign_hard_reg", scope: !3, file: !3, line: 440, type: !1842, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1844)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!565, !575, !565}
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1879, !1880}
!1845 = !DILocalVariable(name: "allocno", arg: 1, scope: !1841, file: !3, line: 440, type: !575)
!1846 = !DILocalVariable(name: "retry_p", arg: 2, scope: !1841, file: !3, line: 440, type: !565)
!1847 = !DILocalVariable(name: "conflicting_regs", scope: !1841, file: !3, line: 442, type: !1752)
!1848 = !DILocalVariable(name: "i", scope: !1841, file: !3, line: 443, type: !566)
!1849 = !DILocalVariable(name: "j", scope: !1841, file: !3, line: 443, type: !566)
!1850 = !DILocalVariable(name: "k", scope: !1841, file: !3, line: 443, type: !566)
!1851 = !DILocalVariable(name: "hard_regno", scope: !1841, file: !3, line: 443, type: !566)
!1852 = !DILocalVariable(name: "best_hard_regno", scope: !1841, file: !3, line: 443, type: !566)
!1853 = !DILocalVariable(name: "class_size", scope: !1841, file: !3, line: 443, type: !566)
!1854 = !DILocalVariable(name: "cost", scope: !1841, file: !3, line: 444, type: !566)
!1855 = !DILocalVariable(name: "mem_cost", scope: !1841, file: !3, line: 444, type: !566)
!1856 = !DILocalVariable(name: "min_cost", scope: !1841, file: !3, line: 444, type: !566)
!1857 = !DILocalVariable(name: "full_cost", scope: !1841, file: !3, line: 444, type: !566)
!1858 = !DILocalVariable(name: "min_full_cost", scope: !1841, file: !3, line: 444, type: !566)
!1859 = !DILocalVariable(name: "add_cost", scope: !1841, file: !3, line: 444, type: !566)
!1860 = !DILocalVariable(name: "a_costs", scope: !1841, file: !3, line: 445, type: !573)
!1861 = !DILocalVariable(name: "conflict_costs", scope: !1841, file: !3, line: 446, type: !573)
!1862 = !DILocalVariable(name: "cover_class", scope: !1841, file: !3, line: 447, type: !390)
!1863 = !DILocalVariable(name: "rclass", scope: !1841, file: !3, line: 447, type: !390)
!1864 = !DILocalVariable(name: "conflict_cover_class", scope: !1841, file: !3, line: 447, type: !390)
!1865 = !DILocalVariable(name: "mode", scope: !1841, file: !3, line: 448, type: !5)
!1866 = !DILocalVariable(name: "a", scope: !1841, file: !3, line: 449, type: !575)
!1867 = !DILocalVariable(name: "conflict_allocno", scope: !1841, file: !3, line: 449, type: !575)
!1868 = !DILocalVariable(name: "aci", scope: !1841, file: !3, line: 450, type: !1869)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_conflict_iterator", file: !576, line: 1040, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !576, line: 1012, size: 320, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "allocno_conflict_vec_p", scope: !1870, file: !576, line: 1015, baseType: !565, size: 8)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1870, file: !576, line: 1018, baseType: !570, size: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "word_num", scope: !1870, file: !576, line: 1022, baseType: !7, size: 32, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1870, file: !576, line: 1026, baseType: !7, size: 32, offset: 160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !1870, file: !576, line: 1030, baseType: !7, size: 32, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "base_conflict_id", scope: !1870, file: !576, line: 1035, baseType: !566, size: 32, offset: 224)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1870, file: !576, line: 1039, baseType: !655, size: 64, offset: 256)
!1879 = !DILocalVariable(name: "no_stack_reg_p", scope: !1841, file: !3, line: 453, type: !565)
!1880 = !DILabel(scope: !1841, name: "fail", file: !3, line: 617)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 1696, elements: !1882)
!1882 = !{!1883}
!1883 = !DISubrange(count: 53)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "full_costs", scope: !1841, file: !3, line: 451, type: !1881, isLocal: true, isDefinition: true)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "update_cost_check", scope: !2, file: !3, line: 165, type: !566, isLocal: true, isDefinition: true)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "update_cost_queue", scope: !2, file: !3, line: 154, type: !575, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "update_cost_queue_elems", scope: !2, file: !3, line: 162, type: !1810, isLocal: true, isDefinition: true)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "update_cost_queue_tail", scope: !2, file: !3, line: 158, type: !1810, isLocal: true, isDefinition: true)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "allocated_hardreg_p", scope: !2, file: !3, line: 135, type: !1896, isLocal: true, isDefinition: true)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 424, elements: !1882)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "allocno_stack_vec", scope: !2, file: !3, line: 69, type: !1792, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "slot_coalesced_allocnos_live_ranges", scope: !2, file: !3, line: 2522, type: !1809, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "removed_splay_allocno_vec", scope: !2, file: !3, line: 83, type: !1792, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "allocnos_for_spilling", scope: !2, file: !3, line: 72, type: !574, isLocal: true, isDefinition: true)
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(name: "splay_tree_node_pool", scope: !2, file: !3, line: 75, type: !1907, isLocal: true, isDefinition: true)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !1908, line: 58, baseType: !1909)
!1908 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !1908, line: 32, size: 704, elements: !1911)
!1911 = !{!1912, !1913, !1914, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1910, file: !1908, line: 34, baseType: !571, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !1910, file: !1908, line: 38, baseType: !1150, size: 64, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !1910, file: !1908, line: 41, baseType: !1915, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !1908, line: 30, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !1908, line: 26, size: 64, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1917, file: !1908, line: 28, baseType: !1916, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !1910, file: !1908, line: 45, baseType: !568, size: 64, offset: 192)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !1910, file: !1908, line: 49, baseType: !1150, size: 64, offset: 256)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !1910, file: !1908, line: 51, baseType: !1150, size: 64, offset: 320)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !1910, file: !1908, line: 52, baseType: !1150, size: 64, offset: 384)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !1910, file: !1908, line: 53, baseType: !1150, size: 64, offset: 448)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !1910, file: !1908, line: 54, baseType: !1915, size: 64, offset: 512)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1910, file: !1908, line: 55, baseType: !1150, size: 64, offset: 576)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !1910, file: !1908, line: 56, baseType: !1150, size: 64, offset: 640)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "colorable_allocno_bucket", scope: !2, file: !3, line: 675, type: !575, isLocal: true, isDefinition: true)
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "uncolorable_allocno_bucket", scope: !2, file: !3, line: 679, type: !575, isLocal: true, isDefinition: true)
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "uncolorable_allocnos_num", scope: !2, file: !3, line: 683, type: !1699, isLocal: true, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "uncolorable_allocnos_splay_tree", scope: !2, file: !3, line: 855, type: !1936, isLocal: true, isDefinition: true)
!1936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1937, size: 1728, elements: !1700)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree", file: !1817, line: 128, baseType: !1938)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_s", file: !1817, line: 109, size: 448, elements: !1940)
!1940 = !{!1941, !1950, !1955, !1960, !1965, !1970, !1972}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1939, file: !1817, line: 111, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_node", file: !1817, line: 66, baseType: !1943)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "splay_tree_node_s", file: !1817, line: 96, size: 256, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1944, file: !1817, line: 98, baseType: !1816, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1944, file: !1817, line: 101, baseType: !1819, size: 64, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1944, file: !1817, line: 104, baseType: !1942, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1944, file: !1817, line: 105, baseType: !1942, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1939, file: !1817, line: 114, baseType: !1951, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_compare_fn", file: !1817, line: 70, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!566, !1816, !1816}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "delete_key", scope: !1939, file: !1817, line: 117, baseType: !1956, size: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_key_fn", file: !1817, line: 74, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !1816}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "delete_value", scope: !1939, file: !1817, line: 120, baseType: !1961, size: 64, offset: 192)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_delete_value_fn", file: !1817, line: 78, baseType: !1962)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null, !1819}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "allocate", scope: !1939, file: !1817, line: 123, baseType: !1966, size: 64, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_allocate_fn", file: !1817, line: 87, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!570, !566, !570}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "deallocate", scope: !1939, file: !1817, line: 124, baseType: !1971, size: 64, offset: 320)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_tree_deallocate_fn", file: !1817, line: 93, baseType: !1171)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_data", scope: !1939, file: !1817, line: 125, baseType: !570, size: 64, offset: 384)
!1973 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1974 = !{i32 2, !"Dwarf Version", i32 4}
!1975 = !{i32 2, !"Debug Info Version", i32 3}
!1976 = !{i32 1, !"wchar_size", i32 4}
!1977 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1978 = distinct !DISubprogram(name: "vprintf", scope: !1979, file: !1979, line: 39, type: !1980, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1990)
!1979 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!566, !1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !571)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !1985)
!1985 = !{!1986, !1987, !1988, !1989}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1984, file: !3, baseType: !7, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1984, file: !3, baseType: !7, size: 32, offset: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1984, file: !3, baseType: !570, size: 64, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1984, file: !3, baseType: !570, size: 64, offset: 128)
!1990 = !{!1991, !1992}
!1991 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1978, file: !1979, line: 39, type: !1982)
!1992 = !DILocalVariable(name: "__arg", arg: 2, scope: !1978, file: !1979, line: 39, type: !1983)
!1993 = !DILocation(line: 0, scope: !1978)
!1994 = !DILocation(line: 41, column: 20, scope: !1978)
!1995 = !DILocation(line: 41, column: 10, scope: !1978)
!1996 = !DILocation(line: 41, column: 3, scope: !1978)
!1997 = distinct !DISubprogram(name: "getchar", scope: !1979, file: !1979, line: 47, type: !1998, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!566}
!2000 = !{}
!2001 = !DILocation(line: 49, column: 16, scope: !1997)
!2002 = !DILocation(line: 49, column: 10, scope: !1997)
!2003 = !DILocation(line: 49, column: 3, scope: !1997)
!2004 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1979, file: !1979, line: 56, type: !2005, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2057)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!566, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2009, line: 7, baseType: !2010)
!2009 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2011, line: 49, size: 1728, elements: !2012)
!2011 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2012 = !{!2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2028, !2030, !2031, !2032, !2035, !2036, !2037, !2038, !2041, !2043, !2046, !2049, !2050, !2051, !2052, !2053}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2010, file: !2011, line: 51, baseType: !566, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2010, file: !2011, line: 54, baseType: !568, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2010, file: !2011, line: 55, baseType: !568, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2010, file: !2011, line: 56, baseType: !568, size: 64, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2010, file: !2011, line: 57, baseType: !568, size: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2010, file: !2011, line: 58, baseType: !568, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2010, file: !2011, line: 59, baseType: !568, size: 64, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2010, file: !2011, line: 60, baseType: !568, size: 64, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2010, file: !2011, line: 61, baseType: !568, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2010, file: !2011, line: 64, baseType: !568, size: 64, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2010, file: !2011, line: 65, baseType: !568, size: 64, offset: 640)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2010, file: !2011, line: 66, baseType: !568, size: 64, offset: 704)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2010, file: !2011, line: 68, baseType: !2026, size: 64, offset: 768)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2011, line: 36, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2010, file: !2011, line: 70, baseType: !2029, size: 64, offset: 832)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2010, file: !2011, line: 72, baseType: !566, size: 32, offset: 896)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2010, file: !2011, line: 73, baseType: !566, size: 32, offset: 928)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2010, file: !2011, line: 74, baseType: !2033, size: 64, offset: 960)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2034, line: 152, baseType: !672)
!2034 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2010, file: !2011, line: 77, baseType: !1780, size: 16, offset: 1024)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2010, file: !2011, line: 78, baseType: !1453, size: 8, offset: 1040)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2010, file: !2011, line: 79, baseType: !796, size: 8, offset: 1048)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2010, file: !2011, line: 81, baseType: !2039, size: 64, offset: 1088)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2011, line: 43, baseType: null)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2010, file: !2011, line: 89, baseType: !2042, size: 64, offset: 1152)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2034, line: 153, baseType: !672)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2010, file: !2011, line: 91, baseType: !2044, size: 64, offset: 1216)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2011, line: 37, flags: DIFlagFwdDecl)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2010, file: !2011, line: 92, baseType: !2047, size: 64, offset: 1280)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2011, line: 38, flags: DIFlagFwdDecl)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2010, file: !2011, line: 93, baseType: !2029, size: 64, offset: 1344)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2010, file: !2011, line: 94, baseType: !570, size: 64, offset: 1408)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2010, file: !2011, line: 95, baseType: !1150, size: 64, offset: 1472)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2010, file: !2011, line: 96, baseType: !566, size: 32, offset: 1536)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2010, file: !2011, line: 98, baseType: !2054, size: 160, offset: 1568)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 160, elements: !2055)
!2055 = !{!2056}
!2056 = !DISubrange(count: 20)
!2057 = !{!2058}
!2058 = !DILocalVariable(name: "__fp", arg: 1, scope: !2004, file: !1979, line: 56, type: !2007)
!2059 = !DILocation(line: 0, scope: !2004)
!2060 = !DILocation(line: 58, column: 10, scope: !2004)
!2061 = !DILocation(line: 58, column: 3, scope: !2004)
!2062 = distinct !DISubprogram(name: "getc_unlocked", scope: !1979, file: !1979, line: 66, type: !2005, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2063)
!2063 = !{!2064}
!2064 = !DILocalVariable(name: "__fp", arg: 1, scope: !2062, file: !1979, line: 66, type: !2007)
!2065 = !DILocation(line: 0, scope: !2062)
!2066 = !DILocation(line: 68, column: 10, scope: !2062)
!2067 = !DILocation(line: 68, column: 3, scope: !2062)
!2068 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1979, file: !1979, line: 73, type: !1998, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!2069 = !DILocation(line: 75, column: 10, scope: !2068)
!2070 = !DILocation(line: 75, column: 3, scope: !2068)
!2071 = distinct !DISubprogram(name: "putchar", scope: !1979, file: !1979, line: 82, type: !2072, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2074)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!566, !566}
!2074 = !{!2075}
!2075 = !DILocalVariable(name: "__c", arg: 1, scope: !2071, file: !1979, line: 82, type: !566)
!2076 = !DILocation(line: 0, scope: !2071)
!2077 = !DILocation(line: 84, column: 21, scope: !2071)
!2078 = !DILocation(line: 84, column: 10, scope: !2071)
!2079 = !DILocation(line: 84, column: 3, scope: !2071)
!2080 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1979, file: !1979, line: 91, type: !2081, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2083)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!566, !566, !2007}
!2083 = !{!2084, !2085}
!2084 = !DILocalVariable(name: "__c", arg: 1, scope: !2080, file: !1979, line: 91, type: !566)
!2085 = !DILocalVariable(name: "__stream", arg: 2, scope: !2080, file: !1979, line: 91, type: !2007)
!2086 = !DILocation(line: 0, scope: !2080)
!2087 = !DILocation(line: 93, column: 10, scope: !2080)
!2088 = !DILocation(line: 93, column: 3, scope: !2080)
!2089 = distinct !DISubprogram(name: "putc_unlocked", scope: !1979, file: !1979, line: 101, type: !2081, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2090)
!2090 = !{!2091, !2092}
!2091 = !DILocalVariable(name: "__c", arg: 1, scope: !2089, file: !1979, line: 101, type: !566)
!2092 = !DILocalVariable(name: "__stream", arg: 2, scope: !2089, file: !1979, line: 101, type: !2007)
!2093 = !DILocation(line: 0, scope: !2089)
!2094 = !DILocation(line: 103, column: 10, scope: !2089)
!2095 = !DILocation(line: 103, column: 3, scope: !2089)
!2096 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1979, file: !1979, line: 108, type: !2072, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2097)
!2097 = !{!2098}
!2098 = !DILocalVariable(name: "__c", arg: 1, scope: !2096, file: !1979, line: 108, type: !566)
!2099 = !DILocation(line: 0, scope: !2096)
!2100 = !DILocation(line: 110, column: 10, scope: !2096)
!2101 = !DILocation(line: 110, column: 3, scope: !2096)
!2102 = distinct !DISubprogram(name: "getline", scope: !1979, file: !1979, line: 118, type: !2103, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2107)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{!2105, !567, !2106, !2007}
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2034, line: 193, baseType: !672)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!2107 = !{!2108, !2109, !2110}
!2108 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2102, file: !1979, line: 118, type: !567)
!2109 = !DILocalVariable(name: "__n", arg: 2, scope: !2102, file: !1979, line: 118, type: !2106)
!2110 = !DILocalVariable(name: "__stream", arg: 3, scope: !2102, file: !1979, line: 118, type: !2007)
!2111 = !DILocation(line: 0, scope: !2102)
!2112 = !DILocation(line: 120, column: 10, scope: !2102)
!2113 = !DILocation(line: 120, column: 3, scope: !2102)
!2114 = distinct !DISubprogram(name: "feof_unlocked", scope: !1979, file: !1979, line: 128, type: !2005, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2115)
!2115 = !{!2116}
!2116 = !DILocalVariable(name: "__stream", arg: 1, scope: !2114, file: !1979, line: 128, type: !2007)
!2117 = !DILocation(line: 0, scope: !2114)
!2118 = !DILocation(line: 130, column: 10, scope: !2114)
!2119 = !DILocation(line: 130, column: 3, scope: !2114)
!2120 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1979, file: !1979, line: 135, type: !2005, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2121)
!2121 = !{!2122}
!2122 = !DILocalVariable(name: "__stream", arg: 1, scope: !2120, file: !1979, line: 135, type: !2007)
!2123 = !DILocation(line: 0, scope: !2120)
!2124 = !DILocation(line: 137, column: 10, scope: !2120)
!2125 = !DILocation(line: 137, column: 3, scope: !2120)
!2126 = distinct !DISubprogram(name: "tolower", scope: !2127, file: !2127, line: 207, type: !2072, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2128)
!2127 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2128 = !{!2129}
!2129 = !DILocalVariable(name: "__c", arg: 1, scope: !2126, file: !2127, line: 207, type: !566)
!2130 = !DILocation(line: 0, scope: !2126)
!2131 = !DILocation(line: 209, column: 22, scope: !2126)
!2132 = !DILocation(line: 209, column: 39, scope: !2126)
!2133 = !DILocation(line: 209, column: 38, scope: !2126)
!2134 = !DILocation(line: 209, column: 37, scope: !2126)
!2135 = !DILocation(line: 209, column: 10, scope: !2126)
!2136 = !DILocation(line: 209, column: 3, scope: !2126)
!2137 = distinct !DISubprogram(name: "toupper", scope: !2127, file: !2127, line: 213, type: !2072, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2138)
!2138 = !{!2139}
!2139 = !DILocalVariable(name: "__c", arg: 1, scope: !2137, file: !2127, line: 213, type: !566)
!2140 = !DILocation(line: 0, scope: !2137)
!2141 = !DILocation(line: 215, column: 22, scope: !2137)
!2142 = !DILocation(line: 215, column: 39, scope: !2137)
!2143 = !DILocation(line: 215, column: 38, scope: !2137)
!2144 = !DILocation(line: 215, column: 37, scope: !2137)
!2145 = !DILocation(line: 215, column: 10, scope: !2137)
!2146 = !DILocation(line: 215, column: 3, scope: !2137)
!2147 = distinct !DISubprogram(name: "atoi", scope: !2148, file: !2148, line: 361, type: !2149, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2151)
!2148 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!566, !571}
!2151 = !{!2152}
!2152 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2147, file: !2148, line: 361, type: !571)
!2153 = !DILocation(line: 0, scope: !2147)
!2154 = !DILocation(line: 363, column: 16, scope: !2147)
!2155 = !DILocation(line: 363, column: 10, scope: !2147)
!2156 = !DILocation(line: 363, column: 3, scope: !2147)
!2157 = distinct !DISubprogram(name: "atol", scope: !2148, file: !2148, line: 366, type: !2158, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2160)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!672, !571}
!2160 = !{!2161}
!2161 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2157, file: !2148, line: 366, type: !571)
!2162 = !DILocation(line: 0, scope: !2157)
!2163 = !DILocation(line: 368, column: 10, scope: !2157)
!2164 = !DILocation(line: 368, column: 3, scope: !2157)
!2165 = distinct !DISubprogram(name: "atoll", scope: !2148, file: !2148, line: 373, type: !2166, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2169)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!2168, !571}
!2168 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2169 = !{!2170}
!2170 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2165, file: !2148, line: 373, type: !571)
!2171 = !DILocation(line: 0, scope: !2165)
!2172 = !DILocation(line: 375, column: 10, scope: !2165)
!2173 = !DILocation(line: 375, column: 3, scope: !2165)
!2174 = distinct !DISubprogram(name: "bsearch", scope: !2175, file: !2175, line: 20, type: !2176, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2179)
!2175 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!570, !1135, !1135, !1150, !1150, !2178}
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2148, line: 808, baseType: !1139)
!2179 = !{!2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2180 = !DILocalVariable(name: "__key", arg: 1, scope: !2174, file: !2175, line: 20, type: !1135)
!2181 = !DILocalVariable(name: "__base", arg: 2, scope: !2174, file: !2175, line: 20, type: !1135)
!2182 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2174, file: !2175, line: 20, type: !1150)
!2183 = !DILocalVariable(name: "__size", arg: 4, scope: !2174, file: !2175, line: 20, type: !1150)
!2184 = !DILocalVariable(name: "__compar", arg: 5, scope: !2174, file: !2175, line: 21, type: !2178)
!2185 = !DILocalVariable(name: "__l", scope: !2174, file: !2175, line: 23, type: !1150)
!2186 = !DILocalVariable(name: "__u", scope: !2174, file: !2175, line: 23, type: !1150)
!2187 = !DILocalVariable(name: "__idx", scope: !2174, file: !2175, line: 23, type: !1150)
!2188 = !DILocalVariable(name: "__p", scope: !2174, file: !2175, line: 24, type: !1135)
!2189 = !DILocalVariable(name: "__comparison", scope: !2174, file: !2175, line: 25, type: !566)
!2190 = !DILocation(line: 0, scope: !2174)
!2191 = !DILocation(line: 29, column: 3, scope: !2174)
!2192 = !DILocation(line: 27, column: 7, scope: !2174)
!2193 = !DILocation(line: 29, column: 14, scope: !2174)
!2194 = !DILocation(line: 31, column: 20, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2174, file: !2175, line: 30, column: 5)
!2196 = !DILocation(line: 31, column: 27, scope: !2195)
!2197 = !DILocation(line: 32, column: 56, scope: !2195)
!2198 = !DILocation(line: 32, column: 47, scope: !2195)
!2199 = !DILocation(line: 33, column: 22, scope: !2195)
!2200 = !DILocation(line: 34, column: 24, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2195, file: !2175, line: 34, column: 11)
!2202 = !DILocation(line: 34, column: 11, scope: !2195)
!2203 = !DILocation(line: 36, column: 29, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2201, file: !2175, line: 36, column: 16)
!2205 = !DILocation(line: 36, column: 16, scope: !2201)
!2206 = !DILocation(line: 37, column: 14, scope: !2204)
!2207 = distinct !{!2207, !2191, !2208}
!2208 = !DILocation(line: 40, column: 5, scope: !2174)
!2209 = !DILocation(line: 43, column: 1, scope: !2174)
!2210 = distinct !DISubprogram(name: "atof", scope: !2211, file: !2211, line: 25, type: !2212, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2215)
!2211 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!2214, !571}
!2214 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2215 = !{!2216}
!2216 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2210, file: !2211, line: 25, type: !571)
!2217 = !DILocation(line: 0, scope: !2210)
!2218 = !DILocation(line: 27, column: 10, scope: !2210)
!2219 = !DILocation(line: 27, column: 3, scope: !2210)
!2220 = distinct !DISubprogram(name: "strtoimax", scope: !2221, file: !2221, line: 324, type: !2222, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2228)
!2221 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!2224, !1982, !2227, !566}
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2225, line: 101, baseType: !2226)
!2225 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2034, line: 72, baseType: !672)
!2227 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!2228 = !{!2229, !2230, !2231}
!2229 = !DILocalVariable(name: "nptr", arg: 1, scope: !2220, file: !2221, line: 324, type: !1982)
!2230 = !DILocalVariable(name: "endptr", arg: 2, scope: !2220, file: !2221, line: 324, type: !2227)
!2231 = !DILocalVariable(name: "base", arg: 3, scope: !2220, file: !2221, line: 324, type: !566)
!2232 = !DILocation(line: 0, scope: !2220)
!2233 = !DILocation(line: 327, column: 10, scope: !2220)
!2234 = !DILocation(line: 327, column: 3, scope: !2220)
!2235 = distinct !DISubprogram(name: "strtoumax", scope: !2221, file: !2221, line: 336, type: !2236, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2240)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!2238, !1982, !2227, !566}
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2225, line: 102, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2034, line: 73, baseType: !655)
!2240 = !{!2241, !2242, !2243}
!2241 = !DILocalVariable(name: "nptr", arg: 1, scope: !2235, file: !2221, line: 336, type: !1982)
!2242 = !DILocalVariable(name: "endptr", arg: 2, scope: !2235, file: !2221, line: 336, type: !2227)
!2243 = !DILocalVariable(name: "base", arg: 3, scope: !2235, file: !2221, line: 336, type: !566)
!2244 = !DILocation(line: 0, scope: !2235)
!2245 = !DILocation(line: 339, column: 10, scope: !2235)
!2246 = !DILocation(line: 339, column: 3, scope: !2235)
!2247 = distinct !DISubprogram(name: "wcstoimax", scope: !2221, file: !2221, line: 348, type: !2248, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2257)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!2224, !2250, !2254, !566}
!2250 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2251)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2221, line: 34, baseType: !566)
!2254 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2255)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2257 = !{!2258, !2259, !2260}
!2258 = !DILocalVariable(name: "nptr", arg: 1, scope: !2247, file: !2221, line: 348, type: !2250)
!2259 = !DILocalVariable(name: "endptr", arg: 2, scope: !2247, file: !2221, line: 348, type: !2254)
!2260 = !DILocalVariable(name: "base", arg: 3, scope: !2247, file: !2221, line: 348, type: !566)
!2261 = !DILocation(line: 0, scope: !2247)
!2262 = !DILocation(line: 351, column: 10, scope: !2247)
!2263 = !DILocation(line: 351, column: 3, scope: !2247)
!2264 = distinct !DISubprogram(name: "wcstoumax", scope: !2221, file: !2221, line: 362, type: !2265, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2267)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!2238, !2250, !2254, !566}
!2267 = !{!2268, !2269, !2270}
!2268 = !DILocalVariable(name: "nptr", arg: 1, scope: !2264, file: !2221, line: 362, type: !2250)
!2269 = !DILocalVariable(name: "endptr", arg: 2, scope: !2264, file: !2221, line: 362, type: !2254)
!2270 = !DILocalVariable(name: "base", arg: 3, scope: !2264, file: !2221, line: 362, type: !566)
!2271 = !DILocation(line: 0, scope: !2264)
!2272 = !DILocation(line: 365, column: 10, scope: !2264)
!2273 = !DILocation(line: 365, column: 3, scope: !2264)
!2274 = distinct !DISubprogram(name: "stat", scope: !2275, file: !2275, line: 453, type: !2276, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2313)
!2275 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!566, !571, !2278}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2280, line: 46, size: 1152, elements: !2281)
!2280 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2281 = !{!2282, !2284, !2286, !2288, !2290, !2292, !2294, !2295, !2296, !2297, !2299, !2301, !2309, !2310, !2311}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2279, file: !2280, line: 48, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2034, line: 145, baseType: !655)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2279, file: !2280, line: 53, baseType: !2285, size: 64, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2034, line: 148, baseType: !655)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2279, file: !2280, line: 61, baseType: !2287, size: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2034, line: 151, baseType: !655)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2279, file: !2280, line: 62, baseType: !2289, size: 32, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2034, line: 150, baseType: !7)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2279, file: !2280, line: 64, baseType: !2291, size: 32, offset: 224)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2034, line: 146, baseType: !7)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2279, file: !2280, line: 65, baseType: !2293, size: 32, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2034, line: 147, baseType: !7)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2279, file: !2280, line: 67, baseType: !566, size: 32, offset: 288)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2279, file: !2280, line: 69, baseType: !2283, size: 64, offset: 320)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2279, file: !2280, line: 74, baseType: !2033, size: 64, offset: 384)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2279, file: !2280, line: 78, baseType: !2298, size: 64, offset: 448)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2034, line: 174, baseType: !672)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2279, file: !2280, line: 80, baseType: !2300, size: 64, offset: 512)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2034, line: 179, baseType: !672)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2279, file: !2280, line: 91, baseType: !2302, size: 128, offset: 576)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2303, line: 10, size: 128, elements: !2304)
!2303 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2304 = !{!2305, !2307}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2302, file: !2303, line: 12, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2034, line: 160, baseType: !672)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2302, file: !2303, line: 16, baseType: !2308, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2034, line: 196, baseType: !672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2279, file: !2280, line: 92, baseType: !2302, size: 128, offset: 704)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2279, file: !2280, line: 93, baseType: !2302, size: 128, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2279, file: !2280, line: 106, baseType: !2312, size: 192, offset: 960)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2308, size: 192, elements: !772)
!2313 = !{!2314, !2315}
!2314 = !DILocalVariable(name: "__path", arg: 1, scope: !2274, file: !2275, line: 453, type: !571)
!2315 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2274, file: !2275, line: 453, type: !2278)
!2316 = !DILocation(line: 0, scope: !2274)
!2317 = !DILocation(line: 455, column: 10, scope: !2274)
!2318 = !DILocation(line: 455, column: 3, scope: !2274)
!2319 = distinct !DISubprogram(name: "lstat", scope: !2275, file: !2275, line: 460, type: !2276, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2320)
!2320 = !{!2321, !2322}
!2321 = !DILocalVariable(name: "__path", arg: 1, scope: !2319, file: !2275, line: 460, type: !571)
!2322 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2319, file: !2275, line: 460, type: !2278)
!2323 = !DILocation(line: 0, scope: !2319)
!2324 = !DILocation(line: 462, column: 10, scope: !2319)
!2325 = !DILocation(line: 462, column: 3, scope: !2319)
!2326 = distinct !DISubprogram(name: "fstat", scope: !2275, file: !2275, line: 467, type: !2327, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2329)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!566, !566, !2278}
!2329 = !{!2330, !2331}
!2330 = !DILocalVariable(name: "__fd", arg: 1, scope: !2326, file: !2275, line: 467, type: !566)
!2331 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2326, file: !2275, line: 467, type: !2278)
!2332 = !DILocation(line: 0, scope: !2326)
!2333 = !DILocation(line: 469, column: 10, scope: !2326)
!2334 = !DILocation(line: 469, column: 3, scope: !2326)
!2335 = distinct !DISubprogram(name: "fstatat", scope: !2275, file: !2275, line: 474, type: !2336, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2338)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!566, !566, !571, !2278, !566}
!2338 = !{!2339, !2340, !2341, !2342}
!2339 = !DILocalVariable(name: "__fd", arg: 1, scope: !2335, file: !2275, line: 474, type: !566)
!2340 = !DILocalVariable(name: "__filename", arg: 2, scope: !2335, file: !2275, line: 474, type: !571)
!2341 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2335, file: !2275, line: 474, type: !2278)
!2342 = !DILocalVariable(name: "__flag", arg: 4, scope: !2335, file: !2275, line: 474, type: !566)
!2343 = !DILocation(line: 0, scope: !2335)
!2344 = !DILocation(line: 477, column: 10, scope: !2335)
!2345 = !DILocation(line: 477, column: 3, scope: !2335)
!2346 = distinct !DISubprogram(name: "mknod", scope: !2275, file: !2275, line: 483, type: !2347, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2349)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!566, !571, !2289, !2283}
!2349 = !{!2350, !2351, !2352}
!2350 = !DILocalVariable(name: "__path", arg: 1, scope: !2346, file: !2275, line: 483, type: !571)
!2351 = !DILocalVariable(name: "__mode", arg: 2, scope: !2346, file: !2275, line: 483, type: !2289)
!2352 = !DILocalVariable(name: "__dev", arg: 3, scope: !2346, file: !2275, line: 483, type: !2283)
!2353 = !DILocation(line: 0, scope: !2346)
!2354 = !DILocation(line: 485, column: 10, scope: !2346)
!2355 = !DILocation(line: 485, column: 3, scope: !2346)
!2356 = distinct !DISubprogram(name: "mknodat", scope: !2275, file: !2275, line: 491, type: !2357, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2359)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!566, !566, !571, !2289, !2283}
!2359 = !{!2360, !2361, !2362, !2363}
!2360 = !DILocalVariable(name: "__fd", arg: 1, scope: !2356, file: !2275, line: 491, type: !566)
!2361 = !DILocalVariable(name: "__path", arg: 2, scope: !2356, file: !2275, line: 491, type: !571)
!2362 = !DILocalVariable(name: "__mode", arg: 3, scope: !2356, file: !2275, line: 491, type: !2289)
!2363 = !DILocalVariable(name: "__dev", arg: 4, scope: !2356, file: !2275, line: 491, type: !2283)
!2364 = !DILocation(line: 0, scope: !2356)
!2365 = !DILocation(line: 494, column: 10, scope: !2356)
!2366 = !DILocation(line: 494, column: 3, scope: !2356)
!2367 = distinct !DISubprogram(name: "stat64", scope: !2275, file: !2275, line: 502, type: !2368, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2390)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!566, !571, !2370}
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2280, line: 119, size: 1152, elements: !2372)
!2372 = !{!2373, !2374, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2386, !2387, !2388, !2389}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2371, file: !2280, line: 121, baseType: !2283, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2371, file: !2280, line: 123, baseType: !2375, size: 64, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2034, line: 149, baseType: !655)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2371, file: !2280, line: 124, baseType: !2287, size: 64, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2371, file: !2280, line: 125, baseType: !2289, size: 32, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2371, file: !2280, line: 132, baseType: !2291, size: 32, offset: 224)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2371, file: !2280, line: 133, baseType: !2293, size: 32, offset: 256)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2371, file: !2280, line: 135, baseType: !566, size: 32, offset: 288)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2371, file: !2280, line: 136, baseType: !2283, size: 64, offset: 320)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2371, file: !2280, line: 137, baseType: !2033, size: 64, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2371, file: !2280, line: 143, baseType: !2298, size: 64, offset: 448)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2371, file: !2280, line: 144, baseType: !2385, size: 64, offset: 512)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2034, line: 180, baseType: !672)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2371, file: !2280, line: 152, baseType: !2302, size: 128, offset: 576)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2371, file: !2280, line: 153, baseType: !2302, size: 128, offset: 704)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2371, file: !2280, line: 154, baseType: !2302, size: 128, offset: 832)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2371, file: !2280, line: 164, baseType: !2312, size: 192, offset: 960)
!2390 = !{!2391, !2392}
!2391 = !DILocalVariable(name: "__path", arg: 1, scope: !2367, file: !2275, line: 502, type: !571)
!2392 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2367, file: !2275, line: 502, type: !2370)
!2393 = !DILocation(line: 0, scope: !2367)
!2394 = !DILocation(line: 504, column: 10, scope: !2367)
!2395 = !DILocation(line: 504, column: 3, scope: !2367)
!2396 = distinct !DISubprogram(name: "lstat64", scope: !2275, file: !2275, line: 509, type: !2368, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2397)
!2397 = !{!2398, !2399}
!2398 = !DILocalVariable(name: "__path", arg: 1, scope: !2396, file: !2275, line: 509, type: !571)
!2399 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2396, file: !2275, line: 509, type: !2370)
!2400 = !DILocation(line: 0, scope: !2396)
!2401 = !DILocation(line: 511, column: 10, scope: !2396)
!2402 = !DILocation(line: 511, column: 3, scope: !2396)
!2403 = distinct !DISubprogram(name: "fstat64", scope: !2275, file: !2275, line: 516, type: !2404, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2406)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!566, !566, !2370}
!2406 = !{!2407, !2408}
!2407 = !DILocalVariable(name: "__fd", arg: 1, scope: !2403, file: !2275, line: 516, type: !566)
!2408 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2403, file: !2275, line: 516, type: !2370)
!2409 = !DILocation(line: 0, scope: !2403)
!2410 = !DILocation(line: 518, column: 10, scope: !2403)
!2411 = !DILocation(line: 518, column: 3, scope: !2403)
!2412 = distinct !DISubprogram(name: "fstatat64", scope: !2275, file: !2275, line: 523, type: !2413, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2415)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{!566, !566, !571, !2370, !566}
!2415 = !{!2416, !2417, !2418, !2419}
!2416 = !DILocalVariable(name: "__fd", arg: 1, scope: !2412, file: !2275, line: 523, type: !566)
!2417 = !DILocalVariable(name: "__filename", arg: 2, scope: !2412, file: !2275, line: 523, type: !571)
!2418 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2412, file: !2275, line: 523, type: !2370)
!2419 = !DILocalVariable(name: "__flag", arg: 4, scope: !2412, file: !2275, line: 523, type: !566)
!2420 = !DILocation(line: 0, scope: !2412)
!2421 = !DILocation(line: 526, column: 10, scope: !2412)
!2422 = !DILocation(line: 526, column: 3, scope: !2412)
!2423 = distinct !DISubprogram(name: "ira_loop_edge_freq", scope: !3, file: !3, line: 1020, type: !2424, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!566, !1683, !566, !565}
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2439, !2440}
!2427 = !DILocalVariable(name: "loop_node", arg: 1, scope: !2423, file: !3, line: 1020, type: !1683)
!2428 = !DILocalVariable(name: "regno", arg: 2, scope: !2423, file: !3, line: 1020, type: !566)
!2429 = !DILocalVariable(name: "exit_p", arg: 3, scope: !2423, file: !3, line: 1020, type: !565)
!2430 = !DILocalVariable(name: "freq", scope: !2423, file: !3, line: 1022, type: !566)
!2431 = !DILocalVariable(name: "i", scope: !2423, file: !3, line: 1022, type: !566)
!2432 = !DILocalVariable(name: "ei", scope: !2423, file: !3, line: 1023, type: !2433)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !2435)
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2434, file: !135, line: 680, baseType: !7, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2434, file: !135, line: 681, baseType: !2438, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!2439 = !DILocalVariable(name: "e", scope: !2423, file: !3, line: 1024, type: !975)
!2440 = !DILocalVariable(name: "edges", scope: !2423, file: !3, line: 1025, type: !2441)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_heap", file: !135, line: 152, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_heap", file: !135, line: 152, size: 128, elements: !2444)
!2444 = !{!2445}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2443, file: !135, line: 152, baseType: !968, size: 128)
!2446 = !DILocation(line: 0, scope: !2423)
!2447 = !DILocation(line: 1023, column: 3, scope: !2423)
!2448 = !DILocation(line: 1024, column: 3, scope: !2423)
!2449 = !DILocation(line: 1025, column: 3, scope: !2423)
!2450 = !DILocation(line: 1030, column: 9, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 1030, column: 7)
!2452 = !DILocation(line: 1030, column: 7, scope: !2423)
!2453 = !DILocation(line: 1032, column: 7, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 1032, column: 7)
!2455 = distinct !DILexicalBlock(scope: !2451, file: !3, line: 1031, column: 5)
!2456 = !DILocation(line: 0, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 1032, column: 7)
!2458 = !DILocation(line: 0, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 1033, column: 6)
!2460 = !DILocation(line: 1032, column: 7, scope: !2457)
!2461 = !DILocation(line: 1033, column: 6, scope: !2459)
!2462 = !DILocation(line: 1033, column: 9, scope: !2459)
!2463 = !DILocation(line: 1033, column: 27, scope: !2459)
!2464 = !DILocation(line: 1033, column: 33, scope: !2459)
!2465 = !DILocation(line: 1033, column: 13, scope: !2459)
!2466 = !DILocation(line: 1034, column: 6, scope: !2459)
!2467 = !DILocation(line: 1037, column: 12, scope: !2459)
!2468 = !DILocation(line: 1037, column: 9, scope: !2459)
!2469 = !DILocation(line: 1037, column: 4, scope: !2459)
!2470 = distinct !{!2470, !2453, !2471}
!2471 = !DILocation(line: 1037, column: 12, scope: !2454)
!2472 = !DILocation(line: 1050, column: 10, scope: !2423)
!2473 = !DILocation(line: 1035, column: 21, scope: !2459)
!2474 = !DILocation(line: 1035, column: 7, scope: !2459)
!2475 = !DILocation(line: 1036, column: 7, scope: !2459)
!2476 = !DILocation(line: 1036, column: 24, scope: !2459)
!2477 = !DILocation(line: 1036, column: 10, scope: !2459)
!2478 = !DILocation(line: 1033, column: 6, scope: !2457)
!2479 = !DILocation(line: 1041, column: 47, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2451, file: !3, line: 1040, column: 5)
!2481 = !DILocation(line: 1041, column: 15, scope: !2480)
!2482 = !DILocation(line: 1041, column: 13, scope: !2480)
!2483 = !DILocation(line: 0, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 1043, column: 6)
!2485 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 1042, column: 7)
!2486 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 1042, column: 7)
!2487 = !DILocation(line: 1042, column: 12, scope: !2486)
!2488 = !DILocation(line: 1042, column: 19, scope: !2485)
!2489 = !DILocation(line: 0, scope: !2486)
!2490 = !DILocation(line: 1042, column: 7, scope: !2486)
!2491 = !DILocation(line: 1046, column: 12, scope: !2484)
!2492 = !DILocation(line: 1046, column: 9, scope: !2484)
!2493 = !DILocation(line: 1042, column: 53, scope: !2485)
!2494 = !DILocation(line: 1042, column: 7, scope: !2485)
!2495 = distinct !{!2495, !2490, !2496}
!2496 = !DILocation(line: 1046, column: 12, scope: !2486)
!2497 = !DILocation(line: 1047, column: 7, scope: !2480)
!2498 = !DILocation(line: 1044, column: 24, scope: !2484)
!2499 = !DILocation(line: 1044, column: 10, scope: !2484)
!2500 = !DILocation(line: 1045, column: 3, scope: !2484)
!2501 = !DILocation(line: 1045, column: 20, scope: !2484)
!2502 = !DILocation(line: 1045, column: 6, scope: !2484)
!2503 = !DILocation(line: 1043, column: 6, scope: !2485)
!2504 = !DILocation(line: 1046, column: 4, scope: !2484)
!2505 = !DILocation(line: 1029, column: 8, scope: !2423)
!2506 = !DILocation(line: 1051, column: 1, scope: !2423)
!2507 = !DILocation(line: 1050, column: 3, scope: !2423)
!2508 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !2509, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2511)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!2433, !2438}
!2511 = !{!2512, !2513}
!2512 = !DILocalVariable(name: "ev", arg: 1, scope: !2508, file: !135, line: 696, type: !2438)
!2513 = !DILocalVariable(name: "i", scope: !2508, file: !135, line: 698, type: !2433)
!2514 = !DILocation(line: 0, scope: !2508)
!2515 = !DILocation(line: 700, column: 5, scope: !2508)
!2516 = !DILocation(line: 700, column: 11, scope: !2508)
!2517 = !DILocation(line: 701, column: 5, scope: !2508)
!2518 = !DILocation(line: 701, column: 15, scope: !2508)
!2519 = !DILocation(line: 703, column: 3, scope: !2508)
!2520 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !2521, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2524)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!565, !2433, !2523}
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!2524 = !{!2525, !2526}
!2525 = !DILocalVariable(name: "ei", arg: 1, scope: !2520, file: !135, line: 771, type: !2433)
!2526 = !DILocalVariable(name: "p", arg: 2, scope: !2520, file: !135, line: 771, type: !2523)
!2527 = !DILocation(line: 0, scope: !2520)
!2528 = !DILocation(line: 773, column: 8, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2520, file: !135, line: 773, column: 7)
!2530 = !DILocation(line: 773, column: 7, scope: !2520)
!2531 = !DILocation(line: 775, column: 12, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2529, file: !135, line: 774, column: 5)
!2533 = !DILocation(line: 776, column: 7, scope: !2532)
!2534 = !DILocation(line: 781, column: 7, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2529, file: !135, line: 779, column: 5)
!2536 = !DILocation(line: 0, scope: !2529)
!2537 = !DILocation(line: 783, column: 1, scope: !2520)
!2538 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !1783, file: !1783, line: 1052, type: !2539, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2541)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!1781, !7}
!2541 = !{!2542}
!2542 = !DILocalVariable(name: "index", arg: 1, scope: !2538, file: !1783, line: 1052, type: !7)
!2543 = !DILocation(line: 0, scope: !2538)
!2544 = !DILocation(line: 1054, column: 15, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2538, file: !1783, line: 1054, column: 7)
!2546 = !DILocation(line: 1054, column: 22, scope: !2545)
!2547 = !DILocation(line: 1054, column: 13, scope: !2545)
!2548 = !DILocation(line: 1054, column: 7, scope: !2538)
!2549 = !DILocation(line: 1055, column: 44, scope: !2545)
!2550 = !DILocation(line: 1055, column: 37, scope: !2545)
!2551 = !DILocation(line: 1055, column: 5, scope: !2545)
!2552 = !DILocation(line: 0, scope: !2545)
!2553 = !DILocation(line: 1058, column: 1, scope: !2538)
!2554 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !2555, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2558)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{null, !2557}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2558 = !{!2559}
!2559 = !DILocalVariable(name: "i", arg: 1, scope: !2554, file: !135, line: 736, type: !2557)
!2560 = !DILocation(line: 0, scope: !2554)
!2561 = !DILocation(line: 738, column: 3, scope: !2554)
!2562 = !DILocation(line: 739, column: 11, scope: !2554)
!2563 = !DILocation(line: 740, column: 1, scope: !2554)
!2564 = distinct !DISubprogram(name: "VEC_edge_base_iterate", scope: !135, file: !135, line: 150, type: !2565, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2569)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!566, !2567, !7, !2523}
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!2569 = !{!2570, !2571, !2572}
!2570 = !DILocalVariable(name: "vec_", arg: 1, scope: !2564, file: !135, line: 150, type: !2567)
!2571 = !DILocalVariable(name: "ix_", arg: 2, scope: !2564, file: !135, line: 150, type: !7)
!2572 = !DILocalVariable(name: "ptr", arg: 3, scope: !2564, file: !135, line: 150, type: !2523)
!2573 = !DILocation(line: 0, scope: !2564)
!2574 = !DILocation(line: 150, column: 1, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2564, file: !135, line: 150, column: 1)
!2576 = !DILocation(line: 150, column: 1, scope: !2564)
!2577 = !DILocation(line: 150, column: 1, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2575, file: !135, line: 150, column: 1)
!2579 = !DILocation(line: 150, column: 1, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2575, file: !135, line: 150, column: 1)
!2581 = !DILocation(line: 0, scope: !2575)
!2582 = distinct !DISubprogram(name: "VEC_edge_heap_free", scope: !135, file: !135, line: 152, type: !2583, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2586)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{null, !2585}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2586 = !{!2587}
!2587 = !DILocalVariable(name: "vec_", arg: 1, scope: !2582, file: !135, line: 152, type: !2585)
!2588 = !DILocation(line: 0, scope: !2582)
!2589 = !DILocation(line: 152, column: 1, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2582, file: !135, line: 152, column: 1)
!2591 = !DILocation(line: 152, column: 1, scope: !2582)
!2592 = distinct !DISubprogram(name: "ira_reassign_conflict_allocnos", scope: !3, file: !3, line: 2297, type: !2593, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2595)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{null, !566}
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2596 = !DILocalVariable(name: "start_regno", arg: 1, scope: !2592, file: !3, line: 2297, type: !566)
!2597 = !DILocalVariable(name: "i", scope: !2592, file: !3, line: 2299, type: !566)
!2598 = !DILocalVariable(name: "allocnos_to_color_num", scope: !2592, file: !3, line: 2299, type: !566)
!2599 = !DILocalVariable(name: "a", scope: !2592, file: !3, line: 2300, type: !575)
!2600 = !DILocalVariable(name: "conflict_a", scope: !2592, file: !3, line: 2300, type: !575)
!2601 = !DILocalVariable(name: "aci", scope: !2592, file: !3, line: 2301, type: !1869)
!2602 = !DILocalVariable(name: "cover_class", scope: !2592, file: !3, line: 2302, type: !390)
!2603 = !DILocalVariable(name: "allocnos_to_color", scope: !2592, file: !3, line: 2303, type: !1703)
!2604 = !DILocalVariable(name: "ai", scope: !2592, file: !3, line: 2304, type: !2605)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_iterator", file: !576, line: 935, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !576, line: 932, size: 32, elements: !2607)
!2607 = !{!2608}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2606, file: !576, line: 934, baseType: !566, size: 32)
!2609 = !DILocation(line: 0, scope: !2592)
!2610 = !DILocation(line: 2300, column: 3, scope: !2592)
!2611 = !DILocation(line: 2301, column: 3, scope: !2592)
!2612 = !DILocation(line: 2304, column: 3, scope: !2592)
!2613 = !DILocation(line: 2306, column: 23, scope: !2592)
!2614 = !DILocation(line: 2308, column: 3, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 2308, column: 3)
!2616 = !DILocation(line: 0, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 2328, column: 2)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 2327, column: 7)
!2619 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 2327, column: 7)
!2620 = distinct !DILexicalBlock(scope: !2621, file: !3, line: 2309, column: 5)
!2621 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 2308, column: 3)
!2622 = !DILocation(line: 2307, column: 25, scope: !2592)
!2623 = !DILocation(line: 2308, column: 3, scope: !2621)
!2624 = !DILocation(line: 2310, column: 13, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 2310, column: 11)
!2626 = !DILocation(line: 2311, column: 4, scope: !2625)
!2627 = !DILocation(line: 2311, column: 42, scope: !2625)
!2628 = !DILocation(line: 2311, column: 9, scope: !2625)
!2629 = !DILocation(line: 2310, column: 11, scope: !2620)
!2630 = !DILocation(line: 2313, column: 8, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 2313, column: 8)
!2632 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 2312, column: 2)
!2633 = !DILocation(line: 2313, column: 32, scope: !2631)
!2634 = !DILocation(line: 2313, column: 8, scope: !2632)
!2635 = !DILocation(line: 2314, column: 6, scope: !2631)
!2636 = !DILocation(line: 2314, column: 43, scope: !2631)
!2637 = !DILocation(line: 2314, column: 47, scope: !2631)
!2638 = !DILocation(line: 2322, column: 39, scope: !2632)
!2639 = !DILocation(line: 2317, column: 8, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 2316, column: 6)
!2641 = !DILocation(line: 2317, column: 31, scope: !2640)
!2642 = !DILocation(line: 2318, column: 8, scope: !2640)
!2643 = !DILocation(line: 2318, column: 31, scope: !2640)
!2644 = !DILocation(line: 2322, column: 4, scope: !2632)
!2645 = !DILocation(line: 2323, column: 2, scope: !2632)
!2646 = !DILocation(line: 2324, column: 11, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 2324, column: 11)
!2648 = !DILocation(line: 2324, column: 29, scope: !2647)
!2649 = !DILocation(line: 2325, column: 4, scope: !2647)
!2650 = !DILocation(line: 2325, column: 22, scope: !2647)
!2651 = !DILocation(line: 2325, column: 47, scope: !2647)
!2652 = !DILocation(line: 2324, column: 11, scope: !2620)
!2653 = !DILocation(line: 2326, column: 2, scope: !2647)
!2654 = distinct !{!2654, !2614, !2655}
!2655 = !DILocation(line: 2336, column: 5, scope: !2615)
!2656 = !DILocation(line: 2327, column: 7, scope: !2619)
!2657 = !DILocation(line: 2327, column: 7, scope: !2618)
!2658 = !DILocation(line: 2331, column: 41, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 2331, column: 8)
!2660 = !DILocation(line: 2331, column: 8, scope: !2659)
!2661 = !DILocation(line: 2331, column: 8, scope: !2617)
!2662 = !DILocation(line: 2333, column: 39, scope: !2617)
!2663 = !DILocation(line: 2333, column: 4, scope: !2617)
!2664 = !DILocation(line: 2334, column: 47, scope: !2617)
!2665 = !DILocation(line: 2334, column: 4, scope: !2617)
!2666 = !DILocation(line: 2334, column: 41, scope: !2617)
!2667 = !DILocation(line: 2334, column: 45, scope: !2617)
!2668 = !DILocation(line: 2335, column: 2, scope: !2617)
!2669 = distinct !{!2669, !2656, !2670}
!2670 = !DILocation(line: 2335, column: 2, scope: !2619)
!2671 = !DILocation(line: 2337, column: 3, scope: !2592)
!2672 = !DILocation(line: 2338, column: 29, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 2338, column: 7)
!2674 = !DILocation(line: 2338, column: 7, scope: !2592)
!2675 = !DILocation(line: 2340, column: 33, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2673, file: !3, line: 2339, column: 5)
!2677 = !DILocation(line: 2340, column: 7, scope: !2676)
!2678 = !DILocation(line: 2342, column: 19, scope: !2676)
!2679 = !DILocation(line: 2342, column: 36, scope: !2676)
!2680 = !DILocation(line: 2342, column: 7, scope: !2676)
!2681 = !DILocation(line: 2348, column: 5, scope: !2676)
!2682 = !DILocation(line: 0, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 2350, column: 5)
!2684 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 2349, column: 3)
!2685 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 2349, column: 3)
!2686 = !DILocation(line: 2349, column: 8, scope: !2685)
!2687 = !DILocation(line: 0, scope: !2685)
!2688 = !DILocation(line: 2349, column: 17, scope: !2684)
!2689 = !DILocation(line: 2349, column: 3, scope: !2685)
!2690 = !DILocation(line: 2357, column: 3, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 2357, column: 3)
!2692 = !DILocation(line: 2351, column: 11, scope: !2683)
!2693 = !DILocation(line: 2351, column: 9, scope: !2683)
!2694 = !DILocation(line: 2352, column: 7, scope: !2683)
!2695 = !DILocation(line: 2352, column: 30, scope: !2683)
!2696 = !DILocation(line: 2355, column: 7, scope: !2683)
!2697 = !DILocation(line: 2349, column: 43, scope: !2684)
!2698 = !DILocation(line: 2349, column: 3, scope: !2684)
!2699 = distinct !{!2699, !2689, !2700}
!2700 = !DILocation(line: 2356, column: 5, scope: !2685)
!2701 = !DILocation(line: 0, scope: !2691)
!2702 = !DILocation(line: 2357, column: 17, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 2357, column: 3)
!2704 = !DILocation(line: 2359, column: 11, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 2358, column: 5)
!2706 = !DILocation(line: 2359, column: 9, scope: !2705)
!2707 = !DILocation(line: 2360, column: 28, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 2360, column: 11)
!2709 = !DILocation(line: 2360, column: 11, scope: !2708)
!2710 = !DILocation(line: 2360, column: 11, scope: !2705)
!2711 = !DILocation(line: 2362, column: 8, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2362, column: 8)
!2713 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 2361, column: 2)
!2714 = !DILocation(line: 2362, column: 34, scope: !2712)
!2715 = !DILocation(line: 2362, column: 41, scope: !2712)
!2716 = !DILocation(line: 2362, column: 55, scope: !2712)
!2717 = !DILocation(line: 2362, column: 38, scope: !2712)
!2718 = !DILocation(line: 2366, column: 9, scope: !2712)
!2719 = !DILocation(line: 2366, column: 33, scope: !2712)
!2720 = !DILocation(line: 2363, column: 6, scope: !2712)
!2721 = !DILocation(line: 2357, column: 43, scope: !2703)
!2722 = !DILocation(line: 2357, column: 3, scope: !2703)
!2723 = distinct !{!2723, !2690, !2724}
!2724 = !DILocation(line: 2368, column: 5, scope: !2691)
!2725 = !DILocation(line: 2369, column: 1, scope: !2592)
!2726 = distinct !DISubprogram(name: "ira_allocno_iter_init", scope: !576, file: !576, line: 939, type: !2727, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{null, !2729}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2730 = !{!2731}
!2731 = !DILocalVariable(name: "i", arg: 1, scope: !2726, file: !576, line: 939, type: !2729)
!2732 = !DILocation(line: 0, scope: !2726)
!2733 = !DILocation(line: 941, column: 6, scope: !2726)
!2734 = !DILocation(line: 941, column: 8, scope: !2726)
!2735 = !DILocation(line: 942, column: 1, scope: !2726)
!2736 = distinct !DISubprogram(name: "ira_allocno_iter_cond", scope: !576, file: !576, line: 947, type: !2737, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!565, !2729, !574}
!2739 = !{!2740, !2741, !2742}
!2740 = !DILocalVariable(name: "i", arg: 1, scope: !2736, file: !576, line: 947, type: !2729)
!2741 = !DILocalVariable(name: "a", arg: 2, scope: !2736, file: !576, line: 947, type: !574)
!2742 = !DILocalVariable(name: "n", scope: !2736, file: !576, line: 949, type: !566)
!2743 = !DILocation(line: 0, scope: !2736)
!2744 = !DILocation(line: 951, column: 15, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2736, file: !576, line: 951, column: 3)
!2746 = !DILocation(line: 0, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2745, file: !576, line: 951, column: 3)
!2748 = !DILocation(line: 0, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2747, file: !576, line: 952, column: 9)
!2750 = !DILocation(line: 951, column: 8, scope: !2745)
!2751 = !DILocation(line: 0, scope: !2745)
!2752 = !DILocation(line: 951, column: 20, scope: !2747)
!2753 = !DILocation(line: 951, column: 3, scope: !2745)
!2754 = !DILocation(line: 952, column: 9, scope: !2749)
!2755 = !DILocation(line: 952, column: 25, scope: !2749)
!2756 = !DILocation(line: 952, column: 9, scope: !2747)
!2757 = !DILocation(line: 954, column: 5, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2749, file: !576, line: 953, column: 7)
!2759 = !DILocation(line: 955, column: 11, scope: !2758)
!2760 = !DILocation(line: 955, column: 7, scope: !2758)
!2761 = !DILocation(line: 956, column: 2, scope: !2758)
!2762 = !DILocation(line: 951, column: 41, scope: !2747)
!2763 = !DILocation(line: 951, column: 3, scope: !2747)
!2764 = distinct !{!2764, !2753, !2765}
!2765 = !DILocation(line: 957, column: 7, scope: !2745)
!2766 = !DILocation(line: 959, column: 1, scope: !2736)
!2767 = distinct !DISubprogram(name: "ira_allocno_conflict_iter_init", scope: !576, file: !576, line: 1044, type: !2768, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2771)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{null, !2770, !575}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!2771 = !{!2772, !2773}
!2772 = !DILocalVariable(name: "i", arg: 1, scope: !2767, file: !576, line: 1044, type: !2770)
!2773 = !DILocalVariable(name: "allocno", arg: 2, scope: !2767, file: !576, line: 1045, type: !575)
!2774 = !DILocation(line: 0, scope: !2767)
!2775 = !DILocation(line: 1047, column: 31, scope: !2767)
!2776 = !DILocation(line: 1047, column: 6, scope: !2767)
!2777 = !DILocation(line: 1047, column: 29, scope: !2767)
!2778 = !DILocation(line: 1048, column: 12, scope: !2767)
!2779 = !DILocation(line: 1048, column: 6, scope: !2767)
!2780 = !DILocation(line: 1048, column: 10, scope: !2767)
!2781 = !DILocation(line: 1049, column: 6, scope: !2767)
!2782 = !DILocation(line: 1049, column: 15, scope: !2767)
!2783 = !DILocation(line: 1050, column: 7, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2767, file: !576, line: 1050, column: 7)
!2785 = !DILocation(line: 1050, column: 7, scope: !2767)
!2786 = !DILocation(line: 1051, column: 53, scope: !2784)
!2787 = !DILocation(line: 1051, column: 58, scope: !2784)
!2788 = !DILocation(line: 1051, column: 31, scope: !2784)
!2789 = !DILocation(line: 1051, column: 48, scope: !2784)
!2790 = !DILocation(line: 1051, column: 18, scope: !2784)
!2791 = !DILocation(line: 1051, column: 26, scope: !2784)
!2792 = !DILocation(line: 1051, column: 8, scope: !2784)
!2793 = !DILocation(line: 1051, column: 13, scope: !2784)
!2794 = !DILocation(line: 1051, column: 5, scope: !2784)
!2795 = !DILocation(line: 1054, column: 11, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !576, line: 1054, column: 11)
!2797 = distinct !DILexicalBlock(scope: !2784, file: !576, line: 1053, column: 5)
!2798 = !DILocation(line: 1054, column: 35, scope: !2796)
!2799 = !DILocation(line: 1054, column: 33, scope: !2796)
!2800 = !DILocation(line: 1054, column: 11, scope: !2797)
!2801 = !DILocation(line: 1055, column: 5, scope: !2796)
!2802 = !DILocation(line: 1055, column: 10, scope: !2796)
!2803 = !DILocation(line: 1055, column: 2, scope: !2796)
!2804 = !DILocation(line: 1057, column: 36, scope: !2796)
!2805 = !DILocation(line: 1058, column: 7, scope: !2796)
!2806 = !DILocation(line: 1059, column: 6, scope: !2796)
!2807 = !DILocation(line: 1059, column: 22, scope: !2796)
!2808 = !DILocation(line: 1057, column: 5, scope: !2796)
!2809 = !DILocation(line: 1057, column: 10, scope: !2796)
!2810 = !DILocation(line: 1060, column: 10, scope: !2797)
!2811 = !DILocation(line: 1060, column: 18, scope: !2797)
!2812 = !DILocation(line: 1061, column: 29, scope: !2797)
!2813 = !DILocation(line: 1061, column: 10, scope: !2797)
!2814 = !DILocation(line: 1061, column: 27, scope: !2797)
!2815 = !DILocation(line: 1062, column: 18, scope: !2797)
!2816 = !DILocation(line: 1062, column: 37, scope: !2797)
!2817 = !DILocation(line: 1062, column: 10, scope: !2797)
!2818 = !DILocation(line: 1062, column: 15, scope: !2797)
!2819 = !DILocation(line: 1064, column: 1, scope: !2767)
!2820 = distinct !DISubprogram(name: "ira_allocno_conflict_iter_cond", scope: !576, file: !576, line: 1070, type: !2821, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2823)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!565, !2770, !574}
!2823 = !{!2824, !2825, !2826}
!2824 = !DILocalVariable(name: "i", arg: 1, scope: !2820, file: !576, line: 1070, type: !2770)
!2825 = !DILocalVariable(name: "a", arg: 2, scope: !2820, file: !576, line: 1071, type: !574)
!2826 = !DILocalVariable(name: "conflict_allocno", scope: !2820, file: !576, line: 1073, type: !575)
!2827 = !DILocation(line: 0, scope: !2820)
!2828 = !DILocation(line: 1075, column: 10, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2820, file: !576, line: 1075, column: 7)
!2830 = !DILocation(line: 1075, column: 7, scope: !2829)
!2831 = !DILocation(line: 1075, column: 7, scope: !2820)
!2832 = !DILocation(line: 0, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2834, file: !576, line: 1086, column: 7)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !576, line: 1086, column: 7)
!2835 = distinct !DILexicalBlock(scope: !2829, file: !576, line: 1084, column: 5)
!2836 = !DILocation(line: 0, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !576, line: 1087, column: 2)
!2838 = !DILocation(line: 0, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2837, file: !576, line: 1091, column: 8)
!2840 = !DILocation(line: 1086, column: 17, scope: !2833)
!2841 = !DILocation(line: 1086, column: 7, scope: !2834)
!2842 = !DILocation(line: 1077, column: 48, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2829, file: !576, line: 1076, column: 5)
!2844 = !DILocation(line: 1077, column: 56, scope: !2843)
!2845 = !DILocation(line: 1077, column: 26, scope: !2843)
!2846 = !DILocation(line: 1078, column: 28, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !576, line: 1078, column: 11)
!2848 = !DILocation(line: 1078, column: 11, scope: !2843)
!2849 = !DILocation(line: 1080, column: 10, scope: !2843)
!2850 = !DILocation(line: 1081, column: 7, scope: !2843)
!2851 = !DILocation(line: 1086, column: 22, scope: !2833)
!2852 = !DILocation(line: 1098, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2835, file: !576, line: 1098, column: 7)
!2854 = !DILocation(line: 1088, column: 15, scope: !2837)
!2855 = !DILocation(line: 1091, column: 8, scope: !2839)
!2856 = !DILocation(line: 1091, column: 20, scope: !2839)
!2857 = !DILocation(line: 1091, column: 50, scope: !2839)
!2858 = !DILocation(line: 1091, column: 47, scope: !2839)
!2859 = !DILocation(line: 1091, column: 44, scope: !2839)
!2860 = !DILocation(line: 1091, column: 8, scope: !2837)
!2861 = !DILocation(line: 1094, column: 29, scope: !2837)
!2862 = !DILocation(line: 1094, column: 15, scope: !2837)
!2863 = !DILocation(line: 1086, column: 59, scope: !2833)
!2864 = !DILocation(line: 1086, column: 38, scope: !2833)
!2865 = !DILocation(line: 1086, column: 36, scope: !2833)
!2866 = !DILocation(line: 1086, column: 7, scope: !2833)
!2867 = distinct !{!2867, !2841, !2868}
!2868 = !DILocation(line: 1095, column: 2, scope: !2834)
!2869 = !DILocation(line: 1098, column: 18, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2853, file: !576, line: 1098, column: 7)
!2871 = !DILocation(line: 1098, column: 23, scope: !2870)
!2872 = !DILocation(line: 1098, column: 28, scope: !2870)
!2873 = !DILocation(line: 1099, column: 12, scope: !2870)
!2874 = !DILocation(line: 1098, column: 42, scope: !2870)
!2875 = !DILocation(line: 1098, column: 7, scope: !2870)
!2876 = distinct !{!2876, !2852, !2877}
!2877 = !DILocation(line: 1099, column: 12, scope: !2853)
!2878 = !DILocation(line: 1101, column: 12, scope: !2835)
!2879 = !DILocation(line: 1101, column: 43, scope: !2835)
!2880 = !DILocation(line: 1101, column: 56, scope: !2835)
!2881 = !DILocation(line: 1101, column: 51, scope: !2835)
!2882 = !DILocation(line: 1101, column: 10, scope: !2835)
!2883 = !DILocation(line: 1103, column: 7, scope: !2835)
!2884 = !DILocation(line: 1105, column: 1, scope: !2820)
!2885 = !DILocation(line: 0, scope: !2829)
!2886 = distinct !DISubprogram(name: "ira_allocno_conflict_iter_next", scope: !576, file: !576, line: 1109, type: !2887, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2889)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2770}
!2889 = !{!2890}
!2890 = !DILocalVariable(name: "i", arg: 1, scope: !2886, file: !576, line: 1109, type: !2770)
!2891 = !DILocation(line: 0, scope: !2886)
!2892 = !DILocation(line: 1111, column: 10, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2886, file: !576, line: 1111, column: 7)
!2894 = !DILocation(line: 1111, column: 7, scope: !2893)
!2895 = !DILocation(line: 1111, column: 7, scope: !2886)
!2896 = !DILocation(line: 1112, column: 8, scope: !2893)
!2897 = !DILocation(line: 1112, column: 16, scope: !2893)
!2898 = !DILocation(line: 1112, column: 5, scope: !2893)
!2899 = !DILocation(line: 1115, column: 10, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2893, file: !576, line: 1114, column: 5)
!2901 = !DILocation(line: 1115, column: 15, scope: !2900)
!2902 = !DILocation(line: 1116, column: 10, scope: !2900)
!2903 = !DILocation(line: 1116, column: 17, scope: !2900)
!2904 = !DILocation(line: 1118, column: 1, scope: !2886)
!2905 = distinct !DISubprogram(name: "setup_allocno_priorities", scope: !3, file: !3, line: 1715, type: !2906, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2908)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{null, !574, !566}
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2909 = !DILocalVariable(name: "consideration_allocnos", arg: 1, scope: !2905, file: !3, line: 1715, type: !574)
!2910 = !DILocalVariable(name: "n", arg: 2, scope: !2905, file: !3, line: 1715, type: !566)
!2911 = !DILocalVariable(name: "i", scope: !2905, file: !3, line: 1717, type: !566)
!2912 = !DILocalVariable(name: "length", scope: !2905, file: !3, line: 1717, type: !566)
!2913 = !DILocalVariable(name: "nrefs", scope: !2905, file: !3, line: 1717, type: !566)
!2914 = !DILocalVariable(name: "priority", scope: !2905, file: !3, line: 1717, type: !566)
!2915 = !DILocalVariable(name: "max_priority", scope: !2905, file: !3, line: 1717, type: !566)
!2916 = !DILocalVariable(name: "mult", scope: !2905, file: !3, line: 1717, type: !566)
!2917 = !DILocalVariable(name: "a", scope: !2905, file: !3, line: 1718, type: !575)
!2918 = !DILocation(line: 0, scope: !2905)
!2919 = !DILocation(line: 1721, column: 8, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 1721, column: 3)
!2921 = !DILocation(line: 1721, column: 17, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 1721, column: 3)
!2923 = !DILocation(line: 1721, column: 3, scope: !2920)
!2924 = !DILocation(line: 1723, column: 11, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 1722, column: 5)
!2926 = !DILocation(line: 1726, column: 26, scope: !2925)
!2927 = !DILocation(line: 1726, column: 14, scope: !2925)
!2928 = !DILocation(line: 1726, column: 45, scope: !2925)
!2929 = !DILocation(line: 1731, column: 8, scope: !2925)
!2930 = !DILocation(line: 1731, column: 34, scope: !2925)
!2931 = !DILocation(line: 1731, column: 32, scope: !2925)
!2932 = !DILocation(line: 1731, column: 5, scope: !2925)
!2933 = !DILocation(line: 1732, column: 27, scope: !2925)
!2934 = !DILocation(line: 1732, column: 7, scope: !2925)
!2935 = !DILocation(line: 1732, column: 52, scope: !2925)
!2936 = !DILocation(line: 1732, column: 5, scope: !2925)
!2937 = !DILocation(line: 1728, column: 7, scope: !2925)
!2938 = !DILocation(line: 1728, column: 26, scope: !2925)
!2939 = !DILocation(line: 1729, column: 2, scope: !2925)
!2940 = !DILocation(line: 1733, column: 20, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 1733, column: 11)
!2942 = !DILocation(line: 1734, column: 13, scope: !2941)
!2943 = !DILocation(line: 1733, column: 11, scope: !2925)
!2944 = !DILocation(line: 1735, column: 24, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 1735, column: 11)
!2946 = !DILocation(line: 1735, column: 11, scope: !2925)
!2947 = !DILocation(line: 1721, column: 23, scope: !2922)
!2948 = !DILocation(line: 1721, column: 3, scope: !2922)
!2949 = distinct !{!2949, !2923, !2950}
!2950 = !DILocation(line: 1737, column: 5, scope: !2920)
!2951 = !DILocation(line: 1738, column: 23, scope: !2905)
!2952 = !DILocation(line: 1738, column: 10, scope: !2905)
!2953 = !DILocation(line: 1738, column: 42, scope: !2905)
!2954 = !DILocation(line: 1739, column: 8, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 1739, column: 3)
!2956 = !DILocation(line: 0, scope: !2955)
!2957 = !DILocation(line: 1739, column: 17, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 1739, column: 3)
!2959 = !DILocation(line: 1739, column: 3, scope: !2955)
!2960 = !DILocation(line: 1741, column: 11, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 1740, column: 5)
!2962 = !DILocation(line: 1742, column: 16, scope: !2961)
!2963 = !DILocation(line: 1743, column: 11, scope: !2961)
!2964 = !DILocation(line: 1746, column: 4, scope: !2961)
!2965 = !DILocation(line: 1746, column: 23, scope: !2961)
!2966 = !DILocation(line: 1746, column: 40, scope: !2961)
!2967 = !DILocation(line: 1746, column: 47, scope: !2961)
!2968 = !DILocation(line: 1746, column: 2, scope: !2961)
!2969 = !DILocation(line: 1739, column: 23, scope: !2958)
!2970 = !DILocation(line: 1739, column: 3, scope: !2958)
!2971 = distinct !{!2971, !2959, !2972}
!2972 = !DILocation(line: 1747, column: 5, scope: !2955)
!2973 = !DILocation(line: 1748, column: 1, scope: !2905)
!2974 = distinct !DISubprogram(name: "allocno_priority_compare_func", scope: !3, file: !3, line: 1753, type: !1140, scopeLine: 1754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981}
!2976 = !DILocalVariable(name: "v1p", arg: 1, scope: !2974, file: !3, line: 1753, type: !1135)
!2977 = !DILocalVariable(name: "v2p", arg: 2, scope: !2974, file: !3, line: 1753, type: !1135)
!2978 = !DILocalVariable(name: "a1", scope: !2974, file: !3, line: 1755, type: !575)
!2979 = !DILocalVariable(name: "a2", scope: !2974, file: !3, line: 1756, type: !575)
!2980 = !DILocalVariable(name: "pri1", scope: !2974, file: !3, line: 1757, type: !566)
!2981 = !DILocalVariable(name: "pri2", scope: !2974, file: !3, line: 1757, type: !566)
!2982 = !DILocation(line: 0, scope: !2974)
!2983 = !DILocation(line: 1755, column: 23, scope: !2974)
!2984 = !DILocation(line: 1755, column: 22, scope: !2974)
!2985 = !DILocation(line: 1756, column: 23, scope: !2974)
!2986 = !DILocation(line: 1756, column: 22, scope: !2974)
!2987 = !DILocation(line: 1759, column: 10, scope: !2974)
!2988 = !DILocation(line: 1759, column: 29, scope: !2974)
!2989 = !DILocation(line: 1760, column: 29, scope: !2974)
!2990 = !DILocation(line: 1760, column: 10, scope: !2974)
!2991 = !DILocation(line: 1761, column: 12, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1761, column: 7)
!2993 = !DILocation(line: 1761, column: 7, scope: !2974)
!2994 = !DILocation(line: 1762, column: 17, scope: !2992)
!2995 = !DILocation(line: 1762, column: 5, scope: !2992)
!2996 = !DILocation(line: 1766, column: 27, scope: !2974)
!2997 = !DILocation(line: 1766, column: 3, scope: !2974)
!2998 = !DILocation(line: 1767, column: 1, scope: !2974)
!2999 = distinct !DISubprogram(name: "update_curr_costs", scope: !3, file: !3, line: 2239, type: !3000, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3002)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{null, !575}
!3002 = !{!3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!3003 = !DILocalVariable(name: "a", arg: 1, scope: !2999, file: !3, line: 2239, type: !575)
!3004 = !DILocalVariable(name: "i", scope: !2999, file: !3, line: 2241, type: !566)
!3005 = !DILocalVariable(name: "hard_regno", scope: !2999, file: !3, line: 2241, type: !566)
!3006 = !DILocalVariable(name: "cost", scope: !2999, file: !3, line: 2241, type: !566)
!3007 = !DILocalVariable(name: "mode", scope: !2999, file: !3, line: 2242, type: !5)
!3008 = !DILocalVariable(name: "cover_class", scope: !2999, file: !3, line: 2243, type: !390)
!3009 = !DILocalVariable(name: "rclass", scope: !2999, file: !3, line: 2243, type: !390)
!3010 = !DILocalVariable(name: "another_a", scope: !2999, file: !3, line: 2244, type: !575)
!3011 = !DILocalVariable(name: "cp", scope: !2999, file: !3, line: 2245, type: !1716)
!3012 = !DILocalVariable(name: "next_cp", scope: !2999, file: !3, line: 2245, type: !1716)
!3013 = !DILocation(line: 0, scope: !2999)
!3014 = !DILocation(line: 2248, column: 17, scope: !2999)
!3015 = !DILocation(line: 2249, column: 19, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 2249, column: 7)
!3017 = !DILocation(line: 2249, column: 7, scope: !2999)
!3018 = !DILocation(line: 2251, column: 10, scope: !2999)
!3019 = !DILocation(line: 2252, column: 13, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 2252, column: 3)
!3021 = !DILocation(line: 0, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2266, column: 11)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 2253, column: 5)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 2252, column: 3)
!3025 = !DILocation(line: 0, scope: !3023)
!3026 = !DILocation(line: 2252, column: 8, scope: !3020)
!3027 = !DILocation(line: 0, scope: !3020)
!3028 = !DILocation(line: 2252, column: 36, scope: !3024)
!3029 = !DILocation(line: 2252, column: 3, scope: !3020)
!3030 = !DILocation(line: 2254, column: 15, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2254, column: 11)
!3032 = !DILocation(line: 2254, column: 21, scope: !3031)
!3033 = !DILocation(line: 2254, column: 11, scope: !3023)
!3034 = !DILocation(line: 2256, column: 18, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2255, column: 2)
!3036 = !DILocation(line: 2257, column: 20, scope: !3035)
!3037 = !DILocation(line: 2258, column: 2, scope: !3035)
!3038 = !DILocation(line: 2259, column: 20, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2259, column: 16)
!3040 = !DILocation(line: 2259, column: 27, scope: !3039)
!3041 = !DILocation(line: 2259, column: 16, scope: !3031)
!3042 = !DILocation(line: 2261, column: 18, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 2260, column: 2)
!3044 = !DILocation(line: 2263, column: 2, scope: !3043)
!3045 = !DILocation(line: 2265, column: 2, scope: !3039)
!3046 = !DILocation(line: 0, scope: !3031)
!3047 = !DILocation(line: 2266, column: 54, scope: !3022)
!3048 = !DILocation(line: 2266, column: 13, scope: !3022)
!3049 = !DILocation(line: 2268, column: 4, scope: !3022)
!3050 = !DILocation(line: 2268, column: 9, scope: !3022)
!3051 = !DILocation(line: 2269, column: 4, scope: !3022)
!3052 = !DILocation(line: 2269, column: 21, scope: !3022)
!3053 = !DILocation(line: 2269, column: 53, scope: !3022)
!3054 = !DILocation(line: 2266, column: 11, scope: !3023)
!3055 = !DILocation(line: 2271, column: 16, scope: !3023)
!3056 = !DILocation(line: 2272, column: 11, scope: !3023)
!3057 = !DILocation(line: 2273, column: 13, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 2273, column: 11)
!3059 = !DILocation(line: 2273, column: 11, scope: !3023)
!3060 = !DILocation(line: 2275, column: 19, scope: !3023)
!3061 = !DILocation(line: 2275, column: 25, scope: !3023)
!3062 = !DILocation(line: 2275, column: 15, scope: !3023)
!3063 = !DILocation(line: 2276, column: 10, scope: !3023)
!3064 = !DILocation(line: 2277, column: 10, scope: !3023)
!3065 = !DILocation(line: 2280, column: 16, scope: !3023)
!3066 = !DILocation(line: 2281, column: 3, scope: !3023)
!3067 = !DILocation(line: 2278, column: 7, scope: !3023)
!3068 = !DILocation(line: 2284, column: 19, scope: !3023)
!3069 = !DILocation(line: 2282, column: 7, scope: !3023)
!3070 = !DILocation(line: 2285, column: 52, scope: !3023)
!3071 = !DILocation(line: 2285, column: 57, scope: !3023)
!3072 = !DILocation(line: 2285, column: 7, scope: !3023)
!3073 = !DILocation(line: 2285, column: 45, scope: !3023)
!3074 = !DILocation(line: 2286, column: 61, scope: !3023)
!3075 = !DILocation(line: 2286, column: 66, scope: !3023)
!3076 = !DILocation(line: 2286, column: 7, scope: !3023)
!3077 = !DILocation(line: 2286, column: 54, scope: !3023)
!3078 = !DILocation(line: 2287, column: 5, scope: !3023)
!3079 = !DILocation(line: 2252, column: 3, scope: !3024)
!3080 = distinct !{!3080, !3029, !3081}
!3081 = !DILocation(line: 2287, column: 5, scope: !3020)
!3082 = !DILocation(line: 2288, column: 1, scope: !2999)
!3083 = !DILocation(line: 0, scope: !1841)
!3084 = !DILocation(line: 449, column: 3, scope: !1841)
!3085 = !DILocation(line: 450, column: 3, scope: !1841)
!3086 = !DILocation(line: 457, column: 17, scope: !1841)
!3087 = !DILocation(line: 458, column: 16, scope: !1841)
!3088 = !DILocation(line: 459, column: 10, scope: !1841)
!3089 = !DILocation(line: 462, column: 41, scope: !1841)
!3090 = !DILocation(line: 462, column: 39, scope: !1841)
!3091 = !DILocation(line: 462, column: 3, scope: !1841)
!3092 = !DILocation(line: 464, column: 7, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 464, column: 7)
!3094 = !DILocation(line: 464, column: 7, scope: !1841)
!3095 = !DILocation(line: 465, column: 19, scope: !3093)
!3096 = !DILocation(line: 465, column: 5, scope: !3093)
!3097 = !DILocation(line: 466, column: 3, scope: !1841)
!3098 = !DILocation(line: 467, column: 3, scope: !1841)
!3099 = !DILocation(line: 471, column: 3, scope: !1841)
!3100 = !DILocation(line: 0, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 501, column: 6)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !3, line: 498, column: 7)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 498, column: 7)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 474, column: 5)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 472, column: 3)
!3106 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 472, column: 3)
!3107 = !DILocation(line: 0, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 524, column: 11)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 519, column: 5)
!3110 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 517, column: 7)
!3111 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 516, column: 8)
!3112 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 515, column: 10)
!3113 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 503, column: 4)
!3114 = !DILocation(line: 472, column: 8, scope: !3106)
!3115 = !DILocation(line: 0, scope: !3106)
!3116 = !DILocation(line: 475, column: 19, scope: !3104)
!3117 = !DILocation(line: 475, column: 16, scope: !3104)
!3118 = !DILocation(line: 476, column: 7, scope: !3104)
!3119 = !DILocation(line: 478, column: 37, scope: !3104)
!3120 = !DILocation(line: 479, column: 21, scope: !3104)
!3121 = !DILocation(line: 478, column: 7, scope: !3104)
!3122 = !DILocation(line: 480, column: 17, scope: !3104)
!3123 = !DILocation(line: 482, column: 24, scope: !3104)
!3124 = !DILocation(line: 482, column: 39, scope: !3104)
!3125 = !DILocation(line: 482, column: 42, scope: !3104)
!3126 = !DILocation(line: 484, column: 19, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 484, column: 7)
!3128 = !DILocation(line: 0, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 487, column: 6)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 484, column: 7)
!3131 = !DILocation(line: 484, column: 12, scope: !3127)
!3132 = !DILocation(line: 0, scope: !3127)
!3133 = !DILocation(line: 485, column: 7, scope: !3130)
!3134 = !DILocation(line: 484, column: 7, scope: !3127)
!3135 = !DILocation(line: 494, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 493, column: 4)
!3137 = !DILocation(line: 494, column: 15, scope: !3136)
!3138 = !DILocation(line: 495, column: 6, scope: !3136)
!3139 = !DILocation(line: 495, column: 20, scope: !3136)
!3140 = !DILocation(line: 486, column: 6, scope: !3130)
!3141 = !DILocation(line: 484, column: 7, scope: !3130)
!3142 = distinct !{!3142, !3134, !3143}
!3143 = !DILocation(line: 496, column: 4, scope: !3127)
!3144 = !DILocation(line: 498, column: 7, scope: !3103)
!3145 = !DILocation(line: 489, column: 18, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 488, column: 4)
!3147 = !DILocation(line: 489, column: 6, scope: !3146)
!3148 = !DILocation(line: 489, column: 15, scope: !3146)
!3149 = !DILocation(line: 490, column: 23, scope: !3146)
!3150 = !DILocation(line: 490, column: 6, scope: !3146)
!3151 = !DILocation(line: 490, column: 20, scope: !3146)
!3152 = !DILocation(line: 498, column: 7, scope: !3102)
!3153 = !DILocation(line: 501, column: 14, scope: !3101)
!3154 = !DILocation(line: 501, column: 31, scope: !3101)
!3155 = !DILocation(line: 502, column: 10, scope: !3101)
!3156 = !DILocation(line: 501, column: 17, scope: !3101)
!3157 = !DILocation(line: 501, column: 6, scope: !3102)
!3158 = !DILocation(line: 504, column: 29, scope: !3113)
!3159 = !DILocation(line: 507, column: 10, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 507, column: 10)
!3161 = !DILocation(line: 507, column: 10, scope: !3113)
!3162 = !DILocation(line: 509, column: 21, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !3, line: 509, column: 7)
!3164 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 508, column: 8)
!3165 = !DILocation(line: 510, column: 7, scope: !3163)
!3166 = !DILocation(line: 509, column: 7, scope: !3163)
!3167 = !DILocation(line: 509, column: 7, scope: !3164)
!3168 = !DILocation(line: 512, column: 19, scope: !3164)
!3169 = !DILocation(line: 513, column: 5, scope: !3164)
!3170 = !DILocation(line: 512, column: 3, scope: !3164)
!3171 = !DILocation(line: 515, column: 10, scope: !3112)
!3172 = !DILocation(line: 514, column: 8, scope: !3164)
!3173 = !DILocation(line: 515, column: 10, scope: !3113)
!3174 = !DILocation(line: 517, column: 21, scope: !3110)
!3175 = !DILocation(line: 517, column: 60, scope: !3110)
!3176 = !DILocation(line: 518, column: 7, scope: !3110)
!3177 = !DILocation(line: 518, column: 10, scope: !3110)
!3178 = !DILocation(line: 518, column: 60, scope: !3110)
!3179 = !DILocation(line: 517, column: 7, scope: !3111)
!3180 = !DILocation(line: 520, column: 7, scope: !3109)
!3181 = !DILocation(line: 524, column: 34, scope: !3108)
!3182 = !DILocation(line: 524, column: 11, scope: !3108)
!3183 = !DILocation(line: 524, column: 11, scope: !3109)
!3184 = !DILocation(line: 529, column: 17, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 529, column: 15)
!3186 = !DILocation(line: 529, column: 15, scope: !3112)
!3187 = !DILocation(line: 533, column: 7, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 531, column: 8)
!3189 = !DILocation(line: 535, column: 6, scope: !3188)
!3190 = !DILocation(line: 532, column: 3, scope: !3188)
!3191 = !DILocation(line: 537, column: 7, scope: !3188)
!3192 = !DILocation(line: 538, column: 22, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 538, column: 7)
!3194 = !DILocation(line: 538, column: 7, scope: !3188)
!3195 = !DILocation(line: 0, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 540, column: 8)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 539, column: 5)
!3198 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 539, column: 5)
!3199 = !DILocation(line: 539, column: 10, scope: !3198)
!3200 = !DILocation(line: 0, scope: !3198)
!3201 = !DILocation(line: 539, column: 32, scope: !3197)
!3202 = !DILocation(line: 539, column: 5, scope: !3198)
!3203 = !DILocation(line: 541, column: 23, scope: !3196)
!3204 = !DILocation(line: 543, column: 15, scope: !3196)
!3205 = !DILocation(line: 545, column: 16, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 545, column: 14)
!3207 = !DILocation(line: 545, column: 14, scope: !3196)
!3208 = !DILocation(line: 547, column: 27, scope: !3196)
!3209 = !DILocation(line: 547, column: 10, scope: !3196)
!3210 = !DILocation(line: 547, column: 24, scope: !3196)
!3211 = !DILocation(line: 548, column: 8, scope: !3196)
!3212 = !DILocation(line: 539, column: 5, scope: !3197)
!3213 = distinct !{!3213, !3202, !3214}
!3214 = !DILocation(line: 548, column: 8, scope: !3198)
!3215 = !DILocation(line: 549, column: 22, scope: !3188)
!3216 = !DILocation(line: 549, column: 3, scope: !3188)
!3217 = !DILocation(line: 550, column: 8, scope: !3188)
!3218 = !DILocation(line: 0, scope: !3104)
!3219 = distinct !{!3219, !3144, !3220}
!3220 = !DILocation(line: 551, column: 4, scope: !3103)
!3221 = !DILocation(line: 552, column: 13, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 552, column: 11)
!3223 = !DILocation(line: 552, column: 11, scope: !3104)
!3224 = !DILocation(line: 472, column: 3, scope: !3105)
!3225 = distinct !{!3225, !3226, !3227}
!3226 = !DILocation(line: 472, column: 3, scope: !3106)
!3227 = !DILocation(line: 554, column: 5, scope: !3106)
!3228 = !DILocation(line: 557, column: 3, scope: !1841)
!3229 = !DILocation(line: 561, column: 3, scope: !1841)
!3230 = !DILocation(line: 562, column: 8, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 562, column: 3)
!3232 = !DILocation(line: 0, scope: !3231)
!3233 = !DILocation(line: 565, column: 7, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 564, column: 5)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 562, column: 3)
!3236 = !DILocation(line: 566, column: 13, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 566, column: 11)
!3238 = !DILocation(line: 566, column: 11, scope: !3234)
!3239 = !DILocation(line: 562, column: 3, scope: !3235)
!3240 = distinct !{!3240, !3241, !3242}
!3241 = !DILocation(line: 562, column: 3, scope: !3231)
!3242 = !DILocation(line: 568, column: 5, scope: !3231)
!3243 = !DILocation(line: 569, column: 3, scope: !1841)
!3244 = !DILocation(line: 0, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 579, column: 11)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 576, column: 5)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 575, column: 3)
!3248 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 575, column: 3)
!3249 = !DILocation(line: 0, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 583, column: 11)
!3251 = !DILocation(line: 575, column: 8, scope: !3248)
!3252 = !DILocation(line: 570, column: 28, scope: !1841)
!3253 = !DILocation(line: 461, column: 19, scope: !1841)
!3254 = !DILocation(line: 575, column: 17, scope: !3247)
!3255 = !DILocation(line: 575, column: 3, scope: !3248)
!3256 = !DILocation(line: 577, column: 20, scope: !3246)
!3257 = !DILocation(line: 580, column: 4, scope: !3245)
!3258 = !DILocation(line: 583, column: 13, scope: !3250)
!3259 = !DILocation(line: 584, column: 4, scope: !3250)
!3260 = !DILocation(line: 584, column: 7, scope: !3250)
!3261 = !DILocation(line: 583, column: 11, scope: !3246)
!3262 = !DILocation(line: 588, column: 19, scope: !3246)
!3263 = !DILocation(line: 589, column: 13, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 589, column: 11)
!3265 = !DILocation(line: 590, column: 4, scope: !3264)
!3266 = !DILocation(line: 590, column: 52, scope: !3264)
!3267 = !DILocation(line: 590, column: 7, scope: !3264)
!3268 = !DILocation(line: 589, column: 11, scope: !3246)
!3269 = !DILocation(line: 595, column: 13, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 593, column: 2)
!3271 = !DILocation(line: 596, column: 16, scope: !3270)
!3272 = !DILocation(line: 597, column: 11, scope: !3270)
!3273 = !DILocation(line: 597, column: 9, scope: !3270)
!3274 = !DILocation(line: 597, column: 49, scope: !3270)
!3275 = !DILocation(line: 599, column: 14, scope: !3270)
!3276 = !DILocation(line: 600, column: 2, scope: !3270)
!3277 = !DILocation(line: 0, scope: !3246)
!3278 = !DILocation(line: 603, column: 25, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 603, column: 11)
!3280 = !DILocation(line: 603, column: 11, scope: !3246)
!3281 = !DILocation(line: 575, column: 32, scope: !3247)
!3282 = !DILocation(line: 575, column: 3, scope: !3247)
!3283 = distinct !{!3283, !3255, !3284}
!3284 = !DILocation(line: 609, column: 5, scope: !3248)
!3285 = !DILocation(line: 610, column: 21, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 610, column: 7)
!3287 = !DILocation(line: 610, column: 7, scope: !1841)
!3288 = !DILocation(line: 612, column: 24, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 612, column: 11)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 611, column: 5)
!3291 = !DILocation(line: 612, column: 50, scope: !3289)
!3292 = !DILocation(line: 612, column: 21, scope: !3289)
!3293 = !DILocation(line: 612, column: 57, scope: !3289)
!3294 = !DILocation(line: 612, column: 71, scope: !3289)
!3295 = !DILocation(line: 613, column: 2, scope: !3289)
!3296 = !DILocation(line: 618, column: 7, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 618, column: 7)
!3298 = !DILocation(line: 617, column: 2, scope: !1841)
!3299 = !DILocation(line: 618, column: 26, scope: !3297)
!3300 = !DILocation(line: 619, column: 26, scope: !3297)
!3301 = !DILocation(line: 619, column: 7, scope: !3297)
!3302 = !DILocation(line: 620, column: 10, scope: !3297)
!3303 = !DILocation(line: 620, column: 51, scope: !3297)
!3304 = !DILocation(line: 618, column: 7, scope: !1841)
!3305 = !DILocation(line: 622, column: 12, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 622, column: 7)
!3307 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 621, column: 5)
!3308 = !DILocation(line: 0, scope: !3306)
!3309 = !DILocation(line: 626, column: 4, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 624, column: 2)
!3311 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 622, column: 7)
!3312 = !DILocation(line: 626, column: 21, scope: !3310)
!3313 = !DILocation(line: 626, column: 25, scope: !3310)
!3314 = !DILocation(line: 627, column: 10, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 627, column: 8)
!3316 = !DILocation(line: 627, column: 8, scope: !3310)
!3317 = !DILocation(line: 622, column: 7, scope: !3311)
!3318 = distinct !{!3318, !3319, !3320}
!3319 = !DILocation(line: 622, column: 7, scope: !3306)
!3320 = !DILocation(line: 629, column: 2, scope: !3306)
!3321 = !DILocation(line: 631, column: 19, scope: !3307)
!3322 = !DILocation(line: 631, column: 36, scope: !3307)
!3323 = !DILocation(line: 631, column: 7, scope: !3307)
!3324 = !DILocation(line: 637, column: 12, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 637, column: 7)
!3326 = !DILocation(line: 637, column: 21, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 637, column: 7)
!3328 = !DILocation(line: 0, scope: !3325)
!3329 = !DILocation(line: 637, column: 7, scope: !3325)
!3330 = !DILocation(line: 639, column: 8, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 638, column: 2)
!3332 = !DILocation(line: 640, column: 4, scope: !3331)
!3333 = !DILocation(line: 640, column: 40, scope: !3331)
!3334 = !DILocation(line: 641, column: 4, scope: !3331)
!3335 = !DILocation(line: 641, column: 39, scope: !3331)
!3336 = !DILocation(line: 642, column: 4, scope: !3331)
!3337 = !DILocation(line: 643, column: 8, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 643, column: 8)
!3339 = !DILocation(line: 643, column: 34, scope: !3338)
!3340 = !DILocation(line: 643, column: 41, scope: !3338)
!3341 = !DILocation(line: 643, column: 55, scope: !3338)
!3342 = !DILocation(line: 643, column: 38, scope: !3338)
!3343 = !DILocation(line: 645, column: 8, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 644, column: 6)
!3345 = !DILocation(line: 646, column: 8, scope: !3344)
!3346 = !DILocation(line: 647, column: 17, scope: !3344)
!3347 = !DILocation(line: 647, column: 8, scope: !3344)
!3348 = !DILocation(line: 648, column: 6, scope: !3344)
!3349 = !DILocation(line: 637, column: 27, scope: !3327)
!3350 = !DILocation(line: 637, column: 7, scope: !3327)
!3351 = distinct !{!3351, !3329, !3352}
!3352 = !DILocation(line: 649, column: 2, scope: !3325)
!3353 = !DILocation(line: 652, column: 23, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 652, column: 7)
!3355 = !DILocation(line: 652, column: 7, scope: !1841)
!3356 = !DILocation(line: 653, column: 5, scope: !3354)
!3357 = !DILocation(line: 653, column: 42, scope: !3354)
!3358 = !DILocation(line: 654, column: 8, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 654, column: 3)
!3360 = !DILocation(line: 0, scope: !3359)
!3361 = !DILocation(line: 657, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 656, column: 5)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 654, column: 3)
!3364 = !DILocation(line: 657, column: 30, scope: !3362)
!3365 = !DILocation(line: 658, column: 7, scope: !3362)
!3366 = !DILocation(line: 658, column: 30, scope: !3362)
!3367 = !DILocation(line: 660, column: 2, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 659, column: 11)
!3369 = !DILocation(line: 663, column: 7, scope: !3362)
!3370 = !DILocation(line: 664, column: 13, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 664, column: 11)
!3372 = !DILocation(line: 664, column: 11, scope: !3362)
!3373 = !DILocation(line: 654, column: 3, scope: !3363)
!3374 = distinct !{!3374, !3375, !3376}
!3375 = !DILocation(line: 654, column: 3, scope: !3359)
!3376 = !DILocation(line: 666, column: 5, scope: !3359)
!3377 = !DILocation(line: 667, column: 10, scope: !1841)
!3378 = !DILocation(line: 667, column: 3, scope: !1841)
!3379 = !DILocation(line: 668, column: 1, scope: !1841)
!3380 = distinct !DISubprogram(name: "ira_sort_regnos_for_alter_reg", scope: !3, file: !3, line: 2643, type: !3381, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !573, !566, !1838}
!3383 = !{!3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395}
!3384 = !DILocalVariable(name: "pseudo_regnos", arg: 1, scope: !3380, file: !3, line: 2643, type: !573)
!3385 = !DILocalVariable(name: "n", arg: 2, scope: !3380, file: !3, line: 2643, type: !566)
!3386 = !DILocalVariable(name: "reg_max_ref_width", arg: 3, scope: !3380, file: !3, line: 2644, type: !1838)
!3387 = !DILocalVariable(name: "max_regno", scope: !3380, file: !3, line: 2646, type: !566)
!3388 = !DILocalVariable(name: "i", scope: !3380, file: !3, line: 2647, type: !566)
!3389 = !DILocalVariable(name: "regno", scope: !3380, file: !3, line: 2647, type: !566)
!3390 = !DILocalVariable(name: "num", scope: !3380, file: !3, line: 2647, type: !566)
!3391 = !DILocalVariable(name: "slot_num", scope: !3380, file: !3, line: 2647, type: !566)
!3392 = !DILocalVariable(name: "allocno", scope: !3380, file: !3, line: 2648, type: !575)
!3393 = !DILocalVariable(name: "a", scope: !3380, file: !3, line: 2648, type: !575)
!3394 = !DILocalVariable(name: "ai", scope: !3380, file: !3, line: 2649, type: !2605)
!3395 = !DILocalVariable(name: "spilled_coalesced_allocnos", scope: !3380, file: !3, line: 2650, type: !574)
!3396 = !DILocation(line: 0, scope: !3380)
!3397 = !DILocation(line: 2646, column: 19, scope: !3380)
!3398 = !DILocation(line: 2648, column: 3, scope: !3380)
!3399 = !DILocation(line: 2649, column: 3, scope: !3380)
!3400 = !DILocation(line: 2652, column: 40, scope: !3380)
!3401 = !DILocation(line: 2652, column: 38, scope: !3380)
!3402 = !DILocation(line: 2654, column: 29, scope: !3380)
!3403 = !DILocation(line: 2654, column: 27, scope: !3380)
!3404 = !DILocation(line: 2655, column: 8, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2655, column: 3)
!3406 = !DILocation(line: 0, scope: !3405)
!3407 = !DILocation(line: 2655, column: 17, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 2655, column: 3)
!3409 = !DILocation(line: 2655, column: 3, scope: !3405)
!3410 = !DILocation(line: 2657, column: 15, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 2656, column: 5)
!3412 = !DILocation(line: 2658, column: 17, scope: !3411)
!3413 = !DILocation(line: 2659, column: 19, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 2659, column: 11)
!3415 = !DILocation(line: 2659, column: 11, scope: !3411)
!3416 = !DILocation(line: 2660, column: 18, scope: !3414)
!3417 = !DILocation(line: 2661, column: 4, scope: !3414)
!3418 = !DILocation(line: 2660, column: 2, scope: !3414)
!3419 = !DILocation(line: 2655, column: 23, scope: !3408)
!3420 = !DILocation(line: 2655, column: 3, scope: !3408)
!3421 = distinct !{!3421, !3409, !3422}
!3422 = !DILocation(line: 2662, column: 5, scope: !3405)
!3423 = !DILocation(line: 2663, column: 23, scope: !3380)
!3424 = !DILocation(line: 2664, column: 3, scope: !3380)
!3425 = !DILocation(line: 2665, column: 20, scope: !3380)
!3426 = !DILocation(line: 2665, column: 3, scope: !3380)
!3427 = !DILocation(line: 2667, column: 29, scope: !3380)
!3428 = !DILocation(line: 2667, column: 39, scope: !3380)
!3429 = !DILocation(line: 2667, column: 15, scope: !3380)
!3430 = !DILocation(line: 2667, column: 5, scope: !3380)
!3431 = !DILocation(line: 2669, column: 15, scope: !3380)
!3432 = !DILocation(line: 2669, column: 5, scope: !3380)
!3433 = !DILocation(line: 2670, column: 3, scope: !3380)
!3434 = !DILocation(line: 2671, column: 3, scope: !3380)
!3435 = !DILocation(line: 2675, column: 15, scope: !3380)
!3436 = !DILocation(line: 2675, column: 30, scope: !3380)
!3437 = !DILocation(line: 2675, column: 3, scope: !3380)
!3438 = !DILocation(line: 2680, column: 39, scope: !3380)
!3439 = !DILocation(line: 2681, column: 11, scope: !3380)
!3440 = !DILocation(line: 2680, column: 25, scope: !3380)
!3441 = !DILocation(line: 2680, column: 7, scope: !3380)
!3442 = !DILocation(line: 2684, column: 9, scope: !3380)
!3443 = !DILocation(line: 2686, column: 7, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2686, column: 7)
!3445 = !DILocation(line: 2687, column: 7, scope: !3444)
!3446 = !DILocation(line: 2687, column: 10, scope: !3444)
!3447 = !DILocation(line: 2686, column: 7, scope: !3380)
!3448 = !DILocation(line: 2689, column: 7, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 2688, column: 5)
!3450 = !DILocation(line: 2691, column: 7, scope: !3449)
!3451 = !DILocation(line: 2697, column: 13, scope: !3449)
!3452 = !DILocation(line: 2699, column: 5, scope: !3449)
!3453 = !DILocation(line: 2700, column: 20, scope: !3380)
!3454 = !DILocation(line: 2700, column: 3, scope: !3380)
!3455 = !DILocation(line: 2701, column: 23, scope: !3380)
!3456 = !DILocation(line: 0, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2719, column: 7)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 2708, column: 5)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 2707, column: 3)
!3460 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2707, column: 3)
!3461 = !DILocation(line: 2707, column: 8, scope: !3460)
!3462 = !DILocation(line: 0, scope: !3460)
!3463 = !DILocation(line: 2706, column: 12, scope: !3380)
!3464 = !DILocation(line: 2707, column: 17, scope: !3459)
!3465 = !DILocation(line: 2707, column: 3, scope: !3460)
!3466 = !DILocation(line: 2709, column: 17, scope: !3458)
!3467 = !DILocation(line: 2710, column: 11, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2710, column: 11)
!3469 = !DILocation(line: 2710, column: 53, scope: !3468)
!3470 = !DILocation(line: 2711, column: 4, scope: !3468)
!3471 = !DILocation(line: 2711, column: 7, scope: !3468)
!3472 = !DILocation(line: 2711, column: 36, scope: !3468)
!3473 = !DILocation(line: 2712, column: 4, scope: !3468)
!3474 = !DILocation(line: 2712, column: 8, scope: !3468)
!3475 = !DILocation(line: 2712, column: 34, scope: !3468)
!3476 = !DILocation(line: 2712, column: 32, scope: !3468)
!3477 = !DILocation(line: 2713, column: 8, scope: !3468)
!3478 = !DILocation(line: 2713, column: 12, scope: !3468)
!3479 = !DILocation(line: 2713, column: 57, scope: !3468)
!3480 = !DILocation(line: 2714, column: 5, scope: !3468)
!3481 = !DILocation(line: 2714, column: 8, scope: !3468)
!3482 = !DILocation(line: 2710, column: 11, scope: !3458)
!3483 = !DILocation(line: 2716, column: 11, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2716, column: 11)
!3485 = !DILocation(line: 2716, column: 37, scope: !3484)
!3486 = !DILocation(line: 2716, column: 44, scope: !3484)
!3487 = !DILocation(line: 2716, column: 58, scope: !3484)
!3488 = !DILocation(line: 2716, column: 41, scope: !3484)
!3489 = !DILocation(line: 2717, column: 2, scope: !3484)
!3490 = !DILocation(line: 2719, column: 16, scope: !3457)
!3491 = !DILocation(line: 2719, column: 14, scope: !3457)
!3492 = !DILocation(line: 0, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 2721, column: 2)
!3494 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 2719, column: 7)
!3495 = !DILocation(line: 2719, column: 12, scope: !3457)
!3496 = !DILocation(line: 2723, column: 4, scope: !3493)
!3497 = !DILocation(line: 2723, column: 27, scope: !3493)
!3498 = !DILocation(line: 2724, column: 8, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2724, column: 8)
!3500 = !DILocation(line: 2724, column: 34, scope: !3499)
!3501 = !DILocation(line: 2724, column: 41, scope: !3499)
!3502 = !DILocation(line: 2724, column: 55, scope: !3499)
!3503 = !DILocation(line: 2724, column: 38, scope: !3499)
!3504 = !DILocation(line: 2726, column: 8, scope: !3499)
!3505 = !DILocation(line: 2726, column: 25, scope: !3499)
!3506 = !DILocation(line: 2726, column: 44, scope: !3499)
!3507 = !DILocation(line: 2727, column: 8, scope: !3499)
!3508 = !DILocation(line: 2725, column: 6, scope: !3499)
!3509 = !DILocation(line: 2730, column: 10, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 2730, column: 8)
!3511 = !DILocation(line: 2730, column: 8, scope: !3493)
!3512 = !DILocation(line: 2720, column: 9, scope: !3494)
!3513 = !DILocation(line: 2720, column: 7, scope: !3494)
!3514 = !DILocation(line: 2719, column: 7, scope: !3494)
!3515 = distinct !{!3515, !3516, !3517}
!3516 = !DILocation(line: 2719, column: 7, scope: !3457)
!3517 = !DILocation(line: 2732, column: 2, scope: !3457)
!3518 = !DILocation(line: 2718, column: 15, scope: !3458)
!3519 = !DILocation(line: 2733, column: 11, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2733, column: 11)
!3521 = !DILocation(line: 2733, column: 37, scope: !3520)
!3522 = !DILocation(line: 2733, column: 44, scope: !3520)
!3523 = !DILocation(line: 2733, column: 58, scope: !3520)
!3524 = !DILocation(line: 2733, column: 41, scope: !3520)
!3525 = !DILocation(line: 2734, column: 2, scope: !3520)
!3526 = !DILocation(line: 2707, column: 25, scope: !3459)
!3527 = !DILocation(line: 2707, column: 3, scope: !3459)
!3528 = distinct !{!3528, !3465, !3529}
!3529 = !DILocation(line: 2735, column: 5, scope: !3460)
!3530 = !DILocation(line: 2736, column: 46, scope: !3380)
!3531 = !DILocation(line: 2736, column: 35, scope: !3380)
!3532 = !DILocation(line: 2737, column: 3, scope: !3380)
!3533 = !DILocation(line: 2739, column: 23, scope: !3380)
!3534 = !DILocation(line: 2741, column: 3, scope: !3380)
!3535 = !DILocation(line: 2747, column: 3, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 2747, column: 3)
!3537 = !DILocation(line: 2747, column: 3, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 2747, column: 3)
!3539 = !DILocation(line: 2749, column: 45, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 2748, column: 5)
!3541 = !DILocation(line: 2749, column: 7, scope: !3540)
!3542 = !DILocation(line: 2749, column: 43, scope: !3540)
!3543 = !DILocation(line: 2750, column: 7, scope: !3540)
!3544 = !DILocation(line: 2750, column: 42, scope: !3540)
!3545 = distinct !{!3545, !3535, !3546}
!3546 = !DILocation(line: 2751, column: 5, scope: !3536)
!3547 = !DILocation(line: 2752, column: 13, scope: !3380)
!3548 = !DILocation(line: 2752, column: 3, scope: !3380)
!3549 = !DILocation(line: 2753, column: 13, scope: !3380)
!3550 = !DILocation(line: 2753, column: 3, scope: !3380)
!3551 = !DILocation(line: 2754, column: 1, scope: !3380)
!3552 = distinct !DISubprogram(name: "coalesce_allocnos", scope: !3, file: !3, line: 1614, type: !3553, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3555)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !565}
!3555 = !{!3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568}
!3556 = !DILocalVariable(name: "reload_p", arg: 1, scope: !3552, file: !3, line: 1614, type: !565)
!3557 = !DILocalVariable(name: "a", scope: !3552, file: !3, line: 1616, type: !575)
!3558 = !DILocalVariable(name: "cp", scope: !3552, file: !3, line: 1617, type: !1716)
!3559 = !DILocalVariable(name: "next_cp", scope: !3552, file: !3, line: 1617, type: !1716)
!3560 = !DILocalVariable(name: "sorted_copies", scope: !3552, file: !3, line: 1617, type: !1804)
!3561 = !DILocalVariable(name: "cover_class", scope: !3552, file: !3, line: 1618, type: !390)
!3562 = !DILocalVariable(name: "mode", scope: !3552, file: !3, line: 1619, type: !5)
!3563 = !DILocalVariable(name: "j", scope: !3552, file: !3, line: 1620, type: !7)
!3564 = !DILocalVariable(name: "i", scope: !3552, file: !3, line: 1621, type: !566)
!3565 = !DILocalVariable(name: "n", scope: !3552, file: !3, line: 1621, type: !566)
!3566 = !DILocalVariable(name: "cp_num", scope: !3552, file: !3, line: 1621, type: !566)
!3567 = !DILocalVariable(name: "regno", scope: !3552, file: !3, line: 1621, type: !566)
!3568 = !DILocalVariable(name: "bi", scope: !3552, file: !3, line: 1622, type: !3569)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !641, line: 218, baseType: !3570)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 203, size: 256, elements: !3571)
!3571 = !{!3572, !3573, !3574, !3575}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3570, file: !641, line: 206, baseType: !644, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3570, file: !641, line: 209, baseType: !644, size: 64, offset: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3570, file: !641, line: 212, baseType: !7, size: 32, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3570, file: !641, line: 217, baseType: !654, size: 64, offset: 192)
!3576 = !DILocation(line: 0, scope: !3552)
!3577 = !DILocation(line: 1620, column: 3, scope: !3552)
!3578 = !DILocation(line: 1622, column: 3, scope: !3552)
!3579 = !DILocation(line: 1624, column: 48, scope: !3552)
!3580 = !DILocation(line: 1625, column: 13, scope: !3552)
!3581 = !DILocation(line: 1624, column: 34, scope: !3552)
!3582 = !DILocation(line: 1624, column: 19, scope: !3552)
!3583 = !DILocation(line: 1628, column: 3, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 1628, column: 3)
!3585 = !DILocation(line: 0, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 1632, column: 11)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 1629, column: 5)
!3588 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1628, column: 3)
!3589 = !DILocation(line: 1626, column: 10, scope: !3552)
!3590 = !DILocation(line: 1628, column: 3, scope: !3588)
!3591 = !DILocation(line: 1630, column: 11, scope: !3587)
!3592 = !DILocation(line: 1630, column: 24, scope: !3587)
!3593 = !DILocation(line: 1631, column: 15, scope: !3587)
!3594 = !DILocation(line: 1632, column: 23, scope: !3586)
!3595 = !DILocation(line: 1632, column: 26, scope: !3586)
!3596 = !DILocation(line: 1633, column: 4, scope: !3586)
!3597 = !DILocation(line: 1634, column: 8, scope: !3586)
!3598 = !DILocation(line: 1634, column: 14, scope: !3586)
!3599 = !DILocation(line: 1634, column: 37, scope: !3586)
!3600 = !DILocation(line: 1634, column: 40, scope: !3586)
!3601 = !DILocation(line: 1634, column: 63, scope: !3586)
!3602 = !DILocation(line: 1635, column: 5, scope: !3586)
!3603 = !DILocation(line: 1635, column: 17, scope: !3586)
!3604 = !DILocation(line: 1635, column: 15, scope: !3586)
!3605 = !DILocation(line: 1636, column: 9, scope: !3586)
!3606 = !DILocation(line: 1636, column: 13, scope: !3586)
!3607 = !DILocation(line: 1636, column: 40, scope: !3586)
!3608 = !DILocation(line: 1637, column: 6, scope: !3586)
!3609 = !DILocation(line: 1637, column: 9, scope: !3586)
!3610 = !DILocation(line: 1632, column: 11, scope: !3587)
!3611 = !DILocation(line: 1639, column: 21, scope: !3587)
!3612 = !DILocation(line: 1640, column: 14, scope: !3587)
!3613 = !DILocation(line: 1641, column: 17, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 1641, column: 7)
!3615 = !DILocation(line: 1641, column: 12, scope: !3614)
!3616 = !DILocation(line: 0, scope: !3614)
!3617 = !DILocation(line: 1641, column: 40, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1641, column: 7)
!3619 = !DILocation(line: 1641, column: 7, scope: !3614)
!3620 = !DILocation(line: 1643, column: 12, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1643, column: 8)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 1642, column: 2)
!3623 = !DILocation(line: 1643, column: 18, scope: !3621)
!3624 = !DILocation(line: 1643, column: 8, scope: !3622)
!3625 = !DILocation(line: 1664, column: 17, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1664, column: 13)
!3627 = !DILocation(line: 1664, column: 24, scope: !3626)
!3628 = !DILocation(line: 1664, column: 13, scope: !3621)
!3629 = !DILocation(line: 1667, column: 6, scope: !3626)
!3630 = !DILocation(line: 1665, column: 20, scope: !3626)
!3631 = !DILocation(line: 1665, column: 6, scope: !3626)
!3632 = !DILocation(line: 1645, column: 22, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1644, column: 6)
!3634 = !DILocation(line: 1646, column: 16, scope: !3633)
!3635 = !DILocation(line: 1652, column: 10, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 1651, column: 12)
!3637 = !DILocation(line: 1652, column: 43, scope: !3636)
!3638 = !DILocation(line: 1653, column: 10, scope: !3636)
!3639 = !DILocation(line: 1653, column: 13, scope: !3636)
!3640 = !DILocation(line: 1653, column: 39, scope: !3636)
!3641 = !DILocation(line: 1654, column: 5, scope: !3636)
!3642 = !DILocation(line: 1654, column: 13, scope: !3636)
!3643 = !DILocation(line: 1654, column: 18, scope: !3636)
!3644 = !DILocation(line: 1654, column: 26, scope: !3636)
!3645 = !DILocation(line: 1654, column: 33, scope: !3636)
!3646 = !DILocation(line: 1654, column: 29, scope: !3636)
!3647 = !DILocation(line: 1655, column: 5, scope: !3636)
!3648 = !DILocation(line: 1655, column: 21, scope: !3636)
!3649 = !DILocation(line: 1655, column: 26, scope: !3636)
!3650 = !DILocation(line: 1656, column: 9, scope: !3636)
!3651 = !DILocation(line: 1657, column: 6, scope: !3636)
!3652 = !DILocation(line: 1658, column: 6, scope: !3636)
!3653 = !DILocation(line: 1659, column: 6, scope: !3636)
!3654 = !DILocation(line: 1660, column: 10, scope: !3636)
!3655 = !DILocation(line: 1661, column: 7, scope: !3636)
!3656 = !DILocation(line: 1651, column: 12, scope: !3633)
!3657 = !DILocation(line: 1662, column: 23, scope: !3636)
!3658 = !DILocation(line: 1662, column: 3, scope: !3636)
!3659 = !DILocation(line: 1662, column: 27, scope: !3636)
!3660 = !DILocation(line: 0, scope: !3621)
!3661 = !DILocation(line: 1641, column: 7, scope: !3618)
!3662 = distinct !{!3662, !3619, !3663}
!3663 = !DILocation(line: 1668, column: 2, scope: !3614)
!3664 = !DILocation(line: 1657, column: 9, scope: !3636)
!3665 = !DILocation(line: 1658, column: 9, scope: !3636)
!3666 = !DILocation(line: 1658, column: 41, scope: !3636)
!3667 = !DILocation(line: 1659, column: 19, scope: !3636)
!3668 = !DILocation(line: 1659, column: 16, scope: !3636)
!3669 = !DILocation(line: 1660, column: 16, scope: !3636)
!3670 = !DILocation(line: 1661, column: 10, scope: !3636)
!3671 = !DILocation(line: 1661, column: 37, scope: !3636)
!3672 = distinct !{!3672, !3583, !3673}
!3673 = !DILocation(line: 1669, column: 5, scope: !3584)
!3674 = !DILocation(line: 1671, column: 30, scope: !3552)
!3675 = !DILocation(line: 1671, column: 3, scope: !3552)
!3676 = !DILocation(line: 1676, column: 3, scope: !3552)
!3677 = !DILocation(line: 0, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1697, column: 7)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 1677, column: 5)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1676, column: 3)
!3681 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 1676, column: 3)
!3682 = !DILocation(line: 1676, column: 3, scope: !3681)
!3683 = !DILocation(line: 1676, column: 17, scope: !3680)
!3684 = !DILocation(line: 1678, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1678, column: 7)
!3686 = !DILocation(line: 0, scope: !3685)
!3687 = !DILocation(line: 1678, column: 21, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 1678, column: 7)
!3689 = !DILocation(line: 1680, column: 9, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1679, column: 2)
!3691 = !DILocation(line: 1681, column: 44, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 1681, column: 8)
!3693 = !DILocation(line: 1681, column: 55, scope: !3692)
!3694 = !DILocation(line: 1681, column: 10, scope: !3692)
!3695 = !DILocation(line: 1681, column: 8, scope: !3690)
!3696 = !DILocation(line: 1683, column: 28, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 1682, column: 6)
!3698 = !DILocation(line: 1684, column: 12, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 1684, column: 12)
!3700 = !DILocation(line: 1684, column: 38, scope: !3699)
!3701 = !DILocation(line: 1684, column: 45, scope: !3699)
!3702 = !DILocation(line: 1684, column: 59, scope: !3699)
!3703 = !DILocation(line: 1684, column: 42, scope: !3699)
!3704 = !DILocation(line: 1688, column: 10, scope: !3699)
!3705 = !DILocation(line: 1688, column: 15, scope: !3699)
!3706 = !DILocation(line: 1688, column: 40, scope: !3699)
!3707 = !DILocation(line: 1689, column: 6, scope: !3699)
!3708 = !DILocation(line: 1689, column: 32, scope: !3699)
!3709 = !DILocation(line: 1690, column: 10, scope: !3699)
!3710 = !DILocation(line: 1685, column: 3, scope: !3699)
!3711 = !DILocation(line: 1691, column: 28, scope: !3697)
!3712 = !DILocation(line: 1691, column: 39, scope: !3697)
!3713 = !DILocation(line: 1691, column: 8, scope: !3697)
!3714 = !DILocation(line: 1692, column: 9, scope: !3697)
!3715 = !DILocation(line: 1693, column: 8, scope: !3697)
!3716 = !DILocation(line: 1678, column: 32, scope: !3688)
!3717 = !DILocation(line: 1678, column: 7, scope: !3688)
!3718 = distinct !{!3718, !3684, !3719}
!3719 = !DILocation(line: 1695, column: 2, scope: !3685)
!3720 = !DILocation(line: 1697, column: 12, scope: !3678)
!3721 = !DILocation(line: 0, scope: !3679)
!3722 = !DILocation(line: 1697, column: 21, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3678, file: !3, line: 1697, column: 7)
!3724 = !DILocation(line: 1697, column: 7, scope: !3678)
!3725 = distinct !{!3725, !3682, !3726}
!3726 = !DILocation(line: 1705, column: 5, scope: !3681)
!3727 = !DILocation(line: 1699, column: 9, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 1698, column: 2)
!3729 = !DILocation(line: 1700, column: 8, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1700, column: 8)
!3731 = !DILocation(line: 1701, column: 11, scope: !3730)
!3732 = !DILocation(line: 1701, column: 8, scope: !3730)
!3733 = !DILocation(line: 1700, column: 8, scope: !3728)
!3734 = !DILocation(line: 1702, column: 21, scope: !3730)
!3735 = !DILocation(line: 1702, column: 6, scope: !3730)
!3736 = !DILocation(line: 1702, column: 25, scope: !3730)
!3737 = !DILocation(line: 1697, column: 32, scope: !3723)
!3738 = !DILocation(line: 1697, column: 7, scope: !3723)
!3739 = distinct !{!3739, !3724, !3740}
!3740 = !DILocation(line: 1703, column: 2, scope: !3678)
!3741 = !DILocation(line: 1706, column: 3, scope: !3552)
!3742 = !DILocation(line: 1707, column: 1, scope: !3552)
!3743 = distinct !DISubprogram(name: "setup_coalesced_allocno_costs_and_nums", scope: !3, file: !3, line: 2459, type: !3744, scopeLine: 2460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3746)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{null, !573, !566}
!3746 = !{!3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754}
!3747 = !DILocalVariable(name: "pseudo_regnos", arg: 1, scope: !3743, file: !3, line: 2459, type: !573)
!3748 = !DILocalVariable(name: "n", arg: 2, scope: !3743, file: !3, line: 2459, type: !566)
!3749 = !DILocalVariable(name: "i", scope: !3743, file: !3, line: 2461, type: !566)
!3750 = !DILocalVariable(name: "num", scope: !3743, file: !3, line: 2461, type: !566)
!3751 = !DILocalVariable(name: "regno", scope: !3743, file: !3, line: 2461, type: !566)
!3752 = !DILocalVariable(name: "cost", scope: !3743, file: !3, line: 2461, type: !566)
!3753 = !DILocalVariable(name: "allocno", scope: !3743, file: !3, line: 2462, type: !575)
!3754 = !DILocalVariable(name: "a", scope: !3743, file: !3, line: 2462, type: !575)
!3755 = !DILocation(line: 0, scope: !3743)
!3756 = !DILocation(line: 2464, column: 8, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 2464, column: 3)
!3758 = !DILocation(line: 0, scope: !3757)
!3759 = !DILocation(line: 2464, column: 23, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 2464, column: 3)
!3761 = !DILocation(line: 2464, column: 3, scope: !3757)
!3762 = !DILocation(line: 2466, column: 15, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 2465, column: 5)
!3764 = !DILocation(line: 2467, column: 17, scope: !3763)
!3765 = !DILocation(line: 2468, column: 19, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2468, column: 11)
!3767 = !DILocation(line: 2468, column: 11, scope: !3763)
!3768 = !DILocation(line: 2470, column: 4, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2469, column: 2)
!3770 = !DILocation(line: 2470, column: 40, scope: !3769)
!3771 = !DILocation(line: 2471, column: 41, scope: !3769)
!3772 = !DILocation(line: 2471, column: 4, scope: !3769)
!3773 = !DILocation(line: 2471, column: 39, scope: !3769)
!3774 = !DILocation(line: 2472, column: 4, scope: !3769)
!3775 = !DILocation(line: 2474, column: 11, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2474, column: 11)
!3777 = !DILocation(line: 2474, column: 53, scope: !3776)
!3778 = !DILocation(line: 2474, column: 11, scope: !3763)
!3779 = !DILocation(line: 2477, column: 12, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2477, column: 7)
!3781 = !DILocation(line: 0, scope: !3780)
!3782 = !DILocation(line: 2480, column: 12, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 2479, column: 2)
!3784 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2477, column: 7)
!3785 = !DILocation(line: 2480, column: 9, scope: !3783)
!3786 = !DILocation(line: 2481, column: 10, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 2481, column: 8)
!3788 = !DILocation(line: 2481, column: 8, scope: !3783)
!3789 = !DILocation(line: 2477, column: 7, scope: !3784)
!3790 = distinct !{!3790, !3791, !3792}
!3791 = !DILocation(line: 2477, column: 7, scope: !3780)
!3792 = !DILocation(line: 2483, column: 2, scope: !3780)
!3793 = !DILocation(line: 2476, column: 10, scope: !3763)
!3794 = !DILocation(line: 2484, column: 12, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2484, column: 7)
!3796 = !DILocation(line: 0, scope: !3795)
!3797 = !DILocation(line: 2487, column: 4, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 2486, column: 2)
!3799 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 2484, column: 7)
!3800 = !DILocation(line: 2487, column: 32, scope: !3798)
!3801 = !DILocation(line: 2487, column: 51, scope: !3798)
!3802 = !DILocation(line: 2488, column: 4, scope: !3798)
!3803 = !DILocation(line: 2488, column: 33, scope: !3798)
!3804 = !DILocation(line: 2488, column: 52, scope: !3798)
!3805 = !DILocation(line: 2489, column: 10, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2489, column: 8)
!3807 = !DILocation(line: 2489, column: 8, scope: !3798)
!3808 = !DILocation(line: 2484, column: 7, scope: !3799)
!3809 = distinct !{!3809, !3810, !3811}
!3810 = !DILocation(line: 2484, column: 7, scope: !3795)
!3811 = !DILocation(line: 2491, column: 2, scope: !3795)
!3812 = !DILocation(line: 2464, column: 29, scope: !3760)
!3813 = !DILocation(line: 2464, column: 3, scope: !3760)
!3814 = distinct !{!3814, !3761, !3815}
!3815 = !DILocation(line: 2492, column: 5, scope: !3757)
!3816 = !DILocation(line: 2493, column: 1, scope: !3743)
!3817 = distinct !DISubprogram(name: "coalesced_pseudo_reg_freq_compare", scope: !3, file: !3, line: 2389, type: !1140, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3818)
!3818 = !{!3819, !3820, !3821, !3822, !3823}
!3819 = !DILocalVariable(name: "v1p", arg: 1, scope: !3817, file: !3, line: 2389, type: !1135)
!3820 = !DILocalVariable(name: "v2p", arg: 2, scope: !3817, file: !3, line: 2389, type: !1135)
!3821 = !DILocalVariable(name: "regno1", scope: !3817, file: !3, line: 2391, type: !1808)
!3822 = !DILocalVariable(name: "regno2", scope: !3817, file: !3, line: 2392, type: !1808)
!3823 = !DILocalVariable(name: "diff", scope: !3817, file: !3, line: 2393, type: !566)
!3824 = !DILocation(line: 0, scope: !3817)
!3825 = !DILocation(line: 2391, column: 23, scope: !3817)
!3826 = !DILocation(line: 2391, column: 22, scope: !3817)
!3827 = !DILocation(line: 2392, column: 23, scope: !3817)
!3828 = !DILocation(line: 2392, column: 22, scope: !3817)
!3829 = !DILocation(line: 2395, column: 16, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 2395, column: 7)
!3831 = !DILocation(line: 2396, column: 11, scope: !3830)
!3832 = !DILocation(line: 2396, column: 9, scope: !3830)
!3833 = !DILocation(line: 2396, column: 50, scope: !3830)
!3834 = !DILocation(line: 2395, column: 7, scope: !3817)
!3835 = !DILocation(line: 2398, column: 16, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 2398, column: 7)
!3837 = !DILocation(line: 2399, column: 11, scope: !3836)
!3838 = !DILocation(line: 2399, column: 9, scope: !3836)
!3839 = !DILocation(line: 2399, column: 49, scope: !3836)
!3840 = !DILocation(line: 2401, column: 17, scope: !3817)
!3841 = !DILocation(line: 2398, column: 7, scope: !3817)
!3842 = !DILocation(line: 2402, column: 1, scope: !3817)
!3843 = distinct !DISubprogram(name: "collect_spilled_coalesced_allocnos", scope: !3, file: !3, line: 2501, type: !3844, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!566, !573, !566, !574}
!3846 = !{!3847, !3848, !3849, !3850, !3851, !3852, !3853}
!3847 = !DILocalVariable(name: "pseudo_regnos", arg: 1, scope: !3843, file: !3, line: 2501, type: !573)
!3848 = !DILocalVariable(name: "n", arg: 2, scope: !3843, file: !3, line: 2501, type: !566)
!3849 = !DILocalVariable(name: "spilled_coalesced_allocnos", arg: 3, scope: !3843, file: !3, line: 2502, type: !574)
!3850 = !DILocalVariable(name: "i", scope: !3843, file: !3, line: 2504, type: !566)
!3851 = !DILocalVariable(name: "num", scope: !3843, file: !3, line: 2504, type: !566)
!3852 = !DILocalVariable(name: "regno", scope: !3843, file: !3, line: 2504, type: !566)
!3853 = !DILocalVariable(name: "allocno", scope: !3843, file: !3, line: 2505, type: !575)
!3854 = !DILocation(line: 0, scope: !3843)
!3855 = !DILocation(line: 2507, column: 8, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 2507, column: 3)
!3857 = !DILocation(line: 0, scope: !3856)
!3858 = !DILocation(line: 2507, column: 12, scope: !3856)
!3859 = !DILocation(line: 2507, column: 23, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 2507, column: 3)
!3861 = !DILocation(line: 2507, column: 3, scope: !3856)
!3862 = !DILocation(line: 2509, column: 15, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 2508, column: 5)
!3864 = !DILocation(line: 2510, column: 17, scope: !3863)
!3865 = !DILocation(line: 2511, column: 19, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2511, column: 11)
!3867 = !DILocation(line: 2511, column: 27, scope: !3866)
!3868 = !DILocation(line: 2511, column: 30, scope: !3866)
!3869 = !DILocation(line: 2511, column: 59, scope: !3866)
!3870 = !DILocation(line: 2512, column: 4, scope: !3866)
!3871 = !DILocation(line: 2512, column: 7, scope: !3866)
!3872 = !DILocation(line: 2512, column: 49, scope: !3866)
!3873 = !DILocation(line: 2511, column: 11, scope: !3863)
!3874 = !DILocation(line: 2514, column: 37, scope: !3863)
!3875 = !DILocation(line: 2514, column: 7, scope: !3863)
!3876 = !DILocation(line: 2514, column: 41, scope: !3863)
!3877 = !DILocation(line: 2515, column: 5, scope: !3863)
!3878 = !DILocation(line: 2507, column: 29, scope: !3860)
!3879 = !DILocation(line: 2507, column: 3, scope: !3860)
!3880 = distinct !{!3880, !3861, !3881}
!3881 = !DILocation(line: 2515, column: 5, scope: !3856)
!3882 = !DILocation(line: 2516, column: 3, scope: !3843)
!3883 = distinct !DISubprogram(name: "coalesce_spill_slots", scope: !3, file: !3, line: 2572, type: !3884, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3886)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!565, !574, !566}
!3886 = !{!3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896}
!3887 = !DILocalVariable(name: "spilled_coalesced_allocnos", arg: 1, scope: !3883, file: !3, line: 2572, type: !574)
!3888 = !DILocalVariable(name: "num", arg: 2, scope: !3883, file: !3, line: 2572, type: !566)
!3889 = !DILocalVariable(name: "i", scope: !3883, file: !3, line: 2574, type: !566)
!3890 = !DILocalVariable(name: "j", scope: !3883, file: !3, line: 2574, type: !566)
!3891 = !DILocalVariable(name: "n", scope: !3883, file: !3, line: 2574, type: !566)
!3892 = !DILocalVariable(name: "last_coalesced_allocno_num", scope: !3883, file: !3, line: 2574, type: !566)
!3893 = !DILocalVariable(name: "allocno", scope: !3883, file: !3, line: 2575, type: !575)
!3894 = !DILocalVariable(name: "a", scope: !3883, file: !3, line: 2575, type: !575)
!3895 = !DILocalVariable(name: "merged_p", scope: !3883, file: !3, line: 2576, type: !565)
!3896 = !DILocalVariable(name: "set_jump_crosses", scope: !3883, file: !3, line: 2577, type: !1703)
!3897 = !DILocation(line: 0, scope: !3883)
!3898 = !DILocation(line: 2577, column: 29, scope: !3883)
!3899 = !DILocation(line: 2581, column: 13, scope: !3883)
!3900 = !DILocation(line: 2581, column: 11, scope: !3883)
!3901 = !DILocation(line: 2580, column: 32, scope: !3883)
!3902 = !DILocation(line: 2580, column: 5, scope: !3883)
!3903 = !DILocation(line: 2583, column: 36, scope: !3883)
!3904 = !DILocation(line: 2583, column: 34, scope: !3883)
!3905 = !DILocation(line: 2582, column: 3, scope: !3883)
!3906 = !DILocation(line: 2587, column: 8, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 2587, column: 3)
!3908 = !DILocation(line: 2584, column: 30, scope: !3883)
!3909 = !DILocation(line: 2576, column: 8, scope: !3883)
!3910 = !DILocation(line: 2587, column: 17, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 2587, column: 3)
!3912 = !DILocation(line: 2587, column: 3, scope: !3907)
!3913 = !DILocation(line: 2630, column: 3, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 2630, column: 3)
!3915 = !DILocation(line: 2589, column: 17, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 2588, column: 5)
!3917 = !DILocation(line: 2590, column: 11, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 2590, column: 11)
!3919 = !DILocation(line: 2590, column: 53, scope: !3918)
!3920 = !DILocation(line: 2591, column: 4, scope: !3918)
!3921 = !DILocation(line: 2591, column: 39, scope: !3918)
!3922 = !DILocation(line: 2591, column: 7, scope: !3918)
!3923 = !DILocation(line: 2592, column: 4, scope: !3918)
!3924 = !DILocation(line: 2592, column: 8, scope: !3918)
!3925 = !DILocation(line: 2592, column: 34, scope: !3918)
!3926 = !DILocation(line: 2592, column: 32, scope: !3918)
!3927 = !DILocation(line: 2593, column: 8, scope: !3918)
!3928 = !DILocation(line: 2593, column: 12, scope: !3918)
!3929 = !DILocation(line: 2593, column: 57, scope: !3918)
!3930 = !DILocation(line: 2594, column: 5, scope: !3918)
!3931 = !DILocation(line: 2594, column: 8, scope: !3918)
!3932 = !DILocation(line: 2590, column: 11, scope: !3916)
!3933 = !DILocation(line: 2596, column: 12, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 2596, column: 7)
!3935 = !DILocation(line: 0, scope: !3934)
!3936 = !DILocation(line: 2596, column: 21, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 2596, column: 7)
!3938 = !DILocation(line: 2596, column: 7, scope: !3934)
!3939 = !DILocation(line: 2598, column: 8, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3937, file: !3, line: 2597, column: 2)
!3941 = !DILocation(line: 2599, column: 8, scope: !3940)
!3942 = !DILocation(line: 2600, column: 8, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 2600, column: 8)
!3944 = !DILocation(line: 2600, column: 44, scope: !3943)
!3945 = !DILocation(line: 2601, column: 8, scope: !3943)
!3946 = !DILocation(line: 2601, column: 45, scope: !3943)
!3947 = !DILocation(line: 2601, column: 13, scope: !3943)
!3948 = !DILocation(line: 2602, column: 8, scope: !3943)
!3949 = !DILocation(line: 2602, column: 12, scope: !3943)
!3950 = !DILocation(line: 2602, column: 33, scope: !3943)
!3951 = !DILocation(line: 2602, column: 30, scope: !3943)
!3952 = !DILocation(line: 2603, column: 5, scope: !3943)
!3953 = !DILocation(line: 2603, column: 11, scope: !3943)
!3954 = !DILocation(line: 2604, column: 9, scope: !3943)
!3955 = !DILocation(line: 2604, column: 12, scope: !3943)
!3956 = !DILocation(line: 2604, column: 51, scope: !3943)
!3957 = !DILocation(line: 2605, column: 8, scope: !3943)
!3958 = !DILocation(line: 2605, column: 13, scope: !3943)
!3959 = !DILocation(line: 2600, column: 8, scope: !3940)
!3960 = !DILocation(line: 2596, column: 27, scope: !3937)
!3961 = !DILocation(line: 2596, column: 7, scope: !3937)
!3962 = distinct !{!3962, !3938, !3963}
!3963 = !DILocation(line: 2607, column: 2, scope: !3934)
!3964 = !DILocation(line: 2608, column: 11, scope: !3916)
!3965 = !DILocation(line: 2612, column: 55, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2609, column: 2)
!3967 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 2608, column: 11)
!3968 = !DILocation(line: 2612, column: 4, scope: !3966)
!3969 = !DILocation(line: 2612, column: 27, scope: !3966)
!3970 = !DILocation(line: 2613, column: 4, scope: !3966)
!3971 = !DILocation(line: 2614, column: 2, scope: !3966)
!3972 = !DILocation(line: 2617, column: 24, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2616, column: 2)
!3974 = !DILocation(line: 2619, column: 8, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 2619, column: 8)
!3976 = !DILocation(line: 2619, column: 34, scope: !3975)
!3977 = !DILocation(line: 2619, column: 41, scope: !3975)
!3978 = !DILocation(line: 2619, column: 55, scope: !3975)
!3979 = !DILocation(line: 2619, column: 38, scope: !3975)
!3980 = !DILocation(line: 2622, column: 8, scope: !3975)
!3981 = !DILocation(line: 2622, column: 31, scope: !3975)
!3982 = !DILocation(line: 2623, column: 8, scope: !3975)
!3983 = !DILocation(line: 2623, column: 25, scope: !3975)
!3984 = !DILocation(line: 2620, column: 6, scope: !3975)
!3985 = !DILocation(line: 2624, column: 29, scope: !3973)
!3986 = !DILocation(line: 2624, column: 4, scope: !3973)
!3987 = !DILocation(line: 2624, column: 27, scope: !3973)
!3988 = !DILocation(line: 2625, column: 4, scope: !3973)
!3989 = !DILocation(line: 2626, column: 4, scope: !3973)
!3990 = !DILocation(line: 2587, column: 25, scope: !3911)
!3991 = !DILocation(line: 2587, column: 3, scope: !3911)
!3992 = distinct !{!3992, !3912, !3993}
!3993 = !DILocation(line: 2629, column: 5, scope: !3907)
!3994 = !DILocation(line: 0, scope: !3914)
!3995 = !DILocation(line: 2630, column: 19, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 2630, column: 3)
!3997 = !DILocation(line: 2630, column: 17, scope: !3996)
!3998 = !DILocation(line: 2632, column: 8, scope: !3996)
!3999 = !DILocation(line: 2631, column: 5, scope: !3996)
!4000 = !DILocation(line: 2630, column: 38, scope: !3996)
!4001 = !DILocation(line: 2630, column: 3, scope: !3996)
!4002 = distinct !{!4002, !3913, !4003}
!4003 = !DILocation(line: 2632, column: 46, scope: !3914)
!4004 = !DILocation(line: 2633, column: 13, scope: !3883)
!4005 = !DILocation(line: 2633, column: 3, scope: !3883)
!4006 = !DILocation(line: 2634, column: 3, scope: !3883)
!4007 = distinct !DISubprogram(name: "coalesced_pseudo_reg_slot_compare", scope: !3, file: !3, line: 2420, type: !1140, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019}
!4009 = !DILocalVariable(name: "v1p", arg: 1, scope: !4007, file: !3, line: 2420, type: !1135)
!4010 = !DILocalVariable(name: "v2p", arg: 2, scope: !4007, file: !3, line: 2420, type: !1135)
!4011 = !DILocalVariable(name: "regno1", scope: !4007, file: !3, line: 2422, type: !1808)
!4012 = !DILocalVariable(name: "regno2", scope: !4007, file: !3, line: 2423, type: !1808)
!4013 = !DILocalVariable(name: "a1", scope: !4007, file: !3, line: 2424, type: !575)
!4014 = !DILocalVariable(name: "a2", scope: !4007, file: !3, line: 2425, type: !575)
!4015 = !DILocalVariable(name: "diff", scope: !4007, file: !3, line: 2426, type: !566)
!4016 = !DILocalVariable(name: "slot_num1", scope: !4007, file: !3, line: 2426, type: !566)
!4017 = !DILocalVariable(name: "slot_num2", scope: !4007, file: !3, line: 2426, type: !566)
!4018 = !DILocalVariable(name: "total_size1", scope: !4007, file: !3, line: 2427, type: !566)
!4019 = !DILocalVariable(name: "total_size2", scope: !4007, file: !3, line: 2427, type: !566)
!4020 = !DILocation(line: 0, scope: !4007)
!4021 = !DILocation(line: 2422, column: 23, scope: !4007)
!4022 = !DILocation(line: 2422, column: 22, scope: !4007)
!4023 = !DILocation(line: 2423, column: 23, scope: !4007)
!4024 = !DILocation(line: 2423, column: 22, scope: !4007)
!4025 = !DILocation(line: 2424, column: 22, scope: !4007)
!4026 = !DILocation(line: 2425, column: 22, scope: !4007)
!4027 = !DILocation(line: 2429, column: 10, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 2429, column: 7)
!4029 = !DILocation(line: 2429, column: 18, scope: !4028)
!4030 = !DILocation(line: 2429, column: 21, scope: !4028)
!4031 = !DILocation(line: 2429, column: 45, scope: !4028)
!4032 = !DILocation(line: 2429, column: 7, scope: !4007)
!4033 = !DILocation(line: 2431, column: 14, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 2431, column: 11)
!4035 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2430, column: 5)
!4036 = !DILocation(line: 2431, column: 22, scope: !4034)
!4037 = !DILocation(line: 2431, column: 25, scope: !4034)
!4038 = !DILocation(line: 2431, column: 49, scope: !4034)
!4039 = !DILocation(line: 2431, column: 11, scope: !4035)
!4040 = !DILocation(line: 2432, column: 16, scope: !4034)
!4041 = !DILocation(line: 2432, column: 2, scope: !4034)
!4042 = !DILocation(line: 2435, column: 15, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 2435, column: 12)
!4044 = !DILocation(line: 2435, column: 23, scope: !4043)
!4045 = !DILocation(line: 2435, column: 26, scope: !4043)
!4046 = !DILocation(line: 2435, column: 50, scope: !4043)
!4047 = !DILocation(line: 2435, column: 12, scope: !4028)
!4048 = !DILocation(line: 2439, column: 25, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 2439, column: 7)
!4050 = !DILocation(line: 2439, column: 38, scope: !4049)
!4051 = !DILocation(line: 2439, column: 7, scope: !4007)
!4052 = !DILocation(line: 2442, column: 13, scope: !4049)
!4053 = !DILocation(line: 2448, column: 17, scope: !4007)
!4054 = !DILocation(line: 2449, column: 17, scope: !4007)
!4055 = !DILocation(line: 2450, column: 27, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 2450, column: 7)
!4057 = !DILocation(line: 2450, column: 42, scope: !4056)
!4058 = !DILocation(line: 2452, column: 17, scope: !4007)
!4059 = !DILocation(line: 2450, column: 7, scope: !4007)
!4060 = !DILocation(line: 2453, column: 1, scope: !4007)
!4061 = distinct !DISubprogram(name: "ira_mark_allocation_change", scope: !3, file: !3, line: 2765, type: !2593, scopeLine: 2766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4062)
!4062 = !{!4063, !4064, !4065, !4066, !4067, !4068}
!4063 = !DILocalVariable(name: "regno", arg: 1, scope: !4061, file: !3, line: 2765, type: !566)
!4064 = !DILocalVariable(name: "a", scope: !4061, file: !3, line: 2767, type: !575)
!4065 = !DILocalVariable(name: "old_hard_regno", scope: !4061, file: !3, line: 2768, type: !566)
!4066 = !DILocalVariable(name: "hard_regno", scope: !4061, file: !3, line: 2768, type: !566)
!4067 = !DILocalVariable(name: "cost", scope: !4061, file: !3, line: 2768, type: !566)
!4068 = !DILocalVariable(name: "cover_class", scope: !4061, file: !3, line: 2769, type: !390)
!4069 = !DILocation(line: 0, scope: !4061)
!4070 = !DILocation(line: 2767, column: 21, scope: !4061)
!4071 = !DILocation(line: 2769, column: 32, scope: !4061)
!4072 = !DILocation(line: 2772, column: 16, scope: !4061)
!4073 = !DILocation(line: 2773, column: 25, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 2773, column: 7)
!4075 = !DILocation(line: 2773, column: 49, scope: !4074)
!4076 = !DILocation(line: 2773, column: 7, scope: !4061)
!4077 = !DILocation(line: 2775, column: 22, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 2775, column: 7)
!4079 = !DILocation(line: 2775, column: 7, scope: !4061)
!4080 = !DILocation(line: 2776, column: 13, scope: !4078)
!4081 = !DILocation(line: 2776, column: 5, scope: !4078)
!4082 = !DILocation(line: 2780, column: 16, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 2778, column: 5)
!4084 = !DILocation(line: 2780, column: 43, scope: !4083)
!4085 = !DILocation(line: 2781, column: 11, scope: !4083)
!4086 = !DILocation(line: 2783, column: 12, scope: !4083)
!4087 = !DILocation(line: 2782, column: 11, scope: !4083)
!4088 = !DILocation(line: 2784, column: 7, scope: !4083)
!4089 = !DILocation(line: 2786, column: 20, scope: !4061)
!4090 = !DILocation(line: 2787, column: 26, scope: !4061)
!4091 = !DILocation(line: 2788, column: 18, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 2788, column: 7)
!4093 = !DILocation(line: 2788, column: 7, scope: !4061)
!4094 = !DILocation(line: 2790, column: 30, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 2789, column: 5)
!4096 = !DILocation(line: 2791, column: 15, scope: !4095)
!4097 = !DILocation(line: 2791, column: 12, scope: !4095)
!4098 = !DILocation(line: 2792, column: 5, scope: !4095)
!4099 = !DILocation(line: 2793, column: 12, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 2793, column: 12)
!4101 = !DILocation(line: 2793, column: 62, scope: !4100)
!4102 = !DILocation(line: 2793, column: 12, scope: !4092)
!4103 = !DILocation(line: 2795, column: 16, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 2794, column: 5)
!4105 = !DILocation(line: 2795, column: 43, scope: !4104)
!4106 = !DILocation(line: 2796, column: 11, scope: !4104)
!4107 = !DILocation(line: 2797, column: 11, scope: !4104)
!4108 = !DILocation(line: 2795, column: 12, scope: !4104)
!4109 = !DILocation(line: 2799, column: 7, scope: !4104)
!4110 = !DILocation(line: 2804, column: 20, scope: !4061)
!4111 = !DILocation(line: 2800, column: 5, scope: !4104)
!4112 = !DILocation(line: 0, scope: !4092)
!4113 = !DILocation(line: 2805, column: 1, scope: !4061)
!4114 = distinct !DISubprogram(name: "update_copy_costs", scope: !3, file: !3, line: 244, type: !4115, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4117)
!4115 = !DISubroutineType(types: !4116)
!4116 = !{null, !575, !565}
!4117 = !{!4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130}
!4118 = !DILocalVariable(name: "allocno", arg: 1, scope: !4114, file: !3, line: 244, type: !575)
!4119 = !DILocalVariable(name: "decr_p", arg: 2, scope: !4114, file: !3, line: 244, type: !565)
!4120 = !DILocalVariable(name: "i", scope: !4114, file: !3, line: 246, type: !566)
!4121 = !DILocalVariable(name: "cost", scope: !4114, file: !3, line: 246, type: !566)
!4122 = !DILocalVariable(name: "update_cost", scope: !4114, file: !3, line: 246, type: !566)
!4123 = !DILocalVariable(name: "hard_regno", scope: !4114, file: !3, line: 246, type: !566)
!4124 = !DILocalVariable(name: "divisor", scope: !4114, file: !3, line: 246, type: !566)
!4125 = !DILocalVariable(name: "mode", scope: !4114, file: !3, line: 247, type: !5)
!4126 = !DILocalVariable(name: "rclass", scope: !4114, file: !3, line: 248, type: !390)
!4127 = !DILocalVariable(name: "cover_class", scope: !4114, file: !3, line: 248, type: !390)
!4128 = !DILocalVariable(name: "another_allocno", scope: !4114, file: !3, line: 249, type: !575)
!4129 = !DILocalVariable(name: "cp", scope: !4114, file: !3, line: 250, type: !1716)
!4130 = !DILocalVariable(name: "next_cp", scope: !4114, file: !3, line: 250, type: !1716)
!4131 = !DILocation(line: 0, scope: !4114)
!4132 = !DILocation(line: 246, column: 3, scope: !4114)
!4133 = !DILocation(line: 255, column: 17, scope: !4114)
!4134 = !DILocation(line: 256, column: 19, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 256, column: 7)
!4136 = !DILocation(line: 256, column: 7, scope: !4114)
!4137 = !DILocation(line: 252, column: 16, scope: !4114)
!4138 = !DILocation(line: 260, column: 12, scope: !4114)
!4139 = !DILocation(line: 262, column: 3, scope: !4114)
!4140 = !DILocation(line: 263, column: 11, scope: !4114)
!4141 = !DILocation(line: 0, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 283, column: 8)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 268, column: 2)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 267, column: 7)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !3, line: 267, column: 7)
!4146 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 265, column: 5)
!4147 = !DILocation(line: 0, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 290, column: 8)
!4149 = !DILocation(line: 264, column: 3, scope: !4114)
!4150 = !DILocation(line: 266, column: 14, scope: !4146)
!4151 = !DILocation(line: 267, column: 17, scope: !4145)
!4152 = !DILocation(line: 267, column: 12, scope: !4145)
!4153 = !DILocation(line: 0, scope: !4145)
!4154 = !DILocation(line: 267, column: 46, scope: !4144)
!4155 = !DILocation(line: 267, column: 7, scope: !4145)
!4156 = !DILocation(line: 269, column: 12, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 269, column: 8)
!4158 = !DILocation(line: 269, column: 21, scope: !4157)
!4159 = !DILocation(line: 269, column: 18, scope: !4157)
!4160 = !DILocation(line: 269, column: 8, scope: !4143)
!4161 = !DILocation(line: 274, column: 17, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 274, column: 13)
!4163 = !DILocation(line: 274, column: 24, scope: !4162)
!4164 = !DILocation(line: 274, column: 13, scope: !4157)
!4165 = !DILocation(line: 280, column: 6, scope: !4162)
!4166 = !DILocation(line: 276, column: 22, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 275, column: 6)
!4168 = !DILocation(line: 278, column: 6, scope: !4167)
!4169 = !DILocation(line: 271, column: 22, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 270, column: 6)
!4171 = !DILocation(line: 272, column: 30, scope: !4170)
!4172 = !DILocation(line: 273, column: 6, scope: !4170)
!4173 = !DILocation(line: 0, scope: !4157)
!4174 = !DILocation(line: 282, column: 18, scope: !4143)
!4175 = !DILocation(line: 283, column: 10, scope: !4142)
!4176 = !DILocation(line: 284, column: 8, scope: !4142)
!4177 = !DILocation(line: 284, column: 11, scope: !4142)
!4178 = !DILocation(line: 283, column: 8, scope: !4143)
!4179 = !DILocation(line: 287, column: 16, scope: !4143)
!4180 = !DILocation(line: 287, column: 26, scope: !4143)
!4181 = !DILocation(line: 287, column: 23, scope: !4143)
!4182 = !DILocation(line: 287, column: 12, scope: !4143)
!4183 = !DILocation(line: 289, column: 7, scope: !4143)
!4184 = !DILocation(line: 288, column: 7, scope: !4143)
!4185 = !DILocation(line: 293, column: 22, scope: !4143)
!4186 = !DILocation(line: 293, column: 27, scope: !4143)
!4187 = !DILocation(line: 293, column: 36, scope: !4143)
!4188 = !DILocation(line: 293, column: 34, scope: !4143)
!4189 = !DILocation(line: 294, column: 20, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 294, column: 8)
!4191 = !DILocation(line: 294, column: 8, scope: !4143)
!4192 = !DILocation(line: 298, column: 8, scope: !4143)
!4193 = !DILocation(line: 299, column: 7, scope: !4143)
!4194 = !DILocation(line: 300, column: 7, scope: !4143)
!4195 = !DILocation(line: 297, column: 4, scope: !4143)
!4196 = !DILocation(line: 302, column: 8, scope: !4143)
!4197 = !DILocation(line: 304, column: 7, scope: !4143)
!4198 = !DILocation(line: 301, column: 4, scope: !4143)
!4199 = !DILocation(line: 305, column: 8, scope: !4143)
!4200 = !DILocation(line: 307, column: 4, scope: !4143)
!4201 = !DILocation(line: 307, column: 56, scope: !4143)
!4202 = !DILocation(line: 308, column: 4, scope: !4143)
!4203 = !DILocation(line: 309, column: 6, scope: !4143)
!4204 = !DILocation(line: 311, column: 40, scope: !4143)
!4205 = !DILocation(line: 311, column: 48, scope: !4143)
!4206 = !DILocation(line: 311, column: 4, scope: !4143)
!4207 = !DILocation(line: 312, column: 2, scope: !4143)
!4208 = !DILocation(line: 267, column: 7, scope: !4144)
!4209 = distinct !{!4209, !4155, !4210}
!4210 = !DILocation(line: 312, column: 2, scope: !4145)
!4211 = !DILocation(line: 314, column: 10, scope: !4114)
!4212 = !DILocation(line: 313, column: 5, scope: !4146)
!4213 = distinct !{!4213, !4149, !4214}
!4214 = !DILocation(line: 314, column: 51, scope: !4114)
!4215 = !DILocation(line: 315, column: 1, scope: !4114)
!4216 = distinct !DISubprogram(name: "ira_mark_memory_move_deletion", scope: !3, file: !3, line: 2812, type: !4217, scopeLine: 2813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4219)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{null, !566, !566}
!4219 = !{!4220, !4221, !4222, !4223}
!4220 = !DILocalVariable(name: "dst_regno", arg: 1, scope: !4216, file: !3, line: 2812, type: !566)
!4221 = !DILocalVariable(name: "src_regno", arg: 2, scope: !4216, file: !3, line: 2812, type: !566)
!4222 = !DILocalVariable(name: "dst", scope: !4216, file: !3, line: 2814, type: !575)
!4223 = !DILocalVariable(name: "src", scope: !4216, file: !3, line: 2815, type: !575)
!4224 = !DILocation(line: 0, scope: !4216)
!4225 = !DILocation(line: 2814, column: 23, scope: !4216)
!4226 = !DILocation(line: 2815, column: 23, scope: !4216)
!4227 = !DILocation(line: 2820, column: 3, scope: !4216)
!4228 = !DILocation(line: 2820, column: 33, scope: !4216)
!4229 = !DILocation(line: 2821, column: 3, scope: !4216)
!4230 = !DILocation(line: 2821, column: 33, scope: !4216)
!4231 = !DILocation(line: 2822, column: 1, scope: !4216)
!4232 = distinct !DISubprogram(name: "ira_reassign_pseudos", scope: !3, file: !3, line: 2903, type: !4233, scopeLine: 2907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4235)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!565, !573, !566, !1752, !1820, !1820, !1703}
!4235 = !{!4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4236 = !DILocalVariable(name: "spilled_pseudo_regs", arg: 1, scope: !4232, file: !3, line: 2903, type: !573)
!4237 = !DILocalVariable(name: "num", arg: 2, scope: !4232, file: !3, line: 2903, type: !566)
!4238 = !DILocalVariable(name: "bad_spill_regs", arg: 3, scope: !4232, file: !3, line: 2904, type: !1752)
!4239 = !DILocalVariable(name: "pseudo_forbidden_regs", arg: 4, scope: !4232, file: !3, line: 2905, type: !1820)
!4240 = !DILocalVariable(name: "pseudo_previous_regs", arg: 5, scope: !4232, file: !3, line: 2906, type: !1820)
!4241 = !DILocalVariable(name: "spilled", arg: 6, scope: !4232, file: !3, line: 2906, type: !1703)
!4242 = !DILocalVariable(name: "i", scope: !4232, file: !3, line: 2908, type: !566)
!4243 = !DILocalVariable(name: "m", scope: !4232, file: !3, line: 2908, type: !566)
!4244 = !DILocalVariable(name: "n", scope: !4232, file: !3, line: 2908, type: !566)
!4245 = !DILocalVariable(name: "regno", scope: !4232, file: !3, line: 2908, type: !566)
!4246 = !DILocalVariable(name: "changed_p", scope: !4232, file: !3, line: 2909, type: !565)
!4247 = !DILocalVariable(name: "a", scope: !4232, file: !3, line: 2910, type: !575)
!4248 = !DILocalVariable(name: "conflict_a", scope: !4232, file: !3, line: 2910, type: !575)
!4249 = !DILocalVariable(name: "forbidden_regs", scope: !4232, file: !3, line: 2911, type: !1752)
!4250 = !DILocalVariable(name: "aci", scope: !4232, file: !3, line: 2912, type: !1869)
!4251 = !DILocation(line: 0, scope: !4232)
!4252 = !DILocation(line: 2910, column: 3, scope: !4232)
!4253 = !DILocation(line: 2912, column: 3, scope: !4232)
!4254 = !DILocation(line: 2914, column: 11, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2914, column: 7)
!4256 = !DILocation(line: 2914, column: 7, scope: !4232)
!4257 = !DILocation(line: 2916, column: 17, scope: !4255)
!4258 = !DILocation(line: 2916, column: 38, scope: !4255)
!4259 = !DILocation(line: 2916, column: 5, scope: !4255)
!4260 = !DILocation(line: 2923, column: 8, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2923, column: 3)
!4262 = !DILocation(line: 2923, column: 10, scope: !4261)
!4263 = !DILocation(line: 2923, column: 21, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2923, column: 3)
!4265 = !DILocation(line: 2923, column: 3, scope: !4261)
!4266 = !DILocation(line: 2925, column: 15, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 2924, column: 5)
!4268 = !DILocation(line: 2927, column: 7, scope: !4267)
!4269 = !DILocation(line: 2928, column: 7, scope: !4267)
!4270 = !DILocation(line: 2929, column: 7, scope: !4267)
!4271 = !DILocation(line: 2930, column: 11, scope: !4267)
!4272 = !DILocation(line: 2931, column: 7, scope: !4267)
!4273 = !DILocation(line: 2933, column: 11, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 2933, column: 11)
!4275 = !DILocation(line: 2933, column: 37, scope: !4274)
!4276 = !DILocation(line: 2933, column: 44, scope: !4274)
!4277 = !DILocation(line: 2933, column: 58, scope: !4274)
!4278 = !DILocation(line: 2933, column: 41, scope: !4274)
!4279 = !DILocation(line: 2935, column: 43, scope: !4274)
!4280 = !DILocation(line: 2936, column: 4, scope: !4274)
!4281 = !DILocation(line: 2937, column: 6, scope: !4274)
!4282 = !DILocation(line: 2937, column: 4, scope: !4274)
!4283 = !DILocation(line: 2934, column: 2, scope: !4274)
!4284 = !DILocation(line: 2938, column: 7, scope: !4267)
!4285 = !DILocation(line: 2939, column: 11, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 2939, column: 11)
!4287 = !DILocation(line: 2939, column: 31, scope: !4286)
!4288 = !DILocation(line: 2939, column: 11, scope: !4267)
!4289 = !DILocation(line: 2941, column: 4, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 2940, column: 2)
!4291 = !DILocation(line: 2943, column: 2, scope: !4290)
!4292 = !DILocation(line: 2945, column: 23, scope: !4286)
!4293 = !DILocation(line: 2945, column: 2, scope: !4286)
!4294 = !DILocation(line: 2945, column: 27, scope: !4286)
!4295 = !DILocation(line: 0, scope: !4261)
!4296 = !DILocation(line: 2923, column: 29, scope: !4264)
!4297 = !DILocation(line: 2923, column: 3, scope: !4264)
!4298 = distinct !{!4298, !4265, !4299}
!4299 = !DILocation(line: 2946, column: 5, scope: !4261)
!4300 = !DILocation(line: 2947, column: 9, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2947, column: 7)
!4302 = !DILocation(line: 2947, column: 7, scope: !4232)
!4303 = !DILocation(line: 2949, column: 7, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2949, column: 7)
!4305 = !DILocation(line: 2949, column: 33, scope: !4304)
!4306 = !DILocation(line: 2949, column: 40, scope: !4304)
!4307 = !DILocation(line: 2949, column: 54, scope: !4304)
!4308 = !DILocation(line: 2949, column: 37, scope: !4304)
!4309 = !DILocation(line: 2951, column: 7, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 2950, column: 5)
!4311 = !DILocation(line: 2952, column: 12, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 2952, column: 7)
!4313 = !DILocation(line: 0, scope: !4312)
!4314 = !DILocation(line: 2952, column: 21, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 2952, column: 7)
!4316 = !DILocation(line: 0, scope: !4310)
!4317 = !DILocation(line: 2952, column: 7, scope: !4312)
!4318 = !DILocation(line: 2953, column: 33, scope: !4315)
!4319 = !DILocation(line: 2953, column: 2, scope: !4315)
!4320 = !DILocation(line: 2952, column: 27, scope: !4315)
!4321 = !DILocation(line: 2952, column: 7, scope: !4315)
!4322 = distinct !{!4322, !4317, !4323}
!4323 = !DILocation(line: 2953, column: 55, scope: !4312)
!4324 = !DILocation(line: 2954, column: 7, scope: !4310)
!4325 = !DILocation(line: 2955, column: 5, scope: !4310)
!4326 = !DILocation(line: 0, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 2967, column: 4)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 2963, column: 6)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 2962, column: 7)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2962, column: 7)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 2959, column: 5)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 2958, column: 3)
!4333 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2958, column: 3)
!4334 = !DILocation(line: 2958, column: 8, scope: !4333)
!4335 = !DILocation(line: 0, scope: !4333)
!4336 = !DILocation(line: 2958, column: 14, scope: !4333)
!4337 = !DILocation(line: 2958, column: 21, scope: !4332)
!4338 = !DILocation(line: 2958, column: 3, scope: !4333)
!4339 = !DILocation(line: 2960, column: 15, scope: !4331)
!4340 = !DILocation(line: 2961, column: 11, scope: !4331)
!4341 = !DILocation(line: 2962, column: 7, scope: !4330)
!4342 = !DILocation(line: 2962, column: 7, scope: !4329)
!4343 = !DILocation(line: 2963, column: 6, scope: !4328)
!4344 = !DILocation(line: 2963, column: 38, scope: !4328)
!4345 = !DILocation(line: 2964, column: 6, scope: !4328)
!4346 = !DILocation(line: 2964, column: 11, scope: !4328)
!4347 = !DILocation(line: 2965, column: 6, scope: !4328)
!4348 = !DILocation(line: 2965, column: 25, scope: !4328)
!4349 = !DILocation(line: 2966, column: 11, scope: !4328)
!4350 = !DILocation(line: 2965, column: 11, scope: !4328)
!4351 = !DILocation(line: 2963, column: 6, scope: !4329)
!4352 = !DILocation(line: 2968, column: 29, scope: !4327)
!4353 = !DILocation(line: 2968, column: 6, scope: !4327)
!4354 = !DILocation(line: 2968, column: 23, scope: !4327)
!4355 = !DILocation(line: 2968, column: 27, scope: !4327)
!4356 = !DILocation(line: 2969, column: 22, scope: !4327)
!4357 = !DILocation(line: 2970, column: 8, scope: !4327)
!4358 = !DILocation(line: 2969, column: 6, scope: !4327)
!4359 = !DILocation(line: 2971, column: 4, scope: !4327)
!4360 = distinct !{!4360, !4341, !4361}
!4361 = !DILocation(line: 2971, column: 4, scope: !4330)
!4362 = !DILocation(line: 2958, column: 27, scope: !4332)
!4363 = !DILocation(line: 2958, column: 3, scope: !4332)
!4364 = distinct !{!4364, !4338, !4365}
!4365 = !DILocation(line: 2972, column: 5, scope: !4333)
!4366 = !DILocation(line: 2973, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2973, column: 7)
!4368 = !DILocation(line: 2973, column: 7, scope: !4232)
!4369 = !DILocation(line: 2975, column: 33, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 2974, column: 5)
!4371 = !DILocation(line: 2975, column: 7, scope: !4370)
!4372 = !DILocation(line: 2977, column: 19, scope: !4370)
!4373 = !DILocation(line: 2977, column: 36, scope: !4370)
!4374 = !DILocation(line: 2977, column: 7, scope: !4370)
!4375 = !DILocation(line: 2983, column: 12, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2983, column: 7)
!4377 = !DILocation(line: 0, scope: !4376)
!4378 = !DILocation(line: 2983, column: 21, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 2983, column: 7)
!4380 = !DILocation(line: 2983, column: 7, scope: !4376)
!4381 = !DILocation(line: 2985, column: 8, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2984, column: 2)
!4383 = !DILocation(line: 2986, column: 12, scope: !4382)
!4384 = !DILocation(line: 2988, column: 4, scope: !4382)
!4385 = !DILocation(line: 2989, column: 4, scope: !4382)
!4386 = !DILocation(line: 2990, column: 8, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 2990, column: 8)
!4388 = !DILocation(line: 2990, column: 34, scope: !4387)
!4389 = !DILocation(line: 2990, column: 41, scope: !4387)
!4390 = !DILocation(line: 2990, column: 55, scope: !4387)
!4391 = !DILocation(line: 2990, column: 38, scope: !4387)
!4392 = !DILocation(line: 2993, column: 15, scope: !4387)
!4393 = !DILocation(line: 2994, column: 8, scope: !4387)
!4394 = !DILocation(line: 2995, column: 10, scope: !4387)
!4395 = !DILocation(line: 2995, column: 8, scope: !4387)
!4396 = !DILocation(line: 2991, column: 6, scope: !4387)
!4397 = !DILocation(line: 2996, column: 8, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 2996, column: 8)
!4399 = !DILocation(line: 2996, column: 8, scope: !4382)
!4400 = !DILocation(line: 2999, column: 8, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 2997, column: 6)
!4402 = !DILocation(line: 3000, column: 6, scope: !4401)
!4403 = !DILocation(line: 2983, column: 27, scope: !4379)
!4404 = !DILocation(line: 2983, column: 7, scope: !4379)
!4405 = distinct !{!4405, !4380, !4406}
!4406 = !DILocation(line: 3001, column: 2, scope: !4376)
!4407 = !DILocation(line: 3004, column: 1, scope: !4232)
!4408 = distinct !DISubprogram(name: "pseudo_reg_compare", scope: !3, file: !3, line: 2883, type: !1140, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4409)
!4409 = !{!4410, !4411, !4412, !4413, !4414}
!4410 = !DILocalVariable(name: "v1p", arg: 1, scope: !4408, file: !3, line: 2883, type: !1135)
!4411 = !DILocalVariable(name: "v2p", arg: 2, scope: !4408, file: !3, line: 2883, type: !1135)
!4412 = !DILocalVariable(name: "regno1", scope: !4408, file: !3, line: 2885, type: !566)
!4413 = !DILocalVariable(name: "regno2", scope: !4408, file: !3, line: 2886, type: !566)
!4414 = !DILocalVariable(name: "diff", scope: !4408, file: !3, line: 2887, type: !566)
!4415 = !DILocation(line: 0, scope: !4408)
!4416 = !DILocation(line: 2885, column: 17, scope: !4408)
!4417 = !DILocation(line: 2885, column: 16, scope: !4408)
!4418 = !DILocation(line: 2886, column: 17, scope: !4408)
!4419 = !DILocation(line: 2886, column: 16, scope: !4408)
!4420 = !DILocation(line: 2889, column: 15, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 2889, column: 7)
!4422 = !DILocation(line: 2889, column: 35, scope: !4421)
!4423 = !DILocation(line: 2889, column: 33, scope: !4421)
!4424 = !DILocation(line: 2889, column: 54, scope: !4421)
!4425 = !DILocation(line: 2889, column: 7, scope: !4408)
!4426 = !DILocation(line: 2892, column: 1, scope: !4408)
!4427 = distinct !DISubprogram(name: "allocno_reload_assign", scope: !3, file: !3, line: 2827, type: !4428, scopeLine: 2828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4430)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!565, !575, !1752}
!4430 = !{!4431, !4432, !4433, !4434, !4435}
!4431 = !DILocalVariable(name: "a", arg: 1, scope: !4427, file: !3, line: 2827, type: !575)
!4432 = !DILocalVariable(name: "forbidden_regs", arg: 2, scope: !4427, file: !3, line: 2827, type: !1752)
!4433 = !DILocalVariable(name: "hard_regno", scope: !4427, file: !3, line: 2829, type: !566)
!4434 = !DILocalVariable(name: "cover_class", scope: !4427, file: !3, line: 2830, type: !390)
!4435 = !DILocalVariable(name: "regno", scope: !4427, file: !3, line: 2831, type: !566)
!4436 = !DILocation(line: 0, scope: !4427)
!4437 = !DILocation(line: 2831, column: 15, scope: !4427)
!4438 = !DILocation(line: 2833, column: 3, scope: !4427)
!4439 = !DILocation(line: 2834, column: 9, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2834, column: 7)
!4441 = !DILocation(line: 2834, column: 27, scope: !4440)
!4442 = !DILocation(line: 2834, column: 30, scope: !4440)
!4443 = !DILocation(line: 2834, column: 60, scope: !4440)
!4444 = !DILocation(line: 2834, column: 7, scope: !4427)
!4445 = !DILocation(line: 2835, column: 5, scope: !4440)
!4446 = !DILocation(line: 2836, column: 3, scope: !4427)
!4447 = !DILocation(line: 2836, column: 26, scope: !4427)
!4448 = !DILocation(line: 2839, column: 17, scope: !4427)
!4449 = !DILocation(line: 2840, column: 3, scope: !4427)
!4450 = !DILocation(line: 2841, column: 3, scope: !4427)
!4451 = !DILocation(line: 2842, column: 16, scope: !4427)
!4452 = !DILocation(line: 2843, column: 25, scope: !4427)
!4453 = !DILocation(line: 2843, column: 3, scope: !4427)
!4454 = !DILocation(line: 2843, column: 23, scope: !4427)
!4455 = !DILocation(line: 2844, column: 18, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2844, column: 7)
!4457 = !DILocation(line: 2844, column: 7, scope: !4427)
!4458 = !DILocation(line: 2845, column: 28, scope: !4456)
!4459 = !DILocation(line: 2845, column: 5, scope: !4456)
!4460 = !DILocation(line: 2849, column: 28, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2847, column: 5)
!4462 = !DILocation(line: 2850, column: 10, scope: !4461)
!4463 = !DILocation(line: 2850, column: 37, scope: !4461)
!4464 = !DILocation(line: 2851, column: 12, scope: !4461)
!4465 = !DILocation(line: 2853, column: 13, scope: !4461)
!4466 = !DILocation(line: 2852, column: 12, scope: !4461)
!4467 = !DILocation(line: 2849, column: 24, scope: !4461)
!4468 = !DILocation(line: 2855, column: 11, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 2855, column: 11)
!4470 = !DILocation(line: 2855, column: 41, scope: !4469)
!4471 = !DILocation(line: 2856, column: 4, scope: !4469)
!4472 = !DILocation(line: 2856, column: 48, scope: !4469)
!4473 = !DILocation(line: 2857, column: 8, scope: !4469)
!4474 = !DILocation(line: 2856, column: 9, scope: !4469)
!4475 = !DILocation(line: 2855, column: 11, scope: !4461)
!4476 = !DILocation(line: 2860, column: 23, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 2858, column: 2)
!4478 = !DILocation(line: 2861, column: 2, scope: !4477)
!4479 = !DILocation(line: 2867, column: 7, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 2867, column: 7)
!4481 = !DILocation(line: 2867, column: 27, scope: !4480)
!4482 = !DILocation(line: 0, scope: !4480)
!4483 = !DILocation(line: 2867, column: 7, scope: !4427)
!4484 = !DILocation(line: 2869, column: 41, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 2869, column: 11)
!4486 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 2868, column: 5)
!4487 = !DILocation(line: 2870, column: 48, scope: !4485)
!4488 = !DILocation(line: 2870, column: 2, scope: !4485)
!4489 = !DILocation(line: 2871, column: 7, scope: !4486)
!4490 = !DILocation(line: 2872, column: 7, scope: !4486)
!4491 = !DILocation(line: 2873, column: 5, scope: !4486)
!4492 = !DILocation(line: 2874, column: 42, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 2874, column: 12)
!4494 = !DILocation(line: 2875, column: 5, scope: !4493)
!4495 = !DILocation(line: 2877, column: 10, scope: !4427)
!4496 = !DILocation(line: 2877, column: 3, scope: !4427)
!4497 = distinct !DISubprogram(name: "ira_reuse_stack_slot", scope: !3, file: !3, line: 3011, type: !4498, scopeLine: 3013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!585, !566, !7, !7}
!4500 = !{!4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4524}
!4501 = !DILocalVariable(name: "regno", arg: 1, scope: !4497, file: !3, line: 3011, type: !566)
!4502 = !DILocalVariable(name: "inherent_size", arg: 2, scope: !4497, file: !3, line: 3011, type: !7)
!4503 = !DILocalVariable(name: "total_size", arg: 3, scope: !4497, file: !3, line: 3012, type: !7)
!4504 = !DILocalVariable(name: "i", scope: !4497, file: !3, line: 3014, type: !7)
!4505 = !DILocalVariable(name: "slot_num", scope: !4497, file: !3, line: 3015, type: !566)
!4506 = !DILocalVariable(name: "best_slot_num", scope: !4497, file: !3, line: 3015, type: !566)
!4507 = !DILocalVariable(name: "cost", scope: !4497, file: !3, line: 3016, type: !566)
!4508 = !DILocalVariable(name: "best_cost", scope: !4497, file: !3, line: 3016, type: !566)
!4509 = !DILocalVariable(name: "cp", scope: !4497, file: !3, line: 3017, type: !1716)
!4510 = !DILocalVariable(name: "next_cp", scope: !4497, file: !3, line: 3017, type: !1716)
!4511 = !DILocalVariable(name: "another_allocno", scope: !4497, file: !3, line: 3018, type: !575)
!4512 = !DILocalVariable(name: "allocno", scope: !4497, file: !3, line: 3018, type: !575)
!4513 = !DILocalVariable(name: "x", scope: !4497, file: !3, line: 3019, type: !585)
!4514 = !DILocalVariable(name: "bi", scope: !4497, file: !3, line: 3020, type: !3569)
!4515 = !DILocalVariable(name: "slot", scope: !4497, file: !3, line: 3021, type: !4516)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_spilled_reg_stack_slot", file: !576, line: 542, size: 384, elements: !4518)
!4518 = !{!4519, !4522, !4523}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "spilled_regs", scope: !4517, file: !576, line: 545, baseType: !4520, size: 256)
!4520 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !135, line: 34, baseType: !4521)
!4521 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !641, line: 84, baseType: !640)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !4517, file: !576, line: 547, baseType: !585, size: 64, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4517, file: !576, line: 549, baseType: !7, size: 32, offset: 320)
!4524 = !DILabel(scope: !4525, name: "cont", file: !3, line: 3086)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 3043, column: 2)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 3040, column: 7)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 3040, column: 7)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 3035, column: 5)
!4529 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 3029, column: 7)
!4530 = !DILocation(line: 0, scope: !4497)
!4531 = !DILocation(line: 3014, column: 3, scope: !4497)
!4532 = !DILocation(line: 3018, column: 44, scope: !4497)
!4533 = !DILocation(line: 3020, column: 3, scope: !4497)
!4534 = !DILocation(line: 3026, column: 9, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 3026, column: 7)
!4536 = !DILocation(line: 3026, column: 7, scope: !4497)
!4537 = !DILocation(line: 3028, column: 15, scope: !4497)
!4538 = !DILocation(line: 3028, column: 44, scope: !4497)
!4539 = !DILocation(line: 3029, column: 16, scope: !4529)
!4540 = !DILocation(line: 3029, column: 7, scope: !4497)
!4541 = !DILocation(line: 0, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3059, column: 4)
!4543 = !DILocation(line: 3040, column: 7, scope: !4527)
!4544 = !DILocation(line: 3031, column: 15, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 3030, column: 5)
!4546 = !DILocation(line: 3032, column: 17, scope: !4545)
!4547 = !DILocation(line: 3033, column: 5, scope: !4545)
!4548 = !DILocation(line: 3036, column: 17, scope: !4528)
!4549 = !DILocation(line: 3036, column: 33, scope: !4528)
!4550 = !DILocation(line: 3041, column: 16, scope: !4526)
!4551 = !DILocation(line: 3041, column: 14, scope: !4526)
!4552 = !DILocation(line: 3044, column: 12, scope: !4525)
!4553 = !DILocation(line: 3045, column: 14, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3045, column: 8)
!4555 = !DILocation(line: 3045, column: 18, scope: !4554)
!4556 = !DILocation(line: 3045, column: 8, scope: !4525)
!4557 = !DILocation(line: 3047, column: 14, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3047, column: 8)
!4559 = !DILocation(line: 3047, column: 20, scope: !4558)
!4560 = !DILocation(line: 3048, column: 8, scope: !4558)
!4561 = !DILocation(line: 3048, column: 11, scope: !4558)
!4562 = !DILocation(line: 3048, column: 48, scope: !4558)
!4563 = !DILocation(line: 3047, column: 8, scope: !4525)
!4564 = !DILocation(line: 3051, column: 4, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3051, column: 4)
!4566 = !DILocation(line: 3051, column: 4, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 3051, column: 4)
!4568 = !DILocation(line: 3054, column: 26, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 3053, column: 6)
!4570 = !DILocation(line: 3054, column: 48, scope: !4569)
!4571 = !DILocation(line: 3055, column: 12, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 3055, column: 12)
!4573 = !DILocation(line: 3055, column: 12, scope: !4569)
!4574 = distinct !{!4574, !4564, !4575}
!4575 = !DILocation(line: 3058, column: 6, scope: !4565)
!4576 = !DILocation(line: 3059, column: 24, scope: !4542)
!4577 = !DILocation(line: 3059, column: 9, scope: !4542)
!4578 = !DILocation(line: 3059, column: 14, scope: !4542)
!4579 = !DILocation(line: 3060, column: 12, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 3059, column: 4)
!4581 = !DILocation(line: 3059, column: 4, scope: !4542)
!4582 = !DILocation(line: 3063, column: 16, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 3063, column: 12)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 3062, column: 6)
!4585 = !DILocation(line: 3063, column: 22, scope: !4583)
!4586 = !DILocation(line: 3063, column: 12, scope: !4584)
!4587 = !DILocation(line: 3065, column: 19, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 3064, column: 3)
!4589 = !DILocation(line: 3066, column: 27, scope: !4588)
!4590 = !DILocation(line: 3067, column: 3, scope: !4588)
!4591 = !DILocation(line: 3068, column: 21, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 3068, column: 17)
!4593 = !DILocation(line: 3068, column: 28, scope: !4592)
!4594 = !DILocation(line: 3068, column: 17, scope: !4583)
!4595 = !DILocation(line: 3070, column: 19, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 3069, column: 3)
!4597 = !DILocation(line: 3072, column: 3, scope: !4596)
!4598 = !DILocation(line: 3074, column: 3, scope: !4592)
!4599 = !DILocation(line: 0, scope: !4583)
!4600 = !DILocation(line: 3075, column: 16, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 3075, column: 12)
!4602 = !DILocation(line: 3075, column: 21, scope: !4601)
!4603 = !DILocation(line: 3075, column: 12, scope: !4584)
!4604 = !DILocation(line: 3078, column: 5, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 3077, column: 12)
!4606 = !DILocation(line: 3077, column: 12, scope: !4605)
!4607 = !DILocation(line: 3077, column: 12, scope: !4584)
!4608 = !DILocation(line: 3079, column: 15, scope: !4605)
!4609 = !DILocation(line: 3079, column: 8, scope: !4605)
!4610 = !DILocation(line: 3079, column: 3, scope: !4605)
!4611 = !DILocation(line: 3059, column: 4, scope: !4580)
!4612 = distinct !{!4612, !4581, !4613}
!4613 = !DILocation(line: 3080, column: 6, scope: !4542)
!4614 = !DILocation(line: 3081, column: 13, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 3081, column: 8)
!4616 = !DILocation(line: 3081, column: 8, scope: !4525)
!4617 = !DILocation(line: 3081, column: 15, scope: !4615)
!4618 = !DILocation(line: 3042, column: 13, scope: !4526)
!4619 = !DILocation(line: 3040, column: 7, scope: !4526)
!4620 = distinct !{!4620, !4543, !4621}
!4621 = !DILocation(line: 3088, column: 2, scope: !4527)
!4622 = !DILocation(line: 3089, column: 21, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 3089, column: 11)
!4624 = !DILocation(line: 3089, column: 11, scope: !4528)
!4625 = !DILocation(line: 3092, column: 12, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 3090, column: 2)
!4627 = !DILocation(line: 3093, column: 4, scope: !4626)
!4628 = !DILocation(line: 3094, column: 14, scope: !4626)
!4629 = !DILocation(line: 3095, column: 45, scope: !4626)
!4630 = !DILocation(line: 3095, column: 33, scope: !4626)
!4631 = !DILocation(line: 3096, column: 2, scope: !4626)
!4632 = !DILocation(line: 0, scope: !4529)
!4633 = !DILocation(line: 3098, column: 9, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 3098, column: 7)
!4635 = !DILocation(line: 3098, column: 7, scope: !4497)
!4636 = !DILocation(line: 3108, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 3099, column: 5)
!4638 = !DILocation(line: 3109, column: 11, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 3109, column: 11)
!4640 = !DILocation(line: 3109, column: 37, scope: !4639)
!4641 = !DILocation(line: 3109, column: 44, scope: !4639)
!4642 = !DILocation(line: 3109, column: 41, scope: !4639)
!4643 = !DILocation(line: 3112, column: 13, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 3110, column: 2)
!4645 = !DILocation(line: 3111, column: 4, scope: !4644)
!4646 = !DILocation(line: 3113, column: 4, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 3113, column: 4)
!4648 = !DILocation(line: 3113, column: 4, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 3113, column: 4)
!4650 = !DILocation(line: 3116, column: 32, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 3116, column: 12)
!4652 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 3115, column: 6)
!4653 = !DILocation(line: 3116, column: 29, scope: !4651)
!4654 = !DILocation(line: 3116, column: 12, scope: !4652)
!4655 = !DILocation(line: 3117, column: 12, scope: !4651)
!4656 = !DILocation(line: 3117, column: 3, scope: !4651)
!4657 = distinct !{!4657, !4646, !4658}
!4658 = !DILocation(line: 3118, column: 6, scope: !4647)
!4659 = !DILocation(line: 3119, column: 13, scope: !4644)
!4660 = !DILocation(line: 3119, column: 4, scope: !4644)
!4661 = !DILocation(line: 3120, column: 2, scope: !4644)
!4662 = !DILocation(line: 3123, column: 1, scope: !4497)
!4663 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !641, file: !641, line: 224, type: !4664, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4670)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{null, !4666, !4667, !7, !1838}
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!4667 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !586, line: 48, baseType: !4668)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !640)
!4670 = !{!4671, !4672, !4673, !4674}
!4671 = !DILocalVariable(name: "bi", arg: 1, scope: !4663, file: !641, line: 224, type: !4666)
!4672 = !DILocalVariable(name: "map", arg: 2, scope: !4663, file: !641, line: 224, type: !4667)
!4673 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4663, file: !641, line: 225, type: !7)
!4674 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4663, file: !641, line: 225, type: !1838)
!4675 = !DILocation(line: 0, scope: !4663)
!4676 = !DILocation(line: 227, column: 19, scope: !4663)
!4677 = !DILocation(line: 227, column: 12, scope: !4663)
!4678 = !DILocation(line: 228, column: 7, scope: !4663)
!4679 = !DILocation(line: 228, column: 12, scope: !4663)
!4680 = !DILocation(line: 0, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !641, line: 233, column: 11)
!4682 = distinct !DILexicalBlock(scope: !4663, file: !641, line: 232, column: 5)
!4683 = !DILocation(line: 0, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4682, file: !641, line: 239, column: 11)
!4685 = !DILocation(line: 231, column: 3, scope: !4663)
!4686 = !DILocation(line: 233, column: 16, scope: !4681)
!4687 = !DILocation(line: 233, column: 12, scope: !4681)
!4688 = !DILocation(line: 233, column: 11, scope: !4682)
!4689 = !DILocation(line: 235, column: 13, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4681, file: !641, line: 234, column: 2)
!4691 = !DILocation(line: 236, column: 4, scope: !4690)
!4692 = !DILocation(line: 239, column: 21, scope: !4684)
!4693 = !DILocation(line: 239, column: 26, scope: !4684)
!4694 = !DILocation(line: 239, column: 11, scope: !4682)
!4695 = !DILocation(line: 241, column: 28, scope: !4682)
!4696 = !DILocation(line: 241, column: 16, scope: !4682)
!4697 = distinct !{!4697, !4685, !4698}
!4698 = !DILocation(line: 242, column: 5, scope: !4663)
!4699 = !DILocation(line: 245, column: 11, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4663, file: !641, line: 245, column: 7)
!4701 = !DILocation(line: 245, column: 17, scope: !4700)
!4702 = !DILocation(line: 245, column: 22, scope: !4700)
!4703 = !DILocation(line: 245, column: 7, scope: !4663)
!4704 = !DILocation(line: 246, column: 27, scope: !4700)
!4705 = !DILocation(line: 246, column: 32, scope: !4700)
!4706 = !DILocation(line: 246, column: 5, scope: !4700)
!4707 = !DILocation(line: 249, column: 27, scope: !4663)
!4708 = !DILocation(line: 249, column: 46, scope: !4663)
!4709 = !DILocation(line: 249, column: 7, scope: !4663)
!4710 = !DILocation(line: 249, column: 15, scope: !4663)
!4711 = !DILocation(line: 250, column: 14, scope: !4663)
!4712 = !DILocation(line: 251, column: 26, scope: !4663)
!4713 = !DILocation(line: 251, column: 7, scope: !4663)
!4714 = !DILocation(line: 251, column: 12, scope: !4663)
!4715 = !DILocation(line: 257, column: 16, scope: !4663)
!4716 = !DILocation(line: 257, column: 13, scope: !4663)
!4717 = !DILocation(line: 259, column: 11, scope: !4663)
!4718 = !DILocation(line: 260, column: 1, scope: !4663)
!4719 = distinct !DISubprogram(name: "bmp_iter_set", scope: !641, file: !641, line: 393, type: !4720, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4722)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!565, !4666, !1838}
!4722 = !{!4723, !4724, !4725}
!4723 = !DILocalVariable(name: "bi", arg: 1, scope: !4719, file: !641, line: 393, type: !4666)
!4724 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4719, file: !641, line: 393, type: !1838)
!4725 = !DILabel(scope: !4726, name: "next_bit", file: !641, line: 398)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !641, line: 397, column: 5)
!4727 = distinct !DILexicalBlock(scope: !4719, file: !641, line: 396, column: 7)
!4728 = !DILocation(line: 0, scope: !4719)
!4729 = !DILocation(line: 396, column: 11, scope: !4727)
!4730 = !DILocation(line: 396, column: 7, scope: !4727)
!4731 = !DILocation(line: 396, column: 7, scope: !4719)
!4732 = !DILocation(line: 419, column: 15, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !641, line: 418, column: 2)
!4734 = distinct !DILexicalBlock(scope: !4719, file: !641, line: 415, column: 5)
!4735 = !DILocation(line: 399, column: 7, scope: !4726)
!4736 = !DILocation(line: 398, column: 5, scope: !4726)
!4737 = !DILocation(line: 399, column: 20, scope: !4726)
!4738 = !DILocation(line: 399, column: 25, scope: !4726)
!4739 = !DILocation(line: 399, column: 14, scope: !4726)
!4740 = !DILocation(line: 401, column: 13, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4726, file: !641, line: 400, column: 2)
!4742 = !DILocation(line: 402, column: 12, scope: !4741)
!4743 = distinct !{!4743, !4735, !4744}
!4744 = !DILocation(line: 403, column: 2, scope: !4726)
!4745 = !DILocation(line: 410, column: 15, scope: !4719)
!4746 = !DILocation(line: 410, column: 42, scope: !4719)
!4747 = !DILocation(line: 411, column: 26, scope: !4719)
!4748 = !DILocation(line: 410, column: 11, scope: !4719)
!4749 = !DILocation(line: 412, column: 7, scope: !4719)
!4750 = !DILocation(line: 412, column: 14, scope: !4719)
!4751 = !DILocation(line: 0, scope: !4734)
!4752 = !DILocation(line: 414, column: 3, scope: !4719)
!4753 = !DILocation(line: 417, column: 7, scope: !4734)
!4754 = !DILocation(line: 417, column: 18, scope: !4734)
!4755 = !DILocation(line: 417, column: 26, scope: !4734)
!4756 = !DILocation(line: 419, column: 13, scope: !4733)
!4757 = !DILocation(line: 420, column: 8, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4733, file: !641, line: 420, column: 8)
!4759 = !DILocation(line: 420, column: 8, scope: !4733)
!4760 = !DILocation(line: 422, column: 12, scope: !4733)
!4761 = !DILocation(line: 423, column: 15, scope: !4733)
!4762 = distinct !{!4762, !4753, !4763}
!4763 = !DILocation(line: 424, column: 2, scope: !4734)
!4764 = !DILocation(line: 427, column: 28, scope: !4734)
!4765 = !DILocation(line: 427, column: 16, scope: !4734)
!4766 = !DILocation(line: 428, column: 12, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4734, file: !641, line: 428, column: 11)
!4768 = !DILocation(line: 428, column: 11, scope: !4734)
!4769 = !DILocation(line: 430, column: 27, scope: !4734)
!4770 = !DILocation(line: 430, column: 32, scope: !4734)
!4771 = !DILocation(line: 430, column: 15, scope: !4734)
!4772 = !DILocation(line: 431, column: 19, scope: !4734)
!4773 = distinct !{!4773, !4752, !4774}
!4774 = !DILocation(line: 432, column: 5, scope: !4719)
!4775 = !DILocation(line: 433, column: 1, scope: !4719)
!4776 = distinct !DISubprogram(name: "allocnos_have_intersected_live_ranges_p", scope: !3, file: !3, line: 94, type: !4777, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4779)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!565, !575, !575}
!4779 = !{!4780, !4781}
!4780 = !DILocalVariable(name: "a1", arg: 1, scope: !4776, file: !3, line: 94, type: !575)
!4781 = !DILocalVariable(name: "a2", arg: 2, scope: !4776, file: !3, line: 94, type: !575)
!4782 = !DILocation(line: 0, scope: !4776)
!4783 = !DILocation(line: 96, column: 10, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 96, column: 7)
!4785 = !DILocation(line: 96, column: 7, scope: !4776)
!4786 = !DILocation(line: 98, column: 7, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 98, column: 7)
!4788 = !DILocation(line: 98, column: 24, scope: !4787)
!4789 = !DILocation(line: 98, column: 32, scope: !4787)
!4790 = !DILocation(line: 98, column: 35, scope: !4787)
!4791 = !DILocation(line: 98, column: 52, scope: !4787)
!4792 = !DILocation(line: 99, column: 7, scope: !4787)
!4793 = !DILocation(line: 99, column: 11, scope: !4787)
!4794 = !DILocation(line: 100, column: 7, scope: !4787)
!4795 = !DILocation(line: 100, column: 4, scope: !4787)
!4796 = !DILocation(line: 98, column: 7, scope: !4776)
!4797 = !DILocation(line: 102, column: 47, scope: !4776)
!4798 = !DILocation(line: 103, column: 12, scope: !4776)
!4799 = !DILocation(line: 102, column: 10, scope: !4776)
!4800 = !DILocation(line: 102, column: 3, scope: !4776)
!4801 = !DILocation(line: 104, column: 1, scope: !4776)
!4802 = distinct !DISubprogram(name: "bmp_iter_next", scope: !641, file: !641, line: 382, type: !4803, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4805)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{null, !4666, !1838}
!4805 = !{!4806, !4807}
!4806 = !DILocalVariable(name: "bi", arg: 1, scope: !4802, file: !641, line: 382, type: !4666)
!4807 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4802, file: !641, line: 382, type: !1838)
!4808 = !DILocation(line: 0, scope: !4802)
!4809 = !DILocation(line: 384, column: 7, scope: !4802)
!4810 = !DILocation(line: 384, column: 12, scope: !4802)
!4811 = !DILocation(line: 385, column: 11, scope: !4802)
!4812 = !DILocation(line: 386, column: 1, scope: !4802)
!4813 = distinct !DISubprogram(name: "ira_mark_new_stack_slot", scope: !3, file: !3, line: 3129, type: !4814, scopeLine: 3130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4816)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{null, !585, !566, !7}
!4816 = !{!4817, !4818, !4819, !4820, !4821, !4822}
!4817 = !DILocalVariable(name: "x", arg: 1, scope: !4813, file: !3, line: 3129, type: !585)
!4818 = !DILocalVariable(name: "regno", arg: 2, scope: !4813, file: !3, line: 3129, type: !566)
!4819 = !DILocalVariable(name: "total_size", arg: 3, scope: !4813, file: !3, line: 3129, type: !7)
!4820 = !DILocalVariable(name: "slot", scope: !4813, file: !3, line: 3131, type: !4516)
!4821 = !DILocalVariable(name: "slot_num", scope: !4813, file: !3, line: 3132, type: !566)
!4822 = !DILocalVariable(name: "allocno", scope: !4813, file: !3, line: 3133, type: !575)
!4823 = !DILocation(line: 0, scope: !4813)
!4824 = !DILocation(line: 3136, column: 13, scope: !4813)
!4825 = !DILocation(line: 3137, column: 15, scope: !4813)
!4826 = !DILocation(line: 3137, column: 44, scope: !4813)
!4827 = !DILocation(line: 3138, column: 16, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 3138, column: 7)
!4829 = !DILocation(line: 3138, column: 7, scope: !4813)
!4830 = !DILocation(line: 3140, column: 49, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 3139, column: 5)
!4832 = !DILocation(line: 3141, column: 48, scope: !4831)
!4833 = !DILocation(line: 3141, column: 36, scope: !4831)
!4834 = !DILocation(line: 3142, column: 5, scope: !4831)
!4835 = !DILocation(line: 3143, column: 11, scope: !4813)
!4836 = !DILocation(line: 3144, column: 3, scope: !4813)
!4837 = !DILocation(line: 3145, column: 3, scope: !4813)
!4838 = !DILocation(line: 3146, column: 9, scope: !4813)
!4839 = !DILocation(line: 3146, column: 13, scope: !4813)
!4840 = !DILocation(line: 3147, column: 9, scope: !4813)
!4841 = !DILocation(line: 3147, column: 15, scope: !4813)
!4842 = !DILocation(line: 3148, column: 7, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 3148, column: 7)
!4844 = !DILocation(line: 3148, column: 33, scope: !4843)
!4845 = !DILocation(line: 3148, column: 40, scope: !4843)
!4846 = !DILocation(line: 3148, column: 37, scope: !4843)
!4847 = !DILocation(line: 3150, column: 14, scope: !4843)
!4848 = !DILocation(line: 3149, column: 5, scope: !4843)
!4849 = !DILocation(line: 3151, column: 1, scope: !4813)
!4850 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !641, file: !641, line: 165, type: !4851, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !1703, !661}
!4853 = !{!4854, !4855}
!4854 = !DILocalVariable(name: "head", arg: 1, scope: !4850, file: !641, line: 165, type: !1703)
!4855 = !DILocalVariable(name: "obstack", arg: 2, scope: !4850, file: !641, line: 165, type: !661)
!4856 = !DILocation(line: 0, scope: !4850)
!4857 = !DILocation(line: 167, column: 23, scope: !4850)
!4858 = !DILocation(line: 167, column: 31, scope: !4850)
!4859 = !DILocation(line: 167, column: 9, scope: !4850)
!4860 = !DILocation(line: 167, column: 15, scope: !4850)
!4861 = !DILocation(line: 168, column: 9, scope: !4850)
!4862 = !DILocation(line: 168, column: 17, scope: !4850)
!4863 = !DILocation(line: 172, column: 1, scope: !4850)
!4864 = distinct !DISubprogram(name: "ira_better_spill_reload_regno_p", scope: !3, file: !3, line: 3224, type: !4865, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4867)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!565, !573, !573, !585, !585, !585}
!4867 = !{!4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882}
!4868 = !DILocalVariable(name: "regnos", arg: 1, scope: !4864, file: !3, line: 3224, type: !573)
!4869 = !DILocalVariable(name: "other_regnos", arg: 2, scope: !4864, file: !3, line: 3224, type: !573)
!4870 = !DILocalVariable(name: "in", arg: 3, scope: !4864, file: !3, line: 3225, type: !585)
!4871 = !DILocalVariable(name: "out", arg: 4, scope: !4864, file: !3, line: 3225, type: !585)
!4872 = !DILocalVariable(name: "insn", arg: 5, scope: !4864, file: !3, line: 3225, type: !585)
!4873 = !DILocalVariable(name: "cost", scope: !4864, file: !3, line: 3227, type: !566)
!4874 = !DILocalVariable(name: "other_cost", scope: !4864, file: !3, line: 3227, type: !566)
!4875 = !DILocalVariable(name: "length", scope: !4864, file: !3, line: 3228, type: !566)
!4876 = !DILocalVariable(name: "other_length", scope: !4864, file: !3, line: 3228, type: !566)
!4877 = !DILocalVariable(name: "nrefs", scope: !4864, file: !3, line: 3229, type: !566)
!4878 = !DILocalVariable(name: "other_nrefs", scope: !4864, file: !3, line: 3229, type: !566)
!4879 = !DILocalVariable(name: "call_used_count", scope: !4864, file: !3, line: 3230, type: !566)
!4880 = !DILocalVariable(name: "other_call_used_count", scope: !4864, file: !3, line: 3230, type: !566)
!4881 = !DILocalVariable(name: "hard_regno", scope: !4864, file: !3, line: 3231, type: !566)
!4882 = !DILocalVariable(name: "other_hard_regno", scope: !4864, file: !3, line: 3231, type: !566)
!4883 = !DILocation(line: 0, scope: !4864)
!4884 = !DILocation(line: 3228, column: 3, scope: !4864)
!4885 = !DILocation(line: 3229, column: 3, scope: !4864)
!4886 = !DILocation(line: 3230, column: 3, scope: !4864)
!4887 = !DILocation(line: 3231, column: 3, scope: !4864)
!4888 = !DILocation(line: 3233, column: 10, scope: !4864)
!4889 = !DILocation(line: 3235, column: 16, scope: !4864)
!4890 = !DILocation(line: 3239, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3239, column: 7)
!4892 = !DILocation(line: 3239, column: 13, scope: !4891)
!4893 = !DILocation(line: 3239, column: 21, scope: !4891)
!4894 = !DILocation(line: 3239, column: 33, scope: !4891)
!4895 = !DILocation(line: 3239, column: 18, scope: !4891)
!4896 = !DILocation(line: 3241, column: 13, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3241, column: 7)
!4898 = !DILocation(line: 3241, column: 33, scope: !4897)
!4899 = !DILocation(line: 3241, column: 18, scope: !4897)
!4900 = !DILocation(line: 3243, column: 12, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3243, column: 7)
!4902 = !DILocation(line: 3243, column: 7, scope: !4864)
!4903 = !DILocation(line: 3244, column: 17, scope: !4901)
!4904 = !DILocation(line: 3244, column: 5, scope: !4901)
!4905 = !DILocation(line: 3245, column: 7, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3245, column: 7)
!4907 = !DILocation(line: 3245, column: 17, scope: !4906)
!4908 = !DILocation(line: 3245, column: 14, scope: !4906)
!4909 = !DILocation(line: 3245, column: 7, scope: !4864)
!4910 = !DILocation(line: 3246, column: 19, scope: !4906)
!4911 = !DILocation(line: 3246, column: 5, scope: !4906)
!4912 = !DILocation(line: 3248, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 3248, column: 7)
!4914 = !DILocation(line: 3248, column: 26, scope: !4913)
!4915 = !DILocation(line: 3248, column: 23, scope: !4913)
!4916 = !DILocation(line: 3249, column: 13, scope: !4913)
!4917 = !DILocation(line: 3250, column: 8, scope: !4913)
!4918 = !DILocation(line: 3250, column: 6, scope: !4913)
!4919 = !DILocation(line: 3249, column: 5, scope: !4913)
!4920 = !DILocation(line: 3256, column: 1, scope: !4864)
!4921 = distinct !DISubprogram(name: "calculate_spill_cost", scope: !3, file: !3, line: 3164, type: !4922, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4924)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!566, !573, !585, !585, !585, !573, !573, !573, !573}
!4924 = !{!4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944}
!4925 = !DILocalVariable(name: "regnos", arg: 1, scope: !4921, file: !3, line: 3164, type: !573)
!4926 = !DILocalVariable(name: "in", arg: 2, scope: !4921, file: !3, line: 3164, type: !585)
!4927 = !DILocalVariable(name: "out", arg: 3, scope: !4921, file: !3, line: 3164, type: !585)
!4928 = !DILocalVariable(name: "insn", arg: 4, scope: !4921, file: !3, line: 3164, type: !585)
!4929 = !DILocalVariable(name: "excess_pressure_live_length", arg: 5, scope: !4921, file: !3, line: 3165, type: !573)
!4930 = !DILocalVariable(name: "nrefs", arg: 6, scope: !4921, file: !3, line: 3166, type: !573)
!4931 = !DILocalVariable(name: "call_used_count", arg: 7, scope: !4921, file: !3, line: 3166, type: !573)
!4932 = !DILocalVariable(name: "first_hard_regno", arg: 8, scope: !4921, file: !3, line: 3166, type: !573)
!4933 = !DILocalVariable(name: "i", scope: !4921, file: !3, line: 3168, type: !566)
!4934 = !DILocalVariable(name: "cost", scope: !4921, file: !3, line: 3168, type: !566)
!4935 = !DILocalVariable(name: "regno", scope: !4921, file: !3, line: 3168, type: !566)
!4936 = !DILocalVariable(name: "hard_regno", scope: !4921, file: !3, line: 3168, type: !566)
!4937 = !DILocalVariable(name: "j", scope: !4921, file: !3, line: 3168, type: !566)
!4938 = !DILocalVariable(name: "count", scope: !4921, file: !3, line: 3168, type: !566)
!4939 = !DILocalVariable(name: "saved_cost", scope: !4921, file: !3, line: 3168, type: !566)
!4940 = !DILocalVariable(name: "nregs", scope: !4921, file: !3, line: 3168, type: !566)
!4941 = !DILocalVariable(name: "in_p", scope: !4921, file: !3, line: 3169, type: !565)
!4942 = !DILocalVariable(name: "out_p", scope: !4921, file: !3, line: 3169, type: !565)
!4943 = !DILocalVariable(name: "length", scope: !4921, file: !3, line: 3170, type: !566)
!4944 = !DILocalVariable(name: "a", scope: !4921, file: !3, line: 3171, type: !575)
!4945 = !DILocation(line: 0, scope: !4921)
!4946 = !DILocation(line: 3173, column: 10, scope: !4921)
!4947 = !DILocation(line: 0, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3175, column: 5)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 3174, column: 3)
!4950 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 3174, column: 3)
!4951 = !DILocation(line: 0, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 3195, column: 2)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 3193, column: 11)
!4954 = !DILocation(line: 3174, column: 8, scope: !4950)
!4955 = !DILocation(line: 0, scope: !4950)
!4956 = !DILocation(line: 3176, column: 15, scope: !4948)
!4957 = !DILocation(line: 3177, column: 17, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 3177, column: 11)
!4959 = !DILocation(line: 3177, column: 11, scope: !4948)
!4960 = !DILocation(line: 3179, column: 17, scope: !4948)
!4961 = !DILocation(line: 3179, column: 14, scope: !4948)
!4962 = !DILocation(line: 3180, column: 20, scope: !4948)
!4963 = !DILocation(line: 3182, column: 11, scope: !4948)
!4964 = !DILocation(line: 3183, column: 17, scope: !4948)
!4965 = !DILocation(line: 3183, column: 14, scope: !4948)
!4966 = !DILocation(line: 3184, column: 15, scope: !4948)
!4967 = !DILocation(line: 3184, column: 41, scope: !4948)
!4968 = !DILocation(line: 3184, column: 39, scope: !4948)
!4969 = !DILocation(line: 3184, column: 12, scope: !4948)
!4970 = !DILocation(line: 3185, column: 15, scope: !4948)
!4971 = !DILocation(line: 3185, column: 44, scope: !4948)
!4972 = !DILocation(line: 0, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 3187, column: 6)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 3186, column: 7)
!4975 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 3186, column: 7)
!4976 = !DILocation(line: 3186, column: 12, scope: !4975)
!4977 = !DILocation(line: 3186, column: 21, scope: !4974)
!4978 = !DILocation(line: 0, scope: !4975)
!4979 = !DILocation(line: 3186, column: 7, scope: !4975)
!4980 = !DILocation(line: 3187, column: 8, scope: !4973)
!4981 = !DILocation(line: 3187, column: 6, scope: !4974)
!4982 = !DILocation(line: 3186, column: 31, scope: !4974)
!4983 = !DILocation(line: 3186, column: 7, scope: !4974)
!4984 = distinct !{!4984, !4979, !4985}
!4985 = !DILocation(line: 3188, column: 4, scope: !4975)
!4986 = !DILocation(line: 3189, column: 13, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 3189, column: 11)
!4988 = !DILocation(line: 3189, column: 11, scope: !4948)
!4989 = !DILocation(line: 3191, column: 17, scope: !4948)
!4990 = !DILocation(line: 3191, column: 20, scope: !4948)
!4991 = !DILocation(line: 3191, column: 31, scope: !4948)
!4992 = !DILocation(line: 3191, column: 40, scope: !4948)
!4993 = !DILocation(line: 3191, column: 51, scope: !4948)
!4994 = !DILocation(line: 3192, column: 19, scope: !4948)
!4995 = !DILocation(line: 3192, column: 22, scope: !4948)
!4996 = !DILocation(line: 3192, column: 34, scope: !4948)
!4997 = !DILocation(line: 3192, column: 43, scope: !4948)
!4998 = !DILocation(line: 3192, column: 55, scope: !4948)
!4999 = !DILocation(line: 3193, column: 17, scope: !4953)
!5000 = !DILocation(line: 3194, column: 7, scope: !4953)
!5001 = !DILocation(line: 3194, column: 52, scope: !4953)
!5002 = !DILocation(line: 3193, column: 11, scope: !4948)
!5003 = !DILocation(line: 3197, column: 8, scope: !4952)
!5004 = !DILocation(line: 3199, column: 21, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 3197, column: 8)
!5006 = !DILocation(line: 3198, column: 20, scope: !5005)
!5007 = !DILocation(line: 3199, column: 39, scope: !5005)
!5008 = !DILocation(line: 3198, column: 6, scope: !5005)
!5009 = !DILocation(line: 3200, column: 8, scope: !4952)
!5010 = !DILocation(line: 3203, column: 12, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 3200, column: 8)
!5012 = !DILocation(line: 3202, column: 11, scope: !5011)
!5013 = !DILocation(line: 3203, column: 30, scope: !5011)
!5014 = !DILocation(line: 3202, column: 8, scope: !5011)
!5015 = !DILocation(line: 3201, column: 6, scope: !5011)
!5016 = !DILocation(line: 3204, column: 12, scope: !4952)
!5017 = !DILocation(line: 3204, column: 53, scope: !4952)
!5018 = !DILocation(line: 3204, column: 9, scope: !4952)
!5019 = !DILocation(line: 3205, column: 2, scope: !4952)
!5020 = !DILocation(line: 3174, column: 41, scope: !4949)
!5021 = !DILocation(line: 3174, column: 3, scope: !4949)
!5022 = distinct !{!5022, !5023, !5024}
!5023 = !DILocation(line: 3174, column: 3, scope: !4950)
!5024 = !DILocation(line: 3206, column: 5, scope: !4950)
!5025 = !DILocation(line: 3207, column: 32, scope: !4921)
!5026 = !DILocation(line: 3208, column: 20, scope: !4921)
!5027 = !DILocation(line: 3210, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 3210, column: 7)
!5029 = !DILocation(line: 3210, column: 17, scope: !5028)
!5030 = !DILocation(line: 3210, column: 7, scope: !4921)
!5031 = !DILocation(line: 3212, column: 20, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 3211, column: 5)
!5033 = !DILocation(line: 3213, column: 5, scope: !5032)
!5034 = !DILocation(line: 3214, column: 21, scope: !4921)
!5035 = !DILocation(line: 3215, column: 3, scope: !4921)
!5036 = distinct !DISubprogram(name: "ira_initiate_assign", scope: !3, file: !3, line: 3262, type: !5037, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{null}
!5039 = !DILocation(line: 3266, column: 13, scope: !5036)
!5040 = !DILocation(line: 3266, column: 11, scope: !5036)
!5041 = !DILocation(line: 3265, column: 25, scope: !5036)
!5042 = !DILocation(line: 3265, column: 5, scope: !5036)
!5043 = !DILocation(line: 3267, column: 34, scope: !5036)
!5044 = !DILocation(line: 3267, column: 32, scope: !5036)
!5045 = !DILocation(line: 3268, column: 3, scope: !5036)
!5046 = !DILocation(line: 3269, column: 61, scope: !5036)
!5047 = !DILocation(line: 3269, column: 59, scope: !5036)
!5048 = !DILocation(line: 3269, column: 32, scope: !5036)
!5049 = !DILocation(line: 3269, column: 22, scope: !5036)
!5050 = !DILocation(line: 3270, column: 1, scope: !5036)
!5051 = distinct !DISubprogram(name: "initiate_cost_update", scope: !3, file: !3, line: 170, type: !5037, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5052)
!5052 = !{!5053}
!5053 = !DILocalVariable(name: "size", scope: !5051, file: !3, line: 172, type: !1150)
!5054 = !DILocation(line: 174, column: 10, scope: !5051)
!5055 = !DILocation(line: 174, column: 27, scope: !5051)
!5056 = !DILocation(line: 0, scope: !5051)
!5057 = !DILocation(line: 176, column: 41, scope: !5051)
!5058 = !DILocation(line: 176, column: 5, scope: !5051)
!5059 = !DILocation(line: 177, column: 3, scope: !5051)
!5060 = !DILocation(line: 178, column: 21, scope: !5051)
!5061 = !DILocation(line: 179, column: 1, scope: !5051)
!5062 = distinct !DISubprogram(name: "ira_finish_assign", scope: !3, file: !3, line: 3274, type: !5037, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5063 = !DILocation(line: 3276, column: 13, scope: !5062)
!5064 = !DILocation(line: 3276, column: 3, scope: !5062)
!5065 = !DILocation(line: 3277, column: 20, scope: !5062)
!5066 = !DILocation(line: 3277, column: 3, scope: !5062)
!5067 = !DILocation(line: 3278, column: 3, scope: !5062)
!5068 = !DILocation(line: 3279, column: 13, scope: !5062)
!5069 = !DILocation(line: 3279, column: 3, scope: !5062)
!5070 = !DILocation(line: 3280, column: 1, scope: !5062)
!5071 = distinct !DISubprogram(name: "finish_cost_update", scope: !3, file: !3, line: 183, type: !5037, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5072 = !DILocation(line: 185, column: 13, scope: !5071)
!5073 = !DILocation(line: 185, column: 3, scope: !5071)
!5074 = !DILocation(line: 186, column: 1, scope: !5071)
!5075 = distinct !DISubprogram(name: "ira_color", scope: !3, file: !3, line: 3389, type: !5037, scopeLine: 3390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5076)
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "a", scope: !5075, file: !3, line: 3391, type: !575)
!5078 = !DILocalVariable(name: "ai", scope: !5075, file: !3, line: 3392, type: !2605)
!5079 = !DILocation(line: 3391, column: 3, scope: !5075)
!5080 = !DILocation(line: 3392, column: 3, scope: !5075)
!5081 = !DILocation(line: 0, scope: !5075)
!5082 = !DILocation(line: 3395, column: 3, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 3395, column: 3)
!5084 = !DILocation(line: 3395, column: 3, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 3395, column: 3)
!5086 = !DILocation(line: 3397, column: 41, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 3396, column: 5)
!5088 = !DILocation(line: 3397, column: 7, scope: !5087)
!5089 = !DILocation(line: 3397, column: 39, scope: !5087)
!5090 = !DILocation(line: 3398, column: 46, scope: !5087)
!5091 = !DILocation(line: 3398, column: 7, scope: !5087)
!5092 = !DILocation(line: 3398, column: 44, scope: !5087)
!5093 = distinct !{!5093, !5082, !5094}
!5094 = !DILocation(line: 3399, column: 5, scope: !5083)
!5095 = !DILocation(line: 3400, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 3400, column: 7)
!5097 = !DILocation(line: 3400, column: 7, scope: !5075)
!5098 = !DILocation(line: 3401, column: 5, scope: !5096)
!5099 = !DILocation(line: 3403, column: 5, scope: !5096)
!5100 = !DILocation(line: 3404, column: 1, scope: !5075)
!5101 = distinct !DISubprogram(name: "color", scope: !3, file: !3, line: 3286, type: !5037, scopeLine: 3287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5102 = !DILocation(line: 3288, column: 23, scope: !5101)
!5103 = !DILocation(line: 3288, column: 21, scope: !5101)
!5104 = !DILocation(line: 3290, column: 7, scope: !5101)
!5105 = !DILocation(line: 3290, column: 5, scope: !5101)
!5106 = !DILocation(line: 3291, column: 3, scope: !5101)
!5107 = !DILocation(line: 3292, column: 3, scope: !5101)
!5108 = !DILocation(line: 3293, column: 3, scope: !5101)
!5109 = !DILocation(line: 3294, column: 3, scope: !5101)
!5110 = !DILocation(line: 3295, column: 3, scope: !5101)
!5111 = !DILocation(line: 3296, column: 3, scope: !5101)
!5112 = !DILocation(line: 3297, column: 3, scope: !5101)
!5113 = !DILocation(line: 3298, column: 1, scope: !5101)
!5114 = distinct !DISubprogram(name: "fast_allocation", scope: !3, file: !3, line: 3309, type: !5037, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5115)
!5115 = !{!5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129}
!5116 = !DILocalVariable(name: "i", scope: !5114, file: !3, line: 3311, type: !566)
!5117 = !DILocalVariable(name: "j", scope: !5114, file: !3, line: 3311, type: !566)
!5118 = !DILocalVariable(name: "k", scope: !5114, file: !3, line: 3311, type: !566)
!5119 = !DILocalVariable(name: "num", scope: !5114, file: !3, line: 3311, type: !566)
!5120 = !DILocalVariable(name: "class_size", scope: !5114, file: !3, line: 3311, type: !566)
!5121 = !DILocalVariable(name: "hard_regno", scope: !5114, file: !3, line: 3311, type: !566)
!5122 = !DILocalVariable(name: "no_stack_reg_p", scope: !5114, file: !3, line: 3313, type: !565)
!5123 = !DILocalVariable(name: "cover_class", scope: !5114, file: !3, line: 3315, type: !390)
!5124 = !DILocalVariable(name: "mode", scope: !5114, file: !3, line: 3316, type: !5)
!5125 = !DILocalVariable(name: "a", scope: !5114, file: !3, line: 3317, type: !575)
!5126 = !DILocalVariable(name: "ai", scope: !5114, file: !3, line: 3318, type: !2605)
!5127 = !DILocalVariable(name: "r", scope: !5114, file: !3, line: 3319, type: !1736)
!5128 = !DILocalVariable(name: "conflict_hard_regs", scope: !5114, file: !3, line: 3320, type: !1752)
!5129 = !DILocalVariable(name: "used_hard_regs", scope: !5114, file: !3, line: 3320, type: !1820)
!5130 = !DILocation(line: 3317, column: 3, scope: !5114)
!5131 = !DILocation(line: 3318, column: 3, scope: !5114)
!5132 = !DILocation(line: 3323, column: 13, scope: !5114)
!5133 = !DILocation(line: 3323, column: 11, scope: !5114)
!5134 = !DILocation(line: 3322, column: 39, scope: !5114)
!5135 = !DILocation(line: 3322, column: 19, scope: !5114)
!5136 = !DILocation(line: 0, scope: !5114)
!5137 = !DILocation(line: 3325, column: 3, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 3325, column: 3)
!5139 = !DILocation(line: 0, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 3325, column: 3)
!5141 = !DILocation(line: 3325, column: 3, scope: !5140)
!5142 = !DILocation(line: 3326, column: 30, scope: !5140)
!5143 = !DILocation(line: 3326, column: 5, scope: !5140)
!5144 = !DILocation(line: 3326, column: 24, scope: !5140)
!5145 = !DILocation(line: 3326, column: 28, scope: !5140)
!5146 = distinct !{!5146, !5137, !5147}
!5147 = !DILocation(line: 3326, column: 30, scope: !5138)
!5148 = !DILocation(line: 3327, column: 61, scope: !5114)
!5149 = !DILocation(line: 3327, column: 59, scope: !5114)
!5150 = !DILocation(line: 3327, column: 32, scope: !5114)
!5151 = !DILocation(line: 3327, column: 22, scope: !5114)
!5152 = !DILocation(line: 3328, column: 29, scope: !5114)
!5153 = !DILocation(line: 3328, column: 3, scope: !5114)
!5154 = !DILocation(line: 3330, column: 11, scope: !5114)
!5155 = !DILocation(line: 3330, column: 9, scope: !5114)
!5156 = !DILocation(line: 3329, column: 37, scope: !5114)
!5157 = !DILocation(line: 3329, column: 20, scope: !5114)
!5158 = !DILocation(line: 3331, column: 8, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 3331, column: 3)
!5160 = !DILocation(line: 0, scope: !5159)
!5161 = !DILocation(line: 3331, column: 19, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 3331, column: 3)
!5163 = !DILocation(line: 3331, column: 17, scope: !5162)
!5164 = !DILocation(line: 3331, column: 3, scope: !5159)
!5165 = !DILocation(line: 3332, column: 5, scope: !5162)
!5166 = !DILocation(line: 3331, column: 35, scope: !5162)
!5167 = !DILocation(line: 3331, column: 3, scope: !5162)
!5168 = distinct !{!5168, !5164, !5169}
!5169 = !DILocation(line: 3332, column: 5, scope: !5159)
!5170 = !DILocation(line: 3334, column: 15, scope: !5114)
!5171 = !DILocation(line: 3334, column: 32, scope: !5114)
!5172 = !DILocation(line: 3334, column: 3, scope: !5114)
!5173 = !DILocation(line: 3340, column: 17, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 3340, column: 3)
!5175 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 3340, column: 3)
!5176 = !DILocation(line: 3340, column: 8, scope: !5175)
!5177 = !DILocation(line: 0, scope: !5175)
!5178 = !DILocation(line: 3340, column: 3, scope: !5175)
!5179 = !DILocation(line: 3342, column: 11, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 3341, column: 5)
!5181 = !DILocation(line: 3342, column: 9, scope: !5180)
!5182 = !DILocation(line: 3343, column: 7, scope: !5180)
!5183 = !DILocation(line: 3344, column: 16, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 3344, column: 7)
!5185 = !DILocation(line: 3344, column: 12, scope: !5184)
!5186 = !DILocation(line: 0, scope: !5184)
!5187 = !DILocation(line: 3344, column: 43, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 3344, column: 7)
!5189 = !DILocation(line: 3344, column: 7, scope: !5184)
!5190 = !DILocation(line: 3345, column: 15, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 3345, column: 2)
!5192 = !DILocation(line: 0, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 3345, column: 2)
!5194 = !DILocation(line: 3345, column: 7, scope: !5191)
!5195 = !DILocation(line: 0, scope: !5180)
!5196 = !DILocation(line: 3345, column: 24, scope: !5193)
!5197 = !DILocation(line: 3345, column: 2, scope: !5191)
!5198 = !DILocation(line: 3346, column: 4, scope: !5193)
!5199 = !DILocation(line: 3345, column: 39, scope: !5193)
!5200 = !DILocation(line: 3345, column: 2, scope: !5193)
!5201 = distinct !{!5201, !5197, !5202}
!5202 = !DILocation(line: 3346, column: 4, scope: !5191)
!5203 = !DILocation(line: 3344, column: 59, scope: !5188)
!5204 = !DILocation(line: 3344, column: 7, scope: !5188)
!5205 = distinct !{!5205, !5189, !5206}
!5206 = !DILocation(line: 3346, column: 4, scope: !5184)
!5207 = !DILocation(line: 3347, column: 21, scope: !5180)
!5208 = !DILocation(line: 3348, column: 7, scope: !5180)
!5209 = !DILocation(line: 3348, column: 30, scope: !5180)
!5210 = !DILocation(line: 3349, column: 7, scope: !5180)
!5211 = !DILocation(line: 3349, column: 30, scope: !5180)
!5212 = !DILocation(line: 3350, column: 34, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 3350, column: 11)
!5214 = !DILocation(line: 3350, column: 11, scope: !5213)
!5215 = !DILocation(line: 3350, column: 11, scope: !5180)
!5216 = !DILocation(line: 3353, column: 14, scope: !5180)
!5217 = !DILocation(line: 3355, column: 24, scope: !5180)
!5218 = !DILocation(line: 3357, column: 20, scope: !5180)
!5219 = !DILocation(line: 0, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 3362, column: 8)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 3359, column: 2)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 3358, column: 7)
!5223 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 3358, column: 7)
!5224 = !DILocation(line: 0, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 3366, column: 8)
!5226 = !DILocation(line: 3358, column: 12, scope: !5223)
!5227 = !DILocation(line: 0, scope: !5223)
!5228 = !DILocation(line: 3358, column: 21, scope: !5222)
!5229 = !DILocation(line: 3358, column: 7, scope: !5223)
!5230 = !DILocation(line: 3360, column: 17, scope: !5221)
!5231 = !DILocation(line: 3362, column: 23, scope: !5220)
!5232 = !DILocation(line: 3366, column: 9, scope: !5225)
!5233 = !DILocation(line: 3367, column: 8, scope: !5225)
!5234 = !DILocation(line: 3367, column: 12, scope: !5225)
!5235 = !DILocation(line: 3366, column: 8, scope: !5221)
!5236 = !DILocation(line: 3358, column: 36, scope: !5222)
!5237 = !DILocation(line: 3358, column: 7, scope: !5222)
!5238 = distinct !{!5238, !5229, !5239}
!5239 = !DILocation(line: 3376, column: 2, scope: !5223)
!5240 = !DILocation(line: 3340, column: 25, scope: !5174)
!5241 = !DILocation(line: 3370, column: 4, scope: !5221)
!5242 = !DILocation(line: 3370, column: 27, scope: !5221)
!5243 = !DILocation(line: 3371, column: 13, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 3371, column: 4)
!5245 = !DILocation(line: 0, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 3372, column: 6)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 3372, column: 6)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 3371, column: 4)
!5249 = !DILocation(line: 3371, column: 9, scope: !5244)
!5250 = !DILocation(line: 0, scope: !5244)
!5251 = !DILocation(line: 3371, column: 40, scope: !5248)
!5252 = !DILocation(line: 3371, column: 4, scope: !5244)
!5253 = !DILocation(line: 3372, column: 18, scope: !5247)
!5254 = !DILocation(line: 3372, column: 11, scope: !5247)
!5255 = !DILocation(line: 0, scope: !5247)
!5256 = !DILocation(line: 3372, column: 33, scope: !5246)
!5257 = !DILocation(line: 3372, column: 27, scope: !5246)
!5258 = !DILocation(line: 3372, column: 6, scope: !5247)
!5259 = !DILocation(line: 3373, column: 8, scope: !5246)
!5260 = !DILocation(line: 3372, column: 42, scope: !5246)
!5261 = !DILocation(line: 3372, column: 6, scope: !5246)
!5262 = distinct !{!5262, !5258, !5263}
!5263 = !DILocation(line: 3373, column: 8, scope: !5247)
!5264 = !DILocation(line: 3371, column: 56, scope: !5248)
!5265 = !DILocation(line: 3371, column: 4, scope: !5248)
!5266 = distinct !{!5266, !5252, !5267}
!5267 = !DILocation(line: 3373, column: 8, scope: !5244)
!5268 = !DILocation(line: 3340, column: 3, scope: !5174)
!5269 = distinct !{!5269, !5178, !5270}
!5270 = !DILocation(line: 3377, column: 5, scope: !5175)
!5271 = !DILocation(line: 3378, column: 13, scope: !5114)
!5272 = !DILocation(line: 3378, column: 3, scope: !5114)
!5273 = !DILocation(line: 3379, column: 3, scope: !5114)
!5274 = !DILocation(line: 3380, column: 13, scope: !5114)
!5275 = !DILocation(line: 3380, column: 3, scope: !5114)
!5276 = !DILocation(line: 3381, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 3381, column: 7)
!5278 = !DILocation(line: 3381, column: 33, scope: !5277)
!5279 = !DILocation(line: 3381, column: 40, scope: !5277)
!5280 = !DILocation(line: 3381, column: 54, scope: !5277)
!5281 = !DILocation(line: 3381, column: 37, scope: !5277)
!5282 = !DILocation(line: 3382, column: 5, scope: !5277)
!5283 = !DILocation(line: 3383, column: 1, scope: !5114)
!5284 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !5285, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5287)
!5285 = !DISubroutineType(types: !5286)
!5286 = !{!565, !2433}
!5287 = !{!5288}
!5288 = !DILocalVariable(name: "i", arg: 1, scope: !5284, file: !135, line: 721, type: !2433)
!5289 = !DILocation(line: 723, column: 22, scope: !5284)
!5290 = !DILocation(line: 723, column: 19, scope: !5284)
!5291 = !DILocation(line: 723, column: 10, scope: !5284)
!5292 = !DILocation(line: 723, column: 3, scope: !5284)
!5293 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !5294, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5296)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!975, !2433}
!5296 = !{!5297}
!5297 = !DILocalVariable(name: "i", arg: 1, scope: !5293, file: !135, line: 752, type: !2433)
!5298 = !DILocation(line: 754, column: 10, scope: !5293)
!5299 = !DILocation(line: 754, column: 3, scope: !5293)
!5300 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !5301, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!7, !2567}
!5303 = !{!5304}
!5304 = !DILocalVariable(name: "vec_", arg: 1, scope: !5300, file: !135, line: 150, type: !2567)
!5305 = !DILocation(line: 0, scope: !5300)
!5306 = !DILocation(line: 150, column: 1, scope: !5300)
!5307 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !5308, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5310)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!963, !2433}
!5310 = !{!5311}
!5311 = !DILocalVariable(name: "i", arg: 1, scope: !5307, file: !135, line: 685, type: !2433)
!5312 = !DILocation(line: 687, column: 3, scope: !5307)
!5313 = !DILocation(line: 688, column: 10, scope: !5307)
!5314 = !DILocation(line: 688, column: 3, scope: !5307)
!5315 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !5316, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5318)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{!975, !2567, !7}
!5318 = !{!5319, !5320}
!5319 = !DILocalVariable(name: "vec_", arg: 1, scope: !5315, file: !135, line: 150, type: !2567)
!5320 = !DILocalVariable(name: "ix_", arg: 2, scope: !5315, file: !135, line: 150, type: !7)
!5321 = !DILocation(line: 0, scope: !5315)
!5322 = !DILocation(line: 150, column: 1, scope: !5315)
!5323 = distinct !DISubprogram(name: "ira_get_register_move_cost", scope: !576, file: !576, line: 906, type: !5324, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5326)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!566, !5, !390, !390}
!5326 = !{!5327, !5328, !5329}
!5327 = !DILocalVariable(name: "mode", arg: 1, scope: !5323, file: !576, line: 906, type: !5)
!5328 = !DILocalVariable(name: "from", arg: 2, scope: !5323, file: !576, line: 907, type: !390)
!5329 = !DILocalVariable(name: "to", arg: 3, scope: !5323, file: !576, line: 907, type: !390)
!5330 = !DILocation(line: 0, scope: !5323)
!5331 = !DILocation(line: 909, column: 7, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5323, file: !576, line: 909, column: 7)
!5333 = !DILocation(line: 909, column: 36, scope: !5332)
!5334 = !DILocation(line: 909, column: 7, scope: !5323)
!5335 = !DILocation(line: 910, column: 5, scope: !5332)
!5336 = !DILocation(line: 911, column: 10, scope: !5323)
!5337 = !DILocation(line: 911, column: 3, scope: !5323)
!5338 = distinct !DISubprogram(name: "ira_allocate_and_set_or_copy_costs", scope: !576, file: !576, line: 1207, type: !5339, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5342)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{null, !5341, !390, !566, !573}
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!5342 = !{!5343, !5344, !5345, !5346, !5347, !5348, !5349}
!5343 = !DILocalVariable(name: "vec", arg: 1, scope: !5338, file: !576, line: 1207, type: !5341)
!5344 = !DILocalVariable(name: "cover_class", arg: 2, scope: !5338, file: !576, line: 1207, type: !390)
!5345 = !DILocalVariable(name: "val", arg: 3, scope: !5338, file: !576, line: 1208, type: !566)
!5346 = !DILocalVariable(name: "src", arg: 4, scope: !5338, file: !576, line: 1208, type: !573)
!5347 = !DILocalVariable(name: "i", scope: !5338, file: !576, line: 1210, type: !566)
!5348 = !DILocalVariable(name: "reg_costs", scope: !5338, file: !576, line: 1210, type: !573)
!5349 = !DILocalVariable(name: "len", scope: !5338, file: !576, line: 1211, type: !566)
!5350 = !DILocation(line: 0, scope: !5338)
!5351 = !DILocation(line: 1213, column: 7, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5338, file: !576, line: 1213, column: 7)
!5353 = !DILocation(line: 1213, column: 12, scope: !5352)
!5354 = !DILocation(line: 1213, column: 7, scope: !5338)
!5355 = !DILocation(line: 1215, column: 22, scope: !5338)
!5356 = !DILocation(line: 1215, column: 8, scope: !5338)
!5357 = !DILocation(line: 1216, column: 9, scope: !5338)
!5358 = !DILocation(line: 1217, column: 11, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5338, file: !576, line: 1217, column: 7)
!5360 = !DILocation(line: 1217, column: 7, scope: !5338)
!5361 = !DILocation(line: 1221, column: 7, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !576, line: 1221, column: 7)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !576, line: 1220, column: 5)
!5364 = !DILocation(line: 1218, column: 13, scope: !5359)
!5365 = !DILocation(line: 1218, column: 24, scope: !5359)
!5366 = !DILocation(line: 1218, column: 44, scope: !5359)
!5367 = !DILocation(line: 1218, column: 42, scope: !5359)
!5368 = !DILocation(line: 1218, column: 5, scope: !5359)
!5369 = !DILocation(line: 0, scope: !5362)
!5370 = !DILocation(line: 1221, column: 21, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5362, file: !576, line: 1221, column: 7)
!5372 = !DILocation(line: 1222, column: 2, scope: !5371)
!5373 = !DILocation(line: 1222, column: 15, scope: !5371)
!5374 = !DILocation(line: 1221, column: 29, scope: !5371)
!5375 = !DILocation(line: 1221, column: 7, scope: !5371)
!5376 = distinct !{!5376, !5361, !5377}
!5377 = !DILocation(line: 1222, column: 17, scope: !5362)
!5378 = !DILocation(line: 1224, column: 1, scope: !5338)
!5379 = distinct !DISubprogram(name: "start_update_cost", scope: !3, file: !3, line: 195, type: !5037, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5380 = !DILocation(line: 197, column: 20, scope: !5379)
!5381 = !DILocation(line: 198, column: 21, scope: !5379)
!5382 = !DILocation(line: 199, column: 1, scope: !5379)
!5383 = distinct !DISubprogram(name: "ira_allocate_and_copy_costs", scope: !576, file: !576, line: 1172, type: !5384, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5386)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{null, !5341, !390, !573}
!5386 = !{!5387, !5388, !5389, !5390}
!5387 = !DILocalVariable(name: "vec", arg: 1, scope: !5383, file: !576, line: 1172, type: !5341)
!5388 = !DILocalVariable(name: "cover_class", arg: 2, scope: !5383, file: !576, line: 1172, type: !390)
!5389 = !DILocalVariable(name: "src", arg: 3, scope: !5383, file: !576, line: 1172, type: !573)
!5390 = !DILocalVariable(name: "len", scope: !5383, file: !576, line: 1174, type: !566)
!5391 = !DILocation(line: 0, scope: !5383)
!5392 = !DILocation(line: 1176, column: 7, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5383, file: !576, line: 1176, column: 7)
!5394 = !DILocation(line: 1176, column: 12, scope: !5393)
!5395 = !DILocation(line: 1176, column: 27, scope: !5393)
!5396 = !DILocation(line: 1176, column: 20, scope: !5393)
!5397 = !DILocation(line: 1178, column: 10, scope: !5383)
!5398 = !DILocation(line: 1178, column: 8, scope: !5383)
!5399 = !DILocation(line: 1179, column: 9, scope: !5383)
!5400 = !DILocation(line: 1180, column: 11, scope: !5383)
!5401 = !DILocation(line: 1180, column: 17, scope: !5383)
!5402 = !DILocation(line: 1180, column: 37, scope: !5383)
!5403 = !DILocation(line: 1180, column: 35, scope: !5383)
!5404 = !DILocation(line: 1180, column: 3, scope: !5383)
!5405 = !DILocation(line: 1181, column: 1, scope: !5383)
!5406 = distinct !DISubprogram(name: "hard_reg_set_subset_p", scope: !1753, file: !1753, line: 115, type: !5407, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5410)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!565, !5409, !5409}
!5409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!5410 = !{!5411, !5412}
!5411 = !DILocalVariable(name: "x", arg: 1, scope: !5406, file: !1753, line: 115, type: !5409)
!5412 = !DILocalVariable(name: "y", arg: 2, scope: !5406, file: !1753, line: 115, type: !5409)
!5413 = !DILocation(line: 0, scope: !5406)
!5414 = !DILocation(line: 117, column: 15, scope: !5406)
!5415 = !DILocation(line: 117, column: 13, scope: !5406)
!5416 = !DILocation(line: 117, column: 19, scope: !5406)
!5417 = !DILocation(line: 117, column: 10, scope: !5406)
!5418 = !DILocation(line: 117, column: 3, scope: !5406)
!5419 = distinct !DISubprogram(name: "queue_update_cost", scope: !3, file: !3, line: 204, type: !5420, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5422)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !575, !566}
!5422 = !{!5423, !5424, !5425}
!5423 = !DILocalVariable(name: "allocno", arg: 1, scope: !5419, file: !3, line: 204, type: !575)
!5424 = !DILocalVariable(name: "divisor", arg: 2, scope: !5419, file: !3, line: 204, type: !566)
!5425 = !DILocalVariable(name: "elem", scope: !5419, file: !3, line: 206, type: !1810)
!5426 = !DILocation(line: 0, scope: !5419)
!5427 = !DILocation(line: 208, column: 11, scope: !5419)
!5428 = !DILocation(line: 208, column: 35, scope: !5419)
!5429 = !DILocation(line: 209, column: 13, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 209, column: 7)
!5431 = !DILocation(line: 209, column: 22, scope: !5430)
!5432 = !DILocation(line: 209, column: 19, scope: !5430)
!5433 = !DILocation(line: 210, column: 7, scope: !5430)
!5434 = !DILocation(line: 210, column: 10, scope: !5430)
!5435 = !DILocation(line: 210, column: 40, scope: !5430)
!5436 = !DILocation(line: 209, column: 7, scope: !5419)
!5437 = !DILocation(line: 212, column: 19, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 211, column: 5)
!5439 = !DILocation(line: 213, column: 13, scope: !5438)
!5440 = !DILocation(line: 213, column: 21, scope: !5438)
!5441 = !DILocation(line: 214, column: 13, scope: !5438)
!5442 = !DILocation(line: 214, column: 18, scope: !5438)
!5443 = !DILocation(line: 215, column: 11, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 215, column: 11)
!5445 = !DILocation(line: 215, column: 29, scope: !5444)
!5446 = !DILocation(line: 215, column: 11, scope: !5438)
!5447 = !DILocation(line: 216, column: 20, scope: !5444)
!5448 = !DILocation(line: 216, column: 2, scope: !5444)
!5449 = !DILocation(line: 218, column: 2, scope: !5444)
!5450 = !DILocation(line: 218, column: 26, scope: !5444)
!5451 = !DILocation(line: 218, column: 31, scope: !5444)
!5452 = !DILocation(line: 219, column: 30, scope: !5438)
!5453 = !DILocation(line: 220, column: 5, scope: !5438)
!5454 = !DILocation(line: 221, column: 1, scope: !5419)
!5455 = distinct !DISubprogram(name: "update_conflict_hard_regno_costs", scope: !3, file: !3, line: 322, type: !5456, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5458)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{null, !573, !390, !565}
!5458 = !{!5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477}
!5459 = !DILocalVariable(name: "costs", arg: 1, scope: !5455, file: !3, line: 322, type: !573)
!5460 = !DILocalVariable(name: "cover_class", arg: 2, scope: !5455, file: !3, line: 322, type: !390)
!5461 = !DILocalVariable(name: "decr_p", arg: 3, scope: !5455, file: !3, line: 323, type: !565)
!5462 = !DILocalVariable(name: "i", scope: !5455, file: !3, line: 325, type: !566)
!5463 = !DILocalVariable(name: "cost", scope: !5455, file: !3, line: 325, type: !566)
!5464 = !DILocalVariable(name: "class_size", scope: !5455, file: !3, line: 325, type: !566)
!5465 = !DILocalVariable(name: "freq", scope: !5455, file: !3, line: 325, type: !566)
!5466 = !DILocalVariable(name: "mult", scope: !5455, file: !3, line: 325, type: !566)
!5467 = !DILocalVariable(name: "div", scope: !5455, file: !3, line: 325, type: !566)
!5468 = !DILocalVariable(name: "divisor", scope: !5455, file: !3, line: 325, type: !566)
!5469 = !DILocalVariable(name: "index", scope: !5455, file: !3, line: 326, type: !566)
!5470 = !DILocalVariable(name: "hard_regno", scope: !5455, file: !3, line: 326, type: !566)
!5471 = !DILocalVariable(name: "conflict_costs", scope: !5455, file: !3, line: 327, type: !573)
!5472 = !DILocalVariable(name: "cont_p", scope: !5455, file: !3, line: 328, type: !565)
!5473 = !DILocalVariable(name: "another_cover_class", scope: !5455, file: !3, line: 329, type: !390)
!5474 = !DILocalVariable(name: "allocno", scope: !5455, file: !3, line: 330, type: !575)
!5475 = !DILocalVariable(name: "another_allocno", scope: !5455, file: !3, line: 330, type: !575)
!5476 = !DILocalVariable(name: "cp", scope: !5455, file: !3, line: 331, type: !1716)
!5477 = !DILocalVariable(name: "next_cp", scope: !5455, file: !3, line: 331, type: !1716)
!5478 = !DILocation(line: 0, scope: !5455)
!5479 = !DILocation(line: 325, column: 3, scope: !5455)
!5480 = !DILocation(line: 330, column: 3, scope: !5455)
!5481 = !DILocation(line: 0, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 349, column: 7)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 335, column: 7)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 334, column: 5)
!5485 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 334, column: 5)
!5486 = !DILocation(line: 0, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 382, column: 7)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 372, column: 8)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 371, column: 6)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 371, column: 6)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 364, column: 4)
!5492 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 361, column: 6)
!5493 = !DILocation(line: 333, column: 3, scope: !5455)
!5494 = !DILocation(line: 333, column: 10, scope: !5455)
!5495 = !DILocation(line: 334, column: 15, scope: !5485)
!5496 = !DILocation(line: 334, column: 10, scope: !5485)
!5497 = !DILocation(line: 0, scope: !5485)
!5498 = !DILocation(line: 334, column: 44, scope: !5484)
!5499 = !DILocation(line: 334, column: 5, scope: !5485)
!5500 = distinct !{!5500, !5493, !5501}
!5501 = !DILocation(line: 394, column: 7, scope: !5455)
!5502 = !DILocation(line: 336, column: 10, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 336, column: 6)
!5504 = !DILocation(line: 336, column: 19, scope: !5503)
!5505 = !DILocation(line: 336, column: 16, scope: !5503)
!5506 = !DILocation(line: 336, column: 6, scope: !5483)
!5507 = !DILocation(line: 338, column: 20, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 337, column: 4)
!5509 = !DILocation(line: 339, column: 28, scope: !5508)
!5510 = !DILocation(line: 340, column: 4, scope: !5508)
!5511 = !DILocation(line: 341, column: 15, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 341, column: 11)
!5513 = !DILocation(line: 341, column: 22, scope: !5512)
!5514 = !DILocation(line: 341, column: 11, scope: !5503)
!5515 = !DILocation(line: 343, column: 20, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 342, column: 4)
!5517 = !DILocation(line: 345, column: 4, scope: !5516)
!5518 = !DILocation(line: 347, column: 4, scope: !5512)
!5519 = !DILocation(line: 0, scope: !5503)
!5520 = !DILocation(line: 348, column: 25, scope: !5483)
!5521 = !DILocation(line: 349, column: 9, scope: !5482)
!5522 = !DILocation(line: 350, column: 6, scope: !5482)
!5523 = !DILocation(line: 350, column: 9, scope: !5482)
!5524 = !DILocation(line: 351, column: 6, scope: !5482)
!5525 = !DILocation(line: 351, column: 9, scope: !5482)
!5526 = !DILocation(line: 349, column: 7, scope: !5483)
!5527 = !DILocation(line: 354, column: 15, scope: !5483)
!5528 = !DILocation(line: 356, column: 6, scope: !5483)
!5529 = !DILocation(line: 358, column: 5, scope: !5483)
!5530 = !DILocation(line: 355, column: 2, scope: !5483)
!5531 = !DILocation(line: 360, column: 6, scope: !5483)
!5532 = !DILocation(line: 361, column: 21, scope: !5492)
!5533 = !DILocation(line: 361, column: 6, scope: !5483)
!5534 = !DILocation(line: 389, column: 9, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 388, column: 6)
!5536 = !DILocation(line: 365, column: 17, scope: !5491)
!5537 = !DILocation(line: 366, column: 13, scope: !5491)
!5538 = !DILocation(line: 367, column: 15, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 367, column: 10)
!5540 = !DILocation(line: 367, column: 10, scope: !5491)
!5541 = !DILocation(line: 369, column: 19, scope: !5491)
!5542 = !DILocation(line: 369, column: 17, scope: !5491)
!5543 = !DILocation(line: 371, column: 11, scope: !5490)
!5544 = !DILocation(line: 370, column: 13, scope: !5491)
!5545 = !DILocation(line: 0, scope: !5490)
!5546 = !DILocation(line: 371, column: 33, scope: !5489)
!5547 = !DILocation(line: 371, column: 6, scope: !5490)
!5548 = !DILocation(line: 373, column: 16, scope: !5488)
!5549 = !DILocation(line: 375, column: 11, scope: !5488)
!5550 = !DILocation(line: 376, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 376, column: 7)
!5552 = !DILocation(line: 376, column: 7, scope: !5488)
!5553 = !DILocation(line: 378, column: 10, scope: !5488)
!5554 = !DILocation(line: 378, column: 29, scope: !5488)
!5555 = !DILocation(line: 378, column: 36, scope: !5488)
!5556 = !DILocation(line: 379, column: 12, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 379, column: 7)
!5558 = !DILocation(line: 379, column: 7, scope: !5488)
!5559 = !DILocation(line: 384, column: 3, scope: !5488)
!5560 = !DILocation(line: 384, column: 16, scope: !5488)
!5561 = !DILocation(line: 385, column: 8, scope: !5488)
!5562 = !DILocation(line: 0, scope: !5491)
!5563 = !DILocation(line: 371, column: 6, scope: !5489)
!5564 = distinct !{!5564, !5547, !5565}
!5565 = !DILocation(line: 385, column: 8, scope: !5490)
!5566 = !DILocation(line: 388, column: 6, scope: !5535)
!5567 = !DILocation(line: 0, scope: !5492)
!5568 = !DILocation(line: 389, column: 17, scope: !5535)
!5569 = !DILocation(line: 389, column: 6, scope: !5535)
!5570 = !DILocation(line: 393, column: 48, scope: !5535)
!5571 = !DILocation(line: 393, column: 4, scope: !5535)
!5572 = !DILocation(line: 334, column: 5, scope: !5484)
!5573 = distinct !{!5573, !5499, !5574}
!5574 = !DILocation(line: 394, column: 7, scope: !5485)
!5575 = !DILocation(line: 395, column: 1, scope: !5455)
!5576 = distinct !DISubprogram(name: "ira_hard_reg_not_in_set_p", scope: !576, file: !576, line: 1135, type: !5577, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5579)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!565, !566, !5, !1752}
!5579 = !{!5580, !5581, !5582, !5583}
!5580 = !DILocalVariable(name: "hard_regno", arg: 1, scope: !5576, file: !576, line: 1135, type: !566)
!5581 = !DILocalVariable(name: "mode", arg: 2, scope: !5576, file: !576, line: 1135, type: !5)
!5582 = !DILocalVariable(name: "hard_regset", arg: 3, scope: !5576, file: !576, line: 1136, type: !1752)
!5583 = !DILocalVariable(name: "i", scope: !5576, file: !576, line: 1138, type: !566)
!5584 = !DILocation(line: 0, scope: !5576)
!5585 = !DILocation(line: 1141, column: 12, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5576, file: !576, line: 1141, column: 3)
!5587 = !DILocation(line: 1141, column: 8, scope: !5586)
!5588 = !DILocation(line: 0, scope: !5586)
!5589 = !DILocation(line: 1141, column: 54, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5586, file: !576, line: 1141, column: 3)
!5591 = !DILocation(line: 1141, column: 3, scope: !5586)
!5592 = !DILocation(line: 1142, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !576, line: 1142, column: 9)
!5594 = !DILocation(line: 1142, column: 9, scope: !5590)
!5595 = !DILocation(line: 1141, column: 3, scope: !5590)
!5596 = distinct !{!5596, !5591, !5597}
!5597 = !DILocation(line: 1143, column: 14, scope: !5586)
!5598 = !DILocation(line: 1145, column: 1, scope: !5576)
!5599 = distinct !DISubprogram(name: "allocno_cost_compare_func", scope: !3, file: !3, line: 400, type: !1140, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5600)
!5600 = !{!5601, !5602, !5603, !5604, !5605, !5606}
!5601 = !DILocalVariable(name: "v1p", arg: 1, scope: !5599, file: !3, line: 400, type: !1135)
!5602 = !DILocalVariable(name: "v2p", arg: 2, scope: !5599, file: !3, line: 400, type: !1135)
!5603 = !DILocalVariable(name: "p1", scope: !5599, file: !3, line: 402, type: !575)
!5604 = !DILocalVariable(name: "p2", scope: !5599, file: !3, line: 403, type: !575)
!5605 = !DILocalVariable(name: "c1", scope: !5599, file: !3, line: 404, type: !566)
!5606 = !DILocalVariable(name: "c2", scope: !5599, file: !3, line: 404, type: !566)
!5607 = !DILocation(line: 0, scope: !5599)
!5608 = !DILocation(line: 402, column: 23, scope: !5599)
!5609 = !DILocation(line: 402, column: 22, scope: !5599)
!5610 = !DILocation(line: 403, column: 23, scope: !5599)
!5611 = !DILocation(line: 403, column: 22, scope: !5599)
!5612 = !DILocation(line: 406, column: 8, scope: !5599)
!5613 = !DILocation(line: 406, column: 43, scope: !5599)
!5614 = !DILocation(line: 406, column: 41, scope: !5599)
!5615 = !DILocation(line: 407, column: 8, scope: !5599)
!5616 = !DILocation(line: 407, column: 43, scope: !5599)
!5617 = !DILocation(line: 407, column: 41, scope: !5599)
!5618 = !DILocation(line: 408, column: 10, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 408, column: 7)
!5620 = !DILocation(line: 408, column: 7, scope: !5599)
!5621 = !DILocation(line: 409, column: 15, scope: !5619)
!5622 = !DILocation(line: 409, column: 5, scope: !5619)
!5623 = !DILocation(line: 413, column: 10, scope: !5599)
!5624 = !DILocation(line: 413, column: 29, scope: !5599)
!5625 = !DILocation(line: 413, column: 27, scope: !5599)
!5626 = !DILocation(line: 413, column: 3, scope: !5599)
!5627 = !DILocation(line: 414, column: 1, scope: !5599)
!5628 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_safe_push", scope: !576, file: !576, line: 68, type: !5629, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5632)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!574, !5631, !575}
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!5632 = !{!5633, !5634}
!5633 = !DILocalVariable(name: "vec_", arg: 1, scope: !5628, file: !576, line: 68, type: !5631)
!5634 = !DILocalVariable(name: "obj_", arg: 2, scope: !5628, file: !576, line: 68, type: !575)
!5635 = !DILocation(line: 0, scope: !5628)
!5636 = !DILocation(line: 68, column: 1, scope: !5628)
!5637 = distinct !DISubprogram(name: "print_coalesced_allocno", scope: !3, file: !3, line: 418, type: !3000, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5638)
!5638 = !{!5639, !5640}
!5639 = !DILocalVariable(name: "allocno", arg: 1, scope: !5637, file: !3, line: 418, type: !575)
!5640 = !DILocalVariable(name: "a", scope: !5637, file: !3, line: 420, type: !575)
!5641 = !DILocation(line: 0, scope: !5637)
!5642 = !DILocation(line: 422, column: 8, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 422, column: 3)
!5644 = !DILocation(line: 0, scope: !5643)
!5645 = !DILocation(line: 425, column: 7, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 424, column: 5)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 422, column: 3)
!5648 = !DILocation(line: 426, column: 13, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 426, column: 11)
!5650 = !DILocation(line: 426, column: 11, scope: !5646)
!5651 = !DILocation(line: 428, column: 16, scope: !5646)
!5652 = !DILocation(line: 428, column: 7, scope: !5646)
!5653 = !DILocation(line: 422, column: 3, scope: !5647)
!5654 = distinct !{!5654, !5655, !5656}
!5655 = !DILocation(line: 422, column: 3, scope: !5643)
!5656 = !DILocation(line: 429, column: 5, scope: !5643)
!5657 = !DILocation(line: 430, column: 1, scope: !5637)
!5658 = distinct !DISubprogram(name: "get_next_update_cost", scope: !3, file: !3, line: 227, type: !5659, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{!565, !574, !573}
!5661 = !{!5662, !5663, !5664}
!5662 = !DILocalVariable(name: "allocno", arg: 1, scope: !5658, file: !3, line: 227, type: !574)
!5663 = !DILocalVariable(name: "divisor", arg: 2, scope: !5658, file: !3, line: 227, type: !573)
!5664 = !DILocalVariable(name: "elem", scope: !5658, file: !3, line: 229, type: !1810)
!5665 = !DILocation(line: 0, scope: !5658)
!5666 = !DILocation(line: 231, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 231, column: 7)
!5668 = !DILocation(line: 231, column: 25, scope: !5667)
!5669 = !DILocation(line: 231, column: 7, scope: !5658)
!5670 = !DILocation(line: 234, column: 12, scope: !5658)
!5671 = !DILocation(line: 235, column: 11, scope: !5658)
!5672 = !DILocation(line: 235, column: 35, scope: !5658)
!5673 = !DILocation(line: 236, column: 20, scope: !5658)
!5674 = !DILocation(line: 236, column: 12, scope: !5658)
!5675 = !DILocation(line: 237, column: 29, scope: !5658)
!5676 = !DILocation(line: 237, column: 21, scope: !5658)
!5677 = !DILocation(line: 238, column: 3, scope: !5658)
!5678 = !DILocation(line: 239, column: 1, scope: !5658)
!5679 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_reserve", scope: !576, file: !576, line: 68, type: !5680, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5682)
!5680 = !DISubroutineType(types: !5681)
!5681 = !{!566, !5631, !566}
!5682 = !{!5683, !5684, !5685}
!5683 = !DILocalVariable(name: "vec_", arg: 1, scope: !5679, file: !576, line: 68, type: !5631)
!5684 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5679, file: !576, line: 68, type: !566)
!5685 = !DILocalVariable(name: "extend", scope: !5679, file: !576, line: 68, type: !566)
!5686 = !DILocation(line: 0, scope: !5679)
!5687 = !DILocation(line: 68, column: 1, scope: !5679)
!5688 = !DILocation(line: 68, column: 1, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5679, file: !576, line: 68, column: 1)
!5690 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_quick_push", scope: !576, file: !576, line: 67, type: !5691, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5694)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{!574, !5693, !575}
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!5694 = !{!5695, !5696, !5697}
!5695 = !DILocalVariable(name: "vec_", arg: 1, scope: !5690, file: !576, line: 67, type: !5693)
!5696 = !DILocalVariable(name: "obj_", arg: 2, scope: !5690, file: !576, line: 67, type: !575)
!5697 = !DILocalVariable(name: "slot_", scope: !5690, file: !576, line: 67, type: !574)
!5698 = !DILocation(line: 0, scope: !5690)
!5699 = !DILocation(line: 67, column: 1, scope: !5690)
!5700 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_space", scope: !576, file: !576, line: 67, type: !5701, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5703)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{!566, !5693, !566}
!5703 = !{!5704, !5705}
!5704 = !DILocalVariable(name: "vec_", arg: 1, scope: !5700, file: !576, line: 67, type: !5693)
!5705 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5700, file: !576, line: 67, type: !566)
!5706 = !DILocation(line: 0, scope: !5700)
!5707 = !DILocation(line: 67, column: 1, scope: !5700)
!5708 = distinct !DISubprogram(name: "copy_freq_compare_func", scope: !3, file: !3, line: 1515, type: !1140, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5709)
!5709 = !{!5710, !5711, !5712, !5713, !5714, !5715}
!5710 = !DILocalVariable(name: "v1p", arg: 1, scope: !5708, file: !3, line: 1515, type: !1135)
!5711 = !DILocalVariable(name: "v2p", arg: 2, scope: !5708, file: !3, line: 1515, type: !1135)
!5712 = !DILocalVariable(name: "cp1", scope: !5708, file: !3, line: 1517, type: !1716)
!5713 = !DILocalVariable(name: "cp2", scope: !5708, file: !3, line: 1517, type: !1716)
!5714 = !DILocalVariable(name: "pri1", scope: !5708, file: !3, line: 1518, type: !566)
!5715 = !DILocalVariable(name: "pri2", scope: !5708, file: !3, line: 1518, type: !566)
!5716 = !DILocation(line: 0, scope: !5708)
!5717 = !DILocation(line: 1517, column: 21, scope: !5708)
!5718 = !DILocation(line: 1517, column: 20, scope: !5708)
!5719 = !DILocation(line: 1517, column: 54, scope: !5708)
!5720 = !DILocation(line: 1517, column: 53, scope: !5708)
!5721 = !DILocation(line: 1520, column: 15, scope: !5708)
!5722 = !DILocation(line: 1521, column: 15, scope: !5708)
!5723 = !DILocation(line: 1522, column: 12, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 1522, column: 7)
!5725 = !DILocation(line: 1522, column: 7, scope: !5708)
!5726 = !DILocation(line: 1523, column: 17, scope: !5724)
!5727 = !DILocation(line: 1523, column: 5, scope: !5724)
!5728 = !DILocation(line: 1527, column: 15, scope: !5708)
!5729 = !DILocation(line: 1527, column: 26, scope: !5708)
!5730 = !DILocation(line: 1527, column: 19, scope: !5708)
!5731 = !DILocation(line: 1527, column: 3, scope: !5708)
!5732 = !DILocation(line: 1528, column: 1, scope: !5708)
!5733 = distinct !DISubprogram(name: "coalesced_allocno_conflict_p", scope: !3, file: !3, line: 1561, type: !5734, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!565, !575, !575, !565}
!5736 = !{!5737, !5738, !5739, !5740, !5741, !5742}
!5737 = !DILocalVariable(name: "a1", arg: 1, scope: !5733, file: !3, line: 1561, type: !575)
!5738 = !DILocalVariable(name: "a2", arg: 2, scope: !5733, file: !3, line: 1561, type: !575)
!5739 = !DILocalVariable(name: "reload_p", arg: 3, scope: !5733, file: !3, line: 1562, type: !565)
!5740 = !DILocalVariable(name: "a", scope: !5733, file: !3, line: 1564, type: !575)
!5741 = !DILocalVariable(name: "conflict_allocno", scope: !5733, file: !3, line: 1564, type: !575)
!5742 = !DILocalVariable(name: "aci", scope: !5733, file: !3, line: 1565, type: !1869)
!5743 = !DILocation(line: 0, scope: !5733)
!5744 = !DILocation(line: 1564, column: 3, scope: !5733)
!5745 = !DILocation(line: 1565, column: 3, scope: !5733)
!5746 = !DILocation(line: 1567, column: 7, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1567, column: 7)
!5748 = !DILocation(line: 1567, column: 7, scope: !5733)
!5749 = !DILocation(line: 1569, column: 21, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1568, column: 5)
!5751 = !DILocation(line: 1569, column: 7, scope: !5750)
!5752 = !DILocation(line: 1570, column: 12, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1570, column: 7)
!5754 = !DILocation(line: 0, scope: !5753)
!5755 = !DILocation(line: 1573, column: 20, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1572, column: 2)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1570, column: 7)
!5758 = !DILocation(line: 1573, column: 56, scope: !5756)
!5759 = !DILocation(line: 1573, column: 4, scope: !5756)
!5760 = !DILocation(line: 1574, column: 10, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1574, column: 8)
!5762 = !DILocation(line: 1574, column: 8, scope: !5756)
!5763 = !DILocation(line: 1570, column: 7, scope: !5757)
!5764 = distinct !{!5764, !5765, !5766}
!5765 = !DILocation(line: 1570, column: 7, scope: !5753)
!5766 = !DILocation(line: 1576, column: 2, scope: !5753)
!5767 = !DILocation(line: 1578, column: 8, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1578, column: 3)
!5769 = !DILocation(line: 0, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1581, column: 11)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1580, column: 5)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1578, column: 3)
!5773 = !DILocation(line: 0, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1583, column: 4)
!5775 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1582, column: 2)
!5776 = !DILocation(line: 0, scope: !5768)
!5777 = !DILocation(line: 1596, column: 4, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1596, column: 4)
!5779 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1595, column: 2)
!5780 = !DILocation(line: 1596, column: 4, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1596, column: 4)
!5782 = !DILocation(line: 1597, column: 10, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1597, column: 10)
!5784 = !DILocation(line: 1597, column: 27, scope: !5783)
!5785 = !DILocation(line: 1598, column: 3, scope: !5783)
!5786 = !DILocation(line: 1598, column: 7, scope: !5783)
!5787 = !DILocation(line: 1599, column: 7, scope: !5783)
!5788 = !DILocation(line: 1599, column: 24, scope: !5783)
!5789 = !DILocation(line: 1600, column: 10, scope: !5783)
!5790 = !DILocation(line: 1599, column: 10, scope: !5783)
!5791 = !DILocation(line: 1597, column: 10, scope: !5781)
!5792 = distinct !{!5792, !5777, !5793}
!5793 = !DILocation(line: 1601, column: 15, scope: !5778)
!5794 = !DILocation(line: 1578, column: 3, scope: !5772)
!5795 = distinct !{!5795, !5796, !5797}
!5796 = !DILocation(line: 1578, column: 3, scope: !5768)
!5797 = !DILocation(line: 1605, column: 5, scope: !5768)
!5798 = !DILocation(line: 1603, column: 13, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1603, column: 11)
!5800 = !DILocation(line: 1603, column: 11, scope: !5771)
!5801 = !DILocation(line: 1607, column: 1, scope: !5733)
!5802 = !DILocation(line: 1583, column: 28, scope: !5774)
!5803 = !DILocation(line: 1583, column: 9, scope: !5774)
!5804 = !DILocation(line: 1588, column: 11, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1587, column: 12)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1586, column: 6)
!5807 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1583, column: 4)
!5808 = !DILocation(line: 1587, column: 12, scope: !5805)
!5809 = !DILocation(line: 1587, column: 12, scope: !5806)
!5810 = !DILocation(line: 1590, column: 12, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1590, column: 12)
!5812 = !DILocation(line: 1590, column: 29, scope: !5811)
!5813 = !DILocation(line: 1590, column: 12, scope: !5806)
!5814 = !DILocation(line: 1585, column: 6, scope: !5807)
!5815 = !DILocation(line: 1583, column: 4, scope: !5807)
!5816 = distinct !{!5816, !5817, !5818}
!5817 = !DILocation(line: 1583, column: 4, scope: !5774)
!5818 = !DILocation(line: 1592, column: 6, scope: !5774)
!5819 = distinct !DISubprogram(name: "merge_allocnos", scope: !3, file: !3, line: 1534, type: !5820, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5822)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{null, !575, !575}
!5822 = !{!5823, !5824, !5825, !5826, !5827, !5828}
!5823 = !DILocalVariable(name: "a1", arg: 1, scope: !5819, file: !3, line: 1534, type: !575)
!5824 = !DILocalVariable(name: "a2", arg: 2, scope: !5819, file: !3, line: 1534, type: !575)
!5825 = !DILocalVariable(name: "a", scope: !5819, file: !3, line: 1536, type: !575)
!5826 = !DILocalVariable(name: "first", scope: !5819, file: !3, line: 1536, type: !575)
!5827 = !DILocalVariable(name: "last", scope: !5819, file: !3, line: 1536, type: !575)
!5828 = !DILocalVariable(name: "next", scope: !5819, file: !3, line: 1536, type: !575)
!5829 = !DILocation(line: 0, scope: !5819)
!5830 = !DILocation(line: 1538, column: 11, scope: !5819)
!5831 = !DILocation(line: 1539, column: 16, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1539, column: 7)
!5833 = !DILocation(line: 1539, column: 13, scope: !5832)
!5834 = !DILocation(line: 1539, column: 7, scope: !5819)
!5835 = !DILocation(line: 1541, column: 8, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 1541, column: 3)
!5837 = !DILocation(line: 0, scope: !5836)
!5838 = !DILocation(line: 1544, column: 7, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1543, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 1541, column: 3)
!5841 = !DILocation(line: 1544, column: 43, scope: !5839)
!5842 = !DILocation(line: 1545, column: 13, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 1545, column: 11)
!5844 = !DILocation(line: 1545, column: 11, scope: !5839)
!5845 = !DILocation(line: 1541, column: 3, scope: !5840)
!5846 = distinct !{!5846, !5847, !5848}
!5847 = !DILocation(line: 1541, column: 3, scope: !5836)
!5848 = !DILocation(line: 1548, column: 5, scope: !5836)
!5849 = !DILocation(line: 1549, column: 10, scope: !5819)
!5850 = !DILocation(line: 1550, column: 42, scope: !5819)
!5851 = !DILocation(line: 1551, column: 3, scope: !5819)
!5852 = !DILocation(line: 1551, column: 41, scope: !5819)
!5853 = !DILocation(line: 1552, column: 1, scope: !5819)
!5854 = distinct !DISubprogram(name: "slot_coalesced_allocno_live_ranges_intersect_p", scope: !3, file: !3, line: 2528, type: !5855, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5857)
!5855 = !DISubroutineType(types: !5856)
!5856 = !{!565, !575, !566}
!5857 = !{!5858, !5859, !5860}
!5858 = !DILocalVariable(name: "allocno", arg: 1, scope: !5854, file: !3, line: 2528, type: !575)
!5859 = !DILocalVariable(name: "n", arg: 2, scope: !5854, file: !3, line: 2528, type: !566)
!5860 = !DILocalVariable(name: "a", scope: !5854, file: !3, line: 2530, type: !575)
!5861 = !DILocation(line: 0, scope: !5854)
!5862 = !DILocation(line: 0, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2535, column: 11)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 2534, column: 5)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 2532, column: 3)
!5866 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 2532, column: 3)
!5867 = !DILocation(line: 2532, column: 8, scope: !5866)
!5868 = !DILocation(line: 0, scope: !5866)
!5869 = !DILocation(line: 2536, column: 5, scope: !5863)
!5870 = !DILocation(line: 2536, column: 45, scope: !5863)
!5871 = !DILocation(line: 2535, column: 11, scope: !5863)
!5872 = !DILocation(line: 2535, column: 11, scope: !5864)
!5873 = !DILocation(line: 2538, column: 13, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2538, column: 11)
!5875 = !DILocation(line: 2538, column: 11, scope: !5864)
!5876 = !DILocation(line: 2532, column: 3, scope: !5865)
!5877 = distinct !{!5877, !5878, !5879}
!5878 = !DILocation(line: 2532, column: 3, scope: !5866)
!5879 = !DILocation(line: 2540, column: 5, scope: !5866)
!5880 = !DILocation(line: 2542, column: 1, scope: !5854)
!5881 = distinct !DISubprogram(name: "setup_slot_coalesced_allocno_live_ranges", scope: !3, file: !3, line: 2547, type: !3000, scopeLine: 2548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5882)
!5882 = !{!5883, !5884, !5885, !5886}
!5883 = !DILocalVariable(name: "allocno", arg: 1, scope: !5881, file: !3, line: 2547, type: !575)
!5884 = !DILocalVariable(name: "n", scope: !5881, file: !3, line: 2549, type: !566)
!5885 = !DILocalVariable(name: "a", scope: !5881, file: !3, line: 2550, type: !575)
!5886 = !DILocalVariable(name: "r", scope: !5881, file: !3, line: 2551, type: !1736)
!5887 = !DILocation(line: 0, scope: !5881)
!5888 = !DILocation(line: 2553, column: 7, scope: !5881)
!5889 = !DILocation(line: 0, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2556, column: 5)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2554, column: 3)
!5892 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2554, column: 3)
!5893 = !DILocation(line: 2554, column: 8, scope: !5892)
!5894 = !DILocation(line: 0, scope: !5892)
!5895 = !DILocation(line: 2557, column: 45, scope: !5890)
!5896 = !DILocation(line: 2557, column: 11, scope: !5890)
!5897 = !DILocation(line: 2560, column: 5, scope: !5890)
!5898 = !DILocation(line: 2559, column: 4, scope: !5890)
!5899 = !DILocation(line: 2558, column: 7, scope: !5890)
!5900 = !DILocation(line: 2559, column: 2, scope: !5890)
!5901 = !DILocation(line: 2561, column: 13, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 2561, column: 11)
!5903 = !DILocation(line: 2561, column: 11, scope: !5890)
!5904 = !DILocation(line: 2554, column: 3, scope: !5891)
!5905 = distinct !{!5905, !5906, !5907}
!5906 = !DILocation(line: 2554, column: 3, scope: !5892)
!5907 = !DILocation(line: 2563, column: 5, scope: !5892)
!5908 = !DILocation(line: 2564, column: 1, scope: !5881)
!5909 = distinct !DISubprogram(name: "rhs_regno", scope: !421, file: !421, line: 1051, type: !5910, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5915)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!7, !5912}
!5912 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !586, line: 51, baseType: !5913)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!5915 = !{!5916}
!5916 = !DILocalVariable(name: "x", arg: 1, scope: !5909, file: !421, line: 1051, type: !5912)
!5917 = !DILocation(line: 0, scope: !5909)
!5918 = !DILocation(line: 1053, column: 10, scope: !5909)
!5919 = !DILocation(line: 1053, column: 3, scope: !5909)
!5920 = distinct !DISubprogram(name: "REG_N_REFS", scope: !5921, file: !5921, line: 79, type: !2072, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5922)
!5921 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5922 = !{!5923}
!5923 = !DILocalVariable(name: "regno", arg: 1, scope: !5920, file: !5921, line: 79, type: !566)
!5924 = !DILocation(line: 0, scope: !5920)
!5925 = !DILocation(line: 81, column: 10, scope: !5920)
!5926 = !DILocation(line: 81, column: 41, scope: !5920)
!5927 = !DILocation(line: 81, column: 3, scope: !5920)
!5928 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_alloc", scope: !576, file: !576, line: 68, type: !5929, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!1792, !566}
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5928, file: !576, line: 68, type: !566)
!5933 = !DILocation(line: 0, scope: !5928)
!5934 = !DILocation(line: 68, column: 1, scope: !5928)
!5935 = distinct !DISubprogram(name: "do_coloring", scope: !3, file: !3, line: 2094, type: !5037, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!5936 = !DILocation(line: 2096, column: 29, scope: !5935)
!5937 = !DILocation(line: 2096, column: 27, scope: !5935)
!5938 = !DILocation(line: 2099, column: 13, scope: !5935)
!5939 = !DILocation(line: 2099, column: 11, scope: !5935)
!5940 = !DILocation(line: 2098, column: 25, scope: !5935)
!5941 = !DILocation(line: 2098, column: 5, scope: !5935)
!5942 = !DILocation(line: 2100, column: 26, scope: !5935)
!5943 = !DILocation(line: 2100, column: 24, scope: !5935)
!5944 = !DILocation(line: 2103, column: 7, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2103, column: 7)
!5946 = !DILocation(line: 2103, column: 33, scope: !5945)
!5947 = !DILocation(line: 2103, column: 40, scope: !5945)
!5948 = !DILocation(line: 2103, column: 54, scope: !5945)
!5949 = !DILocation(line: 2103, column: 37, scope: !5945)
!5950 = !DILocation(line: 2104, column: 5, scope: !5945)
!5951 = !DILocation(line: 2106, column: 34, scope: !5935)
!5952 = !DILocation(line: 2106, column: 3, scope: !5935)
!5953 = !DILocation(line: 2108, column: 7, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 2108, column: 7)
!5955 = !DILocation(line: 2108, column: 33, scope: !5954)
!5956 = !DILocation(line: 2108, column: 40, scope: !5954)
!5957 = !DILocation(line: 2108, column: 54, scope: !5954)
!5958 = !DILocation(line: 2108, column: 37, scope: !5954)
!5959 = !DILocation(line: 2109, column: 5, scope: !5954)
!5960 = !DILocation(line: 2111, column: 20, scope: !5935)
!5961 = !DILocation(line: 2111, column: 3, scope: !5935)
!5962 = !DILocation(line: 2112, column: 20, scope: !5935)
!5963 = !DILocation(line: 2112, column: 3, scope: !5935)
!5964 = !DILocation(line: 2113, column: 13, scope: !5935)
!5965 = !DILocation(line: 2113, column: 3, scope: !5935)
!5966 = !DILocation(line: 2114, column: 1, scope: !5935)
!5967 = distinct !DISubprogram(name: "VEC_ira_allocno_t_heap_free", scope: !576, file: !576, line: 68, type: !5968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{null, !5631}
!5970 = !{!5971}
!5971 = !DILocalVariable(name: "vec_", arg: 1, scope: !5967, file: !576, line: 68, type: !5631)
!5972 = !DILocation(line: 0, scope: !5967)
!5973 = !DILocation(line: 68, column: 1, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5967, file: !576, line: 68, column: 1)
!5975 = !DILocation(line: 68, column: 1, scope: !5967)
!5976 = distinct !DISubprogram(name: "move_spill_restore", scope: !3, file: !3, line: 2124, type: !5037, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5977)
!5977 = !{!5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994}
!5978 = !DILocalVariable(name: "cost", scope: !5976, file: !3, line: 2126, type: !566)
!5979 = !DILocalVariable(name: "regno", scope: !5976, file: !3, line: 2126, type: !566)
!5980 = !DILocalVariable(name: "hard_regno", scope: !5976, file: !3, line: 2126, type: !566)
!5981 = !DILocalVariable(name: "hard_regno2", scope: !5976, file: !3, line: 2126, type: !566)
!5982 = !DILocalVariable(name: "index", scope: !5976, file: !3, line: 2126, type: !566)
!5983 = !DILocalVariable(name: "changed_p", scope: !5976, file: !3, line: 2127, type: !565)
!5984 = !DILocalVariable(name: "enter_freq", scope: !5976, file: !3, line: 2128, type: !566)
!5985 = !DILocalVariable(name: "exit_freq", scope: !5976, file: !3, line: 2128, type: !566)
!5986 = !DILocalVariable(name: "mode", scope: !5976, file: !3, line: 2129, type: !5)
!5987 = !DILocalVariable(name: "rclass", scope: !5976, file: !3, line: 2130, type: !390)
!5988 = !DILocalVariable(name: "a", scope: !5976, file: !3, line: 2131, type: !575)
!5989 = !DILocalVariable(name: "parent_allocno", scope: !5976, file: !3, line: 2131, type: !575)
!5990 = !DILocalVariable(name: "subloop_allocno", scope: !5976, file: !3, line: 2131, type: !575)
!5991 = !DILocalVariable(name: "parent", scope: !5976, file: !3, line: 2132, type: !1683)
!5992 = !DILocalVariable(name: "loop_node", scope: !5976, file: !3, line: 2132, type: !1683)
!5993 = !DILocalVariable(name: "subloop_node", scope: !5976, file: !3, line: 2132, type: !1683)
!5994 = !DILocalVariable(name: "ai", scope: !5976, file: !3, line: 2133, type: !2605)
!5995 = !DILocation(line: 2131, column: 3, scope: !5976)
!5996 = !DILocation(line: 2133, column: 3, scope: !5976)
!5997 = !DILocation(line: 2135, column: 3, scope: !5976)
!5998 = !DILocation(line: 0, scope: !5976)
!5999 = !DILocation(line: 2138, column: 11, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2138, column: 11)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 2136, column: 5)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2135, column: 3)
!6003 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2135, column: 3)
!6004 = !DILocation(line: 2138, column: 37, scope: !6000)
!6005 = !DILocation(line: 2138, column: 44, scope: !6000)
!6006 = !DILocation(line: 2138, column: 58, scope: !6000)
!6007 = !DILocation(line: 2138, column: 41, scope: !6000)
!6008 = !DILocation(line: 2139, column: 2, scope: !6000)
!6009 = !DILocation(line: 2140, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2140, column: 7)
!6011 = !DILocation(line: 2140, column: 7, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2140, column: 7)
!6013 = !DILocation(line: 2142, column: 12, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2141, column: 2)
!6015 = !DILocation(line: 2143, column: 16, scope: !6014)
!6016 = !DILocation(line: 2144, column: 8, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2144, column: 8)
!6018 = !DILocation(line: 2144, column: 31, scope: !6017)
!6019 = !DILocation(line: 2145, column: 8, scope: !6017)
!6020 = !DILocation(line: 2145, column: 11, scope: !6017)
!6021 = !DILocation(line: 2145, column: 27, scope: !6017)
!6022 = !DILocation(line: 2146, column: 8, scope: !6017)
!6023 = !DILocation(line: 2146, column: 25, scope: !6017)
!6024 = !DILocation(line: 2146, column: 49, scope: !6017)
!6025 = !DILocation(line: 2147, column: 8, scope: !6017)
!6026 = !DILocation(line: 2147, column: 22, scope: !6017)
!6027 = !DILocation(line: 2147, column: 31, scope: !6017)
!6028 = !DILocation(line: 2152, column: 8, scope: !6017)
!6029 = !DILocation(line: 2152, column: 11, scope: !6017)
!6030 = !DILocation(line: 2153, column: 8, scope: !6017)
!6031 = !DILocation(line: 2153, column: 11, scope: !6017)
!6032 = !DILocation(line: 2153, column: 38, scope: !6017)
!6033 = !DILocation(line: 2154, column: 8, scope: !6017)
!6034 = !DILocation(line: 2154, column: 37, scope: !6017)
!6035 = !DILocation(line: 2154, column: 54, scope: !6017)
!6036 = !DILocation(line: 2154, column: 12, scope: !6017)
!6037 = !DILocation(line: 2144, column: 8, scope: !6014)
!6038 = !DILocation(line: 2155, column: 6, scope: !6017)
!6039 = distinct !{!6039, !6009, !6040}
!6040 = !DILocation(line: 2227, column: 2, scope: !6010)
!6041 = !DILocation(line: 2156, column: 11, scope: !6014)
!6042 = !DILocation(line: 2157, column: 13, scope: !6014)
!6043 = !DILocation(line: 2158, column: 12, scope: !6014)
!6044 = !DILocation(line: 2160, column: 12, scope: !6014)
!6045 = !DILocation(line: 2161, column: 8, scope: !6014)
!6046 = !DILocation(line: 2161, column: 35, scope: !6014)
!6047 = !DILocation(line: 2162, column: 10, scope: !6014)
!6048 = !DILocation(line: 0, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 2167, column: 6)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 2164, column: 4)
!6051 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2164, column: 4)
!6052 = !DILocation(line: 2163, column: 10, scope: !6014)
!6053 = !DILocation(line: 2161, column: 5, scope: !6014)
!6054 = !DILocation(line: 2164, column: 35, scope: !6051)
!6055 = !DILocation(line: 0, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 2182, column: 12)
!6057 = !DILocation(line: 2164, column: 9, scope: !6051)
!6058 = !DILocation(line: 2160, column: 9, scope: !6014)
!6059 = !DILocation(line: 0, scope: !6051)
!6060 = !DILocation(line: 2165, column: 22, scope: !6050)
!6061 = !DILocation(line: 2164, column: 4, scope: !6051)
!6062 = !DILocation(line: 2169, column: 40, scope: !6049)
!6063 = !DILocation(line: 2169, column: 26, scope: !6049)
!6064 = !DILocation(line: 2170, column: 28, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 2170, column: 12)
!6066 = !DILocation(line: 2170, column: 12, scope: !6049)
!6067 = !DILocation(line: 2176, column: 17, scope: !6049)
!6068 = !DILocation(line: 2177, column: 13, scope: !6049)
!6069 = !DILocation(line: 2177, column: 54, scope: !6049)
!6070 = !DILocation(line: 2178, column: 8, scope: !6049)
!6071 = !DILocation(line: 2179, column: 8, scope: !6049)
!6072 = !DILocation(line: 2176, column: 13, scope: !6049)
!6073 = !DILocation(line: 2180, column: 20, scope: !6049)
!6074 = !DILocation(line: 2181, column: 21, scope: !6049)
!6075 = !DILocation(line: 2182, column: 27, scope: !6056)
!6076 = !DILocation(line: 2182, column: 65, scope: !6056)
!6077 = !DILocation(line: 2182, column: 12, scope: !6049)
!6078 = !DILocation(line: 2183, column: 8, scope: !6056)
!6079 = !DILocation(line: 2183, column: 3, scope: !6056)
!6080 = !DILocation(line: 2188, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2186, column: 3)
!6082 = !DILocation(line: 2190, column: 21, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 2190, column: 9)
!6084 = !DILocation(line: 2190, column: 9, scope: !6081)
!6085 = !DILocation(line: 2191, column: 16, scope: !6083)
!6086 = !DILocation(line: 2192, column: 22, scope: !6083)
!6087 = !DILocation(line: 2192, column: 9, scope: !6083)
!6088 = !DILocation(line: 2191, column: 12, scope: !6083)
!6089 = !DILocation(line: 2191, column: 7, scope: !6083)
!6090 = !DILocation(line: 0, scope: !6014)
!6091 = !DILocation(line: 2166, column: 38, scope: !6050)
!6092 = !DILocation(line: 2164, column: 4, scope: !6050)
!6093 = distinct !{!6093, !6061, !6094}
!6094 = !DILocation(line: 2194, column: 6, scope: !6051)
!6095 = !DILocation(line: 2195, column: 29, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2195, column: 8)
!6097 = !DILocation(line: 2195, column: 37, scope: !6096)
!6098 = !DILocation(line: 2196, column: 8, scope: !6096)
!6099 = !DILocation(line: 2196, column: 37, scope: !6096)
!6100 = !DILocation(line: 2196, column: 29, scope: !6096)
!6101 = !DILocation(line: 2196, column: 63, scope: !6096)
!6102 = !DILocation(line: 2195, column: 8, scope: !6014)
!6103 = !DILocation(line: 2199, column: 20, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 2197, column: 6)
!6105 = !DILocation(line: 2200, column: 21, scope: !6104)
!6106 = !DILocation(line: 2201, column: 27, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 2201, column: 12)
!6108 = !DILocation(line: 2201, column: 64, scope: !6107)
!6109 = !DILocation(line: 2201, column: 12, scope: !6104)
!6110 = !DILocation(line: 2202, column: 12, scope: !6107)
!6111 = !DILocation(line: 2202, column: 50, scope: !6107)
!6112 = !DILocation(line: 2203, column: 7, scope: !6107)
!6113 = !DILocation(line: 2203, column: 45, scope: !6107)
!6114 = !DILocation(line: 2203, column: 5, scope: !6107)
!6115 = !DILocation(line: 2202, column: 8, scope: !6107)
!6116 = !DILocation(line: 2202, column: 3, scope: !6107)
!6117 = !DILocation(line: 2207, column: 11, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2205, column: 3)
!6119 = !DILocation(line: 2207, column: 49, scope: !6118)
!6120 = !DILocation(line: 2208, column: 6, scope: !6118)
!6121 = !DILocation(line: 2208, column: 44, scope: !6118)
!6122 = !DILocation(line: 2208, column: 4, scope: !6118)
!6123 = !DILocation(line: 2207, column: 7, scope: !6118)
!6124 = !DILocation(line: 2209, column: 21, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 2209, column: 9)
!6126 = !DILocation(line: 2209, column: 9, scope: !6118)
!6127 = !DILocation(line: 2210, column: 16, scope: !6125)
!6128 = !DILocation(line: 2211, column: 22, scope: !6125)
!6129 = !DILocation(line: 2211, column: 9, scope: !6125)
!6130 = !DILocation(line: 2210, column: 12, scope: !6125)
!6131 = !DILocation(line: 2210, column: 7, scope: !6125)
!6132 = !DILocation(line: 2214, column: 13, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2214, column: 8)
!6134 = !DILocation(line: 2214, column: 8, scope: !6014)
!6135 = !DILocation(line: 2216, column: 8, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2215, column: 6)
!6137 = !DILocation(line: 2216, column: 31, scope: !6136)
!6138 = !DILocation(line: 2217, column: 12, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 2217, column: 12)
!6140 = !DILocation(line: 2217, column: 38, scope: !6139)
!6141 = !DILocation(line: 2217, column: 45, scope: !6139)
!6142 = !DILocation(line: 2217, column: 59, scope: !6139)
!6143 = !DILocation(line: 2217, column: 42, scope: !6139)
!6144 = !DILocation(line: 2222, column: 8, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2218, column: 3)
!6146 = !DILocation(line: 2222, column: 43, scope: !6145)
!6147 = !DILocation(line: 2222, column: 49, scope: !6145)
!6148 = !DILocation(line: 2219, column: 5, scope: !6145)
!6149 = !DILocation(line: 2223, column: 14, scope: !6145)
!6150 = !DILocation(line: 2223, column: 47, scope: !6145)
!6151 = !DILocation(line: 2223, column: 5, scope: !6145)
!6152 = !DILocation(line: 2224, column: 3, scope: !6145)
!6153 = !DILocation(line: 0, scope: !6001)
!6154 = !DILocation(line: 2228, column: 13, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2228, column: 11)
!6156 = !DILocation(line: 2228, column: 11, scope: !6001)
!6157 = distinct !{!6157, !6158, !6159}
!6158 = !DILocation(line: 2135, column: 3, scope: !6003)
!6159 = !DILocation(line: 2230, column: 5, scope: !6003)
!6160 = !DILocation(line: 2231, column: 1, scope: !5976)
!6161 = distinct !DISubprogram(name: "color_pass", scope: !3, file: !3, line: 1937, type: !6162, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6164)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !1683}
!6164 = !{!6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178, !6179}
!6165 = !DILocalVariable(name: "loop_tree_node", arg: 1, scope: !6161, file: !3, line: 1937, type: !1683)
!6166 = !DILocalVariable(name: "regno", scope: !6161, file: !3, line: 1939, type: !566)
!6167 = !DILocalVariable(name: "hard_regno", scope: !6161, file: !3, line: 1939, type: !566)
!6168 = !DILocalVariable(name: "index", scope: !6161, file: !3, line: 1939, type: !566)
!6169 = !DILocalVariable(name: "cost", scope: !6161, file: !3, line: 1940, type: !566)
!6170 = !DILocalVariable(name: "exit_freq", scope: !6161, file: !3, line: 1940, type: !566)
!6171 = !DILocalVariable(name: "enter_freq", scope: !6161, file: !3, line: 1940, type: !566)
!6172 = !DILocalVariable(name: "j", scope: !6161, file: !3, line: 1941, type: !7)
!6173 = !DILocalVariable(name: "bi", scope: !6161, file: !3, line: 1942, type: !3569)
!6174 = !DILocalVariable(name: "mode", scope: !6161, file: !3, line: 1943, type: !5)
!6175 = !DILocalVariable(name: "rclass", scope: !6161, file: !3, line: 1944, type: !390)
!6176 = !DILocalVariable(name: "cover_class", scope: !6161, file: !3, line: 1944, type: !390)
!6177 = !DILocalVariable(name: "a", scope: !6161, file: !3, line: 1945, type: !575)
!6178 = !DILocalVariable(name: "subloop_allocno", scope: !6161, file: !3, line: 1945, type: !575)
!6179 = !DILocalVariable(name: "subloop_node", scope: !6161, file: !3, line: 1946, type: !1683)
!6180 = !DILocation(line: 0, scope: !6161)
!6181 = !DILocation(line: 1941, column: 3, scope: !6161)
!6182 = !DILocation(line: 1942, column: 3, scope: !6161)
!6183 = !DILocation(line: 1949, column: 7, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1949, column: 7)
!6185 = !DILocation(line: 1949, column: 33, scope: !6184)
!6186 = !DILocation(line: 1949, column: 40, scope: !6184)
!6187 = !DILocation(line: 1949, column: 54, scope: !6184)
!6188 = !DILocation(line: 1949, column: 37, scope: !6184)
!6189 = !DILocation(line: 1950, column: 5, scope: !6184)
!6190 = !DILocation(line: 1952, column: 16, scope: !6161)
!6191 = !DILocation(line: 1952, column: 57, scope: !6161)
!6192 = !DILocation(line: 1952, column: 3, scope: !6161)
!6193 = !DILocation(line: 1953, column: 16, scope: !6161)
!6194 = !DILocation(line: 1953, column: 46, scope: !6161)
!6195 = !DILocation(line: 1953, column: 3, scope: !6161)
!6196 = !DILocation(line: 1954, column: 3, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1954, column: 3)
!6198 = !DILocation(line: 1954, column: 3, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1954, column: 3)
!6200 = !DILocation(line: 1956, column: 11, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1955, column: 5)
!6202 = !DILocation(line: 1956, column: 24, scope: !6201)
!6203 = !DILocation(line: 1957, column: 13, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1957, column: 11)
!6205 = !DILocation(line: 1957, column: 11, scope: !6201)
!6206 = !DILocation(line: 1959, column: 25, scope: !6201)
!6207 = !DILocation(line: 1959, column: 50, scope: !6201)
!6208 = !DILocation(line: 1959, column: 7, scope: !6201)
!6209 = !DILocation(line: 1960, column: 5, scope: !6201)
!6210 = distinct !{!6210, !6196, !6211}
!6211 = !DILocation(line: 1960, column: 5, scope: !6197)
!6212 = !DILocation(line: 1962, column: 3, scope: !6161)
!6213 = !DILocation(line: 1964, column: 7, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1964, column: 7)
!6215 = !DILocation(line: 1965, column: 7, scope: !6214)
!6216 = !DILocation(line: 1966, column: 5, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1966, column: 5)
!6218 = !DILocation(line: 1939, column: 26, scope: !6161)
!6219 = !DILocation(line: 1966, column: 5, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1966, column: 5)
!6221 = !DILocation(line: 1968, column: 6, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1967, column: 7)
!6223 = !DILocation(line: 1968, column: 19, scope: !6222)
!6224 = !DILocation(line: 1969, column: 6, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1969, column: 6)
!6226 = !DILocation(line: 1969, column: 29, scope: !6225)
!6227 = !DILocation(line: 1969, column: 6, scope: !6222)
!6228 = !DILocation(line: 1972, column: 20, scope: !6222)
!6229 = !DILocation(line: 1972, column: 2, scope: !6222)
!6230 = !DILocation(line: 1974, column: 6, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1974, column: 6)
!6232 = !DILocation(line: 1974, column: 22, scope: !6231)
!6233 = !DILocation(line: 1975, column: 6, scope: !6231)
!6234 = !DILocation(line: 1973, column: 11, scope: !6222)
!6235 = !DILocation(line: 1975, column: 10, scope: !6231)
!6236 = !DILocation(line: 1976, column: 6, scope: !6231)
!6237 = !DILocation(line: 1976, column: 3, scope: !6231)
!6238 = !DILocation(line: 1974, column: 6, scope: !6222)
!6239 = !DILocation(line: 1979, column: 19, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1977, column: 4)
!6241 = !DILocation(line: 1980, column: 21, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1980, column: 10)
!6243 = !DILocation(line: 1980, column: 10, scope: !6240)
!6244 = !DILocation(line: 1982, column: 11, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 1981, column: 8)
!6246 = !DILocation(line: 1984, column: 8, scope: !6245)
!6247 = !DILocation(line: 1986, column: 24, scope: !6240)
!6248 = !DILocation(line: 1989, column: 6, scope: !6240)
!6249 = !DILocation(line: 1989, column: 43, scope: !6240)
!6250 = !DILocation(line: 1990, column: 6, scope: !6240)
!6251 = !DILocation(line: 1990, column: 43, scope: !6240)
!6252 = !DILocation(line: 1991, column: 10, scope: !6240)
!6253 = !DILocation(line: 1992, column: 8, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1991, column: 10)
!6255 = !DILocation(line: 1994, column: 6, scope: !6240)
!6256 = !DILocation(line: 1995, column: 4, scope: !6240)
!6257 = distinct !{!6257, !6216, !6258}
!6258 = !DILocation(line: 1996, column: 7, scope: !6217)
!6259 = !DILocation(line: 1999, column: 39, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 1999, column: 3)
!6261 = !DILocation(line: 1999, column: 8, scope: !6260)
!6262 = !DILocation(line: 0, scope: !6260)
!6263 = !DILocation(line: 2000, column: 21, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1999, column: 3)
!6265 = !DILocation(line: 1999, column: 3, scope: !6260)
!6266 = !DILocation(line: 2004, column: 7, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 2004, column: 7)
!6268 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 2002, column: 5)
!6269 = !DILocation(line: 0, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 2005, column: 9)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2004, column: 7)
!6272 = !DILocation(line: 2004, column: 7, scope: !6271)
!6273 = !DILocation(line: 2006, column: 8, scope: !6270)
!6274 = !DILocation(line: 2006, column: 21, scope: !6270)
!6275 = !DILocation(line: 2008, column: 11, scope: !6270)
!6276 = !DILocation(line: 2009, column: 13, scope: !6270)
!6277 = !DILocation(line: 2010, column: 17, scope: !6270)
!6278 = !DILocation(line: 2012, column: 19, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2012, column: 8)
!6280 = !DILocation(line: 2012, column: 8, scope: !6270)
!6281 = !DILocation(line: 2014, column: 16, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 2013, column: 6)
!6283 = !DILocation(line: 2016, column: 6, scope: !6282)
!6284 = !DILocation(line: 2017, column: 12, scope: !6270)
!6285 = !DILocation(line: 2019, column: 36, scope: !6270)
!6286 = !DILocation(line: 2019, column: 22, scope: !6270)
!6287 = !DILocation(line: 2020, column: 24, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2020, column: 8)
!6289 = !DILocation(line: 2021, column: 8, scope: !6288)
!6290 = !DILocation(line: 2021, column: 11, scope: !6288)
!6291 = !DILocation(line: 2021, column: 41, scope: !6288)
!6292 = !DILocation(line: 2020, column: 8, scope: !6270)
!6293 = !DILocation(line: 2026, column: 9, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2026, column: 8)
!6295 = !DILocation(line: 2026, column: 25, scope: !6294)
!6296 = !DILocation(line: 2027, column: 8, scope: !6294)
!6297 = !DILocation(line: 2027, column: 12, scope: !6294)
!6298 = !DILocation(line: 2028, column: 8, scope: !6294)
!6299 = !DILocation(line: 2028, column: 5, scope: !6294)
!6300 = !DILocation(line: 2026, column: 8, scope: !6270)
!6301 = !DILocation(line: 2030, column: 14, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 2030, column: 12)
!6303 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 2029, column: 6)
!6304 = !DILocation(line: 2030, column: 12, scope: !6303)
!6305 = !DILocation(line: 2032, column: 5, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 2031, column: 3)
!6307 = !DILocation(line: 2032, column: 42, scope: !6306)
!6308 = !DILocation(line: 2033, column: 42, scope: !6306)
!6309 = !DILocation(line: 2034, column: 9, scope: !6306)
!6310 = !DILocation(line: 2035, column: 7, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2034, column: 9)
!6312 = !DILocation(line: 2037, column: 5, scope: !6306)
!6313 = !DILocation(line: 2038, column: 3, scope: !6306)
!6314 = !DILocation(line: 2041, column: 16, scope: !6270)
!6315 = !DILocation(line: 2042, column: 17, scope: !6270)
!6316 = !DILocation(line: 2044, column: 8, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 2044, column: 8)
!6318 = !DILocation(line: 2045, column: 8, scope: !6317)
!6319 = !DILocation(line: 2045, column: 11, scope: !6317)
!6320 = !DILocation(line: 2045, column: 38, scope: !6317)
!6321 = !DILocation(line: 2044, column: 8, scope: !6270)
!6322 = !DILocation(line: 2047, column: 14, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 2047, column: 12)
!6324 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2046, column: 6)
!6325 = !DILocation(line: 2047, column: 12, scope: !6324)
!6326 = !DILocation(line: 2049, column: 5, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2048, column: 3)
!6328 = !DILocation(line: 2049, column: 42, scope: !6327)
!6329 = !DILocation(line: 2050, column: 42, scope: !6327)
!6330 = !DILocation(line: 2051, column: 9, scope: !6327)
!6331 = !DILocation(line: 2052, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2051, column: 9)
!6333 = !DILocation(line: 2054, column: 5, scope: !6327)
!6334 = !DILocation(line: 2055, column: 3, scope: !6327)
!6335 = !DILocation(line: 2057, column: 24, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2057, column: 13)
!6337 = !DILocation(line: 2057, column: 13, scope: !6317)
!6338 = !DILocation(line: 2060, column: 8, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2058, column: 6)
!6340 = !DILocation(line: 2060, column: 46, scope: !6339)
!6341 = !DILocation(line: 2061, column: 10, scope: !6339)
!6342 = !DILocation(line: 2061, column: 48, scope: !6339)
!6343 = !DILocation(line: 2061, column: 7, scope: !6339)
!6344 = !DILocation(line: 2059, column: 8, scope: !6339)
!6345 = !DILocation(line: 2060, column: 3, scope: !6339)
!6346 = !DILocation(line: 2062, column: 6, scope: !6339)
!6347 = !DILocation(line: 2065, column: 22, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2064, column: 6)
!6349 = !DILocation(line: 2066, column: 16, scope: !6348)
!6350 = !DILocation(line: 2067, column: 22, scope: !6348)
!6351 = !DILocation(line: 2067, column: 9, scope: !6348)
!6352 = !DILocation(line: 2069, column: 5, scope: !6348)
!6353 = !DILocation(line: 2070, column: 4, scope: !6348)
!6354 = !DILocation(line: 2071, column: 4, scope: !6348)
!6355 = !DILocation(line: 2068, column: 8, scope: !6348)
!6356 = !DILocation(line: 2073, column: 5, scope: !6348)
!6357 = !DILocation(line: 2075, column: 4, scope: !6348)
!6358 = !DILocation(line: 2072, column: 8, scope: !6348)
!6359 = !DILocation(line: 2076, column: 8, scope: !6348)
!6360 = !DILocation(line: 2076, column: 64, scope: !6348)
!6361 = !DILocation(line: 2077, column: 8, scope: !6348)
!6362 = !DILocation(line: 2078, column: 3, scope: !6348)
!6363 = !DILocation(line: 2079, column: 12, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2079, column: 12)
!6365 = !DILocation(line: 2080, column: 7, scope: !6364)
!6366 = !DILocation(line: 2080, column: 5, scope: !6364)
!6367 = !DILocation(line: 2079, column: 12, scope: !6348)
!6368 = !DILocation(line: 2082, column: 5, scope: !6364)
!6369 = !DILocation(line: 2081, column: 3, scope: !6364)
!6370 = !DILocation(line: 2084, column: 7, scope: !6348)
!6371 = !DILocation(line: 2084, column: 45, scope: !6348)
!6372 = !DILocation(line: 2085, column: 9, scope: !6348)
!6373 = !DILocation(line: 2085, column: 47, scope: !6348)
!6374 = !DILocation(line: 2085, column: 7, scope: !6348)
!6375 = !DILocation(line: 2083, column: 8, scope: !6348)
!6376 = !DILocation(line: 2084, column: 3, scope: !6348)
!6377 = distinct !{!6377, !6266, !6378}
!6378 = !DILocation(line: 2087, column: 2, scope: !6267)
!6379 = !DILocation(line: 2001, column: 37, scope: !6264)
!6380 = !DILocation(line: 1999, column: 3, scope: !6264)
!6381 = distinct !{!6381, !6265, !6382}
!6382 = !DILocation(line: 2088, column: 5, scope: !6260)
!6383 = !DILocation(line: 2089, column: 1, scope: !6161)
!6384 = distinct !DISubprogram(name: "print_loop_title", scope: !3, file: !3, line: 1880, type: !6162, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6385)
!6385 = !{!6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393}
!6386 = !DILocalVariable(name: "loop_tree_node", arg: 1, scope: !6384, file: !3, line: 1880, type: !1683)
!6387 = !DILocalVariable(name: "j", scope: !6384, file: !3, line: 1882, type: !7)
!6388 = !DILocalVariable(name: "bi", scope: !6384, file: !3, line: 1883, type: !3569)
!6389 = !DILocalVariable(name: "subloop_node", scope: !6384, file: !3, line: 1884, type: !1683)
!6390 = !DILocalVariable(name: "dest_loop_node", scope: !6384, file: !3, line: 1884, type: !1683)
!6391 = !DILocalVariable(name: "e", scope: !6384, file: !3, line: 1885, type: !975)
!6392 = !DILocalVariable(name: "ei", scope: !6384, file: !3, line: 1886, type: !2433)
!6393 = !DILocalVariable(name: "cover_class", scope: !6394, file: !3, line: 1921, type: !390)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1920, column: 5)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 1919, column: 3)
!6396 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1919, column: 3)
!6397 = !DILocation(line: 0, scope: !6384)
!6398 = !DILocation(line: 1882, column: 3, scope: !6384)
!6399 = !DILocation(line: 1883, column: 3, scope: !6384)
!6400 = !DILocation(line: 1885, column: 3, scope: !6384)
!6401 = !DILocation(line: 1886, column: 3, scope: !6384)
!6402 = !DILocation(line: 1889, column: 12, scope: !6384)
!6403 = !DILocation(line: 1891, column: 21, scope: !6384)
!6404 = !DILocation(line: 1891, column: 27, scope: !6384)
!6405 = !DILocation(line: 1892, column: 22, scope: !6384)
!6406 = !DILocation(line: 1892, column: 29, scope: !6384)
!6407 = !DILocation(line: 1892, column: 6, scope: !6384)
!6408 = !DILocation(line: 1893, column: 37, scope: !6384)
!6409 = !DILocation(line: 1893, column: 43, scope: !6384)
!6410 = !DILocation(line: 1894, column: 27, scope: !6384)
!6411 = !DILocation(line: 1894, column: 35, scope: !6384)
!6412 = !DILocation(line: 1895, column: 5, scope: !6384)
!6413 = !DILocation(line: 1889, column: 3, scope: !6384)
!6414 = !DILocation(line: 1896, column: 39, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1896, column: 3)
!6416 = !DILocation(line: 0, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 1902, column: 2)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1900, column: 7)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1899, column: 9)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1896, column: 3)
!6421 = !DILocation(line: 0, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 1902, column: 2)
!6423 = !DILocation(line: 1896, column: 8, scope: !6415)
!6424 = !DILocation(line: 0, scope: !6415)
!6425 = !DILocation(line: 1897, column: 21, scope: !6420)
!6426 = !DILocation(line: 1896, column: 3, scope: !6415)
!6427 = !DILocation(line: 1899, column: 23, scope: !6419)
!6428 = !DILocation(line: 1899, column: 26, scope: !6419)
!6429 = !DILocation(line: 1899, column: 9, scope: !6420)
!6430 = !DILocation(line: 1901, column: 11, scope: !6418)
!6431 = !DILocation(line: 1901, column: 51, scope: !6418)
!6432 = !DILocation(line: 1901, column: 2, scope: !6418)
!6433 = !DILocation(line: 1902, column: 2, scope: !6417)
!6434 = !DILocation(line: 1902, column: 2, scope: !6422)
!6435 = !DILocation(line: 1903, column: 8, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 1903, column: 8)
!6437 = !DILocation(line: 1903, column: 11, scope: !6436)
!6438 = !DILocation(line: 1903, column: 19, scope: !6436)
!6439 = !DILocation(line: 1903, column: 16, scope: !6436)
!6440 = !DILocation(line: 1904, column: 8, scope: !6436)
!6441 = !DILocation(line: 1904, column: 30, scope: !6436)
!6442 = !DILocation(line: 1904, column: 53, scope: !6436)
!6443 = !DILocation(line: 1905, column: 5, scope: !6436)
!6444 = !DILocation(line: 1903, column: 8, scope: !6422)
!6445 = !DILocation(line: 1906, column: 15, scope: !6436)
!6446 = !DILocation(line: 1907, column: 40, scope: !6436)
!6447 = !DILocation(line: 1907, column: 46, scope: !6436)
!6448 = !DILocation(line: 1906, column: 6, scope: !6436)
!6449 = distinct !{!6449, !6433, !6450}
!6450 = !DILocation(line: 1907, column: 49, scope: !6417)
!6451 = !DILocation(line: 1898, column: 37, scope: !6420)
!6452 = !DILocation(line: 1896, column: 3, scope: !6420)
!6453 = distinct !{!6453, !6426, !6454}
!6454 = !DILocation(line: 1908, column: 7, scope: !6415)
!6455 = !DILocation(line: 1909, column: 12, scope: !6384)
!6456 = !DILocation(line: 1909, column: 3, scope: !6384)
!6457 = !DILocation(line: 1910, column: 3, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1910, column: 3)
!6459 = !DILocation(line: 1910, column: 3, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1910, column: 3)
!6461 = !DILocation(line: 1911, column: 39, scope: !6460)
!6462 = !DILocation(line: 1911, column: 42, scope: !6460)
!6463 = !DILocation(line: 1911, column: 5, scope: !6460)
!6464 = distinct !{!6464, !6457, !6465}
!6465 = !DILocation(line: 1911, column: 73, scope: !6458)
!6466 = !DILocation(line: 1912, column: 3, scope: !6384)
!6467 = !DILocation(line: 1913, column: 3, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1913, column: 3)
!6469 = !DILocation(line: 1913, column: 3, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 1913, column: 3)
!6471 = !DILocation(line: 1914, column: 36, scope: !6470)
!6472 = !DILocation(line: 1914, column: 5, scope: !6470)
!6473 = distinct !{!6473, !6467, !6474}
!6474 = !DILocation(line: 1914, column: 37, scope: !6468)
!6475 = !DILocation(line: 1915, column: 3, scope: !6384)
!6476 = !DILocation(line: 1916, column: 3, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1916, column: 3)
!6478 = !DILocation(line: 1916, column: 3, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1916, column: 3)
!6480 = !DILocation(line: 1917, column: 39, scope: !6479)
!6481 = !DILocation(line: 1917, column: 42, scope: !6479)
!6482 = !DILocation(line: 1917, column: 5, scope: !6479)
!6483 = distinct !{!6483, !6476, !6484}
!6484 = !DILocation(line: 1917, column: 73, scope: !6477)
!6485 = !DILocation(line: 1918, column: 3, scope: !6384)
!6486 = !DILocation(line: 1919, column: 8, scope: !6396)
!6487 = !DILocation(line: 0, scope: !6396)
!6488 = !DILocation(line: 1919, column: 25, scope: !6395)
!6489 = !DILocation(line: 1919, column: 23, scope: !6395)
!6490 = !DILocation(line: 1919, column: 3, scope: !6396)
!6491 = !DILocation(line: 1923, column: 21, scope: !6394)
!6492 = !DILocation(line: 0, scope: !6394)
!6493 = !DILocation(line: 1924, column: 11, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 1924, column: 11)
!6495 = !DILocation(line: 1924, column: 53, scope: !6494)
!6496 = !DILocation(line: 1924, column: 11, scope: !6394)
!6497 = !DILocation(line: 1926, column: 16, scope: !6394)
!6498 = !DILocation(line: 1926, column: 41, scope: !6394)
!6499 = !DILocation(line: 1926, column: 7, scope: !6394)
!6500 = !DILocation(line: 1919, column: 52, scope: !6395)
!6501 = !DILocation(line: 1928, column: 5, scope: !6395)
!6502 = !DILocation(line: 1919, column: 3, scope: !6395)
!6503 = distinct !{!6503, !6490, !6504}
!6504 = !DILocation(line: 1928, column: 5, scope: !6396)
!6505 = !DILocation(line: 1929, column: 12, scope: !6384)
!6506 = !DILocation(line: 1929, column: 3, scope: !6384)
!6507 = !DILocation(line: 1930, column: 1, scope: !6384)
!6508 = distinct !DISubprogram(name: "color_allocnos", scope: !3, file: !3, line: 1772, type: !5037, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6509)
!6509 = !{!6510, !6511, !6512, !6513}
!6510 = !DILocalVariable(name: "i", scope: !6508, file: !3, line: 1774, type: !7)
!6511 = !DILocalVariable(name: "n", scope: !6508, file: !3, line: 1774, type: !7)
!6512 = !DILocalVariable(name: "bi", scope: !6508, file: !3, line: 1775, type: !3569)
!6513 = !DILocalVariable(name: "a", scope: !6508, file: !3, line: 1776, type: !575)
!6514 = !DILocation(line: 1774, column: 3, scope: !6508)
!6515 = !DILocation(line: 1775, column: 3, scope: !6508)
!6516 = !DILocation(line: 1778, column: 23, scope: !6508)
!6517 = !DILocation(line: 1779, column: 40, scope: !6508)
!6518 = !DILocation(line: 1779, column: 38, scope: !6508)
!6519 = !DILocation(line: 1780, column: 7, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1780, column: 7)
!6521 = !DILocation(line: 1780, column: 7, scope: !6508)
!6522 = !DILocation(line: 1781, column: 5, scope: !6520)
!6523 = !DILocation(line: 1782, column: 7, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1782, column: 7)
!6525 = !DILocation(line: 1782, column: 26, scope: !6524)
!6526 = !DILocation(line: 1782, column: 7, scope: !6508)
!6527 = !DILocation(line: 0, scope: !6508)
!6528 = !DILocation(line: 1785, column: 7, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1785, column: 7)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1783, column: 5)
!6531 = !DILocation(line: 1784, column: 9, scope: !6530)
!6532 = !DILocation(line: 1785, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1785, column: 7)
!6534 = !DILocation(line: 1787, column: 8, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1786, column: 2)
!6536 = !DILocation(line: 1787, column: 21, scope: !6535)
!6537 = !DILocation(line: 1788, column: 8, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1788, column: 8)
!6539 = !DILocation(line: 1788, column: 32, scope: !6538)
!6540 = !DILocation(line: 1788, column: 8, scope: !6535)
!6541 = !DILocation(line: 1790, column: 8, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 1789, column: 6)
!6543 = !DILocation(line: 1790, column: 31, scope: !6542)
!6544 = !DILocation(line: 1791, column: 8, scope: !6542)
!6545 = !DILocation(line: 1791, column: 31, scope: !6542)
!6546 = !DILocation(line: 1794, column: 12, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1794, column: 12)
!6548 = !DILocation(line: 1794, column: 38, scope: !6547)
!6549 = !DILocation(line: 1794, column: 45, scope: !6547)
!6550 = !DILocation(line: 1794, column: 59, scope: !6547)
!6551 = !DILocation(line: 1794, column: 42, scope: !6547)
!6552 = !DILocation(line: 1796, column: 5, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1795, column: 3)
!6554 = !DILocation(line: 1797, column: 5, scope: !6553)
!6555 = !DILocation(line: 1798, column: 14, scope: !6553)
!6556 = !DILocation(line: 1798, column: 5, scope: !6553)
!6557 = !DILocation(line: 1799, column: 3, scope: !6553)
!6558 = !DILocation(line: 1802, column: 4, scope: !6535)
!6559 = !DILocation(line: 1802, column: 21, scope: !6535)
!6560 = !DILocation(line: 1802, column: 25, scope: !6535)
!6561 = !DILocation(line: 1803, column: 2, scope: !6535)
!6562 = !DILocation(line: 0, scope: !6530)
!6563 = distinct !{!6563, !6528, !6564}
!6564 = !DILocation(line: 1803, column: 2, scope: !6529)
!6565 = !DILocation(line: 1804, column: 13, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1804, column: 11)
!6567 = !DILocation(line: 1804, column: 11, scope: !6530)
!6568 = !DILocation(line: 1806, column: 30, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1805, column: 2)
!6570 = !DILocation(line: 1806, column: 4, scope: !6569)
!6571 = !DILocation(line: 1808, column: 16, scope: !6569)
!6572 = !DILocation(line: 1808, column: 33, scope: !6569)
!6573 = !DILocation(line: 1808, column: 4, scope: !6569)
!6574 = !DILocation(line: 1814, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 1814, column: 4)
!6576 = !DILocation(line: 0, scope: !6575)
!6577 = !DILocation(line: 1814, column: 18, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 1814, column: 4)
!6579 = !DILocation(line: 1814, column: 4, scope: !6575)
!6580 = !DILocation(line: 1816, column: 12, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1815, column: 6)
!6582 = !DILocation(line: 1817, column: 12, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1817, column: 12)
!6584 = !DILocation(line: 1817, column: 38, scope: !6583)
!6585 = !DILocation(line: 1817, column: 45, scope: !6583)
!6586 = !DILocation(line: 1817, column: 59, scope: !6583)
!6587 = !DILocation(line: 1817, column: 42, scope: !6583)
!6588 = !DILocation(line: 1819, column: 5, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1818, column: 3)
!6590 = !DILocation(line: 1820, column: 5, scope: !6589)
!6591 = !DILocation(line: 1821, column: 14, scope: !6589)
!6592 = !DILocation(line: 1821, column: 5, scope: !6589)
!6593 = !DILocation(line: 1822, column: 3, scope: !6589)
!6594 = !DILocation(line: 1823, column: 12, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1823, column: 12)
!6596 = !DILocation(line: 0, scope: !6595)
!6597 = !DILocation(line: 1823, column: 12, scope: !6581)
!6598 = !DILocation(line: 1825, column: 39, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1825, column: 9)
!6600 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1824, column: 3)
!6601 = !DILocation(line: 1827, column: 9, scope: !6599)
!6602 = !DILocation(line: 1826, column: 7, scope: !6599)
!6603 = !DILocation(line: 1831, column: 39, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1831, column: 9)
!6605 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1830, column: 3)
!6606 = !DILocation(line: 1832, column: 7, scope: !6604)
!6607 = !DILocation(line: 1814, column: 24, scope: !6578)
!6608 = !DILocation(line: 1814, column: 4, scope: !6578)
!6609 = distinct !{!6609, !6579, !6610}
!6610 = !DILocation(line: 1834, column: 6, scope: !6575)
!6611 = !DILocation(line: 1840, column: 32, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1838, column: 5)
!6613 = !DILocation(line: 1841, column: 34, scope: !6612)
!6614 = !DILocation(line: 1842, column: 7, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 1842, column: 7)
!6616 = !DILocation(line: 1842, column: 7, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 1842, column: 7)
!6618 = !DILocation(line: 1844, column: 8, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1843, column: 2)
!6620 = !DILocation(line: 1844, column: 21, scope: !6619)
!6621 = !DILocation(line: 1845, column: 8, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 1845, column: 8)
!6623 = !DILocation(line: 1845, column: 32, scope: !6622)
!6624 = !DILocation(line: 1845, column: 8, scope: !6619)
!6625 = !DILocation(line: 1847, column: 8, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 1846, column: 6)
!6627 = !DILocation(line: 1847, column: 31, scope: !6626)
!6628 = !DILocation(line: 1848, column: 8, scope: !6626)
!6629 = !DILocation(line: 1848, column: 31, scope: !6626)
!6630 = !DILocation(line: 1851, column: 12, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1851, column: 12)
!6632 = !DILocation(line: 1851, column: 38, scope: !6631)
!6633 = !DILocation(line: 1851, column: 45, scope: !6631)
!6634 = !DILocation(line: 1851, column: 59, scope: !6631)
!6635 = !DILocation(line: 1851, column: 42, scope: !6631)
!6636 = !DILocation(line: 1853, column: 5, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1852, column: 3)
!6638 = !DILocation(line: 1854, column: 5, scope: !6637)
!6639 = !DILocation(line: 1855, column: 14, scope: !6637)
!6640 = !DILocation(line: 1855, column: 5, scope: !6637)
!6641 = !DILocation(line: 1856, column: 3, scope: !6637)
!6642 = !DILocation(line: 1859, column: 4, scope: !6619)
!6643 = !DILocation(line: 1860, column: 2, scope: !6619)
!6644 = distinct !{!6644, !6614, !6645}
!6645 = !DILocation(line: 1860, column: 2, scope: !6615)
!6646 = !DILocation(line: 1861, column: 7, scope: !6612)
!6647 = !DILocation(line: 1862, column: 7, scope: !6612)
!6648 = !DILocation(line: 1864, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1864, column: 7)
!6650 = !DILocation(line: 1864, column: 7, scope: !6508)
!6651 = !DILocation(line: 1866, column: 5, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1866, column: 5)
!6653 = !DILocation(line: 1866, column: 5, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 1866, column: 5)
!6655 = !DILocation(line: 1868, column: 6, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1867, column: 7)
!6657 = !DILocation(line: 1868, column: 19, scope: !6656)
!6658 = !DILocation(line: 1869, column: 2, scope: !6656)
!6659 = !DILocation(line: 1869, column: 38, scope: !6656)
!6660 = !DILocation(line: 1870, column: 2, scope: !6656)
!6661 = !DILocation(line: 1870, column: 37, scope: !6656)
!6662 = distinct !{!6662, !6651, !6663}
!6663 = !DILocation(line: 1871, column: 7, scope: !6652)
!6664 = !DILocation(line: 1872, column: 20, scope: !6508)
!6665 = !DILocation(line: 1872, column: 3, scope: !6508)
!6666 = !DILocation(line: 1873, column: 23, scope: !6508)
!6667 = !DILocation(line: 1874, column: 1, scope: !6508)
!6668 = distinct !DISubprogram(name: "loop_depth", scope: !146, file: !146, line: 425, type: !6669, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6673)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!7, !6671}
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!6673 = !{!6674}
!6674 = !DILocalVariable(name: "loop", arg: 1, scope: !6668, file: !146, line: 425, type: !6671)
!6675 = !DILocation(line: 0, scope: !6668)
!6676 = !DILocation(line: 427, column: 10, scope: !6668)
!6677 = !DILocation(line: 427, column: 3, scope: !6668)
!6678 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !146, file: !146, line: 85, type: !6679, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6683)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!7, !6681}
!6681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6682, size: 64)
!6682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!6683 = !{!6684}
!6684 = !DILocalVariable(name: "vec_", arg: 1, scope: !6678, file: !146, line: 85, type: !6681)
!6685 = !DILocation(line: 0, scope: !6678)
!6686 = !DILocation(line: 85, column: 1, scope: !6678)
!6687 = distinct !DISubprogram(name: "put_allocno_into_bucket", scope: !3, file: !3, line: 1494, type: !3000, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6688)
!6688 = !{!6689, !6690}
!6689 = !DILocalVariable(name: "allocno", arg: 1, scope: !6687, file: !3, line: 1494, type: !575)
!6690 = !DILocalVariable(name: "cover_class", scope: !6687, file: !3, line: 1496, type: !390)
!6691 = !DILocation(line: 0, scope: !6687)
!6692 = !DILocation(line: 1499, column: 7, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1499, column: 7)
!6694 = !DILocation(line: 1499, column: 49, scope: !6693)
!6695 = !DILocation(line: 1499, column: 7, scope: !6687)
!6696 = !DILocation(line: 1498, column: 17, scope: !6687)
!6697 = !DILocation(line: 1501, column: 3, scope: !6687)
!6698 = !DILocation(line: 1501, column: 32, scope: !6687)
!6699 = !DILocation(line: 1502, column: 3, scope: !6687)
!6700 = !DILocation(line: 1503, column: 3, scope: !6687)
!6701 = !DILocation(line: 1504, column: 7, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1504, column: 7)
!6703 = !DILocation(line: 1505, column: 9, scope: !6702)
!6704 = !DILocation(line: 1505, column: 42, scope: !6702)
!6705 = !DILocation(line: 1505, column: 7, scope: !6702)
!6706 = !DILocation(line: 1506, column: 10, scope: !6702)
!6707 = !DILocation(line: 1506, column: 7, scope: !6702)
!6708 = !DILocation(line: 1504, column: 7, scope: !6687)
!6709 = !DILocation(line: 1507, column: 5, scope: !6702)
!6710 = !DILocation(line: 1509, column: 5, scope: !6702)
!6711 = !DILocation(line: 1510, column: 1, scope: !6687)
!6712 = distinct !DISubprogram(name: "push_allocnos_to_stack", scope: !3, file: !3, line: 1148, type: !5037, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6713)
!6713 = !{!6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6730}
!6714 = !DILocalVariable(name: "allocno", scope: !6712, file: !3, line: 1150, type: !575)
!6715 = !DILocalVariable(name: "a", scope: !6712, file: !3, line: 1150, type: !575)
!6716 = !DILocalVariable(name: "i_allocno", scope: !6712, file: !3, line: 1150, type: !575)
!6717 = !DILocalVariable(name: "allocno_vec", scope: !6712, file: !3, line: 1150, type: !574)
!6718 = !DILocalVariable(name: "cover_class", scope: !6712, file: !3, line: 1151, type: !390)
!6719 = !DILocalVariable(name: "rclass", scope: !6712, file: !3, line: 1151, type: !390)
!6720 = !DILocalVariable(name: "allocno_pri", scope: !6712, file: !3, line: 1152, type: !566)
!6721 = !DILocalVariable(name: "i_allocno_pri", scope: !6712, file: !3, line: 1152, type: !566)
!6722 = !DILocalVariable(name: "allocno_cost", scope: !6712, file: !3, line: 1152, type: !566)
!6723 = !DILocalVariable(name: "i_allocno_cost", scope: !6712, file: !3, line: 1152, type: !566)
!6724 = !DILocalVariable(name: "i", scope: !6712, file: !3, line: 1153, type: !566)
!6725 = !DILocalVariable(name: "j", scope: !6712, file: !3, line: 1153, type: !566)
!6726 = !DILocalVariable(name: "num", scope: !6712, file: !3, line: 1153, type: !566)
!6727 = !DILocalVariable(name: "cover_class_allocnos_num", scope: !6712, file: !3, line: 1153, type: !1699)
!6728 = !DILocalVariable(name: "cover_class_allocnos", scope: !6712, file: !3, line: 1154, type: !6729)
!6729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 1728, elements: !1700)
!6730 = !DILocalVariable(name: "cost", scope: !6712, file: !3, line: 1155, type: !566)
!6731 = !DILocation(line: 1153, column: 3, scope: !6712)
!6732 = !DILocation(line: 1153, column: 18, scope: !6712)
!6733 = !DILocation(line: 1154, column: 3, scope: !6712)
!6734 = !DILocation(line: 1154, column: 18, scope: !6712)
!6735 = !DILocation(line: 1158, column: 3, scope: !6712)
!6736 = !DILocation(line: 0, scope: !6712)
!6737 = !DILocation(line: 0, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1159, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1159, column: 3)
!6740 = !DILocation(line: 1159, column: 8, scope: !6739)
!6741 = !DILocation(line: 0, scope: !6739)
!6742 = !DILocation(line: 1159, column: 17, scope: !6738)
!6743 = !DILocation(line: 1159, column: 3, scope: !6739)
!6744 = !DILocation(line: 1161, column: 21, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 1160, column: 5)
!6746 = !DILocation(line: 1162, column: 7, scope: !6745)
!6747 = !DILocation(line: 1162, column: 45, scope: !6745)
!6748 = !DILocation(line: 1163, column: 7, scope: !6745)
!6749 = !DILocation(line: 1163, column: 41, scope: !6745)
!6750 = !DILocation(line: 1164, column: 7, scope: !6745)
!6751 = !DILocation(line: 1164, column: 52, scope: !6745)
!6752 = !DILocation(line: 1159, column: 46, scope: !6738)
!6753 = !DILocation(line: 1159, column: 3, scope: !6738)
!6754 = distinct !{!6754, !6743, !6755}
!6755 = !DILocation(line: 1165, column: 5, scope: !6739)
!6756 = !DILocation(line: 1167, column: 8, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1167, column: 3)
!6758 = !DILocation(line: 0, scope: !6757)
!6759 = !DILocation(line: 1168, column: 16, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1167, column: 3)
!6761 = !DILocation(line: 1167, column: 3, scope: !6757)
!6762 = !DILocation(line: 1187, column: 3, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1187, column: 3)
!6764 = !DILocation(line: 1170, column: 24, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1170, column: 9)
!6766 = !DILocation(line: 1170, column: 55, scope: !6765)
!6767 = !DILocation(line: 1170, column: 9, scope: !6760)
!6768 = !DILocation(line: 1172, column: 2, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1171, column: 7)
!6770 = !DILocation(line: 1172, column: 39, scope: !6769)
!6771 = !DILocation(line: 1174, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 1174, column: 2)
!6773 = !DILocation(line: 0, scope: !6769)
!6774 = !DILocation(line: 0, scope: !6772)
!6775 = !DILocation(line: 1177, column: 14, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 1176, column: 4)
!6777 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 1174, column: 2)
!6778 = !DILocation(line: 1177, column: 11, scope: !6776)
!6779 = !DILocation(line: 1178, column: 12, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 1178, column: 10)
!6781 = !DILocation(line: 1178, column: 10, scope: !6776)
!6782 = !DILocation(line: 1174, column: 2, scope: !6777)
!6783 = distinct !{!6783, !6784, !6785}
!6784 = !DILocation(line: 1174, column: 2, scope: !6772)
!6785 = !DILocation(line: 1180, column: 4, scope: !6772)
!6786 = !DILocation(line: 1183, column: 2, scope: !6769)
!6787 = !DILocation(line: 1183, column: 25, scope: !6769)
!6788 = !DILocation(line: 1184, column: 7, scope: !6769)
!6789 = !DILocation(line: 1169, column: 18, scope: !6760)
!6790 = !DILocation(line: 1167, column: 3, scope: !6760)
!6791 = distinct !{!6791, !6761, !6792}
!6792 = !DILocation(line: 1184, column: 7, scope: !6757)
!6793 = !DILocation(line: 0, scope: !6763)
!6794 = !DILocation(line: 1187, column: 25, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 1187, column: 3)
!6796 = !DILocation(line: 1187, column: 23, scope: !6795)
!6797 = !DILocation(line: 1189, column: 21, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 1188, column: 5)
!6799 = !DILocation(line: 1192, column: 11, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1192, column: 11)
!6801 = !DILocation(line: 1192, column: 49, scope: !6800)
!6802 = !DILocation(line: 1192, column: 11, scope: !6798)
!6803 = !DILocation(line: 1194, column: 40, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 1193, column: 3)
!6805 = !DILocation(line: 1194, column: 62, scope: !6804)
!6806 = !DILocation(line: 1194, column: 4, scope: !6804)
!6807 = !DILocation(line: 1194, column: 38, scope: !6804)
!6808 = !DILocation(line: 1195, column: 8, scope: !6804)
!6809 = !DILocation(line: 1196, column: 42, scope: !6804)
!6810 = !DILocation(line: 1197, column: 2, scope: !6804)
!6811 = !DILocation(line: 1198, column: 11, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1198, column: 11)
!6813 = !DILocation(line: 1198, column: 11, scope: !6798)
!6814 = !DILocation(line: 1200, column: 6, scope: !6812)
!6815 = !DILocation(line: 1199, column: 2, scope: !6812)
!6816 = !DILocation(line: 1200, column: 4, scope: !6812)
!6817 = !DILocation(line: 1187, column: 52, scope: !6795)
!6818 = !DILocation(line: 1187, column: 3, scope: !6795)
!6819 = distinct !{!6819, !6762, !6820}
!6820 = !DILocation(line: 1203, column: 5, scope: !6763)
!6821 = !DILocation(line: 1206, column: 8, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1206, column: 3)
!6823 = !DILocation(line: 0, scope: !6822)
!6824 = !DILocation(line: 1207, column: 16, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 1206, column: 3)
!6826 = !DILocation(line: 1206, column: 3, scope: !6822)
!6827 = !DILocation(line: 1218, column: 3, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1218, column: 3)
!6829 = !DILocation(line: 1209, column: 24, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1209, column: 9)
!6831 = !DILocation(line: 1209, column: 55, scope: !6830)
!6832 = !DILocation(line: 1209, column: 9, scope: !6825)
!6833 = !DILocation(line: 1211, column: 2, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 1210, column: 7)
!6835 = !DILocation(line: 1212, column: 18, scope: !6834)
!6836 = !DILocation(line: 1212, column: 55, scope: !6834)
!6837 = !DILocation(line: 1212, column: 59, scope: !6834)
!6838 = !DILocation(line: 1213, column: 6, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 1213, column: 6)
!6840 = !DILocation(line: 1213, column: 51, scope: !6839)
!6841 = !DILocation(line: 1213, column: 6, scope: !6834)
!6842 = !DILocation(line: 1215, column: 9, scope: !6839)
!6843 = !DILocation(line: 1214, column: 4, scope: !6839)
!6844 = !DILocation(line: 1208, column: 18, scope: !6825)
!6845 = !DILocation(line: 1206, column: 3, scope: !6825)
!6846 = distinct !{!6846, !6826, !6847}
!6847 = !DILocation(line: 1217, column: 7, scope: !6822)
!6848 = !DILocation(line: 1220, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 1219, column: 5)
!6850 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 1218, column: 3)
!6851 = !DILocation(line: 1221, column: 17, scope: !6849)
!6852 = !DILocation(line: 1222, column: 19, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1222, column: 11)
!6854 = !DILocation(line: 1222, column: 11, scope: !6849)
!6855 = !DILocation(line: 1311, column: 3, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1311, column: 3)
!6857 = !DILocation(line: 1224, column: 21, scope: !6849)
!6858 = !DILocation(line: 1225, column: 23, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1225, column: 11)
!6860 = !DILocation(line: 1225, column: 11, scope: !6849)
!6861 = !DILocation(line: 1227, column: 4, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 1226, column: 2)
!6863 = !DILocation(line: 1228, column: 4, scope: !6862)
!6864 = distinct !{!6864, !6827, !6865}
!6865 = !DILocation(line: 1308, column: 5, scope: !6828)
!6866 = !DILocation(line: 1233, column: 11, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1233, column: 11)
!6868 = !DILocation(line: 1233, column: 11, scope: !6849)
!6869 = !DILocation(line: 1235, column: 4, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1235, column: 4)
!6871 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 1234, column: 2)
!6872 = !DILocation(line: 1235, column: 10, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1235, column: 4)
!6874 = !DILocation(line: 1235, column: 64, scope: !6873)
!6875 = !DILocation(line: 1237, column: 18, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 1236, column: 6)
!6877 = !DILocation(line: 1238, column: 8, scope: !6876)
!6878 = !DILocation(line: 1238, column: 42, scope: !6876)
!6879 = !DILocation(line: 1239, column: 17, scope: !6876)
!6880 = !DILocation(line: 1240, column: 12, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 1240, column: 12)
!6882 = !DILocation(line: 1241, column: 7, scope: !6881)
!6883 = !DILocation(line: 1241, column: 36, scope: !6881)
!6884 = !DILocation(line: 1241, column: 5, scope: !6881)
!6885 = !DILocation(line: 1242, column: 7, scope: !6881)
!6886 = !DILocation(line: 1242, column: 5, scope: !6881)
!6887 = !DILocation(line: 1240, column: 12, scope: !6876)
!6888 = !DILocation(line: 1244, column: 6, scope: !6881)
!6889 = !DILocation(line: 1245, column: 6, scope: !6881)
!6890 = !DILocation(line: 1243, column: 3, scope: !6881)
!6891 = !DILocation(line: 1235, column: 4, scope: !6873)
!6892 = distinct !{!6892, !6869, !6893}
!6893 = !DILocation(line: 1246, column: 6, scope: !6870)
!6894 = !DILocation(line: 1249, column: 9, scope: !6871)
!6895 = !DILocation(line: 1248, column: 8, scope: !6871)
!6896 = !DILocation(line: 1249, column: 56, scope: !6871)
!6897 = !DILocation(line: 1250, column: 23, scope: !6871)
!6898 = !DILocation(line: 1251, column: 9, scope: !6871)
!6899 = !DILocation(line: 1250, column: 4, scope: !6871)
!6900 = !DILocation(line: 1252, column: 2, scope: !6871)
!6901 = !DILocation(line: 1255, column: 10, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 1254, column: 2)
!6903 = !DILocation(line: 1257, column: 18, scope: !6902)
!6904 = !DILocation(line: 1262, column: 24, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 1262, column: 4)
!6906 = !DILocation(line: 1262, column: 9, scope: !6905)
!6907 = !DILocation(line: 0, scope: !6905)
!6908 = !DILocation(line: 0, scope: !6902)
!6909 = !DILocation(line: 1262, column: 18, scope: !6905)
!6910 = !DILocation(line: 1262, column: 31, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1262, column: 4)
!6912 = !DILocation(line: 1262, column: 4, scope: !6905)
!6913 = !DILocation(line: 1264, column: 20, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 1263, column: 6)
!6915 = !DILocation(line: 1265, column: 14, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 1265, column: 12)
!6917 = !DILocation(line: 1266, column: 5, scope: !6916)
!6918 = !DILocation(line: 1266, column: 8, scope: !6916)
!6919 = !DILocation(line: 1265, column: 12, scope: !6914)
!6920 = !DILocation(line: 1269, column: 20, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 1267, column: 3)
!6922 = !DILocation(line: 1270, column: 20, scope: !6921)
!6923 = !DILocation(line: 1272, column: 12, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 1272, column: 12)
!6925 = !DILocation(line: 1271, column: 3, scope: !6921)
!6926 = !DILocation(line: 0, scope: !6914)
!6927 = !DILocation(line: 1272, column: 12, scope: !6914)
!6928 = !DILocation(line: 1274, column: 6, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 1273, column: 3)
!6930 = !DILocation(line: 1276, column: 22, scope: !6929)
!6931 = !DILocation(line: 1277, column: 21, scope: !6929)
!6932 = !DILocation(line: 1278, column: 17, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 1278, column: 9)
!6934 = !DILocation(line: 1279, column: 9, scope: !6933)
!6935 = !DILocation(line: 1279, column: 15, scope: !6933)
!6936 = !DILocation(line: 1280, column: 6, scope: !6933)
!6937 = !DILocation(line: 1280, column: 9, scope: !6933)
!6938 = !DILocation(line: 1281, column: 9, scope: !6933)
!6939 = !DILocation(line: 1282, column: 9, scope: !6933)
!6940 = !DILocation(line: 1282, column: 14, scope: !6933)
!6941 = !DILocation(line: 1283, column: 6, scope: !6933)
!6942 = !DILocation(line: 1283, column: 22, scope: !6933)
!6943 = !DILocation(line: 1284, column: 10, scope: !6933)
!6944 = !DILocation(line: 1284, column: 26, scope: !6933)
!6945 = !DILocation(line: 1285, column: 7, scope: !6933)
!6946 = !DILocation(line: 1285, column: 24, scope: !6933)
!6947 = !DILocation(line: 1286, column: 11, scope: !6933)
!6948 = !DILocation(line: 1286, column: 28, scope: !6933)
!6949 = !DILocation(line: 1287, column: 8, scope: !6933)
!6950 = !DILocation(line: 1287, column: 12, scope: !6933)
!6951 = !DILocation(line: 1288, column: 14, scope: !6933)
!6952 = !DILocation(line: 1288, column: 12, scope: !6933)
!6953 = !DILocation(line: 1278, column: 9, scope: !6929)
!6954 = !DILocation(line: 1293, column: 7, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 1289, column: 7)
!6956 = !DILocation(line: 1295, column: 14, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 1295, column: 12)
!6958 = !DILocation(line: 1295, column: 12, scope: !6914)
!6959 = !DILocation(line: 1262, column: 4, scope: !6911)
!6960 = distinct !{!6960, !6912, !6961}
!6961 = !DILocation(line: 1297, column: 6, scope: !6905)
!6962 = !DILocation(line: 1299, column: 46, scope: !6902)
!6963 = !DILocation(line: 1299, column: 42, scope: !6902)
!6964 = !DILocation(line: 0, scope: !6867)
!6965 = !DILocation(line: 1307, column: 7, scope: !6849)
!6966 = !DILocation(line: 1218, column: 3, scope: !6850)
!6967 = !DILocation(line: 0, scope: !6856)
!6968 = !DILocation(line: 1311, column: 19, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 1311, column: 3)
!6970 = !DILocation(line: 1311, column: 17, scope: !6969)
!6971 = !DILocation(line: 1313, column: 21, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 1312, column: 5)
!6973 = !DILocation(line: 1315, column: 11, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 1315, column: 11)
!6975 = !DILocation(line: 1315, column: 56, scope: !6974)
!6976 = !DILocation(line: 1315, column: 11, scope: !6972)
!6977 = !DILocation(line: 1316, column: 2, scope: !6974)
!6978 = !DILocation(line: 1311, column: 46, scope: !6969)
!6979 = !DILocation(line: 1311, column: 3, scope: !6969)
!6980 = distinct !{!6980, !6855, !6981}
!6981 = !DILocation(line: 1317, column: 5, scope: !6856)
!6982 = !DILocation(line: 1318, column: 1, scope: !6712)
!6983 = distinct !DISubprogram(name: "pop_allocnos_from_stack", scope: !3, file: !3, line: 1323, type: !5037, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6984)
!6984 = !{!6985, !6986}
!6985 = !DILocalVariable(name: "allocno", scope: !6983, file: !3, line: 1325, type: !575)
!6986 = !DILocalVariable(name: "cover_class", scope: !6983, file: !3, line: 1326, type: !390)
!6987 = !DILocation(line: 1328, column: 3, scope: !6983)
!6988 = !DILocation(line: 1328, column: 9, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1328, column: 3)
!6990 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 1328, column: 3)
!6991 = !DILocation(line: 1328, column: 55, scope: !6989)
!6992 = !DILocation(line: 1328, column: 3, scope: !6990)
!6993 = !DILocation(line: 1330, column: 17, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 1329, column: 5)
!6995 = !DILocation(line: 0, scope: !6983)
!6996 = !DILocation(line: 1331, column: 21, scope: !6994)
!6997 = !DILocation(line: 1332, column: 11, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1332, column: 11)
!6999 = !DILocation(line: 1332, column: 37, scope: !6998)
!7000 = !DILocation(line: 1332, column: 44, scope: !6998)
!7001 = !DILocation(line: 1332, column: 58, scope: !6998)
!7002 = !DILocation(line: 1332, column: 41, scope: !6998)
!7003 = !DILocation(line: 1334, column: 4, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1333, column: 2)
!7005 = !DILocation(line: 1335, column: 4, scope: !7004)
!7006 = !DILocation(line: 1336, column: 13, scope: !7004)
!7007 = !DILocation(line: 1336, column: 4, scope: !7004)
!7008 = !DILocation(line: 1337, column: 2, scope: !7004)
!7009 = !DILocation(line: 1338, column: 23, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1338, column: 11)
!7011 = !DILocation(line: 1338, column: 11, scope: !6994)
!7012 = !DILocation(line: 1340, column: 4, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1339, column: 2)
!7014 = !DILocation(line: 1340, column: 33, scope: !7013)
!7015 = !DILocation(line: 1341, column: 4, scope: !7013)
!7016 = !DILocation(line: 1341, column: 33, scope: !7013)
!7017 = !DILocation(line: 1345, column: 8, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1345, column: 8)
!7019 = !DILocation(line: 1345, column: 34, scope: !7018)
!7020 = !DILocation(line: 1345, column: 41, scope: !7018)
!7021 = !DILocation(line: 1345, column: 55, scope: !7018)
!7022 = !DILocation(line: 1345, column: 38, scope: !7018)
!7023 = !DILocation(line: 1346, column: 6, scope: !7018)
!7024 = !DILocation(line: 1348, column: 16, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1348, column: 16)
!7026 = !DILocation(line: 1348, column: 16, scope: !7010)
!7027 = !DILocation(line: 1350, column: 8, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 1350, column: 8)
!7029 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 1349, column: 2)
!7030 = !DILocation(line: 1350, column: 34, scope: !7028)
!7031 = !DILocation(line: 1350, column: 41, scope: !7028)
!7032 = !DILocation(line: 1350, column: 55, scope: !7028)
!7033 = !DILocation(line: 1350, column: 38, scope: !7028)
!7034 = !DILocation(line: 1352, column: 8, scope: !7028)
!7035 = !DILocation(line: 1351, column: 6, scope: !7028)
!7036 = !DILocation(line: 1354, column: 16, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 1354, column: 16)
!7038 = !DILocation(line: 1354, column: 16, scope: !7025)
!7039 = !DILocation(line: 1356, column: 8, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 1356, column: 8)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 1355, column: 2)
!7042 = !DILocation(line: 1356, column: 34, scope: !7040)
!7043 = !DILocation(line: 1356, column: 41, scope: !7040)
!7044 = !DILocation(line: 1356, column: 55, scope: !7040)
!7045 = !DILocation(line: 1356, column: 38, scope: !7040)
!7046 = !DILocation(line: 1357, column: 6, scope: !7040)
!7047 = !DILocation(line: 1359, column: 7, scope: !6994)
!7048 = !DILocation(line: 1359, column: 36, scope: !6994)
!7049 = !DILocation(line: 1328, column: 3, scope: !6989)
!7050 = distinct !{!7050, !6992, !7051}
!7051 = !DILocation(line: 1360, column: 5, scope: !6990)
!7052 = !DILocation(line: 1361, column: 1, scope: !6983)
!7053 = distinct !DISubprogram(name: "setup_allocno_left_conflicts_size", scope: !3, file: !3, line: 1404, type: !3000, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7054)
!7054 = !{!7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065}
!7055 = !DILocalVariable(name: "allocno", arg: 1, scope: !7053, file: !3, line: 1404, type: !575)
!7056 = !DILocalVariable(name: "i", scope: !7053, file: !3, line: 1406, type: !566)
!7057 = !DILocalVariable(name: "hard_regs_num", scope: !7053, file: !3, line: 1406, type: !566)
!7058 = !DILocalVariable(name: "hard_regno", scope: !7053, file: !3, line: 1406, type: !566)
!7059 = !DILocalVariable(name: "conflict_allocnos_size", scope: !7053, file: !3, line: 1406, type: !566)
!7060 = !DILocalVariable(name: "a", scope: !7053, file: !3, line: 1407, type: !575)
!7061 = !DILocalVariable(name: "conflict_allocno", scope: !7053, file: !3, line: 1407, type: !575)
!7062 = !DILocalVariable(name: "cover_class", scope: !7053, file: !3, line: 1408, type: !390)
!7063 = !DILocalVariable(name: "temp_set", scope: !7053, file: !3, line: 1409, type: !1752)
!7064 = !DILocalVariable(name: "aci", scope: !7053, file: !3, line: 1410, type: !1869)
!7065 = !DILocalVariable(name: "last", scope: !7066, file: !3, line: 1469, type: !566)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 1468, column: 5)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1466, column: 12)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 1462, column: 7)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 1451, column: 8)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 1449, column: 10)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 1446, column: 4)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1445, column: 2)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1445, column: 2)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 1444, column: 7)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 1442, column: 5)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1442, column: 5)
!7077 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1441, column: 7)
!7078 = !DILocation(line: 0, scope: !7053)
!7079 = !DILocation(line: 1407, column: 3, scope: !7053)
!7080 = !DILocation(line: 1410, column: 3, scope: !7053)
!7081 = !DILocation(line: 1412, column: 17, scope: !7053)
!7082 = !DILocation(line: 1413, column: 19, scope: !7053)
!7083 = !DILocation(line: 1416, column: 8, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1416, column: 3)
!7085 = !DILocation(line: 0, scope: !7084)
!7086 = !DILocation(line: 1419, column: 7, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 1418, column: 5)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1416, column: 3)
!7089 = !DILocation(line: 1420, column: 13, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1420, column: 11)
!7091 = !DILocation(line: 1420, column: 11, scope: !7087)
!7092 = !DILocation(line: 1416, column: 3, scope: !7088)
!7093 = distinct !{!7093, !7094, !7095}
!7094 = !DILocation(line: 1416, column: 3, scope: !7084)
!7095 = !DILocation(line: 1422, column: 5, scope: !7084)
!7096 = !DILocation(line: 1423, column: 3, scope: !7053)
!7097 = !DILocation(line: 1424, column: 3, scope: !7053)
!7098 = !DILocation(line: 1426, column: 9, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1426, column: 7)
!7100 = !DILocation(line: 1426, column: 7, scope: !7053)
!7101 = !DILocation(line: 1427, column: 5, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1427, column: 5)
!7103 = !DILocation(line: 1427, column: 19, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1427, column: 5)
!7105 = !DILocation(line: 1429, column: 15, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 1428, column: 7)
!7107 = !DILocation(line: 1430, column: 6, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 1430, column: 6)
!7109 = !DILocation(line: 1430, column: 6, scope: !7106)
!7110 = !DILocation(line: 1432, column: 28, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1431, column: 4)
!7112 = !DILocation(line: 1433, column: 6, scope: !7111)
!7113 = !DILocation(line: 1434, column: 10, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 1434, column: 10)
!7115 = !DILocation(line: 1434, column: 10, scope: !7111)
!7116 = !DILocation(line: 1427, column: 43, scope: !7104)
!7117 = !DILocation(line: 1427, column: 5, scope: !7104)
!7118 = distinct !{!7118, !7101, !7119}
!7119 = !DILocation(line: 1437, column: 7, scope: !7102)
!7120 = !DILocation(line: 1439, column: 7, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1439, column: 7)
!7122 = !DILocation(line: 1439, column: 7, scope: !7053)
!7123 = !DILocation(line: 1440, column: 19, scope: !7121)
!7124 = !DILocation(line: 1440, column: 5, scope: !7121)
!7125 = !DILocation(line: 1441, column: 19, scope: !7077)
!7126 = !DILocation(line: 1441, column: 7, scope: !7053)
!7127 = !DILocation(line: 0, scope: !7071)
!7128 = !DILocation(line: 1442, column: 10, scope: !7076)
!7129 = !DILocation(line: 1425, column: 26, scope: !7053)
!7130 = !DILocation(line: 1438, column: 3, scope: !7053)
!7131 = !DILocation(line: 0, scope: !7076)
!7132 = !DILocation(line: 1445, column: 2, scope: !7073)
!7133 = !DILocation(line: 1445, column: 2, scope: !7072)
!7134 = !DILocation(line: 1448, column: 10, scope: !7071)
!7135 = !DILocation(line: 1448, column: 8, scope: !7071)
!7136 = !DILocation(line: 1449, column: 24, scope: !7070)
!7137 = !DILocation(line: 1450, column: 10, scope: !7070)
!7138 = !DILocation(line: 1449, column: 10, scope: !7070)
!7139 = !DILocation(line: 1449, column: 10, scope: !7071)
!7140 = !DILocation(line: 1454, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 1454, column: 7)
!7142 = !DILocation(line: 1454, column: 7, scope: !7069)
!7143 = !DILocation(line: 1456, column: 25, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1456, column: 11)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1455, column: 5)
!7146 = !DILocation(line: 1457, column: 11, scope: !7144)
!7147 = !DILocation(line: 1456, column: 11, scope: !7144)
!7148 = !DILocation(line: 1456, column: 11, scope: !7145)
!7149 = !DILocation(line: 1459, column: 23, scope: !7145)
!7150 = !DILocation(line: 1460, column: 9, scope: !7145)
!7151 = !DILocation(line: 1459, column: 7, scope: !7145)
!7152 = !DILocation(line: 1461, column: 5, scope: !7145)
!7153 = !DILocation(line: 1462, column: 9, scope: !7068)
!7154 = !DILocation(line: 1462, column: 7, scope: !7069)
!7155 = !DILocation(line: 1465, column: 18, scope: !7068)
!7156 = !DILocation(line: 1464, column: 11, scope: !7068)
!7157 = !DILocation(line: 1464, column: 7, scope: !7068)
!7158 = !DILocation(line: 1463, column: 5, scope: !7068)
!7159 = !DILocation(line: 1466, column: 26, scope: !7067)
!7160 = !DILocation(line: 1467, column: 5, scope: !7067)
!7161 = !DILocation(line: 1466, column: 12, scope: !7068)
!7162 = !DILocation(line: 1470, column: 7, scope: !7066)
!7163 = !DILocation(line: 1471, column: 25, scope: !7066)
!7164 = !DILocation(line: 1470, column: 5, scope: !7066)
!7165 = !DILocation(line: 0, scope: !7066)
!7166 = !DILocation(line: 1473, column: 7, scope: !7066)
!7167 = !DILocation(line: 0, scope: !7067)
!7168 = !DILocation(line: 1473, column: 25, scope: !7066)
!7169 = !DILocation(line: 1475, column: 10, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1475, column: 8)
!7171 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 1474, column: 9)
!7172 = !DILocation(line: 1475, column: 8, scope: !7171)
!7173 = !DILocation(line: 1477, column: 30, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 1476, column: 6)
!7175 = !DILocation(line: 1478, column: 8, scope: !7174)
!7176 = !DILocation(line: 1479, column: 6, scope: !7174)
!7177 = !DILocation(line: 1480, column: 14, scope: !7171)
!7178 = distinct !{!7178, !7166, !7179}
!7179 = !DILocation(line: 1481, column: 9, scope: !7066)
!7180 = distinct !{!7180, !7132, !7181}
!7181 = !DILocation(line: 1484, column: 4, scope: !7073)
!7182 = !DILocation(line: 1485, column: 15, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1485, column: 13)
!7184 = !DILocation(line: 1485, column: 13, scope: !7074)
!7185 = !DILocation(line: 1442, column: 5, scope: !7075)
!7186 = distinct !{!7186, !7187, !7188}
!7187 = !DILocation(line: 1442, column: 5, scope: !7076)
!7188 = !DILocation(line: 1487, column: 7, scope: !7076)
!7189 = !DILocation(line: 1488, column: 3, scope: !7053)
!7190 = !DILocation(line: 1488, column: 41, scope: !7053)
!7191 = !DILocation(line: 1489, column: 1, scope: !7053)
!7192 = distinct !DISubprogram(name: "setup_allocno_available_regs_num", scope: !3, file: !3, line: 1365, type: !3000, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7193)
!7193 = !{!7194, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7202}
!7194 = !DILocalVariable(name: "allocno", arg: 1, scope: !7192, file: !3, line: 1365, type: !575)
!7195 = !DILocalVariable(name: "i", scope: !7192, file: !3, line: 1367, type: !566)
!7196 = !DILocalVariable(name: "n", scope: !7192, file: !3, line: 1367, type: !566)
!7197 = !DILocalVariable(name: "hard_regs_num", scope: !7192, file: !3, line: 1367, type: !566)
!7198 = !DILocalVariable(name: "hard_regno", scope: !7192, file: !3, line: 1367, type: !566)
!7199 = !DILocalVariable(name: "mode", scope: !7192, file: !3, line: 1368, type: !5)
!7200 = !DILocalVariable(name: "cover_class", scope: !7192, file: !3, line: 1369, type: !390)
!7201 = !DILocalVariable(name: "a", scope: !7192, file: !3, line: 1370, type: !575)
!7202 = !DILocalVariable(name: "temp_set", scope: !7192, file: !3, line: 1371, type: !1752)
!7203 = !DILocation(line: 0, scope: !7192)
!7204 = !DILocation(line: 1373, column: 17, scope: !7192)
!7205 = !DILocation(line: 1374, column: 42, scope: !7192)
!7206 = !DILocation(line: 1374, column: 3, scope: !7192)
!7207 = !DILocation(line: 1374, column: 40, scope: !7192)
!7208 = !DILocation(line: 1375, column: 19, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1375, column: 7)
!7210 = !DILocation(line: 1375, column: 7, scope: !7192)
!7211 = !DILocation(line: 1379, column: 19, scope: !7192)
!7212 = !DILocation(line: 1380, column: 8, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1380, column: 3)
!7214 = !DILocation(line: 0, scope: !7213)
!7215 = !DILocation(line: 1383, column: 7, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 1382, column: 5)
!7217 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 1380, column: 3)
!7218 = !DILocation(line: 1384, column: 13, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1384, column: 11)
!7220 = !DILocation(line: 1384, column: 11, scope: !7216)
!7221 = !DILocation(line: 1380, column: 3, scope: !7217)
!7222 = distinct !{!7222, !7223, !7224}
!7223 = !DILocation(line: 1380, column: 3, scope: !7213)
!7224 = !DILocation(line: 1386, column: 5, scope: !7213)
!7225 = !DILocation(line: 1387, column: 10, scope: !7192)
!7226 = !DILocation(line: 0, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1391, column: 11)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1389, column: 5)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1388, column: 3)
!7230 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1388, column: 3)
!7231 = !DILocation(line: 1388, column: 8, scope: !7230)
!7232 = !DILocation(line: 0, scope: !7230)
!7233 = !DILocation(line: 1388, column: 40, scope: !7229)
!7234 = !DILocation(line: 1388, column: 3, scope: !7230)
!7235 = !DILocation(line: 1390, column: 20, scope: !7228)
!7236 = !DILocation(line: 1391, column: 11, scope: !7227)
!7237 = !DILocation(line: 1392, column: 4, scope: !7227)
!7238 = !DILocation(line: 1392, column: 7, scope: !7227)
!7239 = !DILocation(line: 1391, column: 11, scope: !7228)
!7240 = !DILocation(line: 1394, column: 3, scope: !7227)
!7241 = !DILocation(line: 1394, column: 2, scope: !7227)
!7242 = !DILocation(line: 1388, column: 3, scope: !7229)
!7243 = distinct !{!7243, !7234, !7244}
!7244 = !DILocation(line: 1395, column: 5, scope: !7230)
!7245 = !DILocation(line: 1396, column: 7, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1396, column: 7)
!7247 = !DILocation(line: 1396, column: 33, scope: !7246)
!7248 = !DILocation(line: 1396, column: 42, scope: !7246)
!7249 = !DILocation(line: 1396, column: 37, scope: !7246)
!7250 = !DILocation(line: 1396, column: 49, scope: !7246)
!7251 = !DILocation(line: 1396, column: 63, scope: !7246)
!7252 = !DILocation(line: 1398, column: 7, scope: !7246)
!7253 = !DILocation(line: 1398, column: 32, scope: !7246)
!7254 = !DILocation(line: 1397, column: 5, scope: !7246)
!7255 = !DILocation(line: 1399, column: 40, scope: !7192)
!7256 = !DILocation(line: 1400, column: 1, scope: !7192)
!7257 = distinct !DISubprogram(name: "add_allocno_to_bucket", scope: !3, file: !3, line: 699, type: !7258, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7260)
!7258 = !DISubroutineType(types: !7259)
!7259 = !{null, !575, !574}
!7260 = !{!7261, !7262, !7263, !7264}
!7261 = !DILocalVariable(name: "allocno", arg: 1, scope: !7257, file: !3, line: 699, type: !575)
!7262 = !DILocalVariable(name: "bucket_ptr", arg: 2, scope: !7257, file: !3, line: 699, type: !574)
!7263 = !DILocalVariable(name: "first_allocno", scope: !7257, file: !3, line: 701, type: !575)
!7264 = !DILocalVariable(name: "cover_class", scope: !7257, file: !3, line: 702, type: !390)
!7265 = !DILocation(line: 0, scope: !7257)
!7266 = !DILocation(line: 704, column: 18, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 704, column: 7)
!7268 = !DILocation(line: 705, column: 7, scope: !7267)
!7269 = !DILocation(line: 705, column: 25, scope: !7267)
!7270 = !DILocation(line: 705, column: 56, scope: !7267)
!7271 = !DILocation(line: 704, column: 7, scope: !7257)
!7272 = !DILocation(line: 707, column: 7, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 706, column: 5)
!7274 = !DILocation(line: 707, column: 44, scope: !7273)
!7275 = !DILocation(line: 709, column: 5, scope: !7273)
!7276 = !DILocation(line: 710, column: 19, scope: !7257)
!7277 = !DILocation(line: 711, column: 3, scope: !7257)
!7278 = !DILocation(line: 711, column: 41, scope: !7257)
!7279 = !DILocation(line: 712, column: 3, scope: !7257)
!7280 = !DILocation(line: 712, column: 41, scope: !7257)
!7281 = !DILocation(line: 713, column: 21, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 713, column: 7)
!7283 = !DILocation(line: 713, column: 7, scope: !7257)
!7284 = !DILocation(line: 714, column: 5, scope: !7282)
!7285 = !DILocation(line: 714, column: 49, scope: !7282)
!7286 = !DILocation(line: 715, column: 15, scope: !7257)
!7287 = !DILocation(line: 716, column: 1, scope: !7257)
!7288 = distinct !DISubprogram(name: "hard_reg_set_empty_p", scope: !1753, file: !1753, line: 133, type: !7289, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7291)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{!565, !5409}
!7291 = !{!7292}
!7292 = !DILocalVariable(name: "x", arg: 1, scope: !7288, file: !1753, line: 133, type: !5409)
!7293 = !DILocation(line: 0, scope: !7288)
!7294 = !DILocation(line: 135, column: 12, scope: !7288)
!7295 = !DILocation(line: 135, column: 10, scope: !7288)
!7296 = !DILocation(line: 135, column: 3, scope: !7288)
!7297 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_truncate", scope: !576, file: !576, line: 67, type: !7298, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7300)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{null, !5693, !7}
!7300 = !{!7301, !7302}
!7301 = !DILocalVariable(name: "vec_", arg: 1, scope: !7297, file: !576, line: 67, type: !5693)
!7302 = !DILocalVariable(name: "size_", arg: 2, scope: !7297, file: !576, line: 67, type: !7)
!7303 = !DILocation(line: 0, scope: !7297)
!7304 = !DILocation(line: 67, column: 1, scope: !7297)
!7305 = !DILocation(line: 67, column: 1, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7297, file: !576, line: 67, column: 1)
!7307 = distinct !DISubprogram(name: "calculate_allocno_spill_cost", scope: !3, file: !3, line: 1055, type: !7308, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7310)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!566, !575}
!7310 = !{!7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318}
!7311 = !DILocalVariable(name: "a", arg: 1, scope: !7307, file: !3, line: 1055, type: !575)
!7312 = !DILocalVariable(name: "regno", scope: !7307, file: !3, line: 1057, type: !566)
!7313 = !DILocalVariable(name: "cost", scope: !7307, file: !3, line: 1057, type: !566)
!7314 = !DILocalVariable(name: "mode", scope: !7307, file: !3, line: 1058, type: !5)
!7315 = !DILocalVariable(name: "rclass", scope: !7307, file: !3, line: 1059, type: !390)
!7316 = !DILocalVariable(name: "parent_allocno", scope: !7307, file: !3, line: 1060, type: !575)
!7317 = !DILocalVariable(name: "parent_node", scope: !7307, file: !3, line: 1061, type: !1683)
!7318 = !DILocalVariable(name: "loop_node", scope: !7307, file: !3, line: 1061, type: !1683)
!7319 = !DILocation(line: 0, scope: !7307)
!7320 = !DILocation(line: 1063, column: 11, scope: !7307)
!7321 = !DILocation(line: 1064, column: 10, scope: !7307)
!7322 = !DILocation(line: 1064, column: 44, scope: !7307)
!7323 = !DILocation(line: 1064, column: 42, scope: !7307)
!7324 = !DILocation(line: 1065, column: 7, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1065, column: 7)
!7326 = !DILocation(line: 1065, column: 23, scope: !7325)
!7327 = !DILocation(line: 1065, column: 7, scope: !7307)
!7328 = !DILocation(line: 1067, column: 15, scope: !7307)
!7329 = !DILocation(line: 1068, column: 33, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1068, column: 7)
!7331 = !DILocation(line: 1068, column: 41, scope: !7330)
!7332 = !DILocation(line: 1068, column: 7, scope: !7307)
!7333 = !DILocation(line: 1070, column: 38, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1070, column: 7)
!7335 = !DILocation(line: 1070, column: 25, scope: !7334)
!7336 = !DILocation(line: 1070, column: 64, scope: !7334)
!7337 = !DILocation(line: 1070, column: 7, scope: !7307)
!7338 = !DILocation(line: 1072, column: 10, scope: !7307)
!7339 = !DILocation(line: 1073, column: 12, scope: !7307)
!7340 = !DILocation(line: 1074, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1074, column: 7)
!7342 = !DILocation(line: 1074, column: 43, scope: !7341)
!7343 = !DILocation(line: 0, scope: !7341)
!7344 = !DILocation(line: 1074, column: 7, scope: !7307)
!7345 = !DILocation(line: 1075, column: 14, scope: !7341)
!7346 = !DILocation(line: 1076, column: 9, scope: !7341)
!7347 = !DILocation(line: 1076, column: 7, scope: !7341)
!7348 = !DILocation(line: 1077, column: 9, scope: !7341)
!7349 = !DILocation(line: 1078, column: 9, scope: !7341)
!7350 = !DILocation(line: 1078, column: 7, scope: !7341)
!7351 = !DILocation(line: 1077, column: 7, scope: !7341)
!7352 = !DILocation(line: 1075, column: 10, scope: !7341)
!7353 = !DILocation(line: 1075, column: 5, scope: !7341)
!7354 = !DILocation(line: 1080, column: 15, scope: !7341)
!7355 = !DILocation(line: 1081, column: 10, scope: !7341)
!7356 = !DILocation(line: 1081, column: 8, scope: !7341)
!7357 = !DILocation(line: 1082, column: 10, scope: !7341)
!7358 = !DILocation(line: 1083, column: 10, scope: !7341)
!7359 = !DILocation(line: 1083, column: 8, scope: !7341)
!7360 = !DILocation(line: 1082, column: 8, scope: !7341)
!7361 = !DILocation(line: 1084, column: 10, scope: !7341)
!7362 = !DILocation(line: 1085, column: 6, scope: !7341)
!7363 = !DILocation(line: 1086, column: 8, scope: !7341)
!7364 = !DILocation(line: 1086, column: 6, scope: !7341)
!7365 = !DILocation(line: 1085, column: 3, scope: !7341)
!7366 = !DILocation(line: 1084, column: 7, scope: !7341)
!7367 = !DILocation(line: 1080, column: 10, scope: !7341)
!7368 = !DILocation(line: 1088, column: 1, scope: !7307)
!7369 = distinct !DISubprogram(name: "allocno_spill_priority_compare", scope: !3, file: !3, line: 1093, type: !1953, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7370)
!7370 = !{!7371, !7372, !7373, !7374, !7375, !7376, !7377}
!7371 = !DILocalVariable(name: "k1", arg: 1, scope: !7369, file: !3, line: 1093, type: !1816)
!7372 = !DILocalVariable(name: "k2", arg: 2, scope: !7369, file: !3, line: 1093, type: !1816)
!7373 = !DILocalVariable(name: "pri1", scope: !7369, file: !3, line: 1095, type: !566)
!7374 = !DILocalVariable(name: "pri2", scope: !7369, file: !3, line: 1095, type: !566)
!7375 = !DILocalVariable(name: "diff", scope: !7369, file: !3, line: 1095, type: !566)
!7376 = !DILocalVariable(name: "a1", scope: !7369, file: !3, line: 1096, type: !575)
!7377 = !DILocalVariable(name: "a2", scope: !7369, file: !3, line: 1096, type: !575)
!7378 = !DILocation(line: 0, scope: !7369)
!7379 = !DILocation(line: 1096, column: 22, scope: !7369)
!7380 = !DILocation(line: 1096, column: 47, scope: !7369)
!7381 = !DILocation(line: 1098, column: 11, scope: !7369)
!7382 = !DILocation(line: 1099, column: 7, scope: !7369)
!7383 = !DILocation(line: 1100, column: 29, scope: !7369)
!7384 = !DILocation(line: 1100, column: 9, scope: !7369)
!7385 = !DILocation(line: 1100, column: 55, scope: !7369)
!7386 = !DILocation(line: 1100, column: 7, scope: !7369)
!7387 = !DILocation(line: 1101, column: 7, scope: !7369)
!7388 = !DILocation(line: 1099, column: 4, scope: !7369)
!7389 = !DILocation(line: 1102, column: 11, scope: !7369)
!7390 = !DILocation(line: 1103, column: 7, scope: !7369)
!7391 = !DILocation(line: 1104, column: 29, scope: !7369)
!7392 = !DILocation(line: 1104, column: 9, scope: !7369)
!7393 = !DILocation(line: 1104, column: 55, scope: !7369)
!7394 = !DILocation(line: 1104, column: 7, scope: !7369)
!7395 = !DILocation(line: 1105, column: 7, scope: !7369)
!7396 = !DILocation(line: 1103, column: 4, scope: !7369)
!7397 = !DILocation(line: 1106, column: 20, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 1106, column: 7)
!7399 = !DILocation(line: 1106, column: 28, scope: !7398)
!7400 = !DILocation(line: 1106, column: 7, scope: !7369)
!7401 = !DILocation(line: 1108, column: 33, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 1108, column: 7)
!7403 = !DILocation(line: 1108, column: 54, scope: !7402)
!7404 = !DILocation(line: 1108, column: 7, scope: !7369)
!7405 = !DILocation(line: 1110, column: 10, scope: !7369)
!7406 = !DILocation(line: 1110, column: 29, scope: !7369)
!7407 = !DILocation(line: 1110, column: 27, scope: !7369)
!7408 = !DILocation(line: 1110, column: 3, scope: !7369)
!7409 = !DILocation(line: 1111, column: 1, scope: !7369)
!7410 = distinct !DISubprogram(name: "splay_tree_allocate", scope: !3, file: !3, line: 1117, type: !1968, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7411)
!7411 = !{!7412, !7413}
!7412 = !DILocalVariable(name: "size", arg: 1, scope: !7410, file: !3, line: 1117, type: !566)
!7413 = !DILocalVariable(name: "data", arg: 2, scope: !7410, file: !3, line: 1117, type: !570)
!7414 = !DILocation(line: 0, scope: !7410)
!7415 = !DILocation(line: 1119, column: 12, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 1119, column: 7)
!7417 = !DILocation(line: 1119, column: 7, scope: !7410)
!7418 = !DILocation(line: 1120, column: 26, scope: !7416)
!7419 = !DILocation(line: 1120, column: 12, scope: !7416)
!7420 = !DILocation(line: 1120, column: 5, scope: !7416)
!7421 = !DILocation(line: 1121, column: 22, scope: !7410)
!7422 = !DILocation(line: 1121, column: 10, scope: !7410)
!7423 = !DILocation(line: 1121, column: 3, scope: !7410)
!7424 = !DILocation(line: 1122, column: 1, scope: !7410)
!7425 = distinct !DISubprogram(name: "splay_tree_free", scope: !3, file: !3, line: 1128, type: !1172, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7426)
!7426 = !{!7427, !7428, !7429, !7430}
!7427 = !DILocalVariable(name: "node", arg: 1, scope: !7425, file: !3, line: 1128, type: !570)
!7428 = !DILocalVariable(name: "data", arg: 2, scope: !7425, file: !3, line: 1128, type: !570)
!7429 = !DILocalVariable(name: "i", scope: !7425, file: !3, line: 1130, type: !566)
!7430 = !DILocalVariable(name: "cover_class", scope: !7425, file: !3, line: 1131, type: !390)
!7431 = !DILocation(line: 0, scope: !7425)
!7432 = !DILocation(line: 0, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 1133, column: 3)
!7434 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1133, column: 3)
!7435 = !DILocation(line: 1133, column: 8, scope: !7434)
!7436 = !DILocation(line: 0, scope: !7434)
!7437 = !DILocation(line: 1133, column: 17, scope: !7433)
!7438 = !DILocation(line: 1133, column: 3, scope: !7434)
!7439 = !DILocation(line: 1135, column: 21, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 1134, column: 5)
!7441 = !DILocation(line: 1136, column: 19, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 1136, column: 11)
!7443 = !DILocation(line: 1136, column: 16, scope: !7442)
!7444 = !DILocation(line: 1136, column: 11, scope: !7440)
!7445 = !DILocation(line: 1138, column: 4, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 1137, column: 2)
!7447 = !DILocation(line: 1139, column: 4, scope: !7446)
!7448 = !DILocation(line: 1133, column: 46, scope: !7433)
!7449 = !DILocation(line: 1133, column: 3, scope: !7433)
!7450 = distinct !{!7450, !7438, !7451}
!7451 = !DILocation(line: 1141, column: 5, scope: !7434)
!7452 = !DILocation(line: 1142, column: 14, scope: !7425)
!7453 = !DILocation(line: 1142, column: 3, scope: !7425)
!7454 = !DILocation(line: 1143, column: 1, scope: !7425)
!7455 = distinct !DISubprogram(name: "push_only_colorable", scope: !3, file: !3, line: 997, type: !5037, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2000)
!7456 = !DILocation(line: 999, column: 3, scope: !7455)
!7457 = !DILocation(line: 1000, column: 3, scope: !7455)
!7458 = !DILocation(line: 1000, column: 9, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1000, column: 3)
!7460 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 1000, column: 3)
!7461 = !DILocation(line: 1000, column: 34, scope: !7459)
!7462 = !DILocation(line: 1000, column: 3, scope: !7460)
!7463 = !DILocation(line: 1001, column: 5, scope: !7459)
!7464 = !DILocation(line: 1000, column: 3, scope: !7459)
!7465 = distinct !{!7465, !7462, !7466}
!7466 = !DILocation(line: 1001, column: 72, scope: !7460)
!7467 = !DILocation(line: 1002, column: 1, scope: !7455)
!7468 = distinct !DISubprogram(name: "push_allocno_to_spill", scope: !3, file: !3, line: 1007, type: !3000, scopeLine: 1008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7469)
!7469 = !{!7470}
!7470 = !DILocalVariable(name: "allocno", arg: 1, scope: !7468, file: !3, line: 1007, type: !575)
!7471 = !DILocation(line: 0, scope: !7468)
!7472 = !DILocation(line: 1009, column: 3, scope: !7468)
!7473 = !DILocation(line: 1010, column: 3, scope: !7468)
!7474 = !DILocation(line: 1010, column: 38, scope: !7468)
!7475 = !DILocation(line: 1011, column: 7, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 1011, column: 7)
!7477 = !DILocation(line: 1011, column: 33, scope: !7476)
!7478 = !DILocation(line: 1011, column: 40, scope: !7476)
!7479 = !DILocation(line: 1011, column: 54, scope: !7476)
!7480 = !DILocation(line: 1011, column: 37, scope: !7476)
!7481 = !DILocation(line: 1013, column: 7, scope: !7476)
!7482 = !DILocation(line: 1013, column: 30, scope: !7476)
!7483 = !DILocation(line: 1012, column: 5, scope: !7476)
!7484 = !DILocation(line: 1014, column: 3, scope: !7468)
!7485 = !DILocation(line: 1015, column: 1, scope: !7468)
!7486 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_length", scope: !576, file: !576, line: 67, type: !7487, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7491)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{!7, !7489}
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 64)
!7490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!7491 = !{!7492}
!7492 = !DILocalVariable(name: "vec_", arg: 1, scope: !7486, file: !576, line: 67, type: !7489)
!7493 = !DILocation(line: 0, scope: !7486)
!7494 = !DILocation(line: 67, column: 1, scope: !7486)
!7495 = distinct !DISubprogram(name: "VEC_ira_allocno_t_base_pop", scope: !576, file: !576, line: 67, type: !7496, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!575, !5693}
!7498 = !{!7499, !7500}
!7499 = !DILocalVariable(name: "vec_", arg: 1, scope: !7495, file: !576, line: 67, type: !5693)
!7500 = !DILocalVariable(name: "obj_", scope: !7495, file: !576, line: 67, type: !575)
!7501 = !DILocation(line: 0, scope: !7495)
!7502 = !DILocation(line: 67, column: 1, scope: !7495)
!7503 = distinct !DISubprogram(name: "allocno_spill_priority", scope: !3, file: !3, line: 688, type: !7308, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7504)
!7504 = !{!7505}
!7505 = !DILocalVariable(name: "a", arg: 1, scope: !7503, file: !3, line: 688, type: !575)
!7506 = !DILocation(line: 0, scope: !7503)
!7507 = !DILocation(line: 690, column: 11, scope: !7503)
!7508 = !DILocation(line: 691, column: 7, scope: !7503)
!7509 = !DILocation(line: 692, column: 29, scope: !7503)
!7510 = !DILocation(line: 692, column: 9, scope: !7503)
!7511 = !DILocation(line: 692, column: 54, scope: !7503)
!7512 = !DILocation(line: 692, column: 7, scope: !7503)
!7513 = !DILocation(line: 693, column: 7, scope: !7503)
!7514 = !DILocation(line: 691, column: 4, scope: !7503)
!7515 = !DILocation(line: 690, column: 3, scope: !7503)
!7516 = distinct !DISubprogram(name: "remove_allocno_from_bucket_and_push", scope: !3, file: !3, line: 961, type: !4115, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7517)
!7517 = !{!7518, !7519, !7520}
!7518 = !DILocalVariable(name: "allocno", arg: 1, scope: !7516, file: !3, line: 961, type: !575)
!7519 = !DILocalVariable(name: "colorable_p", arg: 2, scope: !7516, file: !3, line: 961, type: !565)
!7520 = !DILocalVariable(name: "cover_class", scope: !7516, file: !3, line: 963, type: !390)
!7521 = !DILocation(line: 0, scope: !7516)
!7522 = !DILocation(line: 965, column: 7, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 965, column: 7)
!7524 = !DILocation(line: 965, column: 7, scope: !7516)
!7525 = !DILocation(line: 966, column: 5, scope: !7523)
!7526 = !DILocation(line: 968, column: 5, scope: !7523)
!7527 = !DILocation(line: 969, column: 7, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 969, column: 7)
!7529 = !DILocation(line: 969, column: 33, scope: !7528)
!7530 = !DILocation(line: 969, column: 40, scope: !7528)
!7531 = !DILocation(line: 969, column: 54, scope: !7528)
!7532 = !DILocation(line: 969, column: 37, scope: !7528)
!7533 = !DILocation(line: 971, column: 7, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 970, column: 5)
!7535 = !DILocation(line: 972, column: 7, scope: !7534)
!7536 = !DILocation(line: 0, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 973, column: 11)
!7538 = !DILocation(line: 973, column: 11, scope: !7534)
!7539 = !DILocation(line: 974, column: 2, scope: !7537)
!7540 = !DILocation(line: 977, column: 4, scope: !7537)
!7541 = !DILocation(line: 978, column: 4, scope: !7537)
!7542 = !DILocation(line: 978, column: 38, scope: !7537)
!7543 = !DILocation(line: 976, column: 2, scope: !7537)
!7544 = !DILocation(line: 990, column: 7, scope: !7516)
!7545 = !DILocation(line: 991, column: 5, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 990, column: 7)
!7547 = !DILocation(line: 991, column: 40, scope: !7546)
!7548 = !DILocation(line: 992, column: 3, scope: !7516)
!7549 = !DILocation(line: 993, column: 1, scope: !7516)
!7550 = distinct !DISubprogram(name: "sort_bucket", scope: !3, file: !3, line: 765, type: !7551, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7553)
!7551 = !DISubroutineType(types: !7552)
!7552 = !{null, !574}
!7553 = !{!7554, !7555, !7556, !7557}
!7554 = !DILocalVariable(name: "bucket_ptr", arg: 1, scope: !7550, file: !3, line: 765, type: !574)
!7555 = !DILocalVariable(name: "a", scope: !7550, file: !3, line: 767, type: !575)
!7556 = !DILocalVariable(name: "head", scope: !7550, file: !3, line: 767, type: !575)
!7557 = !DILocalVariable(name: "n", scope: !7550, file: !3, line: 768, type: !566)
!7558 = !DILocation(line: 0, scope: !7550)
!7559 = !DILocation(line: 770, column: 8, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 770, column: 3)
!7561 = !DILocation(line: 0, scope: !7560)
!7562 = !DILocation(line: 770, column: 34, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 770, column: 3)
!7564 = !DILocation(line: 770, column: 3, scope: !7560)
!7565 = !DILocation(line: 771, column: 5, scope: !7563)
!7566 = !DILocation(line: 771, column: 22, scope: !7563)
!7567 = !DILocation(line: 771, column: 26, scope: !7563)
!7568 = !DILocation(line: 770, column: 47, scope: !7563)
!7569 = !DILocation(line: 770, column: 3, scope: !7563)
!7570 = distinct !{!7570, !7564, !7571}
!7571 = !DILocation(line: 771, column: 28, scope: !7560)
!7572 = !DILocation(line: 772, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 772, column: 7)
!7574 = !DILocation(line: 772, column: 7, scope: !7550)
!7575 = !DILocation(line: 775, column: 15, scope: !7550)
!7576 = !DILocation(line: 775, column: 32, scope: !7550)
!7577 = !DILocation(line: 775, column: 3, scope: !7550)
!7578 = !DILocation(line: 782, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 782, column: 3)
!7580 = !DILocation(line: 0, scope: !7579)
!7581 = !DILocation(line: 782, column: 15, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 782, column: 3)
!7583 = !DILocation(line: 782, column: 3, scope: !7579)
!7584 = !DILocation(line: 784, column: 11, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 783, column: 5)
!7586 = !DILocation(line: 785, column: 7, scope: !7585)
!7587 = !DILocation(line: 785, column: 39, scope: !7585)
!7588 = !DILocation(line: 786, column: 7, scope: !7585)
!7589 = !DILocation(line: 786, column: 39, scope: !7585)
!7590 = !DILocation(line: 787, column: 16, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 787, column: 11)
!7592 = !DILocation(line: 787, column: 11, scope: !7585)
!7593 = !DILocation(line: 788, column: 2, scope: !7591)
!7594 = !DILocation(line: 788, column: 37, scope: !7591)
!7595 = !DILocation(line: 782, column: 3, scope: !7582)
!7596 = distinct !{!7596, !7583, !7597}
!7597 = !DILocation(line: 790, column: 5, scope: !7579)
!7598 = !DILocation(line: 791, column: 15, scope: !7550)
!7599 = !DILocation(line: 792, column: 1, scope: !7550)
!7600 = distinct !DISubprogram(name: "bucket_allocno_compare_func", scope: !3, file: !3, line: 745, type: !1140, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7601)
!7601 = !{!7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610}
!7602 = !DILocalVariable(name: "v1p", arg: 1, scope: !7600, file: !3, line: 745, type: !1135)
!7603 = !DILocalVariable(name: "v2p", arg: 2, scope: !7600, file: !3, line: 745, type: !1135)
!7604 = !DILocalVariable(name: "a1", scope: !7600, file: !3, line: 747, type: !575)
!7605 = !DILocalVariable(name: "a2", scope: !7600, file: !3, line: 748, type: !575)
!7606 = !DILocalVariable(name: "diff", scope: !7600, file: !3, line: 749, type: !566)
!7607 = !DILocalVariable(name: "a1_freq", scope: !7600, file: !3, line: 749, type: !566)
!7608 = !DILocalVariable(name: "a2_freq", scope: !7600, file: !3, line: 749, type: !566)
!7609 = !DILocalVariable(name: "a1_num", scope: !7600, file: !3, line: 749, type: !566)
!7610 = !DILocalVariable(name: "a2_num", scope: !7600, file: !3, line: 749, type: !566)
!7611 = !DILocation(line: 0, scope: !7600)
!7612 = !DILocation(line: 747, column: 23, scope: !7600)
!7613 = !DILocation(line: 747, column: 22, scope: !7600)
!7614 = !DILocation(line: 748, column: 23, scope: !7600)
!7615 = !DILocation(line: 748, column: 22, scope: !7600)
!7616 = !DILocation(line: 749, column: 3, scope: !7600)
!7617 = !DILocation(line: 751, column: 21, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 751, column: 7)
!7619 = !DILocation(line: 751, column: 48, scope: !7618)
!7620 = !DILocation(line: 751, column: 46, scope: !7618)
!7621 = !DILocation(line: 751, column: 74, scope: !7618)
!7622 = !DILocation(line: 751, column: 7, scope: !7600)
!7623 = !DILocation(line: 753, column: 3, scope: !7600)
!7624 = !DILocation(line: 754, column: 3, scope: !7600)
!7625 = !DILocation(line: 755, column: 15, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 755, column: 7)
!7627 = !DILocation(line: 755, column: 24, scope: !7626)
!7628 = !DILocation(line: 755, column: 22, scope: !7626)
!7629 = !DILocation(line: 755, column: 32, scope: !7626)
!7630 = !DILocation(line: 755, column: 7, scope: !7600)
!7631 = !DILocation(line: 757, column: 20, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 757, column: 12)
!7633 = !DILocation(line: 757, column: 30, scope: !7632)
!7634 = !DILocation(line: 757, column: 28, scope: !7632)
!7635 = !DILocation(line: 757, column: 39, scope: !7632)
!7636 = !DILocation(line: 757, column: 12, scope: !7626)
!7637 = !DILocation(line: 759, column: 10, scope: !7600)
!7638 = !DILocation(line: 759, column: 29, scope: !7600)
!7639 = !DILocation(line: 759, column: 27, scope: !7600)
!7640 = !DILocation(line: 759, column: 3, scope: !7600)
!7641 = !DILocation(line: 760, column: 1, scope: !7600)
!7642 = distinct !DISubprogram(name: "get_coalesced_allocnos_attributes", scope: !3, file: !3, line: 721, type: !7643, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7645)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{null, !575, !573, !573}
!7645 = !{!7646, !7647, !7648, !7649}
!7646 = !DILocalVariable(name: "allocno", arg: 1, scope: !7642, file: !3, line: 721, type: !575)
!7647 = !DILocalVariable(name: "freq", arg: 2, scope: !7642, file: !3, line: 721, type: !573)
!7648 = !DILocalVariable(name: "num", arg: 3, scope: !7642, file: !3, line: 721, type: !573)
!7649 = !DILocalVariable(name: "a", scope: !7642, file: !3, line: 723, type: !575)
!7650 = !DILocation(line: 0, scope: !7642)
!7651 = !DILocation(line: 725, column: 9, scope: !7642)
!7652 = !DILocation(line: 726, column: 8, scope: !7642)
!7653 = !DILocation(line: 727, column: 8, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 727, column: 3)
!7655 = !DILocation(line: 0, scope: !7654)
!7656 = !DILocation(line: 730, column: 16, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 729, column: 5)
!7658 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 727, column: 3)
!7659 = !DILocation(line: 730, column: 13, scope: !7657)
!7660 = !DILocation(line: 731, column: 15, scope: !7657)
!7661 = !DILocation(line: 731, column: 12, scope: !7657)
!7662 = !DILocation(line: 732, column: 13, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 732, column: 11)
!7664 = !DILocation(line: 732, column: 11, scope: !7657)
!7665 = !DILocation(line: 727, column: 3, scope: !7658)
!7666 = distinct !{!7666, !7667, !7668}
!7667 = !DILocation(line: 727, column: 3, scope: !7654)
!7668 = !DILocation(line: 734, column: 5, scope: !7654)
!7669 = !DILocation(line: 735, column: 1, scope: !7642)
!7670 = distinct !DISubprogram(name: "delete_allocno_from_bucket", scope: !3, file: !3, line: 828, type: !7258, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7671)
!7671 = !{!7672, !7673, !7674, !7675, !7676}
!7672 = !DILocalVariable(name: "allocno", arg: 1, scope: !7670, file: !3, line: 828, type: !575)
!7673 = !DILocalVariable(name: "bucket_ptr", arg: 2, scope: !7670, file: !3, line: 828, type: !574)
!7674 = !DILocalVariable(name: "prev_allocno", scope: !7670, file: !3, line: 830, type: !575)
!7675 = !DILocalVariable(name: "next_allocno", scope: !7670, file: !3, line: 830, type: !575)
!7676 = !DILocalVariable(name: "cover_class", scope: !7670, file: !3, line: 831, type: !390)
!7677 = !DILocation(line: 0, scope: !7670)
!7678 = !DILocation(line: 833, column: 18, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 833, column: 7)
!7680 = !DILocation(line: 834, column: 7, scope: !7679)
!7681 = !DILocation(line: 834, column: 25, scope: !7679)
!7682 = !DILocation(line: 834, column: 56, scope: !7679)
!7683 = !DILocation(line: 833, column: 7, scope: !7670)
!7684 = !DILocation(line: 836, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 835, column: 5)
!7686 = !DILocation(line: 836, column: 44, scope: !7685)
!7687 = !DILocation(line: 838, column: 5, scope: !7685)
!7688 = !DILocation(line: 839, column: 18, scope: !7670)
!7689 = !DILocation(line: 840, column: 18, scope: !7670)
!7690 = !DILocation(line: 841, column: 20, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 841, column: 7)
!7692 = !DILocation(line: 841, column: 7, scope: !7670)
!7693 = !DILocation(line: 842, column: 5, scope: !7691)
!7694 = !DILocation(line: 842, column: 48, scope: !7691)
!7695 = !DILocation(line: 846, column: 19, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 844, column: 5)
!7697 = !DILocation(line: 848, column: 20, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 848, column: 7)
!7699 = !DILocation(line: 848, column: 7, scope: !7670)
!7700 = !DILocation(line: 849, column: 5, scope: !7698)
!7701 = !DILocation(line: 849, column: 48, scope: !7698)
!7702 = !DILocation(line: 850, column: 1, scope: !7670)
!7703 = distinct !DISubprogram(name: "push_allocno_to_stack", scope: !3, file: !3, line: 872, type: !3000, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7704)
!7704 = !{!7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712}
!7705 = !DILocalVariable(name: "allocno", arg: 1, scope: !7703, file: !3, line: 872, type: !575)
!7706 = !DILocalVariable(name: "left_conflicts_size", scope: !7703, file: !3, line: 874, type: !566)
!7707 = !DILocalVariable(name: "conflict_size", scope: !7703, file: !3, line: 874, type: !566)
!7708 = !DILocalVariable(name: "size", scope: !7703, file: !3, line: 874, type: !566)
!7709 = !DILocalVariable(name: "a", scope: !7703, file: !3, line: 875, type: !575)
!7710 = !DILocalVariable(name: "conflict_allocno", scope: !7703, file: !3, line: 875, type: !575)
!7711 = !DILocalVariable(name: "cover_class", scope: !7703, file: !3, line: 876, type: !390)
!7712 = !DILocalVariable(name: "aci", scope: !7703, file: !3, line: 877, type: !1869)
!7713 = !DILocation(line: 0, scope: !7703)
!7714 = !DILocation(line: 875, column: 3, scope: !7703)
!7715 = !DILocation(line: 877, column: 3, scope: !7703)
!7716 = !DILocation(line: 879, column: 3, scope: !7703)
!7717 = !DILocation(line: 879, column: 32, scope: !7703)
!7718 = !DILocation(line: 880, column: 3, scope: !7703)
!7719 = !DILocation(line: 881, column: 17, scope: !7703)
!7720 = !DILocation(line: 882, column: 19, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 882, column: 7)
!7722 = !DILocation(line: 882, column: 7, scope: !7703)
!7723 = !DILocation(line: 884, column: 10, scope: !7703)
!7724 = !DILocation(line: 884, column: 43, scope: !7703)
!7725 = !DILocation(line: 885, column: 7, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 885, column: 7)
!7727 = !DILocation(line: 885, column: 7, scope: !7703)
!7728 = !DILocation(line: 886, column: 19, scope: !7726)
!7729 = !DILocation(line: 886, column: 5, scope: !7726)
!7730 = !DILocation(line: 0, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 891, column: 2)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 890, column: 7)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 890, column: 7)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 889, column: 5)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 887, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 887, column: 3)
!7737 = !DILocation(line: 0, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 924, column: 9)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 908, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 906, column: 12)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 895, column: 6)
!7742 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 893, column: 8)
!7743 = !DILocation(line: 887, column: 8, scope: !7736)
!7744 = !DILocation(line: 0, scope: !7736)
!7745 = !DILocation(line: 890, column: 7, scope: !7733)
!7746 = !DILocation(line: 890, column: 7, scope: !7732)
!7747 = !DILocation(line: 892, column: 23, scope: !7731)
!7748 = !DILocation(line: 892, column: 21, scope: !7731)
!7749 = !DILocation(line: 893, column: 22, scope: !7742)
!7750 = !DILocation(line: 894, column: 8, scope: !7742)
!7751 = !DILocation(line: 893, column: 8, scope: !7742)
!7752 = !DILocation(line: 893, column: 8, scope: !7731)
!7753 = !DILocation(line: 898, column: 12, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 898, column: 12)
!7755 = !DILocation(line: 898, column: 12, scope: !7741)
!7756 = !DILocation(line: 900, column: 23, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 900, column: 9)
!7758 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 899, column: 3)
!7759 = !DILocation(line: 901, column: 9, scope: !7757)
!7760 = !DILocation(line: 900, column: 9, scope: !7757)
!7761 = !DILocation(line: 900, column: 9, scope: !7758)
!7762 = !DILocation(line: 903, column: 21, scope: !7758)
!7763 = !DILocation(line: 904, column: 7, scope: !7758)
!7764 = !DILocation(line: 903, column: 5, scope: !7758)
!7765 = !DILocation(line: 905, column: 3, scope: !7758)
!7766 = !DILocation(line: 906, column: 12, scope: !7740)
!7767 = !DILocation(line: 907, column: 5, scope: !7740)
!7768 = !DILocation(line: 907, column: 10, scope: !7740)
!7769 = !DILocation(line: 906, column: 12, scope: !7741)
!7770 = !DILocation(line: 910, column: 9, scope: !7739)
!7771 = !DILocation(line: 913, column: 24, scope: !7739)
!7772 = !DILocation(line: 912, column: 10, scope: !7739)
!7773 = !DILocation(line: 916, column: 29, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 916, column: 9)
!7775 = !DILocation(line: 917, column: 12, scope: !7774)
!7776 = !DILocation(line: 917, column: 9, scope: !7774)
!7777 = !DILocation(line: 0, scope: !7739)
!7778 = !DILocation(line: 916, column: 9, scope: !7739)
!7779 = !DILocation(line: 919, column: 56, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 918, column: 7)
!7781 = !DILocation(line: 920, column: 9, scope: !7780)
!7782 = !DILocation(line: 924, column: 9, scope: !7738)
!7783 = !DILocation(line: 924, column: 54, scope: !7738)
!7784 = !DILocation(line: 925, column: 9, scope: !7738)
!7785 = !DILocation(line: 925, column: 13, scope: !7738)
!7786 = !DILocation(line: 926, column: 9, scope: !7738)
!7787 = !DILocation(line: 926, column: 12, scope: !7738)
!7788 = !DILocation(line: 924, column: 9, scope: !7739)
!7789 = !DILocation(line: 932, column: 9, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 927, column: 7)
!7791 = !DILocation(line: 935, column: 9, scope: !7790)
!7792 = !DILocation(line: 935, column: 52, scope: !7790)
!7793 = !DILocation(line: 936, column: 9, scope: !7790)
!7794 = !DILocation(line: 940, column: 5, scope: !7739)
!7795 = !DILocation(line: 0, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 942, column: 9)
!7797 = !DILocation(line: 943, column: 12, scope: !7796)
!7798 = !DILocation(line: 939, column: 7, scope: !7790)
!7799 = !DILocation(line: 941, column: 7, scope: !7739)
!7800 = !DILocation(line: 942, column: 29, scope: !7796)
!7801 = !DILocation(line: 943, column: 9, scope: !7796)
!7802 = !DILocation(line: 942, column: 9, scope: !7739)
!7803 = !DILocation(line: 945, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 944, column: 7)
!7805 = !DILocation(line: 948, column: 5, scope: !7804)
!7806 = !DILocation(line: 947, column: 9, scope: !7804)
!7807 = !DILocation(line: 949, column: 7, scope: !7804)
!7808 = distinct !{!7808, !7745, !7809}
!7809 = !DILocation(line: 952, column: 2, scope: !7733)
!7810 = !DILocation(line: 953, column: 13, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 953, column: 11)
!7812 = !DILocation(line: 953, column: 11, scope: !7734)
!7813 = !DILocation(line: 887, column: 3, scope: !7735)
!7814 = distinct !{!7814, !7815, !7816}
!7815 = !DILocation(line: 887, column: 3, scope: !7736)
!7816 = !DILocation(line: 955, column: 5, scope: !7736)
!7817 = !DILocation(line: 956, column: 1, scope: !7703)
!7818 = distinct !DISubprogram(name: "add_allocno_to_ordered_bucket", scope: !3, file: !3, line: 798, type: !7258, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7819)
!7819 = !{!7820, !7821, !7822, !7823, !7824}
!7820 = !DILocalVariable(name: "allocno", arg: 1, scope: !7818, file: !3, line: 798, type: !575)
!7821 = !DILocalVariable(name: "bucket_ptr", arg: 2, scope: !7818, file: !3, line: 799, type: !574)
!7822 = !DILocalVariable(name: "before", scope: !7818, file: !3, line: 801, type: !575)
!7823 = !DILocalVariable(name: "after", scope: !7818, file: !3, line: 801, type: !575)
!7824 = !DILocalVariable(name: "cover_class", scope: !7818, file: !3, line: 802, type: !390)
!7825 = !DILocation(line: 0, scope: !7818)
!7826 = !DILocation(line: 801, column: 3, scope: !7818)
!7827 = !DILocation(line: 810, column: 17, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 810, column: 3)
!7829 = !DILocation(line: 810, column: 15, scope: !7828)
!7830 = !DILocation(line: 813, column: 38, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 813, column: 9)
!7832 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 810, column: 3)
!7833 = !DILocation(line: 810, column: 8, scope: !7828)
!7834 = !DILocation(line: 811, column: 8, scope: !7832)
!7835 = !DILocation(line: 0, scope: !7828)
!7836 = !DILocation(line: 811, column: 15, scope: !7832)
!7837 = !DILocation(line: 810, column: 3, scope: !7828)
!7838 = !DILocation(line: 813, column: 9, scope: !7831)
!7839 = !DILocation(line: 813, column: 57, scope: !7831)
!7840 = !DILocation(line: 813, column: 9, scope: !7832)
!7841 = !DILocation(line: 815, column: 43, scope: !7818)
!7842 = !DILocation(line: 812, column: 16, scope: !7832)
!7843 = !DILocation(line: 812, column: 33, scope: !7832)
!7844 = !DILocation(line: 812, column: 31, scope: !7832)
!7845 = !DILocation(line: 810, column: 3, scope: !7832)
!7846 = distinct !{!7846, !7837, !7847}
!7847 = !DILocation(line: 814, column: 7, scope: !7828)
!7848 = !DILocation(line: 815, column: 3, scope: !7818)
!7849 = !DILocation(line: 815, column: 41, scope: !7818)
!7850 = !DILocation(line: 816, column: 3, scope: !7818)
!7851 = !DILocation(line: 816, column: 41, scope: !7818)
!7852 = !DILocation(line: 817, column: 13, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 817, column: 7)
!7854 = !DILocation(line: 0, scope: !7853)
!7855 = !DILocation(line: 817, column: 7, scope: !7818)
!7856 = !DILocation(line: 818, column: 17, scope: !7853)
!7857 = !DILocation(line: 818, column: 5, scope: !7853)
!7858 = !DILocation(line: 820, column: 5, scope: !7853)
!7859 = !DILocation(line: 820, column: 41, scope: !7853)
!7860 = !DILocation(line: 821, column: 14, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 821, column: 7)
!7862 = !DILocation(line: 821, column: 7, scope: !7818)
!7863 = !DILocation(line: 822, column: 5, scope: !7861)
!7864 = !DILocation(line: 822, column: 42, scope: !7861)
!7865 = !DILocation(line: 823, column: 1, scope: !7818)
