; ModuleID = 'varasm.bc'
source_filename = "varasm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type opaque
%struct.diagnostic_info = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type { %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx*, %struct.htab*, i64 }
%struct.constant_descriptor_rtx = type { %struct.constant_descriptor_rtx*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, i32, i32, i32, i32, i32 }
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.anon = type { i8*, i32 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void ()*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i8 (%union.tree_node*)*, void (i32, i8*, i32, i8)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)*, void (i32)*, void (%struct.rtx_def*)*, void ()*, void (%union.tree_node*)*, void (%union.tree_node*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void (i32)*, void (%union.tree_node*, %union.tree_node*)*, i32 }
%struct.VEC_alias_pair_gc = type { %struct.VEC_alias_pair_base }
%struct.VEC_alias_pair_base = type { i32, i32, [1 x %struct.alias_pair] }
%struct.alias_pair = type { %union.tree_node*, %union.tree_node* }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.ggc_cache_tab = type { %struct.htab**, i64, i64, void (i8*)*, void (i8*)*, i32 (i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_map = type { %struct.tree_map_base, i32, %union.tree_node* }
%struct.tree_map_base = type { %union.tree_node* }
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type opaque
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.constant_descriptor_tree = type { %struct.rtx_def*, %union.tree_node*, i32 }
%struct.addr_const = type { %struct.rtx_def*, i64 }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.oc_outer_state = type { i32, i32 }
%struct.oc_local_state = type { %union.tree_node*, i64, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, i8, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [8 x i8] c"__templ\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"__offset\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@word_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [8 x i8] c"__align\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"__size\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@emutls_htab = internal global %struct.htab* null, align 8, !dbg !0
@unnamed_sections = internal global %union.section* null, align 8, !dbg !2001
@section_htab = internal global %struct.htab* null, align 8, !dbg !2003
@.str.4 = private unnamed_addr constant [9 x i8] c"varasm.c\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"%+D causes a section type conflict\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@.str.7 = private unnamed_addr constant [15 x i8] c".text.unlikely\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@first_function_block_is_cold = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !1965
@in_cold_section_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !1999
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c".rodata\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c".gnu.linkonce.t.\00", align 1
@flag_function_sections = external dso_local local_unnamed_addr global i32, align 4
@flag_data_sections = external dso_local local_unnamed_addr global i32, align 4
@.str.10 = private unnamed_addr constant [7 x i8] c".text.\00", align 1
@readonly_data_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1973
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@flag_merge_constants = external dso_local local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [14 x i8] c".rodata.cst%d\00", align 1
@_sch_istable = external dso_local local_unnamed_addr constant [256 x i16], align 16
@reg_names = external dso_local local_unnamed_addr global [53 x i8*], align 16
@decode_reg_name.table = internal unnamed_addr constant [24 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i32 0 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 1 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i32 2 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i32 3 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i32 4 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i32 5 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i32 6 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i32 7 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i32 0 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i32 1 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i32 2 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i32 3 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i32 4 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i32 5 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i32 6 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i32 7 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i32 0 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i32 0, i32 0), i32 1 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i32 2 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i32 3 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i32 0 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i32 1 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i32 2 }, %struct.anon { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 3 }], align 16, !dbg !1768
@.str.12 = private unnamed_addr constant [4 x i8] c"eax\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"edx\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"ecx\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"ebx\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"esi\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"edi\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"ebp\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"esp\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"rax\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"rdx\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"rcx\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"rbx\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"rsi\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"rdi\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"rbp\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"rsp\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"al\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"dl\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"bl\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"ah\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"dh\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"bh\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.38 = private unnamed_addr constant [75 x i8] c"alignment of %q+D is greater than maximum object file alignment.  Using %d\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@flag_mudflap = external dso_local local_unnamed_addr global i32, align 4
@.str.39 = private unnamed_addr constant [37 x i8] c"register name not specified for %q+D\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"invalid register name for %q+D\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"data type of %q+D isn%'t suitable for a register\00", align 1
@.str.42 = private unnamed_addr constant [58 x i8] c"register specified for %q+D isn%'t suitable for data type\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"global register variable has initial value\00", align 1
@.str.44 = private unnamed_addr constant [69 x i8] c"optimization may eliminate reads and/or writes to register variables\00", align 1
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@flag_strict_aliasing = external dso_local local_unnamed_addr global i32, align 4
@asm_out_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.45 = private unnamed_addr constant [5 x i8] c"\09%s\0A\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"___DTOR_LIST__\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"%s.%.5u\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c".ctors\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c".dtors\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"___CTOR_LIST__\00", align 1
@first_global_object_name = common dso_local global i8* null, align 8, !dbg !1955
@flag_shlib = external dso_local local_unnamed_addr global i32, align 4
@weak_global_object_name = common dso_local global i8* null, align 8, !dbg !1957
@flag_reorder_blocks_and_partition = external dso_local local_unnamed_addr global i32, align 4
@.str.51 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"LHOTB\00", align 1
@const_labelno = internal global i32 0, align 4, !dbg !1959
@.str.53 = private unnamed_addr constant [7 x i8] c"LCOLDB\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"LHOTE\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"LCOLDE\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@text_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1969
@.str.57 = private unnamed_addr constant [12 x i8] c"\09.align %d\0A\00", align 1
@align_functions_log = external dso_local local_unnamed_addr global i32, align 4
@align_functions = external dso_local local_unnamed_addr global i32, align 4
@.str.58 = private unnamed_addr constant [14 x i8] c"\09.p2align %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [18 x i8] c"\09.p2align %d,,%d\0A\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"\09.p2align 3\0A\00", align 1
@debug_hooks = external dso_local local_unnamed_addr global %struct.gcc_debug_hooks*, align 8
@.str.61 = private unnamed_addr constant [8 x i8] c"\09.type\09\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"@%s\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@flag_inhibit_size_directive = external dso_local local_unnamed_addr global i32, align 4
@.str.65 = private unnamed_addr constant [8 x i8] c"\09.size\09\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c", .-\00", align 1
@in_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1997
@flag_syntax_only = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@.str.67 = private unnamed_addr constant [7 x i8] c"%s%lu\0A\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"\09.zero\09\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"%s\22\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"\09.string\09\00", align 1
@.str.72 = private unnamed_addr constant [257 x i8] c"\01\01\01\01\01\01\01\01btn\01fralign 1
@.str.73 = private unnamed_addr constant [6 x i8] c"\5C%03o\00", align 1
@.str.74 = private unnamed_addr constant [9 x i8] c"\09.ascii\09\00", align 1
@last_assemble_variable_decl = common dso_local local_unnamed_addr global %union.tree_node* null, align 8, !dbg !1963
@.str.75 = private unnamed_addr constant [34 x i8] c"storage size of %q+D isn%'t known\00", align 1
@.str.76 = private unnamed_addr constant [35 x i8] c"size of variable %q+D is too large\00", align 1
@pending_assemble_externals = internal global %union.tree_node* null, align 8, !dbg !2013
@.str.77 = private unnamed_addr constant [5 x i8] c"weak\00", align 1
@weak_decls = internal global %union.tree_node* null, align 8, !dbg !2015
@cgraph_global_info_ready = external dso_local local_unnamed_addr global i8, align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"%U%s\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"LF\00", align 1
@.str.80 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"\09.local\09\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"\09.comm\09\00", align 1
@.str.84 = private unnamed_addr constant [9 x i8] c",%lu,%u\0A\00", align 1
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@initial_trampoline = internal global %struct.rtx_def* null, align 8, !dbg !2017
@.str.85 = private unnamed_addr constant [7 x i8] c"LTRAMP\00", align 1
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@const_desc_htab = internal global %struct.htab* null, align 8, !dbg !2019
@shared_constant_pool = internal global %struct.rtx_constant_pool* null, align 8, !dbg !2009
@.str.86 = private unnamed_addr constant [3 x i8] c"LC\00", align 1
@.str.87 = private unnamed_addr constant [61 x i8] c"initializer for integer/fixed-point value is too complicated\00", align 1
@.str.88 = private unnamed_addr constant [58 x i8] c"initializer for floating value is not a floating constant\00", align 1
@.str.89 = private unnamed_addr constant [49 x i8] c"weak declaration of %q+D must precede definition\00", align 1
@.str.90 = private unnamed_addr constant [73 x i8] c"weak declaration of %q+D after first use results in unspecified behavior\00", align 1
@.str.91 = private unnamed_addr constant [40 x i8] c"weak declaration of %q+D must be public\00", align 1
@weakref_targets = internal global %union.tree_node* null, align 8, !dbg !2021
@alias_pairs = common dso_local global %struct.VEC_alias_pair_gc* null, align 8, !dbg !2023
@.str.92 = private unnamed_addr constant [8 x i8] c"weakref\00", align 1
@.str.93 = private unnamed_addr constant [37 x i8] c"%q+D aliased to undefined symbol %qE\00", align 1
@.str.94 = private unnamed_addr constant [36 x i8] c"%q+D aliased to external symbol %qE\00", align 1
@.str.95 = private unnamed_addr constant [39 x i8] c"weakref %q+D ultimately targets itself\00", align 1
@.str.96 = private unnamed_addr constant [38 x i8] c"weakref %q+D must have static linkage\00", align 1
@default_assemble_visibility.visibility_types = internal unnamed_addr constant [4 x i8*] [i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0)], align 16, !dbg !1788
@.str.97 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"\09.%s\09\00", align 1
@object_block_htab = internal global %struct.htab* null, align 8, !dbg !2005
@const_alias_set = internal unnamed_addr global i32 0, align 4, !dbg !1967
@.str.101 = private unnamed_addr constant [7 x i8] c"\09.text\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"\09.data\00", align 1
@data_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1971
@.str.103 = private unnamed_addr constant [18 x i8] c"\09.section\09.rodata\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"\09.bss\00", align 1
@bss_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1981
@tls_comm_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1985
@lcomm_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1989
@comm_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1987
@bss_noswitch_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1991
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_tls_default = external dso_local local_unnamed_addr global i32, align 4
@.str.105 = private unnamed_addr constant [5 x i8] c".bss\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c".bss.\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c".gnu.linkonce.b.\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c".sbss\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c".sbss.\00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c".gnu.linkonce.sb.\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c".tdata\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c".tdata.\00", align 1
@.str.113 = private unnamed_addr constant [18 x i8] c".gnu.linkonce.td.\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c".tbss\00", align 1
@.str.115 = private unnamed_addr constant [7 x i8] c".tbss.\00", align 1
@.str.116 = private unnamed_addr constant [18 x i8] c".gnu.linkonce.tb.\00", align 1
@.str.117 = private unnamed_addr constant [12 x i8] c".init_array\00", align 1
@.str.118 = private unnamed_addr constant [12 x i8] c".fini_array\00", align 1
@.str.119 = private unnamed_addr constant [15 x i8] c".preinit_array\00", align 1
@.str.120 = private unnamed_addr constant [14 x i8] c"\09.section\09%s\0A\00", align 1
@.str.121 = private unnamed_addr constant [18 x i8] c"\09.section\09%s,\22%s\22\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"nobits\00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"progbits\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c",@%s\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.126 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c",%%%s\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str.129 = private unnamed_addr constant [11 x i8] c",%s,comdat\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"\09.section\09%s,\22%s\22\0A\00", align 1
@.str.131 = private unnamed_addr constant [15 x i8] c"\09.linkonce %s\0A\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"same_size\00", align 1
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@emutls_object_type = internal global %union.tree_node* null, align 8, !dbg !2011
@flag_zero_initialized_in_bss = external dso_local local_unnamed_addr global i32, align 4
@.str.134 = private unnamed_addr constant [8 x i8] c".sdata2\00", align 1
@.str.135 = private unnamed_addr constant [10 x i8] c".data.rel\00", align 1
@.str.136 = private unnamed_addr constant [16 x i8] c".data.rel.local\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c".data.rel.ro\00", align 1
@.str.138 = private unnamed_addr constant [19 x i8] c".data.rel.ro.local\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c".sdata\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c".data\00", align 1
@.str.156 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.157 = private unnamed_addr constant [2 x i8] c".\00", align 1
@libiberty_concat_ptr = external dso_local local_unnamed_addr global i8*, align 8
@.str.158 = private unnamed_addr constant [9 x i8] c"*. + %ld\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"\09.set\09\00", align 1
@.str.160 = private unnamed_addr constant [2 x i8] c",\00", align 1
@flag_whole_program = external dso_local local_unnamed_addr global i32, align 4
@.str.161 = private unnamed_addr constant [8 x i8] c".globl \00", align 1
@flag_verbose_asm = external dso_local local_unnamed_addr global i32, align 4
@flag_debug_asm = external dso_local local_unnamed_addr global i32, align 4
@flag_dump_rtl_in_asm = external dso_local local_unnamed_addr global i32, align 4
@.str.162 = private unnamed_addr constant [9 x i8] c"#NO_APP\0A\00", align 1
@main_input_filename = external dso_local local_unnamed_addr global i8*, align 8
@trampolines_created = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2025
@.str.163 = private unnamed_addr constant [16 x i8] c".note.GNU-stack\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@.str.165 = private unnamed_addr constant [8 x i8] c"LANCHOR\00", align 1
@anchor_labelno = internal global i32 0, align 4, !dbg !2007
@elf_record_gcc_switches.buffer = internal global [1024 x i8] zeroinitializer, align 16, !dbg !1799
@elf_record_gcc_switches.previous_name_held_back = internal unnamed_addr global i1 false, align 1, !dbg !2027
@.str.166 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@elf_record_gcc_switches.started = internal unnamed_addr global i1 false, align 1, !dbg !2028
@gt_ggc_r_gt_varasm_h = dso_local local_unnamed_addr constant [13 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%union.tree_node** @weakref_targets to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @const_desc_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P24constant_descriptor_tree4htab, void (i8*)* @gt_pch_n_P24constant_descriptor_tree4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.rtx_def** @initial_trampoline to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_def, void (i8*)* @gt_pch_nx_rtx_def }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @weak_decls to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @pending_assemble_externals to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%union.tree_node** @emutls_object_type to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_lang_tree_node, void (i8*)* @gt_pch_nx_lang_tree_node }, %struct.ggc_root_tab { i8* bitcast (%struct.rtx_constant_pool** @shared_constant_pool to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_rtx_constant_pool, void (i8*)* @gt_pch_nx_rtx_constant_pool }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @object_block_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P12object_block4htab, void (i8*)* @gt_pch_n_P12object_block4htab }, %struct.ggc_root_tab { i8* bitcast (%struct.htab** @section_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P7section4htab, void (i8*)* @gt_pch_n_P7section4htab }, %struct.ggc_root_tab { i8* bitcast (%union.section** @unnamed_sections to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_section, void (i8*)* @gt_pch_nx_section }, %struct.ggc_root_tab { i8* bitcast (i8** @weak_global_object_name to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_S, void (i8*)* @gt_pch_n_S }, %struct.ggc_root_tab { i8* bitcast (i8** @first_global_object_name to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_S, void (i8*)* @gt_pch_n_S }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1917
@gt_ggc_rc_gt_varasm_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_cache_tab] [%struct.ggc_cache_tab { %struct.htab** @emutls_htab, i64 1, i64 8, void (i8*)* @gt_ggc_mx_tree_map, void (i8*)* @gt_pch_nx_tree_map, i32 (i8*)* @tree_map_base_marked_p }, %struct.ggc_cache_tab zeroinitializer], align 16, !dbg !1933
@gt_pch_rc_gt_varasm_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.htab** @emutls_htab to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_m_P8tree_map4htab, void (i8*)* @gt_pch_n_P8tree_map4htab }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1949
@gt_pch_rs_gt_varasm_h = dso_local local_unnamed_addr constant [3 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (i32* @anchor_labelno to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab { i8* bitcast (i32* @const_labelno to i8*), i64 1, i64 4, void (i8*)* null, void (i8*)* null }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !1952
@size_directive_output = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !1961
@sdata_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1975
@ctors_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1977
@dtors_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1979
@sbss_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1983
@exception_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1993
@eh_frame_section = common dso_local local_unnamed_addr global %union.section* null, align 8, !dbg !1995
@.str.167 = private unnamed_addr constant [12 x i8] c"__emutls_v.\00", align 1
@.str.168 = private unnamed_addr constant [16 x i8] c"__emutls_object\00", align 1
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@.str.169 = private unnamed_addr constant [10 x i8] c"_unlikely\00", align 1
@flag_section_anchors = external dso_local local_unnamed_addr global i32, align 4
@.str.170 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@.str.171 = private unnamed_addr constant [12 x i8] c"__emutls_t.\00", align 1
@.str.172 = private unnamed_addr constant [74 x i8] c"requested alignment for %q+D is greater than implemented alignment of %wu\00", align 1
@.str.173 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c", %ld\0A\00", align 1
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.175 = private unnamed_addr constant [8 x i8] c"%s %s:\0A\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@.str.177 = private unnamed_addr constant [37 x i8] c"invalid initial value for member %qE\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"\09.weak\09\00", align 1
@.str.179 = private unnamed_addr constant [11 x i8] c"\09.weakref\09\00", align 1
@.str.180 = private unnamed_addr constant [5 x i8] c"\09%s\09\00", align 1
@.str.181 = private unnamed_addr constant [12 x i8] c".tls_common\00", align 1
@.str.182 = private unnamed_addr constant [17 x i8] c".rodata.str%d.%d\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2033 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2046, metadata !DIExpression()), !dbg !2048
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2047, metadata !DIExpression()), !dbg !2048
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2049
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2050
  ret i32 %call, !dbg !2051
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2052 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2056
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2057
  ret i32 %call, !dbg !2058
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2059 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2113, metadata !DIExpression()), !dbg !2114
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2115
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2115
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2115
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2115
  %cmp = icmp uge i8* %0, %1, !dbg !2115
  %conv1 = zext i1 %cmp to i64, !dbg !2115
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2115
  %tobool = icmp eq i64 %expval, 0, !dbg !2115
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2115

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2115
  br label %cond.end, !dbg !2115

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2115
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2115
  %2 = load i8, i8* %0, align 1, !dbg !2115
  %conv3 = zext i8 %2 to i32, !dbg !2115
  br label %cond.end, !dbg !2115

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2115
  ret i32 %cond, !dbg !2116
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2117 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2119, metadata !DIExpression()), !dbg !2120
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2121
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2121
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2121
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2121
  %cmp = icmp uge i8* %0, %1, !dbg !2121
  %conv1 = zext i1 %cmp to i64, !dbg !2121
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2121
  %tobool = icmp eq i64 %expval, 0, !dbg !2121
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2121

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2121
  br label %cond.end, !dbg !2121

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2121
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2121
  %2 = load i8, i8* %0, align 1, !dbg !2121
  %conv3 = zext i8 %2 to i32, !dbg !2121
  br label %cond.end, !dbg !2121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2121
  ret i32 %cond, !dbg !2122
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2123 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2124
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2124
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2124
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2124
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2124
  %cmp = icmp uge i8* %1, %2, !dbg !2124
  %conv1 = zext i1 %cmp to i64, !dbg !2124
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2124
  %tobool = icmp eq i64 %expval, 0, !dbg !2124
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2124

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2124
  br label %cond.end, !dbg !2124

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2124
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2124
  %3 = load i8, i8* %1, align 1, !dbg !2124
  %conv3 = zext i8 %3 to i32, !dbg !2124
  br label %cond.end, !dbg !2124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2124
  ret i32 %cond, !dbg !2125
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2126 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2130, metadata !DIExpression()), !dbg !2131
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2132
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2133
  ret i32 %call, !dbg !2134
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2135 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2139, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2140, metadata !DIExpression()), !dbg !2141
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2142
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2142
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2142
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2142
  %cmp = icmp uge i8* %0, %1, !dbg !2142
  %conv1 = zext i1 %cmp to i64, !dbg !2142
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2142
  %tobool = icmp eq i64 %expval, 0, !dbg !2142
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2142

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2142
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2142
  br label %cond.end, !dbg !2142

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2142
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2142
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2142
  store i8 %conv2, i8* %0, align 1, !dbg !2142
  %conv6 = and i32 %__c, 255, !dbg !2142
  br label %cond.end, !dbg !2142

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2142
  ret i32 %cond, !dbg !2143
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2144 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2146, metadata !DIExpression()), !dbg !2148
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2147, metadata !DIExpression()), !dbg !2148
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2149
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2149
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2149
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2149
  %cmp = icmp uge i8* %0, %1, !dbg !2149
  %conv1 = zext i1 %cmp to i64, !dbg !2149
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2149
  %tobool = icmp eq i64 %expval, 0, !dbg !2149
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2149

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2149
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2149
  br label %cond.end, !dbg !2149

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2149
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2149
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2149
  store i8 %conv2, i8* %0, align 1, !dbg !2149
  %conv6 = and i32 %__c, 255, !dbg !2149
  br label %cond.end, !dbg !2149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2149
  ret i32 %cond, !dbg !2150
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2151 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2153, metadata !DIExpression()), !dbg !2154
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2155
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2155
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2155
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2155
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2155
  %cmp = icmp uge i8* %1, %2, !dbg !2155
  %conv1 = zext i1 %cmp to i64, !dbg !2155
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2155
  %tobool = icmp eq i64 %expval, 0, !dbg !2155
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2155

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2155
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2155
  br label %cond.end, !dbg !2155

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2155
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2155
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2155
  store i8 %conv4, i8* %1, align 1, !dbg !2155
  %conv6 = and i32 %__c, 255, !dbg !2155
  br label %cond.end, !dbg !2155

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2155
  ret i32 %cond, !dbg !2156
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2157 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2163, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2164, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2165, metadata !DIExpression()), !dbg !2166
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2167
  ret i64 %call, !dbg !2168
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2169 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2171, metadata !DIExpression()), !dbg !2172
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2173
  %0 = load i32, i32* %_flags, align 8, !dbg !2173
  %and = lshr i32 %0, 4, !dbg !2173
  %and.lobit = and i32 %and, 1, !dbg !2173
  ret i32 %and.lobit, !dbg !2174
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2175 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2177, metadata !DIExpression()), !dbg !2178
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2179
  %0 = load i32, i32* %_flags, align 8, !dbg !2179
  %and = lshr i32 %0, 5, !dbg !2179
  %and.lobit = and i32 %and, 1, !dbg !2179
  ret i32 %and.lobit, !dbg !2180
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2181 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2184, metadata !DIExpression()), !dbg !2185
  %__c.off = add i32 %__c, 128, !dbg !2186
  %0 = icmp ult i32 %__c.off, 384, !dbg !2186
  br i1 %0, label %cond.true, label %cond.end, !dbg !2186

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2187
  %1 = load i32*, i32** %call, align 8, !dbg !2188
  %idxprom = sext i32 %__c to i64, !dbg !2189
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2189
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2189
  br label %cond.end, !dbg !2190

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2190
  ret i32 %cond, !dbg !2191
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2192 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2194, metadata !DIExpression()), !dbg !2195
  %__c.off = add i32 %__c, 128, !dbg !2196
  %0 = icmp ult i32 %__c.off, 384, !dbg !2196
  br i1 %0, label %cond.true, label %cond.end, !dbg !2196

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2197
  %1 = load i32*, i32** %call, align 8, !dbg !2198
  %idxprom = sext i32 %__c to i64, !dbg !2199
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2199
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2199
  br label %cond.end, !dbg !2200

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2200
  ret i32 %cond, !dbg !2201
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2202 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2205, metadata !DIExpression()), !dbg !2206
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2207
  %conv = trunc i64 %call to i32, !dbg !2208
  ret i32 %conv, !dbg !2209
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2210 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2214, metadata !DIExpression()), !dbg !2215
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2216
  ret i64 %call, !dbg !2217
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2218 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2223, metadata !DIExpression()), !dbg !2224
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2225
  ret i64 %call, !dbg !2226
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2227 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2233, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2234, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2235, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2236, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2237, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 0, metadata !2238, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2239, metadata !DIExpression()), !dbg !2243
  br label %while.cond, !dbg !2244

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2245
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2239, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2238, metadata !DIExpression()), !dbg !2243
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2246
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2244

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2247
  %div = lshr i64 %add, 1, !dbg !2249
  call void @llvm.dbg.value(metadata i64 %div, metadata !2240, metadata !DIExpression()), !dbg !2243
  %mul = mul i64 %div, %__size, !dbg !2250
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2251
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2241, metadata !DIExpression()), !dbg !2243
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2252
  call void @llvm.dbg.value(metadata i32 %call, metadata !2242, metadata !DIExpression()), !dbg !2243
  %cmp1 = icmp slt i32 %call, 0, !dbg !2253
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2255

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2256
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2258

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2259
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2238, metadata !DIExpression()), !dbg !2243
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2243
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2239, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2238, metadata !DIExpression()), !dbg !2243
  br label %while.cond, !dbg !2244, !llvm.loop !2260

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2243
  ret i8* %retval.0, !dbg !2262
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2263 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2269, metadata !DIExpression()), !dbg !2270
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2271
  ret double %call, !dbg !2272
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2273 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2282, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2283, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.value(metadata i32 %base, metadata !2284, metadata !DIExpression()), !dbg !2285
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2286
  ret i64 %call, !dbg !2287
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2288 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2294, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2295, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.value(metadata i32 %base, metadata !2296, metadata !DIExpression()), !dbg !2297
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2298
  ret i64 %call, !dbg !2299
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2300 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2311, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2312, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.value(metadata i32 %base, metadata !2313, metadata !DIExpression()), !dbg !2314
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2315
  ret i64 %call, !dbg !2316
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2317 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2321, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2322, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.value(metadata i32 %base, metadata !2323, metadata !DIExpression()), !dbg !2324
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2325
  ret i64 %call, !dbg !2326
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2327 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2367, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2368, metadata !DIExpression()), !dbg !2369
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2370
  ret i32 %call, !dbg !2371
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2372 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2374, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2375, metadata !DIExpression()), !dbg !2376
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2377
  ret i32 %call, !dbg !2378
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2383, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2386
  ret i32 %call, !dbg !2387
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2392, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2393, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2394, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2395, metadata !DIExpression()), !dbg !2396
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2397
  ret i32 %call, !dbg !2398
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2399 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2403, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2404, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2405, metadata !DIExpression()), !dbg !2406
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2405, metadata !DIExpression(DW_OP_deref)), !dbg !2406
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2407
  ret i32 %call, !dbg !2408
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2409 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2413, metadata !DIExpression()), !dbg !2417
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2414, metadata !DIExpression()), !dbg !2417
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2415, metadata !DIExpression()), !dbg !2417
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2416, metadata !DIExpression()), !dbg !2417
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2416, metadata !DIExpression(DW_OP_deref)), !dbg !2417
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2418
  ret i32 %call, !dbg !2419
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2420 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2444, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2445, metadata !DIExpression()), !dbg !2446
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2447
  ret i32 %call, !dbg !2448
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2449 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2451, metadata !DIExpression()), !dbg !2453
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2452, metadata !DIExpression()), !dbg !2453
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2454
  ret i32 %call, !dbg !2455
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2456 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2460, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2461, metadata !DIExpression()), !dbg !2462
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2463
  ret i32 %call, !dbg !2464
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2465 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2469, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2470, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2471, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2472, metadata !DIExpression()), !dbg !2473
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2474
  ret i32 %call, !dbg !2475
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @default_emutls_var_fields(%union.tree_node* %type, %union.tree_node** %name) local_unnamed_addr #5 !dbg !2476 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !2480, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata %union.tree_node** %name, metadata !2481, metadata !DIExpression()), !dbg !2485
  %call = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2486
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !2486
  %call1 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 31, %union.tree_node* %call, %union.tree_node* %0) #6, !dbg !2486
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2483, metadata !DIExpression()), !dbg !2485
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2487
  store %union.tree_node* %type, %union.tree_node** %context, align 8, !dbg !2488
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2484, metadata !DIExpression()), !dbg !2485
  %call2 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2489
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !2489
  %call3 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 31, %union.tree_node* %call2, %union.tree_node* %1) #6, !dbg !2489
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2483, metadata !DIExpression()), !dbg !2485
  %context5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2490
  store %union.tree_node* %type, %union.tree_node** %context5, align 8, !dbg !2491
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2492
  store %union.tree_node* %call1, %union.tree_node** %chain, align 8, !dbg !2493
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !2484, metadata !DIExpression()), !dbg !2485
  %2 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !2494
  %3 = load i32, i32* @word_mode, align 4, !dbg !2495
  %call6 = tail call %union.tree_node* %2(i32 %3, i32 1) #6, !dbg !2496
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2482, metadata !DIExpression()), !dbg !2485
  %call7 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2497
  %call8 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 31, %union.tree_node* %call7, %union.tree_node* %call6) #6, !dbg !2497
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !2483, metadata !DIExpression()), !dbg !2485
  %context10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2498
  store %union.tree_node* %type, %union.tree_node** %context10, align 8, !dbg !2499
  %chain12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2500
  store %union.tree_node* %call3, %union.tree_node** %chain12, align 8, !dbg !2501
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !2484, metadata !DIExpression()), !dbg !2485
  %call13 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2502
  %call14 = tail call %union.tree_node* @build_decl_stat(i32 0, i32 31, %union.tree_node* %call13, %union.tree_node* %call6) #6, !dbg !2502
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !2483, metadata !DIExpression()), !dbg !2485
  %context16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2503
  store %union.tree_node* %type, %union.tree_node** %context16, align 8, !dbg !2504
  %chain18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2505
  store %union.tree_node* %call8, %union.tree_node** %chain18, align 8, !dbg !2506
  ret %union.tree_node* %call14, !dbg !2507
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @emutls_decl(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !2508 {
entry:
  %in = alloca %struct.tree_map, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2512, metadata !DIExpression()), !dbg !2518
  %0 = bitcast %struct.tree_map* %in to i8*, !dbg !2519
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2519
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !2520
  %tobool = icmp ne i8 %1, 0, !dbg !2522
  %cmp = icmp eq %union.tree_node* %decl, null, !dbg !2523
  %or.cond = or i1 %tobool, %cmp, !dbg !2524
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2525
  %cmp3 = icmp eq %union.tree_node* %2, %decl, !dbg !2526
  %or.cond1 = or i1 %or.cond, %cmp3, !dbg !2524
  br i1 %or.cond1, label %cleanup, label %lor.lhs.false5, !dbg !2524

lor.lhs.false5:                                   ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2527
  %bf.load = load i64, i64* %3, align 8, !dbg !2527
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !2528
  %cmp6 = icmp eq i64 %bf.cast2, 32, !dbg !2528
  br i1 %cmp6, label %lor.lhs.false8, label %cleanup, !dbg !2529

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !2530
  %4 = bitcast i24* %tls_model to i32*, !dbg !2530
  %bf.load9 = load i32, i32* %4, align 8, !dbg !2530
  %bf.clear10 = and i32 %bf.load9, 49152, !dbg !2530
  %cmp11 = icmp eq i32 %bf.clear10, 0, !dbg !2530
  br i1 %cmp11, label %cleanup, label %if.end, !dbg !2531

if.end:                                           ; preds = %lor.lhs.false8
  %5 = load %struct.htab*, %struct.htab** @emutls_htab, align 8, !dbg !2532
  %tobool13 = icmp eq %struct.htab* %5, null, !dbg !2532
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !2534

if.then14:                                        ; preds = %if.end
  %call = tail call %struct.htab* @htab_create_alloc(i64 512, i32 (i8*)* nonnull @tree_map_hash, i32 (i8*, i8*)* nonnull @tree_map_base_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !2535
  store %struct.htab* %call, %struct.htab** @emutls_htab, align 8, !dbg !2536
  br label %if.end15, !dbg !2537

if.end15:                                         ; preds = %if.end, %if.then14
  %call16 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !2538
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !2513, metadata !DIExpression()), !dbg !2518
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2539
  %str = bitcast i32* %id to i8**, !dbg !2539
  %6 = load i8*, i8** %str, align 8, !dbg !2539
  %call17 = tail call i32 @htab_hash_string(i8* %6) #6, !dbg !2540
  %hash = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 1, !dbg !2541
  store i32 %call17, i32* %hash, align 8, !dbg !2542
  %from = getelementptr inbounds %struct.tree_map, %struct.tree_map* %in, i64 0, i32 0, i32 0, !dbg !2543
  store %union.tree_node* %decl, %union.tree_node** %from, align 8, !dbg !2544
  %7 = load %struct.htab*, %struct.htab** @emutls_htab, align 8, !dbg !2545
  %call20 = call i8** @htab_find_slot_with_hash(%struct.htab* %7, i8* nonnull %0, i32 %call17, i32 1) #6, !dbg !2546
  call void @llvm.dbg.value(metadata i8** %call20, metadata !2517, metadata !DIExpression()), !dbg !2518
  %8 = bitcast i8** %call20 to %struct.tree_map**, !dbg !2547
  %9 = load %struct.tree_map*, %struct.tree_map** %8, align 8, !dbg !2547
  call void @llvm.dbg.value(metadata %struct.tree_map* %9, metadata !2515, metadata !DIExpression()), !dbg !2518
  %cmp21 = icmp eq %struct.tree_map* %9, null, !dbg !2548
  br i1 %cmp21, label %if.else, label %if.then23, !dbg !2550

if.then23:                                        ; preds = %if.end15
  %to24 = getelementptr inbounds %struct.tree_map, %struct.tree_map* %9, i64 0, i32 2, !dbg !2551
  %10 = load %union.tree_node*, %union.tree_node** %to24, align 8, !dbg !2551
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !2514, metadata !DIExpression()), !dbg !2518
  br label %if.end67, !dbg !2552

if.else:                                          ; preds = %if.end15
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2553
  %11 = load i32, i32* %locus, align 8, !dbg !2553
  %call25 = call fastcc %union.tree_node* @get_emutls_object_name(%union.tree_node* %call16) #8, !dbg !2553
  %call26 = call fastcc %union.tree_node* @get_emutls_object_type() #8, !dbg !2553
  %call27 = call %union.tree_node* @build_decl_stat(i32 %11, i32 32, %union.tree_node* %call25, %union.tree_node* %call26) #6, !dbg !2553
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !2514, metadata !DIExpression()), !dbg !2518
  %call28 = call i8* @ggc_alloc_stat(i64 24) #6, !dbg !2555
  call void @llvm.dbg.value(metadata i8* %call28, metadata !2515, metadata !DIExpression()), !dbg !2518
  %12 = load i32, i32* %hash, align 8, !dbg !2556
  %hash30 = getelementptr inbounds i8, i8* %call28, i64 8, !dbg !2557
  %13 = bitcast i8* %hash30 to i32*, !dbg !2557
  store i32 %12, i32* %13, align 8, !dbg !2558
  %from32 = bitcast i8* %call28 to %union.tree_node**, !dbg !2559
  store %union.tree_node* %decl, %union.tree_node** %from32, align 8, !dbg !2560
  %to33 = getelementptr inbounds i8, i8* %call28, i64 16, !dbg !2561
  %14 = bitcast i8* %to33 to %union.tree_node**, !dbg !2561
  store %union.tree_node* %call27, %union.tree_node** %14, align 8, !dbg !2562
  store i8* %call28, i8** %call20, align 8, !dbg !2563
  %tls_model35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !2564
  %15 = bitcast i24* %tls_model35 to i32*, !dbg !2564
  %bf.load36 = load i32, i32* %15, align 8, !dbg !2565
  %bf.clear37 = and i32 %bf.load36, -57345, !dbg !2565
  %bf.set = or i32 %bf.clear37, 8192, !dbg !2565
  store i32 %bf.set, i32* %15, align 8, !dbg !2565
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2566
  %16 = bitcast i40* %artificial_flag to i64*, !dbg !2566
  %bf.load38 = load i64, i64* %16, align 8, !dbg !2567
  %bf.set44 = or i64 %bf.load38, 5120, !dbg !2568
  store i64 %bf.set44, i64* %16, align 8, !dbg !2568
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2569
  %bf.load46 = load i64, i64* %17, align 8, !dbg !2570
  %bf.clear47 = and i64 %bf.load46, -1048577, !dbg !2570
  store i64 %bf.clear47, i64* %17, align 8, !dbg !2570
  %name49 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !2571
  %18 = bitcast %union.tree_node** %name49 to i64*, !dbg !2571
  %19 = load i64, i64* %18, align 8, !dbg !2571
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !2571
  %20 = bitcast %union.tree_node** %assembler_name to i64*, !dbg !2571
  store i64 %19, i64* %20, align 8, !dbg !2571
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !2572
  %21 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !2572
  %cmp52 = icmp eq %union.tree_node* %21, null, !dbg !2572
  br i1 %cmp52, label %if.end56, label %if.then54, !dbg !2574

if.then54:                                        ; preds = %if.else
  %call55 = call %union.tree_node* @decl_assembler_name(%union.tree_node* %call27) #6, !dbg !2575
  call void @make_decl_one_only(%union.tree_node* %call27, %union.tree_node* %call55) #8, !dbg !2576
  br label %if.end56, !dbg !2576

if.end56:                                         ; preds = %if.else, %if.then54
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2577
  %22 = bitcast %union.tree_node** %context to i64*, !dbg !2577
  %23 = load i64, i64* %22, align 8, !dbg !2577
  %context59 = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2578
  %24 = bitcast %union.tree_node** %context59 to i64*, !dbg !2579
  store i64 %23, i64* %24, align 8, !dbg !2579
  %25 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 8), align 8, !dbg !2580
  %tobool60 = icmp eq i8 %25, 0, !dbg !2582
  br i1 %tobool60, label %if.end67, label %if.then61, !dbg !2583

if.then61:                                        ; preds = %if.end56
  %bf.load63 = load i64, i64* %17, align 8, !dbg !2584
  %bf.set65 = or i64 %bf.load63, 4398046511104, !dbg !2584
  store i64 %bf.set65, i64* %17, align 8, !dbg !2584
  br label %if.end67, !dbg !2585

if.end67:                                         ; preds = %if.end56, %if.then61, %if.then23
  %to.0 = phi %union.tree_node* [ %10, %if.then23 ], [ %call27, %if.then61 ], [ %call27, %if.end56 ], !dbg !2586
  call void @llvm.dbg.value(metadata %union.tree_node* %to.0, metadata !2514, metadata !DIExpression()), !dbg !2518
  %bf.load69 = load i64, i64* %3, align 8, !dbg !2587
  %bf.cast72 = and i64 %bf.load69, 67108864, !dbg !2587
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %to.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2588
  %bf.load74 = load i64, i64* %26, align 8, !dbg !2589
  %bf.clear75 = and i64 %bf.load74, -67108865, !dbg !2589
  %bf.set76 = or i64 %bf.clear75, %bf.cast72, !dbg !2589
  store i64 %bf.set76, i64* %26, align 8, !dbg !2589
  %bf.load78 = load i64, i64* %3, align 8, !dbg !2590
  %bf.cast81 = and i64 %bf.load78, 16777216, !dbg !2590
  %bf.clear86 = and i64 %bf.set76, -16777217, !dbg !2591
  %bf.set87 = or i64 %bf.clear86, %bf.cast81, !dbg !2591
  store i64 %bf.set87, i64* %26, align 8, !dbg !2591
  %bf.load90 = load i64, i64* %3, align 8, !dbg !2592
  %bf.cast93 = and i64 %bf.load90, 134217728, !dbg !2592
  %bf.clear98 = and i64 %bf.set87, -134217729, !dbg !2593
  %bf.set99 = or i64 %bf.clear98, %bf.cast93, !dbg !2593
  store i64 %bf.set99, i64* %26, align 8, !dbg !2593
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2594
  %27 = bitcast i40* %decl_flag_1 to i64*, !dbg !2594
  %bf.load102 = load i64, i64* %27, align 8, !dbg !2594
  %bf.cast105 = and i64 %bf.load102, 33554432, !dbg !2594
  %decl_flag_1107 = getelementptr inbounds %union.tree_node, %union.tree_node* %to.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2595
  %28 = bitcast i40* %decl_flag_1107 to i64*, !dbg !2595
  %bf.load108 = load i64, i64* %28, align 8, !dbg !2596
  %bf.clear111 = and i64 %bf.load108, -33554433, !dbg !2596
  %bf.set112 = or i64 %bf.clear111, %bf.cast105, !dbg !2596
  store i64 %bf.set112, i64* %28, align 8, !dbg !2596
  %bf.load115 = load i32, i32* %4, align 8, !dbg !2597
  %bf.clear117 = and i32 %bf.load115, 8, !dbg !2597
  %common_flag119 = getelementptr inbounds %union.tree_node, %union.tree_node* %to.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !2598
  %29 = bitcast i24* %common_flag119 to i32*, !dbg !2598
  %bf.load120 = load i32, i32* %29, align 8, !dbg !2599
  %bf.clear123 = and i32 %bf.load120, -9, !dbg !2599
  %bf.set124 = or i32 %bf.clear123, %bf.clear117, !dbg !2599
  store i32 %bf.set124, i32* %29, align 8, !dbg !2599
  %bf.load126 = load i32, i32* %4, align 8, !dbg !2600
  %bf.clear128 = and i32 %bf.load126, 128, !dbg !2600
  %bf.clear134 = and i32 %bf.set124, -129, !dbg !2601
  %bf.set135 = or i32 %bf.clear134, %bf.clear128, !dbg !2601
  store i32 %bf.set135, i32* %29, align 8, !dbg !2601
  %bf.load137 = load i32, i32* %4, align 8, !dbg !2602
  %bf.clear139 = and i32 %bf.load137, 3072, !dbg !2602
  %bf.clear145 = and i32 %bf.set135, -3073, !dbg !2603
  %bf.set146 = or i32 %bf.clear145, %bf.clear139, !dbg !2603
  store i32 %bf.set146, i32* %29, align 8, !dbg !2603
  br label %cleanup, !dbg !2604

cleanup:                                          ; preds = %lor.lhs.false8, %lor.lhs.false5, %entry, %if.end67
  %retval.0 = phi %union.tree_node* [ %to.0, %if.end67 ], [ %decl, %lor.lhs.false8 ], [ %decl, %lor.lhs.false5 ], [ %decl, %entry ], !dbg !2518
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2605
  ret %union.tree_node* %retval.0, !dbg !2605
}

declare dso_local %struct.htab* @htab_create_alloc(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8* (i64, i64)*, void (i8*)*) local_unnamed_addr #2

declare dso_local i32 @tree_map_hash(i8*) #2

declare dso_local i32 @tree_map_base_eq(i8*, i8*) #2

declare dso_local i8* @ggc_calloc(i64, i64) #2

declare dso_local void @ggc_free(i8*) #2

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @htab_hash_string(i8*) local_unnamed_addr #2

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_emutls_object_name(%union.tree_node* %name) unnamed_addr #5 !dbg !2606 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !2608, metadata !DIExpression()), !dbg !2610
  %0 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 4), align 8, !dbg !2611
  %tobool = icmp eq i8* %0, null, !dbg !2612
  %cond = select i1 %tobool, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.167, i64 0, i64 0), i8* %0, !dbg !2612
  call void @llvm.dbg.value(metadata i8* %cond, metadata !2609, metadata !DIExpression()), !dbg !2610
  %call = tail call fastcc %union.tree_node* @prefix_name(i8* %cond, %union.tree_node* %name) #8, !dbg !2613
  ret %union.tree_node* %call, !dbg !2614
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_emutls_object_type() unnamed_addr #5 !dbg !2615 {
entry:
  %type_name = alloca %union.tree_node*, align 8
  %0 = bitcast %union.tree_node** %type_name to i8*, !dbg !2622
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2622
  %1 = load %union.tree_node*, %union.tree_node** @emutls_object_type, align 8, !dbg !2623
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !2619, metadata !DIExpression()), !dbg !2624
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !2625
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2627

if.end:                                           ; preds = %entry
  %2 = load %union.tree_node* (i32)*, %union.tree_node* (i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 0), align 8, !dbg !2628
  %call = tail call %union.tree_node* %2(i32 16) #6, !dbg !2629
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2619, metadata !DIExpression()), !dbg !2624
  store %union.tree_node* %call, %union.tree_node** @emutls_object_type, align 8, !dbg !2630
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2620, metadata !DIExpression()), !dbg !2624
  store %union.tree_node* null, %union.tree_node** %type_name, align 8, !dbg !2631
  %3 = load %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 6), align 8, !dbg !2632
  call void @llvm.dbg.value(metadata %union.tree_node** %type_name, metadata !2620, metadata !DIExpression(DW_OP_deref)), !dbg !2624
  %call1 = call %union.tree_node* %3(%union.tree_node* %call, %union.tree_node** nonnull %type_name) #6, !dbg !2633
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !2621, metadata !DIExpression()), !dbg !2624
  %4 = load %union.tree_node*, %union.tree_node** %type_name, align 8, !dbg !2634
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !2620, metadata !DIExpression()), !dbg !2624
  %tobool2 = icmp eq %union.tree_node* %4, null, !dbg !2634
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !2636

if.then3:                                         ; preds = %if.end
  %call4 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.168, i64 0, i64 0)) #6, !dbg !2637
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !2620, metadata !DIExpression()), !dbg !2624
  store %union.tree_node* %call4, %union.tree_node** %type_name, align 8, !dbg !2638
  br label %if.end5, !dbg !2639

if.end5:                                          ; preds = %if.end, %if.then3
  %5 = phi %union.tree_node* [ %4, %if.end ], [ %call4, %if.then3 ], !dbg !2640
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !2620, metadata !DIExpression()), !dbg !2624
  %call6 = call %union.tree_node* @build_decl_stat(i32 0, i32 35, %union.tree_node* %5, %union.tree_node* %call) #6, !dbg !2640
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2620, metadata !DIExpression()), !dbg !2624
  store %union.tree_node* %call6, %union.tree_node** %type_name, align 8, !dbg !2641
  %.cast = ptrtoint %union.tree_node* %call6 to i64, !dbg !2642
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !2643
  %7 = bitcast %union.tree_node** %6 to i64*, !dbg !2644
  store i64 %.cast, i64* %7, align 8, !dbg !2644
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2645
  %8 = bitcast i32* %values to %union.tree_node**, !dbg !2645
  store %union.tree_node* %call1, %union.tree_node** %8, align 8, !dbg !2646
  call void @layout_type(%union.tree_node* %call) #6, !dbg !2647
  br label %cleanup, !dbg !2648

cleanup:                                          ; preds = %entry, %if.end5
  %retval.0 = phi %union.tree_node* [ %call, %if.end5 ], [ %1, %entry ], !dbg !2624
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !2649
  ret %union.tree_node* %retval.0, !dbg !2649
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @make_decl_one_only(%union.tree_node* %decl, %union.tree_node* %comdat_group) local_unnamed_addr #5 !dbg !2650 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2654, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.value(metadata %union.tree_node* %comdat_group, metadata !2655, metadata !DIExpression()), !dbg !2656
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2657
  %bf.load = load i64, i64* %0, align 8, !dbg !2657
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2657
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !2657
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !2657

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 29, !dbg !2657
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !2657

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 5882, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2657
  %bf.load7.pre = load i64, i64* %0, align 8, !dbg !2658
  br label %cond.end, !dbg !2657

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %bf.load7 = phi i64 [ %bf.load, %entry ], [ %bf.load, %lor.lhs.false ], [ %bf.load7.pre, %cond.true ], !dbg !2658
  %bf.set = or i64 %bf.load7, 134217728, !dbg !2658
  store i64 %bf.set, i64* %0, align 8, !dbg !2658
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !2659
  %1 = bitcast i24* %weak_flag to i32*, !dbg !2659
  %bf.load9 = load i32, i32* %1, align 8, !dbg !2659
  %bf.set11 = or i32 %bf.load9, 128, !dbg !2659
  store i32 %bf.set11, i32* %1, align 8, !dbg !2659
  %comdat_group13 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !2662
  store %union.tree_node* %comdat_group, %union.tree_node** %comdat_group13, align 8, !dbg !2663
  ret void, !dbg !2664
}

; Function Attrs: nounwind uwtable
define dso_local void @emutls_finish() local_unnamed_addr #5 !dbg !2665 {
entry:
  %body = alloca %union.tree_node*, align 8
  %0 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 1), align 8, !dbg !2672
  %tobool = icmp eq i8* %0, null, !dbg !2673
  br i1 %tobool, label %if.end5, label %if.then, !dbg !2674

if.then:                                          ; preds = %entry
  %1 = bitcast %union.tree_node** %body to i8*, !dbg !2675
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2675
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2669, metadata !DIExpression()), !dbg !2676
  store %union.tree_node* null, %union.tree_node** %body, align 8, !dbg !2677
  %2 = load %struct.htab*, %struct.htab** @emutls_htab, align 8, !dbg !2678
  %cmp = icmp eq %struct.htab* %2, null, !dbg !2680
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2681

if.end:                                           ; preds = %if.then
  call void @htab_traverse_noresize(%struct.htab* nonnull %2, i32 (i8**, i8*)* nonnull @emutls_common_1, i8* nonnull %1) #6, !dbg !2682
  %3 = load %union.tree_node*, %union.tree_node** %body, align 8, !dbg !2683
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2669, metadata !DIExpression()), !dbg !2676
  %cmp2 = icmp eq %union.tree_node* %3, null, !dbg !2685
  br i1 %cmp2, label %cleanup, label %if.end4, !dbg !2686

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !2669, metadata !DIExpression()), !dbg !2676
  call void @cgraph_build_static_cdtor(i8 signext 73, %union.tree_node* nonnull %3, i32 65535) #6, !dbg !2687
  br label %cleanup, !dbg !2688

cleanup:                                          ; preds = %if.end, %if.then, %if.end4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2688
  ret void

if.end5:                                          ; preds = %entry
  ret void, !dbg !2689
}

declare dso_local void @htab_traverse_noresize(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @emutls_common_1(i8** %loc, i8* %xstmts) #5 !dbg !2690 {
entry:
  call void @llvm.dbg.value(metadata i8** %loc, metadata !2694, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.value(metadata i8* %xstmts, metadata !2695, metadata !DIExpression()), !dbg !2701
  %0 = bitcast i8** %loc to %struct.tree_map**, !dbg !2702
  %1 = load %struct.tree_map*, %struct.tree_map** %0, align 8, !dbg !2702
  call void @llvm.dbg.value(metadata %struct.tree_map* %1, metadata !2696, metadata !DIExpression()), !dbg !2701
  %2 = bitcast i8* %xstmts to %union.tree_node**, !dbg !2703
  call void @llvm.dbg.value(metadata %union.tree_node** %2, metadata !2699, metadata !DIExpression()), !dbg !2701
  %3 = bitcast %struct.tree_map* %1 to %struct.tree_decl_with_vis**, !dbg !2704
  %4 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** %3, align 8, !dbg !2704
  %common_flag = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %4, i64 0, i32 4, !dbg !2704
  %5 = bitcast i24* %common_flag to i32*, !dbg !2704
  %bf.load = load i32, i32* %5, align 8, !dbg !2704
  %bf.clear = and i32 %bf.load, 8, !dbg !2704
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !2704
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !2706

lor.lhs.false:                                    ; preds = %entry
  %6 = bitcast %struct.tree_map* %1 to %struct.tree_decl_common**, !dbg !2707
  %initial = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %4, i64 0, i32 0, i32 0, i32 5, !dbg !2707
  %7 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !2707
  %tobool3 = icmp eq %union.tree_node* %7, null, !dbg !2707
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !2708

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !2709
  %cmp = icmp eq %union.tree_node* %7, %8, !dbg !2710
  br i1 %cmp, label %if.end, label %cleanup, !dbg !2711

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %9 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !2712
  %10 = load i32, i32* @word_mode, align 4, !dbg !2713
  %call = tail call %union.tree_node* %9(i32 %10, i32 1) #6, !dbg !2714
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !2700, metadata !DIExpression()), !dbg !2701
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !2715
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !2698, metadata !DIExpression()), !dbg !2701
  %call8 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %11, %union.tree_node* null) #6, !dbg !2716
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !2697, metadata !DIExpression()), !dbg !2701
  %12 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !2717
  %align = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %12, i64 0, i32 3, !dbg !2717
  %13 = load i32, i32* %align, align 8, !dbg !2717
  %div = lshr i32 %13, 3, !dbg !2717
  %conv = zext i32 %div to i64, !dbg !2717
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call, i64 %conv) #6, !dbg !2718
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !2698, metadata !DIExpression()), !dbg !2701
  %call13 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call12, %union.tree_node* %call8) #6, !dbg !2719
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !2697, metadata !DIExpression()), !dbg !2701
  %14 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !2720
  %size_unit = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %14, i64 0, i32 4, !dbg !2720
  %15 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !2720
  %call17 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call, %union.tree_node* %15) #6, !dbg !2720
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !2698, metadata !DIExpression()), !dbg !2701
  %call18 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call17, %union.tree_node* %call13) #6, !dbg !2721
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !2697, metadata !DIExpression()), !dbg !2701
  %to = getelementptr inbounds %struct.tree_map, %struct.tree_map* %1, i64 0, i32 2, !dbg !2722
  %16 = load %union.tree_node*, %union.tree_node** %to, align 8, !dbg !2722
  %call19 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %16) #6, !dbg !2722
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !2698, metadata !DIExpression()), !dbg !2701
  %call20 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call19, %union.tree_node* %call18) #6, !dbg !2723
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !2697, metadata !DIExpression()), !dbg !2701
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 549), align 8, !dbg !2724
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !2698, metadata !DIExpression()), !dbg !2701
  %call21 = tail call %union.tree_node* @build_function_call_expr(i32 0, %union.tree_node* %17, %union.tree_node* %call20) #6, !dbg !2725
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !2698, metadata !DIExpression()), !dbg !2701
  tail call void @append_to_statement_list(%union.tree_node* %call21, %union.tree_node** %2) #6, !dbg !2726
  br label %cleanup, !dbg !2727

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.end
  ret i32 1, !dbg !2728
}

declare dso_local void @cgraph_build_static_cdtor(i8 signext, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.section* @get_unnamed_section(i32 %flags, void (i8*)* %callback, i8* %data) local_unnamed_addr #5 !dbg !2729 {
entry:
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2733, metadata !DIExpression()), !dbg !2737
  call void @llvm.dbg.value(metadata void (i8*)* %callback, metadata !2734, metadata !DIExpression()), !dbg !2737
  call void @llvm.dbg.value(metadata i8* %data, metadata !2735, metadata !DIExpression()), !dbg !2737
  %call = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !2738
  %0 = bitcast i8* %call to %union.section*, !dbg !2738
  call void @llvm.dbg.value(metadata %union.section* %0, metadata !2736, metadata !DIExpression()), !dbg !2737
  %flags1 = bitcast i8* %call to i32*, !dbg !2739
  store i32 %flags, i32* %flags1, align 8, !dbg !2740
  %callback3 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2741
  %1 = bitcast i8* %callback3 to void (i8*)**, !dbg !2741
  store void (i8*)* %callback, void (i8*)** %1, align 8, !dbg !2742
  %data5 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2743
  %2 = bitcast i8* %data5 to i8**, !dbg !2743
  store i8* %data, i8** %2, align 8, !dbg !2744
  %3 = load i64, i64* bitcast (%union.section** @unnamed_sections to i64*), align 8, !dbg !2745
  %next = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2746
  %4 = bitcast i8* %next to i64*, !dbg !2747
  store i64 %3, i64* %4, align 8, !dbg !2747
  store i8* %call, i8** bitcast (%union.section** @unnamed_sections to i8**), align 8, !dbg !2748
  ret %union.section* %0, !dbg !2749
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @get_section(i8* %name, i32 %flags, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !2750 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !2754, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata i32 %flags, metadata !2755, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2756, metadata !DIExpression()), !dbg !2759
  %0 = load %struct.htab*, %struct.htab** @section_htab, align 8, !dbg !2760
  %call = tail call i32 @htab_hash_string(i8* %name) #6, !dbg !2761
  %call1 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %0, i8* %name, i32 %call, i32 1) #6, !dbg !2762
  %1 = bitcast i8** %call1 to %union.section**, !dbg !2763
  call void @llvm.dbg.value(metadata %union.section** %1, metadata !2758, metadata !DIExpression()), !dbg !2759
  %or = or i32 %flags, 2097152, !dbg !2764
  call void @llvm.dbg.value(metadata i32 %or, metadata !2755, metadata !DIExpression()), !dbg !2759
  %2 = load %union.section*, %union.section** %1, align 8, !dbg !2765
  %cmp = icmp eq %union.section* %2, null, !dbg !2767
  br i1 %cmp, label %if.then, label %if.else, !dbg !2768

if.then:                                          ; preds = %entry
  %call2 = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !2769
  %3 = bitcast i8* %call2 to %union.section*, !dbg !2769
  call void @llvm.dbg.value(metadata %union.section* %3, metadata !2757, metadata !DIExpression()), !dbg !2759
  %flags3 = bitcast i8* %call2 to i32*, !dbg !2771
  store i32 %or, i32* %flags3, align 8, !dbg !2772
  %call4 = tail call i8* @ggc_alloc_string(i8* %name, i32 -1) #6, !dbg !2773
  %name6 = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !2774
  %4 = bitcast i8* %name6 to i8**, !dbg !2774
  store i8* %call4, i8** %4, align 8, !dbg !2775
  %decl8 = getelementptr inbounds i8, i8* %call2, i64 16, !dbg !2776
  %5 = bitcast i8* %decl8 to %union.tree_node**, !dbg !2776
  store %union.tree_node* %decl, %union.tree_node** %5, align 8, !dbg !2777
  store i8* %call2, i8** %call1, align 8, !dbg !2778
  br label %if.end23, !dbg !2779

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.section* %2, metadata !2757, metadata !DIExpression()), !dbg !2759
  %flags10 = getelementptr inbounds %union.section, %union.section* %2, i64 0, i32 0, i32 0, i32 0, !dbg !2780
  %6 = load i32, i32* %flags10, align 8, !dbg !2780
  %and = and i32 %6, -1048577, !dbg !2783
  %cmp11 = icmp eq i32 %and, %or, !dbg !2784
  br i1 %cmp11, label %if.end23, label %land.lhs.true, !dbg !2785

land.lhs.true:                                    ; preds = %if.else
  %or14 = or i32 %6, %flags, !dbg !2786
  %and15 = and i32 %or14, 131072, !dbg !2787
  %cmp16 = icmp eq i32 %and15, 0, !dbg !2788
  br i1 %cmp16, label %if.then17, label %if.end23, !dbg !2789

if.then17:                                        ; preds = %land.lhs.true
  %cmp18 = icmp eq %union.tree_node* %decl, null, !dbg !2790
  br i1 %cmp18, label %if.then19, label %if.end, !dbg !2793

if.then19:                                        ; preds = %if.then17
  %decl21 = getelementptr inbounds %union.section, %union.section* %2, i64 0, i32 0, i32 2, !dbg !2794
  %7 = bitcast i8** %decl21 to %union.tree_node**, !dbg !2794
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !2794
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !2756, metadata !DIExpression()), !dbg !2759
  br label %if.end, !dbg !2795

if.end:                                           ; preds = %if.then19, %if.then17
  %decl.addr.0 = phi %union.tree_node* [ %8, %if.then19 ], [ %decl, %if.then17 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.0, metadata !2756, metadata !DIExpression()), !dbg !2759
  %tobool = icmp eq %union.tree_node* %decl.addr.0, null, !dbg !2796
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2796

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 579, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2796
  br label %cond.end, !dbg !2796

cond.end:                                         ; preds = %if.end, %cond.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), %union.tree_node* %decl.addr.0) #6, !dbg !2797
  br label %if.end23, !dbg !2798

if.end23:                                         ; preds = %if.else, %land.lhs.true, %cond.end, %if.then
  %sect.0 = phi %union.section* [ %3, %if.then ], [ %2, %cond.end ], [ %2, %land.lhs.true ], [ %2, %if.else ], !dbg !2799
  call void @llvm.dbg.value(metadata %union.section* %sect.0, metadata !2757, metadata !DIExpression()), !dbg !2759
  ret %union.section* %sect.0, !dbg !2800
}

declare dso_local i8* @ggc_alloc_string(i8*, i32) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.section* @unlikely_text_section() local_unnamed_addr #5 !dbg !2801 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2804
  %tobool = icmp eq %struct.function* %0, null, !dbg !2804
  br i1 %tobool, label %if.else, label %if.then, !dbg !2806

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2807
  %tobool1 = icmp eq i8* %1, null, !dbg !2810
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2811

if.then2:                                         ; preds = %if.then
  tail call fastcc void @initialize_cold_section_name() #8, !dbg !2812
  %.pre = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2813
  br label %if.end, !dbg !2812

if.end:                                           ; preds = %if.then, %if.then2
  %2 = phi i8* [ %1, %if.then ], [ %.pre, %if.then2 ], !dbg !2813
  %call = tail call %union.section* @get_named_section(%union.tree_node* null, i8* %2, i32 0) #8, !dbg !2814
  br label %return, !dbg !2815

if.else:                                          ; preds = %entry
  %call3 = tail call %union.section* @get_named_section(%union.tree_node* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i32 0) #8, !dbg !2816
  br label %return, !dbg !2817

return:                                           ; preds = %if.else, %if.end
  %retval.0 = phi %union.section* [ %call, %if.end ], [ %call3, %if.else ], !dbg !2818
  ret %union.section* %retval.0, !dbg !2819
}

; Function Attrs: nounwind uwtable
define internal fastcc void @initialize_cold_section_name() unnamed_addr #5 !dbg !2820 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2826
  %tobool = icmp ne %struct.function* %0, null, !dbg !2826
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2826
  %tobool1 = icmp ne %union.tree_node* %1, null, !dbg !2826
  %or.cond = and i1 %tobool, %tobool1, !dbg !2826
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !2826

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 657, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2826
  br label %cond.end, !dbg !2826

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2827
  %tobool2 = icmp eq i8* %2, null, !dbg !2829
  br i1 %tobool2, label %if.end, label %cleanup.cont, !dbg !2830

if.end:                                           ; preds = %cond.end
  %3 = load %struct.tree_decl_with_vis*, %struct.tree_decl_with_vis** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_with_vis**), align 8, !dbg !2831
  %section_name = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %3, i64 0, i32 2, !dbg !2831
  %4 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !2831
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !2825, metadata !DIExpression()), !dbg !2832
  %5 = load i32, i32* @flag_function_sections, align 4, !dbg !2833
  %tobool3 = icmp ne i32 %5, 0, !dbg !2833
  %tobool5 = icmp ne %union.tree_node* %4, null, !dbg !2835
  %or.cond1 = and i1 %tobool3, %tobool5, !dbg !2836
  br i1 %or.cond1, label %if.then6, label %if.else, !dbg !2836

if.then6:                                         ; preds = %if.end
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2837
  %7 = load i32, i32* %6, align 8, !dbg !2837
  %add = add nsw i32 %7, 1, !dbg !2837
  %conv = sext i32 %add to i64, !dbg !2837
  %8 = alloca i8, i64 %conv, align 16, !dbg !2837
  call void @llvm.dbg.value(metadata i8* %8, metadata !2823, metadata !DIExpression()), !dbg !2832
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2839
  %arraydecay = bitcast i32* %str to i8*, !dbg !2839
  %call = call i8* @memcpy(i8* nonnull %8, i8* nonnull %arraydecay, i64 %conv) #6, !dbg !2840
  %9 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !2841
  %call12 = call i8* %9(i8* nonnull %8) #6, !dbg !2842
  call void @llvm.dbg.value(metadata i8* %call12, metadata !2822, metadata !DIExpression()), !dbg !2832
  %call13 = call i64 (i8*, ...) @concat_length(i8* %call12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169, i64 0, i64 0), i8* null) #6, !dbg !2843
  %add14 = add i64 %call13, 1, !dbg !2843
  %10 = alloca i8, i64 %add14, align 16, !dbg !2843
  store i8* %10, i8** @libiberty_concat_ptr, align 8, !dbg !2843
  %call15 = call i8* (i8*, ...) @concat_copy2(i8* %call12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.169, i64 0, i64 0), i8* null) #6, !dbg !2843
  call void @llvm.dbg.value(metadata i8* %call15, metadata !2824, metadata !DIExpression()), !dbg !2832
  %call16 = call i8* @ggc_alloc_string(i8* %call15, i32 -1) #6, !dbg !2844
  store i8* %call16, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2845
  br label %cleanup.cont, !dbg !2846

if.else:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2847
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cond.end, %if.else, %if.then6
  ret void, !dbg !2848
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @get_named_section(%union.tree_node* %decl, i8* %name, i32 %reloc) local_unnamed_addr #5 !dbg !2849 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2853, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i8* %name, metadata !2854, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !2855, metadata !DIExpression()), !dbg !2857
  %tobool = icmp eq %union.tree_node* %decl, null, !dbg !2858
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !2858

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2858
  %bf.load = load i64, i64* %0, align 8, !dbg !2858
  %bf.cast = and i64 %bf.load, 65535, !dbg !2858
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !2858
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2858
  %cmp = icmp eq i32 %1, 3, !dbg !2858
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2858

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 725, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2858
  br label %cond.end, !dbg !2858

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %cmp1 = icmp eq i8* %name, null, !dbg !2859
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2861

if.then:                                          ; preds = %cond.end
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2862
  %2 = bitcast %union.tree_node** %section_name to %struct.tree_string**, !dbg !2862
  %3 = load %struct.tree_string*, %struct.tree_string** %2, align 8, !dbg !2862
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %3, i64 0, i32 2, i64 0, !dbg !2862
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !2854, metadata !DIExpression()), !dbg !2857
  br label %if.end, !dbg !2863

if.end:                                           ; preds = %if.then, %cond.end
  %name.addr.0 = phi i8* [ %arraydecay, %if.then ], [ %name, %cond.end ]
  call void @llvm.dbg.value(metadata i8* %name.addr.0, metadata !2854, metadata !DIExpression()), !dbg !2857
  %4 = load i32 (%union.tree_node*, i8*, i32)*, i32 (%union.tree_node*, i8*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 31), align 8, !dbg !2864
  %call = tail call i32 %4(%union.tree_node* %decl, i8* %name.addr.0, i32 %reloc) #6, !dbg !2865
  call void @llvm.dbg.value(metadata i32 %call, metadata !2856, metadata !DIExpression()), !dbg !2857
  %call2 = tail call %union.section* @get_section(i8* %name.addr.0, i32 %call, %union.tree_node* %decl) #8, !dbg !2866
  ret %union.section* %call2, !dbg !2867
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @unlikely_text_section_p(%union.section* %sect) local_unnamed_addr #5 !dbg !2868 {
entry:
  call void @llvm.dbg.value(metadata %union.section* %sect, metadata !2872, metadata !DIExpression()), !dbg !2874
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2875
  %tobool = icmp eq %struct.function* %0, null, !dbg !2875
  %1 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !2877
  %name.0 = select i1 %tobool, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8* %1, !dbg !2877
  call void @llvm.dbg.value(metadata i8* %name.0, metadata !2873, metadata !DIExpression()), !dbg !2874
  %tobool1 = icmp ne i8* %name.0, null, !dbg !2878
  %tobool2 = icmp ne %union.section* %sect, null, !dbg !2879
  %or.cond = and i1 %tobool1, %tobool2, !dbg !2880
  br i1 %or.cond, label %land.lhs.true3, label %land.end, !dbg !2880

land.lhs.true3:                                   ; preds = %entry
  %flags = getelementptr inbounds %union.section, %union.section* %sect, i64 0, i32 0, i32 0, i32 0, !dbg !2881
  %2 = load i32, i32* %flags, align 8, !dbg !2881
  %and = and i32 %2, 6291456, !dbg !2881
  %cmp = icmp eq i32 %and, 2097152, !dbg !2882
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2883

land.rhs:                                         ; preds = %land.lhs.true3
  %name4 = getelementptr inbounds %union.section, %union.section* %sect, i64 0, i32 0, i32 1, !dbg !2884
  %3 = bitcast void (i8*)** %name4 to i8**, !dbg !2884
  %4 = load i8*, i8** %3, align 8, !dbg !2884
  %call = tail call i32 @strcmp(i8* nonnull %name.0, i8* %4) #6, !dbg !2885
  %cmp5 = icmp eq i32 %call, 0, !dbg !2886
  %phitmp = zext i1 %cmp5 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true3, %entry
  %5 = phi i8 [ 0, %land.lhs.true3 ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %5, !dbg !2887
}

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @resolve_unique_section(%union.tree_node* %decl, i32 %reloc, i32 %flag_function_or_data_sections) local_unnamed_addr #5 !dbg !2888 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2892, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i32 %flag_function_or_data_sections, metadata !2894, metadata !DIExpression()), !dbg !2895
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2896
  %0 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !2896
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !2898
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2899

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !2900
  %tobool = icmp eq i8 %1, 0, !dbg !2901
  br i1 %tobool, label %if.end, label %land.lhs.true1, !dbg !2902

land.lhs.true1:                                   ; preds = %land.lhs.true
  %tobool2 = icmp eq i32 %flag_function_or_data_sections, 0, !dbg !2903
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !2904

lor.lhs.false:                                    ; preds = %land.lhs.true1
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !2905
  %2 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !2905
  %cmp4 = icmp eq %union.tree_node* %2, null, !dbg !2905
  br i1 %cmp4, label %if.end, label %if.then, !dbg !2906

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true1
  %3 = load void (%union.tree_node*, i32)*, void (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 23), align 8, !dbg !2907
  tail call void %3(%union.tree_node* %decl, i32 %reloc) #6, !dbg !2908
  br label %if.end, !dbg !2908

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true, %if.then, %entry
  ret void, !dbg !2909
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @function_section(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !2910 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2914, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.value(metadata i32 0, metadata !2915, metadata !DIExpression()), !dbg !2916
  %0 = load i8, i8* @first_function_block_is_cold, align 1, !dbg !2917
  %tobool = icmp eq i8 %0, 0, !dbg !2917
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !2915, metadata !DIExpression()), !dbg !2916
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2919

cond.true:                                        ; preds = %entry
  %call = tail call %union.section* @unlikely_text_section() #8, !dbg !2920
  br label %cond.end, !dbg !2919

cond.false:                                       ; preds = %entry
  %call2 = tail call fastcc %union.section* @hot_function_section(%union.tree_node* %decl) #8, !dbg !2921
  br label %cond.end, !dbg !2919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.section* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !2919
  ret %union.section* %cond, !dbg !2922
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.section* @hot_function_section(%union.tree_node* %decl) unnamed_addr #5 !dbg !2923 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2925, metadata !DIExpression()), !dbg !2926
  %cmp = icmp eq %union.tree_node* %decl, null, !dbg !2927
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !2929

land.lhs.true:                                    ; preds = %entry
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2930
  %0 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !2930
  %cmp1 = icmp eq %union.tree_node* %0, null, !dbg !2931
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !2932

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 110), align 1, !dbg !2933
  %tobool = icmp eq i8 %1, 0, !dbg !2934
  br i1 %tobool, label %if.else, label %if.then, !dbg !2935

if.then:                                          ; preds = %land.lhs.true2
  %call = tail call %union.section* @get_named_section(%union.tree_node* nonnull %decl, i8* null, i32 0) #8, !dbg !2936
  br label %return, !dbg !2937

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %2 = load %union.section*, %union.section** @text_section, align 8, !dbg !2938
  br label %return, !dbg !2939

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %union.section* [ %call, %if.then ], [ %2, %if.else ], !dbg !2940
  ret %union.section* %retval.0, !dbg !2941
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @current_function_section() local_unnamed_addr #5 !dbg !2942 {
entry:
  %0 = load i8, i8* @in_cold_section_p, align 1, !dbg !2943
  %tobool = icmp eq i8 %0, 0, !dbg !2943
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2943

cond.true:                                        ; preds = %entry
  %call = tail call %union.section* @unlikely_text_section() #8, !dbg !2944
  br label %cond.end, !dbg !2943

cond.false:                                       ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !2945
  %call1 = tail call fastcc %union.section* @hot_function_section(%union.tree_node* %1) #8, !dbg !2946
  br label %cond.end, !dbg !2943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.section* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !2943
  ret %union.section* %cond, !dbg !2947
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_function_rodata_section(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !2948 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !2950, metadata !DIExpression()), !dbg !2967
  %cmp = icmp eq %union.tree_node* %decl, null, !dbg !2968
  br i1 %cmp, label %if.end46, label %land.lhs.true, !dbg !2969

land.lhs.true:                                    ; preds = %entry
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !2970
  %0 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !2970
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !2970
  %1 = bitcast %union.tree_node* %0 to %struct.tree_string*, !dbg !2971
  br i1 %tobool, label %if.end46, label %if.then, !dbg !2971

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2972
  %2 = bitcast i32* %arraydecay to i8*, !dbg !2972
  call void @llvm.dbg.value(metadata i8* %2, metadata !2951, metadata !DIExpression()), !dbg !2973
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !2974
  %3 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !2974
  %cmp4 = icmp eq %union.tree_node* %3, null, !dbg !2974
  br i1 %cmp4, label %if.else, label %if.then5, !dbg !2975

if.then5:                                         ; preds = %if.then
  %add.ptr = getelementptr inbounds %struct.tree_string, %struct.tree_string* %1, i64 0, i32 2, i64 1, !dbg !2976
  %call = tail call i8* @strchr(i8* nonnull %add.ptr, i32 46) #6, !dbg !2977
  call void @llvm.dbg.value(metadata i8* %call, metadata !2954, metadata !DIExpression()), !dbg !2978
  %tobool6 = icmp eq i8* %call, null, !dbg !2979
  %spec.select = select i1 %tobool6, i8* %2, i8* %call, !dbg !2981
  call void @llvm.dbg.value(metadata i8* %spec.select, metadata !2954, metadata !DIExpression()), !dbg !2978
  %call8 = tail call i64 @strlen(i8* %spec.select) #6, !dbg !2982
  %add = add i64 %call8, 8, !dbg !2983
  call void @llvm.dbg.value(metadata i64 %add, metadata !2957, metadata !DIExpression()), !dbg !2978
  %4 = alloca i8, i64 %add, align 16, !dbg !2984
  call void @llvm.dbg.value(metadata i8* %4, metadata !2958, metadata !DIExpression()), !dbg !2978
  %call9 = call i8* @strcpy(i8* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !2985
  %call10 = call i8* @strcat(i8* nonnull %4, i8* %spec.select) #6, !dbg !2986
  %call11 = call %union.section* @get_section(i8* nonnull %4, i32 2048, %union.tree_node* nonnull %decl) #8, !dbg !2987
  br label %cleanup

if.else:                                          ; preds = %if.then
  br i1 true, label %if.else.if.else25_crit_edge, label %land.lhs.true15, !dbg !2988

if.else.if.else25_crit_edge:                      ; preds = %if.else
  %.pre = load i32, i32* @flag_function_sections, align 4, !dbg !2989
  %.pre1 = load i32, i32* @flag_data_sections, align 4, !dbg !2990
  %phitmp = icmp ne i32 %.pre, 0, !dbg !2988
  %phitmp2 = icmp ne i32 %.pre1, 0, !dbg !2988
  br label %if.else25, !dbg !2988

land.lhs.true15:                                  ; preds = %if.else
  br i1 undef, label %if.then18, label %land.lhs.true15.if.else25_crit_edge, !dbg !2991

land.lhs.true15.if.else25_crit_edge:              ; preds = %land.lhs.true15
  br label %if.else25, !dbg !2991

if.then18:                                        ; preds = %land.lhs.true15
  br label %cleanup

if.else25:                                        ; preds = %if.else.if.else25_crit_edge, %land.lhs.true15.if.else25_crit_edge
  %5 = phi i1 [ %phitmp2, %if.else.if.else25_crit_edge ], [ undef, %land.lhs.true15.if.else25_crit_edge ]
  %6 = phi i1 [ %phitmp, %if.else.if.else25_crit_edge ], [ undef, %land.lhs.true15.if.else25_crit_edge ]
  %or.cond = and i1 %6, %5, !dbg !2992
  br i1 %or.cond, label %land.lhs.true29, label %cleanup, !dbg !2992

land.lhs.true29:                                  ; preds = %if.else25
  %call30 = tail call i32 @strncmp(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #6, !dbg !2993
  %cmp31 = icmp eq i32 %call30, 0, !dbg !2994
  br i1 %cmp31, label %if.then32, label %cleanup, !dbg !2995

if.then32:                                        ; preds = %land.lhs.true29
  %call34 = tail call i64 @strlen(i8* nonnull %2) #6, !dbg !2996
  call void @llvm.dbg.value(metadata i64 %call34, metadata !2963, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2997
  %add37 = add i64 %call34, 3, !dbg !2998
  %7 = alloca i8, i64 %add37, align 16, !dbg !2998
  call void @llvm.dbg.value(metadata i8* %7, metadata !2966, metadata !DIExpression()), !dbg !2997
  %call38 = call i8* @memcpy(i8* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #6, !dbg !2999
  %add.ptr39 = getelementptr inbounds i8, i8* %7, i64 7, !dbg !3000
  %add.ptr40 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %1, i64 0, i32 2, i64 5, !dbg !3001
  %sub = add i64 %call34, -4, !dbg !3002
  %call41 = call i8* @memcpy(i8* nonnull %add.ptr39, i8* nonnull %add.ptr40, i64 %sub) #6, !dbg !3003
  %call42 = call %union.section* @get_section(i8* nonnull %7, i32 0, %union.tree_node* nonnull %decl) #8, !dbg !3004
  br label %cleanup

cleanup:                                          ; preds = %if.else25, %land.lhs.true29, %if.then32, %if.then18, %if.then5
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then5 ], [ undef, %if.then18 ], [ false, %if.then32 ], [ true, %land.lhs.true29 ], [ true, %if.else25 ]
  %retval.0 = phi %union.section* [ %call11, %if.then5 ], [ undef, %if.then18 ], [ %call42, %if.then32 ], [ undef, %land.lhs.true29 ], [ undef, %if.else25 ]
  br i1 %cleanup.dest.slot.0, label %if.end46, label %return

if.end46:                                         ; preds = %land.lhs.true, %entry, %cleanup
  %8 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !3005
  br label %return, !dbg !3006

return:                                           ; preds = %cleanup, %if.end46
  %retval.1 = phi %union.section* [ %retval.0, %cleanup ], [ %8, %if.end46 ], !dbg !2967
  ret %union.section* %retval.1, !dbg !3007
}

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

declare dso_local i8* @strcat(i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_no_function_rodata_section(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3008 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3010, metadata !DIExpression()), !dbg !3011
  %0 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !3012
  ret %union.section* %0, !dbg !3013
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @mergeable_constant_section(i32 %mode, i64 %align, i32 %flags) local_unnamed_addr #5 !dbg !3014 {
entry:
  %name = alloca [24 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3018, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i64 %align, metadata !3019, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3020, metadata !DIExpression()), !dbg !3026
  %idxprom = zext i32 %mode to i64, !dbg !3027
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3027
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3027
  %conv1 = zext i8 %0 to i64, !dbg !3027
  %mul = shl nuw nsw i64 %conv1, 3, !dbg !3027
  call void @llvm.dbg.value(metadata i8 %0, metadata !3021, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !3026
  %1 = load i32, i32* @flag_merge_constants, align 4, !dbg !3028
  %tobool = icmp ne i32 %1, 0, !dbg !3028
  %2 = icmp ugt i32 %mode, 1, !dbg !3029
  %3 = and i1 %2, %tobool, !dbg !3029
  %cmp10 = icmp ule i64 %mul, %align, !dbg !3030
  %or.cond2 = and i1 %3, %cmp10, !dbg !3029
  %align.off = add i64 %align, -8, !dbg !3029
  %4 = icmp ult i64 %align.off, 249, !dbg !3029
  %5 = and i1 %4, %or.cond2, !dbg !3029
  br i1 %5, label %land.lhs.true18, label %if.end, !dbg !3029

land.lhs.true18:                                  ; preds = %entry
  %6 = tail call i64 @llvm.ctpop.i64(i64 %align), !dbg !3031, !range !3032
  %cmp19 = icmp ult i64 %6, 2, !dbg !3031
  br i1 %cmp19, label %if.then, label %if.end, !dbg !3033

if.then:                                          ; preds = %land.lhs.true18
  %7 = getelementptr inbounds [24 x i8], [24 x i8]* %name, i64 0, i64 0, !dbg !3034
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7, !dbg !3034
  call void @llvm.dbg.declare(metadata [24 x i8]* %name, metadata !3022, metadata !DIExpression()), !dbg !3035
  %div = lshr i64 %align, 3, !dbg !3036
  %conv21 = trunc i64 %div to i32, !dbg !3037
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 %conv21) #6, !dbg !3038
  %8 = or i32 %conv21, %flags, !dbg !3039
  %conv25 = or i32 %8, 32768, !dbg !3039
  call void @llvm.dbg.value(metadata i32 %conv25, metadata !3020, metadata !DIExpression()), !dbg !3026
  %call27 = call %union.section* @get_section(i8* nonnull %7, i32 %conv25, %union.tree_node* null) #8, !dbg !3040
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7, !dbg !3041
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true18, %entry
  %9 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !3042
  br label %cleanup, !dbg !3043

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.section* [ %call27, %if.then ], [ %9, %if.end ], !dbg !3026
  ret %union.section* %retval.0, !dbg !3044
}

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_user_assembler_name(%union.tree_node* %decl, i8* %name) local_unnamed_addr #5 !dbg !3045 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3049, metadata !DIExpression()), !dbg !3052
  call void @llvm.dbg.value(metadata i8* %name, metadata !3050, metadata !DIExpression()), !dbg !3052
  %call = tail call i64 @strlen(i8* %name) #6, !dbg !3053
  %add = add i64 %call, 2, !dbg !3053
  %0 = alloca i8, i64 %add, align 16, !dbg !3053
  call void @llvm.dbg.value(metadata i8* %0, metadata !3051, metadata !DIExpression()), !dbg !3052
  store i8 42, i8* %0, align 16, !dbg !3054
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3055
  %call1 = call i8* @strcpy(i8* nonnull %add.ptr, i8* %name) #6, !dbg !3056
  %call2 = call %union.tree_node* @get_identifier(i8* nonnull %0) #6, !dbg !3057
  call void @change_decl_assembler_name(%union.tree_node* %decl, %union.tree_node* %call2) #6, !dbg !3058
  call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* null) #6, !dbg !3059
  ret void, !dbg !3060
}

declare dso_local void @change_decl_assembler_name(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @set_decl_rtl(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @decode_reg_name(i8* %asmspec) local_unnamed_addr #5 !dbg !1770 {
entry:
  call void @llvm.dbg.value(metadata i8* %asmspec, metadata !1774, metadata !DIExpression()), !dbg !3061
  %cmp = icmp eq i8* %asmspec, null, !dbg !3062
  br i1 %cmp, label %return, label %if.then, !dbg !3063

if.then:                                          ; preds = %entry
  %call = tail call fastcc i8* @strip_reg_name(i8* nonnull %asmspec) #8, !dbg !3064
  call void @llvm.dbg.value(metadata i8* %call, metadata !1774, metadata !DIExpression()), !dbg !3061
  %call1 = tail call i64 @strlen(i8* %call) #6, !dbg !3065
  %0 = trunc i64 %call1 to i32, !dbg !3065
  call void @llvm.dbg.value(metadata i32 %0, metadata !1775, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3067
  br label %for.cond, !dbg !3068

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0.in = phi i32 [ %0, %if.then ], [ %i.0, %for.inc ]
  %i.0 = add i32 %i.0.in, -1, !dbg !3069
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1775, metadata !DIExpression()), !dbg !3067
  %cmp2 = icmp sgt i32 %i.0, -1, !dbg !3070
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3072

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !3073
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %idxprom, !dbg !3073
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3073
  %idxprom5 = zext i8 %1 to i64, !dbg !3073
  %arrayidx6 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom5, !dbg !3073
  %2 = load i16, i16* %arrayidx6, align 2, !dbg !3073
  %3 = and i16 %2, 4, !dbg !3073
  %tobool = icmp eq i16 %3, 0, !dbg !3073
  br i1 %tobool, label %for.end, label %for.inc, !dbg !3075

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1775, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3067
  br label %for.cond, !dbg !3076, !llvm.loop !3077

for.end:                                          ; preds = %for.body, %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %for.body ], [ %i.0, %for.cond ], !dbg !3069
  %4 = load i8, i8* %call, align 1, !dbg !3079
  %cmp12 = icmp ne i8 %4, 0, !dbg !3081
  %cmp14 = icmp slt i32 %i.0.lcssa, 0, !dbg !3082
  %or.cond = and i1 %cmp12, %cmp14, !dbg !3083
  br i1 %or.cond, label %if.then16, label %for.cond25.preheader, !dbg !3083

for.cond25.preheader:                             ; preds = %for.end
  br label %for.cond25, !dbg !3084

if.then16:                                        ; preds = %for.end
  %call17 = tail call i32 @atoi(i8* %call) #8, !dbg !3086
  call void @llvm.dbg.value(metadata i32 %call17, metadata !1775, metadata !DIExpression()), !dbg !3067
  %5 = icmp ult i32 %call17, 53, !dbg !3088
  %spec.select = select i1 %5, i32 %call17, i32 -2, !dbg !3088
  ret i32 %spec.select, !dbg !3088

for.cond25:                                       ; preds = %for.cond25.preheader, %for.inc42
  %indvars.iv6 = phi i64 [ 0, %for.cond25.preheader ], [ %indvars.iv.next7, %for.inc42 ], !dbg !3090
  call void @llvm.dbg.value(metadata i64 %indvars.iv6, metadata !1775, metadata !DIExpression()), !dbg !3067
  %exitcond8 = icmp eq i64 %indvars.iv6, 53, !dbg !3091
  br i1 %exitcond8, label %for.cond44.preheader, label %for.body28, !dbg !3084

for.cond44.preheader:                             ; preds = %for.cond25
  br label %for.cond44, !dbg !3093

for.body28:                                       ; preds = %for.cond25
  %arrayidx30 = getelementptr inbounds [53 x i8*], [53 x i8*]* @reg_names, i64 0, i64 %indvars.iv6, !dbg !3096
  %6 = load i8*, i8** %arrayidx30, align 8, !dbg !3096
  %7 = load i8, i8* %6, align 1, !dbg !3096
  %tobool33 = icmp eq i8 %7, 0, !dbg !3096
  br i1 %tobool33, label %for.inc42, label %land.lhs.true34, !dbg !3098

land.lhs.true34:                                  ; preds = %for.body28
  %call37 = tail call fastcc i8* @strip_reg_name(i8* %6) #8, !dbg !3099
  %call38 = tail call i32 @strcmp(i8* %call, i8* %call37) #6, !dbg !3100
  %tobool39 = icmp eq i32 %call38, 0, !dbg !3100
  br i1 %tobool39, label %return.loopexit, label %for.inc42, !dbg !3101

for.inc42:                                        ; preds = %land.lhs.true34, %for.body28
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !3102
  call void @llvm.dbg.value(metadata i32 undef, metadata !1775, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3067
  br label %for.cond25, !dbg !3103, !llvm.loop !3104

for.cond44:                                       ; preds = %for.cond44.preheader, %for.inc63
  %indvars.iv = phi i64 [ 0, %for.cond44.preheader ], [ %indvars.iv.next, %for.inc63 ], !dbg !3106
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1775, metadata !DIExpression()), !dbg !3067
  %exitcond = icmp eq i64 %indvars.iv, 24, !dbg !3107
  br i1 %exitcond, label %for.end65, label %for.body47, !dbg !3093

for.body47:                                       ; preds = %for.cond44
  %name = getelementptr inbounds [24 x %struct.anon], [24 x %struct.anon]* @decode_reg_name.table, i64 0, i64 %indvars.iv, i32 0, !dbg !3109
  %8 = load i8*, i8** %name, align 16, !dbg !3109
  %9 = load i8, i8* %8, align 1, !dbg !3111
  %tobool52 = icmp eq i8 %9, 0, !dbg !3111
  br i1 %tobool52, label %for.inc63, label %land.lhs.true53, !dbg !3112

land.lhs.true53:                                  ; preds = %for.body47
  %call57 = tail call i32 @strcmp(i8* %call, i8* %8) #6, !dbg !3113
  %tobool58 = icmp eq i32 %call57, 0, !dbg !3113
  br i1 %tobool58, label %if.then59, label %for.inc63, !dbg !3114

if.then59:                                        ; preds = %land.lhs.true53
  %indvars.iv.lcssa9 = phi i64 [ %indvars.iv, %land.lhs.true53 ], !dbg !3106
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa9, metadata !1775, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa9, metadata !1775, metadata !DIExpression()), !dbg !3067
  %number = getelementptr inbounds [24 x %struct.anon], [24 x %struct.anon]* @decode_reg_name.table, i64 0, i64 %indvars.iv.lcssa9, i32 1, !dbg !3115
  %10 = load i32, i32* %number, align 8, !dbg !3115
  br label %return, !dbg !3116

for.inc63:                                        ; preds = %land.lhs.true53, %for.body47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3117
  call void @llvm.dbg.value(metadata i32 undef, metadata !1775, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3067
  br label %for.cond44, !dbg !3118, !llvm.loop !3119

for.end65:                                        ; preds = %for.cond44
  %call66 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !3121
  %tobool67 = icmp eq i32 %call66, 0, !dbg !3121
  br i1 %tobool67, label %return, label %if.end69, !dbg !3123

if.end69:                                         ; preds = %for.end65
  %call70 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !3124
  %tobool71 = icmp eq i32 %call70, 0, !dbg !3124
  %. = select i1 %tobool71, i32 -3, i32 -2, !dbg !3067
  br label %return, !dbg !3067

return.loopexit:                                  ; preds = %land.lhs.true34
  %indvars.iv6.lcssa10 = phi i64 [ %indvars.iv6, %land.lhs.true34 ], !dbg !3090
  call void @llvm.dbg.value(metadata i64 %indvars.iv6.lcssa10, metadata !1775, metadata !DIExpression()), !dbg !3067
  %11 = trunc i64 %indvars.iv6.lcssa10 to i32, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %11, metadata !1775, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i32 %11, metadata !1775, metadata !DIExpression()), !dbg !3067
  br label %return, !dbg !3126

return:                                           ; preds = %return.loopexit, %for.end65, %entry, %if.then59, %if.end69
  %retval.1 = phi i32 [ %10, %if.then59 ], [ -4, %for.end65 ], [ %., %if.end69 ], [ -1, %entry ], [ %11, %return.loopexit ], !dbg !3061
  ret i32 %retval.1, !dbg !3126
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @strip_reg_name(i8* %name) unnamed_addr #5 !dbg !3127 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !3131, metadata !DIExpression()), !dbg !3132
  %0 = load i8, i8* %name, align 1, !dbg !3133
  %cmp = icmp eq i8 %0, 37, !dbg !3135
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3136

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i8 %0, 35, !dbg !3137
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3138

if.then:                                          ; preds = %lor.lhs.false, %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %name, i64 1, !dbg !3139
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !3131, metadata !DIExpression()), !dbg !3132
  br label %if.end, !dbg !3140

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %name.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %name, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata i8* %name.addr.0, metadata !3131, metadata !DIExpression()), !dbg !3132
  ret i8* %name.addr.0, !dbg !3141
}

; Function Attrs: nounwind uwtable
define dso_local void @align_variable(%union.tree_node* %decl, i8 zeroext %dont_output_data) local_unnamed_addr #5 !dbg !3142 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3146, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.value(metadata i8 %dont_output_data, metadata !3147, metadata !DIExpression()), !dbg !3155
  %align1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3156
  %0 = load i32, i32* %align1, align 8, !dbg !3156
  call void @llvm.dbg.value(metadata i32 %0, metadata !3148, metadata !DIExpression()), !dbg !3155
  %tobool = icmp eq i8 %dont_output_data, 0, !dbg !3157
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3159

land.lhs.true:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3160
  %1 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !3160
  %cmp = icmp eq %union.tree_node* %1, null, !dbg !3161
  br i1 %cmp, label %land.lhs.true4, label %if.end, !dbg !3162

land.lhs.true4:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3163
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !3163
  %3 = load i64*, i64** %2, align 8, !dbg !3163
  %bf.load = load i64, i64* %3, align 8, !dbg !3163
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !3164
  %cmp5 = icmp eq i64 %bf.cast3, 15, !dbg !3164
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3165

if.then:                                          ; preds = %land.lhs.true4
  %type10 = getelementptr inbounds i64, i64* %3, i64 2, !dbg !3166
  %4 = bitcast i64* %type10 to %struct.tree_type**, !dbg !3166
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !3166
  %align12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 7, !dbg !3166
  %6 = load i32, i32* %align12, align 8, !dbg !3166
  %cmp13 = icmp ugt i32 %0, %6, !dbg !3166
  br i1 %cmp13, label %if.end, label %cond.false, !dbg !3166

cond.false:                                       ; preds = %if.then
  br label %if.end, !dbg !3166

if.end:                                           ; preds = %entry, %cond.false, %if.then, %land.lhs.true4, %land.lhs.true
  %align.0 = phi i32 [ %0, %land.lhs.true4 ], [ %0, %land.lhs.true ], [ %0, %entry ], [ %6, %cond.false ], [ %0, %if.then ], !dbg !3155
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !3148, metadata !DIExpression()), !dbg !3155
  %cmp21 = icmp ugt i32 %align.0, -2147483648, !dbg !3167
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3169

if.then23:                                        ; preds = %if.end
  %call = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.38, i64 0, i64 0), %union.tree_node* %decl, i32 268435456) #6, !dbg !3170
  call void @llvm.dbg.value(metadata i32 -2147483648, metadata !3148, metadata !DIExpression()), !dbg !3155
  br label %if.end24, !dbg !3172

if.end24:                                         ; preds = %if.then23, %if.end
  %align.1 = phi i32 [ -2147483648, %if.then23 ], [ %align.0, %if.end ], !dbg !3155
  call void @llvm.dbg.value(metadata i32 %align.1, metadata !3148, metadata !DIExpression()), !dbg !3155
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3173
  %bf.load27 = load i64, i64* %7, align 8, !dbg !3173
  %bf.cast292 = and i64 %bf.load27, 4398046511104, !dbg !3173
  %tobool30 = icmp eq i64 %bf.cast292, 0, !dbg !3173
  br i1 %tobool30, label %if.then31, label %if.end69, !dbg !3174

if.then31:                                        ; preds = %if.end24
  %type33 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3175
  %8 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !3175
  %call34 = tail call i32 @ix86_data_alignment(%union.tree_node* %8, i32 %align.1) #6, !dbg !3175
  call void @llvm.dbg.value(metadata i32 %call34, metadata !3149, metadata !DIExpression()), !dbg !3176
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3177
  %9 = bitcast i24* %tls_model to i32*, !dbg !3177
  %bf.load35 = load i32, i32* %9, align 8, !dbg !3177
  %bf.clear37 = and i32 %bf.load35, 49152, !dbg !3177
  %cmp38 = icmp eq i32 %bf.clear37, 0, !dbg !3177
  %cmp40 = icmp ult i32 %call34, 33, !dbg !3179
  %or.cond = or i1 %cmp38, %cmp40, !dbg !3180
  %align.2 = select i1 %or.cond, i32 %call34, i32 %align.1, !dbg !3180
  call void @llvm.dbg.value(metadata i32 %align.2, metadata !3148, metadata !DIExpression()), !dbg !3155
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3181
  %10 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3181
  %cmp45 = icmp eq %union.tree_node* %10, null, !dbg !3182
  br i1 %cmp45, label %if.end69, label %land.lhs.true47, !dbg !3183

land.lhs.true47:                                  ; preds = %if.then31
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3184
  %cmp50 = icmp eq %union.tree_node* %10, %11, !dbg !3185
  br i1 %cmp50, label %if.end69, label %if.then52, !dbg !3186

if.then52:                                        ; preds = %land.lhs.true47
  %call55 = tail call i32 @ix86_constant_alignment(%union.tree_node* nonnull %10, i32 %align.2) #6, !dbg !3187
  call void @llvm.dbg.value(metadata i32 %call55, metadata !3152, metadata !DIExpression()), !dbg !3188
  %bf.load58 = load i32, i32* %9, align 8, !dbg !3189
  %bf.clear60 = and i32 %bf.load58, 49152, !dbg !3189
  %cmp61 = icmp eq i32 %bf.clear60, 0, !dbg !3189
  %cmp64 = icmp ult i32 %call55, 33, !dbg !3191
  %or.cond1 = or i1 %cmp61, %cmp64, !dbg !3192
  %align.3 = select i1 %or.cond1, i32 %call55, i32 %align.2, !dbg !3192
  br label %if.end69, !dbg !3192

if.end69:                                         ; preds = %land.lhs.true47, %if.then31, %if.end24, %if.then52
  %align.5 = phi i32 [ %align.1, %if.end24 ], [ %align.2, %land.lhs.true47 ], [ %align.2, %if.then31 ], [ %align.3, %if.then52 ], !dbg !3155
  call void @llvm.dbg.value(metadata i32 %align.5, metadata !3148, metadata !DIExpression()), !dbg !3155
  store i32 %align.5, i32* %align1, align 8, !dbg !3193
  ret void, !dbg !3194
}

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @ix86_data_alignment(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @ix86_constant_alignment(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @make_decl_rtl(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3195 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3199, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata i8* null, metadata !3200, metadata !DIExpression()), !dbg !3220
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3221
  %bf.load = load i64, i64* %0, align 8, !dbg !3221
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !3221
  %cmp = icmp eq i64 %bf.cast2, 34, !dbg !3221
  br i1 %cmp, label %cond.true, label %land.lhs.true, !dbg !3221

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast2, 36, !dbg !3221
  br i1 %cmp5, label %cond.true, label %cond.end, !dbg !3221

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3221
  %bf.load7.pre = load i64, i64* %0, align 8, !dbg !3222
  br label %cond.end, !dbg !3221

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %bf.load17 = phi i64 [ %bf.load, %land.lhs.true ], [ %bf.load7.pre, %cond.true ], !dbg !3222
  %bf.cast93 = and i64 %bf.load17, 65535, !dbg !3222
  %cmp10 = icmp eq i64 %bf.cast93, 32, !dbg !3222
  br i1 %cmp10, label %lor.lhs.false, label %cond.end37, !dbg !3222

lor.lhs.false:                                    ; preds = %cond.end
  %bf.cast144 = and i64 %bf.load17, 67108864, !dbg !3222
  %tobool = icmp eq i64 %bf.cast144, 0, !dbg !3222
  br i1 %tobool, label %lor.lhs.false15, label %cond.end37, !dbg !3222

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %bf.cast205 = and i64 %bf.load17, 134217728, !dbg !3222
  %tobool21 = icmp eq i64 %bf.cast205, 0, !dbg !3222
  br i1 %tobool21, label %lor.lhs.false22, label %cond.end37, !dbg !3222

lor.lhs.false22:                                  ; preds = %lor.lhs.false15
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3222
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !3222
  %bf.load23 = load i64, i64* %1, align 8, !dbg !3222
  %bf.cast266 = and i64 %bf.load23, 33554432, !dbg !3222
  %tobool27 = icmp eq i64 %bf.cast266, 0, !dbg !3222
  br i1 %tobool27, label %lor.lhs.false28, label %cond.end37, !dbg !3222

lor.lhs.false28:                                  ; preds = %lor.lhs.false22
  %bf.cast337 = and i64 %bf.load23, 16777216, !dbg !3222
  %tobool34 = icmp eq i64 %bf.cast337, 0, !dbg !3222
  br i1 %tobool34, label %cond.true35, label %cond.end37, !dbg !3222

cond.true35:                                      ; preds = %lor.lhs.false28
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1317, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3222
  %bf.load40.pre = load i64, i64* %0, align 8, !dbg !3223
  %.pre45 = and i64 %bf.load40.pre, 65535, !dbg !3223
  br label %cond.end37, !dbg !3222

cond.end37:                                       ; preds = %lor.lhs.false28, %lor.lhs.false22, %lor.lhs.false15, %lor.lhs.false, %cond.end, %cond.true35
  %bf.cast428.pre-phi = phi i64 [ 32, %lor.lhs.false28 ], [ 32, %lor.lhs.false22 ], [ 32, %lor.lhs.false15 ], [ 32, %lor.lhs.false ], [ %bf.cast93, %cond.end ], [ %.pre45, %cond.true35 ], !dbg !3223
  %bf.load46 = phi i64 [ %bf.load17, %lor.lhs.false28 ], [ %bf.load17, %lor.lhs.false22 ], [ %bf.load17, %lor.lhs.false15 ], [ %bf.load17, %lor.lhs.false ], [ %bf.load17, %cond.end ], [ %bf.load40.pre, %cond.true35 ], !dbg !3223
  %cmp43 = icmp eq i64 %bf.cast428.pre-phi, 35, !dbg !3223
  br i1 %cmp43, label %cond.true50, label %land.lhs.true44, !dbg !3223

land.lhs.true44:                                  ; preds = %cond.end37
  %cmp49 = icmp eq i64 %bf.cast428.pre-phi, 30, !dbg !3223
  br i1 %cmp49, label %cond.true50, label %cond.end52, !dbg !3223

cond.true50:                                      ; preds = %land.lhs.true44, %cond.end37
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1321, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3223
  %bf.load55.pre = load i64, i64* %0, align 8, !dbg !3224
  %.pre = and i64 %bf.load55.pre, 65535, !dbg !3224
  br label %cond.end52, !dbg !3223

cond.end52:                                       ; preds = %land.lhs.true44, %cond.true50
  %bf.cast57.pre-phi = phi i64 [ %bf.cast428.pre-phi, %land.lhs.true44 ], [ %.pre, %cond.true50 ], !dbg !3224
  %bf.load55 = phi i64 [ %bf.load46, %land.lhs.true44 ], [ %bf.load55.pre, %cond.true50 ], !dbg !3224
  %arrayidx58 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast57.pre-phi, i64 11, !dbg !3224
  %2 = load i8, i8* %arrayidx58, align 1, !dbg !3224
  %tobool59 = icmp eq i8 %2, 0, !dbg !3224
  br i1 %tobool59, label %if.end153, label %land.lhs.true60, !dbg !3224

land.lhs.true60:                                  ; preds = %cond.end52
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3224
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3224
  %cmp61 = icmp eq %struct.rtx_def* %3, null, !dbg !3224
  br i1 %cmp61, label %if.end153, label %if.then, !dbg !3226

if.then:                                          ; preds = %land.lhs.true60
  br i1 false, label %cond.false69, label %cond.true66, !dbg !3227

cond.true66:                                      ; preds = %if.then
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3229
  %bf.load74.pre = load i32, i32* %.phi.trans.insert, align 8, !dbg !3231
  %mode.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3229
  %.phi.trans.insert35 = bitcast i40* %mode.phi.trans.insert to i64*, !dbg !3229
  %bf.load78.pre = load i64, i64* %.phi.trans.insert35, align 8, !dbg !3232
  %phitmp = lshr i32 %bf.load74.pre, 16, !dbg !3227
  %phitmp48 = trunc i64 %bf.load78.pre to i32, !dbg !3227
  br label %cond.end72, !dbg !3227

cond.false69:                                     ; preds = %if.then
  br label %cond.end72, !dbg !3227

cond.end72:                                       ; preds = %cond.false69, %cond.true66
  %bf.load86 = phi i32 [ undef, %cond.false69 ], [ %phitmp48, %cond.true66 ]
  %bf.load74 = phi i32 [ 0, %cond.false69 ], [ %phitmp, %cond.true66 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !3202, metadata !DIExpression()), !dbg !3220
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !3231
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3232
  %5 = bitcast i40* %mode to i64*, !dbg !3232
  %6 = xor i32 %bf.load74, %bf.load86, !dbg !3233
  %7 = and i32 %6, 255, !dbg !3233
  %cmp81 = icmp eq i32 %7, 0, !dbg !3233
  br i1 %cmp81, label %if.end, label %if.then83, !dbg !3234

if.then83:                                        ; preds = %cond.end72
  %bf.cast88 = and i32 %bf.load86, 255, !dbg !3235
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* nonnull %3, i32 %bf.cast88, i64 0, i32 0, i32 1) #6, !dbg !3235
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call) #6, !dbg !3235
  %bf.load90.pre = load i64, i64* %0, align 8, !dbg !3236
  br label %if.end, !dbg !3235

if.end:                                           ; preds = %cond.end72, %if.then83
  %bf.load90 = phi i64 [ %bf.load55, %cond.end72 ], [ %bf.load90.pre, %if.then83 ], !dbg !3236
  %bf.cast9224 = and i64 %bf.load90, 65535, !dbg !3238
  %cmp93 = icmp eq i64 %bf.cast9224, 29, !dbg !3238
  br i1 %cmp93, label %if.end104, label %land.lhs.true95, !dbg !3239

land.lhs.true95:                                  ; preds = %if.end
  %bf.load98 = load i64, i64* %5, align 8, !dbg !3240
  %bf.cast10126 = and i64 %bf.load98, 16777216, !dbg !3240
  %tobool102 = icmp eq i64 %bf.cast10126, 0, !dbg !3240
  br i1 %tobool102, label %if.end104, label %cleanup.cont467, !dbg !3241

if.end104:                                        ; preds = %land.lhs.true95, %if.end
  %8 = load void (%union.tree_node*, %struct.rtx_def*, i32)*, void (%union.tree_node*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 51), align 8, !dbg !3242
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3243
  %tobool107 = icmp eq %struct.rtx_def* %9, null, !dbg !3243
  br i1 %tobool107, label %cond.false111, label %cond.true108, !dbg !3243

cond.true108:                                     ; preds = %if.end104
  br label %cond.end114, !dbg !3243

cond.false111:                                    ; preds = %if.end104
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3243
  %cond115.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3243
  br label %cond.end114, !dbg !3243

cond.end114:                                      ; preds = %cond.false111, %cond.true108
  %cond115 = phi %struct.rtx_def* [ %cond115.pre, %cond.false111 ], [ %9, %cond.true108 ], !dbg !3243
  tail call void %8(%union.tree_node* %decl, %struct.rtx_def* %cond115, i32 0) #6, !dbg !3244
  %bf.load116 = load i32, i32* %4, align 8, !dbg !3245
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !3245
  %cmp118 = icmp eq i32 %bf.clear117, 43, !dbg !3245
  br i1 %cmp118, label %land.lhs.true120, label %if.end142, !dbg !3247

land.lhs.true120:                                 ; preds = %cond.end114
  %arrayidx121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3248
  %10 = bitcast %union.rtunion_def* %arrayidx121 to i32**, !dbg !3248
  %11 = load i32*, i32** %10, align 8, !dbg !3248
  %bf.load122 = load i32, i32* %11, align 8, !dbg !3248
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !3248
  %cmp124 = icmp eq i32 %bf.clear123, 45, !dbg !3249
  %12 = bitcast i32* %11 to %struct.rtx_def*, !dbg !3250
  br i1 %cmp124, label %land.lhs.true126, label %if.end142, !dbg !3250

land.lhs.true126:                                 ; preds = %land.lhs.true120
  %13 = getelementptr inbounds i32, i32* %11, i64 4, !dbg !3251
  %14 = load i32, i32* %13, align 8, !dbg !3251
  %15 = trunc i32 %14 to i8, !dbg !3251
  %cmp134 = icmp slt i8 %15, 0, !dbg !3251
  br i1 %cmp134, label %if.then136, label %if.end142, !dbg !3252

if.then136:                                       ; preds = %land.lhs.true126
  %call141 = tail call fastcc %struct.object_block* @get_block_for_decl(%union.tree_node* %decl) #8, !dbg !3253
  tail call fastcc void @change_symbol_block(%struct.rtx_def* %12, %struct.object_block* %call141) #8, !dbg !3254
  br label %if.end142, !dbg !3254

if.end142:                                        ; preds = %if.then136, %land.lhs.true126, %land.lhs.true120, %cond.end114
  %16 = load i32, i32* @flag_mudflap, align 4, !dbg !3255
  %tobool143 = icmp eq i32 %16, 0, !dbg !3255
  br i1 %tobool143, label %cleanup.cont467, label %land.lhs.true144, !dbg !3257

land.lhs.true144:                                 ; preds = %if.end142
  %bf.load146 = load i64, i64* %0, align 8, !dbg !3258
  %bf.cast14825 = and i64 %bf.load146, 65535, !dbg !3259
  %cmp149 = icmp eq i64 %bf.cast14825, 32, !dbg !3259
  br i1 %cmp149, label %if.then151, label %cleanup.cont467, !dbg !3260

if.then151:                                       ; preds = %land.lhs.true144
  tail call void @mudflap_enqueue_decl(%union.tree_node* %decl) #6, !dbg !3261
  br label %cleanup.cont467, !dbg !3261

if.end153:                                        ; preds = %land.lhs.true60, %cond.end52
  %call154 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !3262
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3262
  %str = bitcast i32* %id to i8**, !dbg !3262
  %17 = load i8*, i8** %str, align 8, !dbg !3262
  call void @llvm.dbg.value(metadata i8* %17, metadata !3200, metadata !DIExpression()), !dbg !3220
  %18 = load i8, i8* %17, align 1, !dbg !3263
  %cmp157 = icmp eq i8 %18, 42, !dbg !3264
  br i1 %cmp157, label %if.end153.if.else_crit_edge, label %land.lhs.true159, !dbg !3265

if.end153.if.else_crit_edge:                      ; preds = %if.end153
  %bf.load176.pre = load i64, i64* %0, align 8, !dbg !3266
  %.pre46 = and i64 %bf.load176.pre, 65535, !dbg !3267
  br label %if.else, !dbg !3265

land.lhs.true159:                                 ; preds = %if.end153
  %bf.load161 = load i64, i64* %0, align 8, !dbg !3268
  %bf.cast16322 = and i64 %bf.load161, 65535, !dbg !3269
  %cmp164 = icmp eq i64 %bf.cast16322, 29, !dbg !3269
  br i1 %cmp164, label %if.else, label %land.lhs.true166, !dbg !3270

land.lhs.true166:                                 ; preds = %land.lhs.true159
  %decl_flag_0168 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3271
  %19 = bitcast i40* %decl_flag_0168 to i64*, !dbg !3271
  %bf.load169 = load i64, i64* %19, align 8, !dbg !3271
  %bf.cast17223 = and i64 %bf.load169, 16777216, !dbg !3271
  %tobool173 = icmp eq i64 %bf.cast17223, 0, !dbg !3271
  br i1 %tobool173, label %if.else, label %if.then174, !dbg !3272

if.then174:                                       ; preds = %land.lhs.true166
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !3273
  br label %if.end337, !dbg !3275

if.else:                                          ; preds = %if.end153.if.else_crit_edge, %land.lhs.true166, %land.lhs.true159
  %bf.cast1789.pre-phi = phi i64 [ %.pre46, %if.end153.if.else_crit_edge ], [ %bf.cast16322, %land.lhs.true166 ], [ %bf.cast16322, %land.lhs.true159 ], !dbg !3267
  %cmp179 = icmp eq i64 %bf.cast1789.pre-phi, 29, !dbg !3267
  br i1 %cmp179, label %if.else329, label %land.lhs.true181, !dbg !3276

land.lhs.true181:                                 ; preds = %if.else
  %decl_flag_0183 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3277
  %20 = bitcast i40* %decl_flag_0183 to i64*, !dbg !3277
  %bf.load184 = load i64, i64* %20, align 8, !dbg !3277
  %bf.cast18714 = and i64 %bf.load184, 16777216, !dbg !3277
  %tobool188 = icmp eq i64 %bf.cast18714, 0, !dbg !3277
  br i1 %tobool188, label %if.else329, label %if.then189, !dbg !3278

if.then189:                                       ; preds = %land.lhs.true181
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 1, !dbg !3279
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3203, metadata !DIExpression()), !dbg !3280
  %call190 = tail call i32 @decode_reg_name(i8* nonnull %add.ptr) #8, !dbg !3281
  call void @llvm.dbg.value(metadata i32 %call190, metadata !3201, metadata !DIExpression()), !dbg !3220
  %cmp191 = icmp eq i32 %call190, -1, !dbg !3282
  br i1 %cmp191, label %if.then193, label %if.else194, !dbg !3283

if.then193:                                       ; preds = %if.then189
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !3284
  br label %cleanup, !dbg !3284

if.else194:                                       ; preds = %if.then189
  %cmp195 = icmp slt i32 %call190, 0, !dbg !3285
  br i1 %cmp195, label %if.then197, label %if.else198, !dbg !3286

if.then197:                                       ; preds = %if.else194
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !3287
  br label %cleanup, !dbg !3287

if.else198:                                       ; preds = %if.else194
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3288
  %21 = bitcast %union.tree_node** %type to i64**, !dbg !3288
  %22 = load i64*, i64** %21, align 8, !dbg !3288
  %bf.load200 = load i64, i64* %22, align 8, !dbg !3288
  %bf.cast20215 = and i64 %bf.load200, 65535, !dbg !3288
  %cmp203 = icmp eq i64 %bf.cast20215, 14, !dbg !3288
  br i1 %cmp203, label %cond.true205, label %cond.false209, !dbg !3288

cond.true205:                                     ; preds = %if.else198
  %.cast = bitcast i64* %22 to %union.tree_node*, !dbg !3288
  %call208 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !3288
  br label %cond.end217, !dbg !3288

cond.false209:                                    ; preds = %if.else198
  %type212 = bitcast i64* %22 to %struct.tree_type*, !dbg !3288
  %mode213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type212, i64 0, i32 6, !dbg !3288
  %bf.load214 = load i32, i32* %mode213, align 4, !dbg !3288
  %bf.lshr215 = lshr i32 %bf.load214, 16, !dbg !3288
  %bf.clear216 = and i32 %bf.lshr215, 255, !dbg !3288
  br label %cond.end217, !dbg !3288

cond.end217:                                      ; preds = %cond.false209, %cond.true205
  %cond218 = phi i32 [ %call208, %cond.true205 ], [ %bf.clear216, %cond.false209 ], !dbg !3288
  %cmp219 = icmp eq i32 %cond218, 1, !dbg !3289
  br i1 %cmp219, label %if.then221, label %if.else222, !dbg !3290

if.then221:                                       ; preds = %cond.end217
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !3291
  br label %cleanup, !dbg !3291

if.else222:                                       ; preds = %cond.end217
  %23 = load i64*, i64** %21, align 8, !dbg !3292
  %bf.load226 = load i64, i64* %23, align 8, !dbg !3292
  %bf.cast22816 = and i64 %bf.load226, 65535, !dbg !3292
  %cmp229 = icmp eq i64 %bf.cast22816, 14, !dbg !3292
  br i1 %cmp229, label %cond.true231, label %cond.false235, !dbg !3292

cond.true231:                                     ; preds = %if.else222
  %.cast17 = bitcast i64* %23 to %union.tree_node*, !dbg !3292
  %call234 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #6, !dbg !3292
  br label %cond.end243, !dbg !3292

cond.false235:                                    ; preds = %if.else222
  %type238 = bitcast i64* %23 to %struct.tree_type*, !dbg !3292
  %mode239 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type238, i64 0, i32 6, !dbg !3292
  %bf.load240 = load i32, i32* %mode239, align 4, !dbg !3292
  %bf.lshr241 = lshr i32 %bf.load240, 16, !dbg !3292
  %bf.clear242 = and i32 %bf.lshr241, 255, !dbg !3292
  br label %cond.end243, !dbg !3292

cond.end243:                                      ; preds = %cond.false235, %cond.true231
  %cond244 = phi i32 [ %call234, %cond.true231 ], [ %bf.clear242, %cond.false235 ], !dbg !3292
  %call245 = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %call190, i32 %cond244) #6, !dbg !3292
  %tobool246 = icmp eq i8 %call245, 0, !dbg !3292
  br i1 %tobool246, label %if.then247, label %if.else248, !dbg !3293

if.then247:                                       ; preds = %cond.end243
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.42, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !3294
  br label %cleanup

if.else248:                                       ; preds = %cond.end243
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3295
  %24 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3295
  %cmp250 = icmp eq %union.tree_node* %24, null, !dbg !3297
  br i1 %cmp250, label %if.end262, label %land.lhs.true252, !dbg !3298

land.lhs.true252:                                 ; preds = %if.else248
  %bf.load254 = load i64, i64* %0, align 8, !dbg !3299
  %bf.cast25721 = and i64 %bf.load254, 67108864, !dbg !3299
  %tobool258 = icmp eq i64 %bf.cast25721, 0, !dbg !3299
  br i1 %tobool258, label %if.end262, label %if.then259, !dbg !3300

if.then259:                                       ; preds = %land.lhs.true252
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !dbg !3301
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !3303
  br label %if.end262, !dbg !3304

if.end262:                                        ; preds = %land.lhs.true252, %if.else248, %if.then259
  %bf.load264 = load i64, i64* %0, align 8, !dbg !3305
  %bf.cast26718 = and i64 %bf.load264, 524288, !dbg !3305
  %tobool268 = icmp eq i64 %bf.cast26718, 0, !dbg !3305
  br i1 %tobool268, label %if.end271, label %if.then269, !dbg !3307

if.then269:                                       ; preds = %if.end262
  %call270 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 235, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !3308
  br label %if.end271, !dbg !3308

if.end271:                                        ; preds = %if.end262, %if.then269
  %bf.load274 = load i64, i64* %20, align 8, !dbg !3309
  %25 = trunc i64 %bf.load274 to i32, !dbg !3309
  %bf.cast276 = and i32 %25, 255, !dbg !3309
  %call277 = tail call %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32 37, i32 %bf.cast276, i32 %call190) #6, !dbg !3309
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call277) #6, !dbg !3309
  %rtl279 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3310
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtl279, align 8, !dbg !3310
  %tobool280 = icmp eq %struct.rtx_def* %26, null, !dbg !3310
  br i1 %tobool280, label %cond.false284, label %cond.true281, !dbg !3310

cond.true281:                                     ; preds = %if.end271
  br label %cond.end287, !dbg !3310

cond.false284:                                    ; preds = %if.end271
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3310
  %cond288.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl279, align 8, !dbg !3310
  br label %cond.end287, !dbg !3310

cond.end287:                                      ; preds = %cond.false284, %cond.true281
  %cond288 = phi %struct.rtx_def* [ %cond288.pre, %cond.false284 ], [ %26, %cond.true281 ], !dbg !3310
  %27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond288, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3310
  %rt_uint = bitcast %union.rtunion_def* %27 to i32*, !dbg !3310
  store i32 %call190, i32* %rt_uint, align 8, !dbg !3311
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtl279, align 8, !dbg !3312
  %tobool294 = icmp eq %struct.rtx_def* %28, null, !dbg !3312
  br i1 %tobool294, label %cond.false298, label %cond.true295, !dbg !3312

cond.true295:                                     ; preds = %cond.end287
  %29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i64 0, i32 0, !dbg !3312
  br label %cond.end301, !dbg !3312

cond.false298:                                    ; preds = %cond.end287
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3312
  %.phi.trans.insert42 = bitcast %struct.rtx_def** %rtl279 to i32**, !dbg !3313
  %cond30219.pre = load i32*, i32** %.phi.trans.insert42, align 8, !dbg !3312
  br label %cond.end301, !dbg !3312

cond.end301:                                      ; preds = %cond.false298, %cond.true295
  %cond30219 = phi i32* [ %cond30219.pre, %cond.false298 ], [ %29, %cond.true295 ], !dbg !3312
  %bf.load303 = load i32, i32* %cond30219, align 8, !dbg !3314
  %bf.set = or i32 %bf.load303, 134217728, !dbg !3314
  store i32 %bf.set, i32* %cond30219, align 8, !dbg !3314
  %bf.load306 = load i64, i64* %0, align 8, !dbg !3315
  %bf.cast30920 = and i64 %bf.load306, 67108864, !dbg !3315
  %tobool310 = icmp eq i64 %bf.cast30920, 0, !dbg !3315
  br i1 %tobool310, label %cleanup, label %if.then311, !dbg !3317

if.then311:                                       ; preds = %cond.end301
  %idxprom312 = sext i32 %call190 to i64, !dbg !3318
  %bf.load316 = load i64, i64* %20, align 8, !dbg !3320
  %bf.cast318 = and i64 %bf.load316, 255, !dbg !3320
  %arrayidx320 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom312, i64 %bf.cast318, !dbg !3318
  %30 = load i8, i8* %arrayidx320, align 1, !dbg !3318
  %conv321 = zext i8 %30 to i32, !dbg !3318
  call void @llvm.dbg.value(metadata i32 %conv321, metadata !3207, metadata !DIExpression()), !dbg !3313
  br label %while.cond, !dbg !3321

while.cond:                                       ; preds = %while.body, %if.then311
  %nregs.0 = phi i32 [ %conv321, %if.then311 ], [ %dec, %while.body ], !dbg !3322
  call void @llvm.dbg.value(metadata i32 %nregs.0, metadata !3207, metadata !DIExpression()), !dbg !3313
  %cmp322 = icmp sgt i32 %nregs.0, 0, !dbg !3323
  br i1 %cmp322, label %while.body, label %cleanup.loopexit, !dbg !3321

while.body:                                       ; preds = %while.cond
  %dec = add nsw i32 %nregs.0, -1, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3207, metadata !DIExpression()), !dbg !3313
  %add = add nsw i32 %call190, %dec, !dbg !3325
  tail call void @globalize_reg(i32 %add) #6, !dbg !3326
  br label %while.cond, !dbg !3321, !llvm.loop !3327

cleanup.loopexit:                                 ; preds = %while.cond
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end301, %if.then193, %if.then221, %if.then247, %if.then197
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end301 ], [ true, %if.then197 ], [ true, %if.then247 ], [ true, %if.then221 ], [ true, %if.then193 ], [ false, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end337, label %cleanup.cont467

if.else329:                                       ; preds = %land.lhs.true181, %if.else
  br label %if.end337

if.end337:                                        ; preds = %if.else329, %cleanup, %if.then174
  %bf.load339 = load i64, i64* %0, align 8, !dbg !3329
  %bf.cast34110 = and i64 %bf.load339, 65535, !dbg !3331
  %cmp342 = icmp eq i64 %bf.cast34110, 32, !dbg !3331
  br i1 %cmp342, label %land.lhs.true344, label %if.end363, !dbg !3332

land.lhs.true344:                                 ; preds = %if.end337
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3333
  %31 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !3333
  %cmp345 = icmp eq %union.tree_node* %31, null, !dbg !3334
  br i1 %cmp345, label %if.end363, label %land.lhs.true347, !dbg !3335

land.lhs.true347:                                 ; preds = %land.lhs.true344
  %initial349 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3336
  %32 = load %union.tree_node*, %union.tree_node** %initial349, align 8, !dbg !3336
  %cmp350 = icmp eq %union.tree_node* %32, null, !dbg !3337
  br i1 %cmp350, label %land.lhs.true352, label %if.end363, !dbg !3338

land.lhs.true352:                                 ; preds = %land.lhs.true347
  %common_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3339
  %33 = bitcast i24* %common_flag to i32*, !dbg !3339
  %bf.load354 = load i32, i32* %33, align 8, !dbg !3339
  %bf.clear356 = and i32 %bf.load354, 8, !dbg !3339
  %tobool357 = icmp eq i32 %bf.clear356, 0, !dbg !3339
  br i1 %tobool357, label %if.end363, label %if.then358, !dbg !3340

if.then358:                                       ; preds = %land.lhs.true352
  %bf.clear362 = and i32 %bf.load354, -9, !dbg !3341
  store i32 %bf.clear362, i32* %33, align 8, !dbg !3341
  br label %if.end363, !dbg !3342

if.end363:                                        ; preds = %land.lhs.true352, %land.lhs.true344, %if.then358, %land.lhs.true347, %if.end337
  br i1 %cmp342, label %land.lhs.true370, label %if.end381, !dbg !3343

land.lhs.true370:                                 ; preds = %if.end363
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3345
  %34 = bitcast i24* %weak_flag to i32*, !dbg !3345
  %bf.load372 = load i32, i32* %34, align 8, !dbg !3345
  %35 = trunc i32 %bf.load372 to i8, !dbg !3345
  %tobool375 = icmp slt i8 %35, 0, !dbg !3345
  br i1 %tobool375, label %if.then376, label %if.end381, !dbg !3346

if.then376:                                       ; preds = %land.lhs.true370
  %bf.clear380 = and i32 %bf.load372, -9, !dbg !3347
  store i32 %bf.clear380, i32* %34, align 8, !dbg !3347
  br label %if.end381, !dbg !3348

if.end381:                                        ; preds = %if.then376, %land.lhs.true370, %if.end363
  %call382 = tail call fastcc zeroext i8 @use_object_blocks_p() #8, !dbg !3349
  %tobool384 = icmp eq i8 %call382, 0, !dbg !3349
  br i1 %tobool384, label %if.else392, label %land.lhs.true385, !dbg !3350

land.lhs.true385:                                 ; preds = %if.end381
  %call386 = tail call fastcc zeroext i8 @use_blocks_for_decl_p(%union.tree_node* %decl) #8, !dbg !3351
  %tobool388 = icmp eq i8 %call386, 0, !dbg !3351
  br i1 %tobool388, label %if.else392, label %if.then389, !dbg !3352

if.then389:                                       ; preds = %land.lhs.true385
  %call390 = tail call fastcc %struct.object_block* @get_block_for_decl(%union.tree_node* %decl) #8, !dbg !3353
  %call391 = tail call fastcc %struct.rtx_def* @create_block_symbol(i8* %17, %struct.object_block* %call390, i64 -1) #8, !dbg !3354
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call391, metadata !3202, metadata !DIExpression()), !dbg !3220
  br label %if.end408, !dbg !3355

if.else392:                                       ; preds = %land.lhs.true385, %if.end381
  call void @llvm.dbg.value(metadata i32 16, metadata !3213, metadata !DIExpression()), !dbg !3356
  %type394 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3357
  %36 = load %union.tree_node*, %union.tree_node** %type394, align 8, !dbg !3357
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3358
  %cmp395 = icmp eq %union.tree_node* %36, %37, !dbg !3359
  br i1 %cmp395, label %if.end406, label %if.then397, !dbg !3360

if.then397:                                       ; preds = %if.else392
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3360
  %bf.load401 = load i64, i64* %38, align 8, !dbg !3361
  %bf.lshr402 = lshr i64 %bf.load401, 56, !dbg !3361
  %conv404 = trunc i64 %bf.lshr402 to i8, !dbg !3361
  call void @llvm.dbg.value(metadata i8 %conv404, metadata !3216, metadata !DIExpression()), !dbg !3362
  %39 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 1), align 8, !dbg !3363
  %call405 = tail call i32 %39(i8 zeroext %conv404) #6, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %call405, metadata !3213, metadata !DIExpression()), !dbg !3356
  br label %if.end406, !dbg !3365

if.end406:                                        ; preds = %if.else392, %if.then397
  %address_mode.0 = phi i32 [ %call405, %if.then397 ], [ 16, %if.else392 ], !dbg !3356
  call void @llvm.dbg.value(metadata i32 %address_mode.0, metadata !3213, metadata !DIExpression()), !dbg !3356
  %call407 = tail call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 %address_mode.0, i8* %17) #6, !dbg !3366
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call407, metadata !3202, metadata !DIExpression()), !dbg !3220
  br label %if.end408

if.end408:                                        ; preds = %if.end406, %if.then389
  %x.0 = phi %struct.rtx_def* [ %call391, %if.then389 ], [ %call407, %if.end406 ], !dbg !3367
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !3202, metadata !DIExpression()), !dbg !3220
  %weak_flag410 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3368
  %40 = bitcast i24* %weak_flag410 to i32*, !dbg !3368
  %bf.load411 = load i32, i32* %40, align 8, !dbg !3368
  %bf.lshr412 = lshr i32 %bf.load411, 7, !dbg !3368
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !3369
  %bf.load414 = load i32, i32* %41, align 8, !dbg !3370
  %bf.shl = shl i32 %bf.lshr412, 31, !dbg !3370
  %bf.clear415 = and i32 %bf.load414, 2147483647, !dbg !3370
  %bf.set416 = or i32 %bf.clear415, %bf.shl, !dbg !3370
  store i32 %bf.set416, i32* %41, align 8, !dbg !3370
  %bf.clear419 = and i32 %bf.load414, 67108864, !dbg !3371
  %tobool420 = icmp eq i32 %bf.clear419, 0, !dbg !3371
  br i1 %tobool420, label %cond.end423, label %cond.true421, !dbg !3371

cond.true421:                                     ; preds = %if.end408
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1465, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3371
  br label %cond.end423, !dbg !3371

cond.end423:                                      ; preds = %if.end408, %cond.true421
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3371
  %rt_tree = bitcast %union.rtunion_def* %42 to %union.tree_node**, !dbg !3371
  store %union.tree_node* %decl, %union.tree_node** %rt_tree, align 8, !dbg !3371
  %mode429 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3372
  %43 = bitcast i40* %mode429 to i64*, !dbg !3372
  %bf.load430 = load i64, i64* %43, align 8, !dbg !3372
  %44 = trunc i64 %bf.load430 to i32, !dbg !3372
  %bf.cast432 = and i32 %44, 255, !dbg !3372
  %call433 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast432, %struct.rtx_def* %x.0) #6, !dbg !3373
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call433, metadata !3202, metadata !DIExpression()), !dbg !3220
  %bf.load435 = load i64, i64* %0, align 8, !dbg !3374
  %bf.cast43712 = and i64 %bf.load435, 65535, !dbg !3376
  %cmp438 = icmp eq i64 %bf.cast43712, 29, !dbg !3376
  br i1 %cmp438, label %if.end441, label %if.then440, !dbg !3377

if.then440:                                       ; preds = %cond.end423
  tail call void @set_mem_attributes(%struct.rtx_def* %call433, %union.tree_node* %decl, i32 1) #6, !dbg !3378
  br label %if.end441, !dbg !3378

if.end441:                                        ; preds = %cond.end423, %if.then440
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* %call433) #6, !dbg !3379
  %45 = load void (%union.tree_node*, %struct.rtx_def*, i32)*, void (%union.tree_node*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 51), align 8, !dbg !3380
  %rtl443 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3381
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rtl443, align 8, !dbg !3381
  %tobool444 = icmp eq %struct.rtx_def* %46, null, !dbg !3381
  br i1 %tobool444, label %cond.false448, label %cond.true445, !dbg !3381

cond.true445:                                     ; preds = %if.end441
  br label %cond.end451, !dbg !3381

cond.false448:                                    ; preds = %if.end441
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3381
  %cond452.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl443, align 8, !dbg !3381
  br label %cond.end451, !dbg !3381

cond.end451:                                      ; preds = %cond.false448, %cond.true445
  %cond452 = phi %struct.rtx_def* [ %cond452.pre, %cond.false448 ], [ %46, %cond.true445 ], !dbg !3381
  tail call void %45(%union.tree_node* %decl, %struct.rtx_def* %cond452, i32 1) #6, !dbg !3382
  %47 = load i32, i32* @flag_mudflap, align 4, !dbg !3383
  %tobool453 = icmp eq i32 %47, 0, !dbg !3383
  br i1 %tobool453, label %cleanup.cont467, label %land.lhs.true454, !dbg !3385

land.lhs.true454:                                 ; preds = %cond.end451
  %bf.load456 = load i64, i64* %0, align 8, !dbg !3386
  %bf.cast45813 = and i64 %bf.load456, 65535, !dbg !3387
  %cmp459 = icmp eq i64 %bf.cast45813, 32, !dbg !3387
  br i1 %cmp459, label %if.then461, label %cleanup.cont467, !dbg !3388

if.then461:                                       ; preds = %land.lhs.true454
  tail call void @mudflap_enqueue_decl(%union.tree_node* %decl) #6, !dbg !3389
  br label %cleanup.cont467, !dbg !3389

cleanup.cont467:                                  ; preds = %land.lhs.true95, %if.end142, %cond.end451, %cleanup, %if.then151, %land.lhs.true144, %if.then461, %land.lhs.true454
  ret void, !dbg !3390
}

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @change_symbol_block(%struct.rtx_def* %symbol, %struct.object_block* %block) unnamed_addr #5 !dbg !3391 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3395, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata %struct.object_block* %block, metadata !3396, metadata !DIExpression()), !dbg !3397
  %block1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 1, !dbg !3398
  %0 = load %struct.object_block*, %struct.object_block** %block1, align 8, !dbg !3398
  %cmp = icmp eq %struct.object_block* %0, %block, !dbg !3400
  br i1 %cmp, label %if.end, label %if.then, !dbg !3401

if.then:                                          ; preds = %entry
  %offset = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 2, !dbg !3402
  %1 = load i64, i64* %offset, align 8, !dbg !3402
  %cmp4 = icmp slt i64 %1, 0, !dbg !3402
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !3402

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1264, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3402
  br label %cond.end, !dbg !3402

cond.end:                                         ; preds = %if.then, %cond.true
  store %struct.object_block* %block, %struct.object_block** %block1, align 8, !dbg !3404
  br label %if.end, !dbg !3405

if.end:                                           ; preds = %entry, %cond.end
  ret void, !dbg !3406
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.object_block* @get_block_for_decl(%union.tree_node* %decl) unnamed_addr #5 !dbg !3407 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3411, metadata !DIExpression()), !dbg !3413
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3414
  %bf.load = load i64, i64* %0, align 8, !dbg !3414
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3416
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3416
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3417

if.then:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3418
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !3418
  %bf.load1 = load i64, i64* %1, align 8, !dbg !3418
  %bf.cast33 = and i64 %bf.load1, 33554432, !dbg !3418
  %tobool = icmp eq i64 %bf.cast33, 0, !dbg !3418
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3421

if.end:                                           ; preds = %if.then
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3422
  %2 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !3422
  %cmp5 = icmp eq %union.tree_node* %2, null, !dbg !3422
  br i1 %cmp5, label %if.end8, label %cleanup, !dbg !3424

if.end8:                                          ; preds = %if.end, %entry
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3425
  %3 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !3425
  %cmp10 = icmp eq %union.tree_node* %3, null, !dbg !3427
  br i1 %cmp10, label %cleanup, label %if.end12, !dbg !3428

if.end12:                                         ; preds = %if.end8
  %call = tail call i32 @host_integerp(%union.tree_node* nonnull %3, i32 1) #6, !dbg !3429
  %tobool15 = icmp eq i32 %call, 0, !dbg !3429
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !3431

if.end17:                                         ; preds = %if.end12
  %bf.load19 = load i64, i64* %0, align 8, !dbg !3432
  %bf.cast212 = and i64 %bf.load19, 65535, !dbg !3434
  %cmp22 = icmp eq i64 %bf.cast212, 32, !dbg !3434
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !3435

if.then23:                                        ; preds = %if.end17
  tail call void @align_variable(%union.tree_node* %decl, i8 zeroext 0) #8, !dbg !3436
  br label %if.end24, !dbg !3436

if.end24:                                         ; preds = %if.then23, %if.end17
  %call25 = tail call fastcc %union.section* @get_variable_section(%union.tree_node* %decl, i8 zeroext 1) #8, !dbg !3437
  call void @llvm.dbg.value(metadata %union.section* %call25, metadata !3412, metadata !DIExpression()), !dbg !3413
  %flags = getelementptr inbounds %union.section, %union.section* %call25, i64 0, i32 0, i32 0, i32 0, !dbg !3438
  %4 = load i32, i32* %flags, align 8, !dbg !3438
  %and = and i32 %4, 6291456, !dbg !3438
  %cmp26 = icmp eq i32 %and, 4194304, !dbg !3440
  br i1 %cmp26, label %cleanup, label %if.end28, !dbg !3441

if.end28:                                         ; preds = %if.end24
  %call29 = tail call fastcc %struct.object_block* @get_block_for_section(%union.section* %call25) #8, !dbg !3442
  br label %cleanup, !dbg !3443

cleanup:                                          ; preds = %if.end, %if.then, %if.end12, %if.end24, %if.end8, %if.end28
  %retval.0 = phi %struct.object_block* [ %call29, %if.end28 ], [ null, %if.then ], [ null, %if.end ], [ null, %if.end8 ], [ null, %if.end12 ], [ null, %if.end24 ], !dbg !3413
  ret %struct.object_block* %retval.0, !dbg !3444
}

declare dso_local void @mudflap_enqueue_decl(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_i00_stat(i32, i32, i32) local_unnamed_addr #2

declare dso_local void @globalize_reg(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @use_object_blocks_p() unnamed_addr #5 !dbg !3445 {
entry:
  %0 = load i32, i32* @flag_section_anchors, align 4, !dbg !3448
  %conv = trunc i32 %0 to i8, !dbg !3448
  ret i8 %conv, !dbg !3449
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @use_blocks_for_decl_p(%union.tree_node* %decl) unnamed_addr #5 !dbg !3450 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3454, metadata !DIExpression()), !dbg !3455
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3456
  %bf.load = load i64, i64* %0, align 8, !dbg !3456
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3458
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3458
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !3459

land.lhs.true:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 33, !dbg !3460
  br i1 %cmp5, label %if.end, label %return, !dbg !3461

if.end:                                           ; preds = %land.lhs.true, %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3462
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3462
  %cmp6 = icmp eq %union.tree_node* %1, %decl, !dbg !3464
  br i1 %cmp6, label %return, label %if.end8, !dbg !3465

if.end8:                                          ; preds = %if.end
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !3466
  %2 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !3466
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.170, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !3468
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3468
  %. = zext i1 %tobool to i8, !dbg !3455
  br label %return, !dbg !3455

return:                                           ; preds = %land.lhs.true, %if.end8, %if.end
  %retval.0 = phi i8 [ 0, %land.lhs.true ], [ 0, %if.end ], [ %., %if.end8 ], !dbg !3455
  ret i8 %retval.0, !dbg !3469
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @create_block_symbol(i8* %label, %struct.object_block* %block, i64 %offset) unnamed_addr #5 !dbg !3470 {
entry:
  call void @llvm.dbg.value(metadata i8* %label, metadata !3474, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata %struct.object_block* %block, metadata !3475, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i64 %offset, metadata !3476, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i32 48, metadata !3478, metadata !DIExpression()), !dbg !3479
  %call = tail call i8* @ggc_alloc_stat(i64 48) #6, !dbg !3480
  %0 = bitcast i8* %call to %struct.rtx_def*, !dbg !3481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !3477, metadata !DIExpression()), !dbg !3479
  %call2 = tail call i8* @memset(i8* %call, i32 0, i64 48) #6, !dbg !3482
  %1 = bitcast i8* %call to i32*, !dbg !3483
  %bf.load = load i32, i32* %1, align 8, !dbg !3483
  %bf.set = and i32 %bf.load, -16777216, !dbg !3484
  %bf.set5 = or i32 %bf.set, 1048621, !dbg !3484
  store i32 %bf.set5, i32* %1, align 8, !dbg !3484
  %u = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3485
  %rt_str = bitcast i8* %u to i8**, !dbg !3485
  store i8* %label, i8** %rt_str, align 8, !dbg !3486
  %arrayidx8 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !3487
  %rt_int = bitcast i8* %arrayidx8 to i32*, !dbg !3487
  store i32 128, i32* %rt_int, align 8, !dbg !3488
  %block10 = getelementptr inbounds i8, i8* %call, i64 32, !dbg !3489
  %2 = bitcast i8* %block10 to %struct.object_block**, !dbg !3489
  store %struct.object_block* %block, %struct.object_block** %2, align 8, !dbg !3490
  %offset13 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !3491
  %3 = bitcast i8* %offset13 to i64*, !dbg !3491
  store i64 %offset, i64* %3, align 8, !dbg !3492
  ret %struct.rtx_def* %0, !dbg !3493
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32, i32, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @make_decl_rtl_for_debug(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3494 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3498, metadata !DIExpression()), !dbg !3502
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3503
  %bf.load = load i64, i64* %0, align 8, !dbg !3503
  %bf.cast = and i64 %bf.load, 65535, !dbg !3503
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !3503
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !3503
  %tobool = icmp eq i8 %1, 0, !dbg !3503
  br i1 %tobool, label %entry.if.end_crit_edge, label %land.lhs.true, !dbg !3503

entry.if.end_crit_edge:                           ; preds = %entry
  %rtl12.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3502
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl12.phi.trans.insert, align 8, !dbg !3505
  br label %if.end, !dbg !3503

land.lhs.true:                                    ; preds = %entry
  %rtl2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3503
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl2, align 8, !dbg !3503
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !3503
  br i1 %cmp, label %if.end, label %if.then, !dbg !3506

if.then:                                          ; preds = %land.lhs.true
  br i1 false, label %cond.false, label %cond.true, !dbg !3507

cond.true:                                        ; preds = %if.then
  br label %cleanup, !dbg !3507

cond.false:                                       ; preds = %if.then
  br label %cleanup, !dbg !3507

if.end:                                           ; preds = %entry.if.end_crit_edge, %land.lhs.true
  %3 = phi %struct.rtx_def* [ %.pre, %entry.if.end_crit_edge ], [ null, %land.lhs.true ], !dbg !3505
  %4 = load i32, i32* @flag_strict_aliasing, align 4, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %4, metadata !3499, metadata !DIExpression()), !dbg !3502
  store i32 0, i32* @flag_strict_aliasing, align 4, !dbg !3509
  %5 = load i32, i32* @flag_mudflap, align 4, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %5, metadata !3500, metadata !DIExpression()), !dbg !3502
  store i32 0, i32* @flag_mudflap, align 4, !dbg !3511
  %tobool13 = icmp eq %struct.rtx_def* %3, null, !dbg !3505
  br i1 %tobool13, label %cond.false17, label %cond.true14, !dbg !3505

cond.true14:                                      ; preds = %if.end
  br label %cond.end20, !dbg !3505

cond.false17:                                     ; preds = %if.end
  %rtl12 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3505
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3505
  %cond21.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl12, align 8, !dbg !3505
  br label %cond.end20, !dbg !3505

cond.end20:                                       ; preds = %cond.false17, %cond.true14
  %cond21 = phi %struct.rtx_def* [ %cond21.pre, %cond.false17 ], [ %3, %cond.true14 ], !dbg !3505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond21, metadata !3501, metadata !DIExpression()), !dbg !3502
  tail call void @set_decl_rtl(%union.tree_node* %decl, %struct.rtx_def* null) #6, !dbg !3512
  store i32 %4, i32* @flag_strict_aliasing, align 4, !dbg !3513
  store i32 %5, i32* @flag_mudflap, align 4, !dbg !3514
  br label %cleanup, !dbg !3515

cleanup:                                          ; preds = %cond.true, %cond.false, %cond.end20
  %retval.0 = phi %struct.rtx_def* [ %cond21, %cond.end20 ], [ %2, %cond.true ], [ undef, %cond.false ], !dbg !3502
  ret %struct.rtx_def* %retval.0, !dbg !3516
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_asm(%union.tree_node* %string) local_unnamed_addr #5 !dbg !3517 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %string, metadata !3519, metadata !DIExpression()), !dbg !3520
  tail call void @app_enable() #6, !dbg !3521
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3522
  %bf.load = load i64, i64* %0, align 8, !dbg !3522
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3524
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !3524
  br i1 %cmp, label %if.then, label %if.end, !dbg !3525

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %string, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3526
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !3526
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3519, metadata !DIExpression()), !dbg !3520
  br label %if.end, !dbg !3527

if.end:                                           ; preds = %if.then, %entry
  %string.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %string, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %string.addr.0, metadata !3519, metadata !DIExpression()), !dbg !3520
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3528
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %string.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3529
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i32* nonnull %str) #6, !dbg !3530
  ret void, !dbg !3531
}

declare dso_local void @app_enable() local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @default_stabs_asm_out_destructor(%struct.rtx_def* %symbol, i32 %priority) local_unnamed_addr #5 !dbg !3532 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3536, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i32 %priority, metadata !3537, metadata !DIExpression()), !dbg !3538
  tail call void @dbxout_begin_simple_stabs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i32 22) #6, !dbg !3539
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3540
  %0 = load i8*, i8** %rt_str, align 8, !dbg !3540
  tail call void @dbxout_stab_value_label(i8* %0) #6, !dbg !3541
  ret void, !dbg !3542
}

declare dso_local void @dbxout_begin_simple_stabs(i8*, i32) local_unnamed_addr #2

declare dso_local void @dbxout_stab_value_label(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @assemble_addr_to_section(%struct.rtx_def* %symbol, %union.section* %sec) local_unnamed_addr #5 !dbg !3543 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3547, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata %union.section* %sec, metadata !3548, metadata !DIExpression()), !dbg !3549
  tail call void @switch_to_section(%union.section* %sec) #8, !dbg !3550
  tail call void @assemble_align(i32 32) #8, !dbg !3551
  %call = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %symbol, i32 4, i32 32, i32 1) #8, !dbg !3552
  ret void, !dbg !3553
}

; Function Attrs: nounwind uwtable
define dso_local void @switch_to_section(%union.section* %new_section) local_unnamed_addr #5 !dbg !3554 {
entry:
  call void @llvm.dbg.value(metadata %union.section* %new_section, metadata !3558, metadata !DIExpression()), !dbg !3559
  %0 = load %union.section*, %union.section** @in_section, align 8, !dbg !3560
  %cmp = icmp eq %union.section* %0, %new_section, !dbg !3562
  br i1 %cmp, label %return, label %if.end, !dbg !3563

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 0, i32 0, !dbg !3564
  %1 = load i32, i32* %flags, align 8, !dbg !3564
  %and = and i32 %1, 16384, !dbg !3566
  %tobool = icmp eq i32 %and, 0, !dbg !3566
  br i1 %tobool, label %if.else, label %if.then1, !dbg !3567

if.then1:                                         ; preds = %if.end
  br label %if.end2, !dbg !3568

if.else:                                          ; preds = %if.end
  br label %if.end2

if.end2:                                          ; preds = %if.else, %if.then1
  %storemerge = phi %union.section* [ %new_section, %if.else ], [ null, %if.then1 ], !dbg !3569
  store %union.section* %storemerge, %union.section** @in_section, align 8, !dbg !3569
  %2 = load i32, i32* %flags, align 8, !dbg !3570
  %and5 = and i32 %2, 6291456, !dbg !3570
  switch i32 %and5, label %sw.epilog [
    i32 2097152, label %sw.bb
    i32 0, label %sw.bb18
    i32 4194304, label %sw.bb20
  ], !dbg !3571

sw.bb:                                            ; preds = %if.end2
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3572
  %tobool6 = icmp eq %struct.function* %3, null, !dbg !3572
  %4 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !3575
  %tobool7 = icmp ne i8* %4, null, !dbg !3576
  %or.cond = or i1 %tobool6, %tobool7, !dbg !3577
  br i1 %or.cond, label %sw.bb.if.end11_crit_edge, label %land.lhs.true8, !dbg !3577

sw.bb.if.end11_crit_edge:                         ; preds = %sw.bb
  br label %if.end11, !dbg !3577

land.lhs.true8:                                   ; preds = %sw.bb
  %name = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 1, !dbg !3578
  %5 = bitcast void (i8*)** %name to i8**, !dbg !3578
  %6 = load i8*, i8** %5, align 8, !dbg !3578
  %call = tail call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3579
  %cmp9 = icmp eq i32 %call, 0, !dbg !3580
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3581

if.then10:                                        ; preds = %land.lhs.true8
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !3582
  br label %if.end11, !dbg !3583

if.end11:                                         ; preds = %sw.bb.if.end11_crit_edge, %if.then10, %land.lhs.true8
  %7 = load void (i8*, i32, %union.tree_node*)*, void (i8*, i32, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 19), align 8, !dbg !3584
  %name13 = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 1, !dbg !3585
  %8 = bitcast void (i8*)** %name13 to i8**, !dbg !3585
  %9 = load i8*, i8** %8, align 8, !dbg !3585
  %10 = load i32, i32* %flags, align 8, !dbg !3586
  %decl = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 2, !dbg !3587
  %11 = bitcast i8** %decl to %union.tree_node**, !dbg !3587
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !3587
  tail call void %7(i8* %9, i32 %10, %union.tree_node* %12) #6, !dbg !3588
  br label %sw.epilog, !dbg !3589

sw.bb18:                                          ; preds = %if.end2
  %callback = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 1, !dbg !3590
  %13 = load void (i8*)*, void (i8*)** %callback, align 8, !dbg !3590
  %data = getelementptr inbounds %union.section, %union.section* %new_section, i64 0, i32 0, i32 2, !dbg !3591
  %14 = load i8*, i8** %data, align 8, !dbg !3591
  tail call void %13(i8* %14) #6, !dbg !3592
  br label %sw.epilog, !dbg !3593

sw.bb20:                                          ; preds = %if.end2
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3594
  br label %sw.epilog, !dbg !3595

sw.epilog:                                        ; preds = %if.end2, %sw.bb20, %sw.bb18, %if.end11
  %15 = load i32, i32* %flags, align 8, !dbg !3596
  %or = or i32 %15, 1048576, !dbg !3596
  store i32 %or, i32* %flags, align 8, !dbg !3596
  br label %return, !dbg !3597

return:                                           ; preds = %entry, %sw.epilog
  ret void, !dbg !3597
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_align(i32 %align) local_unnamed_addr #5 !dbg !3598 {
entry:
  call void @llvm.dbg.value(metadata i32 %align, metadata !3602, metadata !DIExpression()), !dbg !3603
  %cmp = icmp sgt i32 %align, 8, !dbg !3604
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3606

if.then:                                          ; preds = %entry
  %div = sdiv i32 %align, 8, !dbg !3607
  %conv = sext i32 %div to i64, !dbg !3607
  %call = tail call i32 @floor_log2(i64 %conv) #6, !dbg !3607
  %cmp1 = icmp eq i32 %call, 0, !dbg !3607
  br i1 %cmp1, label %if.end8, label %if.then3, !dbg !3610

if.then3:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3607
  %call6 = tail call i32 @floor_log2(i64 %conv) #6, !dbg !3607
  %shl = shl i32 1, %call6, !dbg !3607
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !3607
  br label %if.end8, !dbg !3607

if.end8:                                          ; preds = %if.then, %if.then3, %entry
  ret void, !dbg !3611
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @assemble_integer(%struct.rtx_def* %x, i32 %size, i32 %align, i32 %force) local_unnamed_addr #5 !dbg !3612 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3616, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %size, metadata !3617, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %align, metadata !3618, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %force, metadata !3619, metadata !DIExpression()), !dbg !3633
  %mul = shl i32 %size, 3, !dbg !3634
  %0 = load i32, i32* @ix86_isa_flags, align 4, !dbg !3634
  %and = and i32 %0, 32, !dbg !3634
  %cmp = icmp eq i32 %and, 0, !dbg !3634
  %cond = select i1 %cmp, i32 128, i32 256, !dbg !3634
  %cmp1 = icmp ult i32 %mul, %cond, !dbg !3634
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !3634

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3634

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i32 [ %mul, %cond.true ], [ %cond, %cond.false ], !dbg !3634
  %cmp7 = icmp ule i32 %cond6, %align, !dbg !3635
  %conv = zext i1 %cmp7 to i32, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3620, metadata !DIExpression()), !dbg !3633
  %1 = load i8 (%struct.rtx_def*, i32, i32)*, i8 (%struct.rtx_def*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 5), align 8, !dbg !3636
  %call = tail call zeroext i8 %1(%struct.rtx_def* %x, i32 %size, i32 %conv) #6, !dbg !3638
  %tobool = icmp eq i8 %call, 0, !dbg !3638
  br i1 %tobool, label %if.end, label %cleanup64, !dbg !3639

if.end:                                           ; preds = %cond.end
  %cmp8 = icmp ugt i32 %size, 1, !dbg !3640
  br i1 %cmp8, label %if.then10, label %if.end58, !dbg !3641

if.then10:                                        ; preds = %if.end
  %cmp11 = icmp ugt i32 %size, 4, !dbg !3642
  %cond13 = select i1 %cmp11, i32 4, i32 1, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %cond13, metadata !3626, metadata !DIExpression()), !dbg !3644
  %mul14 = shl nuw nsw i32 %cond13, 3, !dbg !3645
  %cmp15 = icmp ugt i32 %mul14, %align, !dbg !3645
  %cond21 = select i1 %cmp15, i32 %align, i32 %mul14, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %cond21, metadata !3625, metadata !DIExpression()), !dbg !3644
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !3646
  %bf.load = load i32, i32* %2, align 8, !dbg !3646
  %bf.clear = and i32 %bf.load, 65535, !dbg !3646
  %cmp22 = icmp eq i32 %bf.clear, 31, !dbg !3648
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !3649

if.then24:                                        ; preds = %if.then10
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3650
  %bf.clear26 = and i32 %bf.lshr, 255, !dbg !3650
  %idxprom = zext i32 %bf.clear26 to i64, !dbg !3650
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !3650
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3650
  %conv27 = zext i8 %3 to i32, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %conv27, metadata !3628, metadata !DIExpression()), !dbg !3644
  br label %if.end28, !dbg !3651

if.end28:                                         ; preds = %if.then10, %if.then24
  %mclass.0 = phi i32 [ %conv27, %if.then24 ], [ 2, %if.then10 ], !dbg !3652
  call void @llvm.dbg.value(metadata i32 %mclass.0, metadata !3628, metadata !DIExpression()), !dbg !3644
  %call30 = tail call i32 @mode_for_size(i32 %mul14, i32 %mclass.0, i32 0) #6, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %call30, metadata !3621, metadata !DIExpression()), !dbg !3644
  %call32 = tail call i32 @mode_for_size(i32 %mul, i32 %mclass.0, i32 0) #6, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %call32, metadata !3624, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 0, metadata !3627, metadata !DIExpression()), !dbg !3644
  br label %for.cond, !dbg !3655

for.cond:                                         ; preds = %for.inc, %if.end28
  %i.0 = phi i32 [ 0, %if.end28 ], [ %add, %for.inc ], !dbg !3656
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3627, metadata !DIExpression()), !dbg !3644
  %cmp33 = icmp ult i32 %i.0, %size, !dbg !3657
  br i1 %cmp33, label %for.body, label %for.end, !dbg !3658

for.body:                                         ; preds = %for.cond
  %call35 = tail call %struct.rtx_def* @simplify_subreg(i32 %call30, %struct.rtx_def* %x, i32 %call32, i32 %i.0) #6, !dbg !3659
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call35, metadata !3629, metadata !DIExpression()), !dbg !3660
  %tobool36 = icmp eq %struct.rtx_def* %call35, null, !dbg !3661
  br i1 %tobool36, label %cleanup, label %lor.lhs.false, !dbg !3663

lor.lhs.false:                                    ; preds = %for.body
  %call37 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* nonnull %call35, i32 %cond13, i32 %cond21, i32 0) #8, !dbg !3664
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3664
  %spec.select = select i1 %tobool38, i32 2, i32 0, !dbg !3665
  br label %cleanup, !dbg !3665

cleanup:                                          ; preds = %for.body, %lor.lhs.false
  %cleanup.dest.slot.0 = phi i32 [ 2, %for.body ], [ %spec.select, %lor.lhs.false ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  %add = add i32 %i.0, %cond13, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %add, metadata !3627, metadata !DIExpression()), !dbg !3644
  br label %for.cond, !dbg !3667, !llvm.loop !3668

for.end:                                          ; preds = %cleanup, %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %cleanup ], [ %i.0, %for.cond ], !dbg !3656
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3627, metadata !DIExpression()), !dbg !3644
  %cmp41 = icmp eq i32 %i.0.lcssa, %size, !dbg !3670
  br i1 %cmp41, label %cleanup50, label %if.end44, !dbg !3672

if.end44:                                         ; preds = %for.end
  %tobool45 = icmp eq i32 %i.0.lcssa, 0, !dbg !3673
  br i1 %tobool45, label %cleanup50, label %cond.true46, !dbg !3673

cond.true46:                                      ; preds = %if.end44
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2726, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3673
  br label %cleanup50, !dbg !3673

cleanup50:                                        ; preds = %if.end44, %cond.true46, %for.end
  %cleanup.dest.slot.1 = phi i1 [ false, %for.end ], [ true, %if.end44 ], [ true, %cond.true46 ]
  br i1 %cleanup.dest.slot.1, label %if.end58, label %cleanup64

if.end58:                                         ; preds = %cleanup50, %if.end
  %tobool59 = icmp eq i32 %force, 0, !dbg !3674
  br i1 %tobool59, label %cleanup64, label %cond.true60, !dbg !3674

cond.true60:                                      ; preds = %if.end58
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3674
  br label %cleanup64, !dbg !3674

cleanup64:                                        ; preds = %if.end58, %cond.end, %cond.true60, %cleanup50
  %retval.1 = phi i8 [ 1, %cleanup50 ], [ 1, %cond.end ], [ 0, %if.end58 ], [ 0, %cond.true60 ], !dbg !3633
  ret i8 %retval.1, !dbg !3675
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @get_cdtor_priority_section(i32 %priority, i8 zeroext %constructor_p) local_unnamed_addr #5 !dbg !3676 {
entry:
  %buf = alloca [16 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %priority, metadata !3680, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i8 %constructor_p, metadata !3681, metadata !DIExpression()), !dbg !3686
  %0 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i64 0, i64 0, !dbg !3687
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3687
  call void @llvm.dbg.declare(metadata [16 x i8]* %buf, metadata !3682, metadata !DIExpression()), !dbg !3688
  %tobool = icmp eq i8 %constructor_p, 0, !dbg !3689
  %cond = select i1 %tobool, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), !dbg !3689
  %sub = sub nsw i32 65535, %priority, !dbg !3690
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i8* %cond, i32 %sub) #6, !dbg !3691
  %call2 = call %union.section* @get_section(i8* nonnull %0, i32 512, %union.tree_node* null) #8, !dbg !3692
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3693
  ret %union.section* %call2, !dbg !3694
}

; Function Attrs: nounwind uwtable
define dso_local void @default_named_section_asm_out_destructor(%struct.rtx_def* %symbol, i32 %priority) local_unnamed_addr #5 !dbg !3695 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3697, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata i32 %priority, metadata !3698, metadata !DIExpression()), !dbg !3700
  %cmp = icmp eq i32 %priority, 65535, !dbg !3701
  br i1 %cmp, label %if.else, label %if.then, !dbg !3703

if.then:                                          ; preds = %entry
  %call = tail call %union.section* @get_cdtor_priority_section(i32 %priority, i8 zeroext 0) #8, !dbg !3704
  call void @llvm.dbg.value(metadata %union.section* %call, metadata !3699, metadata !DIExpression()), !dbg !3700
  br label %if.end, !dbg !3705

if.else:                                          ; preds = %entry
  %call1 = tail call %union.section* @get_section(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i32 512, %union.tree_node* null) #8, !dbg !3706
  call void @llvm.dbg.value(metadata %union.section* %call1, metadata !3699, metadata !DIExpression()), !dbg !3700
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %sec.0 = phi %union.section* [ %call, %if.then ], [ %call1, %if.else ], !dbg !3707
  call void @llvm.dbg.value(metadata %union.section* %sec.0, metadata !3699, metadata !DIExpression()), !dbg !3700
  tail call void @assemble_addr_to_section(%struct.rtx_def* %symbol, %union.section* %sec.0) #8, !dbg !3708
  ret void, !dbg !3709
}

; Function Attrs: nounwind uwtable
define dso_local void @default_stabs_asm_out_constructor(%struct.rtx_def* %symbol, i32 %priority) local_unnamed_addr #5 !dbg !3710 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3712, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 %priority, metadata !3713, metadata !DIExpression()), !dbg !3714
  tail call void @dbxout_begin_simple_stabs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i32 22) #6, !dbg !3715
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3716
  %0 = load i8*, i8** %rt_str, align 8, !dbg !3716
  tail call void @dbxout_stab_value_label(i8* %0) #6, !dbg !3717
  ret void, !dbg !3718
}

; Function Attrs: nounwind uwtable
define dso_local void @default_named_section_asm_out_constructor(%struct.rtx_def* %symbol, i32 %priority) local_unnamed_addr #5 !dbg !3719 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !3721, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %priority, metadata !3722, metadata !DIExpression()), !dbg !3724
  %cmp = icmp eq i32 %priority, 65535, !dbg !3725
  br i1 %cmp, label %if.else, label %if.then, !dbg !3727

if.then:                                          ; preds = %entry
  %call = tail call %union.section* @get_cdtor_priority_section(i32 %priority, i8 zeroext 1) #8, !dbg !3728
  call void @llvm.dbg.value(metadata %union.section* %call, metadata !3723, metadata !DIExpression()), !dbg !3724
  br label %if.end, !dbg !3729

if.else:                                          ; preds = %entry
  %call1 = tail call %union.section* @get_section(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i32 512, %union.tree_node* null) #8, !dbg !3730
  call void @llvm.dbg.value(metadata %union.section* %call1, metadata !3723, metadata !DIExpression()), !dbg !3724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %sec.0 = phi %union.section* [ %call, %if.then ], [ %call1, %if.else ], !dbg !3731
  call void @llvm.dbg.value(metadata %union.section* %sec.0, metadata !3723, metadata !DIExpression()), !dbg !3724
  tail call void @assemble_addr_to_section(%struct.rtx_def* %symbol, %union.section* %sec.0) #8, !dbg !3732
  ret void, !dbg !3733
}

; Function Attrs: nounwind uwtable
define dso_local void @notice_global_symbol(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !3734 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3736, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8** @first_global_object_name, metadata !3737, metadata !DIExpression()), !dbg !3744
  %0 = load i8*, i8** @first_global_object_name, align 8, !dbg !3745
  %tobool = icmp eq i8* %0, null, !dbg !3745
  br i1 %tobool, label %lor.lhs.false, label %cleanup.cont, !dbg !3747

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3748
  %bf.load = load i64, i64* %1, align 8, !dbg !3748
  %bf.cast1 = and i64 %bf.load, 134217728, !dbg !3748
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !3748
  br i1 %tobool1, label %cleanup.cont, label %lor.lhs.false2, !dbg !3749

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3750
  %2 = bitcast i40* %decl_flag_1 to i64*, !dbg !3750
  %bf.load3 = load i64, i64* %2, align 8, !dbg !3750
  %bf.cast62 = and i64 %bf.load3, 33554432, !dbg !3750
  %tobool7 = icmp eq i64 %bf.cast62, 0, !dbg !3750
  br i1 %tobool7, label %lor.lhs.false8, label %cleanup.cont, !dbg !3751

lor.lhs.false8:                                   ; preds = %lor.lhs.false2
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3752
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3752
  %tobool9 = icmp eq %union.tree_node* %3, null, !dbg !3752
  br i1 %tobool9, label %cleanup.cont, label %lor.lhs.false10, !dbg !3753

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %bf.cast143 = and i64 %bf.load, 65535, !dbg !3754
  %cmp = icmp eq i64 %bf.cast143, 29, !dbg !3754
  br i1 %cmp, label %lor.lhs.false32, label %land.lhs.true, !dbg !3755

land.lhs.true:                                    ; preds = %lor.lhs.false10
  %cmp19 = icmp eq i64 %bf.cast143, 32, !dbg !3756
  br i1 %cmp19, label %lor.lhs.false20, label %cleanup.cont, !dbg !3757

lor.lhs.false20:                                  ; preds = %land.lhs.true
  %common_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3758
  %4 = bitcast i24* %common_flag to i32*, !dbg !3758
  %bf.load21 = load i32, i32* %4, align 8, !dbg !3758
  %bf.clear23 = and i32 %bf.load21, 8, !dbg !3758
  %tobool24 = icmp eq i32 %bf.clear23, 0, !dbg !3758
  br i1 %tobool24, label %lor.lhs.false32, label %land.lhs.true25, !dbg !3759

land.lhs.true25:                                  ; preds = %lor.lhs.false20
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3760
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3760
  %cmp27 = icmp eq %union.tree_node* %5, null, !dbg !3761
  br i1 %cmp27, label %cleanup.cont, label %lor.lhs.false28, !dbg !3762

lor.lhs.false28:                                  ; preds = %land.lhs.true25
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3763
  %cmp31 = icmp eq %union.tree_node* %5, %6, !dbg !3764
  br i1 %cmp31, label %cleanup.cont, label %lor.lhs.false32, !dbg !3765

lor.lhs.false32:                                  ; preds = %lor.lhs.false20, %lor.lhs.false10, %lor.lhs.false28
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3766
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3766
  %tobool33 = icmp eq %struct.rtx_def* %7, null, !dbg !3766
  br i1 %tobool33, label %cond.false, label %cond.true, !dbg !3766

cond.true:                                        ; preds = %lor.lhs.false32
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !3766
  br label %cond.end, !dbg !3766

cond.false:                                       ; preds = %lor.lhs.false32
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3766
  %.phi.trans.insert = bitcast %struct.rtx_def** %rtl to i32**, !dbg !3767
  %cond4.pre = load i32*, i32** %.phi.trans.insert, align 8, !dbg !3766
  %9 = bitcast i32* %cond4.pre to %struct.rtx_def*, !dbg !3766
  br label %cond.end, !dbg !3766

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond668 = phi %struct.rtx_def* [ %9, %cond.false ], [ %7, %cond.true ]
  %10 = phi %struct.rtx_def* [ %9, %cond.false ], [ %7, %cond.true ]
  %cond4 = phi i32* [ %cond4.pre, %cond.false ], [ %8, %cond.true ], !dbg !3766
  %bf.load38 = load i32, i32* %cond4, align 8, !dbg !3766
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !3766
  %cmp40 = icmp eq i32 %bf.clear39, 43, !dbg !3766
  br i1 %cmp40, label %if.end, label %cleanup.cont, !dbg !3768

if.end:                                           ; preds = %cond.end
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3769
  %11 = bitcast i24* %weak_flag to i32*, !dbg !3769
  %bf.load42 = load i32, i32* %11, align 8, !dbg !3769
  %12 = trunc i32 %bf.load42 to i8, !dbg !3769
  %tobool45 = icmp slt i8 %12, 0, !dbg !3769
  br i1 %tobool45, label %if.then51, label %lor.lhs.false46, !dbg !3771

lor.lhs.false46:                                  ; preds = %if.end
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !3772
  %13 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !3772
  %cmp48 = icmp ne %union.tree_node* %13, null, !dbg !3772
  %14 = load i32, i32* @flag_shlib, align 4, !dbg !3773
  %tobool50 = icmp ne i32 %14, 0, !dbg !3773
  %or.cond = or i1 %cmp48, %tobool50, !dbg !3774
  br i1 %or.cond, label %if.then51, label %if.end52, !dbg !3774

if.then51:                                        ; preds = %lor.lhs.false46, %if.end
  call void @llvm.dbg.value(metadata i8** @weak_global_object_name, metadata !3737, metadata !DIExpression()), !dbg !3744
  br label %if.end52, !dbg !3775

if.end52:                                         ; preds = %lor.lhs.false46, %if.then51
  %type.0 = phi i8** [ @weak_global_object_name, %if.then51 ], [ @first_global_object_name, %lor.lhs.false46 ], !dbg !3744
  call void @llvm.dbg.value(metadata i8** %type.0, metadata !3737, metadata !DIExpression()), !dbg !3744
  %15 = load i8*, i8** %type.0, align 8, !dbg !3776
  %tobool53 = icmp eq i8* %15, null, !dbg !3776
  br i1 %tobool53, label %if.then54, label %cleanup.cont, !dbg !3777

if.then54:                                        ; preds = %if.end52
  %tobool58 = icmp eq %struct.rtx_def* %10, null, !dbg !3778
  br i1 %tobool58, label %cond.false62, label %cond.true59, !dbg !3778

cond.true59:                                      ; preds = %if.then54
  br label %cond.end65, !dbg !3778

cond.false62:                                     ; preds = %if.then54
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3778
  %cond66.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3778
  br label %cond.end65, !dbg !3778

cond.end65:                                       ; preds = %cond.false62, %cond.true59
  %cond66 = phi %struct.rtx_def* [ %cond66.pre, %cond.false62 ], [ %cond668, %cond.true59 ], !dbg !3778
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond66, metadata !3743, metadata !DIExpression()), !dbg !3779
  %16 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !3780
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond66, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3781
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3781
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3781
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3781
  %18 = load i8*, i8** %rt_str, align 8, !dbg !3781
  %call = tail call i8* %16(i8* %18) #6, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %call, metadata !3739, metadata !DIExpression()), !dbg !3779
  %call70 = tail call i8* @ggc_alloc_string(i8* %call, i32 -1) #6, !dbg !3783
  call void @llvm.dbg.value(metadata i8* %call70, metadata !3742, metadata !DIExpression()), !dbg !3779
  store i8* %call70, i8** %type.0, align 8, !dbg !3784
  br label %cleanup.cont, !dbg !3785

cleanup.cont:                                     ; preds = %land.lhs.true, %if.end52, %lor.lhs.false8, %lor.lhs.false2, %lor.lhs.false, %entry, %cond.end, %lor.lhs.false28, %land.lhs.true25, %cond.end65
  ret void, !dbg !3786
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_start_function(%union.tree_node* %decl, i8* %fnname) local_unnamed_addr #5 !dbg !3787 {
entry:
  %tmp_label = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3789, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !3790, metadata !DIExpression()), !dbg !3797
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %tmp_label, i64 0, i64 0, !dbg !3798
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !3798
  call void @llvm.dbg.declare(metadata [100 x i8]* %tmp_label, metadata !3792, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 0, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i8* null, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !3800
  store i8 0, i8* @first_function_block_is_cold, align 1, !dbg !3801
  %1 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !3802
  %tobool = icmp eq i32 %1, 0, !dbg !3802
  br i1 %tobool, label %if.else, label %do.body, !dbg !3804

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @const_labelno, align 4, !dbg !3805
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i32 %2) #6, !dbg !3805
  %call2 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !3808
  store i8* %call2, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !3809
  %3 = load i32, i32* @const_labelno, align 4, !dbg !3810
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i32 %3) #6, !dbg !3810
  %call9 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !3812
  store i8* %call9, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 1), align 8, !dbg !3813
  %4 = load i32, i32* @const_labelno, align 4, !dbg !3814
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i32 %4) #6, !dbg !3814
  %call16 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !3816
  store i8* %call16, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 2), align 8, !dbg !3817
  %5 = load i32, i32* @const_labelno, align 4, !dbg !3818
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i32 %5) #6, !dbg !3818
  %call23 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !3820
  store i8* %call23, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 3), align 8, !dbg !3821
  %6 = load i32, i32* @const_labelno, align 4, !dbg !3822
  %inc = add nsw i32 %6, 1, !dbg !3822
  store i32 %inc, i32* @const_labelno, align 4, !dbg !3822
  br label %if.end, !dbg !3823

if.else:                                          ; preds = %entry
  store i8* null, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !3824
  store i8* null, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 1), align 8, !dbg !3826
  store i8* null, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 2), align 8, !dbg !3827
  store i8* null, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 3), align 8, !dbg !3828
  br label %if.end

if.end:                                           ; preds = %if.else, %do.body
  call void @app_disable() #6, !dbg !3829
  call fastcc void @output_constant_pool(i8* %fnname, %union.tree_node* %decl) #8, !dbg !3830
  %7 = load i32, i32* @flag_function_sections, align 4, !dbg !3832
  call void @resolve_unique_section(%union.tree_node* %decl, i32 0, i32 %7) #8, !dbg !3833
  %8 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !3834
  %tobool24 = icmp eq i32 %8, 0, !dbg !3834
  br i1 %tobool24, label %if.else42, label %if.then25, !dbg !3836

if.then25:                                        ; preds = %if.end
  %call26 = call %union.section* @unlikely_text_section() #8, !dbg !3837
  call void @switch_to_section(%union.section* %call26) #8, !dbg !3839
  %align27 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3840
  %9 = load i32, i32* %align27, align 8, !dbg !3840
  call void @assemble_align(i32 %9) #8, !dbg !3841
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3842
  %11 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 1), align 8, !dbg !3842
  call void @assemble_name(%struct._IO_FILE* %10, i8* %11) #8, !dbg !3842
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3842
  %call29 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %12) #6, !dbg !3842
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3844
  %is_thunk = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 20, !dbg !3846
  %bf.load = load i32, i32* %is_thunk, align 8, !dbg !3846
  %bf.clear = and i32 %bf.load, 1073741824, !dbg !3846
  %tobool32 = icmp eq i32 %bf.clear, 0, !dbg !3844
  br i1 %tobool32, label %land.lhs.true, label %if.end55, !dbg !3847

land.lhs.true:                                    ; preds = %if.then25
  %cfg = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !3848
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3848
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !3848
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3848
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i64 0, i32 6, !dbg !3848
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3848
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i64 0, i32 13, !dbg !3848
  %17 = load i32, i32* %flags, align 8, !dbg !3848
  %and = and i32 %17, 96, !dbg !3848
  %cmp = icmp eq i32 %and, 64, !dbg !3849
  br i1 %cmp, label %if.then34, label %if.end55, !dbg !3850

if.then34:                                        ; preds = %land.lhs.true
  %18 = load %union.section*, %union.section** @text_section, align 8, !dbg !3851
  call void @switch_to_section(%union.section* %18) #8, !dbg !3853
  %19 = load i32, i32* %align27, align 8, !dbg !3854
  call void @assemble_align(i32 %19) #8, !dbg !3855
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3856
  %21 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !3856
  call void @assemble_name(%struct._IO_FILE* %20, i8* %21) #8, !dbg !3856
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3856
  %call38 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %22) #6, !dbg !3856
  call void @llvm.dbg.value(metadata i8 1, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i8 1, i8* @first_function_block_is_cold, align 1, !dbg !3858
  br label %if.end55, !dbg !3859

if.else42:                                        ; preds = %if.end
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3860
  %23 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !3860
  %tobool43 = icmp eq %union.tree_node* %23, null, !dbg !3860
  br i1 %tobool43, label %if.end55, label %if.then44, !dbg !3862

if.then44:                                        ; preds = %if.else42
  call fastcc void @initialize_cold_section_name() #8, !dbg !3863
  %24 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !3865
  %tobool45 = icmp eq i8* %24, null, !dbg !3867
  br i1 %tobool45, label %if.end55, label %land.lhs.true46, !dbg !3868

land.lhs.true46:                                  ; preds = %if.then44
  %25 = bitcast %union.tree_node** %section_name to %struct.tree_string**, !dbg !3869
  %26 = load %struct.tree_string*, %struct.tree_string** %25, align 8, !dbg !3869
  %arraydecay49 = getelementptr inbounds %struct.tree_string, %struct.tree_string* %26, i64 0, i32 2, i64 0, !dbg !3869
  %call50 = call i32 @strcmp(i8* nonnull %arraydecay49, i8* nonnull %24) #6, !dbg !3870
  %cmp51 = icmp eq i32 %call50, 0, !dbg !3871
  br i1 %cmp51, label %if.then52, label %if.end55, !dbg !3872

if.then52:                                        ; preds = %land.lhs.true46
  store i8 1, i8* @first_function_block_is_cold, align 1, !dbg !3873
  br label %if.end55, !dbg !3874

if.end55:                                         ; preds = %if.then25, %if.then44, %if.else42, %if.then52, %land.lhs.true46, %land.lhs.true, %if.then34
  %hot_label_written.1 = phi i1 [ false, %if.then25 ], [ true, %if.then34 ], [ false, %land.lhs.true ], [ false, %if.then44 ], [ false, %land.lhs.true46 ], [ false, %if.then52 ], [ false, %if.else42 ]
  %27 = load i8, i8* @first_function_block_is_cold, align 1, !dbg !3875
  store i8 %27, i8* @in_cold_section_p, align 1, !dbg !3876
  %call56 = call %union.section* @function_section(%union.tree_node* %decl) #8, !dbg !3877
  call void @switch_to_section(%union.section* %call56) #8, !dbg !3878
  %28 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !3879
  %tobool57 = icmp eq i32 %28, 0, !dbg !3879
  %or.cond = or i1 %tobool57, %hot_label_written.1, !dbg !3881
  br i1 %or.cond, label %if.end65, label %do.body61, !dbg !3881

do.body61:                                        ; preds = %if.end55
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3882
  %30 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 0), align 8, !dbg !3882
  call void @assemble_name(%struct._IO_FILE* %29, i8* %30) #8, !dbg !3882
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3882
  %call62 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %31) #6, !dbg !3882
  br label %if.end65, !dbg !3882

if.end65:                                         ; preds = %if.end55, %do.body61
  %align67 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3884
  %32 = load i32, i32* %align67, align 8, !dbg !3884
  %div = lshr i32 %32, 3, !dbg !3885
  %conv = zext i32 %div to i64, !dbg !3884
  %call68 = call i32 @floor_log2(i64 %conv) #6, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %call68, metadata !3791, metadata !DIExpression()), !dbg !3797
  %cmp69 = icmp sgt i32 %call68, 0, !dbg !3887
  br i1 %cmp69, label %if.then74, label %if.end77, !dbg !3889

if.then74:                                        ; preds = %if.end65
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3890
  %shl = shl i32 1, %call68, !dbg !3890
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !3890
  br label %if.end77, !dbg !3893

if.end77:                                         ; preds = %if.then74, %if.end65
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3894
  %bf.load78 = load i64, i64* %34, align 8, !dbg !3894
  %bf.cast3 = and i64 %bf.load78, 4398046511104, !dbg !3894
  %tobool81 = icmp eq i64 %bf.cast3, 0, !dbg !3894
  %35 = load i32, i32* @align_functions_log, align 4, !dbg !3896
  %cmp83 = icmp sgt i32 %35, %call68, !dbg !3897
  %or.cond1 = and i1 %tobool81, %cmp83, !dbg !3898
  br i1 %or.cond1, label %land.lhs.true85, label %if.end120, !dbg !3898

land.lhs.true85:                                  ; preds = %if.end77
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3899
  %call87 = call zeroext i8 @optimize_function_for_speed_p(%struct.function* %36) #6, !dbg !3900
  %tobool89 = icmp ne i8 %call87, 0, !dbg !3900
  %37 = load i32, i32* @align_functions_log, align 4, !dbg !3901
  %cmp92 = icmp ne i32 %37, 0, !dbg !3901
  %or.cond2 = and i1 %tobool89, %cmp92, !dbg !3905
  br i1 %or.cond2, label %if.then94, label %if.end120, !dbg !3905

if.then94:                                        ; preds = %land.lhs.true85
  %38 = load i32, i32* @align_functions, align 4, !dbg !3906
  %cmp95 = icmp eq i32 %38, 1, !dbg !3906
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3909
  br i1 %cmp95, label %if.then97, label %if.else99, !dbg !3910

if.then97:                                        ; preds = %if.then94
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i32 %37) #6, !dbg !3906
  br label %if.end120, !dbg !3906

if.else99:                                        ; preds = %if.then94
  %sub100 = add nsw i32 %38, -1, !dbg !3911
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59, i64 0, i64 0), i32 %37, i32 %sub100) #6, !dbg !3911
  %40 = load i32, i32* @align_functions_log, align 4, !dbg !3913
  %cmp102 = icmp sgt i32 %40, 3, !dbg !3913
  br i1 %cmp102, label %land.lhs.true104, label %if.end120, !dbg !3913

land.lhs.true104:                                 ; preds = %if.else99
  %shl105 = shl i32 1, %40, !dbg !3913
  %41 = load i32, i32* @align_functions, align 4, !dbg !3913
  %cmp107 = icmp sgt i32 %shl105, %41, !dbg !3913
  br i1 %cmp107, label %land.lhs.true109, label %if.end120, !dbg !3913

land.lhs.true109:                                 ; preds = %land.lhs.true104
  %cmp111 = icmp sgt i32 %41, 7, !dbg !3913
  br i1 %cmp111, label %if.then113, label %if.end120, !dbg !3911

if.then113:                                       ; preds = %land.lhs.true109
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3913
  %call114 = call i32 @fputs(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0), %struct._IO_FILE* %42) #6, !dbg !3913
  br label %if.end120, !dbg !3913

if.end120:                                        ; preds = %if.else99, %land.lhs.true104, %land.lhs.true109, %if.then113, %if.then97, %if.end77, %land.lhs.true85
  %ignored_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3915
  %43 = bitcast i40* %ignored_flag to i64*, !dbg !3915
  %bf.load122 = load i64, i64* %43, align 8, !dbg !3915
  %bf.cast1254 = and i64 %bf.load122, 1024, !dbg !3915
  %tobool126 = icmp eq i64 %bf.cast1254, 0, !dbg !3915
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !3917

if.then127:                                       ; preds = %if.end120
  %44 = load %struct.gcc_debug_hooks*, %struct.gcc_debug_hooks** @debug_hooks, align 8, !dbg !3918
  %begin_function = getelementptr inbounds %struct.gcc_debug_hooks, %struct.gcc_debug_hooks* %44, i64 0, i32 14, !dbg !3919
  %45 = load void (%union.tree_node*)*, void (%union.tree_node*)** %begin_function, align 8, !dbg !3919
  call void %45(%union.tree_node* %decl) #6, !dbg !3920
  br label %if.end128, !dbg !3920

if.end128:                                        ; preds = %if.end120, %if.then127
  %bf.load130 = load i64, i64* %34, align 8, !dbg !3921
  %bf.cast1335 = and i64 %bf.load130, 134217728, !dbg !3921
  %tobool134 = icmp eq i64 %bf.cast1335, 0, !dbg !3921
  br i1 %tobool134, label %if.end137, label %if.then135, !dbg !3923

if.then135:                                       ; preds = %if.end128
  call void @notice_global_symbol(%union.tree_node* %decl) #8, !dbg !3924
  call fastcc void @globalize_decl(%union.tree_node* %decl) #8, !dbg !3926
  %call136 = call i32 @maybe_assemble_visibility(%union.tree_node* %decl) #8, !dbg !3927
  br label %if.end137, !dbg !3928

if.end137:                                        ; preds = %if.end128, %if.then135
  %bf.load139 = load i64, i64* %43, align 8, !dbg !3929
  %bf.cast1426 = and i64 %bf.load139, 8192, !dbg !3929
  %tobool143 = icmp eq i64 %bf.cast1426, 0, !dbg !3929
  br i1 %tobool143, label %do.body147, label %if.then144, !dbg !3931

if.then144:                                       ; preds = %if.end137
  %46 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 33), align 8, !dbg !3932
  call void %46(i8* %fnname) #6, !dbg !3933
  br label %do.body147, !dbg !3933

do.body147:                                       ; preds = %if.end137, %if.then144
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3934
  %call148 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), %struct._IO_FILE* %47) #6, !dbg !3934
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3934
  call void @assemble_name(%struct._IO_FILE* %48, i8* %fnname) #8, !dbg !3934
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3934
  %call149 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), %struct._IO_FILE* %49) #6, !dbg !3934
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3934
  %call150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0)) #6, !dbg !3934
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3934
  %call151 = call i32 @putc(i32 10, %struct._IO_FILE* %51) #6, !dbg !3934
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3937
  call void @assemble_name(%struct._IO_FILE* %52, i8* %fnname) #8, !dbg !3937
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3937
  %call155 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %53) #6, !dbg !3937
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !3939
  ret void, !dbg !3939
}

declare dso_local void @app_disable() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constant_pool(i8* %fnname, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !3940 {
entry:
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !3944, metadata !DIExpression()), !dbg !3947
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !3945, metadata !DIExpression()), !dbg !3947
  %0 = load %struct.rtx_constant_pool*, %struct.rtx_constant_pool** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 0), align 8, !dbg !3948
  call void @llvm.dbg.value(metadata %struct.rtx_constant_pool* %0, metadata !3946, metadata !DIExpression()), !dbg !3947
  tail call fastcc void @mark_constant_pool() #8, !dbg !3949
  tail call fastcc void @output_constant_pool_contents(%struct.rtx_constant_pool* %0) #8, !dbg !3950
  ret void, !dbg !3951
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_name(%struct._IO_FILE* %file, i8* %name) local_unnamed_addr #5 !dbg !3952 {
entry:
  %id = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !3956, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata i8* %name, metadata !3957, metadata !DIExpression()), !dbg !3963
  %0 = bitcast %union.tree_node** %id to i8*, !dbg !3964
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3964
  %1 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !3965
  %call = tail call i8* %1(i8* %name) #6, !dbg !3966
  call void @llvm.dbg.value(metadata i8* %call, metadata !3958, metadata !DIExpression()), !dbg !3963
  %call1 = tail call %union.tree_node* @maybe_get_identifier(i8* %call) #6, !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3959, metadata !DIExpression()), !dbg !3963
  store %union.tree_node* %call1, %union.tree_node** %id, align 8, !dbg !3968
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3959, metadata !DIExpression()), !dbg !3963
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !3969
  br i1 %tobool, label %if.end6, label %if.then, !dbg !3970

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3959, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3960, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3959, metadata !DIExpression()), !dbg !3963
  tail call void @mark_referenced(%union.tree_node* nonnull %call1) #8, !dbg !3972
  call void @llvm.dbg.value(metadata %union.tree_node** %id, metadata !3959, metadata !DIExpression(DW_OP_deref)), !dbg !3963
  %call2 = call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %id) #8, !dbg !3973
  %2 = load %union.tree_node*, %union.tree_node** %id, align 8, !dbg !3974
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3959, metadata !DIExpression()), !dbg !3963
  %cmp = icmp eq %union.tree_node* %2, %call1, !dbg !3976
  br i1 %cmp, label %if.end, label %if.then3, !dbg !3977

if.then3:                                         ; preds = %if.then
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3978
  %3 = bitcast i32* %str to i8**, !dbg !3978
  %4 = load i8*, i8** %3, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata i8* %4, metadata !3957, metadata !DIExpression()), !dbg !3963
  br label %if.end, !dbg !3979

if.end:                                           ; preds = %if.then, %if.then3
  %name.addr.0 = phi i8* [ %4, %if.then3 ], [ %name, %if.then ]
  call void @llvm.dbg.value(metadata i8* %name.addr.0, metadata !3957, metadata !DIExpression()), !dbg !3963
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3980
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3980
  %tobool5 = icmp eq %union.tree_node* %5, null, !dbg !3980
  br i1 %tobool5, label %if.end6, label %cond.true, !dbg !3980

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3980
  br label %if.end6, !dbg !3980

if.end6:                                          ; preds = %if.end, %entry, %cond.true
  %name.addr.1 = phi i8* [ %name, %entry ], [ %name.addr.0, %if.end ], [ %name.addr.0, %cond.true ]
  call void @llvm.dbg.value(metadata i8* %name.addr.1, metadata !3957, metadata !DIExpression()), !dbg !3963
  call void @assemble_name_raw(%struct._IO_FILE* %file, i8* %name.addr.1) #8, !dbg !3981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3982
  ret void, !dbg !3982
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) local_unnamed_addr #2

declare dso_local i32 @floor_log2(i64) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @globalize_decl(%union.tree_node* %decl) unnamed_addr #5 !dbg !3983 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !3985, metadata !DIExpression()), !dbg !3991
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !3992
  %0 = bitcast i24* %weak_flag to i32*, !dbg !3992
  %bf.load = load i32, i32* %0, align 8, !dbg !3992
  %1 = trunc i32 %bf.load to i8, !dbg !3992
  %tobool = icmp slt i8 %1, 0, !dbg !3992
  br i1 %tobool, label %if.then, label %if.end32, !dbg !3993

if.then:                                          ; preds = %entry
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3994
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3994
  %tobool1 = icmp eq %struct.rtx_def* %2, null, !dbg !3994
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !3994

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !3994

cond.false:                                       ; preds = %if.then
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !3994
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3994
  br label %cond.end, !dbg !3994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %2, %cond.true ], !dbg !3994
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3994
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3994
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3994
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !3994
  %4 = load i8*, i8** %rt_str, align 8, !dbg !3994
  call void @llvm.dbg.value(metadata i8* %4, metadata !3986, metadata !DIExpression()), !dbg !3995
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3996
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0), %struct._IO_FILE* %5) #6, !dbg !3996
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3996
  tail call void @assemble_name(%struct._IO_FILE* %6, i8* %4) #8, !dbg !3996
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !3996
  %call9 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %7) #6, !dbg !3996
  call void @llvm.dbg.value(metadata %union.tree_node** @weak_decls, metadata !3989, metadata !DIExpression()), !dbg !3995
  br label %for.cond, !dbg !3998

for.cond:                                         ; preds = %if.end, %cond.end
  %p.0 = phi %union.tree_node** [ @weak_decls, %cond.end ], [ %p.1, %if.end ], !dbg !4000
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !3989, metadata !DIExpression()), !dbg !3995
  %8 = load %union.tree_node*, %union.tree_node** %p.0, align 8, !dbg !4001
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3990, metadata !DIExpression()), !dbg !3995
  %tobool10 = icmp eq %union.tree_node* %8, null, !dbg !4003
  br i1 %tobool10, label %for.cond16.preheader, label %for.body, !dbg !4003

for.cond16.preheader:                             ; preds = %for.cond
  br label %for.cond16, !dbg !4004

for.body:                                         ; preds = %for.cond
  %call11 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !4006
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4009
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !4009
  %call12 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %10) #6, !dbg !4009
  %cmp = icmp eq %union.tree_node* %call11, %call12, !dbg !4010
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4011
  br i1 %cmp, label %if.then13, label %if.end, !dbg !4012

if.then13:                                        ; preds = %for.body
  %11 = bitcast %union.tree_node** %chain to i64*, !dbg !4013
  %12 = load i64, i64* %11, align 8, !dbg !4013
  %13 = bitcast %union.tree_node** %p.0 to i64*, !dbg !4014
  store i64 %12, i64* %13, align 8, !dbg !4014
  br label %if.end, !dbg !4015

if.end:                                           ; preds = %for.body, %if.then13
  %p.1 = phi %union.tree_node** [ %p.0, %if.then13 ], [ %chain, %for.body ], !dbg !4016
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1, metadata !3989, metadata !DIExpression()), !dbg !3995
  br label %for.cond, !dbg !4017, !llvm.loop !4018

for.cond16:                                       ; preds = %for.cond16.preheader, %if.end30
  %p.2 = phi %union.tree_node** [ %p.3, %if.end30 ], [ @weakref_targets, %for.cond16.preheader ], !dbg !4020
  call void @llvm.dbg.value(metadata %union.tree_node** %p.2, metadata !3989, metadata !DIExpression()), !dbg !3995
  %14 = load %union.tree_node*, %union.tree_node** %p.2, align 8, !dbg !4021
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !3990, metadata !DIExpression()), !dbg !3995
  %tobool17 = icmp eq %union.tree_node* %14, null, !dbg !4004
  br i1 %tobool17, label %return.loopexit, label %for.body18, !dbg !4004

for.body18:                                       ; preds = %for.cond16
  %call19 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !4023
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4026
  %call22 = tail call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %15) #8, !dbg !4027
  %cmp23 = icmp eq %union.tree_node* %call19, %call22, !dbg !4028
  %chain26 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4029
  br i1 %cmp23, label %if.then24, label %if.end30, !dbg !4030

if.then24:                                        ; preds = %for.body18
  %16 = bitcast %union.tree_node** %chain26 to i64*, !dbg !4031
  %17 = load i64, i64* %16, align 8, !dbg !4031
  %18 = bitcast %union.tree_node** %p.2 to i64*, !dbg !4032
  store i64 %17, i64* %18, align 8, !dbg !4032
  br label %if.end30, !dbg !4033

if.end30:                                         ; preds = %for.body18, %if.then24
  %p.3 = phi %union.tree_node** [ %p.2, %if.then24 ], [ %chain26, %for.body18 ], !dbg !4034
  call void @llvm.dbg.value(metadata %union.tree_node** %p.3, metadata !3989, metadata !DIExpression()), !dbg !3995
  br label %for.cond16, !dbg !4035, !llvm.loop !4036

if.end32:                                         ; preds = %entry
  %19 = load void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 7), align 8, !dbg !4038
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4039
  tail call void %19(%struct._IO_FILE* %20, %union.tree_node* %decl) #6, !dbg !4040
  br label %return, !dbg !4041

return.loopexit:                                  ; preds = %for.cond16
  br label %return, !dbg !4041

return:                                           ; preds = %return.loopexit, %if.end32
  ret void, !dbg !4041
}

; Function Attrs: nounwind uwtable
define dso_local i32 @maybe_assemble_visibility(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4042 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4046, metadata !DIExpression()), !dbg !4048
  %visibility = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4049
  %0 = bitcast i24* %visibility to i32*, !dbg !4049
  %bf.load = load i32, i32* %0, align 8, !dbg !4049
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !4049
  %bf.clear = and i32 %bf.lshr, 3, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !4047, metadata !DIExpression()), !dbg !4048
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !4050
  br i1 %cmp, label %cleanup, label %if.then, !dbg !4052

if.then:                                          ; preds = %entry
  %1 = load void (%union.tree_node*, i32)*, void (%union.tree_node*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 13), align 8, !dbg !4053
  tail call void %1(%union.tree_node* %decl, i32 %bf.clear) #6, !dbg !4055
  br label %cleanup, !dbg !4056

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ], !dbg !4057
  ret i32 %retval.0, !dbg !4058
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_end_function(%union.tree_node* %decl, i8* %fnname) local_unnamed_addr #5 !dbg !4059 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4061, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %fnname, metadata !4062, metadata !DIExpression()), !dbg !4066
  %0 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !4067
  %tobool = icmp eq i32 %0, 0, !dbg !4067
  br i1 %tobool, label %do.body, label %if.then, !dbg !4069

if.then:                                          ; preds = %entry
  %call = tail call %union.section* @function_section(%union.tree_node* %decl) #8, !dbg !4070
  tail call void @switch_to_section(%union.section* %call) #8, !dbg !4071
  br label %do.body, !dbg !4071

do.body:                                          ; preds = %entry, %if.then
  %1 = load i32, i32* @flag_inhibit_size_directive, align 4, !dbg !4072
  %tobool1 = icmp eq i32 %1, 0, !dbg !4072
  br i1 %tobool1, label %do.body3, label %do.end8, !dbg !4075

do.body3:                                         ; preds = %do.body
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4076
  %call4 = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), %struct._IO_FILE* %2) #6, !dbg !4076
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4076
  tail call void @assemble_name(%struct._IO_FILE* %3, i8* %fnname) #8, !dbg !4076
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4076
  %call5 = tail call i32 @fputs(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), %struct._IO_FILE* %4) #6, !dbg !4076
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4076
  tail call void @assemble_name(%struct._IO_FILE* %5, i8* %fnname) #8, !dbg !4076
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4076
  %call6 = tail call i32 @putc(i32 10, %struct._IO_FILE* %6) #6, !dbg !4076
  br label %do.end8, !dbg !4076

do.end8:                                          ; preds = %do.body, %do.body3
  %7 = load i32, i32* @flag_reorder_blocks_and_partition, align 4, !dbg !4078
  %tobool9 = icmp eq i32 %7, 0, !dbg !4078
  br i1 %tobool9, label %if.end23, label %if.then10, !dbg !4079

if.then10:                                        ; preds = %do.end8
  %8 = load %union.section*, %union.section** @in_section, align 8, !dbg !4080
  call void @llvm.dbg.value(metadata %union.section* %8, metadata !4063, metadata !DIExpression()), !dbg !4081
  %call11 = tail call %union.section* @unlikely_text_section() #8, !dbg !4082
  tail call void @switch_to_section(%union.section* %call11) #8, !dbg !4083
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4084
  %10 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 3), align 8, !dbg !4084
  tail call void @assemble_name(%struct._IO_FILE* %9, i8* %10) #8, !dbg !4084
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4084
  %call13 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %11) #6, !dbg !4084
  %12 = load i8, i8* @first_function_block_is_cold, align 1, !dbg !4086
  %tobool15 = icmp eq i8 %12, 0, !dbg !4086
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !4088

if.then16:                                        ; preds = %if.then10
  %13 = load %union.section*, %union.section** @text_section, align 8, !dbg !4089
  tail call void @switch_to_section(%union.section* %13) #8, !dbg !4090
  br label %do.body19, !dbg !4090

if.else:                                          ; preds = %if.then10
  %call17 = tail call %union.section* @function_section(%union.tree_node* %decl) #8, !dbg !4091
  tail call void @switch_to_section(%union.section* %call17) #8, !dbg !4092
  br label %do.body19

do.body19:                                        ; preds = %if.then16, %if.else
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4093
  %15 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 2), align 8, !dbg !4093
  tail call void @assemble_name(%struct._IO_FILE* %14, i8* %15) #8, !dbg !4093
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4093
  %call20 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %16) #6, !dbg !4093
  tail call void @switch_to_section(%union.section* %8) #8, !dbg !4095
  br label %if.end23, !dbg !4096

if.end23:                                         ; preds = %do.end8, %do.body19
  ret void, !dbg !4097
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_zeros(i64 %size) local_unnamed_addr #5 !dbg !4098 {
entry:
  call void @llvm.dbg.value(metadata i64 %size, metadata !4102, metadata !DIExpression()), !dbg !4106
  %0 = load i32, i32* @flag_syntax_only, align 4, !dbg !4107
  %tobool = icmp eq i32 %0, 0, !dbg !4107
  br i1 %tobool, label %if.end, label %if.end7, !dbg !4109

if.end:                                           ; preds = %entry
  %1 = load %struct.section_common*, %struct.section_common** bitcast (%union.section** @in_section to %struct.section_common**), align 8, !dbg !4110
  %flags = getelementptr inbounds %struct.section_common, %struct.section_common* %1, i64 0, i32 0, !dbg !4111
  %2 = load i32, i32* %flags, align 8, !dbg !4111
  %and = and i32 %2, 256, !dbg !4112
  %cmp = icmp eq i32 %and, 0, !dbg !4113
  br i1 %cmp, label %if.else, label %for.cond.preheader, !dbg !4114

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !4115

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i64 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !4117
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4103, metadata !DIExpression()), !dbg !4118
  %exitcond = icmp eq i64 %i.0, %size, !dbg !4119
  br i1 %exitcond, label %if.end7.loopexit, label %for.body, !dbg !4115

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4121
  %call = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %3, i32 1, i32 8, i32 1) #8, !dbg !4122
  %inc = add i64 %i.0, 1, !dbg !4123
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4103, metadata !DIExpression()), !dbg !4118
  br label %for.cond, !dbg !4124, !llvm.loop !4125

if.else:                                          ; preds = %if.end
  %cmp3 = icmp eq i64 %size, 0, !dbg !4127
  br i1 %cmp3, label %if.end7, label %if.then4, !dbg !4129

if.then4:                                         ; preds = %if.else
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4130
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 %size) #6, !dbg !4130
  br label %if.end7, !dbg !4130

if.end7.loopexit:                                 ; preds = %for.cond
  br label %if.end7, !dbg !4131

if.end7:                                          ; preds = %if.end7.loopexit, %if.else, %entry, %if.then4
  ret void, !dbg !4131
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_string(i8* %p, i32 %size) local_unnamed_addr #5 !dbg !4132 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4136, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 %size, metadata !4137, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 0, metadata !4138, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 2000, metadata !4139, metadata !DIExpression()), !dbg !4163
  br label %while.cond, !dbg !4164

while.cond:                                       ; preds = %do.end71, %entry
  %pos.0 = phi i32 [ 0, %entry ], [ %add72, %do.end71 ], !dbg !4163
  %p.addr.0 = phi i8* [ %p, %entry ], [ %add.ptr, %do.end71 ]
  call void @llvm.dbg.value(metadata i8* %p.addr.0, metadata !4136, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 %pos.0, metadata !4138, metadata !DIExpression()), !dbg !4163
  %cmp = icmp slt i32 %pos.0, %size, !dbg !4165
  br i1 %cmp, label %while.body, label %while.end, !dbg !4164

while.body:                                       ; preds = %while.cond
  %sub = sub nsw i32 %size, %pos.0, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4140, metadata !DIExpression()), !dbg !4167
  %0 = icmp slt i32 %sub, 2000, !dbg !4168
  %spec.select = select i1 %0, i32 %sub, i32 2000, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4140, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata i8* %p.addr.0, metadata !4142, metadata !DIExpression()), !dbg !4169
  %idx.ext = sext i32 %spec.select to i64, !dbg !4170
  %add.ptr = getelementptr inbounds i8, i8* %p.addr.0, i64 %idx.ext, !dbg !4170
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4144, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* null, metadata !4145, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 0, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %for.cond, !dbg !4170

for.cond:                                         ; preds = %for.inc62, %while.body
  %last_null.0 = phi i8* [ null, %while.body ], [ %last_null.1, %for.inc62 ], !dbg !4169
  %bytes_in_chunk.0 = phi i32 [ 0, %while.body ], [ %bytes_in_chunk.4, %for.inc62 ], !dbg !4169
  %_ascii_bytes.0 = phi i8* [ %p.addr.0, %while.body ], [ %incdec.ptr63, %for.inc62 ], !dbg !4169
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.0, metadata !4142, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0, metadata !4146, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* %last_null.0, metadata !4145, metadata !DIExpression()), !dbg !4169
  %cmp2 = icmp ult i8* %_ascii_bytes.0, %add.ptr, !dbg !4171
  br i1 %cmp2, label %for.body, label %for.end64, !dbg !4172

for.body:                                         ; preds = %for.cond
  %cmp4 = icmp ugt i32 %bytes_in_chunk.0, 59, !dbg !4173
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4175

if.then5:                                         ; preds = %for.body
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4176
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4176
  call void @llvm.dbg.value(metadata i32 0, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %if.end6, !dbg !4176

if.end6:                                          ; preds = %if.then5, %for.body
  %bytes_in_chunk.1 = phi i32 [ 0, %if.then5 ], [ %bytes_in_chunk.0, %for.body ], !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.1, metadata !4146, metadata !DIExpression()), !dbg !4169
  %cmp7 = icmp ugt i8* %_ascii_bytes.0, %last_null.0, !dbg !4178
  br i1 %cmp7, label %for.cond9.preheader, label %if.end14, !dbg !4175

for.cond9.preheader:                              ; preds = %if.end6
  br label %for.cond9, !dbg !4180

for.cond9:                                        ; preds = %for.cond9.preheader, %for.inc
  %p3.0 = phi i8* [ %incdec.ptr, %for.inc ], [ %_ascii_bytes.0, %for.cond9.preheader ], !dbg !4183
  call void @llvm.dbg.value(metadata i8* %p3.0, metadata !4147, metadata !DIExpression()), !dbg !4184
  %cmp10 = icmp ult i8* %p3.0, %add.ptr, !dbg !4185
  br i1 %cmp10, label %land.rhs, label %if.end14.loopexit, !dbg !4185

land.rhs:                                         ; preds = %for.cond9
  %2 = load i8, i8* %p3.0, align 1, !dbg !4185
  %cmp11 = icmp eq i8 %2, 0, !dbg !4185
  br i1 %cmp11, label %if.end14.loopexit, label %for.inc, !dbg !4180

for.inc:                                          ; preds = %land.rhs
  %incdec.ptr = getelementptr inbounds i8, i8* %p3.0, i64 1, !dbg !4185
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !4147, metadata !DIExpression()), !dbg !4184
  br label %for.cond9, !dbg !4185, !llvm.loop !4187

if.end14.loopexit:                                ; preds = %for.cond9, %land.rhs
  %p3.0.lcssa = phi i8* [ %p3.0, %for.cond9 ], [ %p3.0, %land.rhs ], !dbg !4183
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %p3.0.lcssa, metadata !4147, metadata !DIExpression()), !dbg !4184
  br label %if.end14, !dbg !4188

if.end14:                                         ; preds = %if.end14.loopexit, %if.end6
  %last_null.1 = phi i8* [ %last_null.0, %if.end6 ], [ %p3.0.lcssa, %if.end14.loopexit ], !dbg !4169
  call void @llvm.dbg.value(metadata i8* %last_null.1, metadata !4147, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %last_null.1, metadata !4145, metadata !DIExpression()), !dbg !4169
  %cmp15 = icmp ult i8* %last_null.1, %add.ptr, !dbg !4188
  br i1 %cmp15, label %land.lhs.true, label %if.else40, !dbg !4188

land.lhs.true:                                    ; preds = %if.end14
  %sub.ptr.lhs.cast = ptrtoint i8* %last_null.1 to i64, !dbg !4188
  %sub.ptr.rhs.cast = ptrtoint i8* %_ascii_bytes.0 to i64, !dbg !4188
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4188
  %cmp17 = icmp slt i64 %sub.ptr.sub, 257, !dbg !4188
  br i1 %cmp17, label %if.then19, label %if.else40, !dbg !4175

if.then19:                                        ; preds = %land.lhs.true
  %cmp20 = icmp eq i32 %bytes_in_chunk.1, 0, !dbg !4189
  br i1 %cmp20, label %do.body25, label %if.then22, !dbg !4191

if.then22:                                        ; preds = %if.then19
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4192
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4192
  call void @llvm.dbg.value(metadata i32 0, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %do.body25, !dbg !4192

do.body25:                                        ; preds = %if.then19, %if.then22
  call void @llvm.dbg.value(metadata i32 0, metadata !4146, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.0, metadata !4151, metadata !DIExpression()), !dbg !4194
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4195
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !4195
  br label %for.cond27, !dbg !4195

for.cond27:                                       ; preds = %for.inc36, %do.body25
  %_limited_str.0 = phi i8* [ %_ascii_bytes.0, %do.body25 ], [ %incdec.ptr37, %for.inc36 ], !dbg !4194
  call void @llvm.dbg.value(metadata i8* %_limited_str.0, metadata !4151, metadata !DIExpression()), !dbg !4194
  %5 = load i8, i8* %_limited_str.0, align 1, !dbg !4196
  %conv28 = zext i8 %5 to i32, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %conv28, metadata !4155, metadata !DIExpression()), !dbg !4194
  %tobool = icmp eq i8 %5, 0, !dbg !4197
  br i1 %tobool, label %for.end38, label %for.body29, !dbg !4197

for.body29:                                       ; preds = %for.cond27
  %idxprom = zext i8 %5 to i64, !dbg !4198
  %arrayidx = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom, !dbg !4198
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4198
  %conv30 = sext i8 %6 to i32, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %conv30, metadata !4156, metadata !DIExpression()), !dbg !4199
  switch i32 %conv30, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb32
  ], !dbg !4198

sw.bb:                                            ; preds = %for.body29
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4200
  %call31 = tail call i32 @putc(i32 %conv28, %struct._IO_FILE* %7) #6, !dbg !4200
  br label %for.inc36, !dbg !4200

sw.bb32:                                          ; preds = %for.body29
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4200
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv28) #6, !dbg !4200
  br label %for.inc36, !dbg !4200

sw.default:                                       ; preds = %for.body29
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4200
  %call34 = tail call i32 @putc(i32 92, %struct._IO_FILE* %9) #6, !dbg !4200
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4200
  %call35 = tail call i32 @putc(i32 %conv30, %struct._IO_FILE* %10) #6, !dbg !4200
  br label %for.inc36, !dbg !4200

for.inc36:                                        ; preds = %sw.bb, %sw.bb32, %sw.default
  %incdec.ptr37 = getelementptr inbounds i8, i8* %_limited_str.0, i64 1, !dbg !4196
  call void @llvm.dbg.value(metadata i8* %incdec.ptr37, metadata !4151, metadata !DIExpression()), !dbg !4194
  br label %for.cond27, !dbg !4196, !llvm.loop !4202

for.end38:                                        ; preds = %for.cond27
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4195
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4195
  call void @llvm.dbg.value(metadata i8* %last_null.1, metadata !4142, metadata !DIExpression()), !dbg !4169
  br label %for.inc62, !dbg !4191

if.else40:                                        ; preds = %land.lhs.true, %if.end14
  %cmp43 = icmp eq i32 %bytes_in_chunk.1, 0, !dbg !4203
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !4205

if.then45:                                        ; preds = %if.else40
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4203
  %call46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !4203
  br label %if.end47, !dbg !4203

if.end47:                                         ; preds = %if.then45, %if.else40
  %13 = load i8, i8* %_ascii_bytes.0, align 1, !dbg !4205
  %conv48 = zext i8 %13 to i32, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %conv48, metadata !4162, metadata !DIExpression()), !dbg !4206
  %idxprom49 = zext i8 %13 to i64, !dbg !4205
  %arrayidx50 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom49, !dbg !4205
  %14 = load i8, i8* %arrayidx50, align 1, !dbg !4205
  %conv51 = sext i8 %14 to i32, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %conv51, metadata !4160, metadata !DIExpression()), !dbg !4206
  switch i32 %conv51, label %sw.default56 [
    i32 0, label %sw.bb52
    i32 1, label %sw.bb54
  ], !dbg !4205

sw.bb52:                                          ; preds = %if.end47
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4207
  %call53 = tail call i32 @putc(i32 %conv48, %struct._IO_FILE* %15) #6, !dbg !4207
  %inc = add i32 %bytes_in_chunk.1, 1, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %for.inc62, !dbg !4207

sw.bb54:                                          ; preds = %if.end47
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4207
  %call55 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv48) #6, !dbg !4207
  %add = add i32 %bytes_in_chunk.1, 4, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %add, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %for.inc62, !dbg !4207

sw.default56:                                     ; preds = %if.end47
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4207
  %call57 = tail call i32 @putc(i32 92, %struct._IO_FILE* %17) #6, !dbg !4207
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4207
  %call58 = tail call i32 @putc(i32 %conv51, %struct._IO_FILE* %18) #6, !dbg !4207
  %add59 = add i32 %bytes_in_chunk.1, 2, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %add59, metadata !4146, metadata !DIExpression()), !dbg !4169
  br label %for.inc62, !dbg !4207

for.inc62:                                        ; preds = %for.end38, %sw.default56, %sw.bb54, %sw.bb52
  %bytes_in_chunk.4 = phi i32 [ 0, %for.end38 ], [ %add59, %sw.default56 ], [ %add, %sw.bb54 ], [ %inc, %sw.bb52 ], !dbg !4209
  %_ascii_bytes.1 = phi i8* [ %last_null.1, %for.end38 ], [ %_ascii_bytes.0, %sw.default56 ], [ %_ascii_bytes.0, %sw.bb54 ], [ %_ascii_bytes.0, %sw.bb52 ], !dbg !4169
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.1, metadata !4142, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.4, metadata !4146, metadata !DIExpression()), !dbg !4169
  %incdec.ptr63 = getelementptr inbounds i8, i8* %_ascii_bytes.1, i64 1, !dbg !4171
  call void @llvm.dbg.value(metadata i8* %incdec.ptr63, metadata !4142, metadata !DIExpression()), !dbg !4169
  br label %for.cond, !dbg !4171, !llvm.loop !4210

for.end64:                                        ; preds = %for.cond
  %bytes_in_chunk.0.lcssa = phi i32 [ %bytes_in_chunk.0, %for.cond ], !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !4146, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !4146, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !4146, metadata !DIExpression()), !dbg !4169
  %cmp65 = icmp eq i32 %bytes_in_chunk.0.lcssa, 0, !dbg !4211
  br i1 %cmp65, label %do.end71, label %if.then67, !dbg !4170

if.then67:                                        ; preds = %for.end64
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4211
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !4211
  br label %do.end71, !dbg !4211

do.end71:                                         ; preds = %for.end64, %if.then67
  %add72 = add nsw i32 %pos.0, %spec.select, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %add72, metadata !4138, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4136, metadata !DIExpression()), !dbg !4163
  br label %while.cond, !dbg !4164, !llvm.loop !4214

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4216
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @default_emutls_var_init(%union.tree_node* %to, %union.tree_node* %decl, %union.tree_node* %proxy) local_unnamed_addr #5 !dbg !4217 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %to, metadata !4221, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4222, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.value(metadata %union.tree_node* %proxy, metadata !4223, metadata !DIExpression()), !dbg !4229
  %call = tail call fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 4) #8, !dbg !4230
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %call, metadata !4224, metadata !DIExpression()), !dbg !4229
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %to, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4231
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !4231
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4227, metadata !DIExpression()), !dbg !4229
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4232
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !4232
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !4232
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4228, metadata !DIExpression()), !dbg !4229
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %call, i64 0, i32 0, !dbg !4233
  %call3 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4233
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call3, metadata !4225, metadata !DIExpression()), !dbg !4229
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call3, i64 0, i32 0, !dbg !4234
  store %union.tree_node* %2, %union.tree_node** %index, align 8, !dbg !4235
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4236
  %3 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !4236
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4236
  %4 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4236
  %call6 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %3, %union.tree_node* %4) #6, !dbg !4236
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call3, i64 0, i32 1, !dbg !4237
  store %union.tree_node* %call6, %union.tree_node** %value, align 8, !dbg !4238
  %call13 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call13, metadata !4225, metadata !DIExpression()), !dbg !4229
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4240
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4240
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4228, metadata !DIExpression()), !dbg !4229
  %index15 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call13, i64 0, i32 0, !dbg !4241
  store %union.tree_node* %5, %union.tree_node** %index15, align 8, !dbg !4242
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4243
  %6 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !4243
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4244
  %7 = load i32, i32* %align, align 8, !dbg !4244
  %div = lshr i32 %7, 3, !dbg !4244
  %conv = zext i32 %div to i64, !dbg !4244
  %call19 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %6, i64 %conv) #6, !dbg !4245
  %value20 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call13, i64 0, i32 1, !dbg !4246
  store %union.tree_node* %call19, %union.tree_node** %value20, align 8, !dbg !4247
  %call27 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4248
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call27, metadata !4225, metadata !DIExpression()), !dbg !4229
  %chain29 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4249
  %8 = load %union.tree_node*, %union.tree_node** %chain29, align 8, !dbg !4249
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4228, metadata !DIExpression()), !dbg !4229
  %index30 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 0, !dbg !4250
  store %union.tree_node* %8, %union.tree_node** %index30, align 8, !dbg !4251
  %9 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16) to i64*), align 16, !dbg !4252
  %value31 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call27, i64 0, i32 1, !dbg !4253
  %10 = bitcast %union.tree_node** %value31 to i64*, !dbg !4254
  store i64 %9, i64* %10, align 8, !dbg !4254
  %call38 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base, %struct.constructor_elt_d* null) #8, !dbg !4255
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call38, metadata !4225, metadata !DIExpression()), !dbg !4229
  %chain40 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4256
  %11 = bitcast %union.tree_node** %chain40 to i64*, !dbg !4256
  %12 = load i64, i64* %11, align 8, !dbg !4256
  %13 = bitcast %struct.constructor_elt_d* %call38 to i64*, !dbg !4257
  store i64 %12, i64* %13, align 8, !dbg !4257
  %value42 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call38, i64 0, i32 1, !dbg !4258
  store %union.tree_node* %proxy, %union.tree_node** %value42, align 8, !dbg !4259
  %call43 = tail call %union.tree_node* @build_constructor(%union.tree_node* %0, %struct.VEC_constructor_elt_gc* %call) #6, !dbg !4260
  ret %union.tree_node* %call43, !dbg !4261
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4262 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4266, metadata !DIExpression()), !dbg !4267
  %call = tail call i8* @vec_gc_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 16) #6, !dbg !4268
  %0 = bitcast i8* %call to %struct.VEC_constructor_elt_gc*, !dbg !4268
  ret %struct.VEC_constructor_elt_gc* %0, !dbg !4268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !4269 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !4276, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !4277, metadata !DIExpression()), !dbg !4279
  %num1 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !4280
  %0 = load i32, i32* %num1, align 8, !dbg !4280
  %inc = add i32 %0, 1, !dbg !4280
  store i32 %inc, i32* %num1, align 8, !dbg !4280
  %idxprom = zext i32 %0 to i64, !dbg !4280
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4280
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %arrayidx, metadata !4278, metadata !DIExpression()), !dbg !4279
  ret %struct.constructor_elt_d* %arrayidx, !dbg !4280
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_constructor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @assemble_variable(%union.tree_node* %decl, i32 %top_level, i32 %at_end, i32 %dont_output_data) local_unnamed_addr #5 !dbg !4281 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4285, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32 %top_level, metadata !4286, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32 %at_end, metadata !4287, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32 %dont_output_data, metadata !4288, metadata !DIExpression()), !dbg !4296
  %0 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !4297
  %tobool = icmp eq i8 %0, 0, !dbg !4298
  br i1 %tobool, label %land.lhs.true, label %if.end27, !dbg !4299

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4300
  %bf.load = load i64, i64* %1, align 8, !dbg !4300
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4301
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !4301
  br i1 %cmp, label %land.lhs.true1, label %if.end27, !dbg !4302

land.lhs.true1:                                   ; preds = %land.lhs.true
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4303
  %2 = bitcast i24* %tls_model to i32*, !dbg !4303
  %bf.load2 = load i32, i32* %2, align 8, !dbg !4303
  %bf.clear3 = and i32 %bf.load2, 49152, !dbg !4303
  %cmp4 = icmp eq i32 %bf.clear3, 0, !dbg !4303
  br i1 %cmp4, label %if.end27, label %if.then, !dbg !4304

if.then:                                          ; preds = %land.lhs.true1
  %call = tail call %union.tree_node* @emutls_decl(%union.tree_node* %decl) #8, !dbg !4305
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4293, metadata !DIExpression()), !dbg !4306
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4307
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !4307
  %bf.load5 = load i64, i64* %3, align 8, !dbg !4307
  %bf.cast810 = and i64 %bf.load5, 33554432, !dbg !4307
  %tobool9 = icmp eq i64 %bf.cast810, 0, !dbg !4307
  br i1 %tobool9, label %land.lhs.true10, label %if.end27, !dbg !4309

land.lhs.true10:                                  ; preds = %if.then
  %common_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4310
  %4 = bitcast i24* %common_flag to i32*, !dbg !4310
  %bf.load12 = load i32, i32* %4, align 8, !dbg !4310
  %bf.clear14 = and i32 %bf.load12, 8, !dbg !4310
  %tobool15 = icmp eq i32 %bf.clear14, 0, !dbg !4310
  br i1 %tobool15, label %if.then22, label %lor.lhs.false, !dbg !4311

lor.lhs.false:                                    ; preds = %land.lhs.true10
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4312
  %5 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4312
  %tobool17 = icmp eq %union.tree_node* %5, null, !dbg !4312
  br i1 %tobool17, label %if.end27, label %land.lhs.true18, !dbg !4313

land.lhs.true18:                                  ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4314
  %cmp21 = icmp eq %union.tree_node* %5, %6, !dbg !4315
  br i1 %cmp21, label %if.end27, label %if.then22, !dbg !4316

if.then22:                                        ; preds = %land.lhs.true18, %land.lhs.true10
  %7 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 7), align 8, !dbg !4317
  %call23 = tail call fastcc %union.tree_node* @get_emutls_init_templ_addr(%union.tree_node* %decl) #8, !dbg !4319
  %call24 = tail call %union.tree_node* %7(%union.tree_node* %call, %union.tree_node* %decl, %union.tree_node* %call23) #6, !dbg !4320
  %initial26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4321
  store %union.tree_node* %call24, %union.tree_node** %initial26, align 8, !dbg !4322
  tail call void @record_references_in_initializer(%union.tree_node* %call, i8 zeroext 0) #6, !dbg !4323
  br label %if.end27, !dbg !4324

if.end27:                                         ; preds = %land.lhs.true18, %lor.lhs.false, %if.then, %land.lhs.true1, %entry, %if.then22, %land.lhs.true
  %decl.addr.0 = phi %union.tree_node* [ %decl, %entry ], [ %decl, %land.lhs.true1 ], [ %decl, %land.lhs.true ], [ %call, %if.then22 ], [ %call, %land.lhs.true18 ], [ %call, %lor.lhs.false ], [ %call, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.0, metadata !4285, metadata !DIExpression()), !dbg !4296
  store %union.tree_node* null, %union.tree_node** @last_assemble_variable_decl, align 8, !dbg !4325
  %decl_flag_129 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4326
  %8 = bitcast i40* %decl_flag_129 to i64*, !dbg !4326
  %bf.load30 = load i64, i64* %8, align 8, !dbg !4326
  %bf.cast332 = and i64 %bf.load30, 33554432, !dbg !4326
  %tobool34 = icmp eq i64 %bf.cast332, 0, !dbg !4326
  br i1 %tobool34, label %if.end36, label %cleanup.cont, !dbg !4328

if.end36:                                         ; preds = %if.end27
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4329
  %bf.load38 = load i64, i64* %9, align 8, !dbg !4329
  %bf.cast403 = and i64 %bf.load38, 65535, !dbg !4331
  %cmp41 = icmp eq i64 %bf.cast403, 29, !dbg !4331
  br i1 %cmp41, label %cleanup.cont, label %if.end43, !dbg !4332

if.end43:                                         ; preds = %if.end36
  %arrayidx48 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast403, i64 11, !dbg !4333
  %10 = load i8, i8* %arrayidx48, align 1, !dbg !4333
  %tobool49 = icmp eq i8 %10, 0, !dbg !4333
  br i1 %tobool49, label %if.end69, label %land.lhs.true50, !dbg !4333

land.lhs.true50:                                  ; preds = %if.end43
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4333
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4333
  %cmp51 = icmp eq %struct.rtx_def* %11, null, !dbg !4333
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 0, !dbg !4335
  br i1 %cmp51, label %if.end69, label %land.lhs.true53, !dbg !4335

land.lhs.true53:                                  ; preds = %land.lhs.true50
  br i1 false, label %cond.false, label %cond.true, !dbg !4336

cond.true:                                        ; preds = %land.lhs.true53
  %bf.load61.pre = load i32, i32* %12, align 8, !dbg !4336
  br label %cond.end, !dbg !4336

cond.false:                                       ; preds = %land.lhs.true53
  br label %cond.end, !dbg !4336

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load61 = phi i32 [ undef, %cond.false ], [ %bf.load61.pre, %cond.true ], !dbg !4336
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !4336
  %cmp63 = icmp eq i32 %bf.clear62, 37, !dbg !4336
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !4337

if.then65:                                        ; preds = %cond.end
  %bf.set = or i64 %bf.load38, 4194304, !dbg !4338
  store i64 %bf.set, i64* %9, align 8, !dbg !4338
  br label %cleanup.cont, !dbg !4340

if.end69:                                         ; preds = %land.lhs.true50, %if.end43, %cond.end
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4341
  %13 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4341
  %cmp71 = icmp eq %union.tree_node* %13, null, !dbg !4343
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !4344

if.then73:                                        ; preds = %if.end69
  tail call void @layout_decl(%union.tree_node* %decl.addr.0, i32 0) #6, !dbg !4345
  br label %if.end74, !dbg !4345

if.end74:                                         ; preds = %if.then73, %if.end69
  %tobool75 = icmp eq i32 %dont_output_data, 0, !dbg !4346
  br i1 %tobool75, label %land.lhs.true76, label %if.end86, !dbg !4348

land.lhs.true76:                                  ; preds = %if.end74
  %14 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4349
  %cmp79 = icmp eq %union.tree_node* %14, null, !dbg !4350
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !4351

if.then81:                                        ; preds = %land.lhs.true76
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i64 0, i64 0), %union.tree_node* %decl.addr.0) #6, !dbg !4352
  %bf.load83 = load i64, i64* %9, align 8, !dbg !4354
  %bf.set85 = or i64 %bf.load83, 4194304, !dbg !4354
  store i64 %bf.set85, i64* %9, align 8, !dbg !4354
  br label %cleanup.cont, !dbg !4355

if.end86:                                         ; preds = %if.end74, %land.lhs.true76
  %bf.load88 = load i64, i64* %9, align 8, !dbg !4356
  %bf.cast914 = and i64 %bf.load88, 4194304, !dbg !4356
  %tobool92 = icmp eq i64 %bf.cast914, 0, !dbg !4356
  br i1 %tobool92, label %if.end94, label %cleanup.cont, !dbg !4358

if.end94:                                         ; preds = %if.end86
  %rtl96 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4359
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rtl96, align 8, !dbg !4359
  %tobool97 = icmp eq %struct.rtx_def* %15, null, !dbg !4359
  br i1 %tobool97, label %cond.false101, label %cond.true98, !dbg !4359

cond.true98:                                      ; preds = %if.end94
  br label %cond.end104, !dbg !4359

cond.false101:                                    ; preds = %if.end94
  tail call void @make_decl_rtl(%union.tree_node* %decl.addr.0) #8, !dbg !4359
  %cond105.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl96, align 8, !dbg !4359
  %bf.load107.pre = load i64, i64* %9, align 8, !dbg !4360
  br label %cond.end104, !dbg !4359

cond.end104:                                      ; preds = %cond.false101, %cond.true98
  %bf.load107 = phi i64 [ %bf.load107.pre, %cond.false101 ], [ %bf.load88, %cond.true98 ], !dbg !4360
  %cond105 = phi %struct.rtx_def* [ %cond105.pre, %cond.false101 ], [ %15, %cond.true98 ], !dbg !4359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond105, metadata !4290, metadata !DIExpression()), !dbg !4296
  %bf.set109 = or i64 %bf.load107, 4194304, !dbg !4360
  store i64 %bf.set109, i64* %9, align 8, !dbg !4360
  %16 = load i32, i32* @flag_syntax_only, align 4, !dbg !4361
  %tobool110 = icmp eq i32 %16, 0, !dbg !4361
  br i1 %tobool110, label %if.end112, label %cleanup.cont, !dbg !4363

if.end112:                                        ; preds = %cond.end104
  tail call void @app_disable() #6, !dbg !4364
  br i1 %tobool75, label %land.lhs.true114, label %if.end119, !dbg !4365

land.lhs.true114:                                 ; preds = %if.end112
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4367
  %17 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4367
  %call116 = tail call i32 @host_integerp(%union.tree_node* %17, i32 1) #6, !dbg !4368
  %tobool117 = icmp eq i32 %call116, 0, !dbg !4368
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !4369

if.then118:                                       ; preds = %land.lhs.true114
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0), %union.tree_node* %decl.addr.0) #6, !dbg !4370
  br label %cleanup.cont, !dbg !4372

if.end119:                                        ; preds = %land.lhs.true114, %if.end112
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond105, i64 0, i32 0, !dbg !4373
  %bf.load120 = load i32, i32* %18, align 8, !dbg !4373
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !4373
  %cmp122 = icmp eq i32 %bf.clear121, 43, !dbg !4373
  br i1 %cmp122, label %cond.end126, label %cond.true124, !dbg !4373

cond.true124:                                     ; preds = %if.end119
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4373
  br label %cond.end126, !dbg !4373

cond.end126:                                      ; preds = %if.end119, %cond.true124
  %arrayidx128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond105, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4374
  %19 = bitcast %union.rtunion_def* %arrayidx128 to i32**, !dbg !4374
  %20 = load i32*, i32** %19, align 8, !dbg !4374
  %bf.load129 = load i32, i32* %20, align 8, !dbg !4374
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !4374
  %cmp131 = icmp eq i32 %bf.clear130, 45, !dbg !4374
  br i1 %cmp131, label %cond.end126.cond.end135_crit_edge, label %cond.true133, !dbg !4374

cond.end126.cond.end135_crit_edge:                ; preds = %cond.end126
  %21 = bitcast i32* %20 to %struct.rtx_def*, !dbg !4374
  br label %cond.end135, !dbg !4374

cond.true133:                                     ; preds = %cond.end126
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4374
  %rt_rtx140.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**, !dbg !4296
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140.phi.trans.insert, align 8, !dbg !4375
  br label %cond.end135, !dbg !4374

cond.end135:                                      ; preds = %cond.end126.cond.end135_crit_edge, %cond.true133
  %22 = phi %struct.rtx_def* [ %21, %cond.end126.cond.end135_crit_edge ], [ %.pre, %cond.true133 ], !dbg !4375
  call void @llvm.dbg.value(metadata %struct.rtx_def* %22, metadata !4291, metadata !DIExpression()), !dbg !4296
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !4376
  %23 = load i8*, i8** %rt_str, align 8, !dbg !4376
  call void @llvm.dbg.value(metadata i8* %23, metadata !4289, metadata !DIExpression()), !dbg !4296
  %bf.load145 = load i64, i64* %9, align 8, !dbg !4377
  %bf.cast1485 = and i64 %bf.load145, 134217728, !dbg !4377
  %tobool149 = icmp eq i64 %bf.cast1485, 0, !dbg !4377
  br i1 %tobool149, label %if.end154, label %land.lhs.true150, !dbg !4379

land.lhs.true150:                                 ; preds = %cond.end135
  %name151 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4380
  %24 = load %union.tree_node*, %union.tree_node** %name151, align 8, !dbg !4380
  %tobool152 = icmp eq %union.tree_node* %24, null, !dbg !4380
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !4381

if.then153:                                       ; preds = %land.lhs.true150
  tail call void @notice_global_symbol(%union.tree_node* %decl.addr.0) #8, !dbg !4382
  br label %if.end154, !dbg !4382

if.end154:                                        ; preds = %land.lhs.true150, %cond.end135, %if.then153
  %conv155 = trunc i32 %dont_output_data to i8, !dbg !4383
  tail call void @align_variable(%union.tree_node* %decl.addr.0, i8 zeroext %conv155) #8, !dbg !4384
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4385
  %25 = load i32, i32* %align, align 8, !dbg !4385
  tail call void @set_mem_align(%struct.rtx_def* %cond105, i32 %25) #6, !dbg !4386
  %bf.load158 = load i64, i64* %9, align 8, !dbg !4387
  %bf.cast1616 = and i64 %bf.load158, 134217728, !dbg !4387
  %tobool162 = icmp eq i64 %bf.cast1616, 0, !dbg !4387
  br i1 %tobool162, label %if.end165, label %if.then163, !dbg !4389

if.then163:                                       ; preds = %if.end154
  %call164 = tail call i32 @maybe_assemble_visibility(%union.tree_node* %decl.addr.0) #8, !dbg !4390
  br label %if.end165, !dbg !4390

if.end165:                                        ; preds = %if.end154, %if.then163
  %bf.load167 = load i64, i64* %8, align 8, !dbg !4391
  %bf.cast1707 = and i64 %bf.load167, 8192, !dbg !4391
  %tobool171 = icmp eq i64 %bf.cast1707, 0, !dbg !4391
  br i1 %tobool171, label %if.end173, label %if.then172, !dbg !4393

if.then172:                                       ; preds = %if.end165
  %26 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 33), align 8, !dbg !4394
  tail call void %26(i8* %23) #6, !dbg !4395
  br label %if.end173, !dbg !4395

if.end173:                                        ; preds = %if.end165, %if.then172
  %call174 = tail call fastcc %union.section* @get_variable_section(%union.tree_node* %decl.addr.0, i8 zeroext 0) #8, !dbg !4396
  call void @llvm.dbg.value(metadata %union.section* %call174, metadata !4292, metadata !DIExpression()), !dbg !4296
  %bf.load176 = load i64, i64* %9, align 8, !dbg !4397
  %bf.cast1798 = and i64 %bf.load176, 134217728, !dbg !4397
  %tobool180 = icmp eq i64 %bf.cast1798, 0, !dbg !4397
  br i1 %tobool180, label %if.end185, label %land.lhs.true181, !dbg !4399

land.lhs.true181:                                 ; preds = %if.end173
  %flags = getelementptr inbounds %union.section, %union.section* %call174, i64 0, i32 0, i32 0, i32 0, !dbg !4400
  %27 = load i32, i32* %flags, align 8, !dbg !4400
  %and = and i32 %27, 8388608, !dbg !4401
  %cmp182 = icmp eq i32 %and, 0, !dbg !4402
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !4403

if.then184:                                       ; preds = %land.lhs.true181
  tail call fastcc void @globalize_decl(%union.tree_node* %decl.addr.0) #8, !dbg !4404
  br label %if.end185, !dbg !4404

if.end185:                                        ; preds = %if.end173, %if.then184, %land.lhs.true181
  %initial187 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4405
  %28 = load %union.tree_node*, %union.tree_node** %initial187, align 8, !dbg !4405
  %tobool188 = icmp eq %union.tree_node* %28, null, !dbg !4405
  br i1 %tobool188, label %if.end197, label %land.lhs.true189, !dbg !4407

land.lhs.true189:                                 ; preds = %if.end185
  %29 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4408
  %cmp192 = icmp eq %union.tree_node* %28, %29, !dbg !4409
  br i1 %cmp192, label %if.end197, label %if.then194, !dbg !4410

if.then194:                                       ; preds = %land.lhs.true189
  tail call fastcc void @output_addressed_constants(%union.tree_node* nonnull %28) #8, !dbg !4411
  br label %if.end197, !dbg !4411

if.end197:                                        ; preds = %land.lhs.true189, %if.end185, %if.then194
  %tobool198 = icmp eq %union.section* %call174, null, !dbg !4412
  br i1 %tobool198, label %if.end210, label %land.lhs.true199, !dbg !4414

land.lhs.true199:                                 ; preds = %if.end197
  %flags201 = getelementptr inbounds %union.section, %union.section* %call174, i64 0, i32 0, i32 0, i32 0, !dbg !4415
  %30 = load i32, i32* %flags201, align 8, !dbg !4415
  %and202 = and i32 %30, 256, !dbg !4416
  %cmp203 = icmp eq i32 %and202, 0, !dbg !4417
  br i1 %cmp203, label %if.end210, label %if.then205, !dbg !4418

if.then205:                                       ; preds = %land.lhs.true199
  %in_text_section = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.0, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4419
  %31 = bitcast i24* %in_text_section to i32*, !dbg !4419
  %bf.load207 = load i32, i32* %31, align 8, !dbg !4420
  %bf.set209 = or i32 %bf.load207, 16, !dbg !4420
  store i32 %bf.set209, i32* %31, align 8, !dbg !4420
  br label %if.end210, !dbg !4419

if.end210:                                        ; preds = %land.lhs.true199, %if.end197, %if.then205
  %32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4421
  %rt_int = bitcast %union.rtunion_def* %32 to i32*, !dbg !4421
  %33 = load i32, i32* %rt_int, align 8, !dbg !4421
  %34 = trunc i32 %33 to i8, !dbg !4421
  %cmp215 = icmp slt i8 %34, 0, !dbg !4421
  br i1 %cmp215, label %land.lhs.true217, label %if.else, !dbg !4423

land.lhs.true217:                                 ; preds = %if.end210
  %block = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i64 0, i32 1, i32 0, i32 1, !dbg !4424
  %35 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !4424
  %tobool219 = icmp eq %struct.object_block* %35, null, !dbg !4424
  br i1 %tobool219, label %if.else, label %if.then220, !dbg !4425

if.then220:                                       ; preds = %land.lhs.true217
  br i1 %tobool75, label %cond.end224, label %cond.true222, !dbg !4426

cond.true222:                                     ; preds = %if.then220
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2249, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4426
  br label %cond.end224, !dbg !4426

cond.end224:                                      ; preds = %if.then220, %cond.true222
  tail call void @place_block_symbol(%struct.rtx_def* %22) #8, !dbg !4428
  br label %cleanup.cont, !dbg !4429

if.else:                                          ; preds = %land.lhs.true217, %if.end210
  %flags227 = getelementptr inbounds %union.section, %union.section* %call174, i64 0, i32 0, i32 0, i32 0, !dbg !4430
  %36 = load i32, i32* %flags227, align 8, !dbg !4430
  %and228 = and i32 %36, 6291456, !dbg !4430
  %cmp229 = icmp eq i32 %and228, 4194304, !dbg !4432
  br i1 %cmp229, label %if.then231, label %if.else232, !dbg !4433

if.then231:                                       ; preds = %if.else
  tail call fastcc void @assemble_noswitch_variable(%union.tree_node* %decl.addr.0, i8* %23, %union.section* %call174) #8, !dbg !4434
  br label %cleanup.cont, !dbg !4434

if.else232:                                       ; preds = %if.else
  tail call void @switch_to_section(%union.section* %call174) #8, !dbg !4435
  %37 = load i32, i32* %align, align 8, !dbg !4437
  %cmp235 = icmp ugt i32 %37, 8, !dbg !4439
  br i1 %cmp235, label %if.then237, label %if.end252, !dbg !4440

if.then237:                                       ; preds = %if.else232
  %div = lshr i32 %37, 3, !dbg !4441
  %conv240 = zext i32 %div to i64, !dbg !4441
  %call241 = tail call i32 @floor_log2(i64 %conv240) #6, !dbg !4441
  %cmp242 = icmp eq i32 %call241, 0, !dbg !4441
  br i1 %cmp242, label %if.end252, label %if.then244, !dbg !4443

if.then244:                                       ; preds = %if.then237
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4441
  %39 = load i32, i32* %align, align 8, !dbg !4441
  %div247 = lshr i32 %39, 3, !dbg !4441
  %conv248 = zext i32 %div247 to i64, !dbg !4441
  %call249 = tail call i32 @floor_log2(i64 %conv248) #6, !dbg !4441
  %shl = shl i32 1, %call249, !dbg !4441
  %call250 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !4441
  br label %if.end252, !dbg !4441

if.end252:                                        ; preds = %if.then237, %if.then244, %if.else232
  tail call fastcc void @assemble_variable_contents(%union.tree_node* %decl.addr.0, i8* %23, i8 zeroext %conv155) #8, !dbg !4444
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cond.end104, %if.end86, %if.end27, %if.then65, %if.then81, %if.then118, %if.end36, %if.then231, %if.end252, %cond.end224
  ret void, !dbg !4445
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_emutls_init_templ_addr(%union.tree_node* %decl) unnamed_addr #5 !dbg !4446 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4448, metadata !DIExpression()), !dbg !4454
  %0 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 1), align 8, !dbg !4455
  %tobool = icmp eq i8* %0, null, !dbg !4457
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4458

land.lhs.true:                                    ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4459
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4459
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !4459
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !4460

land.lhs.true2:                                   ; preds = %land.lhs.true
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4461
  %2 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !4461
  %tobool3 = icmp eq %union.tree_node* %2, null, !dbg !4461
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4462

if.then:                                          ; preds = %land.lhs.true2
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !4463
  br label %cleanup, !dbg !4464

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !4465
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4449, metadata !DIExpression()), !dbg !4454
  %4 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 5), align 8, !dbg !4466
  %tobool4 = icmp eq i8* %4, null, !dbg !4467
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !4468

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i8, i8* %4, align 1, !dbg !4469
  %tobool5 = icmp eq i8 %5, 0, !dbg !4469
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !4470

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %cond = select i1 %tobool4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171, i64 0, i64 0), i8* %4, !dbg !4471
  call void @llvm.dbg.value(metadata i8* %cond, metadata !4451, metadata !DIExpression()), !dbg !4472
  %call8 = tail call fastcc %union.tree_node* @prefix_name(i8* %cond, %union.tree_node* %call) #8, !dbg !4473
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !4449, metadata !DIExpression()), !dbg !4454
  br label %if.end9, !dbg !4474

if.end9:                                          ; preds = %lor.lhs.false, %if.then6
  %name.0 = phi %union.tree_node* [ %call8, %if.then6 ], [ %call, %lor.lhs.false ], !dbg !4454
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !4449, metadata !DIExpression()), !dbg !4454
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4475
  %6 = load i32, i32* %locus, align 8, !dbg !4475
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4475
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4475
  %call10 = tail call %union.tree_node* @build_decl_stat(i32 %6, i32 32, %union.tree_node* %name.0, %union.tree_node* %7) #6, !dbg !4475
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4450, metadata !DIExpression()), !dbg !4454
  %name12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4476
  %8 = bitcast %union.tree_node** %name12 to i64*, !dbg !4476
  %9 = load i64, i64* %8, align 8, !dbg !4476
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !4476
  %10 = bitcast %union.tree_node** %assembler_name to i64*, !dbg !4476
  store i64 %9, i64* %10, align 8, !dbg !4476
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4477
  %11 = bitcast i24* %tls_model to i32*, !dbg !4477
  %bf.load = load i32, i32* %11, align 8, !dbg !4478
  %bf.clear = and i32 %bf.load, -57345, !dbg !4478
  %bf.set = or i32 %bf.clear, 8192, !dbg !4478
  store i32 %bf.set, i32* %11, align 8, !dbg !4478
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4479
  %12 = bitcast i40* %artificial_flag to i64*, !dbg !4479
  %bf.load16 = load i64, i64* %12, align 8, !dbg !4480
  %bf.set18 = or i64 %bf.load16, 4096, !dbg !4480
  store i64 %bf.set18, i64* %12, align 8, !dbg !4480
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4481
  %bf.load19 = load i64, i64* %13, align 8, !dbg !4481
  %bf.cast = and i64 %bf.load19, 16777216, !dbg !4481
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4482
  %bf.load22 = load i64, i64* %14, align 8, !dbg !4483
  %bf.clear23 = and i64 %bf.load22, -17825793, !dbg !4483
  %bf.set24 = or i64 %bf.clear23, %bf.cast, !dbg !4483
  %bf.set28 = or i64 %bf.set24, 1048576, !dbg !4484
  store i64 %bf.set28, i64* %14, align 8, !dbg !4484
  %bf.set32 = or i64 %bf.load16, 5120, !dbg !4485
  store i64 %bf.set32, i64* %12, align 8, !dbg !4485
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4486
  %15 = bitcast %union.tree_node** %context to i64*, !dbg !4486
  %16 = load i64, i64* %15, align 8, !dbg !4486
  %context35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4487
  %17 = bitcast %union.tree_node** %context35 to i64*, !dbg !4488
  store i64 %16, i64* %17, align 8, !dbg !4488
  %section_name37 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4489
  %18 = bitcast %union.tree_node** %section_name37 to i64*, !dbg !4489
  %19 = load i64, i64* %18, align 8, !dbg !4489
  %section_name39 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4490
  %20 = bitcast %union.tree_node** %section_name39 to i64*, !dbg !4491
  store i64 %19, i64* %20, align 8, !dbg !4491
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4492
  %21 = bitcast i24* %weak_flag to i32*, !dbg !4492
  %bf.load41 = load i32, i32* %21, align 8, !dbg !4492
  %bf.clear43 = and i32 %bf.load41, 128, !dbg !4492
  %bf.clear49 = and i32 %bf.set, -49281, !dbg !4493
  %bf.set50 = or i32 %bf.clear49, %bf.clear43, !dbg !4493
  store i32 %bf.set50, i32* %11, align 8, !dbg !4493
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !4494
  %22 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !4494
  %cmp = icmp eq %union.tree_node* %22, null, !dbg !4494
  br i1 %cmp, label %if.else, label %if.then53, !dbg !4496

if.then53:                                        ; preds = %if.end9
  %call54 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %call10) #6, !dbg !4497
  tail call void @make_decl_one_only(%union.tree_node* %call10, %union.tree_node* %call54) #8, !dbg !4499
  %bf.load56 = load i64, i64* %13, align 8, !dbg !4500
  %bf.cast59 = and i64 %bf.load56, 67108864, !dbg !4500
  %bf.load61 = load i64, i64* %14, align 8, !dbg !4501
  %bf.clear64 = and i64 %bf.load61, -67108865, !dbg !4501
  %bf.set65 = or i64 %bf.clear64, %bf.cast59, !dbg !4501
  store i64 %bf.set65, i64* %14, align 8, !dbg !4501
  %bf.load68 = load i64, i64* %13, align 8, !dbg !4502
  %bf.cast71 = and i64 %bf.load68, 134217728, !dbg !4502
  %bf.clear76 = and i64 %bf.set65, -134217729, !dbg !4503
  %bf.set77 = or i64 %bf.clear76, %bf.cast71, !dbg !4503
  store i64 %bf.set77, i64* %14, align 8, !dbg !4503
  %bf.load80 = load i32, i32* %21, align 8, !dbg !4504
  %bf.clear82 = and i32 %bf.load80, 3072, !dbg !4504
  %bf.load85 = load i32, i32* %11, align 8, !dbg !4505
  %bf.clear88 = and i32 %bf.load85, -3073, !dbg !4505
  %bf.set89 = or i32 %bf.clear88, %bf.clear82, !dbg !4505
  store i32 %bf.set89, i32* %11, align 8, !dbg !4505
  br label %if.end94, !dbg !4506

if.else:                                          ; preds = %if.end9
  %bf.set93 = or i64 %bf.set24, 68157440, !dbg !4507
  store i64 %bf.set93, i64* %14, align 8, !dbg !4507
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then53
  %initial96 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4508
  %23 = bitcast %union.tree_node** %initial96 to i64*, !dbg !4508
  %24 = load i64, i64* %23, align 8, !dbg !4508
  %initial98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4509
  %25 = bitcast %union.tree_node** %initial98 to i64*, !dbg !4510
  store i64 %24, i64* %25, align 8, !dbg !4510
  store %union.tree_node* null, %union.tree_node** %initial96, align 8, !dbg !4511
  tail call void @varpool_finalize_decl(%union.tree_node* %call10) #6, !dbg !4512
  %call101 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %call10) #6, !dbg !4513
  br label %cleanup, !dbg !4514

cleanup:                                          ; preds = %if.end94, %if.then
  %retval.0 = phi %union.tree_node* [ %call101, %if.end94 ], [ %3, %if.then ], !dbg !4454
  ret %union.tree_node* %retval.0, !dbg !4515
}

declare dso_local void @record_references_in_initializer(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @layout_decl(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @set_mem_align(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.section* @get_variable_section(%union.tree_node* %decl, i8 zeroext %prefer_noswitch_p) unnamed_addr #5 !dbg !4516 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4520, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 %prefer_noswitch_p, metadata !4521, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 0, metadata !4522, metadata !DIExpression()), !dbg !4524
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4525
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4525
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4527
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !4528
  br i1 %cmp, label %if.end, label %if.then, !dbg !4529

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4529
  %bf.load = load i64, i64* %2, align 8, !dbg !4530
  %bf.lshr = lshr i64 %bf.load, 56, !dbg !4530
  %bf.cast = trunc i64 %bf.lshr to i32, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !4522, metadata !DIExpression()), !dbg !4524
  br label %if.end, !dbg !4531

if.end:                                           ; preds = %entry, %if.then
  %as.0 = phi i32 [ %bf.cast, %if.then ], [ 0, %entry ]
  %common_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4532
  %3 = bitcast i24* %common_flag to i32*, !dbg !4532
  %bf.load3 = load i32, i32* %3, align 8, !dbg !4532
  %bf.clear = and i32 %bf.load3, 8, !dbg !4532
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4532
  br i1 %tobool, label %if.end43, label %if.then5, !dbg !4534

if.then5:                                         ; preds = %if.end
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4535
  %4 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !4535
  %cmp7 = icmp eq %union.tree_node* %4, null, !dbg !4535
  %cmp10 = icmp eq i32 %as.0, 0, !dbg !4535
  %or.cond = and i1 %cmp7, %cmp10, !dbg !4535
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !4535

cond.true:                                        ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 1183, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4535
  %bf.load13.pre = load i32, i32* %3, align 8, !dbg !4537
  br label %cond.end, !dbg !4535

cond.end:                                         ; preds = %if.then5, %cond.true
  %bf.load21 = phi i32 [ %bf.load3, %if.then5 ], [ %bf.load13.pre, %cond.true ], !dbg !4537
  %bf.clear15 = and i32 %bf.load21, 49152, !dbg !4537
  %cmp16 = icmp eq i32 %bf.clear15, 0, !dbg !4537
  br i1 %cmp16, label %if.else, label %if.then18, !dbg !4539

if.then18:                                        ; preds = %cond.end
  %5 = load %union.section*, %union.section** @tls_comm_section, align 8, !dbg !4540
  br label %cleanup, !dbg !4541

if.else:                                          ; preds = %cond.end
  %bf.clear23 = and i32 %bf.load21, 57344, !dbg !4542
  %cmp24 = icmp ne i32 %bf.clear23, 8192, !dbg !4544
  %6 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 1), align 8, !dbg !4545
  %tobool27 = icmp ne i8* %6, null, !dbg !4546
  %or.cond1 = or i1 %cmp24, %tobool27, !dbg !4547
  br i1 %or.cond1, label %if.else29, label %if.end43, !dbg !4547

if.else29:                                        ; preds = %if.else
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4548
  %bf.load31 = load i64, i64* %7, align 8, !dbg !4548
  %bf.cast345 = and i64 %bf.load31, 134217728, !dbg !4548
  %tobool35 = icmp eq i64 %bf.cast345, 0, !dbg !4548
  br i1 %tobool35, label %if.end43, label %land.lhs.true36, !dbg !4550

land.lhs.true36:                                  ; preds = %if.else29
  %call = tail call fastcc zeroext i8 @bss_initializer_p(%union.tree_node* %decl) #8, !dbg !4551
  %tobool38 = icmp eq i8 %call, 0, !dbg !4551
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !4552

if.then39:                                        ; preds = %land.lhs.true36
  %8 = load %union.section*, %union.section** @comm_section, align 8, !dbg !4553
  br label %cleanup, !dbg !4554

if.end43:                                         ; preds = %land.lhs.true36, %if.else29, %if.end, %if.else
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4555
  %9 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4555
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4557
  %cmp44 = icmp eq %union.tree_node* %9, %10, !dbg !4558
  br i1 %cmp44, label %if.then46, label %if.else52, !dbg !4559

if.then46:                                        ; preds = %if.end43
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4560
  %call49 = tail call fastcc i32 @contains_pointers_p(%union.tree_node* %11) #8, !dbg !4561
  %tobool50 = icmp eq i32 %call49, 0, !dbg !4561
  %cond51 = select i1 %tobool50, i32 0, i32 3, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %cond51, metadata !4523, metadata !DIExpression()), !dbg !4524
  br label %if.end62, !dbg !4562

if.else52:                                        ; preds = %if.end43
  %tobool55 = icmp eq %union.tree_node* %9, null, !dbg !4563
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !4565

if.then56:                                        ; preds = %if.else52
  %call59 = tail call i32 @compute_reloc_for_constant(%union.tree_node* nonnull %9) #8, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %call59, metadata !4523, metadata !DIExpression()), !dbg !4524
  br label %if.end62, !dbg !4567

if.end62:                                         ; preds = %if.else52, %if.then56, %if.then46
  %reloc.1 = phi i32 [ %cond51, %if.then46 ], [ %call59, %if.then56 ], [ 0, %if.else52 ], !dbg !4568
  call void @llvm.dbg.value(metadata i32 %reloc.1, metadata !4523, metadata !DIExpression()), !dbg !4524
  %12 = load i32, i32* @flag_data_sections, align 4, !dbg !4569
  tail call void @resolve_unique_section(%union.tree_node* %decl, i32 %reloc.1, i32 %12) #8, !dbg !4570
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4571
  %bf.load64 = load i64, i64* %13, align 8, !dbg !4571
  %bf.cast662 = and i64 %bf.load64, 65535, !dbg !4571
  %cmp67 = icmp eq i64 %bf.cast662, 29, !dbg !4571
  br i1 %cmp67, label %land.lhs.true75, label %lor.lhs.false, !dbg !4571

lor.lhs.false:                                    ; preds = %if.end62
  %cmp73 = icmp eq i64 %bf.cast662, 32, !dbg !4571
  br i1 %cmp73, label %land.lhs.true75, label %if.end82, !dbg !4571

land.lhs.true75:                                  ; preds = %lor.lhs.false, %if.end62
  %section_name77 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4571
  %14 = load %union.tree_node*, %union.tree_node** %section_name77, align 8, !dbg !4571
  %cmp78 = icmp eq %union.tree_node* %14, null, !dbg !4571
  br i1 %cmp78, label %if.end82, label %if.then80, !dbg !4573

if.then80:                                        ; preds = %land.lhs.true75
  %call81 = tail call %union.section* @get_named_section(%union.tree_node* %decl, i8* null, i32 %reloc.1) #8, !dbg !4574
  br label %cleanup, !dbg !4575

if.end82:                                         ; preds = %land.lhs.true75, %lor.lhs.false
  %cmp84 = icmp eq i32 %as.0, 0, !dbg !4576
  br i1 %cmp84, label %land.lhs.true86, label %if.end116, !dbg !4578

land.lhs.true86:                                  ; preds = %if.end82
  %bf.load89 = load i32, i32* %3, align 8, !dbg !4579
  %bf.clear91 = and i32 %bf.load89, 49152, !dbg !4579
  %cmp92 = icmp eq i32 %bf.clear91, 0, !dbg !4579
  br i1 %cmp92, label %land.lhs.true94, label %if.end116, !dbg !4580

land.lhs.true94:                                  ; preds = %land.lhs.true86
  %tobool96 = icmp eq i8 %prefer_noswitch_p, 0, !dbg !4581
  br i1 %tobool96, label %land.lhs.true100, label %land.lhs.true97, !dbg !4582

land.lhs.true97:                                  ; preds = %land.lhs.true94
  %15 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 111), align 2, !dbg !4583
  %tobool99 = icmp eq i8 %15, 0, !dbg !4584
  br i1 %tobool99, label %land.lhs.true100, label %if.end116, !dbg !4585

land.lhs.true100:                                 ; preds = %land.lhs.true97, %land.lhs.true94
  %call101 = tail call fastcc zeroext i8 @bss_initializer_p(%union.tree_node* %decl) #8, !dbg !4586
  %tobool103 = icmp eq i8 %call101, 0, !dbg !4586
  br i1 %tobool103, label %if.end116, label %if.then104, !dbg !4587

if.then104:                                       ; preds = %land.lhs.true100
  %bf.load106 = load i64, i64* %13, align 8, !dbg !4588
  %bf.cast1094 = and i64 %bf.load106, 134217728, !dbg !4588
  %tobool110 = icmp eq i64 %bf.cast1094, 0, !dbg !4588
  br i1 %tobool110, label %if.then111, label %if.end112, !dbg !4591

if.then111:                                       ; preds = %if.then104
  %16 = load %union.section*, %union.section** @lcomm_section, align 8, !dbg !4592
  br label %cleanup, !dbg !4593

if.end112:                                        ; preds = %if.then104
  %17 = load %union.section*, %union.section** @bss_noswitch_section, align 8, !dbg !4594
  %tobool113 = icmp eq %union.section* %17, null, !dbg !4594
  br i1 %tobool113, label %if.end116, label %if.then114, !dbg !4596

if.then114:                                       ; preds = %if.end112
  br label %cleanup, !dbg !4597

if.end116:                                        ; preds = %land.lhs.true97, %if.end112, %land.lhs.true100, %land.lhs.true86, %if.end82
  %18 = load %union.section* (%union.tree_node*, i32, i64)*, %union.section* (%union.tree_node*, i32, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 21), align 8, !dbg !4598
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4599
  %19 = load i32, i32* %align, align 8, !dbg !4599
  %conv118 = zext i32 %19 to i64, !dbg !4599
  %call119 = tail call %union.section* %18(%union.tree_node* %decl, i32 %reloc.1, i64 %conv118) #6, !dbg !4600
  br label %cleanup, !dbg !4601

cleanup:                                          ; preds = %if.end116, %if.then114, %if.then111, %if.then80, %if.then39, %if.then18
  %retval.0 = phi %union.section* [ %5, %if.then18 ], [ %8, %if.then39 ], [ %call81, %if.then80 ], [ %call119, %if.end116 ], [ %17, %if.then114 ], [ %16, %if.then111 ], !dbg !4524
  ret %union.section* %retval.0, !dbg !4602
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_addressed_constants(%union.tree_node* %exp) unnamed_addr #5 !dbg !4603 {
entry:
  br label %tailrecurse, !dbg !4610

tailrecurse:                                      ; preds = %sw.bb30, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %7, %sw.bb30 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr, metadata !4605, metadata !DIExpression()), !dbg !4611
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4612
  %bf.load = load i64, i64* %0, align 8, !dbg !4612
  %1 = trunc i64 %bf.load to i16, !dbg !4612
  switch i16 %1, label %sw.epilog.loopexit3 [
    i16 121, label %sw.bb
    i16 122, label %sw.bb
    i16 63, label %sw.bb26
    i16 66, label %sw.bb26
    i16 64, label %sw.bb26
    i16 116, label %sw.bb30
    i16 113, label %sw.bb30
    i16 118, label %sw.bb30
    i16 51, label %for.cond35.preheader
  ], !dbg !4613

for.cond35.preheader:                             ; preds = %tailrecurse
  %exp.tr.lcssa10 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa10, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa10, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa10, metadata !4605, metadata !DIExpression()), !dbg !4611
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4614
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !4614
  br label %for.cond35, !dbg !4617

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse
  %exp.tr.lcssa9 = phi %union.tree_node* [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa9, metadata !4605, metadata !DIExpression()), !dbg !4611
  br label %for.cond, !dbg !4618

for.cond:                                         ; preds = %for.inc, %sw.bb
  %exp.pn = phi %union.tree_node* [ %exp.tr.lcssa9, %sw.bb ], [ %tem.0, %for.inc ]
  %tem.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4620
  %tem.0 = load %union.tree_node*, %union.tree_node** %tem.0.in, align 8, !dbg !4620
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !4606, metadata !DIExpression()), !dbg !4611
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %tem.0) #8, !dbg !4621
  %tobool = icmp eq i8 %call, 0, !dbg !4623
  br i1 %tobool, label %for.end, label %for.inc, !dbg !4623

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !4624, !llvm.loop !4625

for.end:                                          ; preds = %for.cond
  %tem.0.lcssa = phi %union.tree_node* [ %tem.0, %for.cond ], !dbg !4620
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4627
  %bf.load6 = load i64, i64* %3, align 8, !dbg !4627
  %bf.cast81 = and i64 %bf.load6, 65535, !dbg !4629
  %cmp = icmp eq i64 %bf.cast81, 33, !dbg !4629
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4630

land.lhs.true:                                    ; preds = %for.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4631
  %4 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4631
  %tobool9 = icmp eq %union.tree_node* %4, null, !dbg !4631
  br i1 %tobool9, label %if.end, label %if.then, !dbg !4632

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4606, metadata !DIExpression()), !dbg !4611
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4633
  %bf.load13.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4635
  %.pre = and i64 %bf.load13.pre, 65535, !dbg !4635
  br label %if.end, !dbg !4636

if.end:                                           ; preds = %land.lhs.true, %if.then, %for.end
  %bf.cast15.pre-phi = phi i64 [ 33, %land.lhs.true ], [ %.pre, %if.then ], [ %bf.cast81, %for.end ], !dbg !4635
  %tem.1 = phi %union.tree_node* [ %tem.0.lcssa, %land.lhs.true ], [ %4, %if.then ], [ %tem.0.lcssa, %for.end ], !dbg !4637
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.1, metadata !4606, metadata !DIExpression()), !dbg !4611
  %arrayidx16 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast15.pre-phi, !dbg !4635
  %5 = load i32, i32* %arrayidx16, align 4, !dbg !4635
  %cmp17 = icmp eq i32 %5, 1, !dbg !4635
  br i1 %cmp17, label %if.then23, label %lor.lhs.false, !dbg !4638

lor.lhs.false:                                    ; preds = %if.end
  %cmp22 = icmp eq i64 %bf.cast15.pre-phi, 51, !dbg !4639
  br i1 %cmp22, label %if.then23, label %sw.epilog, !dbg !4640

if.then23:                                        ; preds = %lor.lhs.false, %if.end
  %call24 = tail call %struct.rtx_def* @output_constant_def(%union.tree_node* %tem.1, i32 0) #8, !dbg !4641
  br label %sw.epilog, !dbg !4641

sw.bb26:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4642
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands28, i64 1, !dbg !4642
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !4642
  tail call fastcc void @output_addressed_constants(%union.tree_node* %6) #8, !dbg !4643
  br label %sw.bb30, !dbg !4643

sw.bb30:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %sw.bb26
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4644
  %7 = load %union.tree_node*, %union.tree_node** %operands32, align 8, !dbg !4644
  br label %tailrecurse, !dbg !4610

for.cond35:                                       ; preds = %for.cond35.preheader, %for.inc65
  %tem.2 = phi %union.tree_node* [ %tem.3, %for.inc65 ], [ undef, %for.cond35.preheader ]
  %idx.0 = phi i64 [ %inc, %for.inc65 ], [ 0, %for.cond35.preheader ], !dbg !4645
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !4607, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.2, metadata !4606, metadata !DIExpression()), !dbg !4611
  %8 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !4647
  %tobool36 = icmp eq %struct.VEC_constructor_elt_gc* %8, null, !dbg !4647
  br i1 %tobool36, label %cond.end, label %cond.true, !dbg !4647

cond.true:                                        ; preds = %for.cond35
  %base39 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %8, i64 0, i32 0, !dbg !4647
  br label %cond.end, !dbg !4647

cond.end:                                         ; preds = %for.cond35, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base39, %cond.true ], [ null, %for.cond35 ], !dbg !4647
  %call40 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !4647
  %conv = zext i32 %call40 to i64, !dbg !4647
  %cmp41 = icmp ult i64 %idx.0, %conv, !dbg !4647
  br i1 %cmp41, label %cond.false44, label %cond.end57, !dbg !4647

cond.false44:                                     ; preds = %cond.end
  %9 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !4647
  %tobool47 = icmp eq %struct.VEC_constructor_elt_gc* %9, null, !dbg !4647
  br i1 %tobool47, label %cond.end53, label %cond.true48, !dbg !4647

cond.true48:                                      ; preds = %cond.false44
  %base51 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %9, i64 0, i32 0, !dbg !4647
  br label %cond.end53, !dbg !4647

cond.end53:                                       ; preds = %cond.false44, %cond.true48
  %cond54 = phi %struct.VEC_constructor_elt_base* [ %base51, %cond.true48 ], [ null, %cond.false44 ], !dbg !4647
  %conv55 = trunc i64 %idx.0 to i32, !dbg !4647
  %call56 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond54, i32 %conv55) #8, !dbg !4647
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call56, i64 0, i32 1, !dbg !4647
  %10 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4647
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !4606, metadata !DIExpression()), !dbg !4611
  br label %cond.end57, !dbg !4647

cond.end57:                                       ; preds = %cond.end, %cond.end53
  %tem.3 = phi %union.tree_node* [ %10, %cond.end53 ], [ %tem.2, %cond.end ]
  %cond58 = phi i1 [ true, %cond.end53 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.3, metadata !4606, metadata !DIExpression()), !dbg !4611
  br i1 %cond58, label %for.body60, label %sw.epilog.loopexit, !dbg !4617

for.body60:                                       ; preds = %cond.end57
  %cmp61 = icmp eq %union.tree_node* %tem.3, null, !dbg !4648
  br i1 %cmp61, label %for.inc65, label %if.then63, !dbg !4650

if.then63:                                        ; preds = %for.body60
  tail call fastcc void @output_addressed_constants(%union.tree_node* nonnull %tem.3) #8, !dbg !4651
  br label %for.inc65, !dbg !4651

for.inc65:                                        ; preds = %for.body60, %if.then63
  %inc = add i64 %idx.0, 1, !dbg !4647
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4607, metadata !DIExpression()), !dbg !4646
  br label %for.cond35, !dbg !4647, !llvm.loop !4652

sw.epilog.loopexit:                               ; preds = %cond.end57
  br label %sw.epilog, !dbg !4654

sw.epilog.loopexit3:                              ; preds = %tailrecurse
  br label %sw.epilog, !dbg !4654

sw.epilog:                                        ; preds = %sw.epilog.loopexit3, %sw.epilog.loopexit, %lor.lhs.false, %if.then23
  ret void, !dbg !4654
}

; Function Attrs: nounwind uwtable
define dso_local void @place_block_symbol(%struct.rtx_def* %symbol) local_unnamed_addr #5 !dbg !4655 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !4659, metadata !DIExpression()), !dbg !4667
  %block1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 1, !dbg !4668
  %0 = load %struct.object_block*, %struct.object_block** %block1, align 8, !dbg !4668
  %tobool = icmp eq %struct.object_block* %0, null, !dbg !4668
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4668

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6856, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4668
  br label %cond.end, !dbg !4668

cond.end:                                         ; preds = %entry, %cond.true
  %offset4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 2, !dbg !4669
  %1 = load i64, i64* %offset4, align 8, !dbg !4669
  %cmp = icmp sgt i64 %1, -1, !dbg !4671
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !4672

if.end:                                           ; preds = %cond.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 0, !dbg !4673
  %bf.load = load i32, i32* %2, align 8, !dbg !4673
  %bf.clear = and i32 %bf.load, 67108864, !dbg !4673
  %tobool5 = icmp eq i32 %bf.clear, 0, !dbg !4673
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !4675

if.then6:                                         ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4676
  %rt_constant = bitcast %union.rtunion_def* %3 to %struct.constant_descriptor_rtx**, !dbg !4676
  %4 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %4, metadata !4663, metadata !DIExpression()), !dbg !4667
  %align = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %4, i64 0, i32 7, !dbg !4678
  %5 = load i32, i32* %align, align 8, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %5, metadata !4664, metadata !DIExpression()), !dbg !4667
  %mode = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %4, i64 0, i32 6, !dbg !4679
  %6 = load i32, i32* %mode, align 4, !dbg !4679
  %idxprom = zext i32 %6 to i64, !dbg !4679
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4679
  %7 = load i8, i8* %arrayidx16, align 1, !dbg !4679
  %conv17 = zext i8 %7 to i64, !dbg !4679
  call void @llvm.dbg.value(metadata i64 %conv17, metadata !4660, metadata !DIExpression()), !dbg !4667
  br label %if.end52, !dbg !4680

if.else:                                          ; preds = %if.end
  %bf.clear20 = and i32 %bf.load, 1073741824, !dbg !4681
  %tobool21 = icmp eq i32 %bf.clear20, 0, !dbg !4681
  br i1 %tobool21, label %cond.false41, label %if.then22, !dbg !4683

if.then22:                                        ; preds = %if.else
  br i1 true, label %cond.false28, label %if.then22.cond.end32_crit_edge, !dbg !4684

if.then22.cond.end32_crit_edge:                   ; preds = %if.then22
  br label %cond.end32, !dbg !4684

cond.false28:                                     ; preds = %if.then22
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4684
  %rt_tree = bitcast %union.rtunion_def* %8 to %union.tree_node**, !dbg !4684
  %9 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !4684
  br label %cond.end32, !dbg !4684

cond.end32:                                       ; preds = %if.then22.cond.end32_crit_edge, %cond.false28
  %cond33 = phi %union.tree_node* [ %9, %cond.false28 ], [ undef, %if.then22.cond.end32_crit_edge ], !dbg !4684
  call void @llvm.dbg.value(metadata %union.tree_node* %cond33, metadata !4666, metadata !DIExpression()), !dbg !4667
  %call = tail call fastcc i32 @get_constant_alignment(%union.tree_node* %cond33) #8, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %call, metadata !4664, metadata !DIExpression()), !dbg !4667
  %call34 = tail call fastcc i64 @get_constant_size(%union.tree_node* %cond33) #8, !dbg !4687
  call void @llvm.dbg.value(metadata i64 %call34, metadata !4660, metadata !DIExpression()), !dbg !4667
  br label %if.end52, !dbg !4688

cond.false41:                                     ; preds = %if.else
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4689
  %rt_tree45 = bitcast %union.rtunion_def* %10 to %union.tree_node**, !dbg !4689
  %11 = load %union.tree_node*, %union.tree_node** %rt_tree45, align 8, !dbg !4689
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4666, metadata !DIExpression()), !dbg !4667
  %align48 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4691
  %12 = load i32, i32* %align48, align 8, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %12, metadata !4664, metadata !DIExpression()), !dbg !4667
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4692
  %13 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4692
  %call50 = tail call i64 @tree_low_cst(%union.tree_node* %13, i32 1) #6, !dbg !4693
  call void @llvm.dbg.value(metadata i64 %call50, metadata !4660, metadata !DIExpression()), !dbg !4667
  br label %if.end52

if.end52:                                         ; preds = %cond.end32, %cond.false41, %if.then6
  %alignment.1 = phi i32 [ %5, %if.then6 ], [ %call, %cond.end32 ], [ %12, %cond.false41 ], !dbg !4694
  %size.1 = phi i64 [ %conv17, %if.then6 ], [ %call34, %cond.end32 ], [ %call50, %cond.false41 ], !dbg !4694
  call void @llvm.dbg.value(metadata i64 %size.1, metadata !4660, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %alignment.1, metadata !4664, metadata !DIExpression()), !dbg !4667
  %14 = load %struct.object_block*, %struct.object_block** %block1, align 8, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.object_block* %14, metadata !4665, metadata !DIExpression()), !dbg !4667
  %div = lshr i32 %alignment.1, 3, !dbg !4696
  %sub = add nsw i32 %div, -1, !dbg !4697
  %conv56 = zext i32 %sub to i64, !dbg !4698
  call void @llvm.dbg.value(metadata i64 %conv56, metadata !4661, metadata !DIExpression()), !dbg !4667
  %size57 = getelementptr inbounds %struct.object_block, %struct.object_block* %14, i64 0, i32 2, !dbg !4699
  %15 = load i64, i64* %size57, align 8, !dbg !4699
  %add = add i64 %15, %conv56, !dbg !4700
  %neg = xor i64 %conv56, -1, !dbg !4701
  %and = and i64 %add, %neg, !dbg !4702
  call void @llvm.dbg.value(metadata i64 %and, metadata !4662, metadata !DIExpression()), !dbg !4667
  store i64 %and, i64* %offset4, align 8, !dbg !4703
  %alignment61 = getelementptr inbounds %struct.object_block, %struct.object_block* %14, i64 0, i32 1, !dbg !4704
  %16 = load i32, i32* %alignment61, align 8, !dbg !4704
  %cmp62 = icmp ugt i32 %16, %alignment.1, !dbg !4704
  br i1 %cmp62, label %cond.true64, label %cond.end67, !dbg !4704

cond.true64:                                      ; preds = %if.end52
  br label %cond.end67, !dbg !4704

cond.end67:                                       ; preds = %if.end52, %cond.true64
  %cond68 = phi i32 [ %16, %cond.true64 ], [ %alignment.1, %if.end52 ], !dbg !4704
  store i32 %cond68, i32* %alignment61, align 8, !dbg !4705
  %add70 = add i64 %and, %size.1, !dbg !4706
  store i64 %add70, i64* %size57, align 8, !dbg !4707
  %objects = getelementptr inbounds %struct.object_block, %struct.object_block* %14, i64 0, i32 3, !dbg !4708
  %call72 = tail call fastcc %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** nonnull %objects, %struct.rtx_def* %symbol) #8, !dbg !4708
  br label %cleanup.cont, !dbg !4709

cleanup.cont:                                     ; preds = %cond.end67, %cond.end
  ret void, !dbg !4709
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assemble_noswitch_variable(%union.tree_node* %decl, i8* %name, %union.section* %sect) unnamed_addr #5 !dbg !4710 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4714, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %name, metadata !4715, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata %union.section* %sect, metadata !4716, metadata !DIExpression()), !dbg !4719
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4720
  %0 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4720
  %call = tail call i64 @tree_low_cst(%union.tree_node* %0, i32 1) #6, !dbg !4721
  call void @llvm.dbg.value(metadata i64 %call, metadata !4717, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i64 %call, metadata !4718, metadata !DIExpression()), !dbg !4719
  %cmp = icmp eq i64 %call, 0, !dbg !4722
  %spec.select = select i1 %cmp, i64 1, i64 %call, !dbg !4724
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !4718, metadata !DIExpression()), !dbg !4719
  %1 = load i32, i32* @ix86_isa_flags, align 4, !dbg !4725
  %and = and i32 %1, 32, !dbg !4725
  %cmp1 = icmp eq i32 %and, 0, !dbg !4725
  %sub = select i1 %cmp1, i64 15, i64 31, !dbg !4726
  %add = add i64 %spec.select, %sub, !dbg !4727
  call void @llvm.dbg.value(metadata i64 %add, metadata !4718, metadata !DIExpression()), !dbg !4719
  %div8.v = select i1 %cmp1, i64 4, i64 5, !dbg !4728
  %div8 = lshr i64 %add, %div8.v, !dbg !4728
  %div13 = select i1 %cmp1, i64 16, i64 32, !dbg !4729
  %mul = mul i64 %div8, %div13, !dbg !4730
  call void @llvm.dbg.value(metadata i64 %mul, metadata !4718, metadata !DIExpression()), !dbg !4719
  %callback = getelementptr inbounds %union.section, %union.section* %sect, i64 0, i32 0, i32 1, !dbg !4731
  %2 = bitcast void (i8*)** %callback to i8 (%union.tree_node*, i8*, i64, i64)**, !dbg !4731
  %3 = load i8 (%union.tree_node*, i8*, i64, i64)*, i8 (%union.tree_node*, i8*, i64, i64)** %2, align 8, !dbg !4731
  %call15 = tail call zeroext i8 %3(%union.tree_node* %decl, i8* %name, i64 %call, i64 %mul) #6, !dbg !4733
  %tobool = icmp eq i8 %call15, 0, !dbg !4733
  br i1 %tobool, label %land.lhs.true, label %if.end23, !dbg !4734

land.lhs.true:                                    ; preds = %entry
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4735
  %4 = load i32, i32* %align, align 8, !dbg !4735
  %div17 = lshr i32 %4, 3, !dbg !4735
  %conv18 = zext i32 %div17 to i64, !dbg !4736
  %cmp19 = icmp ult i64 %mul, %conv18, !dbg !4737
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !4738

if.then21:                                        ; preds = %land.lhs.true
  %call22 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.172, i64 0, i64 0), %union.tree_node* %decl, i64 %mul) #6, !dbg !4739
  br label %if.end23, !dbg !4739

if.end23:                                         ; preds = %entry, %if.then21, %land.lhs.true
  ret void, !dbg !4740
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assemble_variable_contents(%union.tree_node* %decl, i8* %name, i8 zeroext %dont_output_data) unnamed_addr #5 !dbg !4741 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4745, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.value(metadata i8* %name, metadata !4746, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.value(metadata i8 %dont_output_data, metadata !4747, metadata !DIExpression()), !dbg !4754
  store %union.tree_node* %decl, %union.tree_node** @last_assemble_variable_decl, align 8, !dbg !4755
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4756
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), %struct._IO_FILE* %0) #6, !dbg !4756
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4756
  tail call void @assemble_name(%struct._IO_FILE* %1, i8* %name) #8, !dbg !4756
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4756
  %call2 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), %struct._IO_FILE* %2) #6, !dbg !4756
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4756
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i64 0, i64 0)) #6, !dbg !4756
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4756
  %call4 = tail call i32 @putc(i32 10, %struct._IO_FILE* %4) #6, !dbg !4756
  store i32 0, i32* @size_directive_output, align 4, !dbg !4759
  %5 = load i32, i32* @flag_inhibit_size_directive, align 4, !dbg !4760
  %tobool = icmp eq i32 %5, 0, !dbg !4760
  %tobool5 = icmp ne %union.tree_node* %decl, null, !dbg !4760
  %or.cond = and i1 %tobool, %tobool5, !dbg !4760
  br i1 %or.cond, label %land.lhs.true6, label %do.body15, !dbg !4760

land.lhs.true6:                                   ; preds = %entry
  %size7 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4760
  %6 = load %union.tree_node*, %union.tree_node** %size7, align 8, !dbg !4760
  %tobool8 = icmp eq %union.tree_node* %6, null, !dbg !4760
  br i1 %tobool8, label %do.body15, label %if.then, !dbg !4759

if.then:                                          ; preds = %land.lhs.true6
  store i32 1, i32* @size_directive_output, align 4, !dbg !4761
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4761
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4761
  %call9 = tail call i64 @int_size_in_bytes(%union.tree_node* %7) #6, !dbg !4761
  call void @llvm.dbg.value(metadata i64 %call9, metadata !4748, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i64 %call9, metadata !4750, metadata !DIExpression()), !dbg !4763
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4764
  %call11 = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), %struct._IO_FILE* %8) #6, !dbg !4764
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4764
  tail call void @assemble_name(%struct._IO_FILE* %9, i8* %name) #8, !dbg !4764
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4764
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i64 %call9) #6, !dbg !4764
  br label %do.body15, !dbg !4761

do.body15:                                        ; preds = %land.lhs.true6, %if.then, %entry
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4765
  tail call void @assemble_name(%struct._IO_FILE* %11, i8* %name) #8, !dbg !4765
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4765
  %call16 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %12) #6, !dbg !4765
  %tobool21 = icmp eq i8 %dont_output_data, 0, !dbg !4767
  br i1 %tobool21, label %if.then22, label %if.end43, !dbg !4769

if.then22:                                        ; preds = %do.body15
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4770
  %13 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4770
  %tobool24 = icmp eq %union.tree_node* %13, null, !dbg !4770
  br i1 %tobool24, label %if.else, label %land.lhs.true25, !dbg !4773

land.lhs.true25:                                  ; preds = %if.then22
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4774
  %cmp = icmp eq %union.tree_node* %13, %14, !dbg !4775
  br i1 %cmp, label %if.else, label %land.lhs.true28, !dbg !4776

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %call31 = tail call zeroext i8 @initializer_zerop(%union.tree_node* nonnull %13) #6, !dbg !4777
  %tobool32 = icmp eq i8 %call31, 0, !dbg !4777
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !4778

if.then33:                                        ; preds = %land.lhs.true28
  %15 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4779
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4780
  %16 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !4780
  %call37 = tail call i64 @tree_low_cst(%union.tree_node* %16, i32 1) #6, !dbg !4781
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4782
  %17 = load i32, i32* %align, align 8, !dbg !4782
  tail call void @output_constant(%union.tree_node* %15, i64 %call37, i32 %17) #8, !dbg !4783
  br label %if.end43, !dbg !4783

if.else:                                          ; preds = %land.lhs.true28, %land.lhs.true25, %if.then22
  %size_unit40 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4784
  %18 = load %union.tree_node*, %union.tree_node** %size_unit40, align 8, !dbg !4784
  %call41 = tail call i64 @tree_low_cst(%union.tree_node* %18, i32 1) #6, !dbg !4785
  tail call void @assemble_zeros(i64 %call41) #8, !dbg !4786
  br label %if.end43

if.end43:                                         ; preds = %do.body15, %if.then33, %if.else
  ret void, !dbg !4787
}

; Function Attrs: nounwind uwtable
define dso_local void @process_pending_assemble_externals() local_unnamed_addr #5 !dbg !4788 {
entry:
  br label %for.cond, !dbg !4791

for.cond:                                         ; preds = %for.body, %entry
  %list.0.in = phi %union.tree_node** [ @pending_assemble_externals, %entry ], [ %chain, %for.body ]
  %list.0 = load %union.tree_node*, %union.tree_node** %list.0.in, align 8, !dbg !4793
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !4790, metadata !DIExpression()), !dbg !4794
  %tobool = icmp eq %union.tree_node* %list.0, null, !dbg !4795
  br i1 %tobool, label %for.end, label %for.body, !dbg !4795

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4796
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4796
  tail call fastcc void @assemble_external_real(%union.tree_node* %1) #8, !dbg !4798
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4799
  br label %for.cond, !dbg !4800, !llvm.loop !4801

for.end:                                          ; preds = %for.cond
  store %union.tree_node* null, %union.tree_node** @pending_assemble_externals, align 8, !dbg !4803
  ret void, !dbg !4804
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assemble_external_real(%union.tree_node* %decl) unnamed_addr #5 !dbg !4805 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4807, metadata !DIExpression()), !dbg !4809
  %rtl1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4810
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtl1, align 8, !dbg !4810
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4810
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4810

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4810

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !4810
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl1, align 8, !dbg !4810
  br label %cond.end, !dbg !4810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %0, %cond.true ], !dbg !4810
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond, metadata !4808, metadata !DIExpression()), !dbg !4809
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !4811
  %bf.load = load i32, i32* %1, align 8, !dbg !4811
  %bf.clear = and i32 %bf.load, 65535, !dbg !4811
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !4811
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4813

land.lhs.true:                                    ; preds = %cond.end
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4814
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !4814
  %3 = load i32*, i32** %2, align 8, !dbg !4814
  %bf.load6 = load i32, i32* %3, align 8, !dbg !4814
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !4814
  %cmp8 = icmp eq i32 %bf.clear7, 45, !dbg !4815
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !4816

land.lhs.true9:                                   ; preds = %land.lhs.true
  %bf.clear15 = and i32 %bf.load6, 536870912, !dbg !4817
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !4817
  br i1 %tobool16, label %land.lhs.true17, label %if.end, !dbg !4818

land.lhs.true17:                                  ; preds = %land.lhs.true9
  %call = tail call fastcc zeroext i8 @incorporeal_function_p(%union.tree_node* %decl) #8, !dbg !4819
  %tobool18 = icmp eq i8 %call, 0, !dbg !4819
  br i1 %tobool18, label %if.then, label %if.end, !dbg !4820

if.then:                                          ; preds = %land.lhs.true17
  %4 = load i32*, i32** %2, align 8, !dbg !4821
  %bf.load23 = load i32, i32* %4, align 8, !dbg !4823
  %bf.set = or i32 %bf.load23, 536870912, !dbg !4823
  store i32 %bf.set, i32* %4, align 8, !dbg !4823
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4824
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4824
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !4824
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !4824
  %7 = load i8*, i8** %rt_str, align 8, !dbg !4824
  tail call void @default_elf_asm_output_external(%struct._IO_FILE* %5, %union.tree_node* %decl, i8* %7) #8, !dbg !4824
  br label %if.end, !dbg !4825

if.end:                                           ; preds = %land.lhs.true17, %land.lhs.true9, %if.then, %land.lhs.true, %cond.end
  ret void, !dbg !4826
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_external(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4827 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4829, metadata !DIExpression()), !dbg !4830
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4831
  %tobool = icmp eq %struct._IO_FILE* %0, null, !dbg !4831
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4831

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4831
  br label %cond.end, !dbg !4831

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4832
  %bf.load = load i64, i64* %1, align 8, !dbg !4832
  %bf.cast = and i64 %bf.load, 65535, !dbg !4832
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4832
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4832
  %cmp = icmp eq i32 %2, 3, !dbg !4832
  br i1 %cmp, label %lor.lhs.false, label %if.end35, !dbg !4834

lor.lhs.false:                                    ; preds = %cond.end
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4835
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !4835
  %bf.load1 = load i64, i64* %3, align 8, !dbg !4835
  %bf.cast31 = and i64 %bf.load1, 33554432, !dbg !4835
  %tobool4 = icmp eq i64 %bf.cast31, 0, !dbg !4835
  br i1 %tobool4, label %if.end35, label %lor.lhs.false5, !dbg !4836

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %bf.cast102 = and i64 %bf.load, 134217728, !dbg !4837
  %tobool11 = icmp eq i64 %bf.cast102, 0, !dbg !4837
  br i1 %tobool11, label %if.end35, label %if.end, !dbg !4838

if.end:                                           ; preds = %lor.lhs.false5
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4839
  %4 = bitcast i24* %weak_flag to i32*, !dbg !4839
  %bf.load12 = load i32, i32* %4, align 8, !dbg !4839
  %5 = trunc i32 %bf.load12 to i8, !dbg !4839
  %tobool15 = icmp slt i8 %5, 0, !dbg !4839
  br i1 %tobool15, label %land.lhs.true, label %if.end30, !dbg !4841

land.lhs.true:                                    ; preds = %if.end
  %bf.cast203 = and i64 %bf.load, 67108864, !dbg !4842
  %tobool21 = icmp eq i64 %bf.cast203, 0, !dbg !4842
  br i1 %tobool21, label %land.lhs.true22, label %if.end30, !dbg !4843

land.lhs.true22:                                  ; preds = %land.lhs.true
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !4844
  %6 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !4844
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), %union.tree_node* %6) #6, !dbg !4845
  %tobool24 = icmp eq %union.tree_node* %call, null, !dbg !4845
  br i1 %tobool24, label %if.end30, label %land.lhs.true25, !dbg !4846

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %7 = load %union.tree_node*, %union.tree_node** @weak_decls, align 8, !dbg !4847
  %call26 = tail call %union.tree_node* @value_member(%union.tree_node* %decl, %union.tree_node* %7) #6, !dbg !4848
  %cmp27 = icmp eq %union.tree_node* %call26, null, !dbg !4849
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !4850

if.then28:                                        ; preds = %land.lhs.true25
  %8 = load %union.tree_node*, %union.tree_node** @weak_decls, align 8, !dbg !4851
  %call29 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %decl, %union.tree_node* %8) #6, !dbg !4851
  store %union.tree_node* %call29, %union.tree_node** @weak_decls, align 8, !dbg !4852
  br label %if.end30, !dbg !4853

if.end30:                                         ; preds = %land.lhs.true22, %land.lhs.true, %if.then28, %land.lhs.true25, %if.end
  %9 = load %union.tree_node*, %union.tree_node** @pending_assemble_externals, align 8, !dbg !4854
  %call31 = tail call %union.tree_node* @value_member(%union.tree_node* %decl, %union.tree_node* %9) #6, !dbg !4856
  %cmp32 = icmp eq %union.tree_node* %call31, null, !dbg !4857
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !4858

if.then33:                                        ; preds = %if.end30
  %10 = load %union.tree_node*, %union.tree_node** @pending_assemble_externals, align 8, !dbg !4859
  %call34 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %decl, %union.tree_node* %10) #6, !dbg !4859
  store %union.tree_node* %call34, %union.tree_node** @pending_assemble_externals, align 8, !dbg !4860
  br label %if.end35, !dbg !4861

if.end35:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %cond.end, %if.then33, %if.end30
  ret void, !dbg !4862
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @value_member(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @assemble_external_libcall(%struct.rtx_def* %fun) local_unnamed_addr #5 !dbg !4863 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %fun, metadata !4865, metadata !DIExpression()), !dbg !4866
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %fun, i64 0, i32 0, !dbg !4867
  %bf.load = load i32, i32* %0, align 8, !dbg !4867
  %bf.clear = and i32 %bf.load, 536870912, !dbg !4867
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !4867
  br i1 %tobool, label %if.then, label %if.end, !dbg !4869

if.then:                                          ; preds = %entry
  %bf.set = or i32 %bf.load, 536870912, !dbg !4870
  store i32 %bf.set, i32* %0, align 8, !dbg !4870
  %1 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 32), align 8, !dbg !4872
  tail call void %1(%struct.rtx_def* %fun) #6, !dbg !4873
  br label %if.end, !dbg !4874

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4875
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_label(i8* %name) local_unnamed_addr #5 !dbg !4876 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !4880, metadata !DIExpression()), !dbg !4881
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4882
  tail call void @assemble_name(%struct._IO_FILE* %0, i8* %name) #8, !dbg !4882
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !4882
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !4882
  ret void, !dbg !4884
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_referenced(%union.tree_node* %id) local_unnamed_addr #5 !dbg !4885 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %id, metadata !4887, metadata !DIExpression()), !dbg !4888
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %id, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4889
  %bf.load = load i64, i64* %0, align 8, !dbg !4890
  %bf.set = or i64 %bf.load, 67108864, !dbg !4890
  store i64 %bf.set, i64* %0, align 8, !dbg !4890
  ret void, !dbg !4891
}

; Function Attrs: nounwind uwtable
define dso_local void @mark_decl_referenced(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4892 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4894, metadata !DIExpression()), !dbg !5059
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5060
  %bf.load = load i64, i64* %0, align 8, !dbg !5060
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5061
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !5061
  br i1 %cmp, label %if.then, label %if.else, !dbg !5062

if.then:                                          ; preds = %entry
  %call = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %decl) #6, !dbg !5063
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !4895, metadata !DIExpression()), !dbg !5064
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5065
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !5065
  %bf.load1 = load i64, i64* %1, align 8, !dbg !5065
  %bf.cast33 = and i64 %bf.load1, 33554432, !dbg !5065
  %tobool = icmp eq i64 %bf.cast33, 0, !dbg !5065
  br i1 %tobool, label %land.lhs.true, label %if.end28, !dbg !5067

land.lhs.true:                                    ; preds = %if.then
  %vtable_method = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call, i64 0, i32 18, i32 2, !dbg !5068
  %bf.load4 = load i8, i8* %vtable_method, align 8, !dbg !5068
  %tobool7 = icmp slt i8 %bf.load4, 0, !dbg !5069
  %2 = load i8, i8* @cgraph_global_info_ready, align 1, !dbg !5070
  %tobool8 = icmp ne i8 %2, 0, !dbg !5070
  %or.cond = and i1 %tobool7, %tobool8, !dbg !5071
  br i1 %or.cond, label %lor.lhs.false9, label %if.then16, !dbg !5071

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %bf.clear13 = and i8 %bf.load4, 4, !dbg !5072
  %tobool15 = icmp eq i8 %bf.clear13, 0, !dbg !5073
  br i1 %tobool15, label %if.then16, label %if.end28, !dbg !5074

if.then16:                                        ; preds = %lor.lhs.false9, %land.lhs.true
  tail call void @cgraph_mark_needed_node(%struct.cgraph_node* %call) #6, !dbg !5075
  br label %if.end28, !dbg !5075

if.else:                                          ; preds = %entry
  %cmp21 = icmp eq i64 %bf.cast1, 32, !dbg !5076
  br i1 %cmp21, label %if.then22, label %if.end28, !dbg !5077

if.then22:                                        ; preds = %if.else
  %call24 = tail call %struct.varpool_node* @varpool_node(%union.tree_node* %decl) #6, !dbg !5078
  call void @llvm.dbg.value(metadata %struct.varpool_node* %call24, metadata !5041, metadata !DIExpression()), !dbg !5079
  tail call void @varpool_mark_needed_node(%struct.varpool_node* %call24) #6, !dbg !5080
  %force_output = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %call24, i64 0, i32 5, !dbg !5081
  %bf.load25 = load i8, i8* %force_output, align 4, !dbg !5082
  %bf.set = or i8 %bf.load25, 2, !dbg !5082
  store i8 %bf.set, i8* %force_output, align 4, !dbg !5082
  br label %if.end28, !dbg !5083

if.end28:                                         ; preds = %lor.lhs.false9, %if.then, %if.else, %if.then22, %if.then16
  ret void, !dbg !5084
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @cgraph_mark_needed_node(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local %struct.varpool_node* @varpool_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @varpool_mark_needed_node(%struct.varpool_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @assemble_name_raw(%struct._IO_FILE* %file, i8* %name) local_unnamed_addr #5 !dbg !5085 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5087, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %name, metadata !5088, metadata !DIExpression()), !dbg !5089
  %0 = load i8, i8* %name, align 1, !dbg !5090
  %cmp = icmp eq i8 %0, 42, !dbg !5092
  br i1 %cmp, label %if.then, label %if.else, !dbg !5093

if.then:                                          ; preds = %entry
  %arrayidx2 = getelementptr inbounds i8, i8* %name, i64 1, !dbg !5094
  %call = tail call i32 @fputs(i8* nonnull %arrayidx2, %struct._IO_FILE* %file) #6, !dbg !5095
  br label %if.end, !dbg !5095

if.else:                                          ; preds = %entry
  tail call void (%struct._IO_FILE*, i8*, ...) @asm_fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8* %name) #6, !dbg !5096
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5097
}

declare dso_local void @asm_fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @maybe_get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** %alias) unnamed_addr #0 !dbg !5098 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %alias, metadata !5102, metadata !DIExpression()), !dbg !5104
  %0 = load %union.tree_node*, %union.tree_node** %alias, align 8, !dbg !5105
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5103, metadata !DIExpression()), !dbg !5104
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5106
  %bf.load = load i64, i64* %1, align 8, !dbg !5106
  %bf.cast1 = and i64 %bf.load, 1073741824, !dbg !5106
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !5106
  br i1 %tobool, label %if.end, label %if.then, !dbg !5108

if.then:                                          ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5109
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5109
  %tobool1 = icmp eq %union.tree_node* %2, null, !dbg !5109
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5109

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2471, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5109
  br label %cond.end, !dbg !5109

cond.end:                                         ; preds = %if.then, %cond.true
  %call = tail call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %chain) #8, !dbg !5111
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5103, metadata !DIExpression()), !dbg !5104
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5112
  %bf.load5 = load i64, i64* %3, align 8, !dbg !5112
  %bf.cast82 = and i64 %bf.load5, 1073741824, !dbg !5112
  %tobool9 = icmp eq i64 %bf.cast82, 0, !dbg !5112
  br i1 %tobool9, label %land.lhs.true, label %cond.true13, !dbg !5112

land.lhs.true:                                    ; preds = %cond.end
  %chain11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5112
  %4 = load %union.tree_node*, %union.tree_node** %chain11, align 8, !dbg !5112
  %tobool12 = icmp eq %union.tree_node* %4, null, !dbg !5112
  br i1 %tobool12, label %cond.end15, label %cond.true13, !dbg !5112

cond.true13:                                      ; preds = %land.lhs.true, %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2474, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5112
  br label %cond.end15, !dbg !5112

cond.end15:                                       ; preds = %land.lhs.true, %cond.true13
  store %union.tree_node* %call, %union.tree_node** %alias, align 8, !dbg !5113
  br label %if.end, !dbg !5114

if.end:                                           ; preds = %entry, %cond.end15
  %target.0 = phi %union.tree_node* [ %call, %cond.end15 ], [ %0, %entry ], !dbg !5104
  call void @llvm.dbg.value(metadata %union.tree_node* %target.0, metadata !5103, metadata !DIExpression()), !dbg !5104
  ret %union.tree_node* %target.0, !dbg !5115
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assemble_static_space(i64 %size) local_unnamed_addr #5 !dbg !5116 {
entry:
  %name = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata i64 %size, metadata !5120, metadata !DIExpression()), !dbg !5127
  %0 = getelementptr inbounds [12 x i8], [12 x i8]* %name, i64 0, i64 0, !dbg !5128
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #7, !dbg !5128
  call void @llvm.dbg.declare(metadata [12 x i8]* %name, metadata !5121, metadata !DIExpression()), !dbg !5129
  %1 = load i32, i32* @const_labelno, align 4, !dbg !5130
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i64 0, i64 0), i32 %1) #6, !dbg !5130
  %2 = load i32, i32* @const_labelno, align 4, !dbg !5132
  %inc = add nsw i32 %2, 1, !dbg !5132
  store i32 %inc, i32* @const_labelno, align 4, !dbg !5132
  %call2 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !5133
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5125, metadata !DIExpression()), !dbg !5127
  %call3 = call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 16, i8* %call2) #6, !dbg !5134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5126, metadata !DIExpression()), !dbg !5127
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5135
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !5135
  store i32 2, i32* %rt_int, align 8, !dbg !5136
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5137
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !5137
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5137
  call void @assemble_name(%struct._IO_FILE* %5, i8* nonnull %0) #8, !dbg !5137
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5137
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !5137
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5139
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !5139
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5139
  call void @assemble_name(%struct._IO_FILE* %8, i8* nonnull %0) #8, !dbg !5139
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5139
  %10 = load i32, i32* @ix86_isa_flags, align 4, !dbg !5139
  %and = and i32 %10, 32, !dbg !5139
  %cmp = icmp eq i32 %and, 0, !dbg !5139
  %div = select i1 %cmp, i32 16, i32 32, !dbg !5139
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0), i64 %size, i32 %div) #6, !dbg !5139
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #7, !dbg !5141
  ret %struct.rtx_def* %call3, !dbg !5142
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @assemble_trampoline_template() local_unnamed_addr #5 !dbg !5143 {
entry:
  %label = alloca [256 x i8], align 16
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %label, i64 0, i64 0, !dbg !5154
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #7, !dbg !5154
  call void @llvm.dbg.declare(metadata [256 x i8]* %label, metadata !5147, metadata !DIExpression()), !dbg !5155
  %1 = load void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 39), align 8, !dbg !5156
  %cmp = icmp eq void (%struct._IO_FILE*)* %1, null, !dbg !5156
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5156

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2576, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5156
  br label %cond.end, !dbg !5156

cond.end:                                         ; preds = %entry, %cond.true
  %2 = load %struct.rtx_def*, %struct.rtx_def** @initial_trampoline, align 8, !dbg !5157
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !5157
  br i1 %tobool, label %if.end, label %if.then, !dbg !5159

if.then:                                          ; preds = %cond.end
  br label %cleanup, !dbg !5160

if.end:                                           ; preds = %cond.end
  %3 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !5161
  tail call void @switch_to_section(%union.section* %3) #8, !dbg !5162
  %call = tail call i32 @floor_log2(i64 1) #6, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %call, metadata !5152, metadata !DIExpression()), !dbg !5164
  %cmp1 = icmp sgt i32 %call, 0, !dbg !5165
  br i1 %cmp1, label %if.then4, label %if.end7, !dbg !5167

if.then4:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5168
  %shl = shl i32 1, %call, !dbg !5168
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !5168
  br label %if.end7, !dbg !5168

if.end7:                                          ; preds = %if.then4, %if.end
  %5 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !5170
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5171
  tail call void %5(%struct._IO_FILE* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i64 0) #6, !dbg !5172
  %7 = load void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 39), align 8, !dbg !5173
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5174
  tail call void %7(%struct._IO_FILE* %8) #6, !dbg !5175
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i32 0) #6, !dbg !5176
  %call10 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !5178
  call void @llvm.dbg.value(metadata i8* %call10, metadata !5151, metadata !DIExpression()), !dbg !5164
  %call11 = call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 16, i8* %call10) #6, !dbg !5179
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call11, metadata !5153, metadata !DIExpression()), !dbg !5164
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call11, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5180
  %rt_int = bitcast %union.rtunion_def* %9 to i32*, !dbg !5180
  store i32 2, i32* %rt_int, align 8, !dbg !5181
  %call12 = call %struct.rtx_def* @gen_const_mem(i32 1, %struct.rtx_def* %call11) #6, !dbg !5182
  store %struct.rtx_def* %call12, %struct.rtx_def** @initial_trampoline, align 8, !dbg !5183
  call void @set_mem_align(%struct.rtx_def* %call12, i32 8) #6, !dbg !5184
  %10 = load %struct.rtx_def*, %struct.rtx_def** @initial_trampoline, align 8, !dbg !5185
  %call13 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 10) #6, !dbg !5186
  call void @set_mem_size(%struct.rtx_def* %10, %struct.rtx_def* %call13) #6, !dbg !5187
  %retval.0.pre = load %struct.rtx_def*, %struct.rtx_def** @initial_trampoline, align 8, !dbg !5164
  br label %cleanup, !dbg !5188

cleanup:                                          ; preds = %if.end7, %if.then
  %retval.0 = phi %struct.rtx_def* [ %retval.0.pre, %if.end7 ], [ %2, %if.then ], !dbg !5164
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #7, !dbg !5189
  ret %struct.rtx_def* %retval.0, !dbg !5189
}

declare dso_local %struct.rtx_def* @gen_const_mem(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_size(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @integer_asm_op(i32 %size, i32 %aligned_p) local_unnamed_addr #5 !dbg !5190 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !5194, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i32 %aligned_p, metadata !5195, metadata !DIExpression()), !dbg !5204
  %tobool = icmp eq i32 %aligned_p, 0, !dbg !5205
  %. = select i1 %tobool, %struct.asm_int_op* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 4), %struct.asm_int_op* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 3)
  call void @llvm.dbg.value(metadata %struct.asm_int_op* %., metadata !5196, metadata !DIExpression()), !dbg !5204
  switch i32 %size, label %cleanup [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
    i32 16, label %sw.bb4
  ], !dbg !5207

sw.bb:                                            ; preds = %entry
  %0 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 2), align 8, !dbg !5208
  br label %cleanup, !dbg !5210

sw.bb1:                                           ; preds = %entry
  %hi = getelementptr inbounds %struct.asm_int_op, %struct.asm_int_op* %., i64 0, i32 0, !dbg !5211
  %1 = load i8*, i8** %hi, align 8, !dbg !5211
  br label %cleanup, !dbg !5212

sw.bb2:                                           ; preds = %entry
  %si = getelementptr inbounds %struct.asm_int_op, %struct.asm_int_op* %., i64 0, i32 1, !dbg !5213
  %2 = load i8*, i8** %si, align 8, !dbg !5213
  br label %cleanup, !dbg !5214

sw.bb3:                                           ; preds = %entry
  %di = getelementptr inbounds %struct.asm_int_op, %struct.asm_int_op* %., i64 0, i32 2, !dbg !5215
  %3 = load i8*, i8** %di, align 8, !dbg !5215
  br label %cleanup, !dbg !5216

sw.bb4:                                           ; preds = %entry
  %ti = getelementptr inbounds %struct.asm_int_op, %struct.asm_int_op* %., i64 0, i32 3, !dbg !5217
  %4 = load i8*, i8** %ti, align 8, !dbg !5217
  br label %cleanup, !dbg !5218

cleanup:                                          ; preds = %entry, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %retval.0 = phi i8* [ %4, %sw.bb4 ], [ %3, %sw.bb3 ], [ %2, %sw.bb2 ], [ %1, %sw.bb1 ], [ %0, %sw.bb ], [ null, %entry ], !dbg !5219
  ret i8* %retval.0, !dbg !5220
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_integer_with_op(i8* %op, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !5221 {
entry:
  call void @llvm.dbg.value(metadata i8* %op, metadata !5225, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5226, metadata !DIExpression()), !dbg !5227
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5228
  %call = tail call i32 @fputs(i8* %op, %struct._IO_FILE* %0) #6, !dbg !5229
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5230
  tail call void @output_addr_const(%struct._IO_FILE* %1, %struct.rtx_def* %x) #6, !dbg !5231
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !5232
  %call1 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %2) #6, !dbg !5233
  ret void, !dbg !5234
}

declare dso_local void @output_addr_const(%struct._IO_FILE*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @default_assemble_integer(%struct.rtx_def* %x, i32 %size, i32 %aligned_p) local_unnamed_addr #5 !dbg !5235 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5239, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %size, metadata !5240, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %aligned_p, metadata !5241, metadata !DIExpression()), !dbg !5243
  %call = tail call i8* @integer_asm_op(i32 %size, i32 %aligned_p) #8, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %call, metadata !5242, metadata !DIExpression()), !dbg !5243
  %cmp = icmp ugt i32 %size, 4, !dbg !5245
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5247

if.end:                                           ; preds = %entry
  %tobool = icmp eq i8* %call, null, !dbg !5248
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5249

land.rhs:                                         ; preds = %if.end
  tail call void @assemble_integer_with_op(i8* nonnull %call, %struct.rtx_def* %x) #8, !dbg !5250
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %0 = phi i8 [ 0, %if.end ], [ 1, %land.rhs ]
  br label %cleanup, !dbg !5251

cleanup:                                          ; preds = %entry, %land.end
  %retval.0 = phi i8 [ %0, %land.end ], [ 0, %entry ], !dbg !5243
  ret i8 %retval.0, !dbg !5252
}

declare dso_local i32 @mode_for_size(i32, i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @assemble_real(%struct.real_value* byval(%struct.real_value) align 8 %d, i32 %mode, i32 %align) local_unnamed_addr #5 !dbg !5253 {
entry:
  %data = alloca [4 x i64], align 16
  call void @llvm.dbg.declare(metadata %struct.real_value* %d, metadata !5257, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5258, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i32 %align, metadata !5259, metadata !DIExpression()), !dbg !5268
  %0 = bitcast [4 x i64]* %data to i8*, !dbg !5269
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #7, !dbg !5269
  call void @llvm.dbg.declare(metadata [4 x i64]* %data, metadata !5260, metadata !DIExpression()), !dbg !5270
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %0, i8 0, i64 32, i1 false), !dbg !5270
  %idxprom = zext i32 %mode to i64, !dbg !5271
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5271
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5271
  %conv1 = zext i8 %1 to i32, !dbg !5271
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !5265, metadata !DIExpression()), !dbg !5268
  %mul = shl nuw nsw i32 %conv1, 3, !dbg !5272
  call void @llvm.dbg.value(metadata i32 %mul, metadata !5263, metadata !DIExpression()), !dbg !5268
  %sub = add nuw nsw i32 %mul, 31, !dbg !5273
  %div = lshr i32 %sub, 5, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %div, metadata !5264, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i32 4, metadata !5266, metadata !DIExpression()), !dbg !5268
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %data, i64 0, i64 0, !dbg !5274
  %call = call i64 @real_to_target(i64* nonnull %arraydecay, %struct.real_value* nonnull %d, i32 %mode) #6, !dbg !5275
  %2 = load i64, i64* %arraydecay, align 16, !dbg !5276
  %conv4 = and i64 %2, 4294967295, !dbg !5276
  %call5 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv4) #6, !dbg !5276
  %cmp = icmp ult i32 %conv1, 4, !dbg !5277
  %conv1. = select i1 %cmp, i32 %conv1, i32 4, !dbg !5277
  %call7 = call zeroext i8 @assemble_integer(%struct.rtx_def* %call5, i32 %conv1., i32 %align, i32 1) #8, !dbg !5278
  call void @llvm.dbg.value(metadata i32 %conv1, metadata !5265, metadata !DIExpression(DW_OP_constu, 4, DW_OP_minus, DW_OP_stack_value)), !dbg !5268
  %call9 = call fastcc i32 @min_align(i32 %align, i32 32) #8, !dbg !5279
  call void @llvm.dbg.value(metadata i32 %call9, metadata !5259, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i32 1, metadata !5262, metadata !DIExpression()), !dbg !5268
  %3 = zext i32 %div to i64, !dbg !5280
  br label %for.cond, !dbg !5280

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %entry ], !dbg !5282
  %nunits.0.in = phi i32 [ %nunits.0, %for.body ], [ %conv1, %entry ]
  %nunits.0 = add nsw i32 %nunits.0.in, -4, !dbg !5268
  call void @llvm.dbg.value(metadata i32 %nunits.0, metadata !5265, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5262, metadata !DIExpression()), !dbg !5268
  %cmp10 = icmp ult i64 %indvars.iv, %3, !dbg !5283
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5285

for.body:                                         ; preds = %for.cond
  %arrayidx13 = getelementptr inbounds [4 x i64], [4 x i64]* %data, i64 0, i64 %indvars.iv, !dbg !5286
  %4 = load i64, i64* %arrayidx13, align 8, !dbg !5286
  %conv15 = and i64 %4, 4294967295, !dbg !5286
  %call16 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv15) #6, !dbg !5286
  %cmp17 = icmp slt i32 %nunits.0, 4, !dbg !5288
  %nunits.0. = select i1 %cmp17, i32 %nunits.0, i32 4, !dbg !5288
  %call23 = call zeroext i8 @assemble_integer(%struct.rtx_def* %call16, i32 %nunits.0., i32 %call9, i32 1) #8, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %nunits.0, metadata !5265, metadata !DIExpression(DW_OP_constu, 4, DW_OP_minus, DW_OP_stack_value)), !dbg !5268
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5290
  call void @llvm.dbg.value(metadata i32 undef, metadata !5262, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5268
  br label %for.cond, !dbg !5291, !llvm.loop !5292

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #7, !dbg !5294
  ret void, !dbg !5294
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local i64 @real_to_target(i64*, %struct.real_value*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @min_align(i32 %a, i32 %b) unnamed_addr #0 !dbg !5295 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, metadata !5299, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.value(metadata i32 %b, metadata !5300, metadata !DIExpression()), !dbg !5301
  %or = or i32 %a, %b, !dbg !5302
  %sub = sub i32 0, %or, !dbg !5303
  %and = and i32 %or, %sub, !dbg !5304
  ret i32 %and, !dbg !5305
}

; Function Attrs: nounwind uwtable
define dso_local %struct.htab* @constant_pool_htab() local_unnamed_addr #5 !dbg !5306 {
entry:
  %0 = load %struct.htab*, %struct.htab** @const_desc_htab, align 8, !dbg !5309
  ret %struct.htab* %0, !dbg !5310
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @output_constant_def(%union.tree_node* %exp, i32 %defer) local_unnamed_addr #5 !dbg !5311 {
entry:
  %key = alloca %struct.constant_descriptor_tree, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5315, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 %defer, metadata !5316, metadata !DIExpression()), !dbg !5320
  %0 = bitcast %struct.constant_descriptor_tree* %key to i8*, !dbg !5321
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5321
  %value = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %key, i64 0, i32 1, !dbg !5322
  store %union.tree_node* %exp, %union.tree_node** %value, align 8, !dbg !5323
  %call = tail call fastcc i32 @const_hash_1(%union.tree_node* %exp) #8, !dbg !5324
  %hash = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %key, i64 0, i32 2, !dbg !5325
  store i32 %call, i32* %hash, align 8, !dbg !5326
  %1 = load %struct.htab*, %struct.htab** @const_desc_htab, align 8, !dbg !5327
  %call2 = call i8** @htab_find_slot_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call, i32 1) #6, !dbg !5328
  call void @llvm.dbg.value(metadata i8** %call2, metadata !5319, metadata !DIExpression()), !dbg !5320
  %2 = bitcast i8** %call2 to %struct.constant_descriptor_tree**, !dbg !5329
  %3 = load %struct.constant_descriptor_tree*, %struct.constant_descriptor_tree** %2, align 8, !dbg !5329
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_tree* %3, metadata !5317, metadata !DIExpression()), !dbg !5320
  %cmp = icmp eq %struct.constant_descriptor_tree* %3, null, !dbg !5330
  br i1 %cmp, label %if.then, label %if.end, !dbg !5332

if.then:                                          ; preds = %entry
  %call3 = call fastcc %struct.constant_descriptor_tree* @build_constant_desc(%union.tree_node* %exp) #8, !dbg !5333
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_tree* %call3, metadata !5317, metadata !DIExpression()), !dbg !5320
  %4 = load i32, i32* %hash, align 8, !dbg !5335
  %hash5 = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %call3, i64 0, i32 2, !dbg !5336
  store i32 %4, i32* %hash5, align 8, !dbg !5337
  store %struct.constant_descriptor_tree* %call3, %struct.constant_descriptor_tree** %2, align 8, !dbg !5338
  br label %if.end, !dbg !5339

if.end:                                           ; preds = %if.then, %entry
  %desc.0 = phi %struct.constant_descriptor_tree* [ %call3, %if.then ], [ %3, %entry ], !dbg !5320
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_tree* %desc.0, metadata !5317, metadata !DIExpression()), !dbg !5320
  call fastcc void @maybe_output_constant_def_contents(%struct.constant_descriptor_tree* %desc.0, i32 %defer) #8, !dbg !5340
  %rtl = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %desc.0, i64 0, i32 0, !dbg !5341
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5342
  ret %struct.rtx_def* %5, !dbg !5343
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @const_hash_1(%union.tree_node* %exp) unnamed_addr #5 !dbg !5344 {
entry:
  %value43 = alloca %struct.addr_const, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5349, metadata !DIExpression()), !dbg !5365
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5366
  %bf.load = load i64, i64* %0, align 8, !dbg !5366
  %1 = trunc i64 %bf.load to i32, !dbg !5366
  %bf.cast = and i32 %1, 65535, !dbg !5366
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5354, metadata !DIExpression()), !dbg !5365
  %trunc = trunc i64 %bf.load to i16, !dbg !5367
  switch i16 %trunc, label %cleanup [
    i16 23, label %sw.bb
    i16 24, label %sw.bb2
    i16 25, label %sw.bb3
    i16 28, label %sw.bb5
    i16 26, label %sw.bb7
    i16 51, label %sw.bb11
    i16 121, label %sw.bb42
    i16 122, label %sw.bb42
    i16 63, label %sw.bb77
    i16 66, label %sw.bb77
    i16 64, label %sw.bb77
    i16 116, label %sw.bb87
    i16 113, label %sw.bb87
  ], !dbg !5367

sw.bb:                                            ; preds = %entry
  %int_cst1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5368
  call void @llvm.dbg.value(metadata i32* %int_cst1, metadata !5350, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 16, metadata !5352, metadata !DIExpression()), !dbg !5365
  br label %sw.epilog95, !dbg !5369

sw.bb2:                                           ; preds = %entry
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5370
  %2 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !5370
  %3 = load %struct.real_value*, %struct.real_value** %2, align 8, !dbg !5370
  %call = tail call i32 @real_hash(%struct.real_value* %3) #6, !dbg !5371
  br label %cleanup, !dbg !5372

sw.bb3:                                           ; preds = %entry
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5373
  %4 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !5373
  %5 = load %struct.fixed_value*, %struct.fixed_value** %4, align 8, !dbg !5373
  %call4 = tail call i32 @fixed_hash(%struct.fixed_value* %5) #6, !dbg !5374
  br label %cleanup, !dbg !5375

sw.bb5:                                           ; preds = %entry
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5376
  call void @llvm.dbg.value(metadata i32* %str, metadata !5350, metadata !DIExpression()), !dbg !5365
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5377
  %7 = load i32, i32* %6, align 8, !dbg !5377
  call void @llvm.dbg.value(metadata i32 %7, metadata !5352, metadata !DIExpression()), !dbg !5365
  br label %sw.epilog95, !dbg !5378

sw.bb7:                                           ; preds = %entry
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5379
  %8 = bitcast i32* %real to %union.tree_node**, !dbg !5379
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5379
  %call8 = tail call fastcc i32 @const_hash_1(%union.tree_node* %9) #8, !dbg !5380
  %mul = mul i32 %call8, 5, !dbg !5381
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5382
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !5382
  %call10 = tail call fastcc i32 @const_hash_1(%union.tree_node* %11) #8, !dbg !5383
  %add = add i32 %mul, %call10, !dbg !5384
  br label %cleanup, !dbg !5385

sw.bb11:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5386
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5386
  %call12 = tail call i64 @int_size_in_bytes(%union.tree_node* %12) #6, !dbg !5387
  %13 = trunc i64 %call12 to i32, !dbg !5388
  %conv = add i32 %13, 5, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i64 0, metadata !5355, metadata !DIExpression()), !dbg !5389
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5390
  %14 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5390
  br label %for.cond, !dbg !5393

for.cond:                                         ; preds = %for.inc, %sw.bb11
  %idx.0 = phi i64 [ 0, %sw.bb11 ], [ %inc, %for.inc ], !dbg !5394
  %hi.0 = phi i32 [ %conv, %sw.bb11 ], [ %hi.1, %for.inc ], !dbg !5389
  %value.0 = phi %union.tree_node* [ undef, %sw.bb11 ], [ %value.1, %for.inc ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !5358, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 %hi.0, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !5355, metadata !DIExpression()), !dbg !5389
  %15 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %14, align 8, !dbg !5395
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %15, null, !dbg !5395
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5395

cond.true:                                        ; preds = %for.cond
  %base16 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %15, i64 0, i32 0, !dbg !5395
  br label %cond.end, !dbg !5395

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base16, %cond.true ], [ null, %for.cond ], !dbg !5395
  %call17 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !5395
  %conv18 = zext i32 %call17 to i64, !dbg !5395
  %cmp = icmp ult i64 %idx.0, %conv18, !dbg !5395
  br i1 %cmp, label %cond.false21, label %cond.end35, !dbg !5395

cond.false21:                                     ; preds = %cond.end
  %16 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %14, align 8, !dbg !5395
  %tobool24 = icmp eq %struct.VEC_constructor_elt_gc* %16, null, !dbg !5395
  br i1 %tobool24, label %cond.end30, label %cond.true25, !dbg !5395

cond.true25:                                      ; preds = %cond.false21
  %base28 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %16, i64 0, i32 0, !dbg !5395
  br label %cond.end30, !dbg !5395

cond.end30:                                       ; preds = %cond.false21, %cond.true25
  %cond31 = phi %struct.VEC_constructor_elt_base* [ %base28, %cond.true25 ], [ null, %cond.false21 ], !dbg !5395
  %conv32 = trunc i64 %idx.0 to i32, !dbg !5395
  %call33 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond31, i32 %conv32) #8, !dbg !5395
  %value34 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call33, i64 0, i32 1, !dbg !5395
  %17 = load %union.tree_node*, %union.tree_node** %value34, align 8, !dbg !5395
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5358, metadata !DIExpression()), !dbg !5389
  br label %cond.end35, !dbg !5395

cond.end35:                                       ; preds = %cond.end, %cond.end30
  %value.1 = phi %union.tree_node* [ %17, %cond.end30 ], [ %value.0, %cond.end ]
  %cond36 = phi i1 [ true, %cond.end30 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !5358, metadata !DIExpression()), !dbg !5389
  br i1 %cond36, label %for.body, label %cleanup.loopexit3, !dbg !5393

for.body:                                         ; preds = %cond.end35
  %tobool38 = icmp eq %union.tree_node* %value.1, null, !dbg !5396
  br i1 %tobool38, label %for.inc, label %if.then, !dbg !5398

if.then:                                          ; preds = %for.body
  %mul39 = mul i32 %hi.0, 603, !dbg !5399
  %call40 = tail call fastcc i32 @const_hash_1(%union.tree_node* nonnull %value.1) #8, !dbg !5400
  %add41 = add i32 %mul39, %call40, !dbg !5401
  call void @llvm.dbg.value(metadata i32 %add41, metadata !5351, metadata !DIExpression()), !dbg !5365
  br label %for.inc, !dbg !5402

for.inc:                                          ; preds = %for.body, %if.then
  %hi.1 = phi i32 [ %add41, %if.then ], [ %hi.0, %for.body ], !dbg !5389
  call void @llvm.dbg.value(metadata i32 %hi.1, metadata !5351, metadata !DIExpression()), !dbg !5365
  %inc = add i64 %idx.0, 1, !dbg !5395
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5355, metadata !DIExpression()), !dbg !5389
  br label %for.cond, !dbg !5395, !llvm.loop !5403

sw.bb42:                                          ; preds = %entry, %entry
  %18 = bitcast %struct.addr_const* %value43 to i8*, !dbg !5405
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7, !dbg !5405
  call void @llvm.dbg.value(metadata %struct.addr_const* %value43, metadata !5359, metadata !DIExpression(DW_OP_deref)), !dbg !5406
  call fastcc void @decode_addr_const(%union.tree_node* %exp, %struct.addr_const* nonnull %value43) #8, !dbg !5407
  %19 = bitcast %struct.addr_const* %value43 to i32**, !dbg !5408
  %20 = load i32*, i32** %19, align 8, !dbg !5408
  %bf.load45 = load i32, i32* %20, align 8, !dbg !5408
  %trunc1 = trunc i32 %bf.load45 to i16, !dbg !5409
  switch i16 %trunc1, label %sw.default [
    i16 45, label %sw.bb47
    i16 44, label %sw.bb64
  ], !dbg !5409

sw.bb47:                                          ; preds = %sw.bb42
  %offset = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value43, i64 0, i32 1, !dbg !5410
  %21 = load i64, i64* %offset, align 8, !dbg !5410
  %conv48 = trunc i64 %21 to i32, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %conv48, metadata !5351, metadata !DIExpression()), !dbg !5365
  %rt_str = getelementptr inbounds i32, i32* %20, i64 2, !dbg !5413
  %22 = bitcast i32* %rt_str to i8**, !dbg !5413
  %23 = load i8*, i8** %22, align 8, !dbg !5413
  call void @llvm.dbg.value(metadata i8* %23, metadata !5350, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5353, metadata !DIExpression()), !dbg !5365
  br label %for.cond50, !dbg !5414

for.cond50:                                       ; preds = %for.body55, %sw.bb47
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.body55 ], [ 0, %sw.bb47 ], !dbg !5416
  %hi.2 = phi i32 [ %add60, %for.body55 ], [ %conv48, %sw.bb47 ], !dbg !5417
  call void @llvm.dbg.value(metadata i32 %hi.2, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !5353, metadata !DIExpression()), !dbg !5365
  %arrayidx51 = getelementptr inbounds i8, i8* %23, i64 %indvars.iv4, !dbg !5418
  %24 = load i8, i8* %arrayidx51, align 1, !dbg !5418
  %cmp53 = icmp eq i8 %24, 0, !dbg !5420
  br i1 %cmp53, label %sw.epilog.loopexit, label %for.body55, !dbg !5421

for.body55:                                       ; preds = %for.cond50
  %mul56 = mul i32 %hi.2, 613, !dbg !5422
  %conv59 = sext i8 %24 to i32, !dbg !5423
  %add60 = add i32 %mul56, %conv59, !dbg !5424
  call void @llvm.dbg.value(metadata i32 %add60, metadata !5351, metadata !DIExpression()), !dbg !5365
  %indvars.iv.next5 = add nuw i64 %indvars.iv4, 1, !dbg !5425
  call void @llvm.dbg.value(metadata i32 undef, metadata !5353, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5365
  br label %for.cond50, !dbg !5426, !llvm.loop !5427

sw.bb64:                                          ; preds = %sw.bb42
  %offset65 = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value43, i64 0, i32 1, !dbg !5429
  %25 = load i64, i64* %offset65, align 8, !dbg !5429
  %arrayidx69 = getelementptr inbounds i32, i32* %20, i64 2, !dbg !5430
  %rt_rtx = bitcast i32* %arrayidx69 to %struct.rtx_def**, !dbg !5430
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5430
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i64 0, i32 1, !dbg !5430
  %27 = getelementptr inbounds %union.u, %union.u* %u70, i64 1, i32 0, i32 0, i64 1, !dbg !5430
  %rt_int = bitcast %union.rtunion_def* %27 to i32*, !dbg !5430
  %28 = load i32, i32* %rt_int, align 8, !dbg !5430
  %mul73 = mul nsw i32 %28, 13, !dbg !5431
  %29 = trunc i64 %25 to i32, !dbg !5432
  %conv76 = add i32 %mul73, %29, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %conv76, metadata !5351, metadata !DIExpression()), !dbg !5365
  br label %sw.epilog, !dbg !5433

sw.default:                                       ; preds = %sw.bb42
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2947, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5434
  br label %sw.epilog, !dbg !5435

sw.epilog.loopexit:                               ; preds = %for.cond50
  %hi.2.lcssa = phi i32 [ %hi.2, %for.cond50 ], !dbg !5417
  call void @llvm.dbg.value(metadata i32 %hi.2.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.2.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.2.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  br label %sw.epilog, !dbg !5436

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb64
  %hi.3 = phi i32 [ undef, %sw.default ], [ %conv76, %sw.bb64 ], [ %hi.2.lcssa, %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata i32 %hi.3, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7, !dbg !5436
  br label %cleanup, !dbg !5437

sw.bb77:                                          ; preds = %entry, %entry, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5438
  %30 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5438
  %call80 = tail call fastcc i32 @const_hash_1(%union.tree_node* %30) #8, !dbg !5439
  %mul81 = mul i32 %call80, 9, !dbg !5440
  %arrayidx84 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5441
  %31 = load %union.tree_node*, %union.tree_node** %arrayidx84, align 8, !dbg !5441
  %call85 = tail call fastcc i32 @const_hash_1(%union.tree_node* %31) #8, !dbg !5442
  %add86 = add i32 %mul81, %call85, !dbg !5443
  br label %cleanup, !dbg !5444

sw.bb87:                                          ; preds = %entry, %entry
  %operands89 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5445
  %32 = load %union.tree_node*, %union.tree_node** %operands89, align 8, !dbg !5445
  %call91 = tail call fastcc i32 @const_hash_1(%union.tree_node* %32) #8, !dbg !5446
  %mul92 = mul i32 %call91, 7, !dbg !5447
  %add93 = add i32 %mul92, 2, !dbg !5448
  br label %cleanup, !dbg !5449

sw.epilog95:                                      ; preds = %sw.bb5, %sw.bb
  %len.0 = phi i32 [ %7, %sw.bb5 ], [ 16, %sw.bb ], !dbg !5450
  %p.0.in = phi i32* [ %str, %sw.bb5 ], [ %int_cst1, %sw.bb ]
  %p.0 = bitcast i32* %p.0.in to i8*, !dbg !5450
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !5350, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !5352, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5353, metadata !DIExpression()), !dbg !5365
  %33 = sext i32 %len.0 to i64, !dbg !5451
  br label %for.cond96, !dbg !5451

for.cond96:                                       ; preds = %for.body99, %sw.epilog95
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body99 ], [ 0, %sw.epilog95 ], !dbg !5453
  %hi.4 = phi i32 [ %add104, %for.body99 ], [ %len.0, %sw.epilog95 ], !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.4, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5353, metadata !DIExpression()), !dbg !5365
  %cmp97 = icmp slt i64 %indvars.iv, %33, !dbg !5454
  br i1 %cmp97, label %for.body99, label %cleanup.loopexit, !dbg !5456

for.body99:                                       ; preds = %for.cond96
  %mul100 = mul i32 %hi.4, 613, !dbg !5457
  %arrayidx102 = getelementptr inbounds i8, i8* %p.0, i64 %indvars.iv, !dbg !5458
  %34 = load i8, i8* %arrayidx102, align 1, !dbg !5458
  %conv103 = sext i8 %34 to i32, !dbg !5459
  %add104 = add i32 %mul100, %conv103, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %add104, metadata !5351, metadata !DIExpression()), !dbg !5365
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5461
  call void @llvm.dbg.value(metadata i32 undef, metadata !5353, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5365
  br label %for.cond96, !dbg !5462, !llvm.loop !5463

cleanup.loopexit:                                 ; preds = %for.cond96
  %hi.4.lcssa = phi i32 [ %hi.4, %for.cond96 ], !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.4.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.4.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.4.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  br label %cleanup, !dbg !5465

cleanup.loopexit3:                                ; preds = %cond.end35
  %hi.0.lcssa = phi i32 [ %hi.0, %cond.end35 ], !dbg !5389
  call void @llvm.dbg.value(metadata i32 %hi.0.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.0.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %hi.0.lcssa, metadata !5351, metadata !DIExpression()), !dbg !5365
  br label %cleanup, !dbg !5465

cleanup:                                          ; preds = %cleanup.loopexit3, %cleanup.loopexit, %entry, %sw.bb87, %sw.bb77, %sw.epilog, %sw.bb7, %sw.bb3, %sw.bb2
  %retval.0 = phi i32 [ %add93, %sw.bb87 ], [ %add86, %sw.bb77 ], [ %hi.3, %sw.epilog ], [ %add, %sw.bb7 ], [ %call4, %sw.bb3 ], [ %call, %sw.bb2 ], [ %bf.cast, %entry ], [ %hi.4.lcssa, %cleanup.loopexit ], [ %hi.0.lcssa, %cleanup.loopexit3 ], !dbg !5365
  ret i32 %retval.0, !dbg !5465
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.constant_descriptor_tree* @build_constant_desc(%union.tree_node* %exp) unnamed_addr #5 !dbg !5466 {
entry:
  %label = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5470, metadata !DIExpression()), !dbg !5479
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %label, i64 0, i64 0, !dbg !5480
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #7, !dbg !5480
  call void @llvm.dbg.declare(metadata [256 x i8]* %label, metadata !5473, metadata !DIExpression()), !dbg !5481
  %call = tail call i8* @ggc_alloc_stat(i64 24) #6, !dbg !5482
  %1 = bitcast i8* %call to %struct.constant_descriptor_tree*, !dbg !5482
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_tree* %1, metadata !5475, metadata !DIExpression()), !dbg !5479
  %call1 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %exp) #8, !dbg !5483
  %value = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5484
  %2 = bitcast i8* %value to %union.tree_node**, !dbg !5484
  store %union.tree_node* %call1, %union.tree_node** %2, align 8, !dbg !5485
  %3 = load i32, i32* @flag_mudflap, align 4, !dbg !5486
  %tobool = icmp eq i32 %3, 0, !dbg !5486
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5488

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @mf_marked_p(%union.tree_node* %exp) #6, !dbg !5489
  %tobool3 = icmp eq i32 %call2, 0, !dbg !5489
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5490

if.then:                                          ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !5491
  %call5 = tail call %union.tree_node* @mf_mark(%union.tree_node* %4) #6, !dbg !5492
  br label %if.end, !dbg !5492

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %5 = load i32, i32* @const_labelno, align 4, !dbg !5493
  %inc = add nsw i32 %5, 1, !dbg !5493
  store i32 %inc, i32* @const_labelno, align 4, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %5, metadata !5474, metadata !DIExpression()), !dbg !5479
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), i32 %5) #6, !dbg !5494
  %call7 = call fastcc zeroext i8 @use_object_blocks_p() #8, !dbg !5496
  %tobool8 = icmp eq i8 %call7, 0, !dbg !5496
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !5497

if.then9:                                         ; preds = %if.end
  %call10 = call fastcc %union.section* @get_constant_section(%union.tree_node* %exp) #8, !dbg !5498
  call void @llvm.dbg.value(metadata %union.section* %call10, metadata !5476, metadata !DIExpression()), !dbg !5499
  %call12 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !5500
  %call13 = call fastcc %struct.object_block* @get_block_for_section(%union.section* %call10) #8, !dbg !5501
  %call14 = call fastcc %struct.rtx_def* @create_block_symbol(i8* %call12, %struct.object_block* %call13, i64 -1) #8, !dbg !5502
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call14, metadata !5471, metadata !DIExpression()), !dbg !5479
  br label %if.end18, !dbg !5503

if.else:                                          ; preds = %if.end
  %call16 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !5504
  %call17 = call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 16, i8* %call16) #6, !dbg !5504
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call17, metadata !5471, metadata !DIExpression()), !dbg !5479
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then9
  %symbol.0 = phi %struct.rtx_def* [ %call14, %if.then9 ], [ %call17, %if.else ], !dbg !5505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol.0, metadata !5471, metadata !DIExpression()), !dbg !5479
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5506
  %rt_int = bitcast %union.rtunion_def* %6 to i32*, !dbg !5506
  %7 = load i32, i32* %rt_int, align 8, !dbg !5507
  %or = or i32 %7, 2, !dbg !5507
  store i32 %or, i32* %rt_int, align 8, !dbg !5507
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 0, !dbg !5508
  %bf.load = load i32, i32* %8, align 8, !dbg !5508
  %bf.clear = and i32 %bf.load, 67108864, !dbg !5508
  %tobool19 = icmp eq i32 %bf.clear, 0, !dbg !5508
  br i1 %tobool19, label %cond.end, label %cond.true, !dbg !5508

cond.true:                                        ; preds = %if.end18
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !5508
  %bf.load24.pre = load i32, i32* %8, align 8, !dbg !5509
  br label %cond.end, !dbg !5508

cond.end:                                         ; preds = %if.end18, %cond.true
  %bf.load24 = phi i32 [ %bf.load, %if.end18 ], [ %bf.load24.pre, %cond.true ], !dbg !5509
  %9 = bitcast i8* %value to i64*, !dbg !5508
  %10 = load i64, i64* %9, align 8, !dbg !5508
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5508
  %12 = bitcast %union.rtunion_def* %11 to i64*, !dbg !5508
  store i64 %10, i64* %12, align 8, !dbg !5508
  %bf.set = or i32 %bf.load24, 1073741824, !dbg !5509
  store i32 %bf.set, i32* %8, align 8, !dbg !5509
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5510
  %13 = bitcast %union.tree_node** %type to i64**, !dbg !5510
  %14 = load i64*, i64** %13, align 8, !dbg !5510
  %bf.load26 = load i64, i64* %14, align 8, !dbg !5510
  %bf.cast1 = and i64 %bf.load26, 65535, !dbg !5510
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !5510
  br i1 %cmp, label %cond.true28, label %cond.false32, !dbg !5510

cond.true28:                                      ; preds = %cond.end
  %.cast = bitcast i64* %14 to %union.tree_node*, !dbg !5510
  %call31 = call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !5510
  br label %cond.end39, !dbg !5510

cond.false32:                                     ; preds = %cond.end
  %type35 = bitcast i64* %14 to %struct.tree_type*, !dbg !5510
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i64 0, i32 6, !dbg !5510
  %bf.load36 = load i32, i32* %mode, align 4, !dbg !5510
  %bf.lshr37 = lshr i32 %bf.load36, 16, !dbg !5510
  %bf.clear38 = and i32 %bf.lshr37, 255, !dbg !5510
  br label %cond.end39, !dbg !5510

cond.end39:                                       ; preds = %cond.false32, %cond.true28
  %cond40 = phi i32 [ %call31, %cond.true28 ], [ %bf.clear38, %cond.false32 ], !dbg !5510
  %call41 = call %struct.rtx_def* @gen_rtx_MEM(i32 %cond40, %struct.rtx_def* %symbol.0) #6, !dbg !5511
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call41, metadata !5472, metadata !DIExpression()), !dbg !5479
  call void @set_mem_attributes(%struct.rtx_def* %call41, %union.tree_node* %exp, i32 1) #6, !dbg !5512
  call void @set_mem_alias_set(%struct.rtx_def* %call41, i32 0) #6, !dbg !5513
  %15 = load i32, i32* @const_alias_set, align 4, !dbg !5514
  call void @set_mem_alias_set(%struct.rtx_def* %call41, i32 %15) #6, !dbg !5515
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call41, i64 0, i32 0, !dbg !5516
  %bf.load42 = load i32, i32* %16, align 8, !dbg !5517
  %bf.set44 = or i32 %bf.load42, 536870912, !dbg !5517
  store i32 %bf.set44, i32* %16, align 8, !dbg !5517
  %17 = load void (%union.tree_node*, %struct.rtx_def*, i32)*, void (%union.tree_node*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 51), align 8, !dbg !5518
  call void %17(%union.tree_node* %exp, %struct.rtx_def* %call41, i32 1) #6, !dbg !5519
  %rtl45 = bitcast i8* %call to %struct.rtx_def**, !dbg !5520
  store %struct.rtx_def* %call41, %struct.rtx_def** %rtl45, align 8, !dbg !5521
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #7, !dbg !5522
  ret %struct.constant_descriptor_tree* %1, !dbg !5523
}

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_output_constant_def_contents(%struct.constant_descriptor_tree* %desc, i32 %defer) unnamed_addr #5 !dbg !5524 {
entry:
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_tree* %desc, metadata !5528, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata i32 %defer, metadata !5529, metadata !DIExpression()), !dbg !5532
  %rtl = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %desc, i64 0, i32 0, !dbg !5533
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5533
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5533
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5533
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5533
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !5530, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !5531, metadata !DIExpression()), !dbg !5532
  %2 = load i32, i32* @flag_syntax_only, align 4, !dbg !5534
  %tobool = icmp eq i32 %2, 0, !dbg !5534
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !5536

if.end:                                           ; preds = %entry
  %value = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %desc, i64 0, i32 1, !dbg !5537
  %3 = bitcast %union.tree_node** %value to i64**, !dbg !5537
  %4 = load i64*, i64** %3, align 8, !dbg !5537
  %bf.load = load i64, i64* %4, align 8, !dbg !5538
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !5538
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !5538
  br i1 %tobool1, label %if.end3, label %cleanup.cont, !dbg !5540

if.end3:                                          ; preds = %if.end
  %tobool4 = icmp eq i32 %defer, 0, !dbg !5541
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !5543

if.then5:                                         ; preds = %if.end3
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5544
  %tobool6 = icmp eq %struct.function* %5, null, !dbg !5544
  br i1 %tobool6, label %cleanup.cont, label %if.then7, !dbg !5547

if.then7:                                         ; preds = %if.then5
  %6 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !5548
  %inc = add i32 %6, 1, !dbg !5548
  store i32 %inc, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !5548
  br label %cleanup.cont, !dbg !5549

if.end9:                                          ; preds = %if.end3
  tail call fastcc void @output_constant_def_contents(%struct.rtx_def* %1) #8, !dbg !5550
  br label %cleanup.cont, !dbg !5551

cleanup.cont:                                     ; preds = %if.then5, %if.end, %entry, %if.end9, %if.then7
  ret void, !dbg !5551
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @lookup_constant_def(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5552 {
entry:
  %key = alloca %struct.constant_descriptor_tree, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5554, metadata !DIExpression()), !dbg !5557
  %0 = bitcast %struct.constant_descriptor_tree* %key to i8*, !dbg !5558
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5558
  %value = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %key, i64 0, i32 1, !dbg !5559
  store %union.tree_node* %exp, %union.tree_node** %value, align 8, !dbg !5560
  %call = tail call fastcc i32 @const_hash_1(%union.tree_node* %exp) #8, !dbg !5561
  %hash = getelementptr inbounds %struct.constant_descriptor_tree, %struct.constant_descriptor_tree* %key, i64 0, i32 2, !dbg !5562
  store i32 %call, i32* %hash, align 8, !dbg !5563
  %1 = load %struct.htab*, %struct.htab** @const_desc_htab, align 8, !dbg !5564
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %1, i8* nonnull %0, i32 %call) #6, !dbg !5565
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5555, metadata !DIExpression()), !dbg !5557
  %tobool = icmp eq i8* %call2, null, !dbg !5566
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5566

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5555, metadata !DIExpression()), !dbg !5557
  %rtl = bitcast i8* %call2 to %struct.rtx_def**, !dbg !5567
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !5567
  br label %cond.end, !dbg !5566

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.rtx_def* [ %2, %cond.true ], [ null, %entry ], !dbg !5566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5568
  ret %struct.rtx_def* %cond, !dbg !5569
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @init_varasm_status() local_unnamed_addr #5 !dbg !5570 {
entry:
  %call = tail call fastcc %struct.rtx_constant_pool* @create_constant_pool() #8, !dbg !5571
  store %struct.rtx_constant_pool* %call, %struct.rtx_constant_pool** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 0), align 8, !dbg !5572
  store i32 0, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !5573
  ret void, !dbg !5574
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_constant_pool* @create_constant_pool() unnamed_addr #5 !dbg !5575 {
entry:
  %call = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !5580
  %0 = bitcast i8* %call to %struct.rtx_constant_pool*, !dbg !5580
  call void @llvm.dbg.value(metadata %struct.rtx_constant_pool* %0, metadata !5579, metadata !DIExpression()), !dbg !5581
  %call1 = tail call %struct.htab* @htab_create_alloc(i64 31, i32 (i8*)* nonnull @const_desc_rtx_hash, i32 (i8*, i8*)* nonnull @const_desc_rtx_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !5582
  %const_rtx_htab = getelementptr inbounds i8, i8* %call, i64 16, !dbg !5583
  %1 = bitcast i8* %const_rtx_htab to %struct.htab**, !dbg !5583
  store %struct.htab* %call1, %struct.htab** %1, align 8, !dbg !5584
  %first = bitcast i8* %call to %struct.constant_descriptor_rtx**, !dbg !5585
  store %struct.constant_descriptor_rtx* null, %struct.constant_descriptor_rtx** %first, align 8, !dbg !5586
  %last = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5587
  %2 = bitcast i8* %last to %struct.constant_descriptor_rtx**, !dbg !5587
  store %struct.constant_descriptor_rtx* null, %struct.constant_descriptor_rtx** %2, align 8, !dbg !5588
  %offset = getelementptr inbounds i8, i8* %call, i64 24, !dbg !5589
  %3 = bitcast i8* %offset to i64*, !dbg !5589
  store i64 0, i64* %3, align 8, !dbg !5590
  ret %struct.rtx_constant_pool* %0, !dbg !5591
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @simplify_subtraction(%struct.rtx_def* %x) local_unnamed_addr #5 !dbg !5592 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5596, metadata !DIExpression()), !dbg !5598
  %call = tail call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %x) #6, !dbg !5599
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5597, metadata !DIExpression()), !dbg !5598
  %tobool = icmp eq %struct.rtx_def* %call, null, !dbg !5600
  %call.x = select i1 %tobool, %struct.rtx_def* %x, %struct.rtx_def* %call, !dbg !5600
  ret %struct.rtx_def* %call.x, !dbg !5601
}

declare dso_local %struct.rtx_def* @simplify_rtx(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %x) local_unnamed_addr #5 !dbg !5602 {
entry:
  %tmp = alloca %struct.constant_descriptor_rtx, align 8
  %label = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5606, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5607, metadata !DIExpression()), !dbg !5622
  %0 = bitcast %struct.constant_descriptor_rtx* %tmp to i8*, !dbg !5623
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !5623
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %label, i64 0, i64 0, !dbg !5624
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1) #7, !dbg !5624
  call void @llvm.dbg.declare(metadata [256 x i8]* %label, metadata !5611, metadata !DIExpression()), !dbg !5625
  %2 = load i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 36), align 8, !dbg !5626
  %call = tail call zeroext i8 %2(%struct.rtx_def* %x) #6, !dbg !5628
  %tobool = icmp eq i8 %call, 0, !dbg !5628
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5629

if.end:                                           ; preds = %entry
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 36), align 8, !dbg !5630
  %3 = load i8 (i32, %struct.rtx_def*)*, i8 (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 42), align 8, !dbg !5631
  %call1 = tail call zeroext i8 %3(i32 %mode, %struct.rtx_def* %x) #6, !dbg !5632
  %tobool2 = icmp eq i8 %call1, 0, !dbg !5632
  %4 = load %struct.rtx_constant_pool*, %struct.rtx_constant_pool** @shared_constant_pool, align 8, !dbg !5632
  %5 = load %struct.rtx_constant_pool*, %struct.rtx_constant_pool** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 0), align 8, !dbg !5632
  %cond = select i1 %tobool2, %struct.rtx_constant_pool* %5, %struct.rtx_constant_pool* %4, !dbg !5632
  call void @llvm.dbg.value(metadata %struct.rtx_constant_pool* %cond, metadata !5610, metadata !DIExpression()), !dbg !5622
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %tmp, i64 0, i32 3, !dbg !5633
  store %struct.rtx_def* %x, %struct.rtx_def** %constant, align 8, !dbg !5634
  %mode3 = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %tmp, i64 0, i32 6, !dbg !5635
  store i32 %mode, i32* %mode3, align 4, !dbg !5636
  %call4 = tail call fastcc i32 @const_rtx_hash(%struct.rtx_def* %x) #8, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %call4, metadata !5614, metadata !DIExpression()), !dbg !5622
  %const_rtx_htab = getelementptr inbounds %struct.rtx_constant_pool, %struct.rtx_constant_pool* %cond, i64 0, i32 2, !dbg !5638
  %6 = load %struct.htab*, %struct.htab** %const_rtx_htab, align 8, !dbg !5638
  %call5 = call i8** @htab_find_slot_with_hash(%struct.htab* %6, i8* nonnull %0, i32 %call4, i32 1) #6, !dbg !5639
  call void @llvm.dbg.value(metadata i8** %call5, metadata !5616, metadata !DIExpression()), !dbg !5622
  %7 = bitcast i8** %call5 to %struct.constant_descriptor_rtx**, !dbg !5640
  %8 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %7, align 8, !dbg !5640
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %8, metadata !5608, metadata !DIExpression()), !dbg !5622
  %tobool6 = icmp eq %struct.constant_descriptor_rtx* %8, null, !dbg !5641
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !5643

if.then7:                                         ; preds = %if.end
  %mem = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %8, i64 0, i32 1, !dbg !5644
  %9 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !5644
  %call8 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %9) #6, !dbg !5645
  br label %cleanup, !dbg !5646

if.end9:                                          ; preds = %if.end
  %call10 = call i8* @ggc_alloc_stat(i64 64) #6, !dbg !5647
  call void @llvm.dbg.value(metadata i8* %call10, metadata !5608, metadata !DIExpression()), !dbg !5622
  store i8* %call10, i8** %call5, align 8, !dbg !5648
  %cmp = icmp eq i32 %mode, 0, !dbg !5649
  %10 = load i32, i32* @word_mode, align 4, !dbg !5649
  %cond15 = select i1 %cmp, i32 %10, i32 %mode, !dbg !5649
  %call16 = call i32 @get_mode_alignment(i32 %cond15) #6, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %call16, metadata !5615, metadata !DIExpression()), !dbg !5622
  %11 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !5650
  %call17 = call %union.tree_node* %11(i32 %mode, i32 0) #6, !dbg !5651
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5617, metadata !DIExpression()), !dbg !5652
  %cmp18 = icmp eq %union.tree_node* %call17, null, !dbg !5653
  br i1 %cmp18, label %if.end23, label %if.then20, !dbg !5655

if.then20:                                        ; preds = %if.end9
  %call21 = call %union.tree_node* @make_tree(%union.tree_node* nonnull %call17, %struct.rtx_def* %x) #6, !dbg !5656
  %call22 = call i32 @ix86_constant_alignment(%union.tree_node* %call21, i32 %call16) #6, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %call22, metadata !5615, metadata !DIExpression()), !dbg !5622
  br label %if.end23, !dbg !5657

if.end23:                                         ; preds = %if.end9, %if.then20
  %align.0 = phi i32 [ %call22, %if.then20 ], [ %call16, %if.end9 ], !dbg !5622
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !5615, metadata !DIExpression()), !dbg !5622
  %div = lshr i32 %align.0, 3, !dbg !5658
  %sub = add nsw i32 %div, -1, !dbg !5659
  %conv24 = zext i32 %sub to i64, !dbg !5660
  %offset = getelementptr inbounds %struct.rtx_constant_pool, %struct.rtx_constant_pool* %cond, i64 0, i32 3, !dbg !5661
  %12 = load i64, i64* %offset, align 8, !dbg !5662
  %add = add nsw i64 %12, %conv24, !dbg !5662
  %neg = sub nsw i32 0, %div, !dbg !5663
  %conv27 = zext i32 %neg to i64, !dbg !5663
  %and = and i64 %add, %conv27, !dbg !5664
  store i64 %and, i64* %offset, align 8, !dbg !5664
  %next = bitcast i8* %call10 to %struct.constant_descriptor_rtx**, !dbg !5665
  store %struct.constant_descriptor_rtx* null, %struct.constant_descriptor_rtx** %next, align 8, !dbg !5666
  %13 = bitcast %struct.rtx_def** %constant to i64*, !dbg !5667
  %14 = load i64, i64* %13, align 8, !dbg !5667
  %constant30 = getelementptr inbounds i8, i8* %call10, i64 24, !dbg !5668
  %15 = bitcast i8* %constant30 to i64*, !dbg !5669
  store i64 %14, i64* %15, align 8, !dbg !5669
  %16 = load i64, i64* %offset, align 8, !dbg !5670
  %offset32 = getelementptr inbounds i8, i8* %call10, i64 32, !dbg !5671
  %17 = bitcast i8* %offset32 to i64*, !dbg !5671
  store i64 %16, i64* %17, align 8, !dbg !5672
  %hash33 = getelementptr inbounds i8, i8* %call10, i64 40, !dbg !5673
  %18 = bitcast i8* %hash33 to i32*, !dbg !5673
  store i32 %call4, i32* %18, align 8, !dbg !5674
  %mode34 = getelementptr inbounds i8, i8* %call10, i64 44, !dbg !5675
  %19 = bitcast i8* %mode34 to i32*, !dbg !5675
  store i32 %mode, i32* %19, align 4, !dbg !5676
  %align35 = getelementptr inbounds i8, i8* %call10, i64 48, !dbg !5677
  %20 = bitcast i8* %align35 to i32*, !dbg !5677
  store i32 %align.0, i32* %20, align 8, !dbg !5678
  %21 = load i32, i32* @const_labelno, align 4, !dbg !5679
  %labelno = getelementptr inbounds i8, i8* %call10, i64 52, !dbg !5680
  %22 = bitcast i8* %labelno to i32*, !dbg !5680
  store i32 %21, i32* %22, align 4, !dbg !5681
  %mark = getelementptr inbounds i8, i8* %call10, i64 56, !dbg !5682
  %23 = bitcast i8* %mark to i32*, !dbg !5682
  store i32 0, i32* %23, align 8, !dbg !5683
  %idxprom = zext i32 %mode to i64, !dbg !5684
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5684
  %24 = load i8, i8* %arrayidx, align 1, !dbg !5684
  %conv37 = zext i8 %24 to i64, !dbg !5684
  %25 = load i64, i64* %offset, align 8, !dbg !5685
  %add39 = add nsw i64 %25, %conv37, !dbg !5685
  store i64 %add39, i64* %offset, align 8, !dbg !5685
  %last = getelementptr inbounds %struct.rtx_constant_pool, %struct.rtx_constant_pool* %cond, i64 0, i32 1, !dbg !5686
  %26 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %last, align 8, !dbg !5686
  %tobool40 = icmp eq %struct.constant_descriptor_rtx* %26, null, !dbg !5688
  br i1 %tobool40, label %if.else, label %if.then41, !dbg !5689

if.then41:                                        ; preds = %if.end23
  %27 = bitcast %struct.constant_descriptor_rtx* %26 to i8**, !dbg !5689
  store i8* %call10, i8** %27, align 8, !dbg !5690
  %.pre = bitcast %struct.constant_descriptor_rtx** %last to i8**, !dbg !5691
  br label %if.end45, !dbg !5692

if.else:                                          ; preds = %if.end23
  %28 = bitcast %struct.constant_descriptor_rtx** %last to i8**, !dbg !5693
  store i8* %call10, i8** %28, align 8, !dbg !5693
  %29 = bitcast %struct.rtx_constant_pool* %cond to i8**, !dbg !5694
  store i8* %call10, i8** %29, align 8, !dbg !5694
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then41
  %.pre-phi = phi i8** [ %28, %if.else ], [ %.pre, %if.then41 ], !dbg !5691
  store i8* %call10, i8** %.pre-phi, align 8, !dbg !5691
  %call47 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), i32 %21) #6, !dbg !5695
  %30 = load i32, i32* @const_labelno, align 4, !dbg !5697
  %inc = add nsw i32 %30, 1, !dbg !5697
  store i32 %inc, i32* @const_labelno, align 4, !dbg !5697
  %call48 = call fastcc zeroext i8 @use_object_blocks_p() #8, !dbg !5698
  %tobool50 = icmp eq i8 %call48, 0, !dbg !5698
  br i1 %tobool50, label %if.else61, label %land.lhs.true, !dbg !5699

land.lhs.true:                                    ; preds = %if.end45
  %31 = load i8 (i32, %struct.rtx_def*)*, i8 (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 42), align 8, !dbg !5700
  %call51 = call zeroext i8 %31(i32 %mode, %struct.rtx_def* %x) #6, !dbg !5701
  %tobool53 = icmp eq i8 %call51, 0, !dbg !5701
  br i1 %tobool53, label %if.else61, label %if.then54, !dbg !5702

if.then54:                                        ; preds = %land.lhs.true
  %32 = load %union.section* (i32, %struct.rtx_def*, i64)*, %union.section* (i32, %struct.rtx_def*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 22), align 8, !dbg !5703
  %conv55 = zext i32 %align.0 to i64, !dbg !5704
  %call56 = call %union.section* %32(i32 %mode, %struct.rtx_def* %x, i64 %conv55) #6, !dbg !5705
  call void @llvm.dbg.value(metadata %union.section* %call56, metadata !5619, metadata !DIExpression()), !dbg !5706
  %call58 = call i8* @ggc_alloc_string(i8* nonnull %1, i32 -1) #6, !dbg !5707
  %call59 = call fastcc %struct.object_block* @get_block_for_section(%union.section* %call56) #8, !dbg !5708
  %call60 = call fastcc %struct.rtx_def* @create_block_symbol(i8* %call58, %struct.object_block* %call59, i64 -1) #8, !dbg !5709
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call60, metadata !5613, metadata !DIExpression()), !dbg !5622
  br label %if.end65, !dbg !5710

if.else61:                                        ; preds = %land.lhs.true, %if.end45
  %call63 = call i8* @ggc_alloc_string(i8* nonnull %1, i32 -1) #6, !dbg !5711
  %call64 = call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 16, i8* %call63) #6, !dbg !5711
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call64, metadata !5613, metadata !DIExpression()), !dbg !5622
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.then54
  %symbol.0 = phi %struct.rtx_def* [ %call60, %if.then54 ], [ %call64, %if.else61 ], !dbg !5712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol.0, metadata !5613, metadata !DIExpression()), !dbg !5622
  %sym = getelementptr inbounds i8, i8* %call10, i64 16, !dbg !5713
  %33 = bitcast i8* %sym to %struct.rtx_def**, !dbg !5713
  store %struct.rtx_def* %symbol.0, %struct.rtx_def** %33, align 8, !dbg !5714
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5715
  %rt_int = bitcast %union.rtunion_def* %34 to i32*, !dbg !5715
  %35 = load i32, i32* %rt_int, align 8, !dbg !5716
  %or = or i32 %35, 2, !dbg !5716
  store i32 %or, i32* %rt_int, align 8, !dbg !5716
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 0, !dbg !5717
  %bf.load = load i32, i32* %36, align 8, !dbg !5718
  %bf.set = or i32 %bf.load, 67108864, !dbg !5718
  store i32 %bf.set, i32* %36, align 8, !dbg !5718
  %37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol.0, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, !dbg !5719
  store i8* %call10, i8** %37, align 8, !dbg !5719
  %call77 = call %struct.rtx_def* @gen_const_mem(i32 %mode, %struct.rtx_def* %symbol.0) #6, !dbg !5720
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call77, metadata !5612, metadata !DIExpression()), !dbg !5622
  %mem78 = getelementptr inbounds i8, i8* %call10, i64 8, !dbg !5721
  %38 = bitcast i8* %mem78 to %struct.rtx_def**, !dbg !5721
  store %struct.rtx_def* %call77, %struct.rtx_def** %38, align 8, !dbg !5722
  %39 = load %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 2), align 8, !dbg !5723
  %call79 = call %union.tree_node* %39(i32 %mode, i32 0) #6, !dbg !5724
  call void @set_mem_attributes(%struct.rtx_def* %call77, %union.tree_node* %call79, i32 1) #6, !dbg !5725
  call void @set_mem_align(%struct.rtx_def* %call77, i32 %align.0) #6, !dbg !5726
  %40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !5727
  %bf.load80 = load i32, i32* %40, align 8, !dbg !5727
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !5727
  %cmp82 = icmp eq i32 %bf.clear81, 44, !dbg !5729
  br i1 %cmp82, label %if.then84, label %if.end91, !dbg !5730

if.then84:                                        ; preds = %if.end65
  %arrayidx87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5731
  %41 = bitcast %union.rtunion_def* %arrayidx87 to i32**, !dbg !5731
  %42 = load i32*, i32** %41, align 8, !dbg !5731
  %bf.load88 = load i32, i32* %42, align 8, !dbg !5732
  %bf.set90 = or i32 %bf.load88, 268435456, !dbg !5732
  store i32 %bf.set90, i32* %42, align 8, !dbg !5732
  br label %if.end91, !dbg !5731

if.end91:                                         ; preds = %if.then84, %if.end65
  %call92 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call77) #6, !dbg !5733
  br label %cleanup, !dbg !5734

cleanup:                                          ; preds = %entry, %if.end91, %if.then7
  %retval.0 = phi %struct.rtx_def* [ %call8, %if.then7 ], [ %call92, %if.end91 ], [ null, %entry ], !dbg !5622
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1) #7, !dbg !5735
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !5735
  ret %struct.rtx_def* %retval.0, !dbg !5735
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @const_rtx_hash(%struct.rtx_def* %x) unnamed_addr #5 !dbg !5736 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %h = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !5740, metadata !DIExpression()), !dbg !5742
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = bitcast i32* %h to i8*, !dbg !5743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5743
  call void @llvm.dbg.value(metadata i32 0, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i32 0, i32* %h, align 4, !dbg !5744
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x.addr, metadata !5740, metadata !DIExpression(DW_OP_deref)), !dbg !5742
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %x.addr, i32 (%struct.rtx_def**, i8*)* nonnull @const_rtx_hash_1, i8* nonnull %0) #6, !dbg !5745
  %1 = load i32, i32* %h, align 4, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %1, metadata !5741, metadata !DIExpression()), !dbg !5742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !5747
  ret i32 %1, !dbg !5748
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @get_mode_alignment(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.object_block* @get_block_for_section(%union.section* %sect) unnamed_addr #5 !dbg !5749 {
entry:
  call void @llvm.dbg.value(metadata %union.section* %sect, metadata !5753, metadata !DIExpression()), !dbg !5756
  %cmp = icmp eq %union.section* %sect, null, !dbg !5757
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5759

if.end:                                           ; preds = %entry
  %0 = load %struct.htab*, %struct.htab** @object_block_htab, align 8, !dbg !5760
  %1 = bitcast %union.section* %sect to i8*, !dbg !5761
  %call = tail call fastcc i32 @hash_section(%union.section* nonnull %sect) #8, !dbg !5762
  %call1 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %0, i8* nonnull %1, i32 %call, i32 1) #6, !dbg !5763
  call void @llvm.dbg.value(metadata i8** %call1, metadata !5755, metadata !DIExpression()), !dbg !5756
  %2 = bitcast i8** %call1 to %struct.object_block**, !dbg !5764
  %3 = load %struct.object_block*, %struct.object_block** %2, align 8, !dbg !5764
  call void @llvm.dbg.value(metadata %struct.object_block* %3, metadata !5754, metadata !DIExpression()), !dbg !5756
  %cmp2 = icmp eq %struct.object_block* %3, null, !dbg !5765
  br i1 %cmp2, label %if.then3, label %cleanup, !dbg !5767

if.then3:                                         ; preds = %if.end
  %call4 = tail call i8* @ggc_alloc_cleared_stat(i64 40) #6, !dbg !5768
  %4 = bitcast i8* %call4 to %struct.object_block*, !dbg !5770
  call void @llvm.dbg.value(metadata %struct.object_block* %4, metadata !5754, metadata !DIExpression()), !dbg !5756
  %sect5 = bitcast i8* %call4 to %union.section**, !dbg !5771
  store %union.section* %sect, %union.section** %sect5, align 8, !dbg !5772
  store i8* %call4, i8** %call1, align 8, !dbg !5773
  br label %cleanup, !dbg !5774

cleanup:                                          ; preds = %if.end, %if.then3, %entry
  %retval.0 = phi %struct.object_block* [ null, %entry ], [ %4, %if.then3 ], [ %3, %if.end ], !dbg !5756
  ret %struct.object_block* %retval.0, !dbg !5775
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !5776 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5780
  %rt_constant = bitcast %union.rtunion_def* %0 to %struct.constant_descriptor_rtx**, !dbg !5780
  %1 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !5780
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %1, i64 0, i32 3, !dbg !5781
  %2 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !5781
  ret %struct.rtx_def* %2, !dbg !5782
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def* %addr, i8* %pmarked) local_unnamed_addr #5 !dbg !5783 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !5787, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8* %pmarked, metadata !5788, metadata !DIExpression()), !dbg !5790
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5791
  %rt_constant = bitcast %union.rtunion_def* %0 to %struct.constant_descriptor_rtx**, !dbg !5791
  %1 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !5791
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %1, metadata !5789, metadata !DIExpression()), !dbg !5790
  %mark = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %1, i64 0, i32 9, !dbg !5792
  %2 = load i32, i32* %mark, align 8, !dbg !5792
  %cmp = icmp ne i32 %2, 0, !dbg !5793
  %conv1 = zext i1 %cmp to i8, !dbg !5794
  store i8 %conv1, i8* %pmarked, align 1, !dbg !5795
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %1, i64 0, i32 3, !dbg !5796
  %3 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !5796
  ret %struct.rtx_def* %3, !dbg !5797
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_pool_mode(%struct.rtx_def* %addr) local_unnamed_addr #5 !dbg !5798 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %addr, metadata !5805, metadata !DIExpression()), !dbg !5806
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %addr, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5807
  %rt_constant = bitcast %union.rtunion_def* %0 to %struct.constant_descriptor_rtx**, !dbg !5807
  %1 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !5807
  %mode = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %1, i64 0, i32 6, !dbg !5808
  %2 = load i32, i32* %mode, align 4, !dbg !5808
  ret i32 %2, !dbg !5809
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_pool_size() local_unnamed_addr #5 !dbg !5810 {
entry:
  %0 = load %struct.rtx_constant_pool*, %struct.rtx_constant_pool** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 0), align 8, !dbg !5811
  %offset = getelementptr inbounds %struct.rtx_constant_pool, %struct.rtx_constant_pool* %0, i64 0, i32 3, !dbg !5812
  %1 = load i64, i64* %offset, align 8, !dbg !5812
  %conv = trunc i64 %1 to i32, !dbg !5813
  ret i32 %conv, !dbg !5814
}

; Function Attrs: nounwind uwtable
define dso_local void @output_shared_constant_pool() local_unnamed_addr #5 !dbg !5815 {
entry:
  %0 = load %struct.rtx_constant_pool*, %struct.rtx_constant_pool** @shared_constant_pool, align 8, !dbg !5816
  tail call fastcc void @output_constant_pool_contents(%struct.rtx_constant_pool* %0) #8, !dbg !5817
  ret void, !dbg !5818
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constant_pool_contents(%struct.rtx_constant_pool* %pool) unnamed_addr #5 !dbg !5819 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_constant_pool* %pool, metadata !5823, metadata !DIExpression()), !dbg !5825
  %first = getelementptr inbounds %struct.rtx_constant_pool, %struct.rtx_constant_pool* %pool, i64 0, i32 0, !dbg !5826
  br label %for.cond, !dbg !5828

for.cond:                                         ; preds = %for.inc, %entry
  %desc.0.in = phi %struct.constant_descriptor_rtx** [ %first, %entry ], [ %next, %for.inc ]
  %desc.0 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %desc.0.in, align 8, !dbg !5829
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %desc.0, metadata !5824, metadata !DIExpression()), !dbg !5825
  %tobool = icmp eq %struct.constant_descriptor_rtx* %desc.0, null, !dbg !5830
  br i1 %tobool, label %for.end, label %for.body, !dbg !5830

for.body:                                         ; preds = %for.cond
  %mark = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 9, !dbg !5831
  %0 = load i32, i32* %mark, align 8, !dbg !5831
  %tobool1 = icmp eq i32 %0, 0, !dbg !5834
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !5835

if.then:                                          ; preds = %for.body
  %sym = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 2, !dbg !5836
  %1 = load %struct.rtx_def*, %struct.rtx_def** %sym, align 8, !dbg !5836
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5836
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !5836
  %3 = load i32, i32* %rt_int, align 8, !dbg !5836
  %4 = trunc i32 %3 to i8, !dbg !5836
  %cmp = icmp slt i8 %4, 0, !dbg !5836
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5839

land.lhs.true:                                    ; preds = %if.then
  %block = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 1, !dbg !5840
  %5 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !5840
  %tobool4 = icmp eq %struct.object_block* %5, null, !dbg !5840
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !5841

if.then5:                                         ; preds = %land.lhs.true
  tail call void @place_block_symbol(%struct.rtx_def* %1) #8, !dbg !5842
  br label %for.inc, !dbg !5842

if.else:                                          ; preds = %land.lhs.true, %if.then
  %6 = load %union.section* (i32, %struct.rtx_def*, i64)*, %union.section* (i32, %struct.rtx_def*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 22), align 8, !dbg !5843
  %mode = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 6, !dbg !5845
  %7 = load i32, i32* %mode, align 4, !dbg !5845
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 3, !dbg !5846
  %8 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !5846
  %align = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 7, !dbg !5847
  %9 = load i32, i32* %align, align 8, !dbg !5847
  %conv = zext i32 %9 to i64, !dbg !5848
  %call = tail call %union.section* %6(i32 %7, %struct.rtx_def* %8, i64 %conv) #6, !dbg !5849
  tail call void @switch_to_section(%union.section* %call) #8, !dbg !5850
  %10 = load i32, i32* %align, align 8, !dbg !5851
  tail call fastcc void @output_constant_pool_1(%struct.constant_descriptor_rtx* nonnull %desc.0, i32 %10) #8, !dbg !5852
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then5
  %next = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc.0, i64 0, i32 0, !dbg !5853
  br label %for.cond, !dbg !5854, !llvm.loop !5855

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5857
}

; Function Attrs: nounwind uwtable
define dso_local i32 @compute_reloc_for_constant(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !5858 {
entry:
  br label %tailrecurse, !dbg !5867

tailrecurse:                                      ; preds = %sw.bb35, %entry
  %exp.tr = phi %union.tree_node* [ %exp, %entry ], [ %8, %sw.bb35 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 0, metadata !5861, metadata !DIExpression()), !dbg !5868
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5869
  %bf.load = load i64, i64* %0, align 8, !dbg !5869
  %1 = trunc i64 %bf.load to i16, !dbg !5869
  switch i16 %1, label %sw.epilog.loopexit2 [
    i16 121, label %sw.bb
    i16 122, label %sw.bb
    i16 63, label %sw.bb11
    i16 66, label %sw.bb11
    i16 64, label %sw.bb21
    i16 116, label %sw.bb35
    i16 113, label %sw.bb35
    i16 118, label %sw.bb35
    i16 51, label %for.cond41.preheader
  ], !dbg !5870

for.cond41.preheader:                             ; preds = %tailrecurse
  %exp.tr.lcssa14 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa14, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa14, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa14, metadata !5860, metadata !DIExpression()), !dbg !5868
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5871
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5871
  br label %for.cond41, !dbg !5874

sw.bb:                                            ; preds = %tailrecurse, %tailrecurse
  %exp.tr.lcssa11 = phi %union.tree_node* [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa11, metadata !5860, metadata !DIExpression()), !dbg !5868
  br label %for.cond, !dbg !5875

for.cond:                                         ; preds = %for.inc, %sw.bb
  %exp.pn = phi %union.tree_node* [ %exp.tr.lcssa11, %sw.bb ], [ %tem.0, %for.inc ]
  %tem.0.in = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.pn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5877
  %tem.0 = load %union.tree_node*, %union.tree_node** %tem.0.in, align 8, !dbg !5877
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !5863, metadata !DIExpression()), !dbg !5868
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %tem.0) #8, !dbg !5878
  %tobool = icmp eq i8 %call, 0, !dbg !5880
  br i1 %tobool, label %for.end, label %for.inc, !dbg !5880

for.inc:                                          ; preds = %for.cond
  br label %for.cond, !dbg !5881, !llvm.loop !5882

for.end:                                          ; preds = %for.cond
  %tem.0.lcssa = phi %union.tree_node* [ %tem.0, %for.cond ], !dbg !5877
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5884
  %bf.load6 = load i64, i64* %3, align 8, !dbg !5884
  %bf.cast81 = and i64 %bf.load6, 134217728, !dbg !5884
  %tobool9 = icmp eq i64 %bf.cast81, 0, !dbg !5884
  %reloc.0 = select i1 %tobool9, i32 1, i32 2, !dbg !5886
  br label %sw.epilog, !dbg !5886

sw.bb11:                                          ; preds = %tailrecurse, %tailrecurse
  %exp.tr.lcssa12 = phi %union.tree_node* [ %exp.tr, %tailrecurse ], [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa12, metadata !5860, metadata !DIExpression()), !dbg !5868
  %operands13 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5887
  %4 = load %union.tree_node*, %union.tree_node** %operands13, align 8, !dbg !5887
  %call15 = tail call i32 @compute_reloc_for_constant(%union.tree_node* %4) #8, !dbg !5888
  call void @llvm.dbg.value(metadata i32 %call15, metadata !5861, metadata !DIExpression()), !dbg !5868
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands13, i64 1, !dbg !5889
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !5889
  %call19 = tail call i32 @compute_reloc_for_constant(%union.tree_node* %5) #8, !dbg !5890
  %or20 = or i32 %call15, %call19, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %or20, metadata !5861, metadata !DIExpression()), !dbg !5868
  ret i32 %or20, !dbg !5892

sw.bb21:                                          ; preds = %tailrecurse
  %exp.tr.lcssa13 = phi %union.tree_node* [ %exp.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa13, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa13, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.tr.lcssa13, metadata !5860, metadata !DIExpression()), !dbg !5868
  %operands23 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr.lcssa13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5893
  %6 = load %union.tree_node*, %union.tree_node** %operands23, align 8, !dbg !5893
  %call25 = tail call i32 @compute_reloc_for_constant(%union.tree_node* %6) #8, !dbg !5894
  call void @llvm.dbg.value(metadata i32 %call25, metadata !5861, metadata !DIExpression()), !dbg !5868
  %arrayidx28 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands23, i64 1, !dbg !5895
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx28, align 8, !dbg !5895
  %call29 = tail call i32 @compute_reloc_for_constant(%union.tree_node* %7) #8, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %call29, metadata !5862, metadata !DIExpression()), !dbg !5868
  %cmp = icmp eq i32 %call25, 1, !dbg !5897
  %cmp30 = icmp eq i32 %call29, 1, !dbg !5899
  %or.cond = and i1 %cmp, %cmp30, !dbg !5900
  %or33 = or i32 %call25, %call29, !dbg !5900
  %reloc.1 = select i1 %or.cond, i32 0, i32 %or33, !dbg !5900
  ret i32 %reloc.1, !dbg !5892

sw.bb35:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands37 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5901
  %8 = load %union.tree_node*, %union.tree_node** %operands37, align 8, !dbg !5901
  br label %tailrecurse, !dbg !5867

for.cond41:                                       ; preds = %for.cond41.preheader, %for.inc73
  %tem.1 = phi %union.tree_node* [ %tem.2, %for.inc73 ], [ undef, %for.cond41.preheader ]
  %reloc.2 = phi i32 [ %reloc.3, %for.inc73 ], [ 0, %for.cond41.preheader ], !dbg !5868
  %idx.0 = phi i64 [ %inc, %for.inc73 ], [ 0, %for.cond41.preheader ], !dbg !5902
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !5864, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.value(metadata i32 %reloc.2, metadata !5861, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.1, metadata !5863, metadata !DIExpression()), !dbg !5868
  %9 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !5904
  %tobool42 = icmp eq %struct.VEC_constructor_elt_gc* %9, null, !dbg !5904
  br i1 %tobool42, label %cond.end, label %cond.true, !dbg !5904

cond.true:                                        ; preds = %for.cond41
  %base45 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %9, i64 0, i32 0, !dbg !5904
  br label %cond.end, !dbg !5904

cond.end:                                         ; preds = %for.cond41, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base45, %cond.true ], [ null, %for.cond41 ], !dbg !5904
  %call46 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !5904
  %conv = zext i32 %call46 to i64, !dbg !5904
  %cmp47 = icmp ult i64 %idx.0, %conv, !dbg !5904
  br i1 %cmp47, label %cond.false50, label %cond.end63, !dbg !5904

cond.false50:                                     ; preds = %cond.end
  %10 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !5904
  %tobool53 = icmp eq %struct.VEC_constructor_elt_gc* %10, null, !dbg !5904
  br i1 %tobool53, label %cond.end59, label %cond.true54, !dbg !5904

cond.true54:                                      ; preds = %cond.false50
  %base57 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %10, i64 0, i32 0, !dbg !5904
  br label %cond.end59, !dbg !5904

cond.end59:                                       ; preds = %cond.false50, %cond.true54
  %cond60 = phi %struct.VEC_constructor_elt_base* [ %base57, %cond.true54 ], [ null, %cond.false50 ], !dbg !5904
  %conv61 = trunc i64 %idx.0 to i32, !dbg !5904
  %call62 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond60, i32 %conv61) #8, !dbg !5904
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call62, i64 0, i32 1, !dbg !5904
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5904
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5863, metadata !DIExpression()), !dbg !5868
  br label %cond.end63, !dbg !5904

cond.end63:                                       ; preds = %cond.end, %cond.end59
  %tem.2 = phi %union.tree_node* [ %11, %cond.end59 ], [ %tem.1, %cond.end ]
  %cond64 = phi i1 [ true, %cond.end59 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.2, metadata !5863, metadata !DIExpression()), !dbg !5868
  br i1 %cond64, label %for.body66, label %sw.epilog.loopexit, !dbg !5874

for.body66:                                       ; preds = %cond.end63
  %cmp67 = icmp eq %union.tree_node* %tem.2, null, !dbg !5905
  br i1 %cmp67, label %for.inc73, label %if.then69, !dbg !5907

if.then69:                                        ; preds = %for.body66
  %call70 = tail call i32 @compute_reloc_for_constant(%union.tree_node* nonnull %tem.2) #8, !dbg !5908
  %or71 = or i32 %reloc.2, %call70, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %or71, metadata !5861, metadata !DIExpression()), !dbg !5868
  br label %for.inc73, !dbg !5910

for.inc73:                                        ; preds = %for.body66, %if.then69
  %reloc.3 = phi i32 [ %or71, %if.then69 ], [ %reloc.2, %for.body66 ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %reloc.3, metadata !5861, metadata !DIExpression()), !dbg !5868
  %inc = add i64 %idx.0, 1, !dbg !5904
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5864, metadata !DIExpression()), !dbg !5903
  br label %for.cond41, !dbg !5904, !llvm.loop !5911

sw.epilog.loopexit:                               ; preds = %cond.end63
  %reloc.2.lcssa = phi i32 [ %reloc.2, %cond.end63 ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %reloc.2.lcssa, metadata !5861, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 %reloc.2.lcssa, metadata !5861, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 %reloc.2.lcssa, metadata !5861, metadata !DIExpression()), !dbg !5868
  br label %sw.epilog, !dbg !5892

sw.epilog.loopexit2:                              ; preds = %tailrecurse
  br label %sw.epilog, !dbg !5892

sw.epilog:                                        ; preds = %sw.epilog.loopexit2, %sw.epilog.loopexit, %for.end
  %reloc.4 = phi i32 [ %reloc.0, %for.end ], [ %reloc.2.lcssa, %sw.epilog.loopexit ], [ 0, %sw.epilog.loopexit2 ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %reloc.4, metadata !5861, metadata !DIExpression()), !dbg !5868
  ret i32 %reloc.4, !dbg !5892
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !5913 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5918, metadata !DIExpression()), !dbg !5919
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5920
  %bf.load = load i64, i64* %0, align 8, !dbg !5920
  %1 = trunc i64 %bf.load to i16, !dbg !5920
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5921

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5922

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5924
  ret i8 %retval.0, !dbg !5925
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !5926 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !5932, metadata !DIExpression()), !dbg !5933
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !5934
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5934

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !5934
  %0 = load i32, i32* %num, align 8, !dbg !5934
  br label %cond.end, !dbg !5934

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5934
  ret i32 %cond, !dbg !5934
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5935 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !5939, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5940, metadata !DIExpression()), !dbg !5941
  br label %land.end, !dbg !5942

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5942
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5942
  ret %struct.constructor_elt_d* %arrayidx, !dbg !5942
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @constructor_static_from_elts_p(%union.tree_node* %ctor) local_unnamed_addr #5 !dbg !5943 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %ctor, metadata !5945, metadata !DIExpression()), !dbg !5946
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5947
  %bf.load = load i64, i64* %0, align 8, !dbg !5947
  %bf.cast1 = and i64 %bf.load, 131072, !dbg !5947
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !5947
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5948

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5949
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !5949
  %2 = load i64*, i64** %1, align 8, !dbg !5949
  %bf.load2 = load i64, i64* %2, align 8, !dbg !5949
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !5950
  %cmp = icmp eq i64 %bf.cast42, 17, !dbg !5950
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !5951

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp11 = icmp eq i64 %bf.cast42, 16, !dbg !5952
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !5953

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %ctor, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5954
  %3 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !5954
  %4 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %3, align 8, !dbg !5954
  %tobool12 = icmp eq %struct.VEC_constructor_elt_gc* %4, null, !dbg !5954
  br i1 %tobool12, label %cond.end, label %cond.true, !dbg !5954

cond.true:                                        ; preds = %land.rhs
  %base15 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %4, i64 0, i32 0, !dbg !5954
  br label %cond.end, !dbg !5954

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base15, %cond.true ], [ null, %land.rhs ], !dbg !5954
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !5954
  %cmp16 = icmp ne i32 %call, 0, !dbg !5954
  %phitmp = zext i1 %cmp16 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %cond.end, %lor.lhs.false
  %5 = phi i8 [ 0, %lor.lhs.false ], [ 0, %entry ], [ %phitmp, %cond.end ]
  ret i8 %5, !dbg !5955
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype) local_unnamed_addr #5 !dbg !5956 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !5960, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata %union.tree_node* %endtype, metadata !5961, metadata !DIExpression()), !dbg !5962
  %call = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** null) #8, !dbg !5963
  ret %union.tree_node* %call, !dbg !5964
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** %cache) unnamed_addr #5 !dbg !5965 {
entry:
  %ncache = alloca [4 x %union.tree_node*], align 16
  %ncache732 = alloca [4 x %union.tree_node*], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !5969, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata %union.tree_node* %endtype, metadata !5970, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.value(metadata %union.tree_node** %cache, metadata !5971, metadata !DIExpression()), !dbg !6007
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6008
  %bf.load = load i64, i64* %0, align 8, !dbg !6008
  %1 = trunc i64 %bf.load to i16, !dbg !6008
  switch i16 %1, label %sw.epilog [
    i16 51, label %sw.bb
    i16 23, label %sw.bb72
    i16 27, label %sw.bb72
    i16 24, label %sw.bb72
    i16 25, label %sw.bb72
    i16 28, label %sw.bb72
    i16 26, label %sw.bb72
    i16 121, label %sw.bb73
    i16 122, label %sw.bb73
    i16 117, label %sw.bb126
    i16 118, label %sw.bb131
    i16 116, label %sw.bb234
    i16 113, label %sw.bb234
    i16 66, label %sw.bb601
    i16 63, label %sw.bb601
    i16 64, label %sw.bb681
  ], !dbg !6009

sw.bb:                                            ; preds = %entry
  %call = tail call zeroext i8 @constructor_static_from_elts_p(%union.tree_node* %value) #8, !dbg !6010
  %tobool = icmp eq i8 %call, 0, !dbg !6010
  br i1 %tobool, label %if.end62, label %if.then, !dbg !6011

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i8 1, metadata !5978, metadata !DIExpression()), !dbg !6012
  %tobool1 = icmp eq %union.tree_node** %cache, null, !dbg !6013
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !6015

land.lhs.true:                                    ; preds = %if.then
  %2 = load %union.tree_node*, %union.tree_node** %cache, align 8, !dbg !6016
  %cmp = icmp eq %union.tree_node* %2, %value, !dbg !6017
  br i1 %cmp, label %if.then2, label %if.end, !dbg !6018

if.then2:                                         ; preds = %land.lhs.true
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6019
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6019
  br label %cleanup792, !dbg !6020

if.end:                                           ; preds = %if.then, %land.lhs.true
  call void @llvm.dbg.value(metadata i64 0, metadata !5973, metadata !DIExpression()), !dbg !6012
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6021
  %4 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6021
  %arrayidx35 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6022
  br i1 %tobool1, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !6027

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond, !dbg !6027

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond.us, !dbg !6027

for.cond.us:                                      ; preds = %for.inc.us, %if.end.split.us
  %idx.0.us = phi i64 [ 0, %if.end.split.us ], [ %inc.us, %for.inc.us ], !dbg !6028
  %elt.0.us = phi %union.tree_node* [ undef, %if.end.split.us ], [ %elt.1.us, %for.inc.us ]
  %absolute.0.us = phi i8 [ 1, %if.end.split.us ], [ %absolute.2.us, %for.inc.us ], !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.us, metadata !5978, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0.us, metadata !5977, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i64 %idx.0.us, metadata !5973, metadata !DIExpression()), !dbg !6012
  %5 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %4, align 8, !dbg !6029
  %tobool4.us = icmp eq %struct.VEC_constructor_elt_gc* %5, null, !dbg !6029
  br i1 %tobool4.us, label %cond.end.us, label %cond.true.us, !dbg !6029

cond.true.us:                                     ; preds = %for.cond.us
  %base7.us = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %5, i64 0, i32 0, !dbg !6029
  br label %cond.end.us, !dbg !6029

cond.end.us:                                      ; preds = %cond.true.us, %for.cond.us
  %cond.us = phi %struct.VEC_constructor_elt_base* [ %base7.us, %cond.true.us ], [ null, %for.cond.us ], !dbg !6029
  %call8.us = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond.us) #8, !dbg !6029
  %conv.us = zext i32 %call8.us to i64, !dbg !6029
  %cmp9.us = icmp ult i64 %idx.0.us, %conv.us, !dbg !6029
  br i1 %cmp9.us, label %cond.false12.us, label %cond.end26.us, !dbg !6029

cond.false12.us:                                  ; preds = %cond.end.us
  %6 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %4, align 8, !dbg !6029
  %tobool15.us = icmp eq %struct.VEC_constructor_elt_gc* %6, null, !dbg !6029
  br i1 %tobool15.us, label %cond.end21.us, label %cond.true16.us, !dbg !6029

cond.true16.us:                                   ; preds = %cond.false12.us
  %base19.us = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %6, i64 0, i32 0, !dbg !6029
  br label %cond.end21.us, !dbg !6029

cond.end21.us:                                    ; preds = %cond.true16.us, %cond.false12.us
  %cond22.us = phi %struct.VEC_constructor_elt_base* [ %base19.us, %cond.true16.us ], [ null, %cond.false12.us ], !dbg !6029
  %conv23.us = trunc i64 %idx.0.us to i32, !dbg !6029
  %call24.us = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond22.us, i32 %conv23.us) #8, !dbg !6029
  %value25.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call24.us, i64 0, i32 1, !dbg !6029
  %7 = load %union.tree_node*, %union.tree_node** %value25.us, align 8, !dbg !6029
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5977, metadata !DIExpression()), !dbg !6012
  br label %cond.end26.us, !dbg !6029

cond.end26.us:                                    ; preds = %cond.end21.us, %cond.end.us
  %elt.1.us = phi %union.tree_node* [ %7, %cond.end21.us ], [ %elt.0.us, %cond.end.us ]
  %cond27.us = phi i1 [ true, %cond.end21.us ], [ false, %cond.end.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1.us, metadata !5977, metadata !DIExpression()), !dbg !6012
  br i1 %cond27.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !6027

for.body.us:                                      ; preds = %cond.end26.us
  %type.us = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1.us, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6030
  %8 = load %union.tree_node*, %union.tree_node** %type.us, align 8, !dbg !6030
  %call29.us = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %elt.1.us, %union.tree_node* %8, %union.tree_node** null) #8, !dbg !6031
  call void @llvm.dbg.value(metadata %union.tree_node* %call29.us, metadata !5979, metadata !DIExpression()), !dbg !6032
  %tobool30.us = icmp eq %union.tree_node* %call29.us, null, !dbg !6033
  br i1 %tobool30.us, label %if.then31.us, label %if.end37.us, !dbg !6034

if.end37.us:                                      ; preds = %for.body.us
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6035
  %cmp38.us = icmp eq %union.tree_node* %call29.us, %9, !dbg !6037
  %spec.select.us = select i1 %cmp38.us, i8 %absolute.0.us, i8 0, !dbg !6038
  call void @llvm.dbg.value(metadata i8 %spec.select.us, metadata !5978, metadata !DIExpression()), !dbg !6012
  br label %cleanup.us, !dbg !6039

if.then31.us:                                     ; preds = %for.body.us
  br label %cleanup.us, !dbg !6040

cleanup.us:                                       ; preds = %if.then31.us, %if.end37.us
  %absolute.2.us = phi i8 [ %spec.select.us, %if.end37.us ], [ %absolute.0.us, %if.then31.us ], !dbg !6012
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end37.us ], [ false, %if.then31.us ]
  call void @llvm.dbg.value(metadata i8 %absolute.2.us, metadata !5978, metadata !DIExpression()), !dbg !6012
  br i1 %cleanup.dest.slot.0.us, label %for.inc.us, label %cleanup792.loopexit.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup.us
  %inc.us = add i64 %idx.0.us, 1, !dbg !6029
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !5973, metadata !DIExpression()), !dbg !6012
  br label %for.cond.us, !dbg !6029, !llvm.loop !6041

for.end.us-lcssa.us:                              ; preds = %cond.end26.us
  %absolute.0.us.lcssa = phi i8 [ %absolute.0.us, %cond.end26.us ], !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.us.lcssa, metadata !5978, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.us.lcssa, metadata !5978, metadata !DIExpression()), !dbg !6012
  br label %for.end, !dbg !6043

cleanup792.loopexit.us-lcssa.us:                  ; preds = %cleanup.us
  br label %cleanup792.loopexit, !dbg !6045

for.cond:                                         ; preds = %for.inc, %if.end.if.end.split_crit_edge
  %idx.0 = phi i64 [ 0, %if.end.if.end.split_crit_edge ], [ %inc, %for.inc ], !dbg !6028
  %elt.0 = phi %union.tree_node* [ undef, %if.end.if.end.split_crit_edge ], [ %elt.1, %for.inc ]
  %absolute.0 = phi i8 [ 1, %if.end.if.end.split_crit_edge ], [ %absolute.2, %for.inc ], !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0, metadata !5978, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0, metadata !5977, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !5973, metadata !DIExpression()), !dbg !6012
  %10 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %4, align 8, !dbg !6029
  %tobool4 = icmp eq %struct.VEC_constructor_elt_gc* %10, null, !dbg !6029
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !6029

cond.true:                                        ; preds = %for.cond
  %base7 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %10, i64 0, i32 0, !dbg !6029
  br label %cond.end, !dbg !6029

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base7, %cond.true ], [ null, %for.cond ], !dbg !6029
  %call8 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !6029
  %conv = zext i32 %call8 to i64, !dbg !6029
  %cmp9 = icmp ult i64 %idx.0, %conv, !dbg !6029
  br i1 %cmp9, label %cond.false12, label %cond.end26, !dbg !6029

cond.false12:                                     ; preds = %cond.end
  %11 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %4, align 8, !dbg !6029
  %tobool15 = icmp eq %struct.VEC_constructor_elt_gc* %11, null, !dbg !6029
  br i1 %tobool15, label %cond.end21, label %cond.true16, !dbg !6029

cond.true16:                                      ; preds = %cond.false12
  %base19 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !6029
  br label %cond.end21, !dbg !6029

cond.end21:                                       ; preds = %cond.false12, %cond.true16
  %cond22 = phi %struct.VEC_constructor_elt_base* [ %base19, %cond.true16 ], [ null, %cond.false12 ], !dbg !6029
  %conv23 = trunc i64 %idx.0 to i32, !dbg !6029
  %call24 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond22, i32 %conv23) #8, !dbg !6029
  %value25 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call24, i64 0, i32 1, !dbg !6029
  %12 = load %union.tree_node*, %union.tree_node** %value25, align 8, !dbg !6029
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5977, metadata !DIExpression()), !dbg !6012
  br label %cond.end26, !dbg !6029

cond.end26:                                       ; preds = %cond.end, %cond.end21
  %elt.1 = phi %union.tree_node* [ %12, %cond.end21 ], [ %elt.0, %cond.end ]
  %cond27 = phi i1 [ true, %cond.end21 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1, metadata !5977, metadata !DIExpression()), !dbg !6012
  br i1 %cond27, label %for.body, label %for.end.us-lcssa, !dbg !6027

for.body:                                         ; preds = %cond.end26
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %elt.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6030
  %13 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6030
  %call29 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %elt.1, %union.tree_node* %13, %union.tree_node** null) #8, !dbg !6031
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !5979, metadata !DIExpression()), !dbg !6032
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !6033
  br i1 %tobool30, label %if.then31, label %if.end37, !dbg !6034

if.then31:                                        ; preds = %for.body
  store %union.tree_node* %value, %union.tree_node** %cache, align 8, !dbg !6046
  store %union.tree_node* null, %union.tree_node** %arrayidx35, align 8, !dbg !6047
  br label %cleanup, !dbg !6048

if.end37:                                         ; preds = %for.body
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6035
  %cmp38 = icmp eq %union.tree_node* %call29, %14, !dbg !6037
  %spec.select = select i1 %cmp38, i8 %absolute.0, i8 0, !dbg !6038
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !5978, metadata !DIExpression()), !dbg !6012
  br label %cleanup, !dbg !6039

cleanup:                                          ; preds = %if.then31, %if.end37
  %absolute.2 = phi i8 [ %spec.select, %if.end37 ], [ %absolute.0, %if.then31 ], !dbg !6012
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end37 ], [ false, %if.then31 ]
  call void @llvm.dbg.value(metadata i8 %absolute.2, metadata !5978, metadata !DIExpression()), !dbg !6012
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup792.loopexit.us-lcssa

for.inc:                                          ; preds = %cleanup
  %inc = add i64 %idx.0, 1, !dbg !6029
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5973, metadata !DIExpression()), !dbg !6012
  br label %for.cond, !dbg !6029, !llvm.loop !6041

for.end.us-lcssa:                                 ; preds = %cond.end26
  %absolute.0.lcssa78 = phi i8 [ %absolute.0, %cond.end26 ], !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.lcssa78, metadata !5978, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.lcssa78, metadata !5978, metadata !DIExpression()), !dbg !6012
  br label %for.end, !dbg !6043

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  %absolute.0.lcssa = phi i8 [ %absolute.0.lcssa78, %for.end.us-lcssa ], [ %absolute.0.us.lcssa, %for.end.us-lcssa.us ], !dbg !6012
  call void @llvm.dbg.value(metadata i8 %absolute.0.lcssa, metadata !5978, metadata !DIExpression()), !dbg !6012
  br i1 %tobool1, label %for.end.if.end52_crit_edge, label %if.then43, !dbg !6049

for.end.if.end52_crit_edge:                       ; preds = %for.end
  %.pre = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6050
  br label %if.end52, !dbg !6049

if.then43:                                        ; preds = %for.end
  store %union.tree_node* %value, %union.tree_node** %cache, align 8, !dbg !6051
  %tobool46 = icmp eq i8 %absolute.0.lcssa, 0, !dbg !6053
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6053
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6053
  %cond50 = select i1 %tobool46, %union.tree_node* %16, %union.tree_node* %15, !dbg !6053
  store %union.tree_node* %cond50, %union.tree_node** %arrayidx35, align 8, !dbg !6054
  br label %if.end52, !dbg !6055

if.end52:                                         ; preds = %for.end.if.end52_crit_edge, %if.then43
  %17 = phi %union.tree_node* [ %.pre, %for.end.if.end52_crit_edge ], [ %16, %if.then43 ], !dbg !6050
  %tobool54 = icmp eq i8 %absolute.0.lcssa, 0, !dbg !6050
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6050
  %cond58 = select i1 %tobool54, %union.tree_node* %17, %union.tree_node* %18, !dbg !6050
  br label %cleanup792, !dbg !6050

if.end62:                                         ; preds = %sw.bb
  %bf.load64 = load i64, i64* %0, align 8, !dbg !6056
  %bf.cast6668 = and i64 %bf.load64, 67108864, !dbg !6056
  %tobool67 = icmp eq i64 %bf.cast6668, 0, !dbg !6056
  %19 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6056
  %cond71 = select i1 %tobool67, %union.tree_node* null, %union.tree_node* %19, !dbg !6056
  br label %cleanup792, !dbg !6056

sw.bb72:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6057
  br label %cleanup792, !dbg !6058

sw.bb73:                                          ; preds = %entry, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6059
  %21 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6059
  %call75 = tail call %union.tree_node* @staticp(%union.tree_node* %21) #6, !dbg !6060
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !5983, metadata !DIExpression()), !dbg !6061
  %tobool76 = icmp eq %union.tree_node* %call75, null, !dbg !6062
  br i1 %tobool76, label %if.end124, label %if.then77, !dbg !6064

if.then77:                                        ; preds = %sw.bb73
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6065
  %bf.load79 = load i64, i64* %22, align 8, !dbg !6065
  %bf.cast8163 = and i64 %bf.load79, 65535, !dbg !6068
  %cmp82 = icmp eq i64 %bf.cast8163, 47, !dbg !6068
  br i1 %cmp82, label %land.lhs.true84, label %if.end95, !dbg !6069

land.lhs.true84:                                  ; preds = %if.then77
  %operands86 = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6070
  %23 = bitcast %union.tree_node** %operands86 to i64**, !dbg !6070
  %24 = load i64*, i64** %23, align 8, !dbg !6070
  %bf.load89 = load i64, i64* %24, align 8, !dbg !6070
  %bf.cast9267 = and i64 %bf.load89, 131072, !dbg !6070
  %tobool93 = icmp eq i64 %bf.cast9267, 0, !dbg !6070
  br i1 %tobool93, label %if.end95, label %if.then94, !dbg !6071

if.then94:                                        ; preds = %land.lhs.true84
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6072
  br label %cleanup792, !dbg !6073

if.end95:                                         ; preds = %land.lhs.true84, %if.then77
  %cmp100 = icmp eq i64 %bf.cast8163, 29, !dbg !6074
  br i1 %cmp100, label %land.lhs.true102, label %if.end115, !dbg !6076

land.lhs.true102:                                 ; preds = %if.end95
  %regdecl_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 5, !dbg !6077
  %bf.load103 = load i32, i32* %regdecl_flag, align 8, !dbg !6077
  %bf.clear105 = and i32 %bf.load103, 4194304, !dbg !6077
  %tobool106 = icmp eq i32 %bf.clear105, 0, !dbg !6077
  br i1 %tobool106, label %if.end115, label %land.lhs.true107, !dbg !6078

land.lhs.true107:                                 ; preds = %land.lhs.true102
  %bf.load109 = load i64, i64* %0, align 8, !dbg !6079
  %bf.cast11266 = and i64 %bf.load109, 67108864, !dbg !6079
  %tobool113 = icmp eq i64 %bf.cast11266, 0, !dbg !6079
  br i1 %tobool113, label %cleanup792, label %if.end115, !dbg !6080

if.end115:                                        ; preds = %land.lhs.true107, %land.lhs.true102, %if.end95
  %cmp120 = icmp eq i64 %bf.cast8163, 51, !dbg !6081
  br i1 %cmp120, label %cleanup792, label %if.end124, !dbg !6083

if.end124:                                        ; preds = %sw.bb73, %if.end115
  br label %cleanup792, !dbg !6084

sw.bb126:                                         ; preds = %entry
  %operands128 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6085
  %26 = load %union.tree_node*, %union.tree_node** %operands128, align 8, !dbg !6085
  %call130 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %26, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6086
  br label %cleanup792, !dbg !6087

sw.bb131:                                         ; preds = %entry
  %operands133 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6088
  %27 = load %union.tree_node*, %union.tree_node** %operands133, align 8, !dbg !6088
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !5985, metadata !DIExpression()), !dbg !6089
  %type136 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6090
  %28 = load %union.tree_node*, %union.tree_node** %type136, align 8, !dbg !6090
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !5987, metadata !DIExpression()), !dbg !6089
  %type138 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6091
  %29 = load %union.tree_node*, %union.tree_node** %type138, align 8, !dbg !6091
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5988, metadata !DIExpression()), !dbg !6089
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6092
  %bf.load140 = load i64, i64* %30, align 8, !dbg !6092
  %bf.cast14253 = and i64 %bf.load140, 65535, !dbg !6092
  %cmp143 = icmp eq i64 %bf.cast14253, 15, !dbg !6092
  br i1 %cmp143, label %land.lhs.true165, label %lor.lhs.false, !dbg !6092

lor.lhs.false:                                    ; preds = %sw.bb131
  %cmp149 = icmp eq i64 %bf.cast14253, 16, !dbg !6092
  br i1 %cmp149, label %land.lhs.true165, label %lor.lhs.false151, !dbg !6092

lor.lhs.false151:                                 ; preds = %lor.lhs.false
  %cmp156 = icmp eq i64 %bf.cast14253, 17, !dbg !6092
  br i1 %cmp156, label %land.lhs.true165, label %lor.lhs.false158, !dbg !6092

lor.lhs.false158:                                 ; preds = %lor.lhs.false151
  %cmp163 = icmp eq i64 %bf.cast14253, 18, !dbg !6092
  br i1 %cmp163, label %land.lhs.true165, label %if.end229, !dbg !6094

land.lhs.true165:                                 ; preds = %lor.lhs.false158, %lor.lhs.false151, %lor.lhs.false, %sw.bb131
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6095
  %bf.load167 = load i64, i64* %31, align 8, !dbg !6095
  %bf.cast16957 = and i64 %bf.load167, 65535, !dbg !6095
  %cmp170 = icmp eq i64 %bf.cast16957, 15, !dbg !6095
  br i1 %cmp170, label %if.end229, label %lor.lhs.false172, !dbg !6095

lor.lhs.false172:                                 ; preds = %land.lhs.true165
  %cmp177 = icmp eq i64 %bf.cast16957, 16, !dbg !6095
  br i1 %cmp177, label %if.end229, label %lor.lhs.false179, !dbg !6095

lor.lhs.false179:                                 ; preds = %lor.lhs.false172
  %cmp184 = icmp eq i64 %bf.cast16957, 17, !dbg !6095
  br i1 %cmp184, label %if.end229, label %lor.lhs.false186, !dbg !6095

lor.lhs.false186:                                 ; preds = %lor.lhs.false179
  %cmp191 = icmp eq i64 %bf.cast16957, 18, !dbg !6095
  br i1 %cmp191, label %if.end229, label %if.then193, !dbg !6096

if.then193:                                       ; preds = %lor.lhs.false186
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %endtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6097
  %bf.load195 = load i64, i64* %32, align 8, !dbg !6097
  %bf.cast19761 = and i64 %bf.load195, 65535, !dbg !6097
  %cmp198 = icmp eq i64 %bf.cast19761, 14, !dbg !6097
  br i1 %cmp198, label %cond.true200, label %cond.false202, !dbg !6097

cond.true200:                                     ; preds = %if.then193
  %call201 = tail call i32 @vector_type_mode(%union.tree_node* %endtype) #6, !dbg !6097
  %bf.load210.pre = load i64, i64* %31, align 8, !dbg !6100
  br label %cond.end207, !dbg !6097

cond.false202:                                    ; preds = %if.then193
  %type203 = bitcast %union.tree_node* %endtype to %struct.tree_type*, !dbg !6097
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type203, i64 0, i32 6, !dbg !6097
  %bf.load204 = load i32, i32* %mode, align 4, !dbg !6097
  %bf.lshr205 = lshr i32 %bf.load204, 16, !dbg !6097
  %bf.clear206 = and i32 %bf.lshr205, 255, !dbg !6097
  br label %cond.end207, !dbg !6097

cond.end207:                                      ; preds = %cond.false202, %cond.true200
  %bf.load210 = phi i64 [ %bf.load210.pre, %cond.true200 ], [ %bf.load167, %cond.false202 ], !dbg !6100
  %cond208 = phi i32 [ %call201, %cond.true200 ], [ %bf.clear206, %cond.false202 ], !dbg !6097
  %bf.cast21262 = and i64 %bf.load210, 65535, !dbg !6100
  %cmp213 = icmp eq i64 %bf.cast21262, 14, !dbg !6100
  br i1 %cmp213, label %cond.true215, label %cond.false217, !dbg !6100

cond.true215:                                     ; preds = %cond.end207
  %call216 = tail call i32 @vector_type_mode(%union.tree_node* %29) #6, !dbg !6100
  br label %cond.end223, !dbg !6100

cond.false217:                                    ; preds = %cond.end207
  %type218 = bitcast %union.tree_node* %29 to %struct.tree_type*, !dbg !6100
  %mode219 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type218, i64 0, i32 6, !dbg !6100
  %bf.load220 = load i32, i32* %mode219, align 4, !dbg !6100
  %bf.lshr221 = lshr i32 %bf.load220, 16, !dbg !6100
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !6100
  br label %cond.end223, !dbg !6100

cond.end223:                                      ; preds = %cond.false217, %cond.true215
  %cond224 = phi i32 [ %call216, %cond.true215 ], [ %bf.clear222, %cond.false217 ], !dbg !6100
  %cmp225 = icmp eq i32 %cond208, %cond224, !dbg !6101
  br i1 %cmp225, label %if.then227, label %cleanup792, !dbg !6102

if.then227:                                       ; preds = %cond.end223
  %call228 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %27, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6103
  br label %cleanup792, !dbg !6104

if.end229:                                        ; preds = %lor.lhs.false186, %lor.lhs.false179, %lor.lhs.false172, %land.lhs.true165, %lor.lhs.false158
  %call230 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %27, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6105
  br label %cleanup792, !dbg !6106

sw.bb234:                                         ; preds = %entry, %entry
  %operands237 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6107
  %33 = load %union.tree_node*, %union.tree_node** %operands237, align 8, !dbg !6107
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !5989, metadata !DIExpression()), !dbg !6108
  %type241 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6109
  %34 = load %union.tree_node*, %union.tree_node** %type241, align 8, !dbg !6109
  call void @llvm.dbg.value(metadata %union.tree_node* %34, metadata !5991, metadata !DIExpression()), !dbg !6108
  %type244 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6110
  %35 = load %union.tree_node*, %union.tree_node** %type244, align 8, !dbg !6110
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !5992, metadata !DIExpression()), !dbg !6108
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6111
  %bf.load246 = load i64, i64* %36, align 8, !dbg !6111
  %bf.cast24813 = and i64 %bf.load246, 65535, !dbg !6111
  %cmp249 = icmp eq i64 %bf.cast24813, 10, !dbg !6111
  br i1 %cmp249, label %land.lhs.true258, label %lor.lhs.false251, !dbg !6111

lor.lhs.false251:                                 ; preds = %sw.bb234
  %cmp256 = icmp eq i64 %bf.cast24813, 12, !dbg !6111
  br i1 %cmp256, label %land.lhs.true258, label %lor.lhs.false272, !dbg !6113

land.lhs.true258:                                 ; preds = %lor.lhs.false251, %sw.bb234
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6114
  %bf.load260 = load i64, i64* %37, align 8, !dbg !6114
  %bf.cast26251 = and i64 %bf.load260, 65535, !dbg !6114
  %cmp263 = icmp eq i64 %bf.cast26251, 10, !dbg !6114
  br i1 %cmp263, label %if.then346, label %lor.lhs.false265, !dbg !6114

lor.lhs.false265:                                 ; preds = %land.lhs.true258
  %cmp270 = icmp eq i64 %bf.cast26251, 12, !dbg !6114
  br i1 %cmp270, label %if.then346, label %lor.lhs.false272, !dbg !6115

lor.lhs.false272:                                 ; preds = %lor.lhs.false265, %lor.lhs.false251
  %cmp277 = icmp eq i64 %bf.cast24813, 9, !dbg !6116
  br i1 %cmp277, label %land.lhs.true302, label %lor.lhs.false279, !dbg !6116

lor.lhs.false279:                                 ; preds = %lor.lhs.false272
  %cmp284 = icmp eq i64 %bf.cast24813, 13, !dbg !6116
  br i1 %cmp284, label %land.lhs.true293, label %lor.lhs.false286, !dbg !6116

lor.lhs.false286:                                 ; preds = %lor.lhs.false279
  %cmp291 = icmp eq i64 %bf.cast24813, 14, !dbg !6116
  br i1 %cmp291, label %land.lhs.true293, label %lor.lhs.false332, !dbg !6116

land.lhs.true293:                                 ; preds = %lor.lhs.false286, %lor.lhs.false279
  %type295 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6116
  %38 = bitcast %union.tree_node** %type295 to i64**, !dbg !6116
  %39 = load i64*, i64** %38, align 8, !dbg !6116
  %bf.load297 = load i64, i64* %39, align 8, !dbg !6116
  %bf.cast29946 = and i64 %bf.load297, 65535, !dbg !6116
  %cmp300 = icmp eq i64 %bf.cast29946, 9, !dbg !6116
  br i1 %cmp300, label %land.lhs.true302, label %lor.lhs.false332, !dbg !6117

land.lhs.true302:                                 ; preds = %land.lhs.true293, %lor.lhs.false272
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6118
  %bf.load304 = load i64, i64* %40, align 8, !dbg !6118
  %bf.cast30647 = and i64 %bf.load304, 65535, !dbg !6118
  %cmp307 = icmp eq i64 %bf.cast30647, 9, !dbg !6118
  br i1 %cmp307, label %if.then346, label %lor.lhs.false309, !dbg !6118

lor.lhs.false309:                                 ; preds = %land.lhs.true302
  %cmp314 = icmp eq i64 %bf.cast30647, 13, !dbg !6118
  br i1 %cmp314, label %land.lhs.true323, label %lor.lhs.false316, !dbg !6118

lor.lhs.false316:                                 ; preds = %lor.lhs.false309
  %cmp321 = icmp eq i64 %bf.cast30647, 14, !dbg !6118
  br i1 %cmp321, label %land.lhs.true323, label %lor.lhs.false332, !dbg !6118

land.lhs.true323:                                 ; preds = %lor.lhs.false316, %lor.lhs.false309
  %type325 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6118
  %41 = bitcast %union.tree_node** %type325 to i64**, !dbg !6118
  %42 = load i64*, i64** %41, align 8, !dbg !6118
  %bf.load327 = load i64, i64* %42, align 8, !dbg !6118
  %bf.cast32950 = and i64 %bf.load327, 65535, !dbg !6118
  %cmp330 = icmp eq i64 %bf.cast32950, 9, !dbg !6118
  br i1 %cmp330, label %if.then346, label %lor.lhs.false332, !dbg !6119

lor.lhs.false332:                                 ; preds = %land.lhs.true323, %lor.lhs.false316, %land.lhs.true293, %lor.lhs.false286
  %cmp337 = icmp eq i64 %bf.cast24813, 5, !dbg !6120
  br i1 %cmp337, label %land.lhs.true339, label %if.end348, !dbg !6121

land.lhs.true339:                                 ; preds = %lor.lhs.false332
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6122
  %bf.load341 = load i64, i64* %43, align 8, !dbg !6122
  %bf.cast34345 = and i64 %bf.load341, 65535, !dbg !6123
  %cmp344 = icmp eq i64 %bf.cast34345, 5, !dbg !6123
  br i1 %cmp344, label %if.then346, label %if.end348, !dbg !6124

if.then346:                                       ; preds = %land.lhs.true339, %land.lhs.true323, %land.lhs.true302, %lor.lhs.false265, %land.lhs.true258
  %call347 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6125
  br label %cleanup596, !dbg !6126

if.end348:                                        ; preds = %land.lhs.true339, %lor.lhs.false332
  %cmp353 = icmp eq i64 %bf.cast24813, 6, !dbg !6127
  br i1 %cmp353, label %land.lhs.true369, label %lor.lhs.false355, !dbg !6127

lor.lhs.false355:                                 ; preds = %if.end348
  %cmp360 = icmp eq i64 %bf.cast24813, 7, !dbg !6127
  br i1 %cmp360, label %land.lhs.true369, label %lor.lhs.false362, !dbg !6127

lor.lhs.false362:                                 ; preds = %lor.lhs.false355
  %cmp367 = icmp eq i64 %bf.cast24813, 8, !dbg !6127
  br i1 %cmp367, label %land.lhs.true369, label %if.end402, !dbg !6129

land.lhs.true369:                                 ; preds = %lor.lhs.false362, %lor.lhs.false355, %if.end348
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6130
  %bf.load371 = load i64, i64* %44, align 8, !dbg !6130
  %bf.cast37342 = and i64 %bf.load371, 65535, !dbg !6130
  %cmp374 = icmp eq i64 %bf.cast37342, 6, !dbg !6130
  br i1 %cmp374, label %land.lhs.true390, label %lor.lhs.false376, !dbg !6130

lor.lhs.false376:                                 ; preds = %land.lhs.true369
  %cmp381 = icmp eq i64 %bf.cast37342, 7, !dbg !6130
  br i1 %cmp381, label %land.lhs.true390, label %lor.lhs.false383, !dbg !6130

lor.lhs.false383:                                 ; preds = %lor.lhs.false376
  %cmp388 = icmp eq i64 %bf.cast37342, 8, !dbg !6130
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !6131

land.lhs.true390:                                 ; preds = %lor.lhs.false383, %lor.lhs.false376, %land.lhs.true369
  %type391 = bitcast %union.tree_node* %35 to %struct.tree_type*, !dbg !6132
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type391, i64 0, i32 6, !dbg !6132
  %bf.load392 = load i32, i32* %precision, align 4, !dbg !6132
  %type394 = bitcast %union.tree_node* %34 to %struct.tree_type*, !dbg !6133
  %precision395 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type394, i64 0, i32 6, !dbg !6133
  %bf.load396 = load i32, i32* %precision395, align 4, !dbg !6133
  %45 = xor i32 %bf.load392, %bf.load396, !dbg !6134
  %46 = and i32 %45, 1023, !dbg !6134
  %cmp398 = icmp eq i32 %46, 0, !dbg !6134
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !6135

if.then400:                                       ; preds = %land.lhs.true390
  %call401 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6136
  br label %cleanup596, !dbg !6137

if.end402:                                        ; preds = %land.lhs.true390, %lor.lhs.false383, %lor.lhs.false362
  br i1 %cmp353, label %land.lhs.true423, label %lor.lhs.false409, !dbg !6138

lor.lhs.false409:                                 ; preds = %if.end402
  %cmp414 = icmp eq i64 %bf.cast24813, 7, !dbg !6138
  br i1 %cmp414, label %land.lhs.true423, label %lor.lhs.false416, !dbg !6138

lor.lhs.false416:                                 ; preds = %lor.lhs.false409
  %cmp421 = icmp eq i64 %bf.cast24813, 8, !dbg !6138
  br i1 %cmp421, label %land.lhs.true423, label %if.end451, !dbg !6139

land.lhs.true423:                                 ; preds = %lor.lhs.false416, %lor.lhs.false409, %if.end402
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6140
  %bf.load425 = load i64, i64* %47, align 8, !dbg !6140
  %bf.cast42739 = and i64 %bf.load425, 65535, !dbg !6140
  %cmp428 = icmp eq i64 %bf.cast42739, 6, !dbg !6140
  br i1 %cmp428, label %if.then444, label %lor.lhs.false430, !dbg !6140

lor.lhs.false430:                                 ; preds = %land.lhs.true423
  %cmp435 = icmp eq i64 %bf.cast42739, 7, !dbg !6140
  br i1 %cmp435, label %if.then444, label %lor.lhs.false437, !dbg !6140

lor.lhs.false437:                                 ; preds = %lor.lhs.false430
  %cmp442 = icmp eq i64 %bf.cast42739, 8, !dbg !6140
  br i1 %cmp442, label %if.then444, label %if.end451, !dbg !6141

if.then444:                                       ; preds = %lor.lhs.false437, %lor.lhs.false430, %land.lhs.true423
  %call445 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6142
  call void @llvm.dbg.value(metadata %union.tree_node* %call445, metadata !5993, metadata !DIExpression()), !dbg !6143
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6144
  %cmp446 = icmp eq %union.tree_node* %call445, %48, !dbg !6146
  %cleanup.dest.slot.1 = select i1 %cmp446, i32 1, i32 2, !dbg !6147
  br label %cleanup596, !dbg !6147

if.end451:                                        ; preds = %lor.lhs.false437, %lor.lhs.false416
  br i1 %cmp353, label %land.lhs.true472, label %lor.lhs.false458, !dbg !6148

lor.lhs.false458:                                 ; preds = %if.end451
  %cmp463 = icmp eq i64 %bf.cast24813, 7, !dbg !6148
  br i1 %cmp463, label %land.lhs.true472, label %lor.lhs.false465, !dbg !6148

lor.lhs.false465:                                 ; preds = %lor.lhs.false458
  %cmp470 = icmp eq i64 %bf.cast24813, 8, !dbg !6148
  br i1 %cmp470, label %land.lhs.true472, label %if.end499, !dbg !6150

land.lhs.true472:                                 ; preds = %lor.lhs.false465, %lor.lhs.false458, %if.end451
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6151
  %bf.load474 = load i64, i64* %49, align 8, !dbg !6151
  %bf.cast47637 = and i64 %bf.load474, 65535, !dbg !6151
  %cmp477 = icmp eq i64 %bf.cast47637, 10, !dbg !6151
  br i1 %cmp477, label %land.lhs.true486, label %lor.lhs.false479, !dbg !6151

lor.lhs.false479:                                 ; preds = %land.lhs.true472
  %cmp484 = icmp eq i64 %bf.cast47637, 12, !dbg !6151
  br i1 %cmp484, label %land.lhs.true486, label %if.end499, !dbg !6152

land.lhs.true486:                                 ; preds = %lor.lhs.false479, %land.lhs.true472
  %type487 = bitcast %union.tree_node* %35 to %struct.tree_type*, !dbg !6153
  %precision488 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type487, i64 0, i32 6, !dbg !6153
  %bf.load489 = load i32, i32* %precision488, align 4, !dbg !6153
  %bf.clear490 = and i32 %bf.load489, 1023, !dbg !6153
  %type491 = bitcast %union.tree_node* %34 to %struct.tree_type*, !dbg !6154
  %precision492 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type491, i64 0, i32 6, !dbg !6154
  %bf.load493 = load i32, i32* %precision492, align 4, !dbg !6154
  %bf.clear494 = and i32 %bf.load493, 1023, !dbg !6154
  %cmp495 = icmp ult i32 %bf.clear490, %bf.clear494, !dbg !6155
  br i1 %cmp495, label %if.end499, label %if.then497, !dbg !6156

if.then497:                                       ; preds = %land.lhs.true486
  %call498 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6157
  br label %cleanup596, !dbg !6158

if.end499:                                        ; preds = %land.lhs.true486, %lor.lhs.false479, %lor.lhs.false465
  br i1 %cmp249, label %land.lhs.true520, label %lor.lhs.false506, !dbg !6159

lor.lhs.false506:                                 ; preds = %if.end499
  %cmp511 = icmp eq i64 %bf.cast24813, 12, !dbg !6159
  br i1 %cmp511, label %land.lhs.true520, label %lor.lhs.false513, !dbg !6161

lor.lhs.false513:                                 ; preds = %lor.lhs.false506
  br i1 %cmp337, label %land.lhs.true520, label %if.end579, !dbg !6162

land.lhs.true520:                                 ; preds = %lor.lhs.false513, %lor.lhs.false506, %if.end499
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6163
  %bf.load522 = load i64, i64* %50, align 8, !dbg !6163
  %bf.cast52433 = and i64 %bf.load522, 65535, !dbg !6163
  %cmp525 = icmp eq i64 %bf.cast52433, 6, !dbg !6163
  br i1 %cmp525, label %if.then541, label %lor.lhs.false527, !dbg !6163

lor.lhs.false527:                                 ; preds = %land.lhs.true520
  %cmp532 = icmp eq i64 %bf.cast52433, 7, !dbg !6163
  br i1 %cmp532, label %if.then541, label %lor.lhs.false534, !dbg !6163

lor.lhs.false534:                                 ; preds = %lor.lhs.false527
  %cmp539 = icmp eq i64 %bf.cast52433, 8, !dbg !6163
  br i1 %cmp539, label %if.then541, label %if.end579, !dbg !6164

if.then541:                                       ; preds = %lor.lhs.false534, %lor.lhs.false527, %land.lhs.true520
  %51 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6165
  %bf.load543 = load i64, i64* %51, align 8, !dbg !6165
  %bf.cast54536 = and i64 %bf.load543, 65535, !dbg !6168
  %cmp546 = icmp eq i64 %bf.cast54536, 23, !dbg !6168
  br i1 %cmp546, label %land.lhs.true548, label %if.end560, !dbg !6169

land.lhs.true548:                                 ; preds = %if.then541
  %type549 = bitcast %union.tree_node* %35 to %struct.tree_type*, !dbg !6170
  %precision550 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type549, i64 0, i32 6, !dbg !6170
  %bf.load551 = load i32, i32* %precision550, align 4, !dbg !6170
  %bf.clear552 = and i32 %bf.load551, 1023, !dbg !6170
  %type553 = bitcast %union.tree_node* %34 to %struct.tree_type*, !dbg !6171
  %precision554 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type553, i64 0, i32 6, !dbg !6171
  %bf.load555 = load i32, i32* %precision554, align 4, !dbg !6171
  %bf.clear556 = and i32 %bf.load555, 1023, !dbg !6171
  %cmp557 = icmp ult i32 %bf.clear552, %bf.clear556, !dbg !6172
  br i1 %cmp557, label %if.end560, label %if.then559, !dbg !6173

if.then559:                                       ; preds = %land.lhs.true548
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6174
  br label %cleanup596, !dbg !6175

if.end560:                                        ; preds = %land.lhs.true548, %if.then541
  %call561 = tail call i32 @integer_zerop(%union.tree_node* %33) #6, !dbg !6176
  %tobool562 = icmp eq i32 %call561, 0, !dbg !6176
  br i1 %tobool562, label %if.else564, label %if.then563, !dbg !6178

if.then563:                                       ; preds = %if.end560
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6179
  br label %cleanup596, !dbg !6180

if.else564:                                       ; preds = %if.end560
  %type565 = bitcast %union.tree_node* %35 to %struct.tree_type*, !dbg !6181
  %precision566 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type565, i64 0, i32 6, !dbg !6181
  %bf.load567 = load i32, i32* %precision566, align 4, !dbg !6181
  %bf.clear568 = and i32 %bf.load567, 1023, !dbg !6181
  %type569 = bitcast %union.tree_node* %34 to %struct.tree_type*, !dbg !6183
  %precision570 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type569, i64 0, i32 6, !dbg !6183
  %bf.load571 = load i32, i32* %precision570, align 4, !dbg !6183
  %bf.clear572 = and i32 %bf.load571, 1023, !dbg !6183
  %cmp573 = icmp ugt i32 %bf.clear568, %bf.clear572, !dbg !6184
  br i1 %cmp573, label %if.else564.if.end579_crit_edge, label %if.then575, !dbg !6185

if.else564.if.end579_crit_edge:                   ; preds = %if.else564
  %bf.load581.pre = load i64, i64* %36, align 8, !dbg !6186
  %.pre73 = and i64 %bf.load581.pre, 65535, !dbg !6188
  br label %if.end579, !dbg !6185

if.then575:                                       ; preds = %if.else564
  %call576 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6189
  br label %cleanup596, !dbg !6190

if.end579:                                        ; preds = %if.else564.if.end579_crit_edge, %lor.lhs.false534, %lor.lhs.false513
  %bf.cast58331.pre-phi = phi i64 [ %.pre73, %if.else564.if.end579_crit_edge ], [ %bf.cast24813, %lor.lhs.false534 ], [ %bf.cast24813, %lor.lhs.false513 ], !dbg !6188
  %cmp584 = icmp eq i64 %bf.cast58331.pre-phi, 16, !dbg !6188
  br i1 %cmp584, label %if.then593, label %lor.lhs.false586, !dbg !6191

lor.lhs.false586:                                 ; preds = %if.end579
  %cmp591 = icmp eq i64 %bf.cast58331.pre-phi, 17, !dbg !6192
  br i1 %cmp591, label %if.then593, label %cleanup596, !dbg !6193

if.then593:                                       ; preds = %lor.lhs.false586, %if.end579
  %call594 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %33, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !6194
  br label %cleanup596, !dbg !6195

cleanup596:                                       ; preds = %lor.lhs.false586, %if.then444, %if.then593, %if.then575, %if.then563, %if.then559, %if.then497, %if.then400, %if.then346
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then346 ], [ 1, %if.then400 ], [ 1, %if.then497 ], [ 1, %if.then559 ], [ 1, %if.then563 ], [ 1, %if.then575 ], [ 1, %if.then593 ], [ %cleanup.dest.slot.1, %if.then444 ], [ 0, %lor.lhs.false586 ]
  %retval.6 = phi %union.tree_node* [ %call347, %if.then346 ], [ %call401, %if.then400 ], [ %call498, %if.then497 ], [ %52, %if.then559 ], [ %53, %if.then563 ], [ %call576, %if.then575 ], [ %call594, %if.then593 ], [ %48, %if.then444 ], [ undef, %lor.lhs.false586 ]
  switch i32 %cleanup.dest.slot.2, label %cleanup792 [
    i32 0, label %sw.epilog
    i32 2, label %sw.epilog
  ]

sw.bb601:                                         ; preds = %entry, %entry
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %endtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6196
  %bf.load603 = load i64, i64* %54, align 8, !dbg !6196
  %bf.cast6059 = and i64 %bf.load603, 65535, !dbg !6198
  %cmp606 = icmp eq i64 %bf.cast6059, 9, !dbg !6198
  br i1 %cmp606, label %cleanup792, label %if.end609, !dbg !6199

if.end609:                                        ; preds = %sw.bb601
  %tobool610 = icmp eq %union.tree_node** %cache, null, !dbg !6200
  br i1 %tobool610, label %if.end617, label %land.lhs.true611, !dbg !6202

land.lhs.true611:                                 ; preds = %if.end609
  %55 = load %union.tree_node*, %union.tree_node** %cache, align 8, !dbg !6203
  %cmp613 = icmp eq %union.tree_node* %55, %value, !dbg !6204
  br i1 %cmp613, label %if.then615, label %if.end617, !dbg !6205

if.then615:                                       ; preds = %land.lhs.true611
  %arrayidx616 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6206
  %56 = load %union.tree_node*, %union.tree_node** %arrayidx616, align 8, !dbg !6206
  br label %cleanup792, !dbg !6207

if.end617:                                        ; preds = %if.end609, %land.lhs.true611
  %cmp622 = icmp eq i64 %bf.cast6059, 6, !dbg !6208
  br i1 %cmp622, label %lor.lhs.false638, label %lor.lhs.false624, !dbg !6208

lor.lhs.false624:                                 ; preds = %if.end617
  %cmp629 = icmp eq i64 %bf.cast6059, 7, !dbg !6208
  br i1 %cmp629, label %lor.lhs.false638, label %lor.lhs.false631, !dbg !6208

lor.lhs.false631:                                 ; preds = %lor.lhs.false624
  %cmp636 = icmp eq i64 %bf.cast6059, 8, !dbg !6208
  br i1 %cmp636, label %lor.lhs.false638, label %if.then651, !dbg !6209

lor.lhs.false638:                                 ; preds = %lor.lhs.false631, %lor.lhs.false624, %if.end617
  %type639 = bitcast %union.tree_node* %endtype to %struct.tree_type*, !dbg !6210
  %precision640 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type639, i64 0, i32 6, !dbg !6210
  %bf.load641 = load i32, i32* %precision640, align 4, !dbg !6210
  %bf.clear642 = and i32 %bf.load641, 1023, !dbg !6210
  %type644 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6211
  %57 = bitcast %union.tree_node** %type644 to %struct.tree_type**, !dbg !6211
  %58 = load %struct.tree_type*, %struct.tree_type** %57, align 8, !dbg !6211
  %precision646 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %58, i64 0, i32 6, !dbg !6211
  %bf.load647 = load i32, i32* %precision646, align 4, !dbg !6211
  %bf.clear648 = and i32 %bf.load647, 1023, !dbg !6211
  %cmp649 = icmp ult i32 %bf.clear642, %bf.clear648, !dbg !6212
  br i1 %cmp649, label %if.else673, label %if.then651, !dbg !6213

if.then651:                                       ; preds = %lor.lhs.false638, %lor.lhs.false631
  %59 = bitcast [4 x %union.tree_node*]* %ncache to i8*, !dbg !6214
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #7, !dbg !6214
  call void @llvm.dbg.declare(metadata [4 x %union.tree_node*]* %ncache, metadata !5996, metadata !DIExpression()), !dbg !6215
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 0, i64 32, i1 false), !dbg !6215
  %operands653 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6216
  %60 = load %union.tree_node*, %union.tree_node** %operands653, align 8, !dbg !6216
  %arraydecay = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %ncache, i64 0, i64 0, !dbg !6217
  %call655 = call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %60, %union.tree_node* %endtype, %union.tree_node** nonnull %arraydecay) #8, !dbg !6218
  call void @llvm.dbg.value(metadata %union.tree_node* %call655, metadata !6000, metadata !DIExpression()), !dbg !6219
  %arrayidx658 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands653, i64 1, !dbg !6220
  %61 = load %union.tree_node*, %union.tree_node** %arrayidx658, align 8, !dbg !6220
  %add.ptr = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %ncache, i64 0, i64 2, !dbg !6221
  %call660 = call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %61, %union.tree_node* %endtype, %union.tree_node** nonnull %add.ptr) #8, !dbg !6222
  call void @llvm.dbg.value(metadata %union.tree_node* %call660, metadata !6001, metadata !DIExpression()), !dbg !6219
  %62 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6223
  %cmp661 = icmp eq %union.tree_node* %call655, %62, !dbg !6225
  br i1 %cmp661, label %if.end672, label %if.else664, !dbg !6226

if.else664:                                       ; preds = %if.then651
  %cmp665 = icmp eq %union.tree_node* %call660, %62, !dbg !6227
  br i1 %cmp665, label %if.end672, label %if.else668, !dbg !6229

if.else668:                                       ; preds = %if.else664
  %call670 = call fastcc %union.tree_node* @narrowing_initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** nonnull %arraydecay) #8, !dbg !6230
  call void @llvm.dbg.value(metadata %union.tree_node* %call670, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end672

if.end672:                                        ; preds = %if.else668, %if.else664, %if.then651
  %ret.1 = phi %union.tree_node* [ %call660, %if.then651 ], [ %call670, %if.else668 ], [ %call655, %if.else664 ], !dbg !6231
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !5972, metadata !DIExpression()), !dbg !6007
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #7, !dbg !6232
  br label %if.end675, !dbg !6233

if.else673:                                       ; preds = %lor.lhs.false638
  %call674 = tail call fastcc %union.tree_node* @narrowing_initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** null) #8, !dbg !6234
  call void @llvm.dbg.value(metadata %union.tree_node* %call674, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end675

if.end675:                                        ; preds = %if.else673, %if.end672
  %ret.2 = phi %union.tree_node* [ %ret.1, %if.end672 ], [ %call674, %if.else673 ], !dbg !6235
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.2, metadata !5972, metadata !DIExpression()), !dbg !6007
  br i1 %tobool610, label %cleanup792, label %if.then677, !dbg !6236

if.then677:                                       ; preds = %if.end675
  store %union.tree_node* %value, %union.tree_node** %cache, align 8, !dbg !6237
  %arrayidx679 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6240
  store %union.tree_node* %ret.2, %union.tree_node** %arrayidx679, align 8, !dbg !6241
  br label %cleanup792, !dbg !6242

sw.bb681:                                         ; preds = %entry
  %63 = getelementptr inbounds %union.tree_node, %union.tree_node* %endtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6243
  %bf.load683 = load i64, i64* %63, align 8, !dbg !6243
  %bf.cast6853 = and i64 %bf.load683, 65535, !dbg !6245
  %cmp686 = icmp eq i64 %bf.cast6853, 9, !dbg !6245
  br i1 %cmp686, label %cleanup792, label %if.end689, !dbg !6246

if.end689:                                        ; preds = %sw.bb681
  %tobool690 = icmp eq %union.tree_node** %cache, null, !dbg !6247
  br i1 %tobool690, label %if.end697, label %land.lhs.true691, !dbg !6249

land.lhs.true691:                                 ; preds = %if.end689
  %64 = load %union.tree_node*, %union.tree_node** %cache, align 8, !dbg !6250
  %cmp693 = icmp eq %union.tree_node* %64, %value, !dbg !6251
  br i1 %cmp693, label %if.then695, label %if.end697, !dbg !6252

if.then695:                                       ; preds = %land.lhs.true691
  %arrayidx696 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6253
  %65 = load %union.tree_node*, %union.tree_node** %arrayidx696, align 8, !dbg !6253
  br label %cleanup792, !dbg !6254

if.end697:                                        ; preds = %if.end689, %land.lhs.true691
  %cmp702 = icmp eq i64 %bf.cast6853, 6, !dbg !6255
  br i1 %cmp702, label %lor.lhs.false718, label %lor.lhs.false704, !dbg !6255

lor.lhs.false704:                                 ; preds = %if.end697
  %cmp709 = icmp eq i64 %bf.cast6853, 7, !dbg !6255
  br i1 %cmp709, label %lor.lhs.false718, label %lor.lhs.false711, !dbg !6255

lor.lhs.false711:                                 ; preds = %lor.lhs.false704
  %cmp716 = icmp eq i64 %bf.cast6853, 8, !dbg !6255
  br i1 %cmp716, label %lor.lhs.false718, label %if.then731, !dbg !6256

lor.lhs.false718:                                 ; preds = %lor.lhs.false711, %lor.lhs.false704, %if.end697
  %type719 = bitcast %union.tree_node* %endtype to %struct.tree_type*, !dbg !6257
  %precision720 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type719, i64 0, i32 6, !dbg !6257
  %bf.load721 = load i32, i32* %precision720, align 4, !dbg !6257
  %bf.clear722 = and i32 %bf.load721, 1023, !dbg !6257
  %type724 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6258
  %66 = bitcast %union.tree_node** %type724 to %struct.tree_type**, !dbg !6258
  %67 = load %struct.tree_type*, %struct.tree_type** %66, align 8, !dbg !6258
  %precision726 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %67, i64 0, i32 6, !dbg !6258
  %bf.load727 = load i32, i32* %precision726, align 4, !dbg !6258
  %bf.clear728 = and i32 %bf.load727, 1023, !dbg !6258
  %cmp729 = icmp ult i32 %bf.clear722, %bf.clear728, !dbg !6259
  br i1 %cmp729, label %if.else784, label %if.then731, !dbg !6260

if.then731:                                       ; preds = %lor.lhs.false718, %lor.lhs.false711
  %68 = bitcast [4 x %union.tree_node*]* %ncache732 to i8*, !dbg !6261
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #7, !dbg !6261
  call void @llvm.dbg.declare(metadata [4 x %union.tree_node*]* %ncache732, metadata !6002, metadata !DIExpression()), !dbg !6262
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 32, i1 false), !dbg !6262
  %operands735 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6263
  %69 = load %union.tree_node*, %union.tree_node** %operands735, align 8, !dbg !6263
  %arraydecay737 = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %ncache732, i64 0, i64 0, !dbg !6264
  %call738 = call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %69, %union.tree_node* %endtype, %union.tree_node** nonnull %arraydecay737) #8, !dbg !6265
  call void @llvm.dbg.value(metadata %union.tree_node* %call738, metadata !6005, metadata !DIExpression()), !dbg !6266
  %arrayidx742 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands735, i64 1, !dbg !6267
  %70 = load %union.tree_node*, %union.tree_node** %arrayidx742, align 8, !dbg !6267
  %add.ptr744 = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %ncache732, i64 0, i64 2, !dbg !6268
  %call745 = call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %70, %union.tree_node* %endtype, %union.tree_node** nonnull %add.ptr744) #8, !dbg !6269
  call void @llvm.dbg.value(metadata %union.tree_node* %call745, metadata !6006, metadata !DIExpression()), !dbg !6266
  %71 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6270
  %cmp746 = icmp eq %union.tree_node* %call745, %71, !dbg !6272
  br i1 %cmp746, label %if.end783, label %if.else749, !dbg !6273

if.else749:                                       ; preds = %if.then731
  %cmp750 = icmp eq %union.tree_node* %call738, %call745, !dbg !6274
  %cmp753 = icmp ne %union.tree_node* %call738, null, !dbg !6276
  %or.cond = and i1 %cmp750, %cmp753, !dbg !6277
  br i1 %or.cond, label %if.then755, label %if.else756, !dbg !6277

if.then755:                                       ; preds = %if.else749
  call void @llvm.dbg.value(metadata %union.tree_node* %71, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end783, !dbg !6278

if.else756:                                       ; preds = %if.else749
  %tobool757 = icmp eq %union.tree_node* %call738, null, !dbg !6279
  br i1 %tobool757, label %if.else778, label %land.lhs.true758, !dbg !6281

land.lhs.true758:                                 ; preds = %if.else756
  %72 = getelementptr inbounds %union.tree_node, %union.tree_node* %call738, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6282
  %bf.load760 = load i64, i64* %72, align 8, !dbg !6282
  %bf.cast7627 = and i64 %bf.load760, 65535, !dbg !6283
  %cmp763 = icmp eq i64 %bf.cast7627, 28, !dbg !6283
  %tobool766 = icmp ne %union.tree_node* %call745, null, !dbg !6284
  %or.cond2 = and i1 %cmp763, %tobool766, !dbg !6285
  br i1 %or.cond2, label %land.lhs.true767, label %if.else778, !dbg !6285

land.lhs.true767:                                 ; preds = %land.lhs.true758
  %73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call745, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6286
  %bf.load769 = load i64, i64* %73, align 8, !dbg !6286
  %bf.cast7718 = and i64 %bf.load769, 65535, !dbg !6287
  %cmp772 = icmp eq i64 %bf.cast7718, 28, !dbg !6287
  br i1 %cmp772, label %land.lhs.true774, label %if.else778, !dbg !6288

land.lhs.true774:                                 ; preds = %land.lhs.true767
  %call775 = call i32 @operand_equal_p(%union.tree_node* nonnull %call738, %union.tree_node* nonnull %call745, i32 1) #6, !dbg !6289
  %tobool776 = icmp eq i32 %call775, 0, !dbg !6289
  br i1 %tobool776, label %if.else778, label %if.then777, !dbg !6290

if.then777:                                       ; preds = %land.lhs.true774
  %74 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6291
  call void @llvm.dbg.value(metadata %union.tree_node* %74, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end783, !dbg !6292

if.else778:                                       ; preds = %land.lhs.true774, %if.else756, %land.lhs.true767, %land.lhs.true758
  %call780 = call fastcc %union.tree_node* @narrowing_initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** nonnull %arraydecay737) #8, !dbg !6293
  call void @llvm.dbg.value(metadata %union.tree_node* %call780, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end783

if.end783:                                        ; preds = %if.then755, %if.else778, %if.then777, %if.then731
  %ret.5 = phi %union.tree_node* [ %call738, %if.then731 ], [ %71, %if.then755 ], [ %74, %if.then777 ], [ %call780, %if.else778 ], !dbg !6294
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.5, metadata !5972, metadata !DIExpression()), !dbg !6007
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #7, !dbg !6295
  br label %if.end786, !dbg !6296

if.else784:                                       ; preds = %lor.lhs.false718
  %call785 = tail call fastcc %union.tree_node* @narrowing_initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** null) #8, !dbg !6297
  call void @llvm.dbg.value(metadata %union.tree_node* %call785, metadata !5972, metadata !DIExpression()), !dbg !6007
  br label %if.end786

if.end786:                                        ; preds = %if.else784, %if.end783
  %ret.6 = phi %union.tree_node* [ %ret.5, %if.end783 ], [ %call785, %if.else784 ], !dbg !6298
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.6, metadata !5972, metadata !DIExpression()), !dbg !6007
  br i1 %tobool690, label %cleanup792, label %if.then788, !dbg !6299

if.then788:                                       ; preds = %if.end786
  store %union.tree_node* %value, %union.tree_node** %cache, align 8, !dbg !6300
  %arrayidx790 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 1, !dbg !6303
  store %union.tree_node* %ret.6, %union.tree_node** %arrayidx790, align 8, !dbg !6304
  br label %cleanup792, !dbg !6305

sw.epilog:                                        ; preds = %entry, %cleanup596, %cleanup596
  br label %cleanup792, !dbg !6306

cleanup792.loopexit.us-lcssa:                     ; preds = %cleanup
  br label %cleanup792.loopexit, !dbg !6045

cleanup792.loopexit:                              ; preds = %cleanup792.loopexit.us-lcssa.us, %cleanup792.loopexit.us-lcssa
  br label %cleanup792, !dbg !6045

cleanup792:                                       ; preds = %cleanup792.loopexit, %land.lhs.true107, %if.end675, %if.end786, %if.then788, %sw.bb681, %if.then677, %sw.bb601, %if.then227, %if.end229, %cond.end223, %if.then94, %if.end124, %if.end115, %if.end62, %if.then2, %if.end52, %sw.epilog, %if.then695, %if.then615, %cleanup596, %sw.bb126, %sw.bb72
  %retval.7 = phi %union.tree_node* [ null, %sw.epilog ], [ %65, %if.then695 ], [ %56, %if.then615 ], [ %retval.6, %cleanup596 ], [ %call130, %sw.bb126 ], [ %20, %sw.bb72 ], [ %3, %if.then2 ], [ %cond58, %if.end52 ], [ %cond71, %if.end62 ], [ %25, %if.then94 ], [ %call75, %if.end124 ], [ null, %land.lhs.true107 ], [ null, %if.end115 ], [ %call230, %if.end229 ], [ %call228, %if.then227 ], [ null, %cond.end223 ], [ null, %sw.bb601 ], [ %ret.2, %if.then677 ], [ %ret.2, %if.end675 ], [ null, %sw.bb681 ], [ %ret.6, %if.then788 ], [ %ret.6, %if.end786 ], [ null, %cleanup792.loopexit ], !dbg !6007
  ret %union.tree_node* %retval.7, !dbg !6045
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @initializer_constant_valid_for_bitfield_p(%union.tree_node* %value) local_unnamed_addr #5 !dbg !6307 {
entry:
  br label %tailrecurse, !dbg !6314

tailrecurse:                                      ; preds = %sw.bb27, %entry
  %value.tr = phi %union.tree_node* [ %value, %entry ], [ %6, %sw.bb27 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr, metadata !6309, metadata !DIExpression()), !dbg !6315
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %value.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6316
  %bf.load = load i64, i64* %0, align 8, !dbg !6316
  %1 = trunc i64 %bf.load to i16, !dbg !6316
  switch i16 %1, label %sw.epilog [
    i16 51, label %for.cond.preheader
    i16 23, label %return.loopexit1
    i16 118, label %sw.bb27
    i16 117, label %sw.bb27
  ], !dbg !6317

for.cond.preheader:                               ; preds = %tailrecurse
  %value.tr.lcssa6 = phi %union.tree_node* [ %value.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa6, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa6, metadata !6309, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %union.tree_node* %value.tr.lcssa6, metadata !6309, metadata !DIExpression()), !dbg !6315
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %value.tr.lcssa6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6318
  %2 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6318
  br label %for.cond, !dbg !6321

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %elt.0 = phi %union.tree_node* [ %elt.1, %for.inc ], [ undef, %for.cond.preheader ]
  %idx.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !6322
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !6310, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.0, metadata !6313, metadata !DIExpression()), !dbg !6323
  %3 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !6324
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %3, null, !dbg !6324
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6324

cond.true:                                        ; preds = %for.cond
  %base3 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %3, i64 0, i32 0, !dbg !6324
  br label %cond.end, !dbg !6324

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base3, %cond.true ], [ null, %for.cond ], !dbg !6324
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !6324
  %conv = zext i32 %call to i64, !dbg !6324
  %cmp = icmp ult i64 %idx.0, %conv, !dbg !6324
  br i1 %cmp, label %cond.false6, label %cond.end20, !dbg !6324

cond.false6:                                      ; preds = %cond.end
  %4 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %2, align 8, !dbg !6324
  %tobool9 = icmp eq %struct.VEC_constructor_elt_gc* %4, null, !dbg !6324
  br i1 %tobool9, label %cond.end15, label %cond.true10, !dbg !6324

cond.true10:                                      ; preds = %cond.false6
  %base13 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %4, i64 0, i32 0, !dbg !6324
  br label %cond.end15, !dbg !6324

cond.end15:                                       ; preds = %cond.false6, %cond.true10
  %cond16 = phi %struct.VEC_constructor_elt_base* [ %base13, %cond.true10 ], [ null, %cond.false6 ], !dbg !6324
  %conv17 = trunc i64 %idx.0 to i32, !dbg !6324
  %call18 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond16, i32 %conv17) #8, !dbg !6324
  %value19 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call18, i64 0, i32 1, !dbg !6324
  %5 = load %union.tree_node*, %union.tree_node** %value19, align 8, !dbg !6324
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6313, metadata !DIExpression()), !dbg !6323
  br label %cond.end20, !dbg !6324

cond.end20:                                       ; preds = %cond.end, %cond.end15
  %elt.1 = phi %union.tree_node* [ %5, %cond.end15 ], [ %elt.0, %cond.end ]
  %cond21 = phi i1 [ true, %cond.end15 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %elt.1, metadata !6313, metadata !DIExpression()), !dbg !6323
  br i1 %cond21, label %for.body, label %return.loopexit, !dbg !6321

for.body:                                         ; preds = %cond.end20
  %call23 = tail call zeroext i8 @initializer_constant_valid_for_bitfield_p(%union.tree_node* %elt.1) #8, !dbg !6325
  %tobool24 = icmp eq i8 %call23, 0, !dbg !6325
  br i1 %tobool24, label %return.loopexit, label %for.inc, !dbg !6327

for.inc:                                          ; preds = %for.body
  %inc = add i64 %idx.0, 1, !dbg !6324
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6310, metadata !DIExpression()), !dbg !6323
  br label %for.cond, !dbg !6324, !llvm.loop !6328

sw.bb27:                                          ; preds = %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6330
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6330
  br label %tailrecurse, !dbg !6314

sw.epilog:                                        ; preds = %tailrecurse
  br label %return, !dbg !6331

return.loopexit:                                  ; preds = %cond.end20, %for.body
  %retval.1.ph = phi i8 [ 1, %cond.end20 ], [ 0, %for.body ]
  br label %return, !dbg !6332

return.loopexit1:                                 ; preds = %tailrecurse
  br label %return, !dbg !6332

return:                                           ; preds = %return.loopexit1, %return.loopexit, %sw.epilog
  %retval.1 = phi i8 [ 0, %sw.epilog ], [ %retval.1.ph, %return.loopexit ], [ 1, %return.loopexit1 ], !dbg !6315
  ret i8 %retval.1, !dbg !6332
}

; Function Attrs: nounwind uwtable
define dso_local void @output_constant(%union.tree_node* %exp, i64 %size, i32 %align) local_unnamed_addr #5 !dbg !6333 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i64 %size, metadata !6338, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i32 %align, metadata !6339, metadata !DIExpression()), !dbg !6355
  %cmp = icmp eq i64 %size, 0, !dbg !6356
  %0 = load i32, i32* @flag_syntax_only, align 4, !dbg !6358
  %tobool = icmp ne i32 %0, 0, !dbg !6358
  %or.cond = or i1 %cmp, %tobool, !dbg !6359
  br i1 %or.cond, label %cleanup.cont376, label %if.end, !dbg !6359

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6360
  %bf.load = load i64, i64* %1, align 8, !dbg !6360
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6361
  %cmp1 = icmp eq i64 %bf.cast4, 116, !dbg !6361
  br i1 %cmp1, label %land.lhs.true, label %if.end127, !dbg !6362

land.lhs.true:                                    ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6363
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !6363
  %3 = load i64*, i64** %2, align 8, !dbg !6363
  %bf.load3 = load i64, i64* %3, align 8, !dbg !6363
  %bf.cast518 = and i64 %bf.load3, 65535, !dbg !6363
  %cmp6 = icmp eq i64 %bf.cast518, 10, !dbg !6363
  %4 = bitcast i64* %3 to %struct.tree_common*, !dbg !6363
  br i1 %cmp6, label %land.lhs.true15, label %lor.lhs.false7, !dbg !6363

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %cmp14 = icmp eq i64 %bf.cast518, 12, !dbg !6363
  br i1 %cmp14, label %land.lhs.true15, label %if.end127, !dbg !6364

land.lhs.true15:                                  ; preds = %lor.lhs.false7, %land.lhs.true
  %5 = load i8 (i32, i8)*, i8 (i32, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 2), align 8, !dbg !6365
  %cmp22 = icmp eq i64 %bf.cast518, 14, !dbg !6366
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !6366

cond.true:                                        ; preds = %land.lhs.true15
  %.cast21 = bitcast i64* %3 to %union.tree_node*, !dbg !6366
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #6, !dbg !6366
  %.phi.trans.insert = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6367
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !6368
  br label %cond.end, !dbg !6366

cond.false:                                       ; preds = %land.lhs.true15
  %type27 = bitcast i64* %3 to %struct.tree_type*, !dbg !6366
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i64 0, i32 6, !dbg !6366
  %bf.load28 = load i32, i32* %mode, align 4, !dbg !6366
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !6366
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !6366
  br label %cond.end, !dbg !6366

cond.end:                                         ; preds = %cond.false, %cond.true
  %6 = phi %struct.tree_common* [ %.pre, %cond.true ], [ %4, %cond.false ], !dbg !6368
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear29, %cond.false ], !dbg !6366
  %type33 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !6368
  %7 = bitcast %union.tree_node** %type33 to i64**, !dbg !6368
  %8 = load i64*, i64** %7, align 8, !dbg !6368
  %bf.load35 = load i64, i64* %8, align 8, !dbg !6368
  %bf.lshr36 = lshr i64 %bf.load35, 56, !dbg !6368
  %conv = trunc i64 %bf.lshr36 to i8, !dbg !6368
  %call38 = tail call zeroext i8 %5(i32 %cond, i8 zeroext %conv) #6, !dbg !6369
  %tobool40 = icmp eq i8 %call38, 0, !dbg !6369
  br i1 %tobool40, label %if.end127, label %if.then41, !dbg !6370

if.then41:                                        ; preds = %cond.end
  %9 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6371
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6342, metadata !DIExpression()), !dbg !6372
  br label %while.cond, !dbg !6373

while.cond:                                       ; preds = %while.body, %if.then41
  %exp.addr.0 = phi %union.tree_node* [ %exp, %if.then41 ], [ %18, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !6337, metadata !DIExpression()), !dbg !6355
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6374
  %bf.load45 = load i64, i64* %10, align 8, !dbg !6374
  %bf.cast4722 = and i64 %bf.load45, 65535, !dbg !6375
  %cmp48 = icmp eq i64 %bf.cast4722, 116, !dbg !6375
  br i1 %cmp48, label %land.lhs.true50, label %while.end.loopexit, !dbg !6376

land.lhs.true50:                                  ; preds = %while.cond
  %type52 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6377
  %11 = bitcast %union.tree_node** %type52 to i64**, !dbg !6377
  %12 = load i64*, i64** %11, align 8, !dbg !6377
  %bf.load54 = load i64, i64* %12, align 8, !dbg !6377
  %bf.cast5625 = and i64 %bf.load54, 65535, !dbg !6377
  %cmp57 = icmp eq i64 %bf.cast5625, 10, !dbg !6377
  %13 = bitcast i64* %12 to %struct.tree_common*, !dbg !6377
  br i1 %cmp57, label %land.rhs, label %lor.lhs.false59, !dbg !6377

lor.lhs.false59:                                  ; preds = %land.lhs.true50
  %cmp66 = icmp eq i64 %bf.cast5625, 12, !dbg !6377
  br i1 %cmp66, label %land.rhs, label %while.end.loopexit, !dbg !6378

land.rhs:                                         ; preds = %lor.lhs.false59, %land.lhs.true50
  %14 = load i8 (i32, i8)*, i8 (i32, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 57, i32 2), align 8, !dbg !6379
  %cmp74 = icmp eq i64 %bf.cast5625, 14, !dbg !6380
  br i1 %cmp74, label %cond.true76, label %cond.false80, !dbg !6380

cond.true76:                                      ; preds = %land.rhs
  %.cast28 = bitcast i64* %12 to %union.tree_node*, !dbg !6380
  %call79 = tail call i32 @vector_type_mode(%union.tree_node* %.cast28) #6, !dbg !6380
  %.phi.trans.insert29 = bitcast %union.tree_node** %type52 to %struct.tree_common**, !dbg !6372
  %.pre30 = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert29, align 8, !dbg !6381
  br label %cond.end88, !dbg !6380

cond.false80:                                     ; preds = %land.rhs
  %type83 = bitcast i64* %12 to %struct.tree_type*, !dbg !6380
  %mode84 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type83, i64 0, i32 6, !dbg !6380
  %bf.load85 = load i32, i32* %mode84, align 4, !dbg !6380
  %bf.lshr86 = lshr i32 %bf.load85, 16, !dbg !6380
  %bf.clear87 = and i32 %bf.lshr86, 255, !dbg !6380
  br label %cond.end88, !dbg !6380

cond.end88:                                       ; preds = %cond.false80, %cond.true76
  %15 = phi %struct.tree_common* [ %.pre30, %cond.true76 ], [ %13, %cond.false80 ], !dbg !6381
  %cond89 = phi i32 [ %call79, %cond.true76 ], [ %bf.clear87, %cond.false80 ], !dbg !6380
  %type93 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %15, i64 0, i32 2, !dbg !6381
  %16 = bitcast %union.tree_node** %type93 to i64**, !dbg !6381
  %17 = load i64*, i64** %16, align 8, !dbg !6381
  %bf.load95 = load i64, i64* %17, align 8, !dbg !6381
  %bf.lshr96 = lshr i64 %bf.load95, 56, !dbg !6381
  %conv98 = trunc i64 %bf.lshr96 to i8, !dbg !6381
  %call99 = tail call zeroext i8 %14(i32 %cond89, i8 zeroext %conv98) #6, !dbg !6382
  %tobool101 = icmp eq i8 %call99, 0, !dbg !6378
  br i1 %tobool101, label %cond.end88.while.end_crit_edge, label %while.body, !dbg !6373

cond.end88.while.end_crit_edge:                   ; preds = %cond.end88
  %exp.addr.0.lcssa43 = phi %union.tree_node* [ %exp.addr.0, %cond.end88 ]
  %.lcssa42 = phi i64* [ %10, %cond.end88 ], !dbg !6374
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa43, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa43, metadata !6337, metadata !DIExpression()), !dbg !6355
  %bf.load104.pre = load i64, i64* %.lcssa42, align 8, !dbg !6383
  br label %while.end, !dbg !6373

while.body:                                       ; preds = %cond.end88
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6385
  %18 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6385
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %while.cond, !dbg !6373, !llvm.loop !6386

while.end.loopexit:                               ; preds = %lor.lhs.false59, %while.cond
  %exp.addr.0.lcssa = phi %union.tree_node* [ %exp.addr.0, %lor.lhs.false59 ], [ %exp.addr.0, %while.cond ]
  %bf.load45.lcssa = phi i64 [ %bf.load45, %lor.lhs.false59 ], [ %bf.load45, %while.cond ], !dbg !6374
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %while.end, !dbg !6387

while.end:                                        ; preds = %while.end.loopexit, %cond.end88.while.end_crit_edge
  %exp.addr.044 = phi %union.tree_node* [ %exp.addr.0.lcssa43, %cond.end88.while.end_crit_edge ], [ %exp.addr.0.lcssa, %while.end.loopexit ]
  %bf.load115 = phi i64 [ %bf.load104.pre, %cond.end88.while.end_crit_edge ], [ %bf.load45.lcssa, %while.end.loopexit ], !dbg !6383
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.044, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.044, metadata !6337, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.044, metadata !6337, metadata !DIExpression()), !dbg !6355
  %bf.cast10623 = and i64 %bf.load115, 65535, !dbg !6387
  %cmp107 = icmp eq i64 %bf.cast10623, 121, !dbg !6387
  br i1 %cmp107, label %if.then109, label %if.else, !dbg !6388

if.then109:                                       ; preds = %while.end
  %operands111 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.044, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6389
  %19 = load %union.tree_node*, %union.tree_node** %operands111, align 8, !dbg !6389
  %call113 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %9, %union.tree_node* %19) #6, !dbg !6389
  call void @llvm.dbg.value(metadata %union.tree_node* %call113, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %if.end127, !dbg !6390

if.else:                                          ; preds = %while.end
  %cmp118 = icmp eq i64 %bf.cast10623, 23, !dbg !6391
  br i1 %cmp118, label %if.then120, label %if.end127, !dbg !6393

if.then120:                                       ; preds = %if.else
  %int_cst121 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.044, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6394
  %low = bitcast i32* %int_cst121 to i64*, !dbg !6394
  %20 = load i64, i64* %low, align 8, !dbg !6394
  %high = getelementptr inbounds i32, i32* %int_cst121, i64 2, !dbg !6395
  %21 = bitcast i32* %high to i64*, !dbg !6395
  %22 = load i64, i64* %21, align 8, !dbg !6395
  %call124 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %9, i64 %20, i64 %22) #6, !dbg !6396
  call void @llvm.dbg.value(metadata %union.tree_node* %call124, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %if.end127, !dbg !6397

if.end127:                                        ; preds = %cond.end, %if.then109, %if.then120, %if.else, %lor.lhs.false7, %if.end
  %exp.addr.3 = phi %union.tree_node* [ %exp, %cond.end ], [ %exp, %lor.lhs.false7 ], [ %exp, %if.end ], [ %call113, %if.then109 ], [ %call124, %if.then120 ], [ %exp.addr.044, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.3, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %while.cond128, !dbg !6398

while.cond128:                                    ; preds = %cleanup, %if.end127
  %exp.addr.4 = phi %union.tree_node* [ %exp.addr.3, %if.end127 ], [ %exp.addr.5, %cleanup ], !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.4, metadata !6337, metadata !DIExpression()), !dbg !6355
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6400
  %bf.load130 = load i64, i64* %23, align 8, !dbg !6400
  %bf.cast1325 = and i64 %bf.load130, 65535, !dbg !6400
  %cmp133 = icmp eq i64 %bf.cast1325, 116, !dbg !6400
  br i1 %cmp133, label %while.body155, label %lor.lhs.false135, !dbg !6400

lor.lhs.false135:                                 ; preds = %while.cond128
  %cmp140 = icmp eq i64 %bf.cast1325, 113, !dbg !6400
  br i1 %cmp140, label %while.body155, label %lor.lhs.false142, !dbg !6401

lor.lhs.false142:                                 ; preds = %lor.lhs.false135
  %24 = add nsw i64 %bf.cast1325, -117, !dbg !6402
  %25 = icmp ult i64 %24, 2, !dbg !6402
  br i1 %25, label %while.body155, label %while.end190, !dbg !6402

while.body155:                                    ; preds = %while.cond128, %lor.lhs.false135, %lor.lhs.false142
  %type157 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6403
  %26 = load %union.tree_node*, %union.tree_node** %type157, align 8, !dbg !6403
  %call158 = tail call i64 @int_size_in_bytes(%union.tree_node* %26) #6, !dbg !6404
  call void @llvm.dbg.value(metadata i64 %call158, metadata !6345, metadata !DIExpression()), !dbg !6405
  %operands160 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6406
  %27 = bitcast %union.tree_node** %operands160 to %struct.tree_common**, !dbg !6406
  %28 = load %struct.tree_common*, %struct.tree_common** %27, align 8, !dbg !6406
  %type163 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %28, i64 0, i32 2, !dbg !6406
  %29 = load %union.tree_node*, %union.tree_node** %type163, align 8, !dbg !6406
  %call164 = tail call i64 @int_size_in_bytes(%union.tree_node* %29) #6, !dbg !6407
  call void @llvm.dbg.value(metadata i64 %call164, metadata !6347, metadata !DIExpression()), !dbg !6405
  %cmp165 = icmp sgt i64 %call158, %call164, !dbg !6408
  br i1 %cmp165, label %land.lhs.true167, label %if.else184, !dbg !6410

land.lhs.true167:                                 ; preds = %while.body155
  %bf.load169 = load i64, i64* %23, align 8, !dbg !6411
  %bf.cast17116 = and i64 %bf.load169, 65535, !dbg !6412
  %cmp172 = icmp eq i64 %bf.cast17116, 118, !dbg !6412
  br i1 %cmp172, label %if.else184, label %land.lhs.true174, !dbg !6413

land.lhs.true174:                                 ; preds = %land.lhs.true167
  %30 = bitcast %union.tree_node** %type157 to i64**, !dbg !6414
  %31 = load i64*, i64** %30, align 8, !dbg !6414
  %bf.load178 = load i64, i64* %31, align 8, !dbg !6414
  %bf.cast18017 = and i64 %bf.load178, 65535, !dbg !6415
  %cmp181 = icmp eq i64 %bf.cast18017, 17, !dbg !6415
  br i1 %cmp181, label %if.else184, label %cleanup, !dbg !6416

if.else184:                                       ; preds = %land.lhs.true174, %land.lhs.true167, %while.body155
  %32 = load %union.tree_node*, %union.tree_node** %operands160, align 8, !dbg !6417
  call void @llvm.dbg.value(metadata %union.tree_node* %32, metadata !6337, metadata !DIExpression()), !dbg !6355
  br label %cleanup, !dbg !6418

cleanup:                                          ; preds = %land.lhs.true174, %if.else184
  %cleanup.dest.slot.0 = phi i1 [ true, %if.else184 ], [ false, %land.lhs.true174 ]
  %exp.addr.5 = phi %union.tree_node* [ %32, %if.else184 ], [ %exp.addr.4, %land.lhs.true174 ], !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.5, metadata !6337, metadata !DIExpression()), !dbg !6355
  br i1 %cleanup.dest.slot.0, label %while.cond128, label %while.end190, !llvm.loop !6419

while.end190:                                     ; preds = %lor.lhs.false142, %cleanup
  %exp.addr.6 = phi %union.tree_node* [ %exp.addr.5, %cleanup ], [ %exp.addr.4, %lor.lhs.false142 ], !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.6, metadata !6337, metadata !DIExpression()), !dbg !6355
  %type192 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6420
  %33 = bitcast %union.tree_node** %type192 to i64**, !dbg !6420
  %34 = load i64*, i64** %33, align 8, !dbg !6420
  %bf.load194 = load i64, i64* %34, align 8, !dbg !6420
  %35 = trunc i64 %bf.load194 to i16, !dbg !6420
  %.cast = bitcast i64* %34 to %union.tree_node*, !dbg !6421
  %call199 = tail call i64 @int_size_in_bytes(%union.tree_node* %.cast) #6, !dbg !6422
  call void @llvm.dbg.value(metadata i64 %call199, metadata !6341, metadata !DIExpression()), !dbg !6355
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6423
  %bf.load201 = load i64, i64* %36, align 8, !dbg !6423
  %bf.cast2039 = and i64 %bf.load201, 65535, !dbg !6425
  %cmp204 = icmp eq i64 %bf.cast2039, 51, !dbg !6425
  br i1 %cmp204, label %land.lhs.true206, label %if.end219, !dbg !6426

land.lhs.true206:                                 ; preds = %while.end190
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6427
  %37 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6427
  %38 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %37, align 8, !dbg !6427
  %tobool207 = icmp eq %struct.VEC_constructor_elt_gc* %38, null, !dbg !6427
  br i1 %tobool207, label %cond.end213, label %cond.true208, !dbg !6427

cond.true208:                                     ; preds = %land.lhs.true206
  %base211 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %38, i64 0, i32 0, !dbg !6427
  br label %cond.end213, !dbg !6427

cond.end213:                                      ; preds = %land.lhs.true206, %cond.true208
  %cond214 = phi %struct.VEC_constructor_elt_base* [ %base211, %cond.true208 ], [ null, %land.lhs.true206 ], !dbg !6427
  %call215 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond214) #8, !dbg !6427
  %cmp216 = icmp eq i32 %call215, 0, !dbg !6427
  br i1 %cmp216, label %if.then218, label %cond.end213.if.end219_crit_edge, !dbg !6428

cond.end213.if.end219_crit_edge:                  ; preds = %cond.end213
  %bf.load221.pre = load i64, i64* %36, align 8, !dbg !6429
  br label %if.end219, !dbg !6428

if.then218:                                       ; preds = %cond.end213
  tail call void @assemble_zeros(i64 %size) #8, !dbg !6431
  br label %cleanup.cont376, !dbg !6433

if.end219:                                        ; preds = %cond.end213.if.end219_crit_edge, %while.end190
  %bf.load242 = phi i64 [ %bf.load221.pre, %cond.end213.if.end219_crit_edge ], [ %bf.load201, %while.end190 ], !dbg !6429
  %bf.cast22310 = and i64 %bf.load242, 65535, !dbg !6434
  %cmp224 = icmp eq i64 %bf.cast22310, 122, !dbg !6434
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !6435

if.then226:                                       ; preds = %if.end219
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4661, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !6436
  br label %cleanup.cont376, !dbg !6438

if.end227:                                        ; preds = %if.end219
  switch i16 %35, label %sw.default367 [
    i16 7, label %sw.bb
    i16 8, label %sw.bb
    i16 6, label %sw.bb
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 5, label %sw.bb
    i16 11, label %sw.bb
    i16 9, label %sw.bb240
    i16 13, label %sw.bb272
    i16 15, label %sw.bb278
    i16 14, label %sw.bb278
    i16 16, label %sw.bb354
    i16 17, label %sw.bb354
    i16 0, label %cleanup.cont376
  ], !dbg !6439

sw.bb:                                            ; preds = %if.end227, %if.end227, %if.end227, %if.end227, %if.end227, %if.end227, %if.end227
  %call228 = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp.addr.6, %struct.rtx_def* null, i32 0, i32 4) #8, !dbg !6440
  %cmp229 = icmp ugt i64 %call199, %size, !dbg !6442
  %size.call199 = select i1 %cmp229, i64 %size, i64 %call199, !dbg !6442
  %conv235 = trunc i64 %size.call199 to i32, !dbg !6442
  %call236 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %call228, i32 %conv235, i32 %align, i32 0) #8, !dbg !6443
  %tobool237 = icmp eq i8 %call236, 0, !dbg !6443
  br i1 %tobool237, label %if.then238, label %sw.epilog368, !dbg !6444

if.then238:                                       ; preds = %sw.bb
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.87, i64 0, i64 0)) #6, !dbg !6445
  br label %sw.epilog368, !dbg !6445

sw.bb240:                                         ; preds = %if.end227
  %cmp245 = icmp eq i64 %bf.cast22310, 24, !dbg !6446
  br i1 %cmp245, label %if.else248, label %if.then247, !dbg !6448

if.then247:                                       ; preds = %sw.bb240
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.88, i64 0, i64 0)) #6, !dbg !6449
  br label %sw.epilog368, !dbg !6449

if.else248:                                       ; preds = %sw.bb240
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6450
  %39 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !6450
  %40 = load %struct.real_value*, %struct.real_value** %39, align 8, !dbg !6450
  %41 = load i64*, i64** %33, align 8, !dbg !6451
  %bf.load252 = load i64, i64* %41, align 8, !dbg !6451
  %bf.cast25414 = and i64 %bf.load252, 65535, !dbg !6451
  %cmp255 = icmp eq i64 %bf.cast25414, 14, !dbg !6451
  br i1 %cmp255, label %cond.true257, label %cond.false261, !dbg !6451

cond.true257:                                     ; preds = %if.else248
  %.cast15 = bitcast i64* %41 to %union.tree_node*, !dbg !6451
  %call260 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #6, !dbg !6451
  br label %cond.end269, !dbg !6451

cond.false261:                                    ; preds = %if.else248
  %type264 = bitcast i64* %41 to %struct.tree_type*, !dbg !6451
  %mode265 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type264, i64 0, i32 6, !dbg !6451
  %bf.load266 = load i32, i32* %mode265, align 4, !dbg !6451
  %bf.lshr267 = lshr i32 %bf.load266, 16, !dbg !6451
  %bf.clear268 = and i32 %bf.lshr267, 255, !dbg !6451
  br label %cond.end269, !dbg !6451

cond.end269:                                      ; preds = %cond.false261, %cond.true257
  %cond270 = phi i32 [ %call260, %cond.true257 ], [ %bf.clear268, %cond.false261 ], !dbg !6451
  tail call void @assemble_real(%struct.real_value* byval(%struct.real_value) align 8 %40, i32 %cond270, i32 %align) #8, !dbg !6452
  br label %sw.epilog368

sw.bb272:                                         ; preds = %if.end227
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6453
  %42 = bitcast i32* %real to %union.tree_node**, !dbg !6453
  %43 = load %union.tree_node*, %union.tree_node** %42, align 8, !dbg !6453
  %div = lshr i64 %call199, 1, !dbg !6454
  tail call void @output_constant(%union.tree_node* %43, i64 %div, i32 %align) #8, !dbg !6455
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6456
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !6456
  %mul = shl i64 %div, 3, !dbg !6457
  %conv276 = trunc i64 %mul to i32, !dbg !6458
  %call277 = tail call fastcc i32 @min_align(i32 %align, i32 %conv276) #8, !dbg !6459
  tail call void @output_constant(%union.tree_node* %45, i64 %div, i32 %call277) #8, !dbg !6460
  br label %sw.epilog368, !dbg !6461

sw.bb278:                                         ; preds = %if.end227, %if.end227
  %46 = trunc i64 %bf.load242 to i16, !dbg !6462
  switch i16 %46, label %sw.default [
    i16 51, label %sw.bb283
    i16 28, label %sw.bb285
    i16 27, label %sw.bb298
  ], !dbg !6463

sw.bb283:                                         ; preds = %sw.bb278
  %call284 = tail call fastcc i64 @output_constructor(%union.tree_node* %exp.addr.6, i64 %size, i32 %align, %struct.oc_outer_state* null) #8, !dbg !6464
  br label %cleanup.cont376, !dbg !6465

sw.bb285:                                         ; preds = %sw.bb278
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6466
  %48 = load i32, i32* %47, align 8, !dbg !6466
  %conv286 = sext i32 %48 to i64, !dbg !6466
  %cmp287 = icmp ult i64 %conv286, %size, !dbg !6466
  br i1 %cmp287, label %cond.true289, label %cond.end294, !dbg !6466

cond.true289:                                     ; preds = %sw.bb285
  br label %cond.end294, !dbg !6466

cond.end294:                                      ; preds = %sw.bb285, %cond.true289
  %cond295 = phi i64 [ %conv286, %cond.true289 ], [ %size, %sw.bb285 ], !dbg !6466
  call void @llvm.dbg.value(metadata i64 %cond295, metadata !6341, metadata !DIExpression()), !dbg !6355
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6467
  %arraydecay = bitcast i32* %str to i8*, !dbg !6467
  %conv297 = trunc i64 %cond295 to i32, !dbg !6468
  tail call void @assemble_string(i8* nonnull %arraydecay, i32 %conv297) #8, !dbg !6469
  br label %sw.epilog368, !dbg !6470

sw.bb298:                                         ; preds = %sw.bb278
  %49 = bitcast %union.tree_node** %type192 to %struct.tree_common**, !dbg !6471
  %50 = load %struct.tree_common*, %struct.tree_common** %49, align 8, !dbg !6471
  %type302 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %50, i64 0, i32 2, !dbg !6471
  %51 = bitcast %union.tree_node** %type302 to i64**, !dbg !6471
  %52 = load i64*, i64** %51, align 8, !dbg !6471
  %bf.load304 = load i64, i64* %52, align 8, !dbg !6471
  %bf.cast30612 = and i64 %bf.load304, 65535, !dbg !6471
  %cmp307 = icmp eq i64 %bf.cast30612, 14, !dbg !6471
  br i1 %cmp307, label %cond.true309, label %cond.false315, !dbg !6471

cond.true309:                                     ; preds = %sw.bb298
  %53 = bitcast i64* %52 to %union.tree_node*, !dbg !6471
  %call314 = tail call i32 @vector_type_mode(%union.tree_node* %53) #6, !dbg !6471
  br label %cond.end325, !dbg !6471

cond.false315:                                    ; preds = %sw.bb298
  %type320 = bitcast i64* %52 to %struct.tree_type*, !dbg !6471
  %mode321 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type320, i64 0, i32 6, !dbg !6471
  %bf.load322 = load i32, i32* %mode321, align 4, !dbg !6471
  %bf.lshr323 = lshr i32 %bf.load322, 16, !dbg !6471
  %bf.clear324 = and i32 %bf.lshr323, 255, !dbg !6471
  br label %cond.end325, !dbg !6471

cond.end325:                                      ; preds = %cond.false315, %cond.true309
  %cond326 = phi i32 [ %call314, %cond.true309 ], [ %bf.clear324, %cond.false315 ], !dbg !6471
  call void @llvm.dbg.value(metadata i32 %cond326, metadata !6354, metadata !DIExpression()), !dbg !6472
  %call327 = tail call i32 @get_mode_alignment(i32 %cond326) #6, !dbg !6473
  %cmp328 = icmp ugt i32 %call327, %align, !dbg !6473
  br i1 %cmp328, label %cond.end333, label %cond.false331, !dbg !6473

cond.false331:                                    ; preds = %cond.end325
  %call332 = tail call i32 @get_mode_alignment(i32 %cond326) #6, !dbg !6473
  br label %cond.end333, !dbg !6473

cond.end333:                                      ; preds = %cond.end325, %cond.false331
  %cond334 = phi i32 [ %call332, %cond.false331 ], [ %align, %cond.end325 ], !dbg !6473
  call void @llvm.dbg.value(metadata i32 %cond334, metadata !6353, metadata !DIExpression()), !dbg !6472
  %idxprom = zext i32 %cond326 to i64, !dbg !6474
  %arrayidx335 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6474
  %54 = load i8, i8* %arrayidx335, align 1, !dbg !6474
  call void @llvm.dbg.value(metadata i8 %54, metadata !6348, metadata !DIExpression()), !dbg !6472
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6475
  %55 = bitcast i32* %elements to %union.tree_node**, !dbg !6475
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8, !dbg !6475
  call void @llvm.dbg.value(metadata %union.tree_node* %56, metadata !6352, metadata !DIExpression()), !dbg !6472
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6476
  %58 = load %union.tree_node*, %union.tree_node** %57, align 8, !dbg !6476
  %conv338 = zext i8 %54 to i64, !dbg !6477
  tail call void @output_constant(%union.tree_node* %58, i64 %conv338, i32 %align) #8, !dbg !6478
  call void @llvm.dbg.value(metadata i64 %conv338, metadata !6341, metadata !DIExpression()), !dbg !6355
  br label %while.cond340, !dbg !6479

while.cond340:                                    ; preds = %while.body344, %cond.end333
  %thissize.0 = phi i64 [ %conv338, %cond.end333 ], [ %add, %while.body344 ], !dbg !6472
  %link.0 = phi %union.tree_node* [ %56, %cond.end333 ], [ %59, %while.body344 ], !dbg !6472
  call void @llvm.dbg.value(metadata %union.tree_node* %link.0, metadata !6352, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i64 %thissize.0, metadata !6341, metadata !DIExpression()), !dbg !6355
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %link.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6480
  %59 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6480
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !6352, metadata !DIExpression()), !dbg !6472
  %cmp342 = icmp eq %union.tree_node* %59, null, !dbg !6481
  br i1 %cmp342, label %sw.epilog368.loopexit, label %while.body344, !dbg !6479

while.body344:                                    ; preds = %while.cond340
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6482
  %61 = load %union.tree_node*, %union.tree_node** %60, align 8, !dbg !6482
  tail call void @output_constant(%union.tree_node* %61, i64 %conv338, i32 %cond334) #8, !dbg !6484
  %add = add i64 %thissize.0, %conv338, !dbg !6485
  call void @llvm.dbg.value(metadata i64 %add, metadata !6341, metadata !DIExpression()), !dbg !6355
  br label %while.cond340, !dbg !6479, !llvm.loop !6486

sw.default:                                       ; preds = %sw.bb278
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4732, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !6488
  br label %sw.epilog368, !dbg !6489

sw.bb354:                                         ; preds = %if.end227, %if.end227
  %cmp359 = icmp eq i64 %bf.cast22310, 51, !dbg !6490
  br i1 %cmp359, label %cond.end363, label %cond.true361, !dbg !6490

cond.true361:                                     ; preds = %sw.bb354
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !6490
  br label %cond.end363, !dbg !6490

cond.end363:                                      ; preds = %sw.bb354, %cond.true361
  %call365 = tail call fastcc i64 @output_constructor(%union.tree_node* %exp.addr.6, i64 %size, i32 %align, %struct.oc_outer_state* null) #8, !dbg !6491
  br label %cleanup.cont376, !dbg !6492

sw.default367:                                    ; preds = %if.end227
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4746, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !6493
  br label %sw.epilog368, !dbg !6494

sw.epilog368.loopexit:                            ; preds = %while.cond340
  %thissize.0.lcssa = phi i64 [ %thissize.0, %while.cond340 ], !dbg !6472
  call void @llvm.dbg.value(metadata i64 %thissize.0.lcssa, metadata !6341, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i64 %thissize.0.lcssa, metadata !6341, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i64 %thissize.0.lcssa, metadata !6341, metadata !DIExpression()), !dbg !6355
  br label %sw.epilog368, !dbg !6495

sw.epilog368:                                     ; preds = %sw.epilog368.loopexit, %sw.bb, %cond.end294, %sw.default, %if.then247, %cond.end269, %if.then238, %sw.default367, %sw.bb272
  %thissize.2 = phi i64 [ %call199, %sw.default367 ], [ %call199, %sw.bb272 ], [ %call199, %if.then238 ], [ %call199, %sw.bb ], [ %call199, %cond.end269 ], [ %call199, %if.then247 ], [ %call199, %sw.default ], [ %cond295, %cond.end294 ], [ %thissize.0.lcssa, %sw.epilog368.loopexit ], !dbg !6497
  call void @llvm.dbg.value(metadata i64 %thissize.2, metadata !6341, metadata !DIExpression()), !dbg !6355
  %cmp369 = icmp ult i64 %thissize.2, %size, !dbg !6495
  br i1 %cmp369, label %if.then371, label %cleanup.cont376, !dbg !6498

if.then371:                                       ; preds = %sw.epilog368
  %sub = sub i64 %size, %thissize.2, !dbg !6499
  tail call void @assemble_zeros(i64 %sub) #8, !dbg !6500
  br label %cleanup.cont376, !dbg !6500

cleanup.cont376:                                  ; preds = %if.then218, %if.then226, %sw.bb283, %cond.end363, %entry, %if.end227, %if.then371, %sw.epilog368
  ret void, !dbg !6501
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local i64 @int_size_in_bytes(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !6502 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6506, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !6507, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 4, metadata !6509, metadata !DIExpression()), !dbg !6510
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* null, i32 0, i32 4, %struct.rtx_def** null) #6, !dbg !6511
  ret %struct.rtx_def* %call, !dbg !6512
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @output_constructor(%union.tree_node* %exp, i64 %size, i32 %align, %struct.oc_outer_state* %outer) unnamed_addr #5 !dbg !6513 {
entry:
  %ce = alloca %struct.constructor_elt_d*, align 8
  %local = alloca %struct.oc_local_state, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6523, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i64 %size, metadata !6524, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i32 %align, metadata !6525, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata %struct.oc_outer_state* %outer, metadata !6526, metadata !DIExpression()), !dbg !6545
  %0 = bitcast %struct.constructor_elt_d** %ce to i8*, !dbg !6546
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6546
  %1 = bitcast %struct.oc_local_state* %local to i8*, !dbg !6547
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1) #7, !dbg !6547
  %exp1 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 0, !dbg !6548
  store %union.tree_node* %exp, %union.tree_node** %exp1, align 8, !dbg !6549
  %size2 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 1, !dbg !6550
  store i64 %size, i64* %size2, align 8, !dbg !6551
  %align3 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 2, !dbg !6552
  store i32 %align, i32* %align3, align 8, !dbg !6553
  %total_bytes = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !6554
  store i64 0, i64* %total_bytes, align 8, !dbg !6555
  %cmp = icmp ne %struct.oc_outer_state* %outer, null, !dbg !6556
  %conv4 = zext i1 %cmp to i8, !dbg !6557
  %byte_buffer_in_use = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 7, !dbg !6558
  store i8 %conv4, i8* %byte_buffer_in_use, align 8, !dbg !6559
  %tobool = icmp eq %struct.oc_outer_state* %outer, null, !dbg !6560
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6560

cond.true:                                        ; preds = %entry
  %byte = getelementptr inbounds %struct.oc_outer_state, %struct.oc_outer_state* %outer, i64 0, i32 1, !dbg !6561
  %2 = load i32, i32* %byte, align 4, !dbg !6561
  br label %cond.end, !dbg !6560

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %entry ], !dbg !6560
  %byte5 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !6562
  store i32 %cond, i32* %byte5, align 4, !dbg !6563
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6564
  %3 = bitcast %union.tree_node** %type to i64*, !dbg !6564
  %4 = load i64, i64* %3, align 8, !dbg !6564
  %type6 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 3, !dbg !6565
  %5 = bitcast %union.tree_node** %type6 to i64*, !dbg !6566
  store i64 %4, i64* %5, align 8, !dbg !6566
  %last_relative_index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 9, !dbg !6567
  store i32 -1, i32* %last_relative_index, align 8, !dbg !6568
  %min_index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 5, !dbg !6569
  store %union.tree_node* null, %union.tree_node** %min_index, align 8, !dbg !6570
  %6 = bitcast %union.tree_node** %type6 to i64**, !dbg !6571
  %7 = inttoptr i64 %4 to i64*, !dbg !6571
  %bf.load = load i64, i64* %7, align 8, !dbg !6571
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6573
  %cmp8 = icmp eq i64 %bf.cast2, 15, !dbg !6573
  %8 = inttoptr i64 %4 to %struct.tree_type*, !dbg !6574
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !6574

land.lhs.true:                                    ; preds = %cond.end
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 1, !dbg !6575
  %9 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !6575
  %cmp12 = icmp eq %union.tree_node* %9, null, !dbg !6576
  br i1 %cmp12, label %if.end, label %if.then, !dbg !6577

if.then:                                          ; preds = %land.lhs.true
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !6578
  %10 = bitcast %struct.lang_decl** %minval to i64*, !dbg !6578
  %11 = load i64, i64* %10, align 8, !dbg !6578
  %12 = bitcast %union.tree_node** %min_index to i64*, !dbg !6579
  store i64 %11, i64* %12, align 8, !dbg !6579
  br label %if.end, !dbg !6580

if.end:                                           ; preds = %land.lhs.true, %if.then, %cond.end
  %field = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 4, !dbg !6581
  store %union.tree_node* null, %union.tree_node** %field, align 8, !dbg !6582
  %bf.load21 = load i64, i64* %7, align 8, !dbg !6583
  %bf.cast233 = and i64 %bf.load21, 65535, !dbg !6585
  %cmp24 = icmp eq i64 %bf.cast233, 16, !dbg !6585
  br i1 %cmp24, label %if.then26, label %if.end.if.end31_crit_edge, !dbg !6586

if.end.if.end31_crit_edge:                        ; preds = %if.end
  %.pre13 = bitcast %union.tree_node** %field to i64*, !dbg !6587
  br label %if.end31, !dbg !6586

if.then26:                                        ; preds = %if.end
  %values29 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 1, !dbg !6592
  %13 = bitcast %union.tree_node** %values29 to i64*, !dbg !6592
  %14 = load i64, i64* %13, align 8, !dbg !6592
  %15 = bitcast %union.tree_node** %field to i64*, !dbg !6593
  store i64 %14, i64* %15, align 8, !dbg !6593
  br label %if.end31, !dbg !6594

if.end31:                                         ; preds = %if.end.if.end31_crit_edge, %if.then26
  %.pre-phi = phi i64* [ %.pre13, %if.end.if.end31_crit_edge ], [ %15, %if.then26 ], !dbg !6587
  call void @llvm.dbg.value(metadata i64 0, metadata !6527, metadata !DIExpression()), !dbg !6545
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6595
  %16 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !6595
  %val = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !6596
  %17 = bitcast %union.tree_node** %val to i64*, !dbg !6596
  %index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 11, !dbg !6596
  %18 = bitcast %union.tree_node** %index to i64*, !dbg !6597
  br label %for.cond, !dbg !6599

for.cond:                                         ; preds = %cond.end151, %if.end31
  %cnt.0 = phi i64 [ 0, %if.end31 ], [ %inc, %cond.end151 ], !dbg !6600
  call void @llvm.dbg.value(metadata i64 %cnt.0, metadata !6527, metadata !DIExpression()), !dbg !6545
  %19 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %16, align 8, !dbg !6601
  %tobool32 = icmp eq %struct.VEC_constructor_elt_gc* %19, null, !dbg !6601
  br i1 %tobool32, label %cond.end38, label %cond.true33, !dbg !6601

cond.true33:                                      ; preds = %for.cond
  %base36 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %19, i64 0, i32 0, !dbg !6601
  br label %cond.end38, !dbg !6601

cond.end38:                                       ; preds = %for.cond, %cond.true33
  %cond39 = phi %struct.VEC_constructor_elt_base* [ %base36, %cond.true33 ], [ null, %for.cond ], !dbg !6601
  %conv40 = trunc i64 %cnt.0 to i32, !dbg !6601
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ce, metadata !6528, metadata !DIExpression(DW_OP_deref)), !dbg !6545
  %call = call fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %cond39, i32 %conv40, %struct.constructor_elt_d** nonnull %ce) #8, !dbg !6601
  %tobool41 = icmp eq i32 %call, 0, !dbg !6602
  br i1 %tobool41, label %for.end, label %for.body, !dbg !6602

for.body:                                         ; preds = %cond.end38
  %20 = load %struct.constructor_elt_d*, %struct.constructor_elt_d** %ce, align 8, !dbg !6603
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %20, metadata !6528, metadata !DIExpression()), !dbg !6545
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %20, i64 0, i32 1, !dbg !6604
  %21 = bitcast %union.tree_node** %value to i64*, !dbg !6604
  %22 = load i64, i64* %21, align 8, !dbg !6604
  store i64 %22, i64* %17, align 8, !dbg !6605
  store %union.tree_node* null, %union.tree_node** %index, align 8, !dbg !6606
  %23 = load i64*, i64** %6, align 8, !dbg !6607
  %bf.load44 = load i64, i64* %23, align 8, !dbg !6607
  %bf.cast464 = and i64 %bf.load44, 65535, !dbg !6608
  %cmp47 = icmp eq i64 %bf.cast464, 16, !dbg !6608
  %24 = bitcast %struct.constructor_elt_d* %20 to i64*, !dbg !6609
  %25 = inttoptr i64 %22 to %union.tree_node*, !dbg !6609
  br i1 %cmp47, label %land.lhs.true64, label %lor.lhs.false, !dbg !6609

lor.lhs.false:                                    ; preds = %for.body
  %cmp54 = icmp eq i64 %bf.cast464, 17, !dbg !6610
  br i1 %cmp54, label %land.lhs.true64, label %lor.lhs.false56, !dbg !6611

lor.lhs.false56:                                  ; preds = %lor.lhs.false
  %cmp62 = icmp eq i64 %bf.cast464, 18, !dbg !6612
  br i1 %cmp62, label %land.lhs.true64, label %if.else, !dbg !6613

land.lhs.true64:                                  ; preds = %lor.lhs.false56, %lor.lhs.false, %for.body
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %20, metadata !6528, metadata !DIExpression()), !dbg !6545
  %index65 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %20, i64 0, i32 0, !dbg !6614
  %26 = load %union.tree_node*, %union.tree_node** %index65, align 8, !dbg !6614
  %cmp66 = icmp eq %union.tree_node* %26, null, !dbg !6615
  br i1 %cmp66, label %if.else, label %if.then68, !dbg !6616

if.then68:                                        ; preds = %land.lhs.true64
  %27 = ptrtoint %union.tree_node* %26 to i64, !dbg !6616
  store i64 %27, i64* %.pre-phi, align 8, !dbg !6617
  br label %if.end82, !dbg !6618

if.else:                                          ; preds = %land.lhs.true64, %lor.lhs.false56
  %cmp76 = icmp eq i64 %bf.cast464, 15, !dbg !6619
  br i1 %cmp76, label %if.then78, label %if.end82, !dbg !6620

if.then78:                                        ; preds = %if.else
  %28 = load i64, i64* %24, align 8, !dbg !6621
  store i64 %28, i64* %18, align 8, !dbg !6622
  br label %if.end82, !dbg !6623

if.end82:                                         ; preds = %if.else, %if.then78, %if.then68
  %29 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !6624
  %tobool84 = icmp ne %union.tree_node* %29, null, !dbg !6626
  %30 = load i32, i32* @flag_verbose_asm, align 4, !dbg !6627
  %tobool86 = icmp ne i32 %30, 0, !dbg !6627
  %or.cond = and i1 %tobool84, %tobool86, !dbg !6628
  br i1 %or.cond, label %if.then87, label %if.end98, !dbg !6628

if.then87:                                        ; preds = %if.end82
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !6629
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6630
  %32 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6630
  %tobool89 = icmp eq %union.tree_node* %32, null, !dbg !6630
  br i1 %tobool89, label %cond.end95, label %cond.true90, !dbg !6630

cond.true90:                                      ; preds = %if.then87
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6631
  %33 = bitcast i32* %str to i8**, !dbg !6631
  %34 = load i8*, i8** %33, align 8, !dbg !6631
  br label %cond.end95, !dbg !6630

cond.end95:                                       ; preds = %if.then87, %cond.true90
  %cond96 = phi i8* [ %34, %cond.true90 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i64 0, i64 0), %if.then87 ], !dbg !6630
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0), i8* %cond96) #6, !dbg !6632
  %.pre = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !6633
  br label %if.end98, !dbg !6632

if.end98:                                         ; preds = %cond.end95, %if.end82
  %35 = phi %union.tree_node* [ %.pre, %cond.end95 ], [ %25, %if.end82 ]
  %36 = phi %union.tree_node* [ %.pre, %cond.end95 ], [ %25, %if.end82 ], !dbg !6633
  %cmp100 = icmp eq %union.tree_node* %36, null, !dbg !6635
  br i1 %cmp100, label %if.end106, label %if.then102, !dbg !6636

if.then102:                                       ; preds = %if.end98
  %call104 = call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %35) #6, !dbg !6637
  store %union.tree_node* %call104, %union.tree_node** %val, align 8, !dbg !6637
  br label %if.end106, !dbg !6637

if.end106:                                        ; preds = %if.end98, %if.then102
  br i1 %tobool, label %land.lhs.true108, label %if.else142, !dbg !6638

land.lhs.true108:                                 ; preds = %if.end106
  %37 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !6640
  %cmp110 = icmp eq %union.tree_node* %37, null, !dbg !6641
  br i1 %cmp110, label %if.else121, label %land.lhs.true112, !dbg !6642

land.lhs.true112:                                 ; preds = %land.lhs.true108
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6642
  %bf.load115 = load i64, i64* %38, align 8, !dbg !6643
  %bf.cast11710 = and i64 %bf.load115, 65535, !dbg !6644
  %cmp118 = icmp eq i64 %bf.cast11710, 111, !dbg !6644
  br i1 %cmp118, label %if.then120, label %if.else121, !dbg !6645

if.then120:                                       ; preds = %land.lhs.true112
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6545
  call fastcc void @output_constructor_array_range(%struct.oc_local_state* nonnull %local) #8, !dbg !6646
  br label %for.inc, !dbg !6646

if.else121:                                       ; preds = %land.lhs.true108, %land.lhs.true112
  br i1 true, label %land.lhs.true123, label %if.else121.if.else142_crit_edge, !dbg !6647

if.else121.if.else142_crit_edge:                  ; preds = %if.else121
  br label %if.else142, !dbg !6647

land.lhs.true123:                                 ; preds = %if.else121
  %39 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !6649
  %cmp125 = icmp eq %union.tree_node* %39, null, !dbg !6650
  br i1 %cmp125, label %if.then141, label %lor.lhs.false127, !dbg !6651

lor.lhs.false127:                                 ; preds = %land.lhs.true123
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6652
  %40 = bitcast i40* %decl_flag_1 to i64*, !dbg !6652
  %bf.load129 = load i64, i64* %40, align 8, !dbg !6652
  %bf.cast1318 = and i64 %bf.load129, 33554432, !dbg !6652
  %tobool132 = icmp eq i64 %bf.cast1318, 0, !dbg !6652
  br i1 %tobool132, label %if.then141, label %land.lhs.true133, !dbg !6652

land.lhs.true133:                                 ; preds = %lor.lhs.false127
  %bf.cast1389 = and i64 %bf.load129, 255, !dbg !6652
  %cmp139 = icmp eq i64 %bf.cast1389, 1, !dbg !6652
  br i1 %cmp139, label %if.then141, label %if.else142, !dbg !6653

if.then141:                                       ; preds = %land.lhs.true133, %lor.lhs.false127, %land.lhs.true123
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6545
  call fastcc void @output_constructor_regular_field(%struct.oc_local_state* nonnull %local) #8, !dbg !6654
  br label %for.inc, !dbg !6654

if.else142:                                       ; preds = %if.else121.if.else142_crit_edge, %land.lhs.true133, %if.end106
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !6529, metadata !DIExpression(DW_OP_deref)), !dbg !6545
  call fastcc void @output_constructor_bitfield(%struct.oc_local_state* nonnull %local, %struct.oc_outer_state* %outer) #8, !dbg !6655
  br label %for.inc

for.inc:                                          ; preds = %if.then120, %if.else142, %if.then141
  %inc = add i64 %cnt.0, 1, !dbg !6656
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6527, metadata !DIExpression()), !dbg !6545
  %41 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !6657
  %tobool146 = icmp eq %union.tree_node* %41, null, !dbg !6658
  br i1 %tobool146, label %cond.end151, label %cond.true147, !dbg !6658

cond.true147:                                     ; preds = %for.inc
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6659
  %42 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6659
  br label %cond.end151, !dbg !6658

cond.end151:                                      ; preds = %for.inc, %cond.true147
  %cond152 = phi %union.tree_node* [ %42, %cond.true147 ], [ null, %for.inc ], !dbg !6658
  store %union.tree_node* %cond152, %union.tree_node** %field, align 8, !dbg !6660
  br label %for.cond, !dbg !6661, !llvm.loop !6662

for.end:                                          ; preds = %cond.end38
  br i1 %tobool, label %if.else158, label %if.then155, !dbg !6664

if.then155:                                       ; preds = %for.end
  %43 = load i32, i32* %byte5, align 4, !dbg !6665
  %byte157 = getelementptr inbounds %struct.oc_outer_state, %struct.oc_outer_state* %outer, i64 0, i32 1, !dbg !6667
  store i32 %43, i32* %byte157, align 4, !dbg !6668
  %.pre12 = load i64, i64* %total_bytes, align 8, !dbg !6669
  br label %if.end179, !dbg !6670

if.else158:                                       ; preds = %for.end
  %44 = load i8, i8* %byte_buffer_in_use, align 8, !dbg !6671
  %tobool160 = icmp eq i8 %44, 0, !dbg !6674
  br i1 %tobool160, label %if.else158.if.end168_crit_edge, label %if.then161, !dbg !6675

if.else158.if.end168_crit_edge:                   ; preds = %if.else158
  %.pre11 = load i64, i64* %total_bytes, align 8, !dbg !6676
  br label %if.end168, !dbg !6675

if.then161:                                       ; preds = %if.else158
  %45 = load i32, i32* %byte5, align 4, !dbg !6678
  %conv163 = sext i32 %45 to i64, !dbg !6678
  %call164 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv163) #6, !dbg !6678
  %call165 = call zeroext i8 @assemble_integer(%struct.rtx_def* %call164, i32 1, i32 8, i32 1) #8, !dbg !6680
  %46 = load i64, i64* %total_bytes, align 8, !dbg !6681
  %inc167 = add nsw i64 %46, 1, !dbg !6681
  store i64 %inc167, i64* %total_bytes, align 8, !dbg !6681
  br label %if.end168, !dbg !6682

if.end168:                                        ; preds = %if.else158.if.end168_crit_edge, %if.then161
  %47 = phi i64 [ %.pre11, %if.else158.if.end168_crit_edge ], [ %inc167, %if.then161 ], !dbg !6676
  %48 = load i64, i64* %size2, align 8, !dbg !6683
  %cmp171 = icmp ugt i64 %48, %47, !dbg !6684
  br i1 %cmp171, label %if.then173, label %if.end179, !dbg !6685

if.then173:                                       ; preds = %if.end168
  %sub = sub i64 %48, %47, !dbg !6686
  call void @assemble_zeros(i64 %sub) #8, !dbg !6688
  %49 = load i64, i64* %size2, align 8, !dbg !6689
  store i64 %49, i64* %total_bytes, align 8, !dbg !6690
  br label %if.end179, !dbg !6691

if.end179:                                        ; preds = %if.end168, %if.then173, %if.then155
  %50 = phi i64 [ %47, %if.end168 ], [ %49, %if.then173 ], [ %.pre12, %if.then155 ], !dbg !6669
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1) #7, !dbg !6692
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6692
  ret i64 %50, !dbg !6693
}

; Function Attrs: nounwind uwtable
define dso_local void @merge_weak(%union.tree_node* %newdecl, %union.tree_node* %olddecl) local_unnamed_addr #5 !dbg !6694 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %newdecl, metadata !6696, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %union.tree_node* %olddecl, metadata !6697, metadata !DIExpression()), !dbg !6706
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %newdecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6707
  %0 = bitcast i24* %weak_flag to i32*, !dbg !6707
  %bf.load = load i32, i32* %0, align 8, !dbg !6707
  %weak_flag2 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6708
  %1 = bitcast i24* %weak_flag2 to i32*, !dbg !6708
  %bf.load3 = load i32, i32* %1, align 8, !dbg !6708
  %bf.lshr5 = xor i32 %bf.load, %bf.load3, !dbg !6709
  %2 = trunc i32 %bf.lshr5 to i8, !dbg !6709
  %cmp = icmp sgt i8 %2, -1, !dbg !6709
  %3 = trunc i32 %bf.load to i8, !dbg !6706
  %tobool = icmp slt i8 %3, 0, !dbg !6706
  br i1 %cmp, label %if.then, label %if.end18, !dbg !6710

if.then:                                          ; preds = %entry
  br i1 %tobool, label %for.cond.preheader, label %if.end62, !dbg !6711

for.cond.preheader:                               ; preds = %if.then
  br label %for.cond, !dbg !6712

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %pwd.0 = phi %union.tree_node** [ %7, %for.body ], [ @weak_decls, %for.cond.preheader ], !dbg !6714
  call void @llvm.dbg.value(metadata %union.tree_node** %pwd.0, metadata !6698, metadata !DIExpression()), !dbg !6715
  %4 = load %union.tree_node*, %union.tree_node** %pwd.0, align 8, !dbg !6716
  %tobool12 = icmp eq %union.tree_node* %4, null, !dbg !6712
  br i1 %tobool12, label %if.end62.loopexit, label %for.body, !dbg !6712

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6718
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6718
  %cmp13 = icmp eq %union.tree_node* %6, %newdecl, !dbg !6720
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6721
  br i1 %cmp13, label %if.then14, label %for.cond, !dbg !6722, !llvm.loop !6723

if.then14:                                        ; preds = %for.body
  %.lcssa = phi %union.tree_node** [ %7, %for.body ], !dbg !6721
  %pwd.0.lcssa9 = phi %union.tree_node** [ %pwd.0, %for.body ], !dbg !6714
  call void @llvm.dbg.value(metadata %union.tree_node** %pwd.0.lcssa9, metadata !6698, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata %union.tree_node** %pwd.0.lcssa9, metadata !6698, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.value(metadata %union.tree_node** %pwd.0.lcssa9, metadata !6698, metadata !DIExpression()), !dbg !6715
  %8 = bitcast %union.tree_node** %.lcssa to i64*, !dbg !6725
  %9 = load i64, i64* %8, align 8, !dbg !6725
  %10 = bitcast %union.tree_node** %pwd.0.lcssa9 to i64*, !dbg !6727
  store i64 %9, i64* %10, align 8, !dbg !6727
  br label %if.end62, !dbg !6728

if.end18:                                         ; preds = %entry
  br i1 %tobool, label %if.then25, label %if.else61, !dbg !6729

if.then25:                                        ; preds = %if.end18
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %olddecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6730
  %bf.load26 = load i64, i64* %11, align 8, !dbg !6730
  %bf.cast1 = and i64 %bf.load26, 4194304, !dbg !6730
  %tobool29 = icmp eq i64 %bf.cast1, 0, !dbg !6730
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !6732

if.then30:                                        ; preds = %if.then25
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !6733
  br label %if.end46, !dbg !6733

if.else:                                          ; preds = %if.then25
  %bf.cast352 = and i64 %bf.load26, 16777216, !dbg !6734
  %tobool36 = icmp eq i64 %bf.cast352, 0, !dbg !6734
  br i1 %tobool36, label %if.end46, label %land.lhs.true, !dbg !6736

land.lhs.true:                                    ; preds = %if.else
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %olddecl) #6, !dbg !6737
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6737
  %bf.load38 = load i64, i64* %12, align 8, !dbg !6737
  %bf.cast413 = and i64 %bf.load38, 67108864, !dbg !6737
  %tobool42 = icmp eq i64 %bf.cast413, 0, !dbg !6737
  br i1 %tobool42, label %if.end46, label %if.then43, !dbg !6738

if.then43:                                        ; preds = %land.lhs.true
  %call44 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.90, i64 0, i64 0), %union.tree_node* %newdecl) #6, !dbg !6739
  br label %if.end46, !dbg !6739

if.end46:                                         ; preds = %land.lhs.true, %if.else, %if.then43, %if.then30
  br label %for.cond47, !dbg !6740

for.cond47:                                       ; preds = %for.inc57, %if.end46
  %wd.0.in = phi %union.tree_node** [ @weak_decls, %if.end46 ], [ %chain59, %for.inc57 ]
  %wd.0 = load %union.tree_node*, %union.tree_node** %wd.0.in, align 8, !dbg !6744
  call void @llvm.dbg.value(metadata %union.tree_node* %wd.0, metadata !6703, metadata !DIExpression()), !dbg !6745
  %tobool48 = icmp eq %union.tree_node* %wd.0, null, !dbg !6746
  br i1 %tobool48, label %for.end60.loopexit, label %for.body49, !dbg !6746

for.body49:                                       ; preds = %for.cond47
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %wd.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6747
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !6747
  %cmp52 = icmp eq %union.tree_node* %14, %newdecl, !dbg !6750
  br i1 %cmp52, label %if.then53, label %for.inc57, !dbg !6751

if.then53:                                        ; preds = %for.body49
  %.lcssa10 = phi %union.tree_node** [ %13, %for.body49 ], !dbg !6747
  store %union.tree_node* %olddecl, %union.tree_node** %.lcssa10, align 8, !dbg !6752
  br label %for.end60, !dbg !6754

for.inc57:                                        ; preds = %for.body49
  %chain59 = getelementptr inbounds %union.tree_node, %union.tree_node* %wd.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6755
  br label %for.cond47, !dbg !6756, !llvm.loop !6757

for.end60.loopexit:                               ; preds = %for.cond47
  br label %for.end60, !dbg !6759

for.end60:                                        ; preds = %for.end60.loopexit, %if.then53
  tail call fastcc void @mark_weak(%union.tree_node* %olddecl) #8, !dbg !6759
  br label %if.end62, !dbg !6760

if.else61:                                        ; preds = %if.end18
  tail call fastcc void @mark_weak(%union.tree_node* %newdecl) #8, !dbg !6761
  br label %if.end62

if.end62.loopexit:                                ; preds = %for.cond
  br label %if.end62, !dbg !6762

if.end62:                                         ; preds = %if.end62.loopexit, %if.then, %if.then14, %if.else61, %for.end60
  ret void, !dbg !6762
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_weak(%union.tree_node* %decl) unnamed_addr #5 !dbg !6763 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6765, metadata !DIExpression()), !dbg !6766
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !6767
  %0 = bitcast i24* %weak_flag to i32*, !dbg !6767
  %bf.load = load i32, i32* %0, align 8, !dbg !6768
  %bf.set = or i32 %bf.load, 128, !dbg !6768
  store i32 %bf.set, i32* %0, align 8, !dbg !6768
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6769
  %bf.load1 = load i64, i64* %1, align 8, !dbg !6769
  %bf.cast = and i64 %bf.load1, 65535, !dbg !6769
  %arrayidx3 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !6769
  %2 = load i8, i8* %arrayidx3, align 1, !dbg !6769
  %tobool = icmp eq i8 %2, 0, !dbg !6769
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6769

land.lhs.true:                                    ; preds = %entry
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6769
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !6769
  %cmp = icmp eq %struct.rtx_def* %3, null, !dbg !6769
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 0, !dbg !6771
  br i1 %cmp, label %if.end, label %land.lhs.true5, !dbg !6771

land.lhs.true5:                                   ; preds = %land.lhs.true
  br i1 false, label %cond.false, label %cond.true, !dbg !6772

cond.true:                                        ; preds = %land.lhs.true5
  %bf.load13.pre = load i32, i32* %4, align 8, !dbg !6772
  %phitmp = and i32 %bf.load13.pre, 65535, !dbg !6772
  %phitmp10 = icmp eq i32 %phitmp, 43, !dbg !6772
  br label %cond.end, !dbg !6772

cond.false:                                       ; preds = %land.lhs.true5
  br label %cond.end, !dbg !6772

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load13 = phi i1 [ false, %cond.false ], [ %phitmp10, %cond.true ]
  br i1 %bf.load13, label %land.lhs.true17, label %if.end, !dbg !6773

land.lhs.true17:                                  ; preds = %cond.end
  br i1 false, label %cond.false24, label %cond.true21, !dbg !6774

cond.true21:                                      ; preds = %land.lhs.true17
  %arrayidx29.phi.trans.insert = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6775
  %rt_rtx.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx29.phi.trans.insert to %struct.rtx_def**, !dbg !6775
  %.pre8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx.phi.trans.insert, align 8, !dbg !6774
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %.pre8, i64 0, i32 0, !dbg !6774
  %phitmp11 = icmp eq %struct.rtx_def* %.pre8, null, !dbg !6774
  br label %cond.end27, !dbg !6774

cond.false24:                                     ; preds = %land.lhs.true17
  br label %cond.end27, !dbg !6774

cond.end27:                                       ; preds = %cond.false24, %cond.true21
  %6 = phi i32* [ undef, %cond.false24 ], [ %5, %cond.true21 ]
  %7 = phi i1 [ undef, %cond.false24 ], [ %phitmp11, %cond.true21 ]
  br i1 %7, label %if.end, label %land.lhs.true31, !dbg !6776

land.lhs.true31:                                  ; preds = %cond.end27
  br i1 false, label %cond.false38, label %cond.true35, !dbg !6777

cond.true35:                                      ; preds = %land.lhs.true31
  %bf.load47.pre = load i32, i32* %6, align 8, !dbg !6777
  br label %cond.end41, !dbg !6777

cond.false38:                                     ; preds = %land.lhs.true31
  br label %cond.end41, !dbg !6777

cond.end41:                                       ; preds = %cond.false38, %cond.true35
  %bf.load47 = phi i32 [ undef, %cond.false38 ], [ %bf.load47.pre, %cond.true35 ], !dbg !6777
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !6777
  %cmp49 = icmp eq i32 %bf.clear48, 45, !dbg !6778
  br i1 %cmp49, label %if.then, label %if.end, !dbg !6779

if.then:                                          ; preds = %cond.end41
  br i1 false, label %cond.false57, label %cond.true54, !dbg !6780

cond.true54:                                      ; preds = %if.then
  br label %cond.end60, !dbg !6780

cond.false57:                                     ; preds = %if.then
  br label %cond.end60, !dbg !6780

cond.end60:                                       ; preds = %cond.false57, %cond.true54
  %bf.set68 = or i32 %bf.load47, -2147483648, !dbg !6781
  store i32 %bf.set68, i32* %6, align 8, !dbg !6781
  br label %if.end, !dbg !6780

if.end:                                           ; preds = %cond.end27, %land.lhs.true, %entry, %cond.end60, %cond.end41, %cond.end
  ret void, !dbg !6782
}

; Function Attrs: nounwind uwtable
define dso_local void @declare_weak(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !6783 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6785, metadata !DIExpression()), !dbg !6786
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6787
  %bf.load = load i64, i64* %0, align 8, !dbg !6787
  %bf.cast1 = and i64 %bf.load, 134217728, !dbg !6787
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6787
  br i1 %tobool, label %if.then, label %if.else, !dbg !6789

if.then:                                          ; preds = %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.91, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !6790
  br label %if.end13, !dbg !6790

if.else:                                          ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 65535, !dbg !6791
  %cmp = icmp eq i64 %bf.cast42, 29, !dbg !6791
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !6793

land.lhs.true:                                    ; preds = %if.else
  %bf.cast93 = and i64 %bf.load, 4194304, !dbg !6794
  %tobool10 = icmp eq i64 %bf.cast93, 0, !dbg !6794
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !6795

if.then11:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !6796
  br label %if.end13, !dbg !6796

if.end13:                                         ; preds = %land.lhs.true, %if.then11, %if.else, %if.then
  tail call fastcc void @mark_weak(%union.tree_node* %decl) #8, !dbg !6797
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !6798
  %1 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !6798
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), %union.tree_node* %1) #6, !dbg !6800
  %tobool14 = icmp eq %union.tree_node* %call, null, !dbg !6800
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6801

if.then15:                                        ; preds = %if.end13
  %call16 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0)) #6, !dbg !6802
  %2 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !6802
  %call19 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call16, %union.tree_node* null, %union.tree_node* %2) #6, !dbg !6802
  store %union.tree_node* %call19, %union.tree_node** %attributes, align 8, !dbg !6803
  br label %if.end22, !dbg !6804

if.end22:                                         ; preds = %if.end13, %if.then15
  ret void, !dbg !6805
}

; Function Attrs: nounwind uwtable
define dso_local void @weak_finish() local_unnamed_addr #5 !dbg !6806 {
entry:
  br label %for.cond, !dbg !6821

for.cond:                                         ; preds = %for.inc, %entry
  %t.0.in = phi %union.tree_node** [ @weakref_targets, %entry ], [ %chain18, %for.inc ]
  %t.0 = load %union.tree_node*, %union.tree_node** %t.0.in, align 8, !dbg !6822
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !6808, metadata !DIExpression()), !dbg !6823
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !6824
  br i1 %tobool, label %for.end36, label %for.body, !dbg !6824

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6825
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !6825
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !6825
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6809, metadata !DIExpression()), !dbg !6826
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6827
  %call = tail call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %2) #8, !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6813, metadata !DIExpression()), !dbg !6826
  %call2 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %1) #6, !dbg !6829
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6829
  %bf.load = load i64, i64* %3, align 8, !dbg !6829
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !6829
  %tobool3 = icmp eq i64 %bf.cast1, 0, !dbg !6829
  %spec.select = select i1 %tobool3, %union.tree_node* null, %union.tree_node* %call, !dbg !6831
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !6813, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.value(metadata %union.tree_node** @weak_decls, metadata !6814, metadata !DIExpression()), !dbg !6832
  br label %for.cond4, !dbg !6833

for.cond4:                                        ; preds = %if.end16, %for.body
  %p.0 = phi %union.tree_node** [ @weak_decls, %for.body ], [ %p.1, %if.end16 ], !dbg !6835
  call void @llvm.dbg.value(metadata %union.tree_node** %p.0, metadata !6814, metadata !DIExpression()), !dbg !6832
  %4 = load %union.tree_node*, %union.tree_node** %p.0, align 8, !dbg !6836
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6816, metadata !DIExpression()), !dbg !6832
  %tobool5 = icmp eq %union.tree_node* %4, null, !dbg !6838
  br i1 %tobool5, label %for.end, label %for.body6, !dbg !6838

for.body6:                                        ; preds = %for.cond4
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6839
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6839
  %cmp = icmp eq %union.tree_node* %6, %1, !dbg !6842
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !6843

lor.lhs.false:                                    ; preds = %for.body6
  %call11 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %6) #6, !dbg !6844
  %cmp12 = icmp eq %union.tree_node* %spec.select, %call11, !dbg !6845
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !6846

if.then13:                                        ; preds = %lor.lhs.false, %for.body6
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6847
  %7 = bitcast %union.tree_node** %chain to i64*, !dbg !6847
  %8 = load i64, i64* %7, align 8, !dbg !6847
  %9 = bitcast %union.tree_node** %p.0 to i64*, !dbg !6848
  store i64 %8, i64* %9, align 8, !dbg !6848
  br label %if.end16, !dbg !6849

if.else:                                          ; preds = %lor.lhs.false
  %chain15 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6850
  call void @llvm.dbg.value(metadata %union.tree_node** %chain15, metadata !6814, metadata !DIExpression()), !dbg !6832
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %p.1 = phi %union.tree_node** [ %p.0, %if.then13 ], [ %chain15, %if.else ], !dbg !6851
  call void @llvm.dbg.value(metadata %union.tree_node** %p.1, metadata !6814, metadata !DIExpression()), !dbg !6832
  br label %for.cond4, !dbg !6852, !llvm.loop !6853

for.end:                                          ; preds = %for.cond4
  %chain18 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6855
  call void @llvm.dbg.value(metadata %union.tree_node** %chain18, metadata !6814, metadata !DIExpression()), !dbg !6832
  br label %for.cond19, !dbg !6857

for.cond19:                                       ; preds = %if.end32, %for.end
  %p.2 = phi %union.tree_node** [ %chain18, %for.end ], [ %p.3, %if.end32 ], !dbg !6858
  call void @llvm.dbg.value(metadata %union.tree_node** %p.2, metadata !6814, metadata !DIExpression()), !dbg !6832
  %10 = load %union.tree_node*, %union.tree_node** %p.2, align 8, !dbg !6859
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6816, metadata !DIExpression()), !dbg !6832
  %tobool20 = icmp eq %union.tree_node* %10, null, !dbg !6861
  br i1 %tobool20, label %for.inc, label %for.body21, !dbg !6861

for.body21:                                       ; preds = %for.cond19
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6862
  %call24 = tail call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %11) #8, !dbg !6865
  %cmp25 = icmp eq %union.tree_node* %spec.select, %call24, !dbg !6866
  %chain28 = getelementptr inbounds %union.tree_node, %union.tree_node* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6867
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !6868

if.then26:                                        ; preds = %for.body21
  %12 = bitcast %union.tree_node** %chain28 to i64*, !dbg !6869
  %13 = load i64, i64* %12, align 8, !dbg !6869
  %14 = bitcast %union.tree_node** %p.2 to i64*, !dbg !6870
  store i64 %13, i64* %14, align 8, !dbg !6870
  br label %if.end32, !dbg !6871

if.end32:                                         ; preds = %for.body21, %if.then26
  %p.3 = phi %union.tree_node** [ %p.2, %if.then26 ], [ %chain28, %for.body21 ], !dbg !6872
  call void @llvm.dbg.value(metadata %union.tree_node** %p.3, metadata !6814, metadata !DIExpression()), !dbg !6832
  br label %for.cond19, !dbg !6873, !llvm.loop !6874

for.inc:                                          ; preds = %for.cond19
  br label %for.cond, !dbg !6876, !llvm.loop !6877

for.end36:                                        ; preds = %for.cond
  br label %for.cond37, !dbg !6879

for.cond37:                                       ; preds = %for.body39, %for.end36
  %t.1.in = phi %union.tree_node** [ @weak_decls, %for.end36 ], [ %chain44, %for.body39 ]
  %t.1 = load %union.tree_node*, %union.tree_node** %t.1.in, align 8, !dbg !6880
  call void @llvm.dbg.value(metadata %union.tree_node* %t.1, metadata !6808, metadata !DIExpression()), !dbg !6823
  %tobool38 = icmp eq %union.tree_node* %t.1, null, !dbg !6881
  br i1 %tobool38, label %for.end45, label %for.body39, !dbg !6881

for.body39:                                       ; preds = %for.cond37
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6882
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !6882
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6817, metadata !DIExpression()), !dbg !6883
  tail call fastcc void @weak_finish_1(%union.tree_node* %16) #8, !dbg !6884
  %chain44 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6885
  br label %for.cond37, !dbg !6886, !llvm.loop !6887

for.end45:                                        ; preds = %for.cond37
  ret void, !dbg !6889
}

; Function Attrs: nounwind uwtable
define internal fastcc void @weak_finish_1(%union.tree_node* %decl) unnamed_addr #5 !dbg !6890 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6892, metadata !DIExpression()), !dbg !6894
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !6895
  call void @llvm.dbg.value(metadata i8* undef, metadata !6893, metadata !DIExpression()), !dbg !6894
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6896
  %bf.load = load i64, i64* %0, align 8, !dbg !6896
  %bf.cast1 = and i64 %bf.load, 16777216, !dbg !6896
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6896
  br i1 %tobool, label %cleanup.cont, label %do.body, !dbg !6898

do.body:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6895
  %str = bitcast i32* %id to i8**, !dbg !6895
  %1 = load i8*, i8** %str, align 8, !dbg !6895
  call void @llvm.dbg.value(metadata i8* %1, metadata !6893, metadata !DIExpression()), !dbg !6894
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !6899
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0), %struct._IO_FILE* %2) #6, !dbg !6899
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !6899
  tail call void @assemble_name(%struct._IO_FILE* %3, i8* %1) #8, !dbg !6899
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !6899
  %call2 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %4) #6, !dbg !6899
  br label %cleanup.cont, !dbg !6901

cleanup.cont:                                     ; preds = %entry, %do.body
  ret void, !dbg !6901
}

; Function Attrs: nounwind uwtable
define dso_local void @remove_unreachable_alias_pairs() local_unnamed_addr #5 !dbg !6902 {
entry:
  %p = alloca %struct.alias_pair*, align 8
  %0 = bitcast %struct.alias_pair** %p to i8*, !dbg !6914
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6914
  %1 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6915
  %cmp = icmp eq %struct.VEC_alias_pair_gc* %1, null, !dbg !6917
  br i1 %cmp, label %cleanup24, label %for.cond.preheader, !dbg !6918

for.cond.preheader:                               ; preds = %entry
  %2 = bitcast %struct.alias_pair** %p to %struct.tree_decl_common***, !dbg !6919
  br label %for.cond.outer, !dbg !6920

for.cond.outer:                                   ; preds = %for.cond.preheader, %if.end23
  %i.0.ph = phi i32 [ 0, %for.cond.preheader ], [ %inc, %if.end23 ]
  br label %for.cond, !dbg !6920

for.cond:                                         ; preds = %for.cond.outer, %cleanup
  call void @llvm.dbg.value(metadata i32 %i.0.ph, metadata !6904, metadata !DIExpression()), !dbg !6921
  %3 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6922
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %3, i64 0, i32 0, !dbg !6922
  call void @llvm.dbg.value(metadata %struct.alias_pair** %p, metadata !6905, metadata !DIExpression(DW_OP_deref)), !dbg !6921
  %call = call fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %base, i32 %i.0.ph, %struct.alias_pair** nonnull %p) #8, !dbg !6922
  %tobool1 = icmp eq i32 %call, 0, !dbg !6920
  br i1 %tobool1, label %cleanup24.loopexit, label %for.body, !dbg !6920

for.body:                                         ; preds = %for.cond
  %4 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %2, align 8, !dbg !6923
  %5 = load %struct.tree_decl_common*, %struct.tree_decl_common** %4, align 8, !dbg !6923
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %5, i64 0, i32 2, !dbg !6923
  %6 = bitcast i40* %decl_flag_1 to i64*, !dbg !6923
  %bf.load = load i64, i64* %6, align 8, !dbg !6923
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !6923
  %tobool2 = icmp eq i64 %bf.cast1, 0, !dbg !6923
  br i1 %tobool2, label %if.then3, label %if.end23, !dbg !6924

if.then3:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.cgraph_node* null, metadata !6907, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata %struct.varpool_node* null, metadata !6913, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata %struct.tree_decl_common** %4, metadata !6905, metadata !DIExpression()), !dbg !6921
  %target = getelementptr inbounds %struct.tree_decl_common*, %struct.tree_decl_common** %4, i64 1, !dbg !6926
  %7 = bitcast %struct.tree_decl_common** %target to %union.tree_node**, !dbg !6926
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !6926
  %call4 = call %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node* %8) #6, !dbg !6927
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call4, metadata !6907, metadata !DIExpression()), !dbg !6925
  %cmp5 = icmp eq %struct.cgraph_node* %call4, null, !dbg !6928
  br i1 %cmp5, label %cond.true6, label %cond.end10, !dbg !6929

cond.true6:                                       ; preds = %if.then3
  %9 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6930
  call void @llvm.dbg.value(metadata %struct.alias_pair* %9, metadata !6905, metadata !DIExpression()), !dbg !6921
  %target7 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %9, i64 0, i32 1, !dbg !6931
  %10 = load %union.tree_node*, %union.tree_node** %target7, align 8, !dbg !6931
  %call8 = call %struct.varpool_node* @varpool_node_for_asm(%union.tree_node* %10) #6, !dbg !6932
  br label %cond.end10, !dbg !6929

cond.end10:                                       ; preds = %if.then3, %cond.true6
  %cond11 = phi %struct.varpool_node* [ %call8, %cond.true6 ], [ null, %if.then3 ], !dbg !6929
  call void @llvm.dbg.value(metadata %struct.varpool_node* %cond11, metadata !6913, metadata !DIExpression()), !dbg !6925
  %cmp13 = icmp eq %struct.varpool_node* %cond11, null, !dbg !6933
  %or.cond = and i1 %cmp5, %cmp13, !dbg !6935
  br i1 %or.cond, label %if.then14, label %cleanup, !dbg !6935

if.then14:                                        ; preds = %cond.end10
  %11 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6936
  %base17 = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %11, i64 0, i32 0, !dbg !6936
  call fastcc void @VEC_alias_pair_base_unordered_remove(%struct.VEC_alias_pair_base* %base17, i32 %i.0.ph) #8, !dbg !6936
  br label %cleanup, !dbg !6938, !llvm.loop !6939

cleanup:                                          ; preds = %cond.end10, %if.then14
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then14 ], [ true, %cond.end10 ]
  br i1 %cleanup.dest.slot.0, label %if.end23, label %for.cond

if.end23:                                         ; preds = %for.body, %cleanup
  %inc = add i32 %i.0.ph, 1, !dbg !6941
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6904, metadata !DIExpression()), !dbg !6921
  br label %for.cond.outer, !dbg !6942, !llvm.loop !6939

cleanup24.loopexit:                               ; preds = %for.cond
  br label %cleanup24, !dbg !6943

cleanup24:                                        ; preds = %cleanup24.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6943
  ret void, !dbg !6943
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %vec_, i32 %ix_, %struct.alias_pair** %ptr) unnamed_addr #0 !dbg !6944 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !6950, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6951, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.value(metadata %struct.alias_pair** %ptr, metadata !6952, metadata !DIExpression()), !dbg !6953
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !6954
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6954

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !6954
  %0 = load i32, i32* %num, align 8, !dbg !6954
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6954
  br i1 %cmp, label %if.then, label %if.else, !dbg !6956

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6957
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6957
  br label %return, !dbg !6957

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6959

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.alias_pair* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !6961
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6961
  store %struct.alias_pair* %storemerge, %struct.alias_pair** %ptr, align 8, !dbg !6961
  ret i32 %retval.0, !dbg !6956
}

declare dso_local %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.varpool_node* @varpool_node_for_asm(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_alias_pair_base_unordered_remove(%struct.VEC_alias_pair_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6962 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !6966, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6967, metadata !DIExpression()), !dbg !6968
  %idxprom = zext i32 %ix_ to i64, !dbg !6969
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6969
  %num2 = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !6969
  %0 = load i32, i32* %num2, align 8, !dbg !6969
  %dec = add i32 %0, -1, !dbg !6969
  store i32 %dec, i32* %num2, align 8, !dbg !6969
  %idxprom3 = zext i32 %dec to i64, !dbg !6969
  %arrayidx4 = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom3, !dbg !6969
  %1 = bitcast %struct.alias_pair* %arrayidx to i8*, !dbg !6969
  %2 = bitcast %struct.alias_pair* %arrayidx4 to i8*, !dbg !6969
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !6969
  ret void, !dbg !6969
}

; Function Attrs: nounwind uwtable
define dso_local void @finish_aliases_1() local_unnamed_addr #5 !dbg !6970 {
entry:
  %p = alloca %struct.alias_pair*, align 8
  %0 = bitcast %struct.alias_pair** %p to i8*, !dbg !6978
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !6978
  call void @llvm.dbg.value(metadata i32 0, metadata !6972, metadata !DIExpression()), !dbg !6979
  %1 = bitcast %struct.alias_pair** %p to %struct.tree_decl_common***, !dbg !6980
  br label %for.cond, !dbg !6983

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6984
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6972, metadata !DIExpression()), !dbg !6979
  %2 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6985
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %2, i64 0, i32 0, !dbg !6985
  call void @llvm.dbg.value(metadata %struct.alias_pair** %p, metadata !6973, metadata !DIExpression(DW_OP_deref)), !dbg !6979
  %call = call fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %base, i32 %i.0, %struct.alias_pair** nonnull %p) #8, !dbg !6985
  %tobool1 = icmp eq i32 %call, 0, !dbg !6986
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6986

for.body:                                         ; preds = %for.cond
  %3 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6987
  call void @llvm.dbg.value(metadata %struct.alias_pair* %3, metadata !6973, metadata !DIExpression()), !dbg !6979
  %decl = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %3, i64 0, i32 0, !dbg !6988
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6988
  call void @llvm.dbg.value(metadata %struct.alias_pair* %3, metadata !6973, metadata !DIExpression()), !dbg !6979
  %target = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %3, i64 0, i32 1, !dbg !6989
  %5 = load %union.tree_node*, %union.tree_node** %target, align 8, !dbg !6989
  %call2 = call fastcc %union.tree_node* @find_decl_and_mark_needed(%union.tree_node* %4, %union.tree_node* %5) #8, !dbg !6990
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6974, metadata !DIExpression()), !dbg !6991
  %cmp = icmp eq %union.tree_node* %call2, null, !dbg !6992
  br i1 %cmp, label %if.then, label %if.else, !dbg !6993

if.then:                                          ; preds = %for.body
  %6 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %1, align 8, !dbg !6994
  %7 = load %struct.tree_decl_common*, %struct.tree_decl_common** %6, align 8, !dbg !6994
  %attributes = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %7, i64 0, i32 6, !dbg !6994
  %8 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !6994
  %call4 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), %union.tree_node* %8) #6, !dbg !6997
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !6997
  br i1 %tobool5, label %if.then6, label %for.inc, !dbg !6998

if.then6:                                         ; preds = %if.then
  %9 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !6999
  call void @llvm.dbg.value(metadata %struct.alias_pair* %9, metadata !6973, metadata !DIExpression()), !dbg !6979
  %decl7 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %9, i64 0, i32 0, !dbg !7000
  %10 = load %union.tree_node*, %union.tree_node** %decl7, align 8, !dbg !7000
  call void @llvm.dbg.value(metadata %struct.alias_pair* %9, metadata !6973, metadata !DIExpression()), !dbg !6979
  %target8 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %9, i64 0, i32 1, !dbg !7001
  %11 = load %union.tree_node*, %union.tree_node** %target8, align 8, !dbg !7001
  call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.93, i64 0, i64 0), %union.tree_node* %10, %union.tree_node* %11) #6, !dbg !7002
  br label %for.inc, !dbg !7002

if.else:                                          ; preds = %for.body
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7003
  %12 = bitcast i40* %decl_flag_1 to i64*, !dbg !7003
  %bf.load = load i64, i64* %12, align 8, !dbg !7003
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !7003
  %tobool10 = icmp eq i64 %bf.cast1, 0, !dbg !7003
  br i1 %tobool10, label %for.inc, label %land.lhs.true, !dbg !7004

land.lhs.true:                                    ; preds = %if.else
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7005
  %bf.load12 = load i64, i64* %13, align 8, !dbg !7005
  %bf.cast142 = and i64 %bf.load12, 65535, !dbg !7006
  %cmp15 = icmp eq i64 %bf.cast142, 29, !dbg !7006
  br i1 %cmp15, label %lor.lhs.false, label %land.lhs.true22, !dbg !7007

lor.lhs.false:                                    ; preds = %land.lhs.true
  %bf.cast203 = and i64 %bf.load, 512, !dbg !7008
  %tobool21 = icmp eq i64 %bf.cast203, 0, !dbg !7008
  br i1 %tobool21, label %land.lhs.true22, label %for.inc, !dbg !7009

land.lhs.true22:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %14 = load %struct.tree_decl_common**, %struct.tree_decl_common*** %1, align 8, !dbg !7010
  %15 = load %struct.tree_decl_common*, %struct.tree_decl_common** %14, align 8, !dbg !7010
  %attributes25 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %15, i64 0, i32 6, !dbg !7010
  %16 = load %union.tree_node*, %union.tree_node** %attributes25, align 8, !dbg !7010
  %call26 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), %union.tree_node* %16) #6, !dbg !7011
  %tobool27 = icmp eq %union.tree_node* %call26, null, !dbg !7011
  br i1 %tobool27, label %if.then28, label %for.inc, !dbg !7012

if.then28:                                        ; preds = %land.lhs.true22
  %17 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !7013
  call void @llvm.dbg.value(metadata %struct.alias_pair* %17, metadata !6973, metadata !DIExpression()), !dbg !6979
  %decl29 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %17, i64 0, i32 0, !dbg !7014
  %18 = load %union.tree_node*, %union.tree_node** %decl29, align 8, !dbg !7014
  call void @llvm.dbg.value(metadata %struct.alias_pair* %17, metadata !6973, metadata !DIExpression()), !dbg !6979
  %target30 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %17, i64 0, i32 1, !dbg !7015
  %19 = load %union.tree_node*, %union.tree_node** %target30, align 8, !dbg !7015
  call void (i8*, ...) @error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.94, i64 0, i64 0), %union.tree_node* %18, %union.tree_node* %19) #6, !dbg !7016
  br label %for.inc, !dbg !7016

for.inc:                                          ; preds = %if.then, %land.lhs.true22, %lor.lhs.false, %if.else, %if.then6, %if.then28
  %inc = add i32 %i.0, 1, !dbg !7017
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6972, metadata !DIExpression()), !dbg !6979
  br label %for.cond, !dbg !7018, !llvm.loop !7019

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7021
  ret void, !dbg !7021
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_decl_and_mark_needed(%union.tree_node* %decl, %union.tree_node* %target) unnamed_addr #5 !dbg !7022 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7024, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata %union.tree_node* %target, metadata !7025, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata %struct.cgraph_node* null, metadata !7026, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata %struct.varpool_node* null, metadata !7027, metadata !DIExpression()), !dbg !7028
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7029
  %bf.load = load i64, i64* %0, align 8, !dbg !7029
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7031
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !7031
  br i1 %cmp, label %if.then, label %if.else, !dbg !7032

if.then:                                          ; preds = %entry
  %call = tail call %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node* %target) #6, !dbg !7033
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call, metadata !7026, metadata !DIExpression()), !dbg !7028
  %cmp1 = icmp eq %struct.cgraph_node* %call, null, !dbg !7035
  br i1 %cmp1, label %if.then2, label %if.end9, !dbg !7037

if.then2:                                         ; preds = %if.then
  %call3 = tail call %struct.varpool_node* @varpool_node_for_asm(%union.tree_node* %target) #6, !dbg !7038
  call void @llvm.dbg.value(metadata %struct.varpool_node* %call3, metadata !7027, metadata !DIExpression()), !dbg !7028
  br label %if.end9, !dbg !7039

if.else:                                          ; preds = %entry
  %call4 = tail call %struct.varpool_node* @varpool_node_for_asm(%union.tree_node* %target) #6, !dbg !7040
  call void @llvm.dbg.value(metadata %struct.varpool_node* %call4, metadata !7027, metadata !DIExpression()), !dbg !7028
  %cmp5 = icmp eq %struct.varpool_node* %call4, null, !dbg !7042
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !7044

if.then6:                                         ; preds = %if.else
  %call7 = tail call %struct.cgraph_node* @cgraph_node_for_asm(%union.tree_node* %target) #6, !dbg !7045
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call7, metadata !7026, metadata !DIExpression()), !dbg !7028
  br label %if.end9, !dbg !7046

if.end9:                                          ; preds = %if.else, %if.then6, %if.then, %if.then2
  %fnode.1 = phi %struct.cgraph_node* [ null, %if.then2 ], [ %call, %if.then ], [ %call7, %if.then6 ], [ null, %if.else ], !dbg !7047
  %vnode.1 = phi %struct.varpool_node* [ %call3, %if.then2 ], [ null, %if.then ], [ null, %if.then6 ], [ %call4, %if.else ], !dbg !7047
  call void @llvm.dbg.value(metadata %struct.varpool_node* %vnode.1, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %fnode.1, metadata !7026, metadata !DIExpression()), !dbg !7028
  %tobool = icmp eq %struct.cgraph_node* %fnode.1, null, !dbg !7048
  br i1 %tobool, label %if.else12, label %if.then10, !dbg !7050

if.then10:                                        ; preds = %if.end9
  tail call void @cgraph_mark_needed_node(%struct.cgraph_node* nonnull %fnode.1) #6, !dbg !7051
  %decl11 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %fnode.1, i64 0, i32 0, !dbg !7053
  %1 = load %union.tree_node*, %union.tree_node** %decl11, align 8, !dbg !7053
  br label %cleanup, !dbg !7054

if.else12:                                        ; preds = %if.end9
  %tobool13 = icmp eq %struct.varpool_node* %vnode.1, null, !dbg !7055
  br i1 %tobool13, label %cleanup, label %if.then14, !dbg !7057

if.then14:                                        ; preds = %if.else12
  tail call void @varpool_mark_needed_node(%struct.varpool_node* nonnull %vnode.1) #6, !dbg !7058
  %decl15 = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %vnode.1, i64 0, i32 0, !dbg !7060
  %2 = load %union.tree_node*, %union.tree_node** %decl15, align 8, !dbg !7060
  br label %cleanup, !dbg !7061

cleanup:                                          ; preds = %if.else12, %if.then14, %if.then10
  %retval.0 = phi %union.tree_node* [ %1, %if.then10 ], [ %2, %if.then14 ], [ null, %if.else12 ], !dbg !7062
  ret %union.tree_node* %retval.0, !dbg !7063
}

; Function Attrs: nounwind uwtable
define dso_local void @finish_aliases_2() local_unnamed_addr #5 !dbg !7064 {
entry:
  %p = alloca %struct.alias_pair*, align 8
  %0 = bitcast %struct.alias_pair** %p to i8*, !dbg !7068
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7068
  call void @llvm.dbg.value(metadata i32 0, metadata !7066, metadata !DIExpression()), !dbg !7069
  br label %for.cond, !dbg !7070

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7072
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7066, metadata !DIExpression()), !dbg !7069
  %1 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !7073
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %1, i64 0, i32 0, !dbg !7073
  call void @llvm.dbg.value(metadata %struct.alias_pair** %p, metadata !7067, metadata !DIExpression(DW_OP_deref)), !dbg !7069
  %call = call fastcc i32 @VEC_alias_pair_base_iterate(%struct.VEC_alias_pair_base* %base, i32 %i.0, %struct.alias_pair** nonnull %p) #8, !dbg !7073
  %tobool1 = icmp eq i32 %call, 0, !dbg !7075
  br i1 %tobool1, label %for.end, label %for.body, !dbg !7075

for.body:                                         ; preds = %for.cond
  %2 = load %struct.alias_pair*, %struct.alias_pair** %p, align 8, !dbg !7076
  call void @llvm.dbg.value(metadata %struct.alias_pair* %2, metadata !7067, metadata !DIExpression()), !dbg !7069
  %decl = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %2, i64 0, i32 0, !dbg !7077
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7077
  call void @llvm.dbg.value(metadata %struct.alias_pair* %2, metadata !7067, metadata !DIExpression()), !dbg !7069
  %target = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %2, i64 0, i32 1, !dbg !7078
  %4 = load %union.tree_node*, %union.tree_node** %target, align 8, !dbg !7078
  call fastcc void @do_assemble_alias(%union.tree_node* %3, %union.tree_node* %4) #8, !dbg !7079
  %inc = add i32 %i.0, 1, !dbg !7080
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7066, metadata !DIExpression()), !dbg !7069
  br label %for.cond, !dbg !7081, !llvm.loop !7082

for.end:                                          ; preds = %for.cond
  %5 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !7084
  %base4 = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %5, i64 0, i32 0, !dbg !7084
  call fastcc void @VEC_alias_pair_base_truncate(%struct.VEC_alias_pair_base* %base4, i32 0) #8, !dbg !7084
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7085
  ret void, !dbg !7085
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_assemble_alias(%union.tree_node* %decl, %union.tree_node* %target) unnamed_addr #5 !dbg !7086 {
entry:
  %target.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata %union.tree_node* %target, metadata !7089, metadata !DIExpression()), !dbg !7090
  store %union.tree_node* %target, %union.tree_node** %target.addr, align 8
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7091
  %bf.load = load i64, i64* %0, align 8, !dbg !7091
  %bf.cast1 = and i64 %bf.load, 4194304, !dbg !7091
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !7091
  br i1 %tobool, label %if.end, label %do.end81, !dbg !7093

if.end:                                           ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !7094
  %bf.load2 = load i64, i64* %0, align 8, !dbg !7095
  %bf.set = or i64 %bf.load2, 4194304, !dbg !7095
  store i64 %bf.set, i64* %0, align 8, !dbg !7095
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !7096
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7096
  %bf.load5 = load i64, i64* %1, align 8, !dbg !7097
  %bf.set7 = or i64 %bf.load5, 4194304, !dbg !7097
  store i64 %bf.set7, i64* %1, align 8, !dbg !7097
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7098
  %2 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !7098
  %call8 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !7100
  %tobool9 = icmp eq %union.tree_node* %call8, null, !dbg !7100
  br i1 %tobool9, label %if.end42, label %if.then10, !dbg !7101

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node** %target.addr, metadata !7089, metadata !DIExpression(DW_OP_deref)), !dbg !7090
  %call11 = call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %target.addr) #8, !dbg !7102
  %3 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !7104
  %tobool12 = icmp eq i8 %3, 0, !dbg !7106
  br i1 %tobool12, label %land.lhs.true, label %if.end25, !dbg !7107

land.lhs.true:                                    ; preds = %if.then10
  %bf.load14 = load i64, i64* %0, align 8, !dbg !7108
  %bf.cast164 = and i64 %bf.load14, 65535, !dbg !7109
  %cmp = icmp eq i64 %bf.cast164, 32, !dbg !7109
  br i1 %cmp, label %land.lhs.true17, label %if.end25, !dbg !7110

land.lhs.true17:                                  ; preds = %land.lhs.true
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7111
  %4 = bitcast i24* %tls_model to i32*, !dbg !7111
  %bf.load18 = load i32, i32* %4, align 8, !dbg !7111
  %bf.clear20 = and i32 %bf.load18, 49152, !dbg !7111
  %cmp21 = icmp eq i32 %bf.clear20, 0, !dbg !7111
  br i1 %cmp21, label %if.end25, label %if.then22, !dbg !7112

if.then22:                                        ; preds = %land.lhs.true17
  %call23 = call %union.tree_node* @emutls_decl(%union.tree_node* %decl) #8, !dbg !7113
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !7088, metadata !DIExpression()), !dbg !7090
  %5 = load %union.tree_node*, %union.tree_node** %target.addr, align 8, !dbg !7115
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7089, metadata !DIExpression()), !dbg !7090
  %call24 = call fastcc %union.tree_node* @get_emutls_object_name(%union.tree_node* %5) #8, !dbg !7116
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !7089, metadata !DIExpression()), !dbg !7090
  store %union.tree_node* %call24, %union.tree_node** %target.addr, align 8, !dbg !7117
  br label %if.end25, !dbg !7118

if.end25:                                         ; preds = %land.lhs.true17, %if.then10, %if.then22, %land.lhs.true
  %decl.addr.0 = phi %union.tree_node* [ %decl, %if.then10 ], [ %call23, %if.then22 ], [ %decl, %land.lhs.true17 ], [ %decl, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.0, metadata !7088, metadata !DIExpression()), !dbg !7090
  %6 = bitcast %union.tree_node** %target.addr to i64**, !dbg !7119
  %7 = load i64*, i64** %6, align 8, !dbg !7119
  %bf.load27 = load i64, i64* %7, align 8, !dbg !7119
  %bf.cast305 = and i64 %bf.load27, 67108864, !dbg !7119
  %tobool31 = icmp eq i64 %bf.cast305, 0, !dbg !7119
  br i1 %tobool31, label %if.then32, label %do.body, !dbg !7121

if.then32:                                        ; preds = %if.end25
  %8 = bitcast i64* %7 to %union.tree_node*, !dbg !7121
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7089, metadata !DIExpression()), !dbg !7090
  %9 = load %union.tree_node*, %union.tree_node** @weakref_targets, align 8, !dbg !7122
  %call33 = call %union.tree_node* @tree_cons_stat(%union.tree_node* %decl.addr.0, %union.tree_node* %8, %union.tree_node* %9) #6, !dbg !7122
  store %union.tree_node* %call33, %union.tree_node** @weakref_targets, align 8, !dbg !7123
  br label %do.body, !dbg !7124

do.body:                                          ; preds = %if.end25, %if.then32
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7125
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i64 0, i64 0)) #6, !dbg !7125
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7125
  %call36 = call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl.addr.0) #6, !dbg !7125
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7125
  %str = bitcast i32* %id to i8**, !dbg !7125
  %12 = load i8*, i8** %str, align 8, !dbg !7125
  call void @assemble_name(%struct._IO_FILE* %11, i8* %12) #8, !dbg !7125
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7125
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !7125
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7125
  %15 = bitcast %union.tree_node** %target.addr to %struct.tree_identifier**, !dbg !7125
  %16 = load %struct.tree_identifier*, %struct.tree_identifier** %15, align 8, !dbg !7125
  %str40 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %16, i64 0, i32 1, i32 0, !dbg !7125
  %17 = load i8*, i8** %str40, align 8, !dbg !7125
  call void @assemble_name(%struct._IO_FILE* %14, i8* %17) #8, !dbg !7125
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7125
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !7125
  br label %do.end81, !dbg !7127

if.end42:                                         ; preds = %if.end
  %19 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 113), align 4, !dbg !7128
  %tobool43 = icmp eq i8 %19, 0, !dbg !7130
  br i1 %tobool43, label %land.lhs.true44, label %if.end60, !dbg !7131

land.lhs.true44:                                  ; preds = %if.end42
  %bf.load46 = load i64, i64* %0, align 8, !dbg !7132
  %bf.cast482 = and i64 %bf.load46, 65535, !dbg !7133
  %cmp49 = icmp eq i64 %bf.cast482, 32, !dbg !7133
  br i1 %cmp49, label %land.lhs.true50, label %if.end60, !dbg !7134

land.lhs.true50:                                  ; preds = %land.lhs.true44
  %tls_model52 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7135
  %20 = bitcast i24* %tls_model52 to i32*, !dbg !7135
  %bf.load53 = load i32, i32* %20, align 8, !dbg !7135
  %bf.clear55 = and i32 %bf.load53, 49152, !dbg !7135
  %cmp56 = icmp eq i32 %bf.clear55, 0, !dbg !7135
  br i1 %cmp56, label %if.end60, label %if.then57, !dbg !7136

if.then57:                                        ; preds = %land.lhs.true50
  %call58 = tail call %union.tree_node* @emutls_decl(%union.tree_node* %decl) #8, !dbg !7137
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !7088, metadata !DIExpression()), !dbg !7090
  %21 = load %union.tree_node*, %union.tree_node** %target.addr, align 8, !dbg !7139
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !7089, metadata !DIExpression()), !dbg !7090
  %call59 = tail call fastcc %union.tree_node* @get_emutls_object_name(%union.tree_node* %21) #8, !dbg !7140
  call void @llvm.dbg.value(metadata %union.tree_node* %call59, metadata !7089, metadata !DIExpression()), !dbg !7090
  store %union.tree_node* %call59, %union.tree_node** %target.addr, align 8, !dbg !7141
  br label %if.end60, !dbg !7142

if.end60:                                         ; preds = %land.lhs.true50, %if.end42, %if.then57, %land.lhs.true44
  %decl.addr.1 = phi %union.tree_node* [ %decl, %if.end42 ], [ %call58, %if.then57 ], [ %decl, %land.lhs.true50 ], [ %decl, %land.lhs.true44 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.addr.1, metadata !7088, metadata !DIExpression()), !dbg !7090
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7143
  %bf.load62 = load i64, i64* %22, align 8, !dbg !7143
  %bf.cast653 = and i64 %bf.load62, 134217728, !dbg !7143
  %tobool66 = icmp eq i64 %bf.cast653, 0, !dbg !7143
  br i1 %tobool66, label %do.body70, label %if.then67, !dbg !7145

if.then67:                                        ; preds = %if.end60
  tail call fastcc void @globalize_decl(%union.tree_node* %decl.addr.1) #8, !dbg !7146
  %call68 = tail call i32 @maybe_assemble_visibility(%union.tree_node* %decl.addr.1) #8, !dbg !7148
  br label %do.body70, !dbg !7149

do.body70:                                        ; preds = %if.end60, %if.then67
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7150
  %call71 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i64 0, i64 0)) #6, !dbg !7150
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7150
  %call72 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl.addr.1) #6, !dbg !7150
  %id74 = getelementptr inbounds %union.tree_node, %union.tree_node* %call72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7150
  %str75 = bitcast i32* %id74 to i8**, !dbg !7150
  %25 = load i8*, i8** %str75, align 8, !dbg !7150
  tail call void @assemble_name(%struct._IO_FILE* %24, i8* %25) #8, !dbg !7150
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7150
  %call76 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !7150
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7150
  %28 = bitcast %union.tree_node** %target.addr to %struct.tree_identifier**, !dbg !7150
  %29 = load %struct.tree_identifier*, %struct.tree_identifier** %28, align 8, !dbg !7150
  %str79 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %29, i64 0, i32 1, i32 0, !dbg !7150
  %30 = load i8*, i8** %str79, align 8, !dbg !7150
  tail call void @assemble_name(%struct._IO_FILE* %27, i8* %30) #8, !dbg !7150
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7150
  %call80 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !7150
  br label %do.end81, !dbg !7150

do.end81:                                         ; preds = %entry, %do.body, %do.body70
  ret void, !dbg !7152
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_alias_pair_base_truncate(%struct.VEC_alias_pair_base* %vec_, i32 %size_) unnamed_addr #0 !dbg !7153 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7156, metadata !DIExpression()), !dbg !7157
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !7158
  br label %cond.true, !dbg !7158

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7158

cond.false:                                       ; No predecessors!
  br label %cond.end, !dbg !7158

cond.end:                                         ; preds = %cond.false, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !7158

if.then:                                          ; preds = %cond.end
  %num3 = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !7159
  store i32 0, i32* %num3, align 8, !dbg !7159
  br label %if.end, !dbg !7159

if.end:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7158
}

; Function Attrs: nounwind uwtable
define dso_local void @assemble_alias(%union.tree_node* %decl, %union.tree_node* %target) local_unnamed_addr #5 !dbg !7161 {
entry:
  %target.addr = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7163, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata %union.tree_node* %target, metadata !7164, metadata !DIExpression()), !dbg !7173
  store %union.tree_node* %target, %union.tree_node** %target.addr, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !7166, metadata !DIExpression()), !dbg !7173
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7174
  %0 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !7174
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), %union.tree_node* %0) #6, !dbg !7175
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7175
  br i1 %tobool, label %if.end8, label %if.then, !dbg !7176

if.then:                                          ; preds = %entry
  %call1 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !7177
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7167, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.value(metadata i8 1, metadata !7166, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.value(metadata %union.tree_node** %target.addr, metadata !7164, metadata !DIExpression(DW_OP_deref)), !dbg !7173
  %call2 = call fastcc %union.tree_node* @ultimate_transparent_alias_target(%union.tree_node** nonnull %target.addr) #8, !dbg !7179
  %1 = load %union.tree_node*, %union.tree_node** %target.addr, align 8, !dbg !7180
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7164, metadata !DIExpression()), !dbg !7173
  %cmp = icmp eq %union.tree_node* %call1, %1, !dbg !7182
  br i1 %cmp, label %if.then3, label %if.end, !dbg !7183

if.then3:                                         ; preds = %if.then
  call void (i8*, ...) @error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.95, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7184
  br label %if.end, !dbg !7184

if.end:                                           ; preds = %if.then, %if.then3
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7185
  %bf.load = load i64, i64* %2, align 8, !dbg !7185
  %bf.cast3 = and i64 %bf.load, 134217728, !dbg !7185
  %tobool4 = icmp eq i64 %bf.cast3, 0, !dbg !7185
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !7187

if.then5:                                         ; preds = %if.end
  call void (i8*, ...) @error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.96, i64 0, i64 0), %union.tree_node* %decl) #6, !dbg !7188
  br label %if.end8, !dbg !7188

if.end8:                                          ; preds = %if.end, %entry, %if.then5
  %is_weakref.0 = phi i1 [ true, %if.then5 ], [ true, %if.end ], [ false, %entry ]
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7189
  %bf.load10 = load i64, i64* %3, align 8, !dbg !7190
  %bf.set = or i64 %bf.load10, 16777216, !dbg !7190
  store i64 %bf.set, i64* %3, align 8, !dbg !7190
  br i1 %is_weakref.0, label %if.end17, label %if.then13, !dbg !7191

if.then13:                                        ; preds = %if.end8
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7192
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !7192
  %bf.load15 = load i64, i64* %4, align 8, !dbg !7194
  %bf.clear16 = and i64 %bf.load15, -33554433, !dbg !7194
  store i64 %bf.clear16, i64* %4, align 8, !dbg !7194
  br label %if.end17, !dbg !7192

if.end17:                                         ; preds = %if.then13, %if.end8
  %bf.cast211 = and i64 %bf.load10, 65535, !dbg !7195
  %cmp22 = icmp eq i64 %bf.cast211, 29, !dbg !7195
  br i1 %cmp22, label %if.then23, label %if.else29, !dbg !7197

if.then23:                                        ; preds = %if.end17
  %call24 = call %struct.cgraph_node* @cgraph_node(%union.tree_node* %decl) #6, !dbg !7198
  %alias25 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %call24, i64 0, i32 27, !dbg !7199
  %bf.load26 = load i16, i16* %alias25, align 4, !dbg !7200
  %bf.set28 = or i16 %bf.load26, 128, !dbg !7200
  store i16 %bf.set28, i16* %alias25, align 4, !dbg !7200
  br label %if.end35, !dbg !7198

if.else29:                                        ; preds = %if.end17
  %call30 = call %struct.varpool_node* @varpool_node(%union.tree_node* %decl) #6, !dbg !7201
  %alias31 = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %call30, i64 0, i32 5, !dbg !7202
  %bf.load32 = load i8, i8* %alias31, align 4, !dbg !7203
  %bf.set34 = or i8 %bf.load32, 64, !dbg !7203
  store i8 %bf.set34, i8* %alias31, align 4, !dbg !7203
  br label %if.end35

if.end35:                                         ; preds = %if.else29, %if.then23
  %5 = load i8, i8* @cgraph_global_info_ready, align 1, !dbg !7204
  %tobool36 = icmp eq i8 %5, 0, !dbg !7204
  br i1 %tobool36, label %if.end40, label %if.then37, !dbg !7206

if.then37:                                        ; preds = %if.end35
  %6 = load %union.tree_node*, %union.tree_node** %target.addr, align 8, !dbg !7207
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7164, metadata !DIExpression()), !dbg !7173
  %call38 = call fastcc %union.tree_node* @find_decl_and_mark_needed(%union.tree_node* %decl, %union.tree_node* %6) #8, !dbg !7208
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !7165, metadata !DIExpression()), !dbg !7173
  br label %if.end40, !dbg !7209

if.end40:                                         ; preds = %if.end35, %if.then37
  %target_decl.0 = phi %union.tree_node* [ %call38, %if.then37 ], [ null, %if.end35 ], !dbg !7210
  call void @llvm.dbg.value(metadata %union.tree_node* %target_decl.0, metadata !7165, metadata !DIExpression()), !dbg !7173
  %tobool41 = icmp eq %union.tree_node* %target_decl.0, null, !dbg !7211
  br i1 %tobool41, label %if.else49, label %land.lhs.true, !dbg !7212

land.lhs.true:                                    ; preds = %if.end40
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %target_decl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7213
  %bf.load43 = load i64, i64* %7, align 8, !dbg !7213
  %bf.cast462 = and i64 %bf.load43, 4194304, !dbg !7213
  %tobool47 = icmp eq i64 %bf.cast462, 0, !dbg !7213
  br i1 %tobool47, label %if.else49, label %if.then48, !dbg !7214

if.then48:                                        ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %target.addr, align 8, !dbg !7215
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7164, metadata !DIExpression()), !dbg !7173
  call fastcc void @do_assemble_alias(%union.tree_node* %decl, %union.tree_node* %8) #8, !dbg !7216
  br label %if.end53, !dbg !7216

if.else49:                                        ; preds = %land.lhs.true, %if.end40
  %call50 = call fastcc %struct.alias_pair* @VEC_alias_pair_gc_safe_push(%struct.VEC_alias_pair_gc** nonnull @alias_pairs, %struct.alias_pair* null) #8, !dbg !7217
  call void @llvm.dbg.value(metadata %struct.alias_pair* %call50, metadata !7170, metadata !DIExpression()), !dbg !7218
  %decl51 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %call50, i64 0, i32 0, !dbg !7219
  store %union.tree_node* %decl, %union.tree_node** %decl51, align 8, !dbg !7220
  %9 = bitcast %union.tree_node** %target.addr to i64*, !dbg !7221
  %10 = load i64, i64* %9, align 8, !dbg !7221
  %target52 = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %call50, i64 0, i32 1, !dbg !7222
  %11 = bitcast %union.tree_node** %target52 to i64*, !dbg !7223
  store i64 %10, i64* %11, align 8, !dbg !7223
  br label %if.end53

if.end53:                                         ; preds = %if.else49, %if.then48
  ret void, !dbg !7224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_pair* @VEC_alias_pair_gc_safe_push(%struct.VEC_alias_pair_gc** %vec_, %struct.alias_pair* %obj_) unnamed_addr #0 !dbg !7225 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_gc** @alias_pairs, metadata !7232, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata %struct.alias_pair* null, metadata !7233, metadata !DIExpression()), !dbg !7234
  %call = tail call fastcc i32 @VEC_alias_pair_gc_reserve(%struct.VEC_alias_pair_gc** nonnull @alias_pairs, i32 1) #8, !dbg !7235
  %0 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !7235
  %tobool = icmp eq %struct.VEC_alias_pair_gc* %0, null, !dbg !7235
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7235

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %0, i64 0, i32 0, !dbg !7235
  br label %cond.end, !dbg !7235

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_pair_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7235
  %call1 = tail call fastcc %struct.alias_pair* @VEC_alias_pair_base_quick_push(%struct.VEC_alias_pair_base* %cond, %struct.alias_pair* null) #8, !dbg !7235
  ret %struct.alias_pair* %call1, !dbg !7235
}

; Function Attrs: nounwind uwtable
define dso_local void @default_assemble_visibility(%union.tree_node* %decl, i32 %vis) local_unnamed_addr #5 !dbg !1790 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !1794, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 %vis, metadata !1795, metadata !DIExpression()), !dbg !7236
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !7237
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7237
  %str = bitcast i32* %id to i8**, !dbg !7237
  %0 = load i8*, i8** %str, align 8, !dbg !7237
  call void @llvm.dbg.value(metadata i8* %0, metadata !1796, metadata !DIExpression()), !dbg !7236
  %idxprom = sext i32 %vis to i64, !dbg !7238
  %arrayidx = getelementptr inbounds [4 x i8*], [4 x i8*]* @default_assemble_visibility.visibility_types, i64 0, i64 %idxprom, !dbg !7238
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !7238
  call void @llvm.dbg.value(metadata i8* %1, metadata !1797, metadata !DIExpression()), !dbg !7236
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7239
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), i8* %1) #6, !dbg !7240
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7241
  tail call void @assemble_name(%struct._IO_FILE* %3, i8* %0) #8, !dbg !7242
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7243
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !7244
  ret void, !dbg !7245
}

; Function Attrs: nounwind uwtable
define dso_local i32 @supports_one_only() local_unnamed_addr #5 !dbg !7246 {
entry:
  ret i32 1, !dbg !7247
}

; Function Attrs: nounwind uwtable
define dso_local void @init_varasm_once() local_unnamed_addr #5 !dbg !7249 {
entry:
  %call = tail call %struct.htab* @htab_create_alloc(i64 31, i32 (i8*)* nonnull @section_entry_hash, i32 (i8*, i8*)* nonnull @section_entry_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !7250
  store %struct.htab* %call, %struct.htab** @section_htab, align 8, !dbg !7251
  %call1 = tail call %struct.htab* @htab_create_alloc(i64 31, i32 (i8*)* nonnull @object_block_entry_hash, i32 (i8*, i8*)* nonnull @object_block_entry_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !7252
  store %struct.htab* %call1, %struct.htab** @object_block_htab, align 8, !dbg !7253
  %call2 = tail call %struct.htab* @htab_create_alloc(i64 1009, i32 (i8*)* nonnull @const_desc_hash, i32 (i8*, i8*)* nonnull @const_desc_eq, void (i8*)* null, i8* (i64, i64)* nonnull @ggc_calloc, void (i8*)* nonnull @ggc_free) #6, !dbg !7254
  store %struct.htab* %call2, %struct.htab** @const_desc_htab, align 8, !dbg !7255
  %call3 = tail call i32 @new_alias_set() #6, !dbg !7256
  store i32 %call3, i32* @const_alias_set, align 4, !dbg !7257
  %call4 = tail call fastcc %struct.rtx_constant_pool* @create_constant_pool() #8, !dbg !7258
  store %struct.rtx_constant_pool* %call4, %struct.rtx_constant_pool** @shared_constant_pool, align 8, !dbg !7259
  %call5 = tail call %union.section* @get_unnamed_section(i32 256, void (i8*)* nonnull @output_section_asm_op, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i64 0, i64 0)) #8, !dbg !7260
  store %union.section* %call5, %union.section** @text_section, align 8, !dbg !7261
  %call6 = tail call %union.section* @get_unnamed_section(i32 512, void (i8*)* nonnull @output_section_asm_op, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0)) #8, !dbg !7262
  store %union.section* %call6, %union.section** @data_section, align 8, !dbg !7263
  %call7 = tail call %union.section* @get_unnamed_section(i32 0, void (i8*)* nonnull @output_section_asm_op, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103, i64 0, i64 0)) #8, !dbg !7264
  store %union.section* %call7, %union.section** @readonly_data_section, align 8, !dbg !7265
  %call8 = tail call %union.section* @get_unnamed_section(i32 8704, void (i8*)* nonnull @output_section_asm_op, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0)) #8, !dbg !7266
  store %union.section* %call8, %union.section** @bss_section, align 8, !dbg !7267
  %call9 = tail call fastcc %union.section* @get_noswitch_section(i32 8397312, i8 (%union.tree_node*, i8*, i64, i64)* nonnull @emit_tls_common) #8, !dbg !7268
  store %union.section* %call9, %union.section** @tls_comm_section, align 8, !dbg !7269
  %call10 = tail call fastcc %union.section* @get_noswitch_section(i32 8397312, i8 (%union.tree_node*, i8*, i64, i64)* nonnull @emit_local) #8, !dbg !7270
  store %union.section* %call10, %union.section** @lcomm_section, align 8, !dbg !7271
  %call11 = tail call fastcc %union.section* @get_noswitch_section(i32 8397312, i8 (%union.tree_node*, i8*, i64, i64)* nonnull @emit_common) #8, !dbg !7272
  store %union.section* %call11, %union.section** @comm_section, align 8, !dbg !7273
  %call12 = tail call fastcc %union.section* @get_noswitch_section(i32 8704, i8 (%union.tree_node*, i8*, i64, i64)* nonnull @emit_bss) #8, !dbg !7274
  store %union.section* %call12, %union.section** @bss_noswitch_section, align 8, !dbg !7275
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 18), align 8, !dbg !7276
  tail call void %0() #6, !dbg !7277
  %1 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !7278
  %cmp = icmp eq %union.section* %1, null, !dbg !7280
  br i1 %cmp, label %if.then, label %if.end, !dbg !7281

if.then:                                          ; preds = %entry
  %2 = load i64, i64* bitcast (%union.section** @text_section to i64*), align 8, !dbg !7282
  store i64 %2, i64* bitcast (%union.section** @readonly_data_section to i64*), align 8, !dbg !7283
  br label %if.end, !dbg !7284

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7285
}

; Function Attrs: nounwind uwtable
define internal i32 @section_entry_hash(i8* %p) #5 !dbg !7286 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i8* %p, metadata !7289, metadata !DIExpression()), !dbg !7290
  %name = getelementptr inbounds i8, i8* %p, i64 8, !dbg !7291
  %0 = bitcast i8* %name to i8**, !dbg !7291
  %1 = load i8*, i8** %0, align 8, !dbg !7291
  %call = tail call i32 @htab_hash_string(i8* %1) #6, !dbg !7292
  ret i32 %call, !dbg !7293
}

; Function Attrs: nounwind uwtable
define internal i32 @section_entry_eq(i8* %p1, i8* %p2) #5 !dbg !7294 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7296, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7297, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7299, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7298, metadata !DIExpression()), !dbg !7300
  %name = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !7301
  %0 = bitcast i8* %name to i8**, !dbg !7301
  %1 = load i8*, i8** %0, align 8, !dbg !7301
  %call = tail call i32 @strcmp(i8* %1, i8* %p2) #6, !dbg !7302
  %cmp = icmp eq i32 %call, 0, !dbg !7303
  %conv = zext i1 %cmp to i32, !dbg !7303
  ret i32 %conv, !dbg !7304
}

; Function Attrs: nounwind uwtable
define internal i32 @object_block_entry_hash(i8* %p) #5 !dbg !7305 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i8* %p, metadata !7308, metadata !DIExpression()), !dbg !7309
  %sect = bitcast i8* %p to %union.section**, !dbg !7310
  %0 = load %union.section*, %union.section** %sect, align 8, !dbg !7310
  %call = tail call fastcc i32 @hash_section(%union.section* %0) #8, !dbg !7311
  ret i32 %call, !dbg !7312
}

; Function Attrs: nounwind uwtable
define internal i32 @object_block_entry_eq(i8* %p1, i8* %p2) #5 !dbg !7313 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7315, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7316, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7317, metadata !DIExpression()), !dbg !7319
  %0 = bitcast i8* %p2 to %union.section*, !dbg !7320
  call void @llvm.dbg.value(metadata %union.section* %0, metadata !7318, metadata !DIExpression()), !dbg !7319
  %sect = bitcast i8* %p1 to %union.section**, !dbg !7321
  %1 = load %union.section*, %union.section** %sect, align 8, !dbg !7321
  %cmp = icmp eq %union.section* %1, %0, !dbg !7322
  %conv = zext i1 %cmp to i32, !dbg !7322
  ret i32 %conv, !dbg !7323
}

; Function Attrs: nounwind uwtable
define internal i32 @const_desc_hash(i8* %ptr) #5 !dbg !7324 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !7326, metadata !DIExpression()), !dbg !7327
  %hash = getelementptr inbounds i8, i8* %ptr, i64 16, !dbg !7328
  %0 = bitcast i8* %hash to i32*, !dbg !7328
  %1 = load i32, i32* %0, align 8, !dbg !7328
  ret i32 %1, !dbg !7329
}

; Function Attrs: nounwind uwtable
define internal i32 @const_desc_eq(i8* %p1, i8* %p2) #5 !dbg !7330 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7332, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7333, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7334, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7336, metadata !DIExpression()), !dbg !7337
  %hash = getelementptr inbounds i8, i8* %p1, i64 16, !dbg !7338
  %0 = bitcast i8* %hash to i32*, !dbg !7338
  %1 = load i32, i32* %0, align 8, !dbg !7338
  %hash1 = getelementptr inbounds i8, i8* %p2, i64 16, !dbg !7340
  %2 = bitcast i8* %hash1 to i32*, !dbg !7340
  %3 = load i32, i32* %2, align 8, !dbg !7340
  %cmp = icmp eq i32 %1, %3, !dbg !7341
  br i1 %cmp, label %if.end, label %cleanup, !dbg !7342

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %p2, metadata !7336, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i8* %p1, metadata !7334, metadata !DIExpression()), !dbg !7337
  %value = getelementptr inbounds i8, i8* %p1, i64 8, !dbg !7343
  %4 = bitcast i8* %value to %union.tree_node**, !dbg !7343
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !7343
  %value2 = getelementptr inbounds i8, i8* %p2, i64 8, !dbg !7344
  %6 = bitcast i8* %value2 to %union.tree_node**, !dbg !7344
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !7344
  %call = tail call fastcc i32 @compare_constant(%union.tree_node* %5, %union.tree_node* %7) #8, !dbg !7345
  br label %cleanup, !dbg !7346

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ], !dbg !7337
  ret i32 %retval.0, !dbg !7347
}

declare dso_local i32 @new_alias_set() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @output_section_asm_op(i8* %directive) #5 !dbg !7348 {
entry:
  call void @llvm.dbg.value(metadata i8* %directive, metadata !7350, metadata !DIExpression()), !dbg !7351
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7352
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i64 0, i64 0), i8* %directive) #6, !dbg !7353
  ret void, !dbg !7354
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.section* @get_noswitch_section(i32 %flags, i8 (%union.tree_node*, i8*, i64, i64)* %callback) unnamed_addr #5 !dbg !7355 {
entry:
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7359, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata i8 (%union.tree_node*, i8*, i64, i64)* %callback, metadata !7360, metadata !DIExpression()), !dbg !7362
  %call = tail call i8* @ggc_alloc_stat(i64 32) #6, !dbg !7363
  %0 = bitcast i8* %call to %union.section*, !dbg !7363
  call void @llvm.dbg.value(metadata %union.section* %0, metadata !7361, metadata !DIExpression()), !dbg !7362
  %or = or i32 %flags, 4194304, !dbg !7364
  %flags1 = bitcast i8* %call to i32*, !dbg !7365
  store i32 %or, i32* %flags1, align 8, !dbg !7366
  %callback3 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !7367
  %1 = bitcast i8* %callback3 to i8 (%union.tree_node*, i8*, i64, i64)**, !dbg !7367
  store i8 (%union.tree_node*, i8*, i64, i64)* %callback, i8 (%union.tree_node*, i8*, i64, i64)** %1, align 8, !dbg !7368
  ret %union.section* %0, !dbg !7369
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @emit_tls_common(%union.tree_node* %decl, i8* %name, i64 %size, i64 %rounded) #5 !dbg !7370 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7372, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i8* %name, metadata !7373, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i64 %size, metadata !7374, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i64 %rounded, metadata !7375, metadata !DIExpression()), !dbg !7376
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7377
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.181, i64 0, i64 0)) #6, !dbg !7377
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7377
  tail call void @assemble_name(%struct._IO_FILE* %1, i8* %name) #8, !dbg !7377
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7377
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7377
  %3 = load i32, i32* %align, align 8, !dbg !7377
  %div = lshr i32 %3, 3, !dbg !7377
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0), i64 %size, i32 %div) #6, !dbg !7377
  ret i8 1, !dbg !7379
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @emit_local(%union.tree_node* %decl, i8* %name, i64 %size, i64 %rounded) #5 !dbg !7380 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7382, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i8* %name, metadata !7383, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i64 %size, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i64 %rounded, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7387
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !7387
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7387
  tail call void @assemble_name(%struct._IO_FILE* %1, i8* %name) #8, !dbg !7387
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7387
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !7387
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7389
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !7389
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7389
  tail call void @assemble_name(%struct._IO_FILE* %4, i8* %name) #8, !dbg !7389
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7389
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7389
  %6 = load i32, i32* %align, align 8, !dbg !7389
  %div = lshr i32 %6, 3, !dbg !7389
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0), i64 %size, i32 %div) #6, !dbg !7389
  ret i8 1, !dbg !7391
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @emit_common(%union.tree_node* %decl, i8* %name, i64 %size, i64 %rounded) #5 !dbg !7392 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7394, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i8* %name, metadata !7395, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i64 %size, metadata !7396, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.value(metadata i64 %rounded, metadata !7397, metadata !DIExpression()), !dbg !7398
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7399
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #6, !dbg !7399
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7399
  tail call void @assemble_name(%struct._IO_FILE* %1, i8* %name) #8, !dbg !7399
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7399
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7399
  %3 = load i32, i32* %align, align 8, !dbg !7399
  %div = lshr i32 %3, 3, !dbg !7399
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0), i64 %size, i32 %div) #6, !dbg !7399
  ret i8 1, !dbg !7401
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @emit_bss(%union.tree_node* %decl, i8* %name, i64 %size, i64 %rounded) #5 !dbg !7402 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7404, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i8* %name, metadata !7405, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i64 %size, metadata !7406, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i64 %rounded, metadata !7407, metadata !DIExpression()), !dbg !7408
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7409
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7409
  %1 = load i32, i32* %align, align 8, !dbg !7409
  tail call fastcc void @asm_output_aligned_bss(%struct._IO_FILE* %0, %union.tree_node* %decl, i8* %name, i64 %size, i32 %1) #8, !dbg !7409
  ret i8 1, !dbg !7410
}

; Function Attrs: nounwind uwtable
define dso_local i32 @decl_default_tls_model(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !7411 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7415, metadata !DIExpression()), !dbg !7418
  %0 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !7419
  %call = tail call zeroext i8 %0(%union.tree_node* %decl) #6, !dbg !7420
  call void @llvm.dbg.value(metadata i8 %call, metadata !7417, metadata !DIExpression()), !dbg !7418
  %1 = load i32, i32* @flag_shlib, align 4, !dbg !7421
  %tobool = icmp eq i32 %1, 0, !dbg !7421
  br i1 %tobool, label %if.then, label %if.else3, !dbg !7423

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq i8 %call, 0, !dbg !7424
  %. = select i1 %tobool1, i32 4, i32 5
  call void @llvm.dbg.value(metadata i32 %., metadata !7416, metadata !DIExpression()), !dbg !7418
  br label %if.end9, !dbg !7427

if.else3:                                         ; preds = %entry
  %2 = load i32, i32* @optimize, align 4, !dbg !7428
  %tobool4 = icmp ne i32 %2, 0, !dbg !7428
  %tobool5 = icmp ne i8 %call, 0, !dbg !7430
  %or.cond = and i1 %tobool4, %tobool5, !dbg !7431
  %kind.1 = select i1 %or.cond, i32 3, i32 2, !dbg !7431
  br label %if.end9, !dbg !7431

if.end9:                                          ; preds = %if.else3, %if.then
  %kind.2 = phi i32 [ %., %if.then ], [ %kind.1, %if.else3 ], !dbg !7432
  call void @llvm.dbg.value(metadata i32 %kind.2, metadata !7416, metadata !DIExpression()), !dbg !7418
  %3 = load i32, i32* @flag_tls_default, align 4, !dbg !7433
  %cmp = icmp ult i32 %kind.2, %3, !dbg !7435
  %spec.select = select i1 %cmp, i32 %3, i32 %kind.2, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7416, metadata !DIExpression()), !dbg !7418
  ret i32 %spec.select, !dbg !7437
}

; Function Attrs: nounwind uwtable
define dso_local i32 @default_section_type_flags(%union.tree_node* %decl, i8* %name, i32 %reloc) local_unnamed_addr #5 !dbg !7438 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7442, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %name, metadata !7443, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !7444, metadata !DIExpression()), !dbg !7446
  %cond = icmp eq %union.tree_node* %decl, null, !dbg !7447
  br i1 %cond, label %if.else5, label %land.lhs.true, !dbg !7447

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7449
  %bf.load = load i64, i64* %0, align 8, !dbg !7449
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7450
  %cmp = icmp eq i64 %bf.cast2, 29, !dbg !7450
  br i1 %cmp, label %if.end30, label %if.else, !dbg !7451

if.else:                                          ; preds = %land.lhs.true
  %call = tail call zeroext i8 @decl_readonly_section(%union.tree_node* nonnull %decl, i32 %reloc) #8, !dbg !7452
  %tobool3 = icmp eq i8 %call, 0, !dbg !7452
  br i1 %tobool3, label %if.else5, label %if.end30, !dbg !7454

if.else5:                                         ; preds = %if.else, %entry
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7455
  %tobool6 = icmp eq %union.tree_node* %1, null, !dbg !7455
  br i1 %tobool6, label %if.else16, label %land.lhs.true7, !dbg !7457

land.lhs.true7:                                   ; preds = %if.else5
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7458
  %tobool8 = icmp ne %struct.function* %2, null, !dbg !7458
  %3 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 4, i32 4), align 8, !dbg !7459
  %tobool10 = icmp ne i8* %3, null, !dbg !7460
  %or.cond = and i1 %tobool8, %tobool10, !dbg !7461
  br i1 %or.cond, label %land.lhs.true11, label %if.else16, !dbg !7461

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %call12 = tail call i32 @strcmp(i8* %name, i8* nonnull %3) #6, !dbg !7462
  %cmp13 = icmp eq i32 %call12, 0, !dbg !7463
  br i1 %cmp13, label %if.end30, label %if.else16, !dbg !7464

if.else16:                                        ; preds = %if.else5, %land.lhs.true11, %land.lhs.true7
  br i1 %cond, label %land.lhs.true18, label %if.else27, !dbg !7465

land.lhs.true18:                                  ; preds = %if.else16
  %4 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7467
  %tobool19 = icmp eq %union.tree_node* %4, null, !dbg !7467
  br i1 %tobool19, label %land.lhs.true22, label %lor.lhs.false, !dbg !7468

lor.lhs.false:                                    ; preds = %land.lhs.true18
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7469
  %tobool21 = icmp eq %struct.function* %5, null, !dbg !7469
  br i1 %tobool21, label %land.lhs.true22, label %if.else27, !dbg !7470

land.lhs.true22:                                  ; preds = %lor.lhs.false, %land.lhs.true18
  %call23 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !7471
  %cmp24 = icmp eq i32 %call23, 0, !dbg !7472
  br i1 %cmp24, label %if.end30, label %if.else27, !dbg !7473

if.else27:                                        ; preds = %lor.lhs.false, %if.else16, %land.lhs.true22
  call void @llvm.dbg.value(metadata i32 512, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.else27, %land.lhs.true22, %land.lhs.true11, %land.lhs.true
  %flags.3 = phi i32 [ 256, %land.lhs.true ], [ 0, %if.else ], [ 256, %land.lhs.true11 ], [ 512, %if.else27 ], [ 256, %land.lhs.true22 ], !dbg !7474
  call void @llvm.dbg.value(metadata i32 %flags.3, metadata !7445, metadata !DIExpression()), !dbg !7446
  br i1 %cond, label %if.end36, label %land.lhs.true32, !dbg !7475

land.lhs.true32:                                  ; preds = %if.end30
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !7477
  %6 = load %union.tree_node*, %union.tree_node** %comdat_group, align 8, !dbg !7477
  %cmp33 = icmp eq %union.tree_node* %6, null, !dbg !7477
  %or = or i32 %flags.3, 2048, !dbg !7478
  %spec.select = select i1 %cmp33, i32 %flags.3, i32 %or, !dbg !7479
  br label %if.end36, !dbg !7479

if.end36:                                         ; preds = %if.end30, %land.lhs.true32
  %flags.4 = phi i32 [ %flags.3, %if.end30 ], [ %spec.select, %land.lhs.true32 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.4, metadata !7445, metadata !DIExpression()), !dbg !7446
  br i1 %cond, label %if.end53, label %land.lhs.true38, !dbg !7480

land.lhs.true38:                                  ; preds = %if.end36
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7482
  %bf.load40 = load i64, i64* %7, align 8, !dbg !7482
  %bf.cast423 = and i64 %bf.load40, 65535, !dbg !7483
  %cmp43 = icmp eq i64 %bf.cast423, 32, !dbg !7483
  br i1 %cmp43, label %land.lhs.true45, label %if.end53, !dbg !7484

land.lhs.true45:                                  ; preds = %land.lhs.true38
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7485
  %8 = bitcast i24* %tls_model to i32*, !dbg !7485
  %bf.load47 = load i32, i32* %8, align 8, !dbg !7485
  %bf.clear48 = and i32 %bf.load47, 49152, !dbg !7485
  %cmp49 = icmp eq i32 %bf.clear48, 0, !dbg !7485
  %or52 = or i32 %flags.4, 262656, !dbg !7486
  %spec.select1 = select i1 %cmp49, i32 %flags.4, i32 %or52, !dbg !7487
  br label %if.end53, !dbg !7487

if.end53:                                         ; preds = %if.end36, %land.lhs.true45, %land.lhs.true38
  %flags.5 = phi i32 [ %flags.4, %land.lhs.true38 ], [ %flags.4, %if.end36 ], [ %spec.select1, %land.lhs.true45 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.5, metadata !7445, metadata !DIExpression()), !dbg !7446
  %call54 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0)) #6, !dbg !7488
  %cmp55 = icmp eq i32 %call54, 0, !dbg !7490
  br i1 %cmp55, label %if.then77, label %lor.lhs.false57, !dbg !7491

lor.lhs.false57:                                  ; preds = %if.end53
  %call58 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i64 0, i64 0), i64 5) #6, !dbg !7492
  %cmp59 = icmp eq i32 %call58, 0, !dbg !7493
  br i1 %cmp59, label %if.then77, label %lor.lhs.false61, !dbg !7494

lor.lhs.false61:                                  ; preds = %lor.lhs.false57
  %call62 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i64 0, i64 0), i64 16) #6, !dbg !7495
  %cmp63 = icmp eq i32 %call62, 0, !dbg !7496
  br i1 %cmp63, label %if.then77, label %lor.lhs.false65, !dbg !7497

lor.lhs.false65:                                  ; preds = %lor.lhs.false61
  %call66 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0)) #6, !dbg !7498
  %cmp67 = icmp eq i32 %call66, 0, !dbg !7499
  br i1 %cmp67, label %if.then77, label %lor.lhs.false69, !dbg !7500

lor.lhs.false69:                                  ; preds = %lor.lhs.false65
  %call70 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i64 6) #6, !dbg !7501
  %cmp71 = icmp eq i32 %call70, 0, !dbg !7502
  br i1 %cmp71, label %if.then77, label %lor.lhs.false73, !dbg !7503

lor.lhs.false73:                                  ; preds = %lor.lhs.false69
  %call74 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.110, i64 0, i64 0), i64 17) #6, !dbg !7504
  %cmp75 = icmp eq i32 %call74, 0, !dbg !7505
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !7506

if.then77:                                        ; preds = %lor.lhs.false73, %lor.lhs.false69, %lor.lhs.false65, %lor.lhs.false61, %lor.lhs.false57, %if.end53
  %or78 = or i32 %flags.5, 8192, !dbg !7507
  call void @llvm.dbg.value(metadata i32 %or78, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %if.end79, !dbg !7508

if.end79:                                         ; preds = %if.then77, %lor.lhs.false73
  %flags.6 = phi i32 [ %or78, %if.then77 ], [ %flags.5, %lor.lhs.false73 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.6, metadata !7445, metadata !DIExpression()), !dbg !7446
  %call80 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0)) #6, !dbg !7509
  %cmp81 = icmp eq i32 %call80, 0, !dbg !7511
  br i1 %cmp81, label %if.then91, label %lor.lhs.false83, !dbg !7512

lor.lhs.false83:                                  ; preds = %if.end79
  %call84 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i64 0, i64 0), i64 7) #6, !dbg !7513
  %cmp85 = icmp eq i32 %call84, 0, !dbg !7514
  br i1 %cmp85, label %if.then91, label %lor.lhs.false87, !dbg !7515

lor.lhs.false87:                                  ; preds = %lor.lhs.false83
  %call88 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.113, i64 0, i64 0), i64 17) #6, !dbg !7516
  %cmp89 = icmp eq i32 %call88, 0, !dbg !7517
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !7518

if.then91:                                        ; preds = %lor.lhs.false87, %lor.lhs.false83, %if.end79
  %or92 = or i32 %flags.6, 262144, !dbg !7519
  call void @llvm.dbg.value(metadata i32 %or92, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %if.end93, !dbg !7520

if.end93:                                         ; preds = %if.then91, %lor.lhs.false87
  %flags.7 = phi i32 [ %or92, %if.then91 ], [ %flags.6, %lor.lhs.false87 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.7, metadata !7445, metadata !DIExpression()), !dbg !7446
  %call94 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0)) #6, !dbg !7521
  %cmp95 = icmp eq i32 %call94, 0, !dbg !7523
  br i1 %cmp95, label %if.then105, label %lor.lhs.false97, !dbg !7524

lor.lhs.false97:                                  ; preds = %if.end93
  %call98 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i64 0, i64 0), i64 6) #6, !dbg !7525
  %cmp99 = icmp eq i32 %call98, 0, !dbg !7526
  br i1 %cmp99, label %if.then105, label %lor.lhs.false101, !dbg !7527

lor.lhs.false101:                                 ; preds = %lor.lhs.false97
  %call102 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.116, i64 0, i64 0), i64 17) #6, !dbg !7528
  %cmp103 = icmp eq i32 %call102, 0, !dbg !7529
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !7530

if.then105:                                       ; preds = %lor.lhs.false101, %lor.lhs.false97, %if.end93
  %or106 = or i32 %flags.7, 270336, !dbg !7531
  call void @llvm.dbg.value(metadata i32 %or106, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %if.end107, !dbg !7532

if.end107:                                        ; preds = %if.then105, %lor.lhs.false101
  %flags.8 = phi i32 [ %or106, %if.then105 ], [ %flags.7, %lor.lhs.false101 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.8, metadata !7445, metadata !DIExpression()), !dbg !7446
  %and = and i32 %flags.8, 270592, !dbg !7533
  %tobool108 = icmp eq i32 %and, 0, !dbg !7533
  br i1 %tobool108, label %land.lhs.true109, label %if.end123, !dbg !7535

land.lhs.true109:                                 ; preds = %if.end107
  %call110 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.117, i64 0, i64 0)) #6, !dbg !7536
  %cmp111 = icmp eq i32 %call110, 0, !dbg !7537
  br i1 %cmp111, label %if.then121, label %lor.lhs.false113, !dbg !7538

lor.lhs.false113:                                 ; preds = %land.lhs.true109
  %call114 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.118, i64 0, i64 0)) #6, !dbg !7539
  %cmp115 = icmp eq i32 %call114, 0, !dbg !7540
  br i1 %cmp115, label %if.then121, label %lor.lhs.false117, !dbg !7541

lor.lhs.false117:                                 ; preds = %lor.lhs.false113
  %call118 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.119, i64 0, i64 0)) #6, !dbg !7542
  %cmp119 = icmp eq i32 %call118, 0, !dbg !7543
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !7544

if.then121:                                       ; preds = %lor.lhs.false117, %lor.lhs.false113, %land.lhs.true109
  %or122 = or i32 %flags.8, 524288, !dbg !7545
  call void @llvm.dbg.value(metadata i32 %or122, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %if.end123, !dbg !7546

if.end123:                                        ; preds = %if.end107, %if.then121, %lor.lhs.false117
  %flags.9 = phi i32 [ %flags.8, %if.end107 ], [ %or122, %if.then121 ], [ %flags.8, %lor.lhs.false117 ], !dbg !7446
  call void @llvm.dbg.value(metadata i32 %flags.9, metadata !7445, metadata !DIExpression()), !dbg !7446
  ret i32 %flags.9, !dbg !7547
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @decl_readonly_section(%union.tree_node* %decl, i32 %reloc) local_unnamed_addr #5 !dbg !7548 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7552, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !7553, metadata !DIExpression()), !dbg !7554
  %call = tail call i32 @categorize_decl_for_section(%union.tree_node* %decl, i32 %reloc) #8, !dbg !7555
  %call.off = add i32 %call, -1, !dbg !7556
  %switch = icmp ult i32 %call.off, 5, !dbg !7556
  %. = zext i1 %switch to i8, !dbg !7557
  ret i8 %., !dbg !7559
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @have_global_bss_p() local_unnamed_addr #5 !dbg !7560 {
entry:
  %0 = load %union.section*, %union.section** @bss_noswitch_section, align 8, !dbg !7561
  %tobool = icmp ne %union.section* %0, null, !dbg !7561
  %1 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 111), align 2, !dbg !7562
  %tobool1 = icmp ne i8 %1, 0, !dbg !7562
  %2 = or i1 %tobool1, %tobool, !dbg !7562
  %conv2 = zext i1 %2 to i8, !dbg !7561
  ret i8 %conv2, !dbg !7563
}

; Function Attrs: nounwind uwtable
define dso_local void @default_no_named_section(i8* %name, i32 %flags, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !7564 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !7568, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7570, metadata !DIExpression()), !dbg !7571
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6089, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: nounwind uwtable
define dso_local void @default_elf_asm_named_section(i8* %name, i32 %flags, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !7574 {
entry:
  %flagchars = alloca [10 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %name, metadata !7576, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7577, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7578, metadata !DIExpression()), !dbg !7588
  %0 = getelementptr inbounds [10 x i8], [10 x i8]* %flagchars, i64 0, i64 0, !dbg !7589
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %0) #7, !dbg !7589
  call void @llvm.dbg.declare(metadata [10 x i8]* %flagchars, metadata !7579, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %0, metadata !7583, metadata !DIExpression()), !dbg !7588
  %1 = and i32 %flags, 1050624, !dbg !7591
  %2 = icmp eq i32 %1, 1048576, !dbg !7591
  br i1 %2, label %if.then, label %if.end, !dbg !7591

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7593
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.120, i64 0, i64 0), i8* %name) #6, !dbg !7595
  br label %cleanup, !dbg !7596

if.end:                                           ; preds = %entry
  %and3 = and i32 %flags, 1024, !dbg !7597
  %tobool4 = icmp eq i32 %and3, 0, !dbg !7597
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7599

if.then5:                                         ; preds = %if.end
  %incdec.ptr = getelementptr inbounds [10 x i8], [10 x i8]* %flagchars, i64 0, i64 1, !dbg !7600
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 97, i8* %0, align 1, !dbg !7601
  br label %if.end6, !dbg !7602

if.end6:                                          ; preds = %if.end, %if.then5
  %f.0 = phi i8* [ %0, %if.end ], [ %incdec.ptr, %if.then5 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.0, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and7 = and i32 %flags, 512, !dbg !7603
  %tobool8 = icmp eq i32 %and7, 0, !dbg !7603
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !7605

if.then9:                                         ; preds = %if.end6
  %incdec.ptr10 = getelementptr inbounds i8, i8* %f.0, i64 1, !dbg !7606
  call void @llvm.dbg.value(metadata i8* %incdec.ptr10, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 119, i8* %f.0, align 1, !dbg !7607
  br label %if.end11, !dbg !7608

if.end11:                                         ; preds = %if.end6, %if.then9
  %f.1 = phi i8* [ %incdec.ptr10, %if.then9 ], [ %f.0, %if.end6 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.1, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and12 = and i32 %flags, 256, !dbg !7609
  %tobool13 = icmp eq i32 %and12, 0, !dbg !7609
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !7611

if.then14:                                        ; preds = %if.end11
  %incdec.ptr15 = getelementptr inbounds i8, i8* %f.1, i64 1, !dbg !7612
  call void @llvm.dbg.value(metadata i8* %incdec.ptr15, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 120, i8* %f.1, align 1, !dbg !7613
  br label %if.end16, !dbg !7614

if.end16:                                         ; preds = %if.end11, %if.then14
  %f.2 = phi i8* [ %incdec.ptr15, %if.then14 ], [ %f.1, %if.end11 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.2, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and17 = and i32 %flags, 4096, !dbg !7615
  %tobool18 = icmp eq i32 %and17, 0, !dbg !7615
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !7617

if.then19:                                        ; preds = %if.end16
  %incdec.ptr20 = getelementptr inbounds i8, i8* %f.2, i64 1, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %incdec.ptr20, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 115, i8* %f.2, align 1, !dbg !7619
  br label %if.end21, !dbg !7620

if.end21:                                         ; preds = %if.end16, %if.then19
  %f.3 = phi i8* [ %incdec.ptr20, %if.then19 ], [ %f.2, %if.end16 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.3, metadata !7583, metadata !DIExpression()), !dbg !7588
  %4 = trunc i32 %flags to i16, !dbg !7621
  %tobool23 = icmp slt i16 %4, 0, !dbg !7621
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !7623

if.then24:                                        ; preds = %if.end21
  %incdec.ptr25 = getelementptr inbounds i8, i8* %f.3, i64 1, !dbg !7624
  call void @llvm.dbg.value(metadata i8* %incdec.ptr25, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 77, i8* %f.3, align 1, !dbg !7625
  br label %if.end26, !dbg !7626

if.end26:                                         ; preds = %if.then24, %if.end21
  %f.4 = phi i8* [ %incdec.ptr25, %if.then24 ], [ %f.3, %if.end21 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.4, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and27 = and i32 %flags, 65536, !dbg !7627
  %tobool28 = icmp eq i32 %and27, 0, !dbg !7627
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !7629

if.then29:                                        ; preds = %if.end26
  %incdec.ptr30 = getelementptr inbounds i8, i8* %f.4, i64 1, !dbg !7630
  call void @llvm.dbg.value(metadata i8* %incdec.ptr30, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 83, i8* %f.4, align 1, !dbg !7631
  br label %if.end31, !dbg !7632

if.end31:                                         ; preds = %if.end26, %if.then29
  %f.5 = phi i8* [ %incdec.ptr30, %if.then29 ], [ %f.4, %if.end26 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.5, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and32 = and i32 %flags, 262144, !dbg !7633
  %tobool33 = icmp eq i32 %and32, 0, !dbg !7633
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !7635

if.then34:                                        ; preds = %if.end31
  %incdec.ptr35 = getelementptr inbounds i8, i8* %f.5, i64 1, !dbg !7636
  call void @llvm.dbg.value(metadata i8* %incdec.ptr35, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 84, i8* %f.5, align 1, !dbg !7637
  br label %if.end36, !dbg !7638

if.end36:                                         ; preds = %if.end31, %if.then34
  %f.6 = phi i8* [ %incdec.ptr35, %if.then34 ], [ %f.5, %if.end31 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.6, metadata !7583, metadata !DIExpression()), !dbg !7588
  %and37 = and i32 %flags, 2048, !dbg !7639
  %tobool38 = icmp eq i32 %and37, 0, !dbg !7639
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !7641

if.then39:                                        ; preds = %if.end36
  %incdec.ptr40 = getelementptr inbounds i8, i8* %f.6, i64 1, !dbg !7642
  call void @llvm.dbg.value(metadata i8* %incdec.ptr40, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 71, i8* %f.6, align 1, !dbg !7643
  br label %if.end41, !dbg !7644

if.end41:                                         ; preds = %if.end36, %if.then39
  %f.7 = phi i8* [ %incdec.ptr40, %if.then39 ], [ %f.6, %if.end36 ], !dbg !7588
  call void @llvm.dbg.value(metadata i8* %f.7, metadata !7583, metadata !DIExpression()), !dbg !7588
  store i8 0, i8* %f.7, align 1, !dbg !7645
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7646
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.121, i64 0, i64 0), i8* %name, i8* nonnull %0) #6, !dbg !7647
  %and44 = and i32 %flags, 524288, !dbg !7648
  %tobool45 = icmp eq i32 %and44, 0, !dbg !7648
  br i1 %tobool45, label %if.then46, label %if.end74, !dbg !7649

if.then46:                                        ; preds = %if.end41
  %and47 = and i32 %flags, 8192, !dbg !7650
  %tobool48 = icmp eq i32 %and47, 0, !dbg !7650
  %. = select i1 %tobool48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i64 0, i64 0)
  call void @llvm.dbg.value(metadata i8* %., metadata !7584, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), metadata !7587, metadata !DIExpression()), !dbg !7652
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !7653
  %cmp = icmp eq i32 %call51, 0, !dbg !7655
  %format.0 = select i1 %cmp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), !dbg !7656
  call void @llvm.dbg.value(metadata i8* %format.0, metadata !7587, metadata !DIExpression()), !dbg !7652
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7657
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %format.0, i8* %.) #6, !dbg !7658
  %and55 = and i32 %flags, 255, !dbg !7659
  %tobool56 = icmp eq i32 %and55, 0, !dbg !7659
  br i1 %tobool56, label %if.end60, label %if.then57, !dbg !7661

if.then57:                                        ; preds = %if.then46
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7662
  %call59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i64 0, i64 0), i32 %and55) #6, !dbg !7663
  br label %if.end60, !dbg !7663

if.end60:                                         ; preds = %if.then46, %if.then57
  br i1 %tobool38, label %if.end74, label %if.then63, !dbg !7664

if.then63:                                        ; preds = %if.end60
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7665
  %bf.load = load i64, i64* %8, align 8, !dbg !7665
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7669
  %cmp64 = icmp eq i64 %bf.cast1, 1, !dbg !7669
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7670
  br i1 %cmp64, label %if.then65, label %if.else67, !dbg !7671

if.then65:                                        ; preds = %if.then63
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7672
  %str = bitcast i32* %id to i8**, !dbg !7672
  %10 = load i8*, i8** %str, align 8, !dbg !7672
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.129, i64 0, i64 0), i8* %10) #6, !dbg !7673
  br label %if.end74, !dbg !7673

if.else67:                                        ; preds = %if.then63
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !7674
  %11 = bitcast %union.tree_node** %comdat_group to %struct.tree_identifier**, !dbg !7674
  %12 = load %struct.tree_identifier*, %struct.tree_identifier** %11, align 8, !dbg !7674
  %str70 = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %12, i64 0, i32 1, i32 0, !dbg !7674
  %13 = load i8*, i8** %str70, align 8, !dbg !7674
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.129, i64 0, i64 0), i8* %13) #6, !dbg !7675
  br label %if.end74

if.end74:                                         ; preds = %if.end60, %if.end41, %if.else67, %if.then65
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7676
  %call75 = call i32 @putc(i32 10, %struct._IO_FILE* %14) #6, !dbg !7677
  br label %cleanup, !dbg !7678

cleanup:                                          ; preds = %if.end74, %if.then
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %0) #7, !dbg !7678
  ret void, !dbg !7678
}

; Function Attrs: nounwind uwtable
define dso_local void @default_coff_asm_named_section(i8* %name, i32 %flags, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !7679 {
entry:
  %flagchars = alloca [8 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %name, metadata !7681, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7682, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7683, metadata !DIExpression()), !dbg !7689
  %0 = getelementptr inbounds [8 x i8], [8 x i8]* %flagchars, i64 0, i64 0, !dbg !7690
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7690
  call void @llvm.dbg.declare(metadata [8 x i8]* %flagchars, metadata !7684, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.value(metadata i8* %0, metadata !7688, metadata !DIExpression()), !dbg !7689
  %and = and i32 %flags, 512, !dbg !7692
  %tobool = icmp eq i32 %and, 0, !dbg !7692
  br i1 %tobool, label %if.end, label %if.then, !dbg !7694

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds [8 x i8], [8 x i8]* %flagchars, i64 0, i64 1, !dbg !7695
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8 119, i8* %0, align 1, !dbg !7696
  br label %if.end, !dbg !7697

if.end:                                           ; preds = %entry, %if.then
  %f.0 = phi i8* [ %incdec.ptr, %if.then ], [ %0, %entry ], !dbg !7689
  call void @llvm.dbg.value(metadata i8* %f.0, metadata !7688, metadata !DIExpression()), !dbg !7689
  %and1 = and i32 %flags, 256, !dbg !7698
  %tobool2 = icmp eq i32 %and1, 0, !dbg !7698
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !7700

if.then3:                                         ; preds = %if.end
  %incdec.ptr4 = getelementptr inbounds i8, i8* %f.0, i64 1, !dbg !7701
  call void @llvm.dbg.value(metadata i8* %incdec.ptr4, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8 120, i8* %f.0, align 1, !dbg !7702
  br label %if.end5, !dbg !7703

if.end5:                                          ; preds = %if.end, %if.then3
  %f.1 = phi i8* [ %incdec.ptr4, %if.then3 ], [ %f.0, %if.end ], !dbg !7689
  call void @llvm.dbg.value(metadata i8* %f.1, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8 0, i8* %f.1, align 1, !dbg !7704
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7705
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i64 0, i64 0), i8* %name, i8* nonnull %0) #6, !dbg !7706
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !7707
  ret void, !dbg !7707
}

; Function Attrs: nounwind uwtable
define dso_local void @default_pe_asm_named_section(i8* %name, i32 %flags, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !7708 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !7710, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata i32 %flags, metadata !7711, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7712, metadata !DIExpression()), !dbg !7713
  tail call void @default_coff_asm_named_section(i8* %name, i32 %flags, %union.tree_node* %decl) #8, !dbg !7714
  %and = and i32 %flags, 2048, !dbg !7715
  %tobool = icmp eq i32 %and, 0, !dbg !7715
  br i1 %tobool, label %if.end, label %if.then, !dbg !7717

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !7718
  %and1 = and i32 %flags, 256, !dbg !7720
  %tobool2 = icmp eq i32 %and1, 0, !dbg !7721
  %cond = select i1 %tobool2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i64 0, i64 0), !dbg !7721
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.131, i64 0, i64 0), i8* %cond) #6, !dbg !7722
  br label %if.end, !dbg !7723

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7724
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_select_section(%union.tree_node* %decl, i32 %reloc, i64 %align) local_unnamed_addr #5 !dbg !7725 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7729, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !7730, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i64 %align, metadata !7731, metadata !DIExpression()), !dbg !7732
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7733
  %bf.load = load i64, i64* %0, align 8, !dbg !7733
  %bf.cast = and i64 %bf.load, 65535, !dbg !7733
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7733
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7733
  %cmp = icmp eq i32 %1, 3, !dbg !7733
  br i1 %cmp, label %if.then, label %if.else, !dbg !7735

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 @decl_readonly_section(%union.tree_node* %decl, i32 %reloc) #8, !dbg !7736
  %tobool = icmp eq i8 %call, 0, !dbg !7736
  br i1 %tobool, label %if.end46, label %if.then1, !dbg !7739

if.then1:                                         ; preds = %if.then
  br label %return, !dbg !7740

if.else:                                          ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast, 51, !dbg !7741
  br i1 %cmp6, label %if.then7, label %if.else31, !dbg !7743

if.then7:                                         ; preds = %if.else
  %2 = load i32, i32* @flag_pic, align 4, !dbg !7744
  %tobool8 = icmp ne i32 %2, 0, !dbg !7744
  %tobool9 = icmp ne i32 %reloc, 0, !dbg !7747
  %or.cond = and i1 %tobool8, %tobool9, !dbg !7748
  br i1 %or.cond, label %if.end46, label %lor.lhs.false, !dbg !7748

lor.lhs.false:                                    ; preds = %if.then7
  %bf.cast134 = and i64 %bf.load, 1048576, !dbg !7749
  %tobool14 = icmp eq i64 %bf.cast134, 0, !dbg !7749
  br i1 %tobool14, label %if.end46, label %lor.lhs.false15, !dbg !7750

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %bf.cast205 = and i64 %bf.load, 65536, !dbg !7751
  %tobool21 = icmp eq i64 %bf.cast205, 0, !dbg !7751
  br i1 %tobool21, label %lor.lhs.false22, label %if.end46, !dbg !7752

lor.lhs.false22:                                  ; preds = %lor.lhs.false15
  %bf.cast276 = and i64 %bf.load, 131072, !dbg !7753
  %tobool28 = icmp eq i64 %bf.cast276, 0, !dbg !7753
  br i1 %tobool28, label %if.end46, label %if.then29, !dbg !7754

if.then29:                                        ; preds = %lor.lhs.false22
  br label %return, !dbg !7755

if.else31:                                        ; preds = %if.else
  %cmp36 = icmp eq i64 %bf.cast, 28, !dbg !7756
  br i1 %cmp36, label %if.then37, label %if.else38, !dbg !7758

if.then37:                                        ; preds = %if.else31
  br label %return, !dbg !7759

if.else38:                                        ; preds = %if.else31
  %3 = load i32, i32* @flag_pic, align 4, !dbg !7760
  %tobool39 = icmp ne i32 %3, 0, !dbg !7760
  %tobool41 = icmp ne i32 %reloc, 0, !dbg !7762
  %or.cond1 = and i1 %tobool39, %tobool41, !dbg !7763
  br i1 %or.cond1, label %if.end46, label %if.then42, !dbg !7763

if.then42:                                        ; preds = %if.else38
  br label %return, !dbg !7764

if.end46:                                         ; preds = %if.then, %lor.lhs.false22, %lor.lhs.false15, %lor.lhs.false, %if.then7, %if.else38
  br label %return, !dbg !7765

return:                                           ; preds = %if.end46, %if.then42, %if.then37, %if.then29, %if.then1
  %retval.0.in = phi %union.section** [ @readonly_data_section, %if.then1 ], [ @data_section, %if.end46 ], [ @readonly_data_section, %if.then29 ], [ @readonly_data_section, %if.then37 ], [ @readonly_data_section, %if.then42 ]
  %retval.0 = load %union.section*, %union.section** %retval.0.in, align 8, !dbg !7732
  ret %union.section* %retval.0, !dbg !7766
}

; Function Attrs: nounwind uwtable
define dso_local i32 @categorize_decl_for_section(%union.tree_node* %decl, i32 %reloc) local_unnamed_addr #5 !dbg !7767 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7771, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !7772, metadata !DIExpression()), !dbg !7774
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7775
  %bf.load = load i64, i64* %0, align 8, !dbg !7775
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !7777
  %cmp = icmp eq i64 %bf.cast5, 29, !dbg !7777
  br i1 %cmp, label %cleanup, label %if.else, !dbg !7778

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast5, 28, !dbg !7779
  br i1 %cmp5, label %if.then6, label %if.else9, !dbg !7781

if.then6:                                         ; preds = %if.else
  %1 = load i32, i32* @flag_mudflap, align 4, !dbg !7782
  %tobool = icmp eq i32 %1, 0, !dbg !7782
  %. = select i1 %tobool, i32 2, i32 1, !dbg !7785
  br label %cleanup, !dbg !7785

if.else9:                                         ; preds = %if.else
  %cmp14 = icmp eq i64 %bf.cast5, 32, !dbg !7786
  br i1 %cmp14, label %if.then15, label %if.else70, !dbg !7788

if.then15:                                        ; preds = %if.else9
  %call = tail call fastcc zeroext i8 @bss_initializer_p(%union.tree_node* %decl) #8, !dbg !7789
  %tobool16 = icmp eq i8 %call, 0, !dbg !7789
  br i1 %tobool16, label %if.else18, label %if.end101, !dbg !7792

if.else18:                                        ; preds = %if.then15
  %bf.load20 = load i64, i64* %0, align 8, !dbg !7793
  %bf.cast2212 = and i64 %bf.load20, 1048576, !dbg !7793
  %tobool23 = icmp eq i64 %bf.cast2212, 0, !dbg !7793
  br i1 %tobool23, label %if.then37, label %lor.lhs.false, !dbg !7795

lor.lhs.false:                                    ; preds = %if.else18
  %bf.cast2813 = and i64 %bf.load20, 65536, !dbg !7796
  %tobool29 = icmp eq i64 %bf.cast2813, 0, !dbg !7796
  br i1 %tobool29, label %lor.lhs.false30, label %if.then37, !dbg !7797

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7798
  %2 = bitcast %union.tree_node** %initial to i64**, !dbg !7798
  %3 = load i64*, i64** %2, align 8, !dbg !7798
  %bf.load32 = load i64, i64* %3, align 8, !dbg !7798
  %bf.cast3514 = and i64 %bf.load32, 131072, !dbg !7798
  %tobool36 = icmp eq i64 %bf.cast3514, 0, !dbg !7798
  br i1 %tobool36, label %if.then37, label %if.else43, !dbg !7799

if.then37:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.else18
  %4 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 20), align 8, !dbg !7800
  %call38 = tail call i32 %4() #6, !dbg !7803
  %and = and i32 %call38, %reloc, !dbg !7804
  %tobool39 = icmp eq i32 %and, 0, !dbg !7804
  br i1 %tobool39, label %if.end101, label %if.then40, !dbg !7805

if.then40:                                        ; preds = %if.then37
  %cmp41 = icmp eq i32 %reloc, 1, !dbg !7806
  %cond = select i1 %cmp41, i32 8, i32 7, !dbg !7807
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %if.end101, !dbg !7808

if.else43:                                        ; preds = %lor.lhs.false30
  %5 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 20), align 8, !dbg !7809
  %call44 = tail call i32 %5() #6, !dbg !7811
  %and45 = and i32 %call44, %reloc, !dbg !7812
  %tobool46 = icmp eq i32 %and45, 0, !dbg !7812
  br i1 %tobool46, label %if.else50, label %if.then47, !dbg !7813

if.then47:                                        ; preds = %if.else43
  %cmp48 = icmp eq i32 %reloc, 1, !dbg !7814
  %cond49 = select i1 %cmp48, i32 10, i32 9, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %cond49, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %if.end101, !dbg !7816

if.else50:                                        ; preds = %if.else43
  %tobool51 = icmp ne i32 %reloc, 0, !dbg !7817
  %6 = load i32, i32* @flag_merge_constants, align 4, !dbg !7819
  %cmp53 = icmp slt i32 %6, 2, !dbg !7820
  %or.cond = or i1 %tobool51, %cmp53, !dbg !7821
  br i1 %or.cond, label %if.end101, label %if.else55, !dbg !7821

if.else55:                                        ; preds = %if.else50
  %7 = load i64*, i64** %2, align 8, !dbg !7822
  %bf.load59 = load i64, i64* %7, align 8, !dbg !7822
  %bf.cast6115 = and i64 %bf.load59, 65535, !dbg !7824
  %cmp62 = icmp eq i64 %bf.cast6115, 28, !dbg !7824
  %.1 = select i1 %cmp62, i32 3, i32 4
  call void @llvm.dbg.value(metadata i32 %.1, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %if.end101

if.else70:                                        ; preds = %if.else9
  %cmp75 = icmp eq i64 %bf.cast5, 51, !dbg !7825
  br i1 %cmp75, label %if.then76, label %if.end101, !dbg !7827

if.then76:                                        ; preds = %if.else70
  %8 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 20), align 8, !dbg !7828
  %call77 = tail call i32 %8() #6, !dbg !7831
  %and78 = and i32 %call77, %reloc, !dbg !7832
  %tobool79 = icmp eq i32 %and78, 0, !dbg !7832
  br i1 %tobool79, label %lor.lhs.false80, label %if.end101, !dbg !7833

lor.lhs.false80:                                  ; preds = %if.then76
  %bf.load82 = load i64, i64* %0, align 8, !dbg !7834
  %bf.cast8510 = and i64 %bf.load82, 65536, !dbg !7834
  %tobool86 = icmp eq i64 %bf.cast8510, 0, !dbg !7834
  br i1 %tobool86, label %lor.lhs.false87, label %if.end101, !dbg !7835

lor.lhs.false87:                                  ; preds = %lor.lhs.false80
  %bf.cast9211 = and i64 %bf.load82, 131072, !dbg !7836
  %tobool93 = icmp eq i64 %bf.cast9211, 0, !dbg !7836
  %spec.select4 = select i1 %tobool93, i32 6, i32 1, !dbg !7837
  br label %if.end101, !dbg !7837

if.end101:                                        ; preds = %if.then37, %if.then15, %lor.lhs.false80, %if.then76, %lor.lhs.false87, %if.else70, %if.then47, %if.else50, %if.else55, %if.then40
  %ret.8 = phi i32 [ 13, %if.then15 ], [ %cond, %if.then40 ], [ 6, %if.then37 ], [ %cond49, %if.then47 ], [ %.1, %if.else55 ], [ 1, %if.else50 ], [ 6, %lor.lhs.false80 ], [ 6, %if.then76 ], [ 1, %if.else70 ], [ %spec.select4, %lor.lhs.false87 ], !dbg !7838
  call void @llvm.dbg.value(metadata i32 %ret.8, metadata !7773, metadata !DIExpression()), !dbg !7774
  %bf.load103 = load i64, i64* %0, align 8, !dbg !7839
  %bf.cast1059 = and i64 %bf.load103, 65535, !dbg !7841
  %cmp106 = icmp eq i64 %bf.cast1059, 32, !dbg !7841
  br i1 %cmp106, label %land.lhs.true, label %if.else142, !dbg !7842

land.lhs.true:                                    ; preds = %if.end101
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7843
  %9 = bitcast i24* %tls_model to i32*, !dbg !7843
  %bf.load107 = load i32, i32* %9, align 8, !dbg !7843
  %bf.clear109 = and i32 %bf.load107, 57344, !dbg !7843
  %tobool110 = icmp eq i32 %bf.clear109, 0, !dbg !7843
  br i1 %tobool110, label %if.else142, label %if.then111, !dbg !7844

if.then111:                                       ; preds = %land.lhs.true
  %cmp117 = icmp eq i32 %bf.clear109, 8192, !dbg !7845
  br i1 %cmp117, label %if.then118, label %if.else129, !dbg !7848

if.then118:                                       ; preds = %if.then111
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7849
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7849
  %11 = load %union.tree_node*, %union.tree_node** @emutls_object_type, align 8, !dbg !7849
  %cmp119 = icmp eq %union.tree_node* %10, %11, !dbg !7849
  br i1 %cmp119, label %if.then120, label %if.else124, !dbg !7852

if.then120:                                       ; preds = %if.then118
  %12 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 2), align 8, !dbg !7853
  %tobool121 = icmp eq i8* %12, null, !dbg !7856
  %spec.select = select i1 %tobool121, i32 %ret.8, i32 16, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %cleanup, !dbg !7858

if.else124:                                       ; preds = %if.then118
  %13 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 5), align 8, !dbg !7859
  %tobool125 = icmp eq i8* %13, null, !dbg !7862
  %spec.select2 = select i1 %tobool125, i32 %ret.8, i32 17, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %cleanup

if.else129:                                       ; preds = %if.then111
  %cmp130 = icmp eq i32 %ret.8, 13, !dbg !7864
  br i1 %cmp130, label %cleanup, label %lor.lhs.false131, !dbg !7866

lor.lhs.false131:                                 ; preds = %if.else129
  %14 = load i32, i32* @flag_zero_initialized_in_bss, align 4, !dbg !7867
  %tobool132 = icmp eq i32 %14, 0, !dbg !7867
  br i1 %tobool132, label %if.else139, label %land.lhs.true133, !dbg !7868

land.lhs.true133:                                 ; preds = %lor.lhs.false131
  %initial135 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7869
  %15 = load %union.tree_node*, %union.tree_node** %initial135, align 8, !dbg !7869
  %call136 = tail call zeroext i8 @initializer_zerop(%union.tree_node* %15) #6, !dbg !7870
  %tobool137 = icmp eq i8 %call136, 0, !dbg !7870
  br i1 %tobool137, label %if.else139, label %cleanup, !dbg !7871

if.else139:                                       ; preds = %land.lhs.true133, %lor.lhs.false131
  call void @llvm.dbg.value(metadata i32 12, metadata !7773, metadata !DIExpression()), !dbg !7774
  br label %cleanup

if.else142:                                       ; preds = %land.lhs.true, %if.end101
  %16 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 48), align 8, !dbg !7872
  %call143 = tail call zeroext i8 %16(%union.tree_node* %decl) #6, !dbg !7874
  %tobool144 = icmp eq i8 %call143, 0, !dbg !7874
  br i1 %tobool144, label %cleanup, label %if.then145, !dbg !7875

if.then145:                                       ; preds = %if.else142
  %cmp146 = icmp eq i32 %ret.8, 13, !dbg !7876
  br i1 %cmp146, label %cleanup, label %if.else149, !dbg !7879

if.else149:                                       ; preds = %if.then145
  %17 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 114), align 1, !dbg !7880
  %tobool151 = icmp ne i8 %17, 0, !dbg !7882
  %cmp153 = icmp eq i32 %ret.8, 1, !dbg !7883
  %or.cond3 = and i1 %tobool151, %cmp153, !dbg !7884
  %ret.14 = select i1 %or.cond3, i32 5, i32 11, !dbg !7884
  br label %cleanup, !dbg !7884

cleanup:                                          ; preds = %land.lhs.true133, %if.else142, %if.else139, %if.else129, %if.then120, %if.else124, %if.then145, %if.else149, %if.then6, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %., %if.then6 ], [ %spec.select, %if.then120 ], [ %spec.select2, %if.else124 ], [ 12, %if.else139 ], [ 15, %land.lhs.true133 ], [ 15, %if.else129 ], [ %ret.8, %if.else142 ], [ 14, %if.then145 ], [ %ret.14, %if.else149 ], !dbg !7774
  ret i32 %retval.0, !dbg !7885
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @bss_initializer_p(%union.tree_node* %decl) unnamed_addr #5 !dbg !7886 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7888, metadata !DIExpression()), !dbg !7889
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7890
  %0 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7890
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !7891
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7892

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7893
  %cmp3 = icmp eq %union.tree_node* %0, %1, !dbg !7894
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !7895

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* @flag_zero_initialized_in_bss, align 4, !dbg !7896
  %tobool = icmp eq i32 %2, 0, !dbg !7896
  br i1 %tobool, label %lor.end, label %land.lhs.true, !dbg !7897

land.lhs.true:                                    ; preds = %lor.rhs
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7898
  %bf.load = load i64, i64* %3, align 8, !dbg !7898
  %bf.cast1 = and i64 %bf.load, 1048576, !dbg !7898
  %tobool4 = icmp eq i64 %bf.cast1, 0, !dbg !7898
  br i1 %tobool4, label %land.rhs, label %lor.end, !dbg !7899

land.rhs:                                         ; preds = %land.lhs.true
  %call = tail call zeroext i8 @initializer_zerop(%union.tree_node* nonnull %0) #6, !dbg !7900
  %tobool7 = icmp ne i8 %call, 0, !dbg !7899
  %phitmp = zext i1 %tobool7 to i8
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %lor.rhs, %land.rhs, %lor.lhs.false, %entry
  %4 = phi i8 [ 1, %lor.lhs.false ], [ 1, %entry ], [ 0, %land.lhs.true ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  ret i8 %4, !dbg !7901
}

declare dso_local zeroext i8 @initializer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_elf_select_section(%union.tree_node* %decl, i32 %reloc, i64 %align) local_unnamed_addr #5 !dbg !7902 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7904, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !7905, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.value(metadata i64 %align, metadata !7906, metadata !DIExpression()), !dbg !7908
  %call = tail call i32 @categorize_decl_for_section(%union.tree_node* %decl, i32 %reloc) #8, !dbg !7909
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb4
    i32 4, label %sw.bb6
    i32 5, label %sw.epilog
    i32 6, label %sw.bb10
    i32 7, label %sw.bb11
    i32 8, label %sw.bb12
    i32 9, label %sw.bb13
    i32 10, label %sw.bb14
    i32 11, label %sw.bb15
    i32 12, label %sw.bb16
    i32 13, label %sw.bb17
    i32 14, label %sw.bb18
    i32 15, label %sw.bb19
    i32 16, label %sw.bb20
    i32 17, label %sw.bb21
  ], !dbg !7910

sw.bb:                                            ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !7911
  br label %sw.bb1, !dbg !7911

sw.bb1:                                           ; preds = %entry, %sw.bb
  %0 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !7913
  br label %cleanup, !dbg !7914

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc %union.section* @mergeable_string_section(%union.tree_node* %decl, i64 %align, i32 0) #8, !dbg !7915
  br label %cleanup, !dbg !7916

sw.bb4:                                           ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7917
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !7917
  %call5 = tail call fastcc %union.section* @mergeable_string_section(%union.tree_node* %1, i64 %align, i32 0) #8, !dbg !7918
  br label %cleanup, !dbg !7919

sw.bb6:                                           ; preds = %entry
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7920
  %2 = bitcast i40* %mode to i64*, !dbg !7920
  %bf.load = load i64, i64* %2, align 8, !dbg !7920
  %3 = trunc i64 %bf.load to i32, !dbg !7920
  %bf.cast = and i32 %3, 255, !dbg !7920
  %call8 = tail call %union.section* @mergeable_constant_section(i32 %bf.cast, i64 %align, i32 0) #8, !dbg !7921
  br label %cleanup, !dbg !7922

sw.bb10:                                          ; preds = %entry
  %4 = load %union.section*, %union.section** @data_section, align 8, !dbg !7923
  br label %cleanup, !dbg !7924

sw.bb11:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7925

sw.bb12:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7926

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7927

sw.bb14:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7928

sw.bb15:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7929

sw.bb16:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7930

sw.bb17:                                          ; preds = %entry
  %5 = load %union.section*, %union.section** @bss_section, align 8, !dbg !7931
  %tobool = icmp eq %union.section* %5, null, !dbg !7931
  br i1 %tobool, label %sw.epilog, label %if.then, !dbg !7933

if.then:                                          ; preds = %sw.bb17
  br label %cleanup, !dbg !7934

sw.bb18:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7935

sw.bb19:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7936

sw.bb20:                                          ; preds = %entry
  %6 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 2), align 8, !dbg !7937
  call void @llvm.dbg.value(metadata i8* %6, metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7938

sw.bb21:                                          ; preds = %entry
  %7 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 3), align 8, !dbg !7939
  call void @llvm.dbg.value(metadata i8* %7, metadata !7907, metadata !DIExpression()), !dbg !7908
  br label %sw.epilog, !dbg !7940

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6399, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !7941
  br label %sw.epilog, !dbg !7942

sw.epilog:                                        ; preds = %sw.bb17, %entry, %sw.default, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11
  %sname.0 = phi i8* [ undef, %sw.default ], [ %7, %sw.bb21 ], [ %6, %sw.bb20 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), %sw.bb19 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), %sw.bb18 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), %sw.bb16 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), %sw.bb15 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), %sw.bb14 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), %sw.bb13 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i64 0, i64 0), %sw.bb12 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.134, i64 0, i64 0), %entry ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), %sw.bb17 ]
  call void @llvm.dbg.value(metadata i8* %sname.0, metadata !7907, metadata !DIExpression()), !dbg !7908
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7943
  %bf.load22 = load i64, i64* %8, align 8, !dbg !7943
  %bf.cast24 = and i64 %bf.load22, 65535, !dbg !7943
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast24, !dbg !7943
  %9 = load i32, i32* %arrayidx, align 4, !dbg !7943
  %cmp = icmp eq i32 %9, 3, !dbg !7943
  %spec.select = select i1 %cmp, %union.tree_node* %decl, %union.tree_node* null, !dbg !7945
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !7904, metadata !DIExpression()), !dbg !7908
  %call27 = tail call %union.section* @get_named_section(%union.tree_node* %spec.select, i8* %sname.0, i32 %reloc) #8, !dbg !7946
  br label %cleanup, !dbg !7947

cleanup:                                          ; preds = %sw.epilog, %if.then, %sw.bb10, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1
  %retval.0 = phi %union.section* [ %call27, %sw.epilog ], [ %5, %if.then ], [ %4, %sw.bb10 ], [ %call8, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ %0, %sw.bb1 ], !dbg !7908
  ret %union.section* %retval.0, !dbg !7948
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.section* @mergeable_string_section(%union.tree_node* %decl, i64 %align, i32 %flags) unnamed_addr #5 !dbg !7949 {
entry:
  %name = alloca [30 x i8], align 16
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7953, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i64 %align, metadata !7954, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 0, metadata !7955, metadata !DIExpression()), !dbg !7969
  %0 = load i32, i32* @flag_merge_constants, align 4, !dbg !7970
  %tobool = icmp eq i32 %0, 0, !dbg !7970
  br i1 %tobool, label %if.end106, label %land.lhs.true, !dbg !7971

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7972
  %bf.load = load i64, i64* %1, align 8, !dbg !7972
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !7973
  %cmp = icmp eq i64 %bf.cast3, 28, !dbg !7973
  br i1 %cmp, label %land.lhs.true1, label %if.end106, !dbg !7974

land.lhs.true1:                                   ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7975
  %2 = bitcast %union.tree_node** %type to i64**, !dbg !7975
  %3 = load i64*, i64** %2, align 8, !dbg !7975
  %bf.load3 = load i64, i64* %3, align 8, !dbg !7975
  %bf.cast54 = and i64 %bf.load3, 65535, !dbg !7976
  %cmp6 = icmp eq i64 %bf.cast54, 15, !dbg !7976
  %cmp8 = icmp ult i64 %align, 257, !dbg !7977
  %or.cond = and i1 %cmp6, %cmp8, !dbg !7978
  br i1 %or.cond, label %land.lhs.true9, label %if.end106, !dbg !7978

land.lhs.true9:                                   ; preds = %land.lhs.true1
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !7978
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %4) #6, !dbg !7979
  call void @llvm.dbg.value(metadata i64 %call, metadata !7956, metadata !DIExpression()), !dbg !7969
  %cmp12 = icmp sgt i64 %call, 0, !dbg !7980
  br i1 %cmp12, label %land.lhs.true13, label %if.end106, !dbg !7981

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7982
  %6 = load i32, i32* %5, align 8, !dbg !7982
  %conv = sext i32 %6 to i64, !dbg !7982
  %cmp14 = icmp sgt i64 %call, %conv, !dbg !7983
  br i1 %cmp14, label %if.end106, label %if.then, !dbg !7984

if.then:                                          ; preds = %land.lhs.true13
  %7 = getelementptr inbounds [30 x i8], [30 x i8]* %name, i64 0, i64 0, !dbg !7985
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %7) #7, !dbg !7985
  call void @llvm.dbg.declare(metadata [30 x i8]* %name, metadata !7965, metadata !DIExpression()), !dbg !7986
  %8 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !7987
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !7987
  %type19 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !7987
  %10 = bitcast %union.tree_node** %type19 to i64**, !dbg !7987
  %11 = load i64*, i64** %10, align 8, !dbg !7987
  %bf.load21 = load i64, i64* %11, align 8, !dbg !7987
  %bf.cast235 = and i64 %bf.load21, 65535, !dbg !7987
  %cmp24 = icmp eq i64 %bf.cast235, 14, !dbg !7987
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !7987

cond.true:                                        ; preds = %if.then
  %12 = bitcast i64* %11 to %union.tree_node*, !dbg !7987
  %call30 = tail call i32 @vector_type_mode(%union.tree_node* %12) #6, !dbg !7987
  br label %cond.end, !dbg !7987

cond.false:                                       ; preds = %if.then
  %type35 = bitcast i64* %11 to %struct.tree_type*, !dbg !7987
  %mode36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i64 0, i32 6, !dbg !7987
  %bf.load37 = load i32, i32* %mode36, align 4, !dbg !7987
  %bf.lshr = lshr i32 %bf.load37, 16, !dbg !7987
  %bf.clear38 = and i32 %bf.lshr, 255, !dbg !7987
  br label %cond.end, !dbg !7987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call30, %cond.true ], [ %bf.clear38, %cond.false ], !dbg !7987
  call void @llvm.dbg.value(metadata i32 %cond, metadata !7957, metadata !DIExpression()), !dbg !7988
  %idxprom = zext i32 %cond to i64, !dbg !7989
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7989
  %13 = load i8, i8* %arrayidx, align 1, !dbg !7989
  %conv40 = zext i8 %13 to i32, !dbg !7989
  %mul = shl nuw nsw i32 %conv40, 3, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %mul, metadata !7960, metadata !DIExpression()), !dbg !7988
  %.off = add i8 %13, -1, !dbg !7990
  %14 = icmp ult i8 %.off, 32, !dbg !7990
  br i1 %14, label %land.lhs.true48, label %cleanup, !dbg !7990

land.lhs.true48:                                  ; preds = %cond.end
  %15 = tail call i32 @llvm.ctpop.i32(i32 %mul), !dbg !7992, !range !7993
  %cmp49 = icmp ult i32 %15, 2, !dbg !7992
  br i1 %cmp49, label %if.then51, label %cleanup, !dbg !7994

if.then51:                                        ; preds = %land.lhs.true48
  %conv52 = zext i32 %mul to i64, !dbg !7995
  %cmp53 = icmp ugt i64 %conv52, %align, !dbg !7998
  %spec.select = select i1 %cmp53, i64 %conv52, i64 %align, !dbg !7999
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !7954, metadata !DIExpression()), !dbg !7969
  %str58 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8000
  %arraydecay = bitcast i32* %str58 to i8*, !dbg !8000
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !7961, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %conv40, metadata !7964, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 0, metadata !7962, metadata !DIExpression()), !dbg !7988
  %conv81 = zext i8 %13 to i64, !dbg !8001
  br label %for.cond, !dbg !8004

for.cond:                                         ; preds = %for.inc80, %if.then51
  %i.0 = phi i64 [ 0, %if.then51 ], [ %add82, %for.inc80 ], !dbg !8005
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !7962, metadata !DIExpression()), !dbg !7988
  %cmp63 = icmp slt i64 %i.0, %call, !dbg !8006
  br i1 %cmp63, label %for.cond65.preheader, label %for.end83, !dbg !8007

for.cond65.preheader:                             ; preds = %for.cond
  %wide.trip.count = zext i8 %13 to i64, !dbg !8008
  br label %for.cond65, !dbg !8012

for.cond65:                                       ; preds = %for.cond65.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond65.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !8013
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7963, metadata !DIExpression()), !dbg !7988
  %16 = trunc i64 %indvars.iv to i32, !dbg !8012
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !8008
  br i1 %exitcond, label %for.end, label %for.body68, !dbg !8012

for.body68:                                       ; preds = %for.cond65
  %add = add nuw nsw i64 %i.0, %indvars.iv, !dbg !8014
  %arrayidx70 = getelementptr inbounds i8, i8* %arraydecay, i64 %add, !dbg !8016
  %17 = load i8, i8* %arrayidx70, align 1, !dbg !8016
  %cmp72 = icmp eq i8 %17, 0, !dbg !8017
  br i1 %cmp72, label %for.inc, label %for.end, !dbg !8018

for.inc:                                          ; preds = %for.body68
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !8019
  call void @llvm.dbg.value(metadata i32 undef, metadata !7963, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7988
  br label %for.cond65, !dbg !8020, !llvm.loop !8021

for.end:                                          ; preds = %for.cond65, %for.body68
  %.lcssa = phi i32 [ %16, %for.cond65 ], [ %16, %for.body68 ], !dbg !8012
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !7963, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !7963, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !7963, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !7963, metadata !DIExpression()), !dbg !7988
  %cmp76 = icmp eq i32 %.lcssa, %conv40, !dbg !8023
  br i1 %cmp76, label %for.end83, label %for.inc80, !dbg !8025

for.inc80:                                        ; preds = %for.end
  %add82 = add nuw nsw i64 %i.0, %conv81, !dbg !8026
  call void @llvm.dbg.value(metadata i64 %add82, metadata !7962, metadata !DIExpression()), !dbg !7988
  br label %for.cond, !dbg !8027, !llvm.loop !8028

for.end83:                                        ; preds = %for.end, %for.cond
  %i.0.lcssa = phi i64 [ %i.0, %for.end ], [ %i.0, %for.cond ], !dbg !8005
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !7962, metadata !DIExpression()), !dbg !7988
  %sub85 = sub nsw i64 %call, %conv81, !dbg !8030
  %cmp86 = icmp eq i64 %i.0.lcssa, %sub85, !dbg !8032
  br i1 %cmp86, label %if.then88, label %cleanup, !dbg !8033

if.then88:                                        ; preds = %for.end83
  %div90 = lshr i64 %spec.select, 3, !dbg !8034
  %conv91 = trunc i64 %div90 to i32, !dbg !8036
  %call92 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.182, i64 0, i64 0), i32 %conv40, i32 %conv91) #6, !dbg !8037
  %or95 = or i32 %conv40, 98304, !dbg !8038
  call void @llvm.dbg.value(metadata i32 %or95, metadata !7955, metadata !DIExpression()), !dbg !7969
  %call97 = call %union.section* @get_section(i8* nonnull %7, i32 %or95, %union.tree_node* null) #8, !dbg !8039
  br label %cleanup, !dbg !8040

cleanup:                                          ; preds = %cond.end, %land.lhs.true48, %for.end83, %if.then88
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then88 ], [ true, %for.end83 ], [ true, %land.lhs.true48 ], [ true, %cond.end ]
  %retval.0 = phi %union.section* [ %call97, %if.then88 ], [ undef, %for.end83 ], [ undef, %land.lhs.true48 ], [ undef, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %7) #7, !dbg !8041
  br i1 %cleanup.dest.slot.0, label %if.end106, label %cleanup107

if.end106:                                        ; preds = %land.lhs.true13, %entry, %cleanup, %land.lhs.true9, %land.lhs.true1, %land.lhs.true
  %18 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !8042
  br label %cleanup107, !dbg !8043

cleanup107:                                       ; preds = %cleanup, %if.end106
  %retval.1 = phi %union.section* [ %retval.0, %cleanup ], [ %18, %if.end106 ], !dbg !7969
  ret %union.section* %retval.1, !dbg !8044
}

; Function Attrs: nounwind uwtable
define dso_local void @default_unique_section(%union.tree_node* %decl, i32 %reloc) local_unnamed_addr #5 !dbg !8045 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8047, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata i32 %reloc, metadata !8048, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata i8 0, metadata !8049, metadata !DIExpression()), !dbg !8054
  %call = tail call i32 @categorize_decl_for_section(%union.tree_node* %decl, i32 %reloc) #8, !dbg !8055
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb2
    i32 3, label %sw.bb2
    i32 4, label %sw.bb2
    i32 5, label %sw.bb6
    i32 6, label %sw.bb10
    i32 7, label %sw.bb14
    i32 8, label %sw.bb18
    i32 9, label %sw.bb22
    i32 10, label %sw.bb26
    i32 11, label %sw.bb30
    i32 13, label %sw.bb34
    i32 14, label %sw.bb38
    i32 12, label %sw.bb42
    i32 15, label %sw.bb46
    i32 16, label %sw.bb50
    i32 17, label %sw.bb51
  ], !dbg !8056

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8057

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8059

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.134, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8060

sw.bb10:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8061

sw.bb14:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8062

sw.bb18:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8063

sw.bb22:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8064

sw.bb26:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8065

sw.bb30:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8066

sw.bb34:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8067

sw.bb38:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8068

sw.bb42:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8069

sw.bb46:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8070

sw.bb50:                                          ; preds = %entry
  %0 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 2), align 8, !dbg !8071
  call void @llvm.dbg.value(metadata i8* %0, metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8072

sw.bb51:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 106, i32 3), align 8, !dbg !8073
  call void @llvm.dbg.value(metadata i8* %1, metadata !8050, metadata !DIExpression()), !dbg !8054
  br label %sw.epilog, !dbg !8074

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 6469, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !8075
  br label %sw.epilog, !dbg !8076

sw.epilog:                                        ; preds = %sw.default, %sw.bb51, %sw.bb50, %sw.bb46, %sw.bb42, %sw.bb38, %sw.bb34, %sw.bb30, %sw.bb26, %sw.bb22, %sw.bb18, %sw.bb14, %sw.bb10, %sw.bb6, %sw.bb2, %sw.bb
  %prefix.0 = phi i8* [ undef, %sw.default ], [ %1, %sw.bb51 ], [ %0, %sw.bb50 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), %sw.bb46 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), %sw.bb42 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), %sw.bb38 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), %sw.bb34 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), %sw.bb30 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), %sw.bb26 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), %sw.bb22 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i64 0, i64 0), %sw.bb18 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i64 0, i64 0), %sw.bb14 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i64 0, i64 0), %sw.bb10 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.134, i64 0, i64 0), %sw.bb6 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i64 0, i64 0), %sw.bb ]
  call void @llvm.dbg.value(metadata i8* %prefix.0, metadata !8050, metadata !DIExpression()), !dbg !8054
  %call52 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !8077
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8077
  %str = bitcast i32* %id to i8**, !dbg !8077
  %2 = load i8*, i8** %str, align 8, !dbg !8077
  call void @llvm.dbg.value(metadata i8* %2, metadata !8051, metadata !DIExpression()), !dbg !8054
  %3 = load i8* (i8*)*, i8* (i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 52), align 8, !dbg !8078
  %call53 = tail call i8* %3(i8* %2) #6, !dbg !8079
  call void @llvm.dbg.value(metadata i8* %call53, metadata !8051, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), metadata !8052, metadata !DIExpression()), !dbg !8054
  %call57 = tail call i64 (i8*, ...) @concat_length(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8* %prefix.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i64 0, i64 0), i8* %call53, i8* null) #6, !dbg !8080
  %add = add i64 %call57, 1, !dbg !8080
  %4 = alloca i8, i64 %add, align 16, !dbg !8080
  store i8* %4, i8** @libiberty_concat_ptr, align 8, !dbg !8080
  %call58 = call i8* (i8*, ...) @concat_copy2(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.156, i64 0, i64 0), i8* %prefix.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i64 0, i64 0), i8* %call53, i8* null) #6, !dbg !8080
  call void @llvm.dbg.value(metadata i8* %call58, metadata !8053, metadata !DIExpression()), !dbg !8054
  %call59 = call i64 @strlen(i8* %call58) #6, !dbg !8081
  %conv60 = trunc i64 %call59 to i32, !dbg !8081
  %call61 = call %union.tree_node* @build_string(i32 %conv60, i8* %call58) #6, !dbg !8082
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !8083
  store %union.tree_node* %call61, %union.tree_node** %section_name, align 8, !dbg !8084
  ret void, !dbg !8085
}

declare dso_local i64 @concat_length(i8*, ...) local_unnamed_addr #2

declare dso_local i8* @concat_copy2(i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_select_rtx_section(i32 %mode, %struct.rtx_def* %x, i64 %align) local_unnamed_addr #5 !dbg !8086 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8090, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8091, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i64 %align, metadata !8092, metadata !DIExpression()), !dbg !8093
  %call = tail call fastcc i32 @compute_reloc_for_rtx(%struct.rtx_def* %x) #8, !dbg !8094
  %0 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 20), align 8, !dbg !8096
  %call1 = tail call i32 %0() #6, !dbg !8097
  %and = and i32 %call, %call1, !dbg !8098
  %tobool = icmp eq i32 %and, 0, !dbg !8098
  %1 = load %union.section*, %union.section** @data_section, align 8, !dbg !8099
  %2 = load %union.section*, %union.section** @readonly_data_section, align 8, !dbg !8099
  %retval.0 = select i1 %tobool, %union.section* %2, %union.section* %1, !dbg !8099
  ret %union.section* %retval.0, !dbg !8100
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @compute_reloc_for_rtx(%struct.rtx_def* %x) unnamed_addr #5 !dbg !8101 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %reloc = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8105, metadata !DIExpression()), !dbg !8107
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  %0 = bitcast i32* %reloc to i8*, !dbg !8108
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !8108
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !8109
  %bf.load = load i32, i32* %.cast, align 8, !dbg !8109
  %trunc = trunc i32 %bf.load to i16, !dbg !8110
  switch i16 %trunc, label %cleanup [
    i16 35, label %sw.bb
    i16 45, label %sw.bb
    i16 44, label %sw.bb
  ], !dbg !8110

sw.bb:                                            ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !8106, metadata !DIExpression()), !dbg !8107
  store i32 0, i32* %reloc, align 4, !dbg !8111
  call void @llvm.dbg.value(metadata %struct.rtx_def** %x.addr, metadata !8105, metadata !DIExpression(DW_OP_deref)), !dbg !8107
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %x.addr, i32 (%struct.rtx_def**, i8*)* nonnull @compute_reloc_for_rtx_1, i8* nonnull %0) #6, !dbg !8113
  %1 = load i32, i32* %reloc, align 4, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %1, metadata !8106, metadata !DIExpression()), !dbg !8107
  br label %cleanup, !dbg !8115

cleanup:                                          ; preds = %entry, %sw.bb
  %retval.0 = phi i32 [ %1, %sw.bb ], [ 0, %entry ], !dbg !8116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !8117
  ret i32 %retval.0, !dbg !8117
}

; Function Attrs: nounwind uwtable
define dso_local %union.section* @default_elf_select_rtx_section(i32 %mode, %struct.rtx_def* %x, i64 %align) local_unnamed_addr #5 !dbg !8118 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !8120, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !8121, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i64 %align, metadata !8122, metadata !DIExpression()), !dbg !8124
  %call = tail call fastcc i32 @compute_reloc_for_rtx(%struct.rtx_def* %x) #8, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %call, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 20), align 8, !dbg !8126
  %call1 = tail call i32 %0() #6, !dbg !8128
  %and = and i32 %call, %call1, !dbg !8129
  %tobool = icmp eq i32 %and, 0, !dbg !8129
  br i1 %tobool, label %if.end, label %if.then, !dbg !8130

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %call, 1, !dbg !8131
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8134

if.then2:                                         ; preds = %if.then
  %call3 = tail call %union.section* @get_named_section(%union.tree_node* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), i32 1) #8, !dbg !8135
  br label %cleanup, !dbg !8136

if.else:                                          ; preds = %if.then
  %call4 = tail call %union.section* @get_named_section(%union.tree_node* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i32 3) #8, !dbg !8137
  br label %cleanup, !dbg !8138

if.end:                                           ; preds = %entry
  %call5 = tail call %union.section* @mergeable_constant_section(i32 %mode, i64 %align, i32 0) #8, !dbg !8139
  br label %cleanup, !dbg !8140

cleanup:                                          ; preds = %if.end, %if.else, %if.then2
  %retval.0 = phi %union.section* [ %call3, %if.then2 ], [ %call4, %if.else ], [ %call5, %if.end ], !dbg !8124
  ret %union.section* %retval.0, !dbg !8141
}

; Function Attrs: nounwind uwtable
define dso_local void @default_encode_section_info(%union.tree_node* %decl, %struct.rtx_def* %rtl, i32 %first) local_unnamed_addr #5 !dbg !8142 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8146, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata %struct.rtx_def* %rtl, metadata !8147, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %first, metadata !8148, metadata !DIExpression()), !dbg !8151
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rtl, i64 0, i32 0, !dbg !8152
  %bf.load = load i32, i32* %0, align 8, !dbg !8152
  %bf.clear = and i32 %bf.load, 65535, !dbg !8152
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !8152
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !8154

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %rtl, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8155
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8155
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !8149, metadata !DIExpression()), !dbg !8151
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !8156
  %bf.load1 = load i32, i32* %2, align 8, !dbg !8156
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8156
  %cmp3 = icmp eq i32 %bf.clear2, 45, !dbg !8158
  br i1 %cmp3, label %if.end5, label %cleanup.cont, !dbg !8159

if.end5:                                          ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8160
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !8160
  %4 = load i32, i32* %rt_int, align 8, !dbg !8160
  %and = and i32 %4, 128, !dbg !8161
  call void @llvm.dbg.value(metadata i32 %and, metadata !8150, metadata !DIExpression()), !dbg !8151
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8162
  %bf.load9 = load i64, i64* %5, align 8, !dbg !8162
  %bf.cast3 = and i64 %bf.load9, 65535, !dbg !8164
  %cmp11 = icmp eq i64 %bf.cast3, 29, !dbg !8164
  %or = zext i1 %cmp11 to i32, !dbg !8165
  %spec.select = or i32 %and, %or, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8150, metadata !DIExpression()), !dbg !8151
  %6 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !8166
  %call = tail call zeroext i8 %6(%union.tree_node* %decl) #6, !dbg !8168
  %tobool = icmp eq i8 %call, 0, !dbg !8168
  %or15 = or i32 %spec.select, 2, !dbg !8169
  %flags.1 = select i1 %tobool, i32 %spec.select, i32 %or15, !dbg !8169
  call void @llvm.dbg.value(metadata i32 %flags.1, metadata !8150, metadata !DIExpression()), !dbg !8151
  %bf.load18 = load i64, i64* %5, align 8, !dbg !8170
  %bf.cast204 = and i64 %bf.load18, 65535, !dbg !8172
  %cmp21 = icmp eq i64 %bf.cast204, 32, !dbg !8172
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !8173

land.lhs.true:                                    ; preds = %if.end5
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8174
  %7 = bitcast i24* %tls_model to i32*, !dbg !8174
  %bf.load22 = load i32, i32* %7, align 8, !dbg !8174
  %bf.clear23 = and i32 %bf.load22, 49152, !dbg !8174
  %cmp24 = icmp eq i32 %bf.clear23, 0, !dbg !8174
  br i1 %cmp24, label %if.else, label %land.lhs.true25, !dbg !8175

land.lhs.true25:                                  ; preds = %land.lhs.true
  %bf.clear30 = and i32 %bf.load22, 57344, !dbg !8176
  %cmp31 = icmp eq i32 %bf.clear30, 8192, !dbg !8177
  br i1 %cmp31, label %if.else, label %if.then32, !dbg !8178

if.then32:                                        ; preds = %land.lhs.true25
  %8 = lshr i32 %bf.load22, 10, !dbg !8179
  %shl = and i32 %8, 56, !dbg !8179
  %or38 = or i32 %flags.1, %shl, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %or38, metadata !8150, metadata !DIExpression()), !dbg !8151
  br label %if.end44, !dbg !8181

if.else:                                          ; preds = %land.lhs.true25, %land.lhs.true, %if.end5
  %9 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 48), align 8, !dbg !8182
  %call39 = tail call zeroext i8 %9(%union.tree_node* %decl) #6, !dbg !8184
  %tobool40 = icmp eq i8 %call39, 0, !dbg !8184
  %or42 = or i32 %flags.1, 4, !dbg !8185
  %spec.select1 = select i1 %tobool40, i32 %flags.1, i32 %or42, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !8150, metadata !DIExpression()), !dbg !8151
  %bf.load46.pre = load i64, i64* %5, align 8, !dbg !8187
  %.pre = and i64 %bf.load46.pre, 65535, !dbg !8187
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then32
  %bf.cast48.pre-phi = phi i64 [ %.pre, %if.else ], [ 32, %if.then32 ], !dbg !8187
  %bf.load59 = phi i64 [ %bf.load46.pre, %if.else ], [ %bf.load18, %if.then32 ], !dbg !8187
  %flags.3 = phi i32 [ %spec.select1, %if.else ], [ %or38, %if.then32 ], !dbg !8189
  call void @llvm.dbg.value(metadata i32 %flags.3, metadata !8150, metadata !DIExpression()), !dbg !8151
  %arrayidx49 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast48.pre-phi, !dbg !8187
  %10 = load i32, i32* %arrayidx49, align 4, !dbg !8187
  %cmp50 = icmp eq i32 %10, 3, !dbg !8187
  br i1 %cmp50, label %land.lhs.true51, label %if.end66, !dbg !8190

land.lhs.true51:                                  ; preds = %if.end44
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8191
  %11 = bitcast i40* %decl_flag_1 to i64*, !dbg !8191
  %bf.load52 = load i64, i64* %11, align 8, !dbg !8191
  %bf.cast555 = and i64 %bf.load52, 33554432, !dbg !8191
  %tobool56 = icmp eq i64 %bf.cast555, 0, !dbg !8191
  br i1 %tobool56, label %if.end66, label %land.lhs.true57, !dbg !8192

land.lhs.true57:                                  ; preds = %land.lhs.true51
  %bf.cast626 = lshr i64 %bf.load59, 21, !dbg !8193
  %12 = trunc i64 %bf.cast626 to i32, !dbg !8193
  %13 = and i32 %12, 64, !dbg !8193
  %14 = or i32 %flags.3, %13, !dbg !8193
  br label %if.end66, !dbg !8193

if.end66:                                         ; preds = %land.lhs.true51, %land.lhs.true57, %if.end44
  %flags.4 = phi i32 [ %flags.3, %land.lhs.true51 ], [ %flags.3, %if.end44 ], [ %14, %land.lhs.true57 ], !dbg !8151
  call void @llvm.dbg.value(metadata i32 %flags.4, metadata !8150, metadata !DIExpression()), !dbg !8151
  store i32 %flags.4, i32* %rt_int, align 8, !dbg !8194
  br label %cleanup.cont, !dbg !8195

cleanup.cont:                                     ; preds = %if.end, %if.end66, %entry
  ret void, !dbg !8195
}

; Function Attrs: nounwind uwtable
define dso_local i8* @default_strip_name_encoding(i8* %str) local_unnamed_addr #5 !dbg !8196 {
entry:
  call void @llvm.dbg.value(metadata i8* %str, metadata !8198, metadata !DIExpression()), !dbg !8199
  %0 = load i8, i8* %str, align 1, !dbg !8200
  %cmp = icmp eq i8 %0, 42, !dbg !8201
  %idx.ext = zext i1 %cmp to i64, !dbg !8202
  %add.ptr = getelementptr inbounds i8, i8* %str, i64 %idx.ext, !dbg !8202
  ret i8* %add.ptr, !dbg !8203
}

; Function Attrs: nounwind uwtable
define dso_local void @default_asm_output_anchor(%struct.rtx_def* %symbol) local_unnamed_addr #5 !dbg !8204 {
entry:
  %buffer = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !8206, metadata !DIExpression()), !dbg !8208
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %buffer, i64 0, i64 0, !dbg !8209
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !8209
  call void @llvm.dbg.declare(metadata [100 x i8]* %buffer, metadata !8207, metadata !DIExpression()), !dbg !8210
  %offset = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 2, !dbg !8211
  %1 = load i64, i64* %offset, align 8, !dbg !8211
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0), i64 %1) #6, !dbg !8212
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8213
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.159, i64 0, i64 0)) #6, !dbg !8213
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8213
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !8213
  %4 = load i8*, i8** %rt_str, align 8, !dbg !8213
  call void @assemble_name(%struct._IO_FILE* %3, i8* %4) #8, !dbg !8213
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8213
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.160, i64 0, i64 0)) #6, !dbg !8213
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8213
  call void @assemble_name(%struct._IO_FILE* %6, i8* nonnull %0) #8, !dbg !8213
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8213
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)) #6, !dbg !8213
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !8215
  ret void, !dbg !8215
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @default_use_anchors_for_symbol_p(%struct.rtx_def* %symbol) local_unnamed_addr #5 !dbg !8216 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !8220, metadata !DIExpression()), !dbg !8223
  %block = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 1, !dbg !8224
  %0 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !8224
  %sect1 = getelementptr inbounds %struct.object_block, %struct.object_block* %0, i64 0, i32 0, !dbg !8225
  %1 = load %union.section*, %union.section** %sect1, align 8, !dbg !8225
  call void @llvm.dbg.value(metadata %union.section* %1, metadata !8221, metadata !DIExpression()), !dbg !8223
  %flags = getelementptr inbounds %union.section, %union.section* %1, i64 0, i32 0, i32 0, i32 0, !dbg !8226
  %2 = load i32, i32* %flags, align 8, !dbg !8226
  %3 = trunc i32 %2 to i16, !dbg !8228
  %tobool = icmp slt i16 %3, 0, !dbg !8228
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8229

if.end:                                           ; preds = %entry
  %and4 = and i32 %2, 4096, !dbg !8230
  %tobool5 = icmp eq i32 %and4, 0, !dbg !8230
  br i1 %tobool5, label %if.end7, label %cleanup, !dbg !8232

if.end7:                                          ; preds = %if.end
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 0, !dbg !8233
  %bf.load = load i32, i32* %4, align 8, !dbg !8233
  %bf.clear = and i32 %bf.load, 67108864, !dbg !8233
  %tobool8 = icmp eq i32 %bf.clear, 0, !dbg !8233
  br i1 %tobool8, label %cond.false, label %cond.end, !dbg !8233

cond.false:                                       ; preds = %if.end7
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8233
  %rt_tree = bitcast %union.rtunion_def* %5 to %union.tree_node**, !dbg !8233
  %6 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !8233
  br label %cond.end, !dbg !8233

cond.end:                                         ; preds = %if.end7, %cond.false
  %cond = phi %union.tree_node* [ %6, %cond.false ], [ null, %if.end7 ], !dbg !8233
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !8222, metadata !DIExpression()), !dbg !8223
  %tobool10 = icmp eq %union.tree_node* %cond, null, !dbg !8234
  br i1 %tobool10, label %if.end22, label %land.lhs.true, !dbg !8236

land.lhs.true:                                    ; preds = %cond.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8237
  %bf.load11 = load i64, i64* %7, align 8, !dbg !8237
  %bf.cast = and i64 %bf.load11, 65535, !dbg !8237
  %arrayidx13 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !8237
  %8 = load i32, i32* %arrayidx13, align 4, !dbg !8237
  %cmp = icmp eq i32 %8, 3, !dbg !8237
  br i1 %cmp, label %if.then14, label %if.end22, !dbg !8238

if.then14:                                        ; preds = %land.lhs.true
  %9 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !8239
  %call = tail call zeroext i8 %9(%union.tree_node* nonnull %cond) #6, !dbg !8242
  %tobool15 = icmp eq i8 %call, 0, !dbg !8242
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !8243

if.end17:                                         ; preds = %if.then14
  %10 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 48), align 8, !dbg !8244
  %call18 = tail call zeroext i8 %10(%union.tree_node* nonnull %cond) #6, !dbg !8246
  %tobool19 = icmp eq i8 %call18, 0, !dbg !8246
  br i1 %tobool19, label %if.end22, label %cleanup, !dbg !8247

if.end22:                                         ; preds = %if.end17, %cond.end, %land.lhs.true
  br label %cleanup, !dbg !8248

cleanup:                                          ; preds = %if.end17, %if.then14, %if.end, %entry, %if.end22
  %retval.0 = phi i8 [ 1, %if.end22 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %if.then14 ], [ 0, %if.end17 ], !dbg !8223
  ret i8 %retval.0, !dbg !8249
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @default_binds_local_p(%union.tree_node* %exp) local_unnamed_addr #5 !dbg !8250 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8252, metadata !DIExpression()), !dbg !8253
  %0 = load i32, i32* @flag_shlib, align 4, !dbg !8254
  %call = tail call zeroext i8 @default_binds_local_p_1(%union.tree_node* %exp, i32 %0) #8, !dbg !8255
  ret i8 %call, !dbg !8256
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @default_binds_local_p_1(%union.tree_node* %exp, i32 %shlib) local_unnamed_addr #5 !dbg !8257 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8259, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata i32 %shlib, metadata !8260, metadata !DIExpression()), !dbg !8262
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8263
  %bf.load = load i64, i64* %0, align 8, !dbg !8263
  %bf.cast = and i64 %bf.load, 65535, !dbg !8263
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !8263
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8263
  %cmp = icmp eq i32 %1, 3, !dbg !8263
  br i1 %cmp, label %if.else, label %if.end69, !dbg !8265

if.else:                                          ; preds = %entry
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !8266
  %2 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !8266
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !8268
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !8268
  br i1 %tobool, label %if.else2, label %if.end69, !dbg !8269

if.else2:                                         ; preds = %if.else
  %bf.load4 = load i64, i64* %0, align 8, !dbg !8270
  %bf.cast61 = and i64 %bf.load4, 134217728, !dbg !8270
  %tobool7 = icmp eq i64 %bf.cast61, 0, !dbg !8270
  br i1 %tobool7, label %if.end69, label %if.else9, !dbg !8272

if.else9:                                         ; preds = %if.else2
  %visibility_specified = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !8273
  %3 = bitcast i24* %visibility_specified to i32*, !dbg !8273
  %bf.load10 = load i32, i32* %3, align 8, !dbg !8273
  %bf.clear12 = and i32 %bf.load10, 4096, !dbg !8273
  %tobool13 = icmp eq i32 %bf.clear12, 0, !dbg !8273
  br i1 %tobool13, label %if.else20, label %land.lhs.true, !dbg !8275

land.lhs.true:                                    ; preds = %if.else9
  %bf.clear17 = and i32 %bf.load10, 3072, !dbg !8276
  %cmp18 = icmp eq i32 %bf.clear17, 0, !dbg !8277
  br i1 %cmp18, label %if.else20, label %if.end69, !dbg !8278

if.else20:                                        ; preds = %land.lhs.true, %if.else9
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8279
  %4 = bitcast i40* %decl_flag_1 to i64*, !dbg !8279
  %bf.load22 = load i64, i64* %4, align 8, !dbg !8279
  %bf.cast252 = and i64 %bf.load22, 33554432, !dbg !8279
  %tobool26 = icmp eq i64 %bf.cast252, 0, !dbg !8279
  br i1 %tobool26, label %if.else28, label %if.end69, !dbg !8281

if.else28:                                        ; preds = %if.else20
  %bf.clear33 = and i32 %bf.load10, 3072, !dbg !8282
  %cmp34 = icmp eq i32 %bf.clear33, 0, !dbg !8284
  br i1 %cmp34, label %if.else36, label %if.end69, !dbg !8285

if.else36:                                        ; preds = %if.else28
  %5 = trunc i32 %bf.load10 to i8, !dbg !8286
  %tobool41 = icmp slt i8 %5, 0, !dbg !8286
  br i1 %tobool41, label %if.end69, label %if.else43, !dbg !8288

if.else43:                                        ; preds = %if.else36
  %tobool44 = icmp eq i32 %shlib, 0, !dbg !8289
  br i1 %tobool44, label %if.else46, label %if.then45, !dbg !8291

if.then45:                                        ; preds = %if.else43
  %6 = load i32, i32* @flag_whole_program, align 4, !dbg !8292
  %conv = trunc i32 %6 to i8, !dbg !8292
  call void @llvm.dbg.value(metadata i8 %conv, metadata !8261, metadata !DIExpression()), !dbg !8262
  br label %if.end69, !dbg !8293

if.else46:                                        ; preds = %if.else43
  %bf.clear50 = and i32 %bf.load10, 8, !dbg !8294
  %tobool51 = icmp eq i32 %bf.clear50, 0, !dbg !8294
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8296

land.lhs.true52:                                  ; preds = %if.else46
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !8297
  %7 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !8297
  %cmp54 = icmp eq %union.tree_node* %7, null, !dbg !8298
  br i1 %cmp54, label %if.end69, label %lor.lhs.false, !dbg !8299

lor.lhs.false:                                    ; preds = %land.lhs.true52
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8300
  %cmp58 = icmp eq %union.tree_node* %7, %8, !dbg !8301
  br i1 %cmp58, label %if.end69, label %if.else61, !dbg !8302

if.else61:                                        ; preds = %if.else46, %lor.lhs.false
  call void @llvm.dbg.value(metadata i8 1, metadata !8261, metadata !DIExpression()), !dbg !8262
  br label %if.end69

if.end69:                                         ; preds = %land.lhs.true, %if.else28, %if.else20, %if.else2, %if.else, %if.then45, %land.lhs.true52, %lor.lhs.false, %if.else61, %if.else36, %entry
  %local_p.8 = phi i8 [ 1, %entry ], [ 0, %if.else ], [ 1, %if.else2 ], [ 1, %land.lhs.true ], [ 0, %if.else20 ], [ 1, %if.else28 ], [ 0, %if.else36 ], [ %conv, %if.then45 ], [ 1, %if.else61 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true52 ], !dbg !8303
  call void @llvm.dbg.value(metadata i8 %local_p.8, metadata !8261, metadata !DIExpression()), !dbg !8262
  ret i8 %local_p.8, !dbg !8304
}

; Function Attrs: nounwind uwtable
define dso_local void @default_globalize_label(%struct._IO_FILE* %stream, i8* %name) local_unnamed_addr #5 !dbg !8305 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !8307, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %name, metadata !8308, metadata !DIExpression()), !dbg !8309
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i64 0, i64 0), %struct._IO_FILE* %stream) #6, !dbg !8310
  tail call void @assemble_name(%struct._IO_FILE* %stream, i8* %name) #8, !dbg !8311
  %call1 = tail call i32 @putc(i32 10, %struct._IO_FILE* %stream) #6, !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: nounwind uwtable
define dso_local void @default_globalize_decl_name(%struct._IO_FILE* %stream, %union.tree_node* %decl) local_unnamed_addr #5 !dbg !8314 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !8318, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8319, metadata !DIExpression()), !dbg !8321
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8322
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8322
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !8322
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8322

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8322

cond.false:                                       ; preds = %entry
  tail call void @make_decl_rtl(%union.tree_node* %decl) #8, !dbg !8322
  %cond.pre = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8322
  br label %cond.end, !dbg !8322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %cond.pre, %cond.false ], [ %0, %cond.true ], !dbg !8322
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8322
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8322
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8322
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !8322
  %2 = load i8*, i8** %rt_str, align 8, !dbg !8322
  call void @llvm.dbg.value(metadata i8* %2, metadata !8320, metadata !DIExpression()), !dbg !8321
  %3 = load void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, i8*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 6), align 8, !dbg !8323
  tail call void %3(%struct._IO_FILE* %stream, i8* %2) #6, !dbg !8324
  ret void, !dbg !8325
}

; Function Attrs: nounwind uwtable
define dso_local void @default_emit_unwind_label(%struct._IO_FILE* %stream, %union.tree_node* %decl, i32 %for_eh, i32 %empty) local_unnamed_addr #5 !dbg !8326 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !8330, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %for_eh, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %empty, metadata !8333, metadata !DIExpression()), !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: nounwind uwtable
define dso_local void @default_emit_except_table_label(%struct._IO_FILE* %stream) local_unnamed_addr #5 !dbg !8336 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !8340, metadata !DIExpression()), !dbg !8341
  ret void, !dbg !8342
}

; Function Attrs: nounwind uwtable
define dso_local void @default_internal_label(%struct._IO_FILE* %stream, i8* %prefix, i64 %labelno) local_unnamed_addr #5 !dbg !8343 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %stream, metadata !8347, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !8348, metadata !DIExpression()), !dbg !8352
  call void @llvm.dbg.value(metadata i64 %labelno, metadata !8349, metadata !DIExpression()), !dbg !8352
  %call = tail call i64 @strlen(i8* %prefix) #6, !dbg !8353
  %add = add i64 %call, 40, !dbg !8353
  %0 = alloca i8, i64 %add, align 16, !dbg !8353
  call void @llvm.dbg.value(metadata i8* %0, metadata !8350, metadata !DIExpression()), !dbg !8352
  %conv = trunc i64 %labelno to i32, !dbg !8354
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* %prefix, i32 %conv) #6, !dbg !8354
  call void @assemble_name_raw(%struct._IO_FILE* %stream, i8* nonnull %0) #8, !dbg !8356
  %call3 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %stream) #6, !dbg !8356
  ret void, !dbg !8358
}

; Function Attrs: nounwind uwtable
define dso_local void @default_file_start() local_unnamed_addr #5 !dbg !8359 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 116), align 1, !dbg !8360
  %tobool = icmp eq i8 %0, 0, !dbg !8362
  %1 = load i32, i32* @flag_verbose_asm, align 4, !dbg !8363
  %2 = load i32, i32* @flag_debug_asm, align 4, !dbg !8364
  %3 = or i32 %1, %2, !dbg !8365
  %4 = load i32, i32* @flag_dump_rtl_in_asm, align 4, !dbg !8366
  %5 = or i32 %3, %4, !dbg !8365
  %6 = icmp ne i32 %5, 0, !dbg !8365
  %7 = or i1 %6, %tobool, !dbg !8365
  br i1 %7, label %if.end, label %if.then, !dbg !8365

if.then:                                          ; preds = %entry
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8367
  %call = tail call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0), %struct._IO_FILE* %8) #6, !dbg !8368
  br label %if.end, !dbg !8368

if.end:                                           ; preds = %entry, %if.then
  %9 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 117), align 8, !dbg !8369
  %tobool5 = icmp eq i8 %9, 0, !dbg !8371
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8372

if.then6:                                         ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8373
  %11 = load i8*, i8** @main_input_filename, align 8, !dbg !8374
  tail call void @output_file_directive(%struct._IO_FILE* %10, i8* %11) #6, !dbg !8375
  br label %if.end7, !dbg !8375

if.end7:                                          ; preds = %if.end, %if.then6
  ret void, !dbg !8376
}

declare dso_local void @output_file_directive(%struct._IO_FILE*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @file_end_indicate_exec_stack() local_unnamed_addr #5 !dbg !8377 {
entry:
  call void @llvm.dbg.value(metadata i32 1024, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load i32, i32* @trampolines_created, align 4, !dbg !8381
  %tobool = icmp eq i32 %0, 0, !dbg !8381
  %spec.select = select i1 %tobool, i32 1024, i32 1280, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !8379, metadata !DIExpression()), !dbg !8380
  %call = tail call %union.section* @get_section(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.163, i64 0, i64 0), i32 %spec.select, %union.tree_node* null) #8, !dbg !8384
  tail call void @switch_to_section(%union.section* %call) #8, !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_constant_alignment(%union.tree_node* %exp) unnamed_addr #5 !dbg !8387 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8391, metadata !DIExpression()), !dbg !8393
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8394
  %0 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !8394
  %1 = load %struct.tree_type*, %struct.tree_type** %0, align 8, !dbg !8394
  %align2 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %1, i64 0, i32 7, !dbg !8394
  %2 = load i32, i32* %align2, align 8, !dbg !8394
  call void @llvm.dbg.value(metadata i32 %2, metadata !8392, metadata !DIExpression()), !dbg !8393
  %call = tail call i32 @ix86_constant_alignment(%union.tree_node* %exp, i32 %2) #6, !dbg !8395
  call void @llvm.dbg.value(metadata i32 %call, metadata !8392, metadata !DIExpression()), !dbg !8393
  ret i32 %call, !dbg !8396
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @get_constant_size(%union.tree_node* %exp) unnamed_addr #5 !dbg !8397 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !8401, metadata !DIExpression()), !dbg !8403
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8404
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8404
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %0) #6, !dbg !8405
  call void @llvm.dbg.value(metadata i64 %call, metadata !8402, metadata !DIExpression()), !dbg !8403
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8406
  %bf.load = load i64, i64* %1, align 8, !dbg !8406
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8408
  %cmp = icmp eq i64 %bf.cast1, 28, !dbg !8408
  br i1 %cmp, label %if.then, label %if.end, !dbg !8409

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8410
  %3 = load i32, i32* %2, align 8, !dbg !8410
  %conv = sext i32 %3 to i64, !dbg !8410
  %cmp1 = icmp slt i64 %call, %conv, !dbg !8410
  br i1 %cmp1, label %cond.true, label %if.end, !dbg !8410

cond.true:                                        ; preds = %if.then
  br label %if.end, !dbg !8410

if.end:                                           ; preds = %cond.true, %if.then, %entry
  %size.0 = phi i64 [ %call, %entry ], [ %conv, %cond.true ], [ %call, %if.then ], !dbg !8403
  call void @llvm.dbg.value(metadata i64 %size.0, metadata !8402, metadata !DIExpression()), !dbg !8403
  ret i64 %size.0, !dbg !8411
}

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_gc_safe_push(%struct.VEC_rtx_gc** %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !8412 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !8418, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !8419, metadata !DIExpression()), !dbg !8420
  %call = tail call fastcc i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 1) #8, !dbg !8421
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !8421
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !8421
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8421

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !8421
  br label %cond.end, !dbg !8421

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8421
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %obj_) #8, !dbg !8421
  ret %struct.rtx_def** %call1, !dbg !8421
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @get_section_anchor(%struct.object_block* %block, i64 %offset, i32 %model) local_unnamed_addr #5 !dbg !8422 {
entry:
  %label = alloca [100 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.object_block* %block, metadata !8426, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i64 %offset, metadata !8427, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %model, metadata !8428, metadata !DIExpression()), !dbg !8439
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %label, i64 0, i64 0, !dbg !8440
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !8440
  call void @llvm.dbg.declare(metadata [100 x i8]* %label, metadata !8429, metadata !DIExpression()), !dbg !8441
  %1 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 44), align 8, !dbg !8442
  call void @llvm.dbg.value(metadata i64 %1, metadata !8434, metadata !DIExpression()), !dbg !8439
  %2 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 43), align 8, !dbg !8443
  call void @llvm.dbg.value(metadata i64 %2, metadata !8433, metadata !DIExpression()), !dbg !8439
  %sub = sub i64 %1, %2, !dbg !8444
  %add = add i64 %sub, 1, !dbg !8445
  call void @llvm.dbg.value(metadata i64 %add, metadata !8435, metadata !DIExpression()), !dbg !8439
  %cmp = icmp eq i64 %add, 0, !dbg !8446
  br i1 %cmp, label %if.end27, label %if.else, !dbg !8448

if.else:                                          ; preds = %entry
  %3 = load i32, i32* @ptr_mode, align 4, !dbg !8449
  %idxprom = zext i32 %3 to i64, !dbg !8449
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !8449
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8449
  %conv1 = zext i8 %4 to i32, !dbg !8449
  %mul = shl nuw nsw i32 %conv1, 3, !dbg !8449
  %sub4 = add nsw i32 %mul, -1, !dbg !8451
  %shl = shl i32 1, %sub4, !dbg !8452
  %conv5 = sext i32 %shl to i64, !dbg !8453
  call void @llvm.dbg.value(metadata i64 %conv5, metadata !8436, metadata !DIExpression()), !dbg !8439
  %cmp6 = icmp slt i64 %offset, 0, !dbg !8454
  br i1 %cmp6, label %if.then8, label %if.else16, !dbg !8456

if.then8:                                         ; preds = %if.else
  %add10 = sub i64 %1, %offset, !dbg !8457
  call void @llvm.dbg.value(metadata i64 %add10, metadata !8437, metadata !DIExpression()), !dbg !8439
  %rem = urem i64 %add10, %add, !dbg !8459
  %sub11 = sub i64 %add10, %rem, !dbg !8460
  call void @llvm.dbg.value(metadata i64 %sub11, metadata !8437, metadata !DIExpression()), !dbg !8439
  %cmp12 = icmp ugt i64 %sub11, %conv5, !dbg !8461
  %spec.select = select i1 %cmp12, i64 %conv5, i64 %sub11, !dbg !8463
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !8437, metadata !DIExpression()), !dbg !8439
  %sub15 = sub i64 0, %spec.select, !dbg !8464
  call void @llvm.dbg.value(metadata i64 %sub15, metadata !8427, metadata !DIExpression()), !dbg !8439
  br label %if.end27, !dbg !8465

if.else16:                                        ; preds = %if.else
  %sub17 = sub i64 %offset, %2, !dbg !8466
  call void @llvm.dbg.value(metadata i64 %sub17, metadata !8437, metadata !DIExpression()), !dbg !8439
  %rem18 = urem i64 %sub17, %add, !dbg !8468
  %sub19 = sub i64 %sub17, %rem18, !dbg !8469
  call void @llvm.dbg.value(metadata i64 %sub19, metadata !8437, metadata !DIExpression()), !dbg !8439
  %sub20 = add nsw i64 %conv5, -1, !dbg !8470
  %cmp21 = icmp ugt i64 %sub19, %sub20, !dbg !8472
  %spec.select1 = select i1 %cmp21, i64 %sub20, i64 %sub19, !dbg !8473
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !8437, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i64 %spec.select1, metadata !8427, metadata !DIExpression()), !dbg !8439
  br label %if.end27

if.end27:                                         ; preds = %if.then8, %if.else16, %entry
  %offset.addr.1 = phi i64 [ 0, %entry ], [ %sub15, %if.then8 ], [ %spec.select1, %if.else16 ], !dbg !8474
  call void @llvm.dbg.value(metadata i64 %offset.addr.1, metadata !8427, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 0, metadata !8430, metadata !DIExpression()), !dbg !8439
  %anchors = getelementptr inbounds %struct.object_block, %struct.object_block* %block, i64 0, i32 4, !dbg !8475
  %5 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %anchors, align 8, !dbg !8475
  %tobool = icmp eq %struct.VEC_rtx_gc* %5, null, !dbg !8475
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8475

cond.true:                                        ; preds = %if.end27
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %5, i64 0, i32 0, !dbg !8475
  br label %cond.end, !dbg !8475

cond.end:                                         ; preds = %if.end27, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %if.end27 ], !dbg !8475
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond) #8, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %call, metadata !8432, metadata !DIExpression()), !dbg !8439
  br label %while.cond, !dbg !8476

while.cond:                                       ; preds = %if.end74, %cond.end
  %end.0 = phi i32 [ %call, %cond.end ], [ %end.3, %if.end74 ], !dbg !8439
  %begin.0 = phi i32 [ 0, %cond.end ], [ %begin.3, %if.end74 ], !dbg !8477
  call void @llvm.dbg.value(metadata i32 %begin.0, metadata !8430, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %end.0, metadata !8432, metadata !DIExpression()), !dbg !8439
  %cmp29 = icmp eq i32 %begin.0, %end.0, !dbg !8478
  br i1 %cmp29, label %do.body, label %while.body, !dbg !8476

while.body:                                       ; preds = %while.cond
  %add31 = add i32 %end.0, %begin.0, !dbg !8479
  %div = lshr i32 %add31, 1, !dbg !8481
  call void @llvm.dbg.value(metadata i32 %div, metadata !8431, metadata !DIExpression()), !dbg !8439
  %6 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %anchors, align 8, !dbg !8482
  %tobool33 = icmp eq %struct.VEC_rtx_gc* %6, null, !dbg !8482
  br i1 %tobool33, label %cond.end38, label %cond.true34, !dbg !8482

cond.true34:                                      ; preds = %while.body
  %base36 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %6, i64 0, i32 0, !dbg !8482
  br label %cond.end38, !dbg !8482

cond.end38:                                       ; preds = %while.body, %cond.true34
  %cond39 = phi %struct.VEC_rtx_base* [ %base36, %cond.true34 ], [ null, %while.body ], !dbg !8482
  %call40 = tail call fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %cond39, i32 %div) #8, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call40, metadata !8438, metadata !DIExpression()), !dbg !8439
  %offset41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, i32 0, i32 2, !dbg !8483
  %7 = load i64, i64* %offset41, align 8, !dbg !8483
  %cmp42 = icmp sgt i64 %7, %offset.addr.1, !dbg !8485
  br i1 %cmp42, label %if.end74, label %if.else45, !dbg !8486

if.else45:                                        ; preds = %cond.end38
  %cmp49 = icmp slt i64 %7, %offset.addr.1, !dbg !8487
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !8489

if.then51:                                        ; preds = %if.else45
  %add52 = add nuw i32 %div, 1, !dbg !8490
  call void @llvm.dbg.value(metadata i32 %add52, metadata !8430, metadata !DIExpression()), !dbg !8439
  br label %if.end74, !dbg !8491

if.else53:                                        ; preds = %if.else45
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call40, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8492
  %rt_int = bitcast %union.rtunion_def* %8 to i32*, !dbg !8492
  %9 = load i32, i32* %rt_int, align 8, !dbg !8492
  %10 = lshr i32 %9, 3, !dbg !8492
  %and = and i32 %10, 7, !dbg !8492
  %cmp56 = icmp ugt i32 %and, %model, !dbg !8494
  br i1 %cmp56, label %if.end74, label %if.else59, !dbg !8495

if.else59:                                        ; preds = %if.else53
  %cmp66 = icmp ult i32 %and, %model, !dbg !8496
  br i1 %cmp66, label %if.then68, label %cleanup.loopexit, !dbg !8498

if.then68:                                        ; preds = %if.else59
  %add69 = add nuw i32 %div, 1, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %add69, metadata !8430, metadata !DIExpression()), !dbg !8439
  br label %if.end74

if.end74:                                         ; preds = %if.then51, %if.else53, %if.then68, %cond.end38
  %end.3 = phi i32 [ %div, %cond.end38 ], [ %end.0, %if.then51 ], [ %end.0, %if.then68 ], [ %div, %if.else53 ], !dbg !8439
  %begin.3 = phi i32 [ %begin.0, %cond.end38 ], [ %add52, %if.then51 ], [ %add69, %if.then68 ], [ %begin.0, %if.else53 ], !dbg !8439
  call void @llvm.dbg.value(metadata i32 %begin.3, metadata !8430, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %end.3, metadata !8432, metadata !DIExpression()), !dbg !8439
  br label %while.cond, !dbg !8476, !llvm.loop !8500

do.body:                                          ; preds = %while.cond
  %end.0.lcssa = phi i32 [ %end.0, %while.cond ], !dbg !8439
  call void @llvm.dbg.value(metadata i32 %end.0.lcssa, metadata !8432, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %end.0.lcssa, metadata !8432, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %begin.0, metadata !8430, metadata !DIExpression()), !dbg !8439
  %11 = load i32, i32* @anchor_labelno, align 4, !dbg !8502
  %inc = add nsw i32 %11, 1, !dbg !8502
  store i32 %inc, i32* @anchor_labelno, align 4, !dbg !8502
  %call75 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i64 0, i64 0), i32 %11) #6, !dbg !8502
  %call77 = call i8* @ggc_alloc_string(i8* nonnull %0, i32 -1) #6, !dbg !8504
  %call78 = call fastcc %struct.rtx_def* @create_block_symbol(i8* %call77, %struct.object_block* %block, i64 %offset.addr.1) #8, !dbg !8505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call78, metadata !8438, metadata !DIExpression()), !dbg !8439
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call78, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !8506
  %rt_int82 = bitcast %union.rtunion_def* %12 to i32*, !dbg !8506
  %13 = load i32, i32* %rt_int82, align 8, !dbg !8507
  %shl83 = shl i32 %model, 3, !dbg !8508
  %or = or i32 %13, %shl83, !dbg !8509
  %or88 = or i32 %or, 258, !dbg !8509
  store i32 %or88, i32* %rt_int82, align 8, !dbg !8509
  %call90 = call fastcc %struct.rtx_def** @VEC_rtx_gc_safe_insert(%struct.VEC_rtx_gc** nonnull %anchors, i32 %end.0.lcssa, %struct.rtx_def* %call78) #8, !dbg !8510
  br label %cleanup, !dbg !8511

cleanup.loopexit:                                 ; preds = %if.else59
  %call40.lcssa = phi %struct.rtx_def* [ %call40, %if.else59 ], !dbg !8482
  br label %cleanup, !dbg !8512

cleanup:                                          ; preds = %cleanup.loopexit, %do.body
  %retval.0 = phi %struct.rtx_def* [ %call78, %do.body ], [ %call40.lcssa, %cleanup.loopexit ], !dbg !8439
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !8512
  ret %struct.rtx_def* %retval.0, !dbg !8512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !8513 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !8519, metadata !DIExpression()), !dbg !8520
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !8521
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8521

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !8521
  %0 = load i32, i32* %num, align 8, !dbg !8521
  br label %cond.end, !dbg !8521

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8521
  ret i32 %cond, !dbg !8521
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @VEC_rtx_base_index(%struct.VEC_rtx_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8522 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !8526, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8527, metadata !DIExpression()), !dbg !8528
  br label %land.end, !dbg !8529

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8529
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8529
  %0 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !8529
  ret %struct.rtx_def* %0, !dbg !8529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_gc_safe_insert(%struct.VEC_rtx_gc** %vec_, i32 %ix_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !8530 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !8534, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8535, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !8536, metadata !DIExpression()), !dbg !8537
  %call = tail call fastcc i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 1) #8, !dbg !8538
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !8538
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !8538
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8538

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !8538
  br label %cond.end, !dbg !8538

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8538
  %call1 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_quick_insert(%struct.VEC_rtx_base* %cond, i32 %ix_, %struct.rtx_def* %obj_) #8, !dbg !8538
  ret %struct.rtx_def** %call1, !dbg !8538
}

; Function Attrs: nounwind uwtable
define dso_local void @output_object_blocks() local_unnamed_addr #5 !dbg !8539 {
entry:
  %0 = load %struct.htab*, %struct.htab** @object_block_htab, align 8, !dbg !8540
  tail call void @htab_traverse(%struct.htab* %0, i32 (i8**, i8*)* nonnull @output_object_block_htab, i8* null) #6, !dbg !8541
  ret void, !dbg !8542
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @output_object_block_htab(i8** %slot, i8* %data) #5 !dbg !8543 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !8545, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i8* %data, metadata !8546, metadata !DIExpression()), !dbg !8547
  %0 = bitcast i8** %slot to %struct.object_block**, !dbg !8548
  %1 = load %struct.object_block*, %struct.object_block** %0, align 8, !dbg !8548
  tail call fastcc void @output_object_block(%struct.object_block* %1) #8, !dbg !8549
  ret i32 1, !dbg !8550
}

; Function Attrs: nounwind uwtable
define dso_local i32 @elf_record_gcc_switches(i32 %type, i8* %name) local_unnamed_addr #5 !dbg !1801 {
entry:
  call void @llvm.dbg.value(metadata i32 %type, metadata !1806, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %name, metadata !1807, metadata !DIExpression()), !dbg !8551
  switch i32 %type, label %sw.epilog435 [
    i32 0, label %sw.bb
    i32 2, label %sw.bb312
  ], !dbg !8552

sw.bb:                                            ; preds = %entry
  %0 = load i8, i8* %name, align 1, !dbg !8553
  %cmp = icmp eq i8 %0, 45, !dbg !8554
  %.b1 = load i1, i1* @elf_record_gcc_switches.previous_name_held_back, align 1, !dbg !8555
  br i1 %cmp, label %if.else197, label %if.then, !dbg !8556

if.then:                                          ; preds = %sw.bb
  br i1 %.b1, label %if.then2, label %if.else85, !dbg !8557

if.then2:                                         ; preds = %if.then
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0)) #6, !dbg !8558
  %idx.ext = and i64 %call, 4294967295, !dbg !8559
  %add.ptr = getelementptr inbounds [1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 %idx.ext, !dbg !8559
  %sub = sub nsw i64 1024, %idx.ext, !dbg !8560
  %call5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %add.ptr, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.166, i64 0, i64 0), i8* %name) #6, !dbg !8561
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), metadata !1814, metadata !DIExpression()), !dbg !8562
  %call6 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0)) #6, !dbg !8563
  %add.ptr7 = getelementptr inbounds [1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 %call6, !dbg !8563
  call void @llvm.dbg.value(metadata i8* %add.ptr7, metadata !1816, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* null, metadata !1817, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 0, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %for.cond, !dbg !8563

for.cond:                                         ; preds = %for.inc74, %if.then2
  %bytes_in_chunk.0 = phi i32 [ 0, %if.then2 ], [ %bytes_in_chunk.4, %for.inc74 ], !dbg !8562
  %last_null.0 = phi i8* [ null, %if.then2 ], [ %p.1, %for.inc74 ], !dbg !8562
  %_ascii_bytes.0 = phi i8* [ getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), %if.then2 ], [ %incdec.ptr75, %for.inc74 ], !dbg !8562
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.0, metadata !1814, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %last_null.0, metadata !1817, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0, metadata !1818, metadata !DIExpression()), !dbg !8562
  %cmp8 = icmp ult i8* %_ascii_bytes.0, %add.ptr7, !dbg !8564
  br i1 %cmp8, label %for.body, label %for.end76, !dbg !8565

for.body:                                         ; preds = %for.cond
  %cmp10 = icmp ugt i32 %bytes_in_chunk.0, 59, !dbg !8566
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !8568

if.then12:                                        ; preds = %for.body
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8569
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8569
  call void @llvm.dbg.value(metadata i32 0, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %if.end, !dbg !8569

if.end:                                           ; preds = %if.then12, %for.body
  %bytes_in_chunk.1 = phi i32 [ 0, %if.then12 ], [ %bytes_in_chunk.0, %for.body ], !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.1, metadata !1818, metadata !DIExpression()), !dbg !8562
  %cmp14 = icmp ugt i8* %_ascii_bytes.0, %last_null.0, !dbg !8571
  br i1 %cmp14, label %for.cond17.preheader, label %if.end24, !dbg !8568

for.cond17.preheader:                             ; preds = %if.end
  br label %for.cond17, !dbg !8573

for.cond17:                                       ; preds = %for.cond17.preheader, %for.inc
  %p.0 = phi i8* [ %incdec.ptr, %for.inc ], [ %_ascii_bytes.0, %for.cond17.preheader ], !dbg !8576
  call void @llvm.dbg.value(metadata i8* %p.0, metadata !1819, metadata !DIExpression()), !dbg !8577
  %cmp18 = icmp ult i8* %p.0, %add.ptr7, !dbg !8578
  br i1 %cmp18, label %land.rhs, label %if.end24.loopexit, !dbg !8578

land.rhs:                                         ; preds = %for.cond17
  %2 = load i8, i8* %p.0, align 1, !dbg !8578
  %cmp21 = icmp eq i8 %2, 0, !dbg !8578
  br i1 %cmp21, label %if.end24.loopexit, label %for.inc, !dbg !8573

for.inc:                                          ; preds = %land.rhs
  %incdec.ptr = getelementptr inbounds i8, i8* %p.0, i64 1, !dbg !8578
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !1819, metadata !DIExpression()), !dbg !8577
  br label %for.cond17, !dbg !8578, !llvm.loop !8580

if.end24.loopexit:                                ; preds = %for.cond17, %land.rhs
  %p.0.lcssa = phi i8* [ %p.0, %for.cond17 ], [ %p.0, %land.rhs ], !dbg !8576
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %p.0.lcssa, metadata !1819, metadata !DIExpression()), !dbg !8577
  br label %if.end24, !dbg !8581

if.end24:                                         ; preds = %if.end24.loopexit, %if.end
  %p.1 = phi i8* [ %last_null.0, %if.end ], [ %p.0.lcssa, %if.end24.loopexit ], !dbg !8582
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !1817, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !1819, metadata !DIExpression()), !dbg !8577
  %cmp25 = icmp ult i8* %p.1, %add.ptr7, !dbg !8581
  br i1 %cmp25, label %land.lhs.true, label %if.else52, !dbg !8581

land.lhs.true:                                    ; preds = %if.end24
  %sub.ptr.lhs.cast = ptrtoint i8* %p.1 to i64, !dbg !8581
  %sub.ptr.rhs.cast = ptrtoint i8* %_ascii_bytes.0 to i64, !dbg !8581
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8581
  %cmp27 = icmp slt i64 %sub.ptr.sub, 257, !dbg !8581
  br i1 %cmp27, label %if.then29, label %if.else52, !dbg !8568

if.then29:                                        ; preds = %land.lhs.true
  %cmp30 = icmp eq i32 %bytes_in_chunk.1, 0, !dbg !8583
  br i1 %cmp30, label %do.body35, label %if.then32, !dbg !8585

if.then32:                                        ; preds = %if.then29
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8586
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8586
  call void @llvm.dbg.value(metadata i32 0, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %do.body35, !dbg !8586

do.body35:                                        ; preds = %if.then29, %if.then32
  call void @llvm.dbg.value(metadata i32 0, metadata !1818, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.0, metadata !1823, metadata !DIExpression()), !dbg !8588
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8589
  %call36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !8589
  br label %for.cond37, !dbg !8589

for.cond37:                                       ; preds = %for.inc48, %do.body35
  %_limited_str.0 = phi i8* [ %_ascii_bytes.0, %do.body35 ], [ %incdec.ptr49, %for.inc48 ], !dbg !8588
  call void @llvm.dbg.value(metadata i8* %_limited_str.0, metadata !1823, metadata !DIExpression()), !dbg !8588
  %5 = load i8, i8* %_limited_str.0, align 1, !dbg !8590
  %conv38 = zext i8 %5 to i32, !dbg !8590
  call void @llvm.dbg.value(metadata i32 %conv38, metadata !1827, metadata !DIExpression()), !dbg !8588
  %tobool39 = icmp eq i8 %5, 0, !dbg !8591
  br i1 %tobool39, label %for.end50, label %for.body40, !dbg !8591

for.body40:                                       ; preds = %for.cond37
  %idxprom = zext i8 %5 to i64, !dbg !8592
  %arrayidx = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom, !dbg !8592
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8592
  %conv41 = sext i8 %6 to i32, !dbg !8592
  call void @llvm.dbg.value(metadata i32 %conv41, metadata !1828, metadata !DIExpression()), !dbg !8593
  switch i32 %conv41, label %sw.default [
    i32 0, label %sw.bb42
    i32 1, label %sw.bb44
  ], !dbg !8592

sw.bb42:                                          ; preds = %for.body40
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8594
  %call43 = tail call i32 @putc(i32 %conv38, %struct._IO_FILE* %7) #6, !dbg !8594
  br label %for.inc48, !dbg !8594

sw.bb44:                                          ; preds = %for.body40
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8594
  %call45 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv38) #6, !dbg !8594
  br label %for.inc48, !dbg !8594

sw.default:                                       ; preds = %for.body40
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8594
  %call46 = tail call i32 @putc(i32 92, %struct._IO_FILE* %9) #6, !dbg !8594
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8594
  %call47 = tail call i32 @putc(i32 %conv41, %struct._IO_FILE* %10) #6, !dbg !8594
  br label %for.inc48, !dbg !8594

for.inc48:                                        ; preds = %sw.bb42, %sw.bb44, %sw.default
  %incdec.ptr49 = getelementptr inbounds i8, i8* %_limited_str.0, i64 1, !dbg !8590
  call void @llvm.dbg.value(metadata i8* %incdec.ptr49, metadata !1823, metadata !DIExpression()), !dbg !8588
  br label %for.cond37, !dbg !8590, !llvm.loop !8596

for.end50:                                        ; preds = %for.cond37
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8589
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8589
  call void @llvm.dbg.value(metadata i8* %p.1, metadata !1814, metadata !DIExpression()), !dbg !8562
  br label %for.inc74, !dbg !8585

if.else52:                                        ; preds = %land.lhs.true, %if.end24
  %cmp55 = icmp eq i32 %bytes_in_chunk.1, 0, !dbg !8597
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !8599

if.then57:                                        ; preds = %if.else52
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8597
  %call58 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !8597
  br label %if.end59, !dbg !8597

if.end59:                                         ; preds = %if.then57, %if.else52
  %13 = load i8, i8* %_ascii_bytes.0, align 1, !dbg !8599
  %conv60 = zext i8 %13 to i32, !dbg !8599
  call void @llvm.dbg.value(metadata i32 %conv60, metadata !1834, metadata !DIExpression()), !dbg !8600
  %idxprom61 = zext i8 %13 to i64, !dbg !8599
  %arrayidx62 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom61, !dbg !8599
  %14 = load i8, i8* %arrayidx62, align 1, !dbg !8599
  %conv63 = sext i8 %14 to i32, !dbg !8599
  call void @llvm.dbg.value(metadata i32 %conv63, metadata !1832, metadata !DIExpression()), !dbg !8600
  switch i32 %conv63, label %sw.default68 [
    i32 0, label %sw.bb64
    i32 1, label %sw.bb66
  ], !dbg !8599

sw.bb64:                                          ; preds = %if.end59
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8601
  %call65 = tail call i32 @putc(i32 %conv60, %struct._IO_FILE* %15) #6, !dbg !8601
  %inc = add i32 %bytes_in_chunk.1, 1, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %for.inc74, !dbg !8601

sw.bb66:                                          ; preds = %if.end59
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8601
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv60) #6, !dbg !8601
  %add = add i32 %bytes_in_chunk.1, 4, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %add, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %for.inc74, !dbg !8601

sw.default68:                                     ; preds = %if.end59
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8601
  %call69 = tail call i32 @putc(i32 92, %struct._IO_FILE* %17) #6, !dbg !8601
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8601
  %call70 = tail call i32 @putc(i32 %conv63, %struct._IO_FILE* %18) #6, !dbg !8601
  %add71 = add i32 %bytes_in_chunk.1, 2, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %add71, metadata !1818, metadata !DIExpression()), !dbg !8562
  br label %for.inc74, !dbg !8601

for.inc74:                                        ; preds = %for.end50, %sw.default68, %sw.bb66, %sw.bb64
  %bytes_in_chunk.4 = phi i32 [ 0, %for.end50 ], [ %add71, %sw.default68 ], [ %add, %sw.bb66 ], [ %inc, %sw.bb64 ], !dbg !8603
  %_ascii_bytes.1 = phi i8* [ %p.1, %for.end50 ], [ %_ascii_bytes.0, %sw.default68 ], [ %_ascii_bytes.0, %sw.bb66 ], [ %_ascii_bytes.0, %sw.bb64 ], !dbg !8562
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes.1, metadata !1814, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.4, metadata !1818, metadata !DIExpression()), !dbg !8562
  %incdec.ptr75 = getelementptr inbounds i8, i8* %_ascii_bytes.1, i64 1, !dbg !8564
  call void @llvm.dbg.value(metadata i8* %incdec.ptr75, metadata !1814, metadata !DIExpression()), !dbg !8562
  br label %for.cond, !dbg !8564, !llvm.loop !8604

for.end76:                                        ; preds = %for.cond
  %bytes_in_chunk.0.lcssa = phi i32 [ %bytes_in_chunk.0, %for.cond ], !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk.0.lcssa, metadata !1818, metadata !DIExpression()), !dbg !8562
  %cmp77 = icmp eq i32 %bytes_in_chunk.0.lcssa, 0, !dbg !8605
  br i1 %cmp77, label %do.end83, label %if.then79, !dbg !8563

if.then79:                                        ; preds = %for.end76
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8605
  %call80 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8605
  br label %do.end83, !dbg !8605

do.end83:                                         ; preds = %for.end76, %if.then79
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8607
  %call84 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 1) #6, !dbg !8607
  store i1 false, i1* @elf_record_gcc_switches.previous_name_held_back, align 1, !dbg !8608
  br label %sw.epilog435, !dbg !8609

if.else85:                                        ; preds = %if.then
  %call86 = tail call i8* @strncpy(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), i8* %name, i64 1024) #6, !dbg !8610
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), metadata !1835, metadata !DIExpression()), !dbg !8611
  %call90 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0)) #6, !dbg !8612
  %add.ptr91 = getelementptr inbounds [1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 %call90, !dbg !8612
  call void @llvm.dbg.value(metadata i8* %add.ptr91, metadata !1838, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i8* null, metadata !1839, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 0, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %for.cond94, !dbg !8612

for.cond94:                                       ; preds = %for.inc185, %if.else85
  %bytes_in_chunk93.0 = phi i32 [ 0, %if.else85 ], [ %bytes_in_chunk93.4, %for.inc185 ], !dbg !8611
  %last_null92.0 = phi i8* [ null, %if.else85 ], [ %p98.1, %for.inc185 ], !dbg !8611
  %_ascii_bytes88.0 = phi i8* [ getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), %if.else85 ], [ %incdec.ptr186, %for.inc185 ], !dbg !8611
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes88.0, metadata !1835, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i8* %last_null92.0, metadata !1839, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.0, metadata !1840, metadata !DIExpression()), !dbg !8611
  %cmp95 = icmp ult i8* %_ascii_bytes88.0, %add.ptr91, !dbg !8613
  br i1 %cmp95, label %for.body97, label %for.end187, !dbg !8614

for.body97:                                       ; preds = %for.cond94
  %cmp99 = icmp ugt i32 %bytes_in_chunk93.0, 59, !dbg !8615
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !8617

if.then101:                                       ; preds = %for.body97
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8618
  %call102 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8618
  call void @llvm.dbg.value(metadata i32 0, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %if.end103, !dbg !8618

if.end103:                                        ; preds = %if.then101, %for.body97
  %bytes_in_chunk93.1 = phi i32 [ 0, %if.then101 ], [ %bytes_in_chunk93.0, %for.body97 ], !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.1, metadata !1840, metadata !DIExpression()), !dbg !8611
  %cmp104 = icmp ugt i8* %_ascii_bytes88.0, %last_null92.0, !dbg !8620
  br i1 %cmp104, label %for.cond107.preheader, label %if.end120, !dbg !8617

for.cond107.preheader:                            ; preds = %if.end103
  br label %for.cond107, !dbg !8622

for.cond107:                                      ; preds = %for.cond107.preheader, %for.inc116
  %p98.0 = phi i8* [ %incdec.ptr117, %for.inc116 ], [ %_ascii_bytes88.0, %for.cond107.preheader ], !dbg !8625
  call void @llvm.dbg.value(metadata i8* %p98.0, metadata !1841, metadata !DIExpression()), !dbg !8626
  %cmp108 = icmp ult i8* %p98.0, %add.ptr91, !dbg !8627
  br i1 %cmp108, label %land.rhs110, label %if.end120.loopexit, !dbg !8627

land.rhs110:                                      ; preds = %for.cond107
  %22 = load i8, i8* %p98.0, align 1, !dbg !8627
  %cmp112 = icmp eq i8 %22, 0, !dbg !8627
  br i1 %cmp112, label %if.end120.loopexit, label %for.inc116, !dbg !8622

for.inc116:                                       ; preds = %land.rhs110
  %incdec.ptr117 = getelementptr inbounds i8, i8* %p98.0, i64 1, !dbg !8627
  call void @llvm.dbg.value(metadata i8* %incdec.ptr117, metadata !1841, metadata !DIExpression()), !dbg !8626
  br label %for.cond107, !dbg !8627, !llvm.loop !8629

if.end120.loopexit:                               ; preds = %for.cond107, %land.rhs110
  %p98.0.lcssa = phi i8* [ %p98.0, %for.cond107 ], [ %p98.0, %land.rhs110 ], !dbg !8625
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %p98.0.lcssa, metadata !1841, metadata !DIExpression()), !dbg !8626
  br label %if.end120, !dbg !8630

if.end120:                                        ; preds = %if.end120.loopexit, %if.end103
  %p98.1 = phi i8* [ %last_null92.0, %if.end103 ], [ %p98.0.lcssa, %if.end120.loopexit ], !dbg !8631
  call void @llvm.dbg.value(metadata i8* %p98.1, metadata !1839, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i8* %p98.1, metadata !1841, metadata !DIExpression()), !dbg !8626
  %cmp121 = icmp ult i8* %p98.1, %add.ptr91, !dbg !8630
  br i1 %cmp121, label %land.lhs.true123, label %if.else161, !dbg !8630

land.lhs.true123:                                 ; preds = %if.end120
  %sub.ptr.lhs.cast124 = ptrtoint i8* %p98.1 to i64, !dbg !8630
  %sub.ptr.rhs.cast125 = ptrtoint i8* %_ascii_bytes88.0 to i64, !dbg !8630
  %sub.ptr.sub126 = sub i64 %sub.ptr.lhs.cast124, %sub.ptr.rhs.cast125, !dbg !8630
  %cmp127 = icmp slt i64 %sub.ptr.sub126, 257, !dbg !8630
  br i1 %cmp127, label %if.then129, label %if.else161, !dbg !8617

if.then129:                                       ; preds = %land.lhs.true123
  %cmp130 = icmp eq i32 %bytes_in_chunk93.1, 0, !dbg !8632
  br i1 %cmp130, label %do.body135, label %if.then132, !dbg !8634

if.then132:                                       ; preds = %if.then129
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8635
  %call133 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8635
  call void @llvm.dbg.value(metadata i32 0, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %do.body135, !dbg !8635

do.body135:                                       ; preds = %if.then129, %if.then132
  call void @llvm.dbg.value(metadata i32 0, metadata !1840, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes88.0, metadata !1845, metadata !DIExpression()), !dbg !8637
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8638
  %call138 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !8638
  br label %for.cond139, !dbg !8638

for.cond139:                                      ; preds = %for.inc155, %do.body135
  %_limited_str136.0 = phi i8* [ %_ascii_bytes88.0, %do.body135 ], [ %incdec.ptr156, %for.inc155 ], !dbg !8637
  call void @llvm.dbg.value(metadata i8* %_limited_str136.0, metadata !1845, metadata !DIExpression()), !dbg !8637
  %25 = load i8, i8* %_limited_str136.0, align 1, !dbg !8639
  %conv140 = zext i8 %25 to i32, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %conv140, metadata !1849, metadata !DIExpression()), !dbg !8637
  %tobool141 = icmp eq i8 %25, 0, !dbg !8640
  br i1 %tobool141, label %for.end157, label %for.body142, !dbg !8640

for.body142:                                      ; preds = %for.cond139
  %idxprom144 = zext i8 %25 to i64, !dbg !8641
  %arrayidx145 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom144, !dbg !8641
  %26 = load i8, i8* %arrayidx145, align 1, !dbg !8641
  %conv146 = sext i8 %26 to i32, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %conv146, metadata !1850, metadata !DIExpression()), !dbg !8642
  switch i32 %conv146, label %sw.default151 [
    i32 0, label %sw.bb147
    i32 1, label %sw.bb149
  ], !dbg !8641

sw.bb147:                                         ; preds = %for.body142
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8643
  %call148 = tail call i32 @putc(i32 %conv140, %struct._IO_FILE* %27) #6, !dbg !8643
  br label %for.inc155, !dbg !8643

sw.bb149:                                         ; preds = %for.body142
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8643
  %call150 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv140) #6, !dbg !8643
  br label %for.inc155, !dbg !8643

sw.default151:                                    ; preds = %for.body142
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8643
  %call152 = tail call i32 @putc(i32 92, %struct._IO_FILE* %29) #6, !dbg !8643
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8643
  %call153 = tail call i32 @putc(i32 %conv146, %struct._IO_FILE* %30) #6, !dbg !8643
  br label %for.inc155, !dbg !8643

for.inc155:                                       ; preds = %sw.bb147, %sw.bb149, %sw.default151
  %incdec.ptr156 = getelementptr inbounds i8, i8* %_limited_str136.0, i64 1, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %incdec.ptr156, metadata !1845, metadata !DIExpression()), !dbg !8637
  br label %for.cond139, !dbg !8639, !llvm.loop !8645

for.end157:                                       ; preds = %for.cond139
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8638
  %call158 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8638
  call void @llvm.dbg.value(metadata i8* %p98.1, metadata !1835, metadata !DIExpression()), !dbg !8611
  br label %for.inc185, !dbg !8634

if.else161:                                       ; preds = %land.lhs.true123, %if.end120
  %cmp164 = icmp eq i32 %bytes_in_chunk93.1, 0, !dbg !8646
  br i1 %cmp164, label %if.then166, label %if.end168, !dbg !8648

if.then166:                                       ; preds = %if.else161
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8646
  %call167 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !8646
  br label %if.end168, !dbg !8646

if.end168:                                        ; preds = %if.then166, %if.else161
  %33 = load i8, i8* %_ascii_bytes88.0, align 1, !dbg !8648
  %conv169 = zext i8 %33 to i32, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %conv169, metadata !1856, metadata !DIExpression()), !dbg !8649
  %idxprom170 = zext i8 %33 to i64, !dbg !8648
  %arrayidx171 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom170, !dbg !8648
  %34 = load i8, i8* %arrayidx171, align 1, !dbg !8648
  %conv172 = sext i8 %34 to i32, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %conv172, metadata !1854, metadata !DIExpression()), !dbg !8649
  switch i32 %conv172, label %sw.default179 [
    i32 0, label %sw.bb173
    i32 1, label %sw.bb176
  ], !dbg !8648

sw.bb173:                                         ; preds = %if.end168
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8650
  %call174 = tail call i32 @putc(i32 %conv169, %struct._IO_FILE* %35) #6, !dbg !8650
  %inc175 = add i32 %bytes_in_chunk93.1, 1, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %inc175, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %for.inc185, !dbg !8650

sw.bb176:                                         ; preds = %if.end168
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8650
  %call177 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv169) #6, !dbg !8650
  %add178 = add i32 %bytes_in_chunk93.1, 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %add178, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %for.inc185, !dbg !8650

sw.default179:                                    ; preds = %if.end168
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8650
  %call180 = tail call i32 @putc(i32 92, %struct._IO_FILE* %37) #6, !dbg !8650
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8650
  %call181 = tail call i32 @putc(i32 %conv172, %struct._IO_FILE* %38) #6, !dbg !8650
  %add182 = add i32 %bytes_in_chunk93.1, 2, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %add182, metadata !1840, metadata !DIExpression()), !dbg !8611
  br label %for.inc185, !dbg !8650

for.inc185:                                       ; preds = %for.end157, %sw.default179, %sw.bb176, %sw.bb173
  %bytes_in_chunk93.4 = phi i32 [ 0, %for.end157 ], [ %add182, %sw.default179 ], [ %add178, %sw.bb176 ], [ %inc175, %sw.bb173 ], !dbg !8652
  %_ascii_bytes88.1 = phi i8* [ %p98.1, %for.end157 ], [ %_ascii_bytes88.0, %sw.default179 ], [ %_ascii_bytes88.0, %sw.bb176 ], [ %_ascii_bytes88.0, %sw.bb173 ], !dbg !8611
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes88.1, metadata !1835, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.4, metadata !1840, metadata !DIExpression()), !dbg !8611
  %incdec.ptr186 = getelementptr inbounds i8, i8* %_ascii_bytes88.1, i64 1, !dbg !8613
  call void @llvm.dbg.value(metadata i8* %incdec.ptr186, metadata !1835, metadata !DIExpression()), !dbg !8611
  br label %for.cond94, !dbg !8613, !llvm.loop !8653

for.end187:                                       ; preds = %for.cond94
  %bytes_in_chunk93.0.lcssa = phi i32 [ %bytes_in_chunk93.0, %for.cond94 ], !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.0.lcssa, metadata !1840, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.0.lcssa, metadata !1840, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk93.0.lcssa, metadata !1840, metadata !DIExpression()), !dbg !8611
  %cmp188 = icmp eq i32 %bytes_in_chunk93.0.lcssa, 0, !dbg !8654
  br i1 %cmp188, label %do.end194, label %if.then190, !dbg !8612

if.then190:                                       ; preds = %for.end187
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8654
  %call191 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8654
  br label %do.end194, !dbg !8654

do.end194:                                        ; preds = %for.end187, %if.then190
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8656
  %call195 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 1) #6, !dbg !8656
  br label %sw.epilog435

if.else197:                                       ; preds = %sw.bb
  br i1 %.b1, label %do.body200, label %if.end309, !dbg !8657

do.body200:                                       ; preds = %if.else197
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), metadata !1857, metadata !DIExpression()), !dbg !8658
  %call203 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0)) #6, !dbg !8659
  %add.ptr204 = getelementptr inbounds [1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 %call203, !dbg !8659
  call void @llvm.dbg.value(metadata i8* %add.ptr204, metadata !1862, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* null, metadata !1863, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 0, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %for.cond207, !dbg !8659

for.cond207:                                      ; preds = %for.inc298, %do.body200
  %_ascii_bytes201.0 = phi i8* [ getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), %do.body200 ], [ %incdec.ptr299, %for.inc298 ], !dbg !8658
  %last_null205.0 = phi i8* [ null, %do.body200 ], [ %last_null205.1, %for.inc298 ], !dbg !8658
  %bytes_in_chunk206.0 = phi i32 [ 0, %do.body200 ], [ %bytes_in_chunk206.4, %for.inc298 ], !dbg !8658
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.0, metadata !1864, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %last_null205.0, metadata !1863, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes201.0, metadata !1857, metadata !DIExpression()), !dbg !8658
  %cmp208 = icmp ult i8* %_ascii_bytes201.0, %add.ptr204, !dbg !8660
  br i1 %cmp208, label %for.body210, label %for.end300, !dbg !8661

for.body210:                                      ; preds = %for.cond207
  %cmp212 = icmp ugt i32 %bytes_in_chunk206.0, 59, !dbg !8662
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !8664

if.then214:                                       ; preds = %for.body210
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8665
  %call215 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8665
  call void @llvm.dbg.value(metadata i32 0, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %if.end216, !dbg !8665

if.end216:                                        ; preds = %if.then214, %for.body210
  %bytes_in_chunk206.1 = phi i32 [ 0, %if.then214 ], [ %bytes_in_chunk206.0, %for.body210 ], !dbg !8658
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.1, metadata !1864, metadata !DIExpression()), !dbg !8658
  %cmp217 = icmp ugt i8* %_ascii_bytes201.0, %last_null205.0, !dbg !8667
  br i1 %cmp217, label %for.cond220.preheader, label %if.end233, !dbg !8664

for.cond220.preheader:                            ; preds = %if.end216
  br label %for.cond220, !dbg !8669

for.cond220:                                      ; preds = %for.cond220.preheader, %for.inc229
  %p211.0 = phi i8* [ %incdec.ptr230, %for.inc229 ], [ %_ascii_bytes201.0, %for.cond220.preheader ], !dbg !8672
  call void @llvm.dbg.value(metadata i8* %p211.0, metadata !1865, metadata !DIExpression()), !dbg !8673
  %cmp221 = icmp ult i8* %p211.0, %add.ptr204, !dbg !8674
  br i1 %cmp221, label %land.rhs223, label %if.end233.loopexit, !dbg !8674

land.rhs223:                                      ; preds = %for.cond220
  %42 = load i8, i8* %p211.0, align 1, !dbg !8674
  %cmp225 = icmp eq i8 %42, 0, !dbg !8674
  br i1 %cmp225, label %if.end233.loopexit, label %for.inc229, !dbg !8669

for.inc229:                                       ; preds = %land.rhs223
  %incdec.ptr230 = getelementptr inbounds i8, i8* %p211.0, i64 1, !dbg !8674
  call void @llvm.dbg.value(metadata i8* %incdec.ptr230, metadata !1865, metadata !DIExpression()), !dbg !8673
  br label %for.cond220, !dbg !8674, !llvm.loop !8676

if.end233.loopexit:                               ; preds = %for.cond220, %land.rhs223
  %p211.0.lcssa = phi i8* [ %p211.0, %for.cond220 ], [ %p211.0, %land.rhs223 ], !dbg !8672
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %p211.0.lcssa, metadata !1865, metadata !DIExpression()), !dbg !8673
  br label %if.end233, !dbg !8677

if.end233:                                        ; preds = %if.end233.loopexit, %if.end216
  %last_null205.1 = phi i8* [ %last_null205.0, %if.end216 ], [ %p211.0.lcssa, %if.end233.loopexit ], !dbg !8658
  call void @llvm.dbg.value(metadata i8* %last_null205.1, metadata !1865, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8* %last_null205.1, metadata !1863, metadata !DIExpression()), !dbg !8658
  %cmp234 = icmp ult i8* %last_null205.1, %add.ptr204, !dbg !8677
  br i1 %cmp234, label %land.lhs.true236, label %if.else274, !dbg !8677

land.lhs.true236:                                 ; preds = %if.end233
  %sub.ptr.lhs.cast237 = ptrtoint i8* %last_null205.1 to i64, !dbg !8677
  %sub.ptr.rhs.cast238 = ptrtoint i8* %_ascii_bytes201.0 to i64, !dbg !8677
  %sub.ptr.sub239 = sub i64 %sub.ptr.lhs.cast237, %sub.ptr.rhs.cast238, !dbg !8677
  %cmp240 = icmp slt i64 %sub.ptr.sub239, 257, !dbg !8677
  br i1 %cmp240, label %if.then242, label %if.else274, !dbg !8664

if.then242:                                       ; preds = %land.lhs.true236
  %cmp243 = icmp eq i32 %bytes_in_chunk206.1, 0, !dbg !8678
  br i1 %cmp243, label %do.body248, label %if.then245, !dbg !8680

if.then245:                                       ; preds = %if.then242
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8681
  %call246 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8681
  call void @llvm.dbg.value(metadata i32 0, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %do.body248, !dbg !8681

do.body248:                                       ; preds = %if.then242, %if.then245
  call void @llvm.dbg.value(metadata i32 0, metadata !1864, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes201.0, metadata !1869, metadata !DIExpression()), !dbg !8683
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8684
  %call251 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !8684
  br label %for.cond252, !dbg !8684

for.cond252:                                      ; preds = %for.inc268, %do.body248
  %_limited_str249.0 = phi i8* [ %_ascii_bytes201.0, %do.body248 ], [ %incdec.ptr269, %for.inc268 ], !dbg !8683
  call void @llvm.dbg.value(metadata i8* %_limited_str249.0, metadata !1869, metadata !DIExpression()), !dbg !8683
  %45 = load i8, i8* %_limited_str249.0, align 1, !dbg !8685
  %conv253 = zext i8 %45 to i32, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %conv253, metadata !1873, metadata !DIExpression()), !dbg !8683
  %tobool254 = icmp eq i8 %45, 0, !dbg !8686
  br i1 %tobool254, label %for.end270, label %for.body255, !dbg !8686

for.body255:                                      ; preds = %for.cond252
  %idxprom257 = zext i8 %45 to i64, !dbg !8687
  %arrayidx258 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom257, !dbg !8687
  %46 = load i8, i8* %arrayidx258, align 1, !dbg !8687
  %conv259 = sext i8 %46 to i32, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %conv259, metadata !1874, metadata !DIExpression()), !dbg !8688
  switch i32 %conv259, label %sw.default264 [
    i32 0, label %sw.bb260
    i32 1, label %sw.bb262
  ], !dbg !8687

sw.bb260:                                         ; preds = %for.body255
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8689
  %call261 = tail call i32 @putc(i32 %conv253, %struct._IO_FILE* %47) #6, !dbg !8689
  br label %for.inc268, !dbg !8689

sw.bb262:                                         ; preds = %for.body255
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8689
  %call263 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv253) #6, !dbg !8689
  br label %for.inc268, !dbg !8689

sw.default264:                                    ; preds = %for.body255
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8689
  %call265 = tail call i32 @putc(i32 92, %struct._IO_FILE* %49) #6, !dbg !8689
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8689
  %call266 = tail call i32 @putc(i32 %conv259, %struct._IO_FILE* %50) #6, !dbg !8689
  br label %for.inc268, !dbg !8689

for.inc268:                                       ; preds = %sw.bb260, %sw.bb262, %sw.default264
  %incdec.ptr269 = getelementptr inbounds i8, i8* %_limited_str249.0, i64 1, !dbg !8685
  call void @llvm.dbg.value(metadata i8* %incdec.ptr269, metadata !1869, metadata !DIExpression()), !dbg !8683
  br label %for.cond252, !dbg !8685, !llvm.loop !8691

for.end270:                                       ; preds = %for.cond252
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8684
  %call271 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8684
  call void @llvm.dbg.value(metadata i8* %last_null205.1, metadata !1857, metadata !DIExpression()), !dbg !8658
  br label %for.inc298, !dbg !8680

if.else274:                                       ; preds = %land.lhs.true236, %if.end233
  %cmp277 = icmp eq i32 %bytes_in_chunk206.1, 0, !dbg !8692
  br i1 %cmp277, label %if.then279, label %if.end281, !dbg !8694

if.then279:                                       ; preds = %if.else274
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8692
  %call280 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !8692
  br label %if.end281, !dbg !8692

if.end281:                                        ; preds = %if.then279, %if.else274
  %53 = load i8, i8* %_ascii_bytes201.0, align 1, !dbg !8694
  %conv282 = zext i8 %53 to i32, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %conv282, metadata !1880, metadata !DIExpression()), !dbg !8695
  %idxprom283 = zext i8 %53 to i64, !dbg !8694
  %arrayidx284 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom283, !dbg !8694
  %54 = load i8, i8* %arrayidx284, align 1, !dbg !8694
  %conv285 = sext i8 %54 to i32, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %conv285, metadata !1878, metadata !DIExpression()), !dbg !8695
  switch i32 %conv285, label %sw.default292 [
    i32 0, label %sw.bb286
    i32 1, label %sw.bb289
  ], !dbg !8694

sw.bb286:                                         ; preds = %if.end281
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8696
  %call287 = tail call i32 @putc(i32 %conv282, %struct._IO_FILE* %55) #6, !dbg !8696
  %inc288 = add i32 %bytes_in_chunk206.1, 1, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %inc288, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %for.inc298, !dbg !8696

sw.bb289:                                         ; preds = %if.end281
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8696
  %call290 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv282) #6, !dbg !8696
  %add291 = add i32 %bytes_in_chunk206.1, 4, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %add291, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %for.inc298, !dbg !8696

sw.default292:                                    ; preds = %if.end281
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8696
  %call293 = tail call i32 @putc(i32 92, %struct._IO_FILE* %57) #6, !dbg !8696
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8696
  %call294 = tail call i32 @putc(i32 %conv285, %struct._IO_FILE* %58) #6, !dbg !8696
  %add295 = add i32 %bytes_in_chunk206.1, 2, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %add295, metadata !1864, metadata !DIExpression()), !dbg !8658
  br label %for.inc298, !dbg !8696

for.inc298:                                       ; preds = %for.end270, %sw.default292, %sw.bb289, %sw.bb286
  %_ascii_bytes201.1 = phi i8* [ %last_null205.1, %for.end270 ], [ %_ascii_bytes201.0, %sw.default292 ], [ %_ascii_bytes201.0, %sw.bb289 ], [ %_ascii_bytes201.0, %sw.bb286 ], !dbg !8658
  %bytes_in_chunk206.4 = phi i32 [ 0, %for.end270 ], [ %add295, %sw.default292 ], [ %add291, %sw.bb289 ], [ %inc288, %sw.bb286 ], !dbg !8698
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.4, metadata !1864, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes201.1, metadata !1857, metadata !DIExpression()), !dbg !8658
  %incdec.ptr299 = getelementptr inbounds i8, i8* %_ascii_bytes201.1, i64 1, !dbg !8660
  call void @llvm.dbg.value(metadata i8* %incdec.ptr299, metadata !1857, metadata !DIExpression()), !dbg !8658
  br label %for.cond207, !dbg !8660, !llvm.loop !8699

for.end300:                                       ; preds = %for.cond207
  %bytes_in_chunk206.0.lcssa = phi i32 [ %bytes_in_chunk206.0, %for.cond207 ], !dbg !8658
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.0.lcssa, metadata !1864, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.0.lcssa, metadata !1864, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk206.0.lcssa, metadata !1864, metadata !DIExpression()), !dbg !8658
  %cmp301 = icmp eq i32 %bytes_in_chunk206.0.lcssa, 0, !dbg !8700
  br i1 %cmp301, label %do.end307, label %if.then303, !dbg !8659

if.then303:                                       ; preds = %for.end300
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8700
  %call304 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8700
  br label %do.end307, !dbg !8700

do.end307:                                        ; preds = %for.end300, %if.then303
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8702
  %call308 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 1) #6, !dbg !8702
  br label %if.end309, !dbg !8703

if.end309:                                        ; preds = %do.end307, %if.else197
  %call310 = tail call i8* @strncpy(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), i8* %name, i64 1024) #6, !dbg !8704
  store i1 true, i1* @elf_record_gcc_switches.previous_name_held_back, align 1, !dbg !8705
  br label %sw.epilog435

sw.bb312:                                         ; preds = %entry
  %cmp313 = icmp eq i8* %name, null, !dbg !8706
  br i1 %cmp313, label %if.then315, label %sw.epilog435, !dbg !8707

if.then315:                                       ; preds = %sw.bb312
  %.b2 = load i1, i1* @elf_record_gcc_switches.started, align 1, !dbg !8708
  br i1 %.b2, label %if.then317, label %if.else430, !dbg !8709

if.then317:                                       ; preds = %if.then315
  %.b = load i1, i1* @elf_record_gcc_switches.previous_name_held_back, align 1, !dbg !8710
  br i1 %.b, label %do.body320, label %sw.epilog435, !dbg !8711

do.body320:                                       ; preds = %if.then317
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), metadata !1881, metadata !DIExpression()), !dbg !8712
  %call323 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0)) #6, !dbg !8713
  %add.ptr324 = getelementptr inbounds [1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 %call323, !dbg !8713
  call void @llvm.dbg.value(metadata i8* %add.ptr324, metadata !1889, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* null, metadata !1890, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 0, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %for.cond327, !dbg !8713

for.cond327:                                      ; preds = %for.inc418, %do.body320
  %_ascii_bytes321.0 = phi i8* [ getelementptr inbounds ([1024 x i8], [1024 x i8]* @elf_record_gcc_switches.buffer, i64 0, i64 0), %do.body320 ], [ %incdec.ptr419, %for.inc418 ], !dbg !8712
  %last_null325.0 = phi i8* [ null, %do.body320 ], [ %last_null325.1, %for.inc418 ], !dbg !8712
  %bytes_in_chunk326.0 = phi i32 [ 0, %do.body320 ], [ %bytes_in_chunk326.4, %for.inc418 ], !dbg !8712
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.0, metadata !1891, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %last_null325.0, metadata !1890, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes321.0, metadata !1881, metadata !DIExpression()), !dbg !8712
  %cmp328 = icmp ult i8* %_ascii_bytes321.0, %add.ptr324, !dbg !8714
  br i1 %cmp328, label %for.body330, label %for.end420, !dbg !8715

for.body330:                                      ; preds = %for.cond327
  %cmp332 = icmp ugt i32 %bytes_in_chunk326.0, 59, !dbg !8716
  br i1 %cmp332, label %if.then334, label %if.end336, !dbg !8718

if.then334:                                       ; preds = %for.body330
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8719
  %call335 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8719
  call void @llvm.dbg.value(metadata i32 0, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %if.end336, !dbg !8719

if.end336:                                        ; preds = %if.then334, %for.body330
  %bytes_in_chunk326.1 = phi i32 [ 0, %if.then334 ], [ %bytes_in_chunk326.0, %for.body330 ], !dbg !8712
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.1, metadata !1891, metadata !DIExpression()), !dbg !8712
  %cmp337 = icmp ugt i8* %_ascii_bytes321.0, %last_null325.0, !dbg !8721
  br i1 %cmp337, label %for.cond340.preheader, label %if.end353, !dbg !8718

for.cond340.preheader:                            ; preds = %if.end336
  br label %for.cond340, !dbg !8723

for.cond340:                                      ; preds = %for.cond340.preheader, %for.inc349
  %p331.0 = phi i8* [ %incdec.ptr350, %for.inc349 ], [ %_ascii_bytes321.0, %for.cond340.preheader ], !dbg !8726
  call void @llvm.dbg.value(metadata i8* %p331.0, metadata !1892, metadata !DIExpression()), !dbg !8727
  %cmp341 = icmp ult i8* %p331.0, %add.ptr324, !dbg !8728
  br i1 %cmp341, label %land.rhs343, label %if.end353.loopexit, !dbg !8728

land.rhs343:                                      ; preds = %for.cond340
  %62 = load i8, i8* %p331.0, align 1, !dbg !8728
  %cmp345 = icmp eq i8 %62, 0, !dbg !8728
  br i1 %cmp345, label %if.end353.loopexit, label %for.inc349, !dbg !8723

for.inc349:                                       ; preds = %land.rhs343
  %incdec.ptr350 = getelementptr inbounds i8, i8* %p331.0, i64 1, !dbg !8728
  call void @llvm.dbg.value(metadata i8* %incdec.ptr350, metadata !1892, metadata !DIExpression()), !dbg !8727
  br label %for.cond340, !dbg !8728, !llvm.loop !8730

if.end353.loopexit:                               ; preds = %for.cond340, %land.rhs343
  %p331.0.lcssa = phi i8* [ %p331.0, %for.cond340 ], [ %p331.0, %land.rhs343 ], !dbg !8726
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %p331.0.lcssa, metadata !1892, metadata !DIExpression()), !dbg !8727
  br label %if.end353, !dbg !8731

if.end353:                                        ; preds = %if.end353.loopexit, %if.end336
  %last_null325.1 = phi i8* [ %last_null325.0, %if.end336 ], [ %p331.0.lcssa, %if.end353.loopexit ], !dbg !8712
  call void @llvm.dbg.value(metadata i8* %last_null325.1, metadata !1892, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %last_null325.1, metadata !1890, metadata !DIExpression()), !dbg !8712
  %cmp354 = icmp ult i8* %last_null325.1, %add.ptr324, !dbg !8731
  br i1 %cmp354, label %land.lhs.true356, label %if.else394, !dbg !8731

land.lhs.true356:                                 ; preds = %if.end353
  %sub.ptr.lhs.cast357 = ptrtoint i8* %last_null325.1 to i64, !dbg !8731
  %sub.ptr.rhs.cast358 = ptrtoint i8* %_ascii_bytes321.0 to i64, !dbg !8731
  %sub.ptr.sub359 = sub i64 %sub.ptr.lhs.cast357, %sub.ptr.rhs.cast358, !dbg !8731
  %cmp360 = icmp slt i64 %sub.ptr.sub359, 257, !dbg !8731
  br i1 %cmp360, label %if.then362, label %if.else394, !dbg !8718

if.then362:                                       ; preds = %land.lhs.true356
  %cmp363 = icmp eq i32 %bytes_in_chunk326.1, 0, !dbg !8732
  br i1 %cmp363, label %do.body368, label %if.then365, !dbg !8734

if.then365:                                       ; preds = %if.then362
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8735
  %call366 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8735
  call void @llvm.dbg.value(metadata i32 0, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %do.body368, !dbg !8735

do.body368:                                       ; preds = %if.then362, %if.then365
  call void @llvm.dbg.value(metadata i32 0, metadata !1891, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes321.0, metadata !1896, metadata !DIExpression()), !dbg !8737
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8738
  %call371 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !8738
  br label %for.cond372, !dbg !8738

for.cond372:                                      ; preds = %for.inc388, %do.body368
  %_limited_str369.0 = phi i8* [ %_ascii_bytes321.0, %do.body368 ], [ %incdec.ptr389, %for.inc388 ], !dbg !8737
  call void @llvm.dbg.value(metadata i8* %_limited_str369.0, metadata !1896, metadata !DIExpression()), !dbg !8737
  %65 = load i8, i8* %_limited_str369.0, align 1, !dbg !8739
  %conv373 = zext i8 %65 to i32, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %conv373, metadata !1900, metadata !DIExpression()), !dbg !8737
  %tobool374 = icmp eq i8 %65, 0, !dbg !8740
  br i1 %tobool374, label %for.end390, label %for.body375, !dbg !8740

for.body375:                                      ; preds = %for.cond372
  %idxprom377 = zext i8 %65 to i64, !dbg !8741
  %arrayidx378 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom377, !dbg !8741
  %66 = load i8, i8* %arrayidx378, align 1, !dbg !8741
  %conv379 = sext i8 %66 to i32, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %conv379, metadata !1901, metadata !DIExpression()), !dbg !8742
  switch i32 %conv379, label %sw.default384 [
    i32 0, label %sw.bb380
    i32 1, label %sw.bb382
  ], !dbg !8741

sw.bb380:                                         ; preds = %for.body375
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8743
  %call381 = tail call i32 @putc(i32 %conv373, %struct._IO_FILE* %67) #6, !dbg !8743
  br label %for.inc388, !dbg !8743

sw.bb382:                                         ; preds = %for.body375
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8743
  %call383 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv373) #6, !dbg !8743
  br label %for.inc388, !dbg !8743

sw.default384:                                    ; preds = %for.body375
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8743
  %call385 = tail call i32 @putc(i32 92, %struct._IO_FILE* %69) #6, !dbg !8743
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8743
  %call386 = tail call i32 @putc(i32 %conv379, %struct._IO_FILE* %70) #6, !dbg !8743
  br label %for.inc388, !dbg !8743

for.inc388:                                       ; preds = %sw.bb380, %sw.bb382, %sw.default384
  %incdec.ptr389 = getelementptr inbounds i8, i8* %_limited_str369.0, i64 1, !dbg !8739
  call void @llvm.dbg.value(metadata i8* %incdec.ptr389, metadata !1896, metadata !DIExpression()), !dbg !8737
  br label %for.cond372, !dbg !8739, !llvm.loop !8745

for.end390:                                       ; preds = %for.cond372
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8738
  %call391 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8738
  call void @llvm.dbg.value(metadata i8* %last_null325.1, metadata !1881, metadata !DIExpression()), !dbg !8712
  br label %for.inc418, !dbg !8734

if.else394:                                       ; preds = %land.lhs.true356, %if.end353
  %cmp397 = icmp eq i32 %bytes_in_chunk326.1, 0, !dbg !8746
  br i1 %cmp397, label %if.then399, label %if.end401, !dbg !8748

if.then399:                                       ; preds = %if.else394
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8746
  %call400 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0)) #6, !dbg !8746
  br label %if.end401, !dbg !8746

if.end401:                                        ; preds = %if.then399, %if.else394
  %73 = load i8, i8* %_ascii_bytes321.0, align 1, !dbg !8748
  %conv402 = zext i8 %73 to i32, !dbg !8748
  call void @llvm.dbg.value(metadata i32 %conv402, metadata !1907, metadata !DIExpression()), !dbg !8749
  %idxprom403 = zext i8 %73 to i64, !dbg !8748
  %arrayidx404 = getelementptr inbounds [257 x i8], [257 x i8]* @.str.72, i64 0, i64 %idxprom403, !dbg !8748
  %74 = load i8, i8* %arrayidx404, align 1, !dbg !8748
  %conv405 = sext i8 %74 to i32, !dbg !8748
  call void @llvm.dbg.value(metadata i32 %conv405, metadata !1905, metadata !DIExpression()), !dbg !8749
  switch i32 %conv405, label %sw.default412 [
    i32 0, label %sw.bb406
    i32 1, label %sw.bb409
  ], !dbg !8748

sw.bb406:                                         ; preds = %if.end401
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8750
  %call407 = tail call i32 @putc(i32 %conv402, %struct._IO_FILE* %75) #6, !dbg !8750
  %inc408 = add i32 %bytes_in_chunk326.1, 1, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %inc408, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %for.inc418, !dbg !8750

sw.bb409:                                         ; preds = %if.end401
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8750
  %call410 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %conv402) #6, !dbg !8750
  %add411 = add i32 %bytes_in_chunk326.1, 4, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %add411, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %for.inc418, !dbg !8750

sw.default412:                                    ; preds = %if.end401
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8750
  %call413 = tail call i32 @putc(i32 92, %struct._IO_FILE* %77) #6, !dbg !8750
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8750
  %call414 = tail call i32 @putc(i32 %conv405, %struct._IO_FILE* %78) #6, !dbg !8750
  %add415 = add i32 %bytes_in_chunk326.1, 2, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %add415, metadata !1891, metadata !DIExpression()), !dbg !8712
  br label %for.inc418, !dbg !8750

for.inc418:                                       ; preds = %for.end390, %sw.default412, %sw.bb409, %sw.bb406
  %_ascii_bytes321.1 = phi i8* [ %last_null325.1, %for.end390 ], [ %_ascii_bytes321.0, %sw.default412 ], [ %_ascii_bytes321.0, %sw.bb409 ], [ %_ascii_bytes321.0, %sw.bb406 ], !dbg !8712
  %bytes_in_chunk326.4 = phi i32 [ 0, %for.end390 ], [ %add415, %sw.default412 ], [ %add411, %sw.bb409 ], [ %inc408, %sw.bb406 ], !dbg !8752
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.4, metadata !1891, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %_ascii_bytes321.1, metadata !1881, metadata !DIExpression()), !dbg !8712
  %incdec.ptr419 = getelementptr inbounds i8, i8* %_ascii_bytes321.1, i64 1, !dbg !8714
  call void @llvm.dbg.value(metadata i8* %incdec.ptr419, metadata !1881, metadata !DIExpression()), !dbg !8712
  br label %for.cond327, !dbg !8714, !llvm.loop !8753

for.end420:                                       ; preds = %for.cond327
  %bytes_in_chunk326.0.lcssa = phi i32 [ %bytes_in_chunk326.0, %for.cond327 ], !dbg !8712
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.0.lcssa, metadata !1891, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.0.lcssa, metadata !1891, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %bytes_in_chunk326.0.lcssa, metadata !1891, metadata !DIExpression()), !dbg !8712
  %cmp421 = icmp eq i32 %bytes_in_chunk326.0.lcssa, 0, !dbg !8754
  br i1 %cmp421, label %do.end427, label %if.then423, !dbg !8713

if.then423:                                       ; preds = %for.end420
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8754
  %call424 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !8754
  br label %do.end427, !dbg !8754

do.end427:                                        ; preds = %for.end420, %if.then423
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !8756
  %call428 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 1) #6, !dbg !8756
  br label %sw.epilog435, !dbg !8757

if.else430:                                       ; preds = %if.then315
  %81 = load i8*, i8** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 35), align 8, !dbg !8758
  %call431 = tail call %union.section* @get_section(i8* %81, i32 99329, %union.tree_node* null) #8, !dbg !8759
  call void @llvm.dbg.value(metadata %union.section* %call431, metadata !1908, metadata !DIExpression()), !dbg !8760
  tail call void @switch_to_section(%union.section* %call431) #8, !dbg !8761
  store i1 true, i1* @elf_record_gcc_switches.started, align 1, !dbg !8762
  br label %sw.epilog435

sw.epilog435:                                     ; preds = %if.then317, %entry, %if.else430, %do.end427, %sw.bb312, %if.end309, %do.end194, %do.end83
  ret i32 0, !dbg !8763
}

declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @strncpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @default_elf_asm_output_external(%struct._IO_FILE* %file, %union.tree_node* %decl, i8* %name) local_unnamed_addr #5 !dbg !8764 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !8768, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !8769, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* %name, metadata !8770, metadata !DIExpression()), !dbg !8771
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !8772
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8772
  %bf.load = load i64, i64* %0, align 8, !dbg !8772
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !8772
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !8772
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8774

land.lhs.true:                                    ; preds = %entry
  %1 = load i8 (%union.tree_node*)*, i8 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 49), align 8, !dbg !8775
  %call1 = tail call zeroext i8 %1(%union.tree_node* %decl) #6, !dbg !8776
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8776
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8777

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call i32 @maybe_assemble_visibility(%union.tree_node* %decl) #8, !dbg !8778
  br label %if.end, !dbg !8778

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void, !dbg !8779
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_rtx_constant_pool(i8* %x_p) #5 !dbg !8780 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8783, metadata !DIExpression()), !dbg !8785
  %cmp = icmp ne i8* %x_p, null, !dbg !8786
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !8786
  %or.cond = and i1 %cmp, %cmp1, !dbg !8786
  br i1 %or.cond, label %land.lhs.true2, label %if.end13, !dbg !8786

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !8786
  %tobool = icmp eq i32 %call, 0, !dbg !8786
  br i1 %tobool, label %do.body, label %if.end13, !dbg !8788

do.body:                                          ; preds = %land.lhs.true2
  %first = bitcast i8* %x_p to %struct.constant_descriptor_rtx**, !dbg !8789
  %0 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %first, align 8, !dbg !8789
  %cmp3 = icmp eq %struct.constant_descriptor_rtx* %0, null, !dbg !8789
  br i1 %cmp3, label %do.body6, label %if.then4, !dbg !8793

if.then4:                                         ; preds = %do.body
  %1 = bitcast %struct.constant_descriptor_rtx* %0 to i8*, !dbg !8793
  tail call void @gt_ggc_mx_constant_descriptor_rtx(i8* nonnull %1) #8, !dbg !8789
  br label %do.body6, !dbg !8789

do.body6:                                         ; preds = %do.body, %if.then4
  %last = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !8794
  %2 = bitcast i8* %last to %struct.constant_descriptor_rtx**, !dbg !8794
  %3 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %2, align 8, !dbg !8794
  %cmp7 = icmp eq %struct.constant_descriptor_rtx* %3, null, !dbg !8794
  br i1 %cmp7, label %do.end12, label %if.then8, !dbg !8797

if.then8:                                         ; preds = %do.body6
  %4 = bitcast %struct.constant_descriptor_rtx* %3 to i8*, !dbg !8797
  tail call void @gt_ggc_mx_constant_descriptor_rtx(i8* nonnull %4) #8, !dbg !8794
  br label %do.end12, !dbg !8794

do.end12:                                         ; preds = %do.body6, %if.then8
  %const_rtx_htab = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !8798
  %5 = bitcast i8* %const_rtx_htab to i8**, !dbg !8798
  %6 = load i8*, i8** %5, align 8, !dbg !8798
  tail call void @gt_ggc_m_P23constant_descriptor_rtx4htab(i8* %6) #8, !dbg !8799
  br label %if.end13, !dbg !8800

if.end13:                                         ; preds = %land.lhs.true2, %do.end12, %entry
  ret void, !dbg !8801
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_constant_descriptor_rtx(i8* %x_p) local_unnamed_addr #5 !dbg !8802 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8804, metadata !DIExpression()), !dbg !8807
  %0 = bitcast i8* %x_p to %struct.constant_descriptor_rtx*, !dbg !8808
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %0, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %0, metadata !8806, metadata !DIExpression()), !dbg !8807
  br label %while.cond, !dbg !8809

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !8807
  %xlimit.0 = phi %struct.constant_descriptor_rtx* [ %0, %entry ], [ %2, %while.body ], !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0, metadata !8806, metadata !DIExpression()), !dbg !8807
  %cmp = icmp ne %struct.constant_descriptor_rtx* %xlimit.0, null, !dbg !8810
  %cmp1 = icmp ne i8* %1, inttoptr (i64 1 to i8*), !dbg !8810
  %or.cond = and i1 %cmp, %cmp1, !dbg !8810
  br i1 %or.cond, label %land.rhs, label %while.end, !dbg !8810

land.rhs:                                         ; preds = %while.cond
  %call = tail call i32 @ggc_set_mark(i8* %1) #6, !dbg !8810
  %tobool = icmp eq i32 %call, 0, !dbg !8810
  br i1 %tobool, label %while.body, label %while.end, !dbg !8809

while.body:                                       ; preds = %land.rhs
  %next = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %xlimit.0, i64 0, i32 0, !dbg !8811
  %2 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next, align 8, !dbg !8811
  %3 = bitcast %struct.constant_descriptor_rtx* %2 to i8*, !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %2, metadata !8806, metadata !DIExpression()), !dbg !8807
  br label %while.cond, !dbg !8809, !llvm.loop !8812

while.end:                                        ; preds = %while.cond, %land.rhs
  %xlimit.0.lcssa = phi %struct.constant_descriptor_rtx* [ %xlimit.0, %while.cond ], [ %xlimit.0, %land.rhs ], !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8806, metadata !DIExpression()), !dbg !8807
  br label %while.cond2, !dbg !8814

while.cond2:                                      ; preds = %do.end28, %while.end
  %x.0 = phi %struct.constant_descriptor_rtx* [ %0, %while.end ], [ %12, %do.end28 ], !dbg !8807
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %x.0, metadata !8805, metadata !DIExpression()), !dbg !8807
  %cmp3 = icmp eq %struct.constant_descriptor_rtx* %x.0, %xlimit.0.lcssa, !dbg !8815
  br i1 %cmp3, label %while.end30, label %do.body, !dbg !8814

do.body:                                          ; preds = %while.cond2
  %next5 = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 0, !dbg !8816
  %4 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next5, align 8, !dbg !8816
  %cmp6 = icmp eq %struct.constant_descriptor_rtx* %4, null, !dbg !8816
  br i1 %cmp6, label %do.body8, label %if.then, !dbg !8820

if.then:                                          ; preds = %do.body
  %5 = bitcast %struct.constant_descriptor_rtx* %4 to i8*, !dbg !8820
  tail call void @gt_ggc_mx_constant_descriptor_rtx(i8* nonnull %5) #8, !dbg !8816
  br label %do.body8, !dbg !8816

do.body8:                                         ; preds = %do.body, %if.then
  %mem = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 1, !dbg !8821
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !8821
  %cmp9 = icmp eq %struct.rtx_def* %6, null, !dbg !8821
  br i1 %cmp9, label %do.body15, label %if.then10, !dbg !8824

if.then10:                                        ; preds = %do.body8
  %7 = bitcast %struct.rtx_def* %6 to i8*, !dbg !8824
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %7) #6, !dbg !8821
  br label %do.body15, !dbg !8821

do.body15:                                        ; preds = %do.body8, %if.then10
  %sym = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 2, !dbg !8825
  %8 = load %struct.rtx_def*, %struct.rtx_def** %sym, align 8, !dbg !8825
  %cmp16 = icmp eq %struct.rtx_def* %8, null, !dbg !8825
  br i1 %cmp16, label %do.body22, label %if.then17, !dbg !8828

if.then17:                                        ; preds = %do.body15
  %9 = bitcast %struct.rtx_def* %8 to i8*, !dbg !8828
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %9) #6, !dbg !8825
  br label %do.body22, !dbg !8825

do.body22:                                        ; preds = %do.body15, %if.then17
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 3, !dbg !8829
  %10 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !8829
  %cmp23 = icmp eq %struct.rtx_def* %10, null, !dbg !8829
  br i1 %cmp23, label %do.end28, label %if.then24, !dbg !8832

if.then24:                                        ; preds = %do.body22
  %11 = bitcast %struct.rtx_def* %10 to i8*, !dbg !8832
  tail call void @gt_ggc_mx_rtx_def(i8* nonnull %11) #6, !dbg !8829
  br label %do.end28, !dbg !8829

do.end28:                                         ; preds = %do.body22, %if.then24
  %12 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next5, align 8, !dbg !8833
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %12, metadata !8805, metadata !DIExpression()), !dbg !8807
  br label %while.cond2, !dbg !8814, !llvm.loop !8834

while.end30:                                      ; preds = %while.cond2
  ret void, !dbg !8836
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_m_P23constant_descriptor_rtx4htab(i8* %x_p) local_unnamed_addr #5 !dbg !8837 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8839, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8840, metadata !DIExpression()), !dbg !8850
  %cmp = icmp ne i8* %x_p, null, !dbg !8851
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !8851
  %or.cond = and i1 %cmp, %cmp1, !dbg !8851
  br i1 %or.cond, label %land.lhs.true2, label %if.end22, !dbg !8851

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !8851
  %tobool = icmp eq i32 %call, 0, !dbg !8851
  br i1 %tobool, label %if.then, label %if.end22, !dbg !8852

if.then:                                          ; preds = %land.lhs.true2
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !8853
  %0 = bitcast i8* %entries to i8***, !dbg !8853
  %1 = load i8**, i8*** %0, align 8, !dbg !8853
  %cmp3 = icmp eq i8** %1, null, !dbg !8854
  br i1 %cmp3, label %if.end22, label %for.cond.preheader, !dbg !8855

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !8856
  %2 = bitcast i8* %size to i64*, !dbg !8856
  br label %for.cond, !dbg !8859

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !8860
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8861
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !8842, metadata !DIExpression()), !dbg !8860
  %4 = load i64, i64* %2, align 8, !dbg !8862
  %cmp5 = icmp eq i64 %i0.0, %4, !dbg !8863
  br i1 %cmp5, label %do.body11, label %do.body, !dbg !8859

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !8864
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !8864
  %cmp7 = icmp eq i8* %5, null, !dbg !8864
  br i1 %cmp7, label %for.inc, label %if.then8, !dbg !8868

if.then8:                                         ; preds = %do.body
  tail call void @gt_ggc_mx_constant_descriptor_rtx(i8* nonnull %5) #8, !dbg !8864
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !8860
  br label %for.inc, !dbg !8864

for.inc:                                          ; preds = %do.body, %if.then8
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then8 ], !dbg !8860
  %inc = add i64 %i0.0, 1, !dbg !8869
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8842, metadata !DIExpression()), !dbg !8860
  br label %for.cond, !dbg !8870, !llvm.loop !8871

do.body11:                                        ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !8860
  call void @llvm.dbg.value(metadata i8** %.lcssa, metadata !8847, metadata !DIExpression()), !dbg !8873
  %switch = icmp ult i8** %.lcssa, inttoptr (i64 2 to i8**), !dbg !8874
  br i1 %switch, label %if.end22, label %if.then16, !dbg !8874

if.then16:                                        ; preds = %do.body11
  %6 = bitcast i8** %.lcssa to i8*, !dbg !8876
  call void @llvm.dbg.value(metadata i8* %6, metadata !8847, metadata !DIExpression()), !dbg !8873
  %call17 = tail call i32 @ggc_set_mark(i8* %6) #6, !dbg !8874
  br label %if.end22, !dbg !8874

if.end22:                                         ; preds = %if.then, %land.lhs.true2, %do.body11, %if.then16, %entry
  ret void, !dbg !8877
}

declare dso_local void @gt_ggc_mx_rtx_def(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_rtx_constant_pool(i8* %x_p) #5 !dbg !8878 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8880, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8881, metadata !DIExpression()), !dbg !8882
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_17rtx_constant_pool, i32 122) #6, !dbg !8883
  %tobool = icmp eq i32 %call, 0, !dbg !8883
  br i1 %tobool, label %if.end10, label %do.body, !dbg !8885

do.body:                                          ; preds = %entry
  %first = bitcast i8* %x_p to %struct.constant_descriptor_rtx**, !dbg !8886
  %0 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %first, align 8, !dbg !8886
  %cmp = icmp eq %struct.constant_descriptor_rtx* %0, null, !dbg !8886
  br i1 %cmp, label %do.body3, label %if.then1, !dbg !8890

if.then1:                                         ; preds = %do.body
  %1 = bitcast %struct.constant_descriptor_rtx* %0 to i8*, !dbg !8890
  tail call void @gt_pch_nx_constant_descriptor_rtx(i8* nonnull %1) #8, !dbg !8886
  br label %do.body3, !dbg !8886

do.body3:                                         ; preds = %do.body, %if.then1
  %last = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !8891
  %2 = bitcast i8* %last to %struct.constant_descriptor_rtx**, !dbg !8891
  %3 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %2, align 8, !dbg !8891
  %cmp4 = icmp eq %struct.constant_descriptor_rtx* %3, null, !dbg !8891
  br i1 %cmp4, label %do.end9, label %if.then5, !dbg !8894

if.then5:                                         ; preds = %do.body3
  %4 = bitcast %struct.constant_descriptor_rtx* %3 to i8*, !dbg !8894
  tail call void @gt_pch_nx_constant_descriptor_rtx(i8* nonnull %4) #8, !dbg !8891
  br label %do.end9, !dbg !8891

do.end9:                                          ; preds = %do.body3, %if.then5
  %const_rtx_htab = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !8895
  %5 = bitcast i8* %const_rtx_htab to i8**, !dbg !8895
  %6 = load i8*, i8** %5, align 8, !dbg !8895
  tail call void @gt_pch_n_P23constant_descriptor_rtx4htab(i8* %6) #8, !dbg !8896
  br label %if.end10, !dbg !8897

if.end10:                                         ; preds = %entry, %do.end9
  ret void, !dbg !8898
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_17rtx_constant_pool(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !8899 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !8904, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8905, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !8906, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !8907, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8908, metadata !DIExpression()), !dbg !8909
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !8910
  br i1 %cmp, label %if.then, label %if.end, !dbg !8912

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8908, metadata !DIExpression()), !dbg !8909
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !8913
  br label %if.end, !dbg !8913

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8914

if.then2:                                         ; preds = %if.end
  %last = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !8915
  tail call void %op(i8* nonnull %last, i8* %cookie) #6, !dbg !8917
  br label %if.end3, !dbg !8917

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !8918

if.then5:                                         ; preds = %if.end3
  %const_rtx_htab = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !8919
  tail call void %op(i8* nonnull %const_rtx_htab, i8* %cookie) #6, !dbg !8921
  br label %if.end6, !dbg !8921

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void, !dbg !8922
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_constant_descriptor_rtx(i8* %x_p) local_unnamed_addr #5 !dbg !8923 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8925, metadata !DIExpression()), !dbg !8928
  %0 = bitcast i8* %x_p to %struct.constant_descriptor_rtx*, !dbg !8929
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %0, metadata !8926, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %0, metadata !8927, metadata !DIExpression()), !dbg !8928
  br label %while.cond, !dbg !8930

while.cond:                                       ; preds = %while.body, %entry
  %1 = phi i8* [ %x_p, %entry ], [ %3, %while.body ], !dbg !8928
  %xlimit.0 = phi %struct.constant_descriptor_rtx* [ %0, %entry ], [ %2, %while.body ], !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0, metadata !8927, metadata !DIExpression()), !dbg !8928
  %call = tail call i32 @gt_pch_note_object(i8* %1, i8* %1, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_23constant_descriptor_rtx, i32 146) #6, !dbg !8931
  %tobool = icmp eq i32 %call, 0, !dbg !8930
  br i1 %tobool, label %while.cond1.preheader, label %while.body, !dbg !8930

while.cond1.preheader:                            ; preds = %while.cond
  %xlimit.0.lcssa = phi %struct.constant_descriptor_rtx* [ %xlimit.0, %while.cond ], !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %xlimit.0.lcssa, metadata !8927, metadata !DIExpression()), !dbg !8928
  br label %while.cond1, !dbg !8932

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %xlimit.0, i64 0, i32 0, !dbg !8933
  %2 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next, align 8, !dbg !8933
  %3 = bitcast %struct.constant_descriptor_rtx* %2 to i8*, !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %2, metadata !8927, metadata !DIExpression()), !dbg !8928
  br label %while.cond, !dbg !8930, !llvm.loop !8934

while.cond1:                                      ; preds = %while.cond1.preheader, %do.end26
  %x.0 = phi %struct.constant_descriptor_rtx* [ %12, %do.end26 ], [ %0, %while.cond1.preheader ], !dbg !8928
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %x.0, metadata !8926, metadata !DIExpression()), !dbg !8928
  %cmp = icmp eq %struct.constant_descriptor_rtx* %x.0, %xlimit.0.lcssa, !dbg !8936
  br i1 %cmp, label %while.end28, label %do.body, !dbg !8932

do.body:                                          ; preds = %while.cond1
  %next3 = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 0, !dbg !8937
  %4 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next3, align 8, !dbg !8937
  %cmp4 = icmp eq %struct.constant_descriptor_rtx* %4, null, !dbg !8937
  br i1 %cmp4, label %do.body6, label %if.then, !dbg !8941

if.then:                                          ; preds = %do.body
  %5 = bitcast %struct.constant_descriptor_rtx* %4 to i8*, !dbg !8941
  tail call void @gt_pch_nx_constant_descriptor_rtx(i8* nonnull %5) #8, !dbg !8937
  br label %do.body6, !dbg !8937

do.body6:                                         ; preds = %do.body, %if.then
  %mem = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 1, !dbg !8942
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !8942
  %cmp7 = icmp eq %struct.rtx_def* %6, null, !dbg !8942
  br i1 %cmp7, label %do.body13, label %if.then8, !dbg !8945

if.then8:                                         ; preds = %do.body6
  %7 = bitcast %struct.rtx_def* %6 to i8*, !dbg !8945
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %7) #6, !dbg !8942
  br label %do.body13, !dbg !8942

do.body13:                                        ; preds = %do.body6, %if.then8
  %sym = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 2, !dbg !8946
  %8 = load %struct.rtx_def*, %struct.rtx_def** %sym, align 8, !dbg !8946
  %cmp14 = icmp eq %struct.rtx_def* %8, null, !dbg !8946
  br i1 %cmp14, label %do.body20, label %if.then15, !dbg !8949

if.then15:                                        ; preds = %do.body13
  %9 = bitcast %struct.rtx_def* %8 to i8*, !dbg !8949
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %9) #6, !dbg !8946
  br label %do.body20, !dbg !8946

do.body20:                                        ; preds = %do.body13, %if.then15
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %x.0, i64 0, i32 3, !dbg !8950
  %10 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !8950
  %cmp21 = icmp eq %struct.rtx_def* %10, null, !dbg !8950
  br i1 %cmp21, label %do.end26, label %if.then22, !dbg !8953

if.then22:                                        ; preds = %do.body20
  %11 = bitcast %struct.rtx_def* %10 to i8*, !dbg !8953
  tail call void @gt_pch_nx_rtx_def(i8* nonnull %11) #6, !dbg !8950
  br label %do.end26, !dbg !8950

do.end26:                                         ; preds = %do.body20, %if.then22
  %12 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %next3, align 8, !dbg !8954
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %12, metadata !8926, metadata !DIExpression()), !dbg !8928
  br label %while.cond1, !dbg !8932, !llvm.loop !8955

while.end28:                                      ; preds = %while.cond1
  ret void, !dbg !8957
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_n_P23constant_descriptor_rtx4htab(i8* %x_p) local_unnamed_addr #5 !dbg !8958 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8960, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8961, metadata !DIExpression()), !dbg !8967
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P23constant_descriptor_rtx4htab, i32 191) #6, !dbg !8968
  %tobool = icmp eq i32 %call, 0, !dbg !8968
  br i1 %tobool, label %if.end11, label %if.then, !dbg !8969

if.then:                                          ; preds = %entry
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !8970
  %0 = bitcast i8* %entries to i8***, !dbg !8970
  %1 = load i8**, i8*** %0, align 8, !dbg !8970
  %cmp = icmp eq i8** %1, null, !dbg !8971
  br i1 %cmp, label %if.end11, label %for.cond.preheader, !dbg !8972

for.cond.preheader:                               ; preds = %if.then
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !8973
  %2 = bitcast i8* %size to i64*, !dbg !8973
  br label %for.cond, !dbg !8976

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %.pre1 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ]
  %3 = phi i8** [ %.pre, %for.inc ], [ %1, %for.cond.preheader ], !dbg !8977
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !8978
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !8962, metadata !DIExpression()), !dbg !8977
  %4 = load i64, i64* %2, align 8, !dbg !8979
  %cmp2 = icmp eq i64 %i0.0, %4, !dbg !8980
  br i1 %cmp2, label %for.end, label %do.body, !dbg !8976

do.body:                                          ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %i0.0, !dbg !8981
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !8981
  %cmp4 = icmp eq i8* %5, null, !dbg !8981
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !8985

if.then5:                                         ; preds = %do.body
  tail call void @gt_pch_nx_constant_descriptor_rtx(i8* nonnull %5) #8, !dbg !8981
  %.pre.pre = load i8**, i8*** %0, align 8, !dbg !8977
  br label %for.inc, !dbg !8981

for.inc:                                          ; preds = %do.body, %if.then5
  %.pre = phi i8** [ %.pre1, %do.body ], [ %.pre.pre, %if.then5 ], !dbg !8977
  %inc = add i64 %i0.0, 1, !dbg !8986
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8962, metadata !DIExpression()), !dbg !8977
  br label %for.cond, !dbg !8987, !llvm.loop !8988

for.end:                                          ; preds = %for.cond
  %.lcssa = phi i8** [ %3, %for.cond ], !dbg !8977
  %6 = bitcast i8** %.lcssa to i8*, !dbg !8990
  %call9 = tail call i32 @gt_pch_note_object(i8* %6, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_P23constant_descriptor_rtx4htab, i32 217) #6, !dbg !8991
  br label %if.end11, !dbg !8992

if.end11:                                         ; preds = %if.then, %entry, %for.end
  ret void, !dbg !8993
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_23constant_descriptor_rtx(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !8994 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !8996, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !8997, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !8998, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !8999, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !9000, metadata !DIExpression()), !dbg !9002
  %cmp = icmp eq i8* %x_p, %this_obj, !dbg !9003
  br i1 %cmp, label %if.then, label %if.end, !dbg !9005

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !9000, metadata !DIExpression()), !dbg !9002
  tail call void %op(i8* %x_p, i8* %cookie) #6, !dbg !9006
  br label %if.end, !dbg !9006

if.end:                                           ; preds = %if.then, %entry
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9007

if.then2:                                         ; preds = %if.end
  %mem = getelementptr inbounds i8, i8* %x_p, i64 8, !dbg !9008
  tail call void %op(i8* nonnull %mem, i8* %cookie) #6, !dbg !9010
  br label %if.end3, !dbg !9010

if.end3:                                          ; preds = %if.then2, %if.end
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !9011

if.then5:                                         ; preds = %if.end3
  %sym = getelementptr inbounds i8, i8* %x_p, i64 16, !dbg !9012
  tail call void %op(i8* nonnull %sym, i8* %cookie) #6, !dbg !9014
  br label %if.end6, !dbg !9014

if.end6:                                          ; preds = %if.then5, %if.end3
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !9015

if.then8:                                         ; preds = %if.end6
  %constant = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !9016
  tail call void %op(i8* nonnull %constant, i8* %cookie) #6, !dbg !9018
  br label %if.end9, !dbg !9018

if.end9:                                          ; preds = %if.then8, %if.end6
  ret void, !dbg !9019
}

declare dso_local void @gt_pch_nx_rtx_def(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_P23constant_descriptor_rtx4htab(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !9020 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !9022, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !9023, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !9024, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !9025, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !9026, metadata !DIExpression()), !dbg !9030
  %entries = getelementptr inbounds i8, i8* %x_p, i64 24, !dbg !9031
  %0 = bitcast i8* %entries to i8***, !dbg !9031
  %1 = load i8**, i8*** %0, align 8, !dbg !9031
  %cmp = icmp eq i8** %1, null, !dbg !9032
  br i1 %cmp, label %if.end10, label %for.cond.preheader, !dbg !9033

for.cond.preheader:                               ; preds = %entry
  %size = getelementptr inbounds i8, i8* %x_p, i64 32, !dbg !9034
  %2 = bitcast i8* %size to i64*, !dbg !9034
  %3 = bitcast i8* %entries to i8**, !dbg !9037
  br label %for.cond, !dbg !9040

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !9041
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !9027, metadata !DIExpression()), !dbg !9042
  %4 = load i64, i64* %2, align 8, !dbg !9043
  %cmp1 = icmp eq i64 %i0.0, %4, !dbg !9044
  br i1 %cmp1, label %for.end, label %for.body, !dbg !9040

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %3, align 8, !dbg !9045
  %cmp3 = icmp eq i8* %5, %this_obj, !dbg !9046
  br i1 %cmp3, label %if.then4, label %for.inc, !dbg !9047

if.then4:                                         ; preds = %for.body
  %6 = bitcast i8* %5 to i8**, !dbg !9047
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %i0.0, !dbg !9048
  %7 = bitcast i8** %arrayidx to i8*, !dbg !9049
  tail call void %op(i8* %7, i8* %cookie) #6, !dbg !9050
  br label %for.inc, !dbg !9050

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i64 %i0.0, 1, !dbg !9051
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9027, metadata !DIExpression()), !dbg !9042
  br label %for.cond, !dbg !9052, !llvm.loop !9053

for.end:                                          ; preds = %for.cond
  %cmp6 = icmp eq i8* %x_p, %this_obj, !dbg !9055
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9057

if.then7:                                         ; preds = %for.end
  tail call void %op(i8* nonnull %entries, i8* %cookie) #6, !dbg !9058
  br label %if.end10, !dbg !9058

if.end10:                                         ; preds = %entry, %for.end, %if.then7
  ret void, !dbg !9059
}

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) #2

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) #2

declare dso_local void @gt_ggc_m_P24constant_descriptor_tree4htab(i8*) #2

declare dso_local void @gt_pch_n_P24constant_descriptor_tree4htab(i8*) #2

declare dso_local void @gt_ggc_m_P12object_block4htab(i8*) #2

declare dso_local void @gt_pch_n_P12object_block4htab(i8*) #2

declare dso_local void @gt_ggc_m_P7section4htab(i8*) #2

declare dso_local void @gt_pch_n_P7section4htab(i8*) #2

declare dso_local void @gt_ggc_mx_section(i8*) #2

declare dso_local void @gt_pch_nx_section(i8*) #2

declare dso_local void @gt_ggc_m_S(i8*) #2

declare dso_local void @gt_pch_n_S(i8*) #2

declare dso_local void @gt_ggc_mx_tree_map(i8*) #2

declare dso_local void @gt_pch_nx_tree_map(i8*) #2

declare dso_local i32 @tree_map_base_marked_p(i8*) #2

declare dso_local void @gt_ggc_m_P8tree_map4htab(i8*) #2

declare dso_local void @gt_pch_n_P8tree_map4htab(i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @prefix_name(i8* %prefix, %union.tree_node* %name) unnamed_addr #5 !dbg !9060 {
entry:
  call void @llvm.dbg.value(metadata i8* %prefix, metadata !9064, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !9065, metadata !DIExpression()), !dbg !9069
  %call = tail call i64 @strlen(i8* %prefix) #6, !dbg !9070
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9071
  %str = bitcast i32* %id to i8**, !dbg !9071
  %0 = load i8*, i8** %str, align 8, !dbg !9071
  %call1 = tail call i64 @strlen(i8* %0) #6, !dbg !9072
  %add = add i64 %call, %call1, !dbg !9073
  %add3 = add i64 %add, 1, !dbg !9073
  %conv4 = and i64 %add3, 4294967295, !dbg !9073
  %1 = alloca i8, i64 %conv4, align 16, !dbg !9073
  call void @llvm.dbg.value(metadata i8* %1, metadata !9068, metadata !DIExpression()), !dbg !9069
  %conv5 = and i64 %call, 4294967295, !dbg !9074
  %call6 = call i8* @memcpy(i8* nonnull %1, i8* %prefix, i64 %conv5) #6, !dbg !9075
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %conv5, !dbg !9076
  %2 = load i8*, i8** %str, align 8, !dbg !9077
  %add10 = add i64 %call1, 1, !dbg !9078
  %conv11 = and i64 %add10, 4294967295, !dbg !9079
  %call12 = call i8* @memcpy(i8* nonnull %add.ptr, i8* %2, i64 %conv11) #6, !dbg !9080
  %call13 = call %union.tree_node* @get_identifier(i8* nonnull %1) #6, !dbg !9081
  ret %union.tree_node* %call13, !dbg !9082
}

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_call_expr(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @append_to_statement_list(%union.tree_node*, %union.tree_node**) local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local void @varpool_finalize_decl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @contains_pointers_p(%union.tree_node* %type) unnamed_addr #5 !dbg !9083 {
entry:
  br label %tailrecurse, !dbg !9089

tailrecurse:                                      ; preds = %sw.bb10, %entry
  %type.tr = phi %union.tree_node* [ %type, %entry ], [ %5, %sw.bb10 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr, metadata !9085, metadata !DIExpression()), !dbg !9090
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9091
  %bf.load = load i64, i64* %0, align 8, !dbg !9091
  %1 = trunc i64 %bf.load to i16, !dbg !9091
  switch i16 %1, label %sw.default [
    i16 10, label %return.loopexit2
    i16 12, label %return.loopexit2
    i16 5, label %return.loopexit2
    i16 16, label %sw.bb1
    i16 17, label %sw.bb1
    i16 18, label %sw.bb1
    i16 15, label %sw.bb10
  ], !dbg !9092

sw.bb1:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %type.tr.lcssa8 = phi %union.tree_node* [ %type.tr, %tailrecurse ], [ %type.tr, %tailrecurse ], [ %type.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %union.tree_node* %type.tr.lcssa8, metadata !9085, metadata !DIExpression()), !dbg !9090
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr.lcssa8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9093
  %2 = bitcast i32* %values to %union.tree_node**, !dbg !9093
  br label %for.cond, !dbg !9095

for.cond:                                         ; preds = %for.inc, %sw.bb1
  %fields.0.in = phi %union.tree_node** [ %2, %sw.bb1 ], [ %chain, %for.inc ]
  %fields.0 = load %union.tree_node*, %union.tree_node** %fields.0.in, align 8, !dbg !9096
  call void @llvm.dbg.value(metadata %union.tree_node* %fields.0, metadata !9086, metadata !DIExpression()), !dbg !9097
  %tobool = icmp eq %union.tree_node* %fields.0, null, !dbg !9098
  br i1 %tobool, label %return.loopexit, label %for.body, !dbg !9098

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %fields.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9099
  %bf.load4 = load i64, i64* %3, align 8, !dbg !9099
  %bf.cast61 = and i64 %bf.load4, 65535, !dbg !9102
  %cmp = icmp eq i64 %bf.cast61, 31, !dbg !9102
  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !9103

land.lhs.true:                                    ; preds = %for.body
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %fields.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9104
  %4 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !9104
  %call = tail call fastcc i32 @contains_pointers_p(%union.tree_node* %4) #8, !dbg !9105
  %tobool8 = icmp eq i32 %call, 0, !dbg !9105
  br i1 %tobool8, label %for.inc, label %return.loopexit, !dbg !9106

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %fields.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9107
  br label %for.cond, !dbg !9108, !llvm.loop !9109

sw.bb10:                                          ; preds = %tailrecurse
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9111
  %5 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !9111
  br label %tailrecurse, !dbg !9089

sw.default:                                       ; preds = %tailrecurse
  br label %return, !dbg !9112

return.loopexit:                                  ; preds = %for.cond, %land.lhs.true
  %retval.1.ph = phi i32 [ 0, %for.cond ], [ 1, %land.lhs.true ]
  br label %return, !dbg !9113

return.loopexit2:                                 ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  br label %return, !dbg !9113

return:                                           ; preds = %return.loopexit2, %return.loopexit, %sw.default
  %retval.1 = phi i32 [ 0, %sw.default ], [ %retval.1.ph, %return.loopexit ], [ 1, %return.loopexit2 ], !dbg !9114
  ret i32 %retval.1, !dbg !9113
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @incorporeal_function_p(%union.tree_node* %decl) unnamed_addr #5 !dbg !9115 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !9117, metadata !DIExpression()), !dbg !9121
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9122
  %bf.load = load i64, i64* %0, align 8, !dbg !9122
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9123
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !9123
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !9124

land.lhs.true:                                    ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !9125
  %bf.load1 = load i32, i32* %built_in_class, align 8, !dbg !9125
  %bf.clear2 = and i32 %bf.load1, 6144, !dbg !9125
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !9125
  br i1 %cmp3, label %if.end19, label %if.then, !dbg !9126

if.then:                                          ; preds = %land.lhs.true
  %cmp9 = icmp eq i32 %bf.clear2, 6144, !dbg !9127
  br i1 %cmp9, label %land.lhs.true10, label %if.end, !dbg !9129

land.lhs.true10:                                  ; preds = %if.then
  %bf.clear13 = and i32 %bf.load1, 2047, !dbg !9130
  %cmp14 = icmp eq i32 %bf.clear13, 415, !dbg !9131
  br i1 %cmp14, label %cleanup, label %if.end, !dbg !9132

if.end:                                           ; preds = %land.lhs.true10, %if.then
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #6, !dbg !9133
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9133
  %str = bitcast i32* %id to i8**, !dbg !9133
  %1 = load i8*, i8** %str, align 8, !dbg !9133
  call void @llvm.dbg.value(metadata i8* %1, metadata !9118, metadata !DIExpression()), !dbg !9134
  %call16 = tail call zeroext i8 @is_builtin_name(i8* %1) #6, !dbg !9135
  %tobool = icmp eq i8 %call16, 0, !dbg !9135
  br label %cleanup, !dbg !9137

cleanup:                                          ; preds = %if.end, %land.lhs.true10
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true10 ], [ %tobool, %if.end ]
  br i1 %cleanup.dest.slot.0, label %if.end19, label %return

if.end19:                                         ; preds = %land.lhs.true, %cleanup, %entry
  br label %return, !dbg !9138

return:                                           ; preds = %cleanup, %if.end19
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end19 ], !dbg !9121
  ret i8 %retval.1, !dbg !9139
}

declare dso_local zeroext i8 @is_builtin_name(i8*) local_unnamed_addr #2

declare dso_local i32 @real_hash(%struct.real_value*) local_unnamed_addr #2

declare dso_local i32 @fixed_hash(%struct.fixed_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @decode_addr_const(%union.tree_node* %exp, %struct.addr_const* %value) unnamed_addr #5 !dbg !9140 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9145, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %struct.addr_const* %value, metadata !9146, metadata !DIExpression()), !dbg !9150
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9151
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9151
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 0, metadata !9148, metadata !DIExpression()), !dbg !9150
  br label %while.cond, !dbg !9152

while.cond:                                       ; preds = %if.end40, %entry
  %.in4 = phi %union.tree_node* [ %0, %entry ], [ %.in, %if.end40 ]
  %target.0 = phi %union.tree_node* [ %0, %entry ], [ %target.1, %if.end40 ], !dbg !9150
  %offset.0 = phi i32 [ 0, %entry ], [ %offset.1, %if.end40 ], !dbg !9150
  call void @llvm.dbg.value(metadata i32 %offset.0, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %union.tree_node* %target.0, metadata !9147, metadata !DIExpression()), !dbg !9150
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %target.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9153
  %bf.load = load i64, i64* %1, align 8, !dbg !9153
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9156
  %cmp = icmp eq i64 %bf.cast1, 41, !dbg !9156
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9157

land.lhs.true:                                    ; preds = %while.cond
  %operands3 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9158
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands3, i64 1, !dbg !9158
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !9158
  %call = tail call %union.tree_node* @byte_position(%union.tree_node* %2) #6, !dbg !9159
  %call5 = tail call i32 @host_integerp(%union.tree_node* %call, i32 0) #6, !dbg !9160
  %tobool = icmp eq i32 %call5, 0, !dbg !9160
  br i1 %tobool, label %land.lhs.true.if.else_crit_edge, label %if.then, !dbg !9161

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  %bf.load15.pre = load i64, i64* %1, align 8, !dbg !9162
  %.pre = and i64 %bf.load15.pre, 65535, !dbg !9164
  br label %if.else, !dbg !9161

if.then:                                          ; preds = %land.lhs.true
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !9165
  %call9 = tail call i64 @int_byte_position(%union.tree_node* %3) #6, !dbg !9167
  %4 = load %union.tree_node*, %union.tree_node** %operands3, align 8, !dbg !9168
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9147, metadata !DIExpression()), !dbg !9150
  br label %if.end40, !dbg !9169

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %while.cond
  %bf.cast172.pre-phi = phi i64 [ %.pre, %land.lhs.true.if.else_crit_edge ], [ %bf.cast1, %while.cond ], !dbg !9164
  %bf.load42 = phi i64 [ %bf.load15.pre, %land.lhs.true.if.else_crit_edge ], [ %bf.load, %while.cond ], !dbg !9162
  %5 = add nsw i64 %bf.cast172.pre-phi, -45, !dbg !9170
  %6 = icmp ult i64 %5, 2, !dbg !9170
  br i1 %6, label %if.then26, label %while.end, !dbg !9170

if.then26:                                        ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %target.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9171
  %7 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !9171
  %8 = load %struct.tree_type*, %struct.tree_type** %7, align 8, !dbg !9171
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 3, !dbg !9171
  %9 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !9171
  %call28 = tail call i64 @tree_low_cst(%union.tree_node* %9, i32 1) #6, !dbg !9173
  %operands30 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9174
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands30, i64 1, !dbg !9174
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8, !dbg !9174
  %call32 = tail call i64 @tree_low_cst(%union.tree_node* %10, i32 0) #6, !dbg !9175
  %mul = mul nsw i64 %call28, %call32, !dbg !9176
  %11 = load %union.tree_node*, %union.tree_node** %operands30, align 8, !dbg !9177
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9147, metadata !DIExpression()), !dbg !9150
  br label %if.end40

if.end40:                                         ; preds = %if.then26, %if.then
  %.in = phi %union.tree_node* [ %4, %if.then ], [ %11, %if.then26 ]
  %target.1 = phi %union.tree_node* [ %4, %if.then ], [ %11, %if.then26 ], !dbg !9178
  %.pn.in = phi i64 [ %call9, %if.then ], [ %mul, %if.then26 ]
  %.pn = trunc i64 %.pn.in to i32, !dbg !9178
  %offset.1 = add i32 %offset.0, %.pn, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %offset.1, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %union.tree_node* %target.1, metadata !9147, metadata !DIExpression()), !dbg !9150
  br label %while.cond, !dbg !9152, !llvm.loop !9179

while.end:                                        ; preds = %if.else
  %bf.load42.lcssa = phi i64 [ %bf.load42, %if.else ], !dbg !9162
  %target.0.lcssa = phi %union.tree_node* [ %target.0, %if.else ], !dbg !9150
  %offset.0.lcssa = phi i32 [ %offset.0, %if.else ], !dbg !9150
  call void @llvm.dbg.value(metadata %union.tree_node* %target.0.lcssa, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %offset.0.lcssa, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %union.tree_node* %target.0.lcssa, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %offset.0.lcssa, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %union.tree_node* %target.0.lcssa, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %offset.0.lcssa, metadata !9148, metadata !DIExpression()), !dbg !9150
  %12 = trunc i64 %bf.load42.lcssa to i16, !dbg !9181
  switch i16 %12, label %sw.default [
    i16 32, label %sw.bb
    i16 29, label %sw.bb
    i16 30, label %sw.bb50
    i16 24, label %sw.bb54
    i16 25, label %sw.bb54
    i16 28, label %sw.bb54
    i16 26, label %sw.bb54
    i16 51, label %sw.bb54
    i16 23, label %sw.bb54
  ], !dbg !9182

sw.bb:                                            ; preds = %while.end, %while.end
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %target.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9183
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9183
  %tobool45 = icmp eq %struct.rtx_def* %13, null, !dbg !9183
  br i1 %tobool45, label %cond.false, label %cond.true, !dbg !9183

cond.true:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !9183

cond.false:                                       ; preds = %sw.bb
  tail call void @make_decl_rtl(%union.tree_node* %target.0.lcssa) #8, !dbg !9183
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9183
  br label %sw.epilog, !dbg !9183

sw.bb50:                                          ; preds = %while.end
  %call51 = tail call %struct.rtx_def* @force_label_rtx(%union.tree_node* %target.0.lcssa) #6, !dbg !9185
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %call51) #6, !dbg !9185
  %call53 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 14, %struct.rtx_def* %call52) #6, !dbg !9186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call53, metadata !9149, metadata !DIExpression()), !dbg !9150
  br label %sw.epilog, !dbg !9187

sw.bb54:                                          ; preds = %while.end, %while.end, %while.end, %while.end, %while.end, %while.end
  %call55 = tail call %struct.rtx_def* @output_constant_def(%union.tree_node* %target.0.lcssa, i32 1) #8, !dbg !9188
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call55, metadata !9149, metadata !DIExpression()), !dbg !9150
  br label %sw.epilog, !dbg !9189

sw.default:                                       ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2845, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9190
  br label %sw.epilog, !dbg !9191

sw.epilog:                                        ; preds = %cond.true, %cond.false, %sw.default, %sw.bb54, %sw.bb50
  %x.0 = phi %struct.rtx_def* [ undef, %sw.default ], [ %call55, %sw.bb54 ], [ %call53, %sw.bb50 ], [ %13, %cond.true ], [ %14, %cond.false ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !9149, metadata !DIExpression()), !dbg !9150
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 0, !dbg !9192
  %bf.load56 = load i32, i32* %15, align 8, !dbg !9192
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !9192
  %cmp58 = icmp eq i32 %bf.clear57, 43, !dbg !9192
  br i1 %cmp58, label %cond.end62, label %cond.true60, !dbg !9192

cond.true60:                                      ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 2848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9192
  br label %cond.end62, !dbg !9192

cond.end62:                                       ; preds = %sw.epilog, %cond.true60
  %arrayidx64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9193
  %16 = bitcast %union.rtunion_def* %arrayidx64 to i64*, !dbg !9193
  %17 = load i64, i64* %16, align 8, !dbg !9193
  %18 = bitcast %struct.addr_const* %value to i64*, !dbg !9194
  store i64 %17, i64* %18, align 8, !dbg !9194
  %conv66 = sext i32 %offset.0.lcssa to i64, !dbg !9195
  %offset67 = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value, i64 0, i32 1, !dbg !9196
  store i64 %conv66, i64* %offset67, align 8, !dbg !9197
  ret void, !dbg !9198
}

declare dso_local %union.tree_node* @byte_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_byte_position(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_u_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_label_rtx(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @copy_constant(%union.tree_node* %exp) unnamed_addr #5 !dbg !9199 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9201, metadata !DIExpression()), !dbg !9213
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9214
  %bf.load = load i64, i64* %0, align 8, !dbg !9214
  %1 = trunc i64 %bf.load to i16, !dbg !9214
  switch i16 %1, label %sw.default [
    i16 121, label %sw.bb
    i16 23, label %sw.bb16
    i16 24, label %sw.bb16
    i16 25, label %sw.bb16
    i16 28, label %sw.bb16
    i16 26, label %sw.bb18
    i16 63, label %sw.bb25
    i16 66, label %sw.bb25
    i16 64, label %sw.bb25
    i16 116, label %sw.bb41
    i16 113, label %sw.bb41
    i16 118, label %sw.bb41
    i16 51, label %sw.bb53
  ], !dbg !9215

sw.bb:                                            ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9216
  %2 = bitcast %union.tree_node** %operands to i64**, !dbg !9216
  %3 = load i64*, i64** %2, align 8, !dbg !9216
  %bf.load3 = load i64, i64* %3, align 8, !dbg !9216
  %bf.cast5 = and i64 %bf.load3, 65535, !dbg !9216
  %arrayidx6 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast5, !dbg !9216
  %4 = load i32, i32* %arrayidx6, align 4, !dbg !9216
  %cmp = icmp eq i32 %4, 1, !dbg !9216
  br i1 %cmp, label %if.then, label %if.else, !dbg !9218

if.then:                                          ; preds = %sw.bb
  %5 = bitcast i64* %3 to %union.tree_node*, !dbg !9218
  %6 = trunc i64 %bf.load to i32, !dbg !9219
  %bf.cast10 = and i32 %6, 65535, !dbg !9219
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9219
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9219
  %call = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %5) #8, !dbg !9219
  %call14 = tail call %union.tree_node* @build1_stat(i32 %bf.cast10, %union.tree_node* %7, %union.tree_node* %call) #6, !dbg !9219
  ret %union.tree_node* %call14, !dbg !9220

if.else:                                          ; preds = %sw.bb
  %call15 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %exp) #6, !dbg !9221
  br label %return, !dbg !9222

sw.bb16:                                          ; preds = %entry, %entry, %entry, %entry
  %call17 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %exp) #6, !dbg !9223
  br label %return, !dbg !9224

sw.bb18:                                          ; preds = %entry
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9225
  %8 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !9225
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9226
  %9 = bitcast i32* %real to %union.tree_node**, !dbg !9226
  %10 = load %union.tree_node*, %union.tree_node** %9, align 8, !dbg !9226
  %call21 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %10) #8, !dbg !9227
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9228
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !9228
  %call23 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %12) #8, !dbg !9229
  %call24 = tail call %union.tree_node* @build_complex(%union.tree_node* %8, %union.tree_node* %call21, %union.tree_node* %call23) #6, !dbg !9230
  ret %union.tree_node* %call24, !dbg !9220

sw.bb25:                                          ; preds = %entry, %entry, %entry
  %13 = trunc i64 %bf.load to i32, !dbg !9231
  %bf.cast29 = and i32 %13, 65535, !dbg !9231
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9231
  %14 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !9231
  %operands33 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9231
  %15 = load %union.tree_node*, %union.tree_node** %operands33, align 8, !dbg !9231
  %call35 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %15) #8, !dbg !9231
  %arrayidx38 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands33, i64 1, !dbg !9231
  %16 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !9231
  %call39 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %16) #8, !dbg !9231
  %call40 = tail call %union.tree_node* @build2_stat(i32 %bf.cast29, %union.tree_node* %14, %union.tree_node* %call35, %union.tree_node* %call39) #6, !dbg !9231
  ret %union.tree_node* %call40, !dbg !9220

sw.bb41:                                          ; preds = %entry, %entry, %entry
  %17 = trunc i64 %bf.load to i32, !dbg !9232
  %bf.cast45 = and i32 %17, 65535, !dbg !9232
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9232
  %18 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !9232
  %operands49 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9232
  %19 = load %union.tree_node*, %union.tree_node** %operands49, align 8, !dbg !9232
  %call51 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %19) #8, !dbg !9232
  %call52 = tail call %union.tree_node* @build1_stat(i32 %bf.cast45, %union.tree_node* %18, %union.tree_node* %call51) #6, !dbg !9232
  ret %union.tree_node* %call52, !dbg !9220

sw.bb53:                                          ; preds = %entry
  %call54 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %exp) #6, !dbg !9233
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !9202, metadata !DIExpression()), !dbg !9234
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9235
  %20 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !9235
  %21 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !9235
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %21, null, !dbg !9235
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9235

cond.true:                                        ; preds = %sw.bb53
  %base57 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %21, i64 0, i32 0, !dbg !9235
  br label %cond.end, !dbg !9235

cond.end:                                         ; preds = %sw.bb53, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base57, %cond.true ], [ null, %sw.bb53 ], !dbg !9235
  %call58 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !9235
  %call59 = tail call fastcc %struct.VEC_constructor_elt_gc* @VEC_constructor_elt_gc_alloc(i32 %call58) #8, !dbg !9235
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %call59, metadata !9205, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i64 0, metadata !9206, metadata !DIExpression()), !dbg !9234
  %base105 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %call59, i64 0, i32 0, !dbg !9236
  br label %for.cond, !dbg !9237

for.cond:                                         ; preds = %for.body, %cond.end
  %idx.0 = phi i64 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !9238
  %purpose.0 = phi %union.tree_node* [ undef, %cond.end ], [ %purpose.1, %for.body ]
  %value.0 = phi %union.tree_node* [ undef, %cond.end ], [ %value.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.0, metadata !9208, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.0, metadata !9207, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !9206, metadata !DIExpression()), !dbg !9234
  %22 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !9239
  %tobool62 = icmp eq %struct.VEC_constructor_elt_gc* %22, null, !dbg !9239
  br i1 %tobool62, label %cond.end68, label %cond.true63, !dbg !9239

cond.true63:                                      ; preds = %for.cond
  %base66 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %22, i64 0, i32 0, !dbg !9239
  br label %cond.end68, !dbg !9239

cond.end68:                                       ; preds = %for.cond, %cond.true63
  %cond69 = phi %struct.VEC_constructor_elt_base* [ %base66, %cond.true63 ], [ null, %for.cond ], !dbg !9239
  %call70 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond69) #8, !dbg !9239
  %conv = zext i32 %call70 to i64, !dbg !9239
  %cmp71 = icmp ult i64 %idx.0, %conv, !dbg !9239
  br i1 %cmp71, label %cond.false74, label %cond.end100, !dbg !9239

cond.false74:                                     ; preds = %cond.end68
  %23 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !9239
  %tobool77 = icmp eq %struct.VEC_constructor_elt_gc* %23, null, !dbg !9239
  br i1 %tobool77, label %cond.end83, label %cond.true78, !dbg !9239

cond.true78:                                      ; preds = %cond.false74
  %base81 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %23, i64 0, i32 0, !dbg !9239
  br label %cond.end83, !dbg !9239

cond.end83:                                       ; preds = %cond.false74, %cond.true78
  %cond84 = phi %struct.VEC_constructor_elt_base* [ %base81, %cond.true78 ], [ null, %cond.false74 ], !dbg !9239
  %conv85 = trunc i64 %idx.0 to i32, !dbg !9239
  %call86 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond84, i32 %conv85) #8, !dbg !9239
  %value87 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call86, i64 0, i32 1, !dbg !9239
  %24 = load %union.tree_node*, %union.tree_node** %value87, align 8, !dbg !9239
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !9208, metadata !DIExpression()), !dbg !9234
  %25 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %20, align 8, !dbg !9239
  %tobool90 = icmp eq %struct.VEC_constructor_elt_gc* %25, null, !dbg !9239
  br i1 %tobool90, label %cond.end96, label %cond.true91, !dbg !9239

cond.true91:                                      ; preds = %cond.end83
  %base94 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %25, i64 0, i32 0, !dbg !9239
  br label %cond.end96, !dbg !9239

cond.end96:                                       ; preds = %cond.end83, %cond.true91
  %cond97 = phi %struct.VEC_constructor_elt_base* [ %base94, %cond.true91 ], [ null, %cond.end83 ], !dbg !9239
  %call99 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond97, i32 %conv85) #8, !dbg !9239
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call99, i64 0, i32 0, !dbg !9239
  %26 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9239
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !9207, metadata !DIExpression()), !dbg !9234
  br label %cond.end100, !dbg !9239

cond.end100:                                      ; preds = %cond.end68, %cond.end96
  %purpose.1 = phi %union.tree_node* [ %26, %cond.end96 ], [ %purpose.0, %cond.end68 ]
  %value.1 = phi %union.tree_node* [ %24, %cond.end96 ], [ %value.0, %cond.end68 ]
  %cond101 = phi i1 [ true, %cond.end96 ], [ false, %cond.end68 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %value.1, metadata !9208, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata %union.tree_node* %purpose.1, metadata !9207, metadata !DIExpression()), !dbg !9234
  br i1 %cond101, label %for.body, label %for.end, !dbg !9237

for.body:                                         ; preds = %cond.end100
  %call109 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %base105, %struct.constructor_elt_d* null) #8, !dbg !9240
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call109, metadata !9209, metadata !DIExpression()), !dbg !9236
  %index110 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call109, i64 0, i32 0, !dbg !9241
  store %union.tree_node* %purpose.1, %union.tree_node** %index110, align 8, !dbg !9242
  %call111 = tail call fastcc %union.tree_node* @copy_constant(%union.tree_node* %value.1) #8, !dbg !9243
  %value112 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call109, i64 0, i32 1, !dbg !9244
  store %union.tree_node* %call111, %union.tree_node** %value112, align 8, !dbg !9245
  %inc = add i64 %idx.0, 1, !dbg !9239
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9206, metadata !DIExpression()), !dbg !9234
  br label %for.cond, !dbg !9239, !llvm.loop !9246

for.end:                                          ; preds = %cond.end100
  %elts114 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9248
  %27 = bitcast i32* %elts114 to %struct.VEC_constructor_elt_gc**, !dbg !9248
  store %struct.VEC_constructor_elt_gc* %call59, %struct.VEC_constructor_elt_gc** %27, align 8, !dbg !9249
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9250
  br label %return, !dbg !9251

return:                                           ; preds = %sw.default, %for.end, %sw.bb16, %if.else
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call54, %for.end ], [ %call17, %sw.bb16 ], [ %call15, %if.else ], !dbg !9213
  ret %union.tree_node* %retval.0, !dbg !9220
}

declare dso_local i32 @mf_marked_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @mf_mark(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.section* @get_constant_section(%union.tree_node* %exp) unnamed_addr #5 !dbg !9252 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9254, metadata !DIExpression()), !dbg !9255
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9256
  %bf.load = load i64, i64* %0, align 8, !dbg !9256
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9256
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !9256
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9256

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !9256
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !9256

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9256
  %1 = load %union.tree_node*, %union.tree_node** %section_name, align 8, !dbg !9256
  %cmp6 = icmp eq %union.tree_node* %1, null, !dbg !9256
  br i1 %cmp6, label %if.else, label %if.then, !dbg !9258

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 @compute_reloc_for_constant(%union.tree_node* %exp) #8, !dbg !9259
  %call7 = tail call %union.section* @get_named_section(%union.tree_node* %exp, i8* null, i32 %call) #8, !dbg !9260
  br label %return, !dbg !9261

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %2 = load %union.section* (%union.tree_node*, i32, i64)*, %union.section* (%union.tree_node*, i32, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 21), align 8, !dbg !9262
  %call8 = tail call i32 @compute_reloc_for_constant(%union.tree_node* %exp) #8, !dbg !9263
  %call9 = tail call fastcc i32 @get_constant_alignment(%union.tree_node* %exp) #8, !dbg !9264
  %conv = zext i32 %call9 to i64, !dbg !9264
  %call10 = tail call %union.section* %2(%union.tree_node* %exp, i32 %call8, i64 %conv) #6, !dbg !9265
  br label %return, !dbg !9266

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi %union.section* [ %call7, %if.then ], [ %call10, %if.else ], !dbg !9267
  ret %union.section* %retval.0, !dbg !9268
}

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_complex(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constant_def_contents(%struct.rtx_def* %symbol) unnamed_addr #5 !dbg !9269 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %symbol, metadata !9271, metadata !DIExpression()), !dbg !9274
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 0, !dbg !9275
  %bf.load = load i32, i32* %0, align 8, !dbg !9275
  %bf.clear = and i32 %bf.load, 67108864, !dbg !9275
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !9275
  br i1 %tobool, label %cond.false, label %cond.end, !dbg !9275

cond.false:                                       ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9275
  %rt_tree = bitcast %union.rtunion_def* %1 to %union.tree_node**, !dbg !9275
  %2 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !9275
  br label %cond.end, !dbg !9275

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %2, %cond.false ], [ null, %entry ], !dbg !9275
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !9272, metadata !DIExpression()), !dbg !9274
  tail call fastcc void @output_addressed_constants(%union.tree_node* %cond) #8, !dbg !9276
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %cond, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9277
  %bf.load1 = load i64, i64* %3, align 8, !dbg !9278
  %bf.set = or i64 %bf.load1, 4194304, !dbg !9278
  store i64 %bf.set, i64* %3, align 8, !dbg !9278
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9279
  %rt_int = bitcast %union.rtunion_def* %4 to i32*, !dbg !9279
  %5 = load i32, i32* %rt_int, align 8, !dbg !9279
  %6 = trunc i32 %5 to i8, !dbg !9279
  %cmp = icmp slt i8 %6, 0, !dbg !9279
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9281

land.lhs.true:                                    ; preds = %cond.end
  %block = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 1, !dbg !9282
  %7 = load %struct.object_block*, %struct.object_block** %block, align 8, !dbg !9282
  %tobool7 = icmp eq %struct.object_block* %7, null, !dbg !9282
  br i1 %tobool7, label %if.else, label %if.then, !dbg !9283

if.then:                                          ; preds = %land.lhs.true
  tail call void @place_block_symbol(%struct.rtx_def* %symbol) #8, !dbg !9284
  br label %if.end23, !dbg !9284

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %call = tail call fastcc %union.section* @get_constant_section(%union.tree_node* %cond) #8, !dbg !9285
  tail call void @switch_to_section(%union.section* %call) #8, !dbg !9287
  %call8 = tail call fastcc i32 @get_constant_alignment(%union.tree_node* %cond) #8, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %call8, metadata !9273, metadata !DIExpression()), !dbg !9274
  %cmp9 = icmp ugt i32 %call8, 8, !dbg !9289
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !9291

if.then10:                                        ; preds = %if.else
  %div = lshr i32 %call8, 3, !dbg !9292
  %conv = zext i32 %div to i64, !dbg !9292
  %call11 = tail call i32 @floor_log2(i64 %conv) #6, !dbg !9292
  %cmp12 = icmp eq i32 %call11, 0, !dbg !9292
  br i1 %cmp12, label %if.end19, label %if.then14, !dbg !9294

if.then14:                                        ; preds = %if.then10
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !9292
  %call17 = tail call i32 @floor_log2(i64 %conv) #6, !dbg !9292
  %shl = shl i32 1, %call17, !dbg !9292
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !9292
  br label %if.end19, !dbg !9292

if.end19:                                         ; preds = %if.then10, %if.then14, %if.else
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %symbol, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !9295
  %9 = load i8*, i8** %rt_str, align 8, !dbg !9295
  tail call fastcc void @assemble_constant_contents(%union.tree_node* %cond, i8* %9, i32 %call8) #8, !dbg !9296
  br label %if.end23

if.end23:                                         ; preds = %if.end19, %if.then
  %10 = load i32, i32* @flag_mudflap, align 4, !dbg !9297
  %tobool24 = icmp eq i32 %10, 0, !dbg !9297
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !9299

if.then25:                                        ; preds = %if.end23
  tail call void @mudflap_enqueue_constant(%union.tree_node* %cond) #6, !dbg !9300
  br label %if.end26, !dbg !9300

if.end26:                                         ; preds = %if.end23, %if.then25
  ret void, !dbg !9301
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assemble_constant_contents(%union.tree_node* %exp, i8* %label, i32 %align) unnamed_addr #5 !dbg !9302 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9306, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i8* %label, metadata !9307, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i32 %align, metadata !9308, metadata !DIExpression()), !dbg !9310
  %call = tail call fastcc i64 @get_constant_size(%union.tree_node* %exp) #8, !dbg !9311
  call void @llvm.dbg.value(metadata i64 %call, metadata !9309, metadata !DIExpression()), !dbg !9310
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !9312
  tail call void @assemble_name(%struct._IO_FILE* %0, i8* %label) #8, !dbg !9312
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !9312
  %call1 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %1) #6, !dbg !9312
  tail call void @output_constant(%union.tree_node* %exp, i64 %call, i32 %align) #8, !dbg !9314
  ret void, !dbg !9315
}

declare dso_local void @mudflap_enqueue_constant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @const_desc_rtx_hash(i8* %ptr) #5 !dbg !9316 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !9319, metadata !DIExpression()), !dbg !9321
  %hash = getelementptr inbounds i8, i8* %ptr, i64 40, !dbg !9322
  %0 = bitcast i8* %hash to i32*, !dbg !9322
  %1 = load i32, i32* %0, align 8, !dbg !9322
  ret i32 %1, !dbg !9323
}

; Function Attrs: nounwind uwtable
define internal i32 @const_desc_rtx_eq(i8* %a, i8* %b) #5 !dbg !9324 {
entry:
  call void @llvm.dbg.value(metadata i8* %a, metadata !9326, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %b, metadata !9327, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %a, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %b, metadata !9329, metadata !DIExpression()), !dbg !9330
  %mode = getelementptr inbounds i8, i8* %a, i64 44, !dbg !9331
  %0 = bitcast i8* %mode to i32*, !dbg !9331
  %1 = load i32, i32* %0, align 4, !dbg !9331
  %mode1 = getelementptr inbounds i8, i8* %b, i64 44, !dbg !9333
  %2 = bitcast i8* %mode1 to i32*, !dbg !9333
  %3 = load i32, i32* %2, align 4, !dbg !9333
  %cmp = icmp eq i32 %1, %3, !dbg !9334
  br i1 %cmp, label %if.end, label %cleanup, !dbg !9335

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %b, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %a, metadata !9328, metadata !DIExpression()), !dbg !9330
  %constant = getelementptr inbounds i8, i8* %a, i64 24, !dbg !9336
  %4 = bitcast i8* %constant to %struct.rtx_def**, !dbg !9336
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !9336
  %constant2 = getelementptr inbounds i8, i8* %b, i64 24, !dbg !9337
  %6 = bitcast i8* %constant2 to %struct.rtx_def**, !dbg !9337
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !9337
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %7) #6, !dbg !9338
  br label %cleanup, !dbg !9339

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ], !dbg !9330
  ret i32 %retval.0, !dbg !9340
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @const_rtx_hash_1(%struct.rtx_def** %xp, i8* %data) #5 !dbg !9341 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xp, metadata !9345, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i8* %data, metadata !9346, metadata !DIExpression()), !dbg !9361
  %0 = load %struct.rtx_def*, %struct.rtx_def** %xp, align 8, !dbg !9362
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !9352, metadata !DIExpression()), !dbg !9361
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !9363
  %bf.load = load i32, i32* %1, align 8, !dbg !9363
  %bf.clear = and i32 %bf.load, 65535, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !9349, metadata !DIExpression()), !dbg !9361
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9364
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %bf.clear2, metadata !9348, metadata !DIExpression()), !dbg !9361
  %mul = mul i32 %bf.clear, 1048573, !dbg !9365
  %add = add i32 %mul, %bf.clear2, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %add, metadata !9350, metadata !DIExpression()), !dbg !9361
  %trunc = trunc i32 %bf.load to i16, !dbg !9367
  switch i16 %trunc, label %sw.epilog [
    i16 30, label %sw.bb
    i16 32, label %sw.bb6
    i16 31, label %sw.bb18
    i16 33, label %sw.bb22
    i16 45, label %sw.bb39
    i16 44, label %sw.bb45
    i16 18, label %sw.bb54
    i16 19, label %sw.bb54
  ], !dbg !9367

sw.bb:                                            ; preds = %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !9368
  %arrayidx = bitcast %union.u* %u to i64*, !dbg !9368
  %2 = load i64, i64* %arrayidx, align 8, !dbg !9368
  call void @llvm.dbg.value(metadata i64 %2, metadata !9347, metadata !DIExpression()), !dbg !9361
  br label %fold_hwi, !dbg !9369

fold_hwi:                                         ; preds = %if.then, %sw.bb
  %hwi.0 = phi i64 [ %xor15, %if.then ], [ %2, %sw.bb ], !dbg !9370
  call void @llvm.dbg.value(metadata i64 %hwi.0, metadata !9347, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.label(metadata !9360), !dbg !9371
  call void @llvm.dbg.value(metadata i32 32, metadata !9353, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i32 2, metadata !9356, metadata !DIExpression()), !dbg !9372
  %conv = trunc i64 %hwi.0 to i32, !dbg !9373
  %xor = xor i32 %add, %conv, !dbg !9374
  call void @llvm.dbg.value(metadata i32 %xor, metadata !9350, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 1, metadata !9357, metadata !DIExpression()), !dbg !9372
  br label %for.cond, !dbg !9375

for.cond:                                         ; preds = %for.body, %fold_hwi
  %h.0 = phi i32 [ %xor, %fold_hwi ], [ %xor5, %for.body ], !dbg !9372
  %hwi.1 = phi i64 [ %hwi.0, %fold_hwi ], [ %shr, %for.body ], !dbg !9370
  %i.0 = phi i32 [ 1, %fold_hwi ], [ %inc, %for.body ], !dbg !9377
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !9357, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i64 %hwi.1, metadata !9347, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.0, metadata !9350, metadata !DIExpression()), !dbg !9361
  %exitcond = icmp eq i32 %i.0, 2, !dbg !9378
  br i1 %exitcond, label %sw.epilog.loopexit, label %for.body, !dbg !9380

for.body:                                         ; preds = %for.cond
  %shr = lshr i64 %hwi.1, 32, !dbg !9381
  call void @llvm.dbg.value(metadata i64 %shr, metadata !9347, metadata !DIExpression()), !dbg !9361
  %conv4 = trunc i64 %shr to i32, !dbg !9383
  %xor5 = xor i32 %h.0, %conv4, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %xor5, metadata !9350, metadata !DIExpression()), !dbg !9361
  %inc = add nuw nsw i32 %i.0, 1, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9357, metadata !DIExpression()), !dbg !9372
  br label %for.cond, !dbg !9386, !llvm.loop !9387

sw.bb6:                                           ; preds = %entry
  %cmp7 = icmp eq i32 %bf.clear2, 0, !dbg !9389
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !9391
  br i1 %cmp7, label %if.then, label %if.else, !dbg !9392

if.then:                                          ; preds = %sw.bb6
  %arrayidx11 = bitcast %union.u* %u9 to i64*, !dbg !9393
  %3 = load i64, i64* %arrayidx11, align 8, !dbg !9393
  %arrayidx14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9395
  %4 = bitcast %union.rtunion_def* %arrayidx14 to i64*, !dbg !9395
  %5 = load i64, i64* %4, align 8, !dbg !9395
  %xor15 = xor i64 %3, %5, !dbg !9396
  call void @llvm.dbg.value(metadata i64 %xor15, metadata !9347, metadata !DIExpression()), !dbg !9361
  br label %fold_hwi, !dbg !9397

if.else:                                          ; preds = %sw.bb6
  %rv = bitcast %union.u* %u9 to %struct.real_value*, !dbg !9398
  %call = tail call i32 @real_hash(%struct.real_value* nonnull %rv) #6, !dbg !9399
  %xor17 = xor i32 %add, %call, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %xor17, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9401

sw.bb18:                                          ; preds = %entry
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, !dbg !9402
  %fv = bitcast %union.u* %u19 to %struct.fixed_value*, !dbg !9402
  %call20 = tail call i32 @fixed_hash(%struct.fixed_value* nonnull %fv) #6, !dbg !9403
  %xor21 = xor i32 %add, %call20, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %xor21, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9405

sw.bb22:                                          ; preds = %entry
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9406
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtvec_def**, !dbg !9406
  %6 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9406
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %6, i64 0, i32 0, !dbg !9406
  %7 = load i32, i32* %num_elem, align 8, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %7, metadata !9358, metadata !DIExpression()), !dbg !9408
  %8 = sext i32 %7 to i64, !dbg !9409
  br label %for.cond26, !dbg !9409

for.cond26:                                       ; preds = %for.body29, %sw.bb22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ %8, %sw.bb22 ], !dbg !9361
  %h.1 = phi i32 [ %mul30, %for.body29 ], [ %add, %sw.bb22 ], !dbg !9361
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9358, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %h.1, metadata !9350, metadata !DIExpression()), !dbg !9361
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !9410
  call void @llvm.dbg.value(metadata i32 undef, metadata !9358, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9408
  %cmp27 = icmp sgt i64 %indvars.iv, 0, !dbg !9412
  br i1 %cmp27, label %for.body29, label %sw.epilog.loopexit1, !dbg !9413

for.body29:                                       ; preds = %for.cond26
  %mul30 = mul i32 %h.1, 251, !dbg !9414
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9415
  %arrayidx35 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next, !dbg !9415
  %call36 = tail call i32 @const_rtx_hash_1(%struct.rtx_def** nonnull %arrayidx35, i8* %data) #8, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %mul30, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %for.cond26, !dbg !9417, !llvm.loop !9418

sw.bb39:                                          ; preds = %entry
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !9420
  %10 = load i8*, i8** %rt_str, align 8, !dbg !9420
  %call43 = tail call i32 @htab_hash_string(i8* %10) #6, !dbg !9421
  %xor44 = xor i32 %add, %call43, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %xor44, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9423

sw.bb45:                                          ; preds = %entry
  %mul46 = mul i32 %add, 251, !dbg !9424
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9425
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !9425
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9425
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, !dbg !9425
  %12 = getelementptr inbounds %union.u, %union.u* %u50, i64 1, i32 0, i32 0, i64 1, !dbg !9425
  %rt_int = bitcast %union.rtunion_def* %12 to i32*, !dbg !9425
  %13 = load i32, i32* %rt_int, align 8, !dbg !9425
  %add53 = add i32 %mul46, %13, !dbg !9426
  call void @llvm.dbg.value(metadata i32 %add53, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9427

sw.bb54:                                          ; preds = %entry, %entry
  %mul55 = mul i32 %add, 251, !dbg !9428
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9429
  %rt_int59 = bitcast %union.rtunion_def* %14 to i32*, !dbg !9429
  %15 = load i32, i32* %rt_int59, align 8, !dbg !9429
  %add60 = add i32 %mul55, %15, !dbg !9430
  call void @llvm.dbg.value(metadata i32 %add60, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9431

sw.epilog.loopexit:                               ; preds = %for.cond
  %h.0.lcssa = phi i32 [ %h.0, %for.cond ], !dbg !9372
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.0.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9432

sw.epilog.loopexit1:                              ; preds = %for.cond26
  %h.1.lcssa = phi i32 [ %h.1, %for.cond26 ], !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.1.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.1.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.1.lcssa, metadata !9350, metadata !DIExpression()), !dbg !9361
  br label %sw.epilog, !dbg !9432

sw.epilog:                                        ; preds = %sw.epilog.loopexit1, %sw.epilog.loopexit, %entry, %sw.bb54, %sw.bb45, %sw.bb39, %sw.bb18, %if.else
  %h.2 = phi i32 [ %add60, %sw.bb54 ], [ %add53, %sw.bb45 ], [ %xor44, %sw.bb39 ], [ %xor21, %sw.bb18 ], [ %xor17, %if.else ], [ %add, %entry ], [ %h.0.lcssa, %sw.epilog.loopexit ], [ %h.1.lcssa, %sw.epilog.loopexit1 ], !dbg !9361
  call void @llvm.dbg.value(metadata i32 %h.2, metadata !9350, metadata !DIExpression()), !dbg !9361
  %16 = bitcast i8* %data to i32*, !dbg !9432
  call void @llvm.dbg.value(metadata i32* %16, metadata !9351, metadata !DIExpression()), !dbg !9361
  %17 = load i32, i32* %16, align 4, !dbg !9433
  %mul61 = mul i32 %17, 509, !dbg !9434
  %add62 = add i32 %mul61, %h.2, !dbg !9435
  store i32 %add62, i32* %16, align 4, !dbg !9436
  ret i32 0, !dbg !9437
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hash_section(%union.section* %sect) unnamed_addr #5 !dbg !9438 {
entry:
  call void @llvm.dbg.value(metadata %union.section* %sect, metadata !9442, metadata !DIExpression()), !dbg !9443
  %flags = getelementptr inbounds %union.section, %union.section* %sect, i64 0, i32 0, i32 0, i32 0, !dbg !9444
  %0 = load i32, i32* %flags, align 8, !dbg !9444
  %and = and i32 %0, 2097152, !dbg !9446
  %tobool = icmp eq i32 %and, 0, !dbg !9446
  br i1 %tobool, label %if.end, label %if.then, !dbg !9447

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %union.section, %union.section* %sect, i64 0, i32 0, i32 1, !dbg !9448
  %1 = bitcast void (i8*)** %name to i8**, !dbg !9448
  %2 = load i8*, i8** %1, align 8, !dbg !9448
  %call = tail call i32 @htab_hash_string(i8* %2) #6, !dbg !9449
  br label %return, !dbg !9450

if.end:                                           ; preds = %entry
  br label %return, !dbg !9451

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %0, %if.end ], !dbg !9443
  ret i32 %retval.0, !dbg !9452
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_constant_pool() unnamed_addr #5 !dbg !9453 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 36), align 8, !dbg !9457
  %tobool = icmp eq i8 %0, 0, !dbg !9459
  %1 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !9460
  %cmp = icmp eq i32 %1, 0, !dbg !9461
  %or.cond = and i1 %tobool, %cmp, !dbg !9462
  br i1 %or.cond, label %cleanup.cont, label %if.end, !dbg !9462

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @get_insns() #6, !dbg !9463
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !9455, metadata !DIExpression()), !dbg !9465
  br label %for.cond, !dbg !9466

for.cond:                                         ; preds = %for.body, %if.end
  %insn.0 = phi %struct.rtx_def* [ %call, %if.end ], [ %3, %for.body ], !dbg !9467
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !9455, metadata !DIExpression()), !dbg !9465
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !9468
  br i1 %tobool1, label %for.end, label %for.body, !dbg !9468

for.body:                                         ; preds = %for.cond
  tail call fastcc void @mark_constants(%struct.rtx_def* nonnull %insn.0) #8, !dbg !9469
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9471
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !9471
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9471
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !9455, metadata !DIExpression()), !dbg !9465
  br label %for.cond, !dbg !9472, !llvm.loop !9473

for.end:                                          ; preds = %for.cond
  br label %for.cond2, !dbg !9475

for.cond2:                                        ; preds = %for.body4, %for.end
  %link.0.in = phi %struct.rtx_def** [ getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 27), %for.end ], [ %rt_rtx13, %for.body4 ]
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !9477
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !9456, metadata !DIExpression()), !dbg !9465
  %tobool3 = icmp eq %struct.rtx_def* %link.0, null, !dbg !9478
  br i1 %tobool3, label %cleanup.cont.loopexit, label %for.body4, !dbg !9478

for.body4:                                        ; preds = %for.cond2
  %arrayidx7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9479
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !9479
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !9479
  tail call fastcc void @mark_constants(%struct.rtx_def* %4) #8, !dbg !9481
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !9482
  %rt_rtx13 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !9482
  br label %for.cond2, !dbg !9483, !llvm.loop !9484

cleanup.cont.loopexit:                            ; preds = %for.cond2
  br label %cleanup.cont, !dbg !9486

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !9486
}

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_constants(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !9487 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !9489, metadata !DIExpression()), !dbg !9499
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !9500
  %bf.load = load i32, i32* %0, align 8, !dbg !9500
  %bf.clear = and i32 %bf.load, 65535, !dbg !9500
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !9500
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !9500

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !9500
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !9500

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !9500
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !9500

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !9500
  br i1 %cmp11, label %if.end, label %if.end55, !dbg !9502

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !9503
  %1 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !9503
  %2 = bitcast %union.rtunion_def* %1 to i32**, !dbg !9503
  %3 = load i32*, i32** %2, align 8, !dbg !9503
  %bf.load12 = load i32, i32* %3, align 8, !dbg !9503
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !9503
  %cmp14 = icmp eq i32 %bf.clear13, 5, !dbg !9504
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9505

if.then15:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32* %3, metadata !9490, metadata !DIExpression()), !dbg !9506
  %arrayidx22 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !9507
  %rt_rtvec = bitcast i32* %arrayidx22 to %struct.rtvec_def**, !dbg !9507
  %4 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9507
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %4, i64 0, i32 0, !dbg !9507
  %5 = load i32, i32* %num_elem, align 8, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %5, metadata !9494, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i32 0, metadata !9493, metadata !DIExpression()), !dbg !9506
  %6 = sext i32 %5 to i64, !dbg !9508
  br label %for.cond, !dbg !9508

for.cond:                                         ; preds = %for.inc, %if.then15
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then15 ], !dbg !9509
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9493, metadata !DIExpression()), !dbg !9506
  %cmp23 = icmp slt i64 %indvars.iv, %6, !dbg !9510
  br i1 %cmp23, label %for.body, label %if.end55.loopexit, !dbg !9511

for.body:                                         ; preds = %for.cond
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9512
  %arrayidx28 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i64 0, i32 1, i64 %indvars.iv, !dbg !9512
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx28, align 8, !dbg !9512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !9495, metadata !DIExpression()), !dbg !9513
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 0, !dbg !9514
  %bf.load29 = load i32, i32* %9, align 8, !dbg !9514
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !9514
  %cmp31 = icmp eq i32 %bf.clear30, 8, !dbg !9514
  br i1 %cmp31, label %if.then44, label %lor.lhs.false32, !dbg !9514

lor.lhs.false32:                                  ; preds = %for.body
  %cmp35 = icmp eq i32 %bf.clear30, 7, !dbg !9514
  br i1 %cmp35, label %if.then44, label %lor.lhs.false36, !dbg !9514

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %cmp39 = icmp eq i32 %bf.clear30, 9, !dbg !9514
  br i1 %cmp39, label %if.then44, label %lor.lhs.false40, !dbg !9514

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %cmp43 = icmp eq i32 %bf.clear30, 10, !dbg !9514
  br i1 %cmp43, label %if.then44, label %for.inc, !dbg !9516

if.then44:                                        ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false32, %for.body
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, !dbg !9517
  %10 = getelementptr inbounds %union.u, %union.u* %u45, i64 1, i32 0, i32 0, i64 0, !dbg !9517
  %rt_rtx48 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !9517
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx48, i32 (%struct.rtx_def**, i8*)* nonnull @mark_constant, i8* null) #6, !dbg !9518
  br label %for.inc, !dbg !9518

for.inc:                                          ; preds = %lor.lhs.false40, %if.then44
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9519
  call void @llvm.dbg.value(metadata i32 undef, metadata !9493, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9506
  br label %for.cond, !dbg !9520, !llvm.loop !9521

if.else:                                          ; preds = %if.end
  %rt_rtx19 = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !9523
  %call54 = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %rt_rtx19, i32 (%struct.rtx_def**, i8*)* nonnull @mark_constant, i8* null) #6, !dbg !9524
  br label %if.end55

if.end55.loopexit:                                ; preds = %for.cond
  br label %if.end55, !dbg !9525

if.end55:                                         ; preds = %if.end55.loopexit, %lor.lhs.false8, %if.else
  ret void, !dbg !9525
}

; Function Attrs: nounwind uwtable
define internal i32 @mark_constant(%struct.rtx_def** %current_rtx, i8* %data) #5 !dbg !9526 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %current_rtx, metadata !9528, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.value(metadata i8* %data, metadata !9529, metadata !DIExpression()), !dbg !9537
  %0 = load %struct.rtx_def*, %struct.rtx_def** %current_rtx, align 8, !dbg !9538
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !9530, metadata !DIExpression()), !dbg !9537
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !9539
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !9541

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !9542
  %bf.load = load i32, i32* %1, align 8, !dbg !9542
  %bf.clear = and i32 %bf.load, 65535, !dbg !9542
  %cmp1 = icmp eq i32 %bf.clear, 45, !dbg !9543
  br i1 %cmp1, label %if.end, label %cleanup, !dbg !9544

if.end:                                           ; preds = %lor.lhs.false
  %bf.clear3 = and i32 %bf.load, 67108864, !dbg !9545
  %tobool = icmp eq i32 %bf.clear3, 0, !dbg !9545
  br i1 %tobool, label %if.else, label %if.then4, !dbg !9546

if.then4:                                         ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9547
  %rt_constant = bitcast %union.rtunion_def* %2 to %struct.constant_descriptor_rtx**, !dbg !9547
  %3 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !9547
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %3, metadata !9531, metadata !DIExpression()), !dbg !9548
  %mark = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %3, i64 0, i32 9, !dbg !9549
  %4 = load i32, i32* %mark, align 8, !dbg !9549
  %cmp9 = icmp eq i32 %4, 0, !dbg !9551
  br i1 %cmp9, label %if.then10, label %cleanup, !dbg !9552

if.then10:                                        ; preds = %if.then4
  store i32 1, i32* %mark, align 8, !dbg !9553
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %3, i64 0, i32 3, !dbg !9555
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** nonnull %constant, i32 (%struct.rtx_def**, i8*)* nonnull @mark_constant, i8* null) #6, !dbg !9556
  br label %cleanup, !dbg !9557

if.else:                                          ; preds = %if.end
  %bf.clear15 = and i32 %bf.load, 1073741824, !dbg !9558
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !9558
  br i1 %tobool16, label %cleanup, label %if.then17, !dbg !9559

if.then17:                                        ; preds = %if.else
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !9560
  %6 = bitcast %union.rtunion_def* %5 to i64**, !dbg !9560
  %7 = load i64*, i64** %6, align 8, !dbg !9560
  %bf.load29 = load i64, i64* %7, align 8, !dbg !9561
  %bf.cast1 = and i64 %bf.load29, 4194304, !dbg !9561
  %tobool32 = icmp eq i64 %bf.cast1, 0, !dbg !9561
  br i1 %tobool32, label %if.then33, label %cleanup, !dbg !9563

if.then33:                                        ; preds = %if.then17
  %8 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !9564
  %dec = add i32 %8, -1, !dbg !9564
  store i32 %dec, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 2, i32 1), align 8, !dbg !9564
  tail call fastcc void @output_constant_def_contents(%struct.rtx_def* nonnull %0) #8, !dbg !9566
  br label %cleanup, !dbg !9567

cleanup:                                          ; preds = %if.then17, %if.else, %lor.lhs.false, %if.then10, %if.then4, %if.then33, %entry
  %retval.0 = phi i32 [ 0, %lor.lhs.false ], [ 0, %entry ], [ -1, %if.else ], [ -1, %if.then33 ], [ -1, %if.then17 ], [ -1, %if.then4 ], [ -1, %if.then10 ], !dbg !9537
  ret i32 %retval.0, !dbg !9568
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constant_pool_1(%struct.constant_descriptor_rtx* %desc, i32 %align) unnamed_addr #5 !dbg !9569 {
entry:
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %desc, metadata !9573, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.value(metadata i32 %align, metadata !9574, metadata !DIExpression()), !dbg !9577
  %constant = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc, i64 0, i32 3, !dbg !9578
  %0 = load %struct.rtx_def*, %struct.rtx_def** %constant, align 8, !dbg !9578
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !9575, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %0, metadata !9576, metadata !DIExpression()), !dbg !9577
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !9579
  %bf.load = load i32, i32* %1, align 8, !dbg !9579
  %trunc = trunc i32 %bf.load to i16, !dbg !9580
  switch i16 %trunc, label %sw.epilog [
    i16 35, label %sw.bb
    i16 44, label %sw.bb22
  ], !dbg !9580

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9581
  %2 = bitcast %union.rtunion_def* %arrayidx to i32**, !dbg !9581
  %3 = load i32*, i32** %2, align 8, !dbg !9581
  %bf.load1 = load i32, i32* %3, align 8, !dbg !9581
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9581
  %cmp = icmp eq i32 %bf.clear2, 49, !dbg !9584
  br i1 %cmp, label %lor.lhs.false, label %sw.epilog, !dbg !9585

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx9 = getelementptr inbounds i32, i32* %3, i64 2, !dbg !9586
  %4 = bitcast i32* %arrayidx9 to i32**, !dbg !9586
  %5 = load i32*, i32** %4, align 8, !dbg !9586
  %bf.load11 = load i32, i32* %5, align 8, !dbg !9586
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !9586
  %cmp13 = icmp eq i32 %bf.clear12, 44, !dbg !9587
  br i1 %cmp13, label %if.end, label %sw.epilog, !dbg !9588

if.end:                                           ; preds = %lor.lhs.false
  %6 = bitcast i32* %5 to %struct.rtx_def*, !dbg !9588
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !9576, metadata !DIExpression()), !dbg !9577
  br label %sw.bb22, !dbg !9589

sw.bb22:                                          ; preds = %entry, %if.end
  %tmp.0 = phi %struct.rtx_def* [ %0, %entry ], [ %6, %if.end ], !dbg !9577
  call void @llvm.dbg.value(metadata %struct.rtx_def* %tmp.0, metadata !9576, metadata !DIExpression()), !dbg !9577
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %tmp.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9590
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !9590
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !9590
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !9576, metadata !DIExpression()), !dbg !9577
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 0, !dbg !9591
  %bf.load27 = load i32, i32* %8, align 8, !dbg !9591
  %bf.clear28 = and i32 %bf.load27, 134217728, !dbg !9591
  %tobool = icmp eq i32 %bf.clear28, 0, !dbg !9591
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !9591

cond.true:                                        ; preds = %sw.bb22
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3846, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9591
  %bf.load29.pre = load i32, i32* %8, align 8, !dbg !9592
  br label %cond.end, !dbg !9591

cond.end:                                         ; preds = %sw.bb22, %cond.true
  %bf.load29 = phi i32 [ %bf.load27, %sw.bb22 ], [ %bf.load29.pre, %cond.true ], !dbg !9592
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !9592
  %cmp31 = icmp eq i32 %bf.clear30, 13, !dbg !9592
  br i1 %cmp31, label %lor.lhs.false32, label %sw.epilog, !dbg !9592

lor.lhs.false32:                                  ; preds = %cond.end
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, !dbg !9592
  %9 = getelementptr inbounds %union.u, %union.u* %u33, i64 1, i32 0, i32 0, i64 0, !dbg !9592
  %rt_int = bitcast %union.rtunion_def* %9 to i32*, !dbg !9592
  %10 = load i32, i32* %rt_int, align 8, !dbg !9592
  %cmp36 = icmp eq i32 %10, 0, !dbg !9592
  br i1 %cmp36, label %cond.true37, label %sw.epilog, !dbg !9592

cond.true37:                                      ; preds = %lor.lhs.false32
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9592
  br label %sw.epilog, !dbg !9592

sw.epilog:                                        ; preds = %lor.lhs.false, %sw.bb, %lor.lhs.false32, %entry, %cond.true37, %cond.end
  tail call void @assemble_align(i32 %align) #8, !dbg !9593
  %11 = load void (%struct._IO_FILE*, i8*, i64)*, void (%struct._IO_FILE*, i8*, i64)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 11), align 8, !dbg !9594
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @asm_out_file, align 8, !dbg !9595
  %labelno = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc, i64 0, i32 8, !dbg !9596
  %13 = load i32, i32* %labelno, align 4, !dbg !9596
  %conv = sext i32 %13 to i64, !dbg !9597
  tail call void %11(%struct._IO_FILE* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), i64 %conv) #6, !dbg !9598
  %mode = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %desc, i64 0, i32 6, !dbg !9599
  %14 = load i32, i32* %mode, align 4, !dbg !9599
  tail call fastcc void @output_constant_pool_2(i32 %14, %struct.rtx_def* %0, i32 %align) #8, !dbg !9600
  %15 = load i32, i32* %mode, align 4, !dbg !9601
  %idxprom = zext i32 %15 to i64, !dbg !9601
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9601
  %16 = load i8, i8* %arrayidx42, align 1, !dbg !9601
  %conv44 = zext i8 %16 to i32, !dbg !9601
  %mul = shl nuw nsw i32 %conv44, 3, !dbg !9601
  %cmp47 = icmp ult i32 %mul, %align, !dbg !9603
  %17 = load %union.section*, %union.section** @in_section, align 8, !dbg !9604
  %tobool49 = icmp ne %union.section* %17, null, !dbg !9604
  %or.cond = and i1 %cmp47, %tobool49, !dbg !9605
  br i1 %or.cond, label %land.lhs.true50, label %if.end53, !dbg !9605

land.lhs.true50:                                  ; preds = %sw.epilog
  %flags = getelementptr inbounds %union.section, %union.section* %17, i64 0, i32 0, i32 0, i32 0, !dbg !9606
  %18 = load i32, i32* %flags, align 8, !dbg !9606
  %19 = trunc i32 %18 to i16, !dbg !9607
  %tobool51 = icmp slt i16 %19, 0, !dbg !9607
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9608

if.then52:                                        ; preds = %land.lhs.true50
  tail call void @assemble_align(i32 %align) #8, !dbg !9609
  br label %if.end53, !dbg !9609

if.end53:                                         ; preds = %if.then52, %land.lhs.true50, %sw.epilog
  ret void, !dbg !9610
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constant_pool_2(i32 %mode, %struct.rtx_def* %x, i32 %align) unnamed_addr #5 !dbg !9611 {
entry:
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %mode, metadata !9615, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !9616, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %align, metadata !9617, metadata !DIExpression()), !dbg !9630
  %idxprom = zext i32 %mode to i64, !dbg !9631
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9631
  %0 = load i8, i8* %arrayidx, align 1, !dbg !9631
  switch i8 %0, label %sw.default [
    i8 8, label %sw.bb
    i8 9, label %sw.bb
    i8 2, label %sw.bb2
    i8 3, label %sw.bb2
    i8 4, label %sw.bb2
    i8 5, label %sw.bb2
    i8 6, label %sw.bb2
    i8 7, label %sw.bb2
    i8 17, label %sw.bb7
    i8 12, label %sw.bb7
    i8 13, label %sw.bb7
    i8 14, label %sw.bb7
    i8 15, label %sw.bb7
    i8 16, label %sw.bb7
  ], !dbg !9632

sw.bb:                                            ; preds = %entry, %entry
  %1 = bitcast %struct.real_value* %r to i8*, !dbg !9633
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !9633
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !9634
  %bf.load = load i32, i32* %2, align 8, !dbg !9634
  %bf.clear = and i32 %bf.load, 65535, !dbg !9634
  %cmp = icmp eq i32 %bf.clear, 32, !dbg !9634
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !9634

cond.true:                                        ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3772, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9634
  br label %cond.end, !dbg !9634

cond.end:                                         ; preds = %sw.bb, %cond.true
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !9635
  %3 = bitcast %union.u* %u to i8*, !dbg !9635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %3, i64 32, i1 false), !dbg !9635
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !9618, metadata !DIExpression(DW_OP_deref)), !dbg !9636
  tail call void @assemble_real(%struct.real_value* nonnull byval(%struct.real_value) align 8 %r, i32 %mode, i32 %align) #8, !dbg !9637
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !9638
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %arrayidx4 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9639
  %4 = load i8, i8* %arrayidx4, align 1, !dbg !9639
  %conv6 = zext i8 %4 to i32, !dbg !9639
  %call = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %x, i32 %conv6, i32 %align, i32 1) #8, !dbg !9640
  br label %sw.epilog, !dbg !9641

sw.bb7:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom, !dbg !9642
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !9642
  %conv10 = zext i8 %5 to i32, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %conv10, metadata !9624, metadata !DIExpression()), !dbg !9643
  %idxprom11 = zext i8 %5 to i64, !dbg !9644
  %arrayidx12 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom11, !dbg !9644
  %6 = load i8, i8* %arrayidx12, align 1, !dbg !9644
  %conv14 = zext i8 %6 to i32, !dbg !9644
  %mul = shl nuw nsw i32 %conv14, 3, !dbg !9644
  %cmp17 = icmp ugt i32 %mul, %align, !dbg !9644
  br i1 %cmp17, label %cond.end28, label %cond.false20, !dbg !9644

cond.false20:                                     ; preds = %sw.bb7
  br label %cond.end28, !dbg !9644

cond.end28:                                       ; preds = %sw.bb7, %cond.false20
  %cond29 = phi i32 [ %mul, %cond.false20 ], [ %align, %sw.bb7 ], !dbg !9644
  call void @llvm.dbg.value(metadata i32 %cond29, metadata !9625, metadata !DIExpression()), !dbg !9643
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !9645
  %bf.load30 = load i32, i32* %7, align 8, !dbg !9645
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !9645
  %cmp32 = icmp eq i32 %bf.clear31, 33, !dbg !9645
  br i1 %cmp32, label %cond.end36, label %cond.true34, !dbg !9645

cond.true34:                                      ; preds = %cond.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3798, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9645
  br label %cond.end36, !dbg !9645

cond.end36:                                       ; preds = %cond.end28, %cond.true34
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !9646
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtvec_def**, !dbg !9646
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9646
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !9646
  %9 = load i32, i32* %num_elem, align 8, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %9, metadata !9623, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 0, metadata !9621, metadata !DIExpression()), !dbg !9643
  %10 = sext i32 %9 to i64, !dbg !9647
  br label %for.cond, !dbg !9647

for.cond:                                         ; preds = %for.body, %cond.end36
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end36 ], !dbg !9648
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9621, metadata !DIExpression()), !dbg !9643
  %cmp40 = icmp slt i64 %indvars.iv, %10, !dbg !9649
  br i1 %cmp40, label %for.body, label %sw.epilog.loopexit, !dbg !9650

for.body:                                         ; preds = %for.cond
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9651
  %arrayidx47 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv, !dbg !9651
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8, !dbg !9651
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !9626, metadata !DIExpression()), !dbg !9652
  %tobool = icmp eq i64 %indvars.iv, 0, !dbg !9653
  %cond29.align = select i1 %tobool, i32 %align, i32 %cond29, !dbg !9653
  tail call fastcc void @output_constant_pool_2(i32 %conv10, %struct.rtx_def* %12, i32 %cond29.align) #8, !dbg !9654
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !9655
  call void @llvm.dbg.value(metadata i32 undef, metadata !9621, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9643
  br label %for.cond, !dbg !9656, !llvm.loop !9657

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 3810, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9659
  br label %sw.epilog, !dbg !9660

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !9661

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb2, %cond.end
  ret void, !dbg !9661
}

declare dso_local %union.tree_node* @staticp(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @narrowing_initializer_constant_valid_p(%union.tree_node* %value, %union.tree_node* %endtype, %union.tree_node** %cache) unnamed_addr #5 !dbg !9662 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %value, metadata !9664, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata %union.tree_node* %endtype, metadata !9665, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata %union.tree_node** %cache, metadata !9666, metadata !DIExpression()), !dbg !9673
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %endtype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9674
  %bf.load = load i64, i64* %0, align 8, !dbg !9674
  %bf.cast8 = and i64 %bf.load, 65535, !dbg !9674
  %cmp = icmp eq i64 %bf.cast8, 6, !dbg !9674
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !9674

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast8, 7, !dbg !9674
  br i1 %cmp5, label %if.end, label %lor.lhs.false6, !dbg !9674

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast8, 8, !dbg !9674
  br i1 %cmp11, label %if.end, label %cleanup452, !dbg !9676

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9677
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9677
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9667, metadata !DIExpression()), !dbg !9673
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9678
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !9678
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9668, metadata !DIExpression()), !dbg !9673
  br label %while.cond, !dbg !9679

while.cond:                                       ; preds = %cleanup, %if.end
  %op0.0 = phi %union.tree_node* [ %1, %if.end ], [ %op0.1, %cleanup ], !dbg !9680
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.0, metadata !9667, metadata !DIExpression()), !dbg !9673
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9681
  %bf.load16 = load i64, i64* %3, align 8, !dbg !9681
  %bf.cast1811 = and i64 %bf.load16, 65535, !dbg !9681
  %cmp19 = icmp eq i64 %bf.cast1811, 116, !dbg !9681
  br i1 %cmp19, label %while.body, label %lor.lhs.false20, !dbg !9681

lor.lhs.false20:                                  ; preds = %while.cond
  %4 = or i64 %bf.cast1811, 4, !dbg !9682
  %5 = icmp eq i64 %4, 117, !dbg !9682
  br i1 %5, label %while.body, label %while.end, !dbg !9682

while.body:                                       ; preds = %while.cond, %lor.lhs.false20
  %operands32 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9683
  %6 = load %union.tree_node*, %union.tree_node** %operands32, align 8, !dbg !9683
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9669, metadata !DIExpression()), !dbg !9684
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9685
  %cmp34 = icmp eq %union.tree_node* %6, %7, !dbg !9687
  br i1 %cmp34, label %cleanup, label %lor.lhs.false35, !dbg !9688

lor.lhs.false35:                                  ; preds = %while.body
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9689
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !9689
  %9 = load i64*, i64** %8, align 8, !dbg !9689
  %bf.load37 = load i64, i64* %9, align 8, !dbg !9689
  %bf.cast3933 = and i64 %bf.load37, 65535, !dbg !9689
  %cmp40 = icmp eq i64 %bf.cast3933, 14, !dbg !9689
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !9689

cond.true:                                        ; preds = %lor.lhs.false35
  %.cast34 = bitcast i64* %9 to %union.tree_node*, !dbg !9689
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast34) #6, !dbg !9689
  br label %cond.end, !dbg !9689

cond.false:                                       ; preds = %lor.lhs.false35
  %type45 = bitcast i64* %9 to %struct.tree_type*, !dbg !9689
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type45, i64 0, i32 6, !dbg !9689
  %bf.load46 = load i32, i32* %mode, align 4, !dbg !9689
  %bf.lshr = lshr i32 %bf.load46, 16, !dbg !9689
  %bf.clear47 = and i32 %bf.lshr, 255, !dbg !9689
  br label %cond.end, !dbg !9689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear47, %cond.false ], !dbg !9689
  %idxprom = zext i32 %cond to i64, !dbg !9689
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9689
  %10 = load i8, i8* %arrayidx48, align 1, !dbg !9689
  %cmp49 = icmp eq i8 %10, 2, !dbg !9689
  br i1 %cmp49, label %lor.lhs.false135, label %lor.lhs.false51, !dbg !9689

lor.lhs.false51:                                  ; preds = %cond.end
  %11 = load i64*, i64** %8, align 8, !dbg !9689
  %bf.load55 = load i64, i64* %11, align 8, !dbg !9689
  %bf.cast5735 = and i64 %bf.load55, 65535, !dbg !9689
  %cmp58 = icmp eq i64 %bf.cast5735, 14, !dbg !9689
  br i1 %cmp58, label %cond.true60, label %cond.false64, !dbg !9689

cond.true60:                                      ; preds = %lor.lhs.false51
  %.cast36 = bitcast i64* %11 to %union.tree_node*, !dbg !9689
  %call63 = tail call i32 @vector_type_mode(%union.tree_node* %.cast36) #6, !dbg !9689
  br label %cond.end72, !dbg !9689

cond.false64:                                     ; preds = %lor.lhs.false51
  %type67 = bitcast i64* %11 to %struct.tree_type*, !dbg !9689
  %mode68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i64 0, i32 6, !dbg !9689
  %bf.load69 = load i32, i32* %mode68, align 4, !dbg !9689
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !9689
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !9689
  br label %cond.end72, !dbg !9689

cond.end72:                                       ; preds = %cond.false64, %cond.true60
  %cond73 = phi i32 [ %call63, %cond.true60 ], [ %bf.clear71, %cond.false64 ], !dbg !9689
  %idxprom74 = zext i32 %cond73 to i64, !dbg !9689
  %arrayidx75 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom74, !dbg !9689
  %12 = load i8, i8* %arrayidx75, align 1, !dbg !9689
  %cmp77 = icmp eq i8 %12, 3, !dbg !9689
  br i1 %cmp77, label %lor.lhs.false135, label %lor.lhs.false79, !dbg !9689

lor.lhs.false79:                                  ; preds = %cond.end72
  %13 = load i64*, i64** %8, align 8, !dbg !9689
  %bf.load83 = load i64, i64* %13, align 8, !dbg !9689
  %bf.cast8537 = and i64 %bf.load83, 65535, !dbg !9689
  %cmp86 = icmp eq i64 %bf.cast8537, 14, !dbg !9689
  br i1 %cmp86, label %cond.true88, label %cond.false92, !dbg !9689

cond.true88:                                      ; preds = %lor.lhs.false79
  %.cast38 = bitcast i64* %13 to %union.tree_node*, !dbg !9689
  %call91 = tail call i32 @vector_type_mode(%union.tree_node* %.cast38) #6, !dbg !9689
  br label %cond.end100, !dbg !9689

cond.false92:                                     ; preds = %lor.lhs.false79
  %type95 = bitcast i64* %13 to %struct.tree_type*, !dbg !9689
  %mode96 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type95, i64 0, i32 6, !dbg !9689
  %bf.load97 = load i32, i32* %mode96, align 4, !dbg !9689
  %bf.lshr98 = lshr i32 %bf.load97, 16, !dbg !9689
  %bf.clear99 = and i32 %bf.lshr98, 255, !dbg !9689
  br label %cond.end100, !dbg !9689

cond.end100:                                      ; preds = %cond.false92, %cond.true88
  %cond101 = phi i32 [ %call91, %cond.true88 ], [ %bf.clear99, %cond.false92 ], !dbg !9689
  %idxprom102 = zext i32 %cond101 to i64, !dbg !9689
  %arrayidx103 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom102, !dbg !9689
  %14 = load i8, i8* %arrayidx103, align 1, !dbg !9689
  %cmp105 = icmp eq i8 %14, 10, !dbg !9689
  br i1 %cmp105, label %lor.lhs.false135, label %lor.lhs.false107, !dbg !9689

lor.lhs.false107:                                 ; preds = %cond.end100
  %15 = load i64*, i64** %8, align 8, !dbg !9689
  %bf.load111 = load i64, i64* %15, align 8, !dbg !9689
  %bf.cast11339 = and i64 %bf.load111, 65535, !dbg !9689
  %cmp114 = icmp eq i64 %bf.cast11339, 14, !dbg !9689
  br i1 %cmp114, label %cond.true116, label %cond.false120, !dbg !9689

cond.true116:                                     ; preds = %lor.lhs.false107
  %.cast40 = bitcast i64* %15 to %union.tree_node*, !dbg !9689
  %call119 = tail call i32 @vector_type_mode(%union.tree_node* %.cast40) #6, !dbg !9689
  br label %cond.end128, !dbg !9689

cond.false120:                                    ; preds = %lor.lhs.false107
  %type123 = bitcast i64* %15 to %struct.tree_type*, !dbg !9689
  %mode124 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type123, i64 0, i32 6, !dbg !9689
  %bf.load125 = load i32, i32* %mode124, align 4, !dbg !9689
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !9689
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !9689
  br label %cond.end128, !dbg !9689

cond.end128:                                      ; preds = %cond.false120, %cond.true116
  %cond129 = phi i32 [ %call119, %cond.true116 ], [ %bf.clear127, %cond.false120 ], !dbg !9689
  %idxprom130 = zext i32 %cond129 to i64, !dbg !9689
  %arrayidx131 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom130, !dbg !9689
  %16 = load i8, i8* %arrayidx131, align 1, !dbg !9689
  %cmp133 = icmp eq i8 %16, 12, !dbg !9689
  br i1 %cmp133, label %lor.lhs.false135, label %cleanup, !dbg !9690

lor.lhs.false135:                                 ; preds = %cond.end128, %cond.end100, %cond.end72, %cond.end
  %type137 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9691
  %17 = bitcast %union.tree_node** %type137 to i64**, !dbg !9691
  %18 = load i64*, i64** %17, align 8, !dbg !9691
  %bf.load139 = load i64, i64* %18, align 8, !dbg !9691
  %bf.cast14141 = and i64 %bf.load139, 65535, !dbg !9691
  %cmp142 = icmp eq i64 %bf.cast14141, 14, !dbg !9691
  br i1 %cmp142, label %cond.true144, label %cond.false148, !dbg !9691

cond.true144:                                     ; preds = %lor.lhs.false135
  %.cast42 = bitcast i64* %18 to %union.tree_node*, !dbg !9691
  %call147 = tail call i32 @vector_type_mode(%union.tree_node* %.cast42) #6, !dbg !9691
  br label %cond.end156, !dbg !9691

cond.false148:                                    ; preds = %lor.lhs.false135
  %type151 = bitcast i64* %18 to %struct.tree_type*, !dbg !9691
  %mode152 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type151, i64 0, i32 6, !dbg !9691
  %bf.load153 = load i32, i32* %mode152, align 4, !dbg !9691
  %bf.lshr154 = lshr i32 %bf.load153, 16, !dbg !9691
  %bf.clear155 = and i32 %bf.lshr154, 255, !dbg !9691
  br label %cond.end156, !dbg !9691

cond.end156:                                      ; preds = %cond.false148, %cond.true144
  %cond157 = phi i32 [ %call147, %cond.true144 ], [ %bf.clear155, %cond.false148 ], !dbg !9691
  %idxprom158 = zext i32 %cond157 to i64, !dbg !9691
  %arrayidx159 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom158, !dbg !9691
  %19 = load i8, i8* %arrayidx159, align 1, !dbg !9691
  %20 = load i64*, i64** %8, align 8, !dbg !9692
  %bf.load165 = load i64, i64* %20, align 8, !dbg !9692
  %bf.cast16743 = and i64 %bf.load165, 65535, !dbg !9692
  %cmp168 = icmp eq i64 %bf.cast16743, 14, !dbg !9692
  br i1 %cmp168, label %cond.true170, label %cond.false174, !dbg !9692

cond.true170:                                     ; preds = %cond.end156
  %.cast44 = bitcast i64* %20 to %union.tree_node*, !dbg !9692
  %call173 = tail call i32 @vector_type_mode(%union.tree_node* %.cast44) #6, !dbg !9692
  br label %cond.end182, !dbg !9692

cond.false174:                                    ; preds = %cond.end156
  %type177 = bitcast i64* %20 to %struct.tree_type*, !dbg !9692
  %mode178 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type177, i64 0, i32 6, !dbg !9692
  %bf.load179 = load i32, i32* %mode178, align 4, !dbg !9692
  %bf.lshr180 = lshr i32 %bf.load179, 16, !dbg !9692
  %bf.clear181 = and i32 %bf.lshr180, 255, !dbg !9692
  br label %cond.end182, !dbg !9692

cond.end182:                                      ; preds = %cond.false174, %cond.true170
  %cond183 = phi i32 [ %call173, %cond.true170 ], [ %bf.clear181, %cond.false174 ], !dbg !9692
  %idxprom184 = zext i32 %cond183 to i64, !dbg !9692
  %arrayidx185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom184, !dbg !9692
  %21 = load i8, i8* %arrayidx185, align 1, !dbg !9692
  %cmp188 = icmp ugt i8 %19, %21, !dbg !9693
  %spec.select = select i1 %cmp188, %union.tree_node* %op0.0, %union.tree_node* %6, !dbg !9694
  %spec.select4 = select i1 %cmp188, i32 3, i32 0, !dbg !9694
  br label %cleanup, !dbg !9694

cleanup:                                          ; preds = %cond.end182, %while.body, %cond.end128
  %op0.1 = phi %union.tree_node* [ %op0.0, %cond.end128 ], [ %op0.0, %while.body ], [ %spec.select, %cond.end182 ], !dbg !9673
  %cleanup.dest.slot.0 = phi i32 [ 3, %cond.end128 ], [ 3, %while.body ], [ %spec.select4, %cond.end182 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.1, metadata !9667, metadata !DIExpression()), !dbg !9673
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %while.cond, label %while.end, !llvm.loop !9695

while.end:                                        ; preds = %lor.lhs.false20, %cleanup
  %op0.2 = phi %union.tree_node* [ %op0.1, %cleanup ], [ %op0.0, %lor.lhs.false20 ], !dbg !9680
  call void @llvm.dbg.value(metadata %union.tree_node* %op0.2, metadata !9667, metadata !DIExpression()), !dbg !9673
  br label %while.cond192, !dbg !9697

while.cond192:                                    ; preds = %cleanup390, %while.end
  %op1.0 = phi %union.tree_node* [ %2, %while.end ], [ %op1.1, %cleanup390 ], !dbg !9698
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.0, metadata !9668, metadata !DIExpression()), !dbg !9673
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9699
  %bf.load194 = load i64, i64* %22, align 8, !dbg !9699
  %bf.cast19614 = and i64 %bf.load194, 65535, !dbg !9699
  %cmp197 = icmp eq i64 %bf.cast19614, 116, !dbg !9699
  br i1 %cmp197, label %while.body214, label %lor.lhs.false199, !dbg !9699

lor.lhs.false199:                                 ; preds = %while.cond192
  %23 = or i64 %bf.cast19614, 4, !dbg !9700
  %24 = icmp eq i64 %23, 117, !dbg !9700
  br i1 %24, label %while.body214, label %while.end393, !dbg !9700

while.body214:                                    ; preds = %while.cond192, %lor.lhs.false199
  %operands217 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9701
  %25 = load %union.tree_node*, %union.tree_node** %operands217, align 8, !dbg !9701
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !9671, metadata !DIExpression()), !dbg !9702
  %26 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9703
  %cmp219 = icmp eq %union.tree_node* %25, %26, !dbg !9705
  br i1 %cmp219, label %cleanup390, label %lor.lhs.false221, !dbg !9706

lor.lhs.false221:                                 ; preds = %while.body214
  %type223 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9707
  %27 = bitcast %union.tree_node** %type223 to i64**, !dbg !9707
  %28 = load i64*, i64** %27, align 8, !dbg !9707
  %bf.load225 = load i64, i64* %28, align 8, !dbg !9707
  %bf.cast22722 = and i64 %bf.load225, 65535, !dbg !9707
  %cmp228 = icmp eq i64 %bf.cast22722, 14, !dbg !9707
  br i1 %cmp228, label %cond.true230, label %cond.false234, !dbg !9707

cond.true230:                                     ; preds = %lor.lhs.false221
  %.cast = bitcast i64* %28 to %union.tree_node*, !dbg !9707
  %call233 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !9707
  br label %cond.end242, !dbg !9707

cond.false234:                                    ; preds = %lor.lhs.false221
  %type237 = bitcast i64* %28 to %struct.tree_type*, !dbg !9707
  %mode238 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type237, i64 0, i32 6, !dbg !9707
  %bf.load239 = load i32, i32* %mode238, align 4, !dbg !9707
  %bf.lshr240 = lshr i32 %bf.load239, 16, !dbg !9707
  %bf.clear241 = and i32 %bf.lshr240, 255, !dbg !9707
  br label %cond.end242, !dbg !9707

cond.end242:                                      ; preds = %cond.false234, %cond.true230
  %cond243 = phi i32 [ %call233, %cond.true230 ], [ %bf.clear241, %cond.false234 ], !dbg !9707
  %idxprom244 = zext i32 %cond243 to i64, !dbg !9707
  %arrayidx245 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom244, !dbg !9707
  %29 = load i8, i8* %arrayidx245, align 1, !dbg !9707
  %cmp247 = icmp eq i8 %29, 2, !dbg !9707
  br i1 %cmp247, label %lor.lhs.false333, label %lor.lhs.false249, !dbg !9707

lor.lhs.false249:                                 ; preds = %cond.end242
  %30 = load i64*, i64** %27, align 8, !dbg !9707
  %bf.load253 = load i64, i64* %30, align 8, !dbg !9707
  %bf.cast25523 = and i64 %bf.load253, 65535, !dbg !9707
  %cmp256 = icmp eq i64 %bf.cast25523, 14, !dbg !9707
  br i1 %cmp256, label %cond.true258, label %cond.false262, !dbg !9707

cond.true258:                                     ; preds = %lor.lhs.false249
  %.cast24 = bitcast i64* %30 to %union.tree_node*, !dbg !9707
  %call261 = tail call i32 @vector_type_mode(%union.tree_node* %.cast24) #6, !dbg !9707
  br label %cond.end270, !dbg !9707

cond.false262:                                    ; preds = %lor.lhs.false249
  %type265 = bitcast i64* %30 to %struct.tree_type*, !dbg !9707
  %mode266 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type265, i64 0, i32 6, !dbg !9707
  %bf.load267 = load i32, i32* %mode266, align 4, !dbg !9707
  %bf.lshr268 = lshr i32 %bf.load267, 16, !dbg !9707
  %bf.clear269 = and i32 %bf.lshr268, 255, !dbg !9707
  br label %cond.end270, !dbg !9707

cond.end270:                                      ; preds = %cond.false262, %cond.true258
  %cond271 = phi i32 [ %call261, %cond.true258 ], [ %bf.clear269, %cond.false262 ], !dbg !9707
  %idxprom272 = zext i32 %cond271 to i64, !dbg !9707
  %arrayidx273 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom272, !dbg !9707
  %31 = load i8, i8* %arrayidx273, align 1, !dbg !9707
  %cmp275 = icmp eq i8 %31, 3, !dbg !9707
  br i1 %cmp275, label %lor.lhs.false333, label %lor.lhs.false277, !dbg !9707

lor.lhs.false277:                                 ; preds = %cond.end270
  %32 = load i64*, i64** %27, align 8, !dbg !9707
  %bf.load281 = load i64, i64* %32, align 8, !dbg !9707
  %bf.cast28325 = and i64 %bf.load281, 65535, !dbg !9707
  %cmp284 = icmp eq i64 %bf.cast28325, 14, !dbg !9707
  br i1 %cmp284, label %cond.true286, label %cond.false290, !dbg !9707

cond.true286:                                     ; preds = %lor.lhs.false277
  %.cast26 = bitcast i64* %32 to %union.tree_node*, !dbg !9707
  %call289 = tail call i32 @vector_type_mode(%union.tree_node* %.cast26) #6, !dbg !9707
  br label %cond.end298, !dbg !9707

cond.false290:                                    ; preds = %lor.lhs.false277
  %type293 = bitcast i64* %32 to %struct.tree_type*, !dbg !9707
  %mode294 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type293, i64 0, i32 6, !dbg !9707
  %bf.load295 = load i32, i32* %mode294, align 4, !dbg !9707
  %bf.lshr296 = lshr i32 %bf.load295, 16, !dbg !9707
  %bf.clear297 = and i32 %bf.lshr296, 255, !dbg !9707
  br label %cond.end298, !dbg !9707

cond.end298:                                      ; preds = %cond.false290, %cond.true286
  %cond299 = phi i32 [ %call289, %cond.true286 ], [ %bf.clear297, %cond.false290 ], !dbg !9707
  %idxprom300 = zext i32 %cond299 to i64, !dbg !9707
  %arrayidx301 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom300, !dbg !9707
  %33 = load i8, i8* %arrayidx301, align 1, !dbg !9707
  %cmp303 = icmp eq i8 %33, 10, !dbg !9707
  br i1 %cmp303, label %lor.lhs.false333, label %lor.lhs.false305, !dbg !9707

lor.lhs.false305:                                 ; preds = %cond.end298
  %34 = load i64*, i64** %27, align 8, !dbg !9707
  %bf.load309 = load i64, i64* %34, align 8, !dbg !9707
  %bf.cast31127 = and i64 %bf.load309, 65535, !dbg !9707
  %cmp312 = icmp eq i64 %bf.cast31127, 14, !dbg !9707
  br i1 %cmp312, label %cond.true314, label %cond.false318, !dbg !9707

cond.true314:                                     ; preds = %lor.lhs.false305
  %.cast28 = bitcast i64* %34 to %union.tree_node*, !dbg !9707
  %call317 = tail call i32 @vector_type_mode(%union.tree_node* %.cast28) #6, !dbg !9707
  br label %cond.end326, !dbg !9707

cond.false318:                                    ; preds = %lor.lhs.false305
  %type321 = bitcast i64* %34 to %struct.tree_type*, !dbg !9707
  %mode322 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type321, i64 0, i32 6, !dbg !9707
  %bf.load323 = load i32, i32* %mode322, align 4, !dbg !9707
  %bf.lshr324 = lshr i32 %bf.load323, 16, !dbg !9707
  %bf.clear325 = and i32 %bf.lshr324, 255, !dbg !9707
  br label %cond.end326, !dbg !9707

cond.end326:                                      ; preds = %cond.false318, %cond.true314
  %cond327 = phi i32 [ %call317, %cond.true314 ], [ %bf.clear325, %cond.false318 ], !dbg !9707
  %idxprom328 = zext i32 %cond327 to i64, !dbg !9707
  %arrayidx329 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom328, !dbg !9707
  %35 = load i8, i8* %arrayidx329, align 1, !dbg !9707
  %cmp331 = icmp eq i8 %35, 12, !dbg !9707
  br i1 %cmp331, label %lor.lhs.false333, label %cleanup390, !dbg !9708

lor.lhs.false333:                                 ; preds = %cond.end326, %cond.end298, %cond.end270, %cond.end242
  %type335 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9709
  %36 = bitcast %union.tree_node** %type335 to i64**, !dbg !9709
  %37 = load i64*, i64** %36, align 8, !dbg !9709
  %bf.load337 = load i64, i64* %37, align 8, !dbg !9709
  %bf.cast33929 = and i64 %bf.load337, 65535, !dbg !9709
  %cmp340 = icmp eq i64 %bf.cast33929, 14, !dbg !9709
  br i1 %cmp340, label %cond.true342, label %cond.false346, !dbg !9709

cond.true342:                                     ; preds = %lor.lhs.false333
  %.cast30 = bitcast i64* %37 to %union.tree_node*, !dbg !9709
  %call345 = tail call i32 @vector_type_mode(%union.tree_node* %.cast30) #6, !dbg !9709
  br label %cond.end354, !dbg !9709

cond.false346:                                    ; preds = %lor.lhs.false333
  %type349 = bitcast i64* %37 to %struct.tree_type*, !dbg !9709
  %mode350 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type349, i64 0, i32 6, !dbg !9709
  %bf.load351 = load i32, i32* %mode350, align 4, !dbg !9709
  %bf.lshr352 = lshr i32 %bf.load351, 16, !dbg !9709
  %bf.clear353 = and i32 %bf.lshr352, 255, !dbg !9709
  br label %cond.end354, !dbg !9709

cond.end354:                                      ; preds = %cond.false346, %cond.true342
  %cond355 = phi i32 [ %call345, %cond.true342 ], [ %bf.clear353, %cond.false346 ], !dbg !9709
  %idxprom356 = zext i32 %cond355 to i64, !dbg !9709
  %arrayidx357 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom356, !dbg !9709
  %38 = load i8, i8* %arrayidx357, align 1, !dbg !9709
  %39 = load i64*, i64** %27, align 8, !dbg !9710
  %bf.load363 = load i64, i64* %39, align 8, !dbg !9710
  %bf.cast36531 = and i64 %bf.load363, 65535, !dbg !9710
  %cmp366 = icmp eq i64 %bf.cast36531, 14, !dbg !9710
  br i1 %cmp366, label %cond.true368, label %cond.false372, !dbg !9710

cond.true368:                                     ; preds = %cond.end354
  %.cast32 = bitcast i64* %39 to %union.tree_node*, !dbg !9710
  %call371 = tail call i32 @vector_type_mode(%union.tree_node* %.cast32) #6, !dbg !9710
  br label %cond.end380, !dbg !9710

cond.false372:                                    ; preds = %cond.end354
  %type375 = bitcast i64* %39 to %struct.tree_type*, !dbg !9710
  %mode376 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type375, i64 0, i32 6, !dbg !9710
  %bf.load377 = load i32, i32* %mode376, align 4, !dbg !9710
  %bf.lshr378 = lshr i32 %bf.load377, 16, !dbg !9710
  %bf.clear379 = and i32 %bf.lshr378, 255, !dbg !9710
  br label %cond.end380, !dbg !9710

cond.end380:                                      ; preds = %cond.false372, %cond.true368
  %cond381 = phi i32 [ %call371, %cond.true368 ], [ %bf.clear379, %cond.false372 ], !dbg !9710
  %idxprom382 = zext i32 %cond381 to i64, !dbg !9710
  %arrayidx383 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom382, !dbg !9710
  %40 = load i8, i8* %arrayidx383, align 1, !dbg !9710
  %cmp386 = icmp ugt i8 %38, %40, !dbg !9711
  %spec.select5 = select i1 %cmp386, %union.tree_node* %op1.0, %union.tree_node* %25, !dbg !9712
  %spec.select6 = select i1 %cmp386, i32 5, i32 0, !dbg !9712
  br label %cleanup390, !dbg !9712

cleanup390:                                       ; preds = %cond.end380, %while.body214, %cond.end326
  %op1.1 = phi %union.tree_node* [ %op1.0, %cond.end326 ], [ %op1.0, %while.body214 ], [ %spec.select5, %cond.end380 ], !dbg !9673
  %cleanup.dest.slot.1 = phi i32 [ 5, %cond.end326 ], [ 5, %while.body214 ], [ %spec.select6, %cond.end380 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.1, metadata !9668, metadata !DIExpression()), !dbg !9673
  %switch3 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch3, label %while.cond192, label %while.end393, !llvm.loop !9713

while.end393:                                     ; preds = %lor.lhs.false199, %cleanup390
  %op1.2 = phi %union.tree_node* [ %op1.1, %cleanup390 ], [ %op1.0, %lor.lhs.false199 ], !dbg !9698
  call void @llvm.dbg.value(metadata %union.tree_node* %op1.2, metadata !9668, metadata !DIExpression()), !dbg !9673
  %call394 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %op0.2, %union.tree_node* %endtype, %union.tree_node** %cache) #8, !dbg !9715
  call void @llvm.dbg.value(metadata %union.tree_node* %call394, metadata !9667, metadata !DIExpression()), !dbg !9673
  %tobool = icmp eq %union.tree_node* %call394, null, !dbg !9716
  br i1 %tobool, label %cleanup452, label %if.end396, !dbg !9718

if.end396:                                        ; preds = %while.end393
  %tobool397 = icmp eq %union.tree_node** %cache, null, !dbg !9719
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %cache, i64 2, !dbg !9719
  %cond401 = select i1 %tobool397, %union.tree_node** null, %union.tree_node** %add.ptr, !dbg !9719
  %call402 = tail call fastcc %union.tree_node* @initializer_constant_valid_p_1(%union.tree_node* %op1.2, %union.tree_node* %endtype, %union.tree_node** %cond401) #8, !dbg !9720
  call void @llvm.dbg.value(metadata %union.tree_node* %call402, metadata !9668, metadata !DIExpression()), !dbg !9673
  %tobool403 = icmp eq %union.tree_node* %call402, null, !dbg !9721
  br i1 %tobool403, label %cleanup452, label %if.then404, !dbg !9723

if.then404:                                       ; preds = %if.end396
  %cmp405 = icmp eq %union.tree_node* %call394, %call402, !dbg !9724
  br i1 %cmp405, label %land.lhs.true, label %if.end417, !dbg !9727

land.lhs.true:                                    ; preds = %if.then404
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !9728
  %cmp407 = icmp eq %union.tree_node* %call394, %41, !dbg !9729
  br i1 %cmp407, label %if.then416, label %lor.lhs.false409, !dbg !9730

lor.lhs.false409:                                 ; preds = %land.lhs.true
  %42 = getelementptr inbounds %union.tree_node, %union.tree_node* %value, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9731
  %bf.load411 = load i64, i64* %42, align 8, !dbg !9731
  %bf.cast41321 = and i64 %bf.load411, 65535, !dbg !9732
  %cmp414 = icmp eq i64 %bf.cast41321, 64, !dbg !9732
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !9733

if.then416:                                       ; preds = %lor.lhs.false409, %land.lhs.true
  br label %cleanup452, !dbg !9734

if.end417:                                        ; preds = %lor.lhs.false409, %if.then404
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %call394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9735
  %bf.load419 = load i64, i64* %43, align 8, !dbg !9735
  %bf.cast42117 = and i64 %bf.load419, 65535, !dbg !9737
  %cmp422 = icmp eq i64 %bf.cast42117, 30, !dbg !9737
  br i1 %cmp422, label %land.lhs.true424, label %if.end432, !dbg !9738

land.lhs.true424:                                 ; preds = %if.end417
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call402, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9739
  %bf.load426 = load i64, i64* %44, align 8, !dbg !9739
  %bf.cast42820 = and i64 %bf.load426, 65535, !dbg !9740
  %cmp429 = icmp eq i64 %bf.cast42820, 30, !dbg !9740
  br i1 %cmp429, label %if.then431, label %if.end432, !dbg !9741

if.then431:                                       ; preds = %land.lhs.true424
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !9742
  br label %cleanup452, !dbg !9743

if.end432:                                        ; preds = %land.lhs.true424, %if.end417
  %cmp437 = icmp eq i64 %bf.cast42117, 28, !dbg !9744
  br i1 %cmp437, label %land.lhs.true439, label %cleanup452, !dbg !9746

land.lhs.true439:                                 ; preds = %if.end432
  %46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call402, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9747
  %bf.load441 = load i64, i64* %46, align 8, !dbg !9747
  %bf.cast44319 = and i64 %bf.load441, 65535, !dbg !9748
  %cmp444 = icmp eq i64 %bf.cast44319, 28, !dbg !9748
  br i1 %cmp444, label %land.lhs.true446, label %cleanup452, !dbg !9749

land.lhs.true446:                                 ; preds = %land.lhs.true439
  %call447 = tail call i32 @operand_equal_p(%union.tree_node* nonnull %call394, %union.tree_node* nonnull %call402, i32 1) #6, !dbg !9750
  %tobool448 = icmp eq i32 %call447, 0, !dbg !9750
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !9751
  %spec.select7 = select i1 %tobool448, %union.tree_node* null, %union.tree_node* %47, !dbg !9752
  ret %union.tree_node* %spec.select7, !dbg !9752

cleanup452:                                       ; preds = %if.end396, %while.end393, %land.lhs.true439, %if.end432, %lor.lhs.false6, %if.then431, %if.then416
  %retval.0 = phi %union.tree_node* [ %41, %if.then416 ], [ %45, %if.then431 ], [ null, %lor.lhs.false6 ], [ null, %while.end393 ], [ null, %if.end432 ], [ null, %land.lhs.true439 ], [ null, %if.end396 ], !dbg !9673
  ret %union.tree_node* %retval.0, !dbg !9753
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_iterate(%struct.VEC_constructor_elt_base* %vec_, i32 %ix_, %struct.constructor_elt_d** %ptr) unnamed_addr #0 !dbg !9754 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !9760, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d** %ptr, metadata !9761, metadata !DIExpression()), !dbg !9762
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !9763
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9763

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !9763
  %0 = load i32, i32* %num, align 8, !dbg !9763
  %cmp = icmp ugt i32 %0, %ix_, !dbg !9763
  br i1 %cmp, label %if.then, label %if.else, !dbg !9765

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !9766
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !9766
  br label %return, !dbg !9766

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !9768

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.constructor_elt_d* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !9770
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !9770
  store %struct.constructor_elt_d* %storemerge, %struct.constructor_elt_d** %ptr, align 8, !dbg !9770
  ret i32 %retval.0, !dbg !9765
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constructor_array_range(%struct.oc_local_state* %local) unnamed_addr #5 !dbg !9771 {
entry:
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !9776, metadata !DIExpression()), !dbg !9782
  %type = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 3, !dbg !9783
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9783
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !9783
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !9783
  %2 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !9783
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %2) #6, !dbg !9784
  call void @llvm.dbg.value(metadata i64 %call, metadata !9777, metadata !DIExpression()), !dbg !9782
  %index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 11, !dbg !9785
  %3 = bitcast %union.tree_node** %index to %struct.tree_exp**, !dbg !9785
  %4 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !9785
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %4, i64 0, i32 3, i64 0, !dbg !9785
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9785
  %call2 = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 0) #6, !dbg !9786
  call void @llvm.dbg.value(metadata i64 %call2, metadata !9778, metadata !DIExpression()), !dbg !9782
  %6 = load %struct.tree_exp*, %struct.tree_exp** %3, align 8, !dbg !9787
  %arrayidx6 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %6, i64 0, i32 3, i64 1, !dbg !9787
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8, !dbg !9787
  %call7 = tail call i64 @tree_low_cst(%union.tree_node* %7, i32 0) #6, !dbg !9788
  call void @llvm.dbg.value(metadata i64 %call7, metadata !9779, metadata !DIExpression()), !dbg !9782
  %align = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 2, !dbg !9789
  %8 = load i32, i32* %align, align 8, !dbg !9789
  %call.tr = trunc i64 %call to i32, !dbg !9790
  %conv = shl i32 %call.tr, 3, !dbg !9790
  %call9 = tail call fastcc i32 @min_align(i32 %8, i32 %conv) #8, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %call9, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i64 %call2, metadata !9780, metadata !DIExpression()), !dbg !9782
  %val = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !9792
  %total_bytes = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !9797
  br label %for.cond, !dbg !9798

for.cond:                                         ; preds = %if.end, %entry
  %index8.0 = phi i64 [ %call2, %entry ], [ %inc, %if.end ], !dbg !9799
  call void @llvm.dbg.value(metadata i64 %index8.0, metadata !9780, metadata !DIExpression()), !dbg !9782
  %cmp = icmp sgt i64 %index8.0, %call7, !dbg !9800
  br i1 %cmp, label %for.end, label %for.body, !dbg !9801

for.body:                                         ; preds = %for.cond
  %9 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !9802
  %cmp11 = icmp eq %union.tree_node* %9, null, !dbg !9803
  br i1 %cmp11, label %if.then, label %if.else, !dbg !9804

if.then:                                          ; preds = %for.body
  tail call void @assemble_zeros(i64 %call) #8, !dbg !9805
  br label %if.end, !dbg !9805

if.else:                                          ; preds = %for.body
  tail call void @output_constant(%union.tree_node* nonnull %9, i64 %call, i32 %call9) #8, !dbg !9806
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i64, i64* %total_bytes, align 8, !dbg !9807
  %add = add i64 %10, %call, !dbg !9807
  store i64 %add, i64* %total_bytes, align 8, !dbg !9807
  %inc = add nsw i64 %index8.0, 1, !dbg !9808
  call void @llvm.dbg.value(metadata i64 %inc, metadata !9780, metadata !DIExpression()), !dbg !9782
  br label %for.cond, !dbg !9809, !llvm.loop !9810

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9812
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constructor_regular_field(%struct.oc_local_state* %local) unnamed_addr #5 !dbg !9813 {
entry:
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !9815, metadata !DIExpression()), !dbg !9819
  %index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 11, !dbg !9820
  %0 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9820
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !9822
  br i1 %cmp, label %if.else, label %if.then, !dbg !9823

if.then:                                          ; preds = %entry
  %val = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !9824
  %1 = bitcast %union.tree_node** %val to %struct.tree_common**, !dbg !9824
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !9824
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !9824
  %3 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !9824
  %4 = load %struct.tree_type*, %struct.tree_type** %3, align 8, !dbg !9824
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %4, i64 0, i32 3, !dbg !9824
  %5 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !9824
  %call = tail call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #6, !dbg !9825
  %6 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9826
  %call3 = tail call i64 @tree_low_cst(%union.tree_node* %6, i32 0) #6, !dbg !9827
  %min_index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 5, !dbg !9828
  %7 = load %union.tree_node*, %union.tree_node** %min_index, align 8, !dbg !9828
  %call4 = tail call i64 @tree_low_cst(%union.tree_node* %7, i32 0) #6, !dbg !9829
  %sub = sub nsw i64 %call3, %call4, !dbg !9830
  %mul = mul nsw i64 %call, %sub, !dbg !9831
  call void @llvm.dbg.value(metadata i64 %mul, metadata !9817, metadata !DIExpression()), !dbg !9819
  br label %if.end10, !dbg !9832

if.else:                                          ; preds = %entry
  %field = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 4, !dbg !9833
  %8 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !9833
  %cmp5 = icmp eq %union.tree_node* %8, null, !dbg !9835
  br i1 %cmp5, label %if.end10, label %if.then6, !dbg !9836

if.then6:                                         ; preds = %if.else
  %call8 = tail call i64 @int_byte_position(%union.tree_node* nonnull %8) #6, !dbg !9837
  call void @llvm.dbg.value(metadata i64 %call8, metadata !9817, metadata !DIExpression()), !dbg !9819
  br label %if.end10, !dbg !9838

if.end10:                                         ; preds = %if.else, %if.then6, %if.then
  %fieldpos.1 = phi i64 [ %mul, %if.then ], [ %call8, %if.then6 ], [ 0, %if.else ], !dbg !9839
  call void @llvm.dbg.value(metadata i64 %fieldpos.1, metadata !9817, metadata !DIExpression()), !dbg !9819
  %byte_buffer_in_use = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 7, !dbg !9840
  %9 = load i8, i8* %byte_buffer_in_use, align 8, !dbg !9840
  %tobool = icmp eq i8 %9, 0, !dbg !9842
  br i1 %tobool, label %if.end15, label %if.then11, !dbg !9843

if.then11:                                        ; preds = %if.end10
  %byte = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !9844
  %10 = load i32, i32* %byte, align 4, !dbg !9844
  %conv = sext i32 %10 to i64, !dbg !9844
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #6, !dbg !9844
  %call13 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %call12, i32 1, i32 8, i32 1) #8, !dbg !9846
  %total_bytes = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !9847
  %11 = load i64, i64* %total_bytes, align 8, !dbg !9848
  %inc = add nsw i64 %11, 1, !dbg !9848
  store i64 %inc, i64* %total_bytes, align 8, !dbg !9848
  store i8 0, i8* %byte_buffer_in_use, align 8, !dbg !9849
  br label %if.end15, !dbg !9850

if.end15:                                         ; preds = %if.end10, %if.then11
  %field16 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 4, !dbg !9851
  %12 = load %union.tree_node*, %union.tree_node** %field16, align 8, !dbg !9851
  %cmp17 = icmp eq %union.tree_node* %12, null, !dbg !9853
  br i1 %cmp17, label %lor.lhs.false, label %land.lhs.true, !dbg !9854

lor.lhs.false:                                    ; preds = %if.end15
  %13 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9855
  %cmp20 = icmp eq %union.tree_node* %13, null, !dbg !9856
  br i1 %cmp20, label %if.end32, label %land.lhs.true, !dbg !9857

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end15
  %total_bytes22 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !9858
  %14 = load i64, i64* %total_bytes22, align 8, !dbg !9858
  %cmp23 = icmp eq i64 %fieldpos.1, %14, !dbg !9859
  br i1 %cmp23, label %if.end32, label %if.then25, !dbg !9860

if.then25:                                        ; preds = %land.lhs.true
  %cmp27 = icmp slt i64 %fieldpos.1, %14, !dbg !9861
  br i1 %cmp27, label %cond.true, label %cond.end, !dbg !9861

cond.true:                                        ; preds = %if.then25
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4892, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9861
  %.pre = load i64, i64* %total_bytes22, align 8, !dbg !9863
  br label %cond.end, !dbg !9861

cond.end:                                         ; preds = %if.then25, %cond.true
  %15 = phi i64 [ %14, %if.then25 ], [ %.pre, %cond.true ], !dbg !9863
  %sub30 = sub nsw i64 %fieldpos.1, %15, !dbg !9864
  tail call void @assemble_zeros(i64 %sub30) #8, !dbg !9865
  store i64 %fieldpos.1, i64* %total_bytes22, align 8, !dbg !9866
  br label %if.end32, !dbg !9867

if.end32:                                         ; preds = %land.lhs.true, %lor.lhs.false, %cond.end
  %align = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 2, !dbg !9868
  %16 = load i32, i32* %align, align 8, !dbg !9868
  %fieldpos.1.tr = trunc i64 %fieldpos.1 to i32, !dbg !9869
  %conv34 = shl i32 %fieldpos.1.tr, 3, !dbg !9869
  %call35 = tail call fastcc i32 @min_align(i32 %16, i32 %conv34) #8, !dbg !9870
  call void @llvm.dbg.value(metadata i32 %call35, metadata !9818, metadata !DIExpression()), !dbg !9819
  %17 = load %union.tree_node*, %union.tree_node** %field16, align 8, !dbg !9871
  %tobool37 = icmp eq %union.tree_node* %17, null, !dbg !9873
  br i1 %tobool37, label %if.else88, label %if.then38, !dbg !9874

if.then38:                                        ; preds = %if.end32
  call void @llvm.dbg.value(metadata i64 0, metadata !9816, metadata !DIExpression()), !dbg !9819
  %18 = bitcast %union.tree_node** %field16 to %struct.tree_common**, !dbg !9875
  %type41 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9875
  %19 = bitcast %union.tree_node** %type41 to i64**, !dbg !9875
  %20 = load i64*, i64** %19, align 8, !dbg !9875
  %bf.load = load i64, i64* %20, align 8, !dbg !9875
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9878
  %cmp42 = icmp eq i64 %bf.cast1, 15, !dbg !9878
  br i1 %cmp42, label %land.lhs.true44, label %if.else70, !dbg !9879

land.lhs.true44:                                  ; preds = %if.then38
  %values = getelementptr inbounds i64, i64* %20, i64 3, !dbg !9880
  %21 = bitcast i64* %values to %union.tree_node**, !dbg !9880
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !9880
  %tobool49 = icmp eq %union.tree_node* %22, null, !dbg !9880
  br i1 %tobool49, label %if.else70, label %land.lhs.true50, !dbg !9881

land.lhs.true50:                                  ; preds = %land.lhs.true44
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9882
  %23 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !9882
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !9882
  %tobool57 = icmp eq %union.tree_node* %24, null, !dbg !9882
  br i1 %tobool57, label %if.then58, label %if.else70, !dbg !9883

if.then58:                                        ; preds = %land.lhs.true50
  %val59 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !9884
  %25 = load %union.tree_node*, %union.tree_node** %val59, align 8, !dbg !9884
  %call60 = tail call fastcc i64 @array_size_for_constructor(%union.tree_node* %25) #8, !dbg !9886
  call void @llvm.dbg.value(metadata i64 %call60, metadata !9816, metadata !DIExpression()), !dbg !9819
  %tobool61 = icmp eq i64 %call60, 0, !dbg !9887
  br i1 %tobool61, label %if.end93, label %lor.lhs.false62, !dbg !9887

lor.lhs.false62:                                  ; preds = %if.then58
  %26 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !9887
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %26, i64 0, i32 1, !dbg !9887
  %27 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9887
  %tobool65 = icmp eq %union.tree_node* %27, null, !dbg !9887
  br i1 %tobool65, label %if.end93, label %cond.true66, !dbg !9887

cond.true66:                                      ; preds = %lor.lhs.false62
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 4917, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !9887
  br label %if.end93, !dbg !9887

if.else70:                                        ; preds = %land.lhs.true50, %land.lhs.true44, %if.then38
  %28 = bitcast %union.tree_node** %field16 to %struct.tree_decl_common**, !dbg !9888
  %size_unit72 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9888
  %29 = load %union.tree_node*, %union.tree_node** %size_unit72, align 8, !dbg !9888
  %tobool73 = icmp eq %union.tree_node* %29, null, !dbg !9888
  br i1 %tobool73, label %if.end93, label %if.then74, !dbg !9890

if.then74:                                        ; preds = %if.else70
  %call78 = tail call i32 @host_integerp(%union.tree_node* nonnull %29, i32 1) #6, !dbg !9891
  %tobool79 = icmp eq i32 %call78, 0, !dbg !9891
  br i1 %tobool79, label %if.end93, label %if.then80, !dbg !9894

if.then80:                                        ; preds = %if.then74
  %30 = load %struct.tree_decl_common*, %struct.tree_decl_common** %28, align 8, !dbg !9895
  %size_unit83 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %30, i64 0, i32 4, !dbg !9895
  %31 = load %union.tree_node*, %union.tree_node** %size_unit83, align 8, !dbg !9895
  %call84 = tail call i64 @tree_low_cst(%union.tree_node* %31, i32 1) #6, !dbg !9896
  call void @llvm.dbg.value(metadata i64 %call84, metadata !9816, metadata !DIExpression()), !dbg !9819
  br label %if.end93, !dbg !9897

if.else88:                                        ; preds = %if.end32
  %type89 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 3, !dbg !9898
  %32 = bitcast %union.tree_node** %type89 to %struct.tree_common**, !dbg !9898
  %33 = load %struct.tree_common*, %struct.tree_common** %32, align 8, !dbg !9898
  %type91 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %33, i64 0, i32 2, !dbg !9898
  %34 = load %union.tree_node*, %union.tree_node** %type91, align 8, !dbg !9898
  %call92 = tail call i64 @int_size_in_bytes(%union.tree_node* %34) #6, !dbg !9899
  call void @llvm.dbg.value(metadata i64 %call92, metadata !9816, metadata !DIExpression()), !dbg !9819
  br label %if.end93

if.end93:                                         ; preds = %lor.lhs.false62, %if.then58, %if.then74, %if.else70, %cond.true66, %if.then80, %if.else88
  %fieldsize.3 = phi i64 [ %call92, %if.else88 ], [ 0, %if.then58 ], [ %call60, %lor.lhs.false62 ], [ %call60, %cond.true66 ], [ 0, %if.else70 ], [ %call84, %if.then80 ], [ 0, %if.then74 ], !dbg !9900
  call void @llvm.dbg.value(metadata i64 %fieldsize.3, metadata !9816, metadata !DIExpression()), !dbg !9819
  %val94 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !9901
  %35 = load %union.tree_node*, %union.tree_node** %val94, align 8, !dbg !9901
  %cmp95 = icmp eq %union.tree_node* %35, null, !dbg !9903
  br i1 %cmp95, label %if.then97, label %if.else98, !dbg !9904

if.then97:                                        ; preds = %if.end93
  tail call void @assemble_zeros(i64 %fieldsize.3) #8, !dbg !9905
  br label %if.end100, !dbg !9905

if.else98:                                        ; preds = %if.end93
  tail call void @output_constant(%union.tree_node* nonnull %35, i64 %fieldsize.3, i32 %call35) #8, !dbg !9906
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %if.then97
  %total_bytes101 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !9907
  %36 = load i64, i64* %total_bytes101, align 8, !dbg !9908
  %add = add i64 %36, %fieldsize.3, !dbg !9908
  store i64 %add, i64* %total_bytes101, align 8, !dbg !9908
  ret void, !dbg !9909
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_constructor_bitfield(%struct.oc_local_state* %local, %struct.oc_outer_state* %outer) unnamed_addr #5 !dbg !9910 {
entry:
  %output_state = alloca %struct.oc_outer_state, align 4
  call void @llvm.dbg.value(metadata %struct.oc_local_state* %local, metadata !9914, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata %struct.oc_outer_state* %outer, metadata !9915, metadata !DIExpression()), !dbg !9931
  %field = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 4, !dbg !9932
  %0 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !9932
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !9933
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9933

cond.true:                                        ; preds = %entry
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9934
  %1 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !9934
  %call = tail call i64 @tree_low_cst(%union.tree_node* %1, i32 1) #6, !dbg !9935
  br label %cond.end, !dbg !9933

cond.false:                                       ; preds = %entry
  %type = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 3, !dbg !9936
  %2 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9936
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !9936
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !9936
  %4 = bitcast %union.tree_node** %type2 to %struct.tree_type**, !dbg !9936
  %5 = load %struct.tree_type*, %struct.tree_type** %4, align 8, !dbg !9936
  %size4 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %5, i64 0, i32 2, !dbg !9936
  %6 = load %union.tree_node*, %union.tree_node** %size4, align 8, !dbg !9936
  %call5 = tail call i64 @tree_low_cst(%union.tree_node* %6, i32 1) #6, !dbg !9937
  br label %cond.end, !dbg !9933

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %call5, %cond.false ], !dbg !9933
  call void @llvm.dbg.value(metadata i64 %cond, metadata !9916, metadata !DIExpression()), !dbg !9931
  %7 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !9938
  %tobool7 = icmp eq %union.tree_node* %7, null, !dbg !9939
  br i1 %tobool7, label %cond.true8, label %cond.end18, !dbg !9940

cond.true8:                                       ; preds = %cond.end
  %index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 11, !dbg !9941
  %8 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !9941
  %tobool9 = icmp eq %union.tree_node* %8, null, !dbg !9942
  br i1 %tobool9, label %cond.false14, label %cond.true10, !dbg !9942

cond.true10:                                      ; preds = %cond.true8
  %call12 = tail call i64 @tree_low_cst(%union.tree_node* nonnull %8, i32 0) #6, !dbg !9943
  %min_index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 5, !dbg !9944
  %9 = load %union.tree_node*, %union.tree_node** %min_index, align 8, !dbg !9944
  %call13 = tail call i64 @tree_low_cst(%union.tree_node* %9, i32 0) #6, !dbg !9945
  %sub = sub nsw i64 %call12, %call13, !dbg !9946
  %.pre = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !9947
  br label %cond.end18, !dbg !9942

cond.false14:                                     ; preds = %cond.true8
  %last_relative_index = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 9, !dbg !9948
  %10 = load i32, i32* %last_relative_index, align 8, !dbg !9948
  %add = add nsw i32 %10, 1, !dbg !9949
  %conv = sext i32 %add to i64, !dbg !9950
  br label %cond.end18, !dbg !9942

cond.end18:                                       ; preds = %cond.end, %cond.true10, %cond.false14
  %11 = phi %union.tree_node* [ %.pre, %cond.true10 ], [ null, %cond.false14 ], [ %7, %cond.end ], !dbg !9947
  %cond19 = phi i64 [ %sub, %cond.true10 ], [ %conv, %cond.false14 ], [ 0, %cond.end ], !dbg !9940
  call void @llvm.dbg.value(metadata i64 %cond19, metadata !9917, metadata !DIExpression()), !dbg !9931
  %tobool21 = icmp eq %union.tree_node* %11, null, !dbg !9951
  br i1 %tobool21, label %cond.false25, label %cond.true22, !dbg !9951

cond.true22:                                      ; preds = %cond.end18
  %call24 = tail call i64 @int_bit_position(%union.tree_node* nonnull %11) #6, !dbg !9952
  br label %cond.end26, !dbg !9951

cond.false25:                                     ; preds = %cond.end18
  %mul = mul nsw i64 %cond, %cond19, !dbg !9953
  br label %cond.end26, !dbg !9951

cond.end26:                                       ; preds = %cond.false25, %cond.true22
  %cond27 = phi i64 [ %call24, %cond.true22 ], [ %mul, %cond.false25 ], !dbg !9951
  call void @llvm.dbg.value(metadata i64 %cond27, metadata !9918, metadata !DIExpression()), !dbg !9931
  %tobool28 = icmp eq %struct.oc_outer_state* %outer, null, !dbg !9954
  br i1 %tobool28, label %cond.end31, label %cond.true29, !dbg !9954

cond.true29:                                      ; preds = %cond.end26
  %bit_offset = getelementptr inbounds %struct.oc_outer_state, %struct.oc_outer_state* %outer, i64 0, i32 0, !dbg !9955
  %12 = load i32, i32* %bit_offset, align 4, !dbg !9955
  %phitmp = zext i32 %12 to i64, !dbg !9954
  br label %cond.end31, !dbg !9954

cond.end31:                                       ; preds = %cond.end26, %cond.true29
  %cond32 = phi i64 [ %phitmp, %cond.true29 ], [ 0, %cond.end26 ]
  %add34 = add nsw i64 %cond32, %cond27, !dbg !9956
  call void @llvm.dbg.value(metadata i64 %add34, metadata !9919, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata i64 %add34, metadata !9920, metadata !DIExpression()), !dbg !9931
  %add35 = add nsw i64 %add34, %cond, !dbg !9957
  call void @llvm.dbg.value(metadata i64 %add35, metadata !9921, metadata !DIExpression()), !dbg !9931
  %conv36 = trunc i64 %cond19 to i32, !dbg !9958
  %last_relative_index37 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 9, !dbg !9959
  store i32 %conv36, i32* %last_relative_index37, align 8, !dbg !9960
  %val = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 10, !dbg !9961
  %13 = load %union.tree_node*, %union.tree_node** %val, align 8, !dbg !9961
  %cmp = icmp eq %union.tree_node* %13, null, !dbg !9963
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9964
  br i1 %cmp, label %if.then, label %cond.end31.if.end_crit_edge, !dbg !9964

cond.end31.if.end_crit_edge:                      ; preds = %cond.end31
  %.pre9 = bitcast %union.tree_node** %val to i64*, !dbg !9931
  br label %if.end, !dbg !9964

if.then:                                          ; preds = %cond.end31
  %15 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !9965
  %16 = bitcast %union.tree_node** %val to i64*, !dbg !9966
  store i64 %15, i64* %16, align 8, !dbg !9966
  %17 = inttoptr i64 %15 to i64*, !dbg !9967
  %18 = inttoptr i64 %15 to %union.tree_node*, !dbg !9967
  br label %if.end, !dbg !9967

if.end:                                           ; preds = %cond.end31.if.end_crit_edge, %if.then
  %.pre-phi = phi i64* [ %.pre9, %cond.end31.if.end_crit_edge ], [ %16, %if.then ], !dbg !9931
  %19 = phi i64* [ %14, %cond.end31.if.end_crit_edge ], [ %17, %if.then ]
  %20 = phi %union.tree_node* [ %13, %cond.end31.if.end_crit_edge ], [ %18, %if.then ]
  %21 = phi i64* [ %14, %cond.end31.if.end_crit_edge ], [ %17, %if.then ]
  %22 = phi i64* [ %14, %cond.end31.if.end_crit_edge ], [ %17, %if.then ]
  br label %while.cond, !dbg !9968

while.cond:                                       ; preds = %while.body, %if.end
  %23 = phi i64* [ %30, %while.body ], [ %19, %if.end ]
  %24 = phi %union.tree_node* [ %31, %while.body ], [ %20, %if.end ]
  %25 = phi i64* [ %30, %while.body ], [ %21, %if.end ]
  %26 = phi i64* [ %30, %while.body ], [ %22, %if.end ], !dbg !9969
  %bf.load = load i64, i64* %26, align 8, !dbg !9969
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9970
  %cmp41 = icmp eq i64 %bf.cast1, 118, !dbg !9970
  br i1 %cmp41, label %lor.end, label %lor.rhs, !dbg !9971

lor.rhs:                                          ; preds = %while.cond
  %bf.load45 = load i64, i64* %25, align 8, !dbg !9972
  %bf.cast472 = and i64 %bf.load45, 65535, !dbg !9973
  %cmp48 = icmp eq i64 %bf.cast472, 117, !dbg !9973
  br label %lor.end, !dbg !9971

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %27 = phi i1 [ true, %while.cond ], [ %cmp48, %lor.rhs ]
  br i1 %27, label %while.body, label %while.end, !dbg !9968

while.body:                                       ; preds = %lor.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9974
  %28 = bitcast %union.tree_node** %operands to i64*, !dbg !9974
  %29 = load i64, i64* %28, align 8, !dbg !9974
  store i64 %29, i64* %.pre-phi, align 8, !dbg !9975
  %30 = inttoptr i64 %29 to i64*, !dbg !9968
  %31 = inttoptr i64 %29 to %union.tree_node*, !dbg !9968
  br label %while.cond, !dbg !9968, !llvm.loop !9976

while.end:                                        ; preds = %lor.end
  %.lcssa11 = phi i64* [ %23, %lor.end ]
  %.lcssa = phi %union.tree_node* [ %24, %lor.end ]
  %32 = bitcast %union.tree_node** %val to i64**, !dbg !9931
  %33 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9977
  %bf.load54 = load i64, i64* %33, align 8, !dbg !9977
  %bf.cast563 = and i64 %bf.load54, 65535, !dbg !9979
  %cmp57 = icmp eq i64 %bf.cast563, 23, !dbg !9979
  br i1 %cmp57, label %if.end68, label %land.lhs.true, !dbg !9980

land.lhs.true:                                    ; preds = %while.end
  %bf.load61 = load i64, i64* %.lcssa11, align 8, !dbg !9981
  %bf.cast636 = and i64 %bf.load61, 65535, !dbg !9982
  %cmp64 = icmp eq i64 %bf.cast636, 51, !dbg !9982
  br i1 %cmp64, label %if.end68, label %if.then66, !dbg !9983

if.then66:                                        ; preds = %land.lhs.true
  %34 = bitcast %union.tree_node** %field to %struct.tree_decl_minimal**, !dbg !9984
  %35 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %34, align 8, !dbg !9984
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %35, i64 0, i32 3, !dbg !9984
  %36 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !9984
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.177, i64 0, i64 0), %union.tree_node* %36) #6, !dbg !9986
  br label %cleanup.cont, !dbg !9987

if.end68:                                         ; preds = %land.lhs.true, %while.end
  %div = sdiv i64 %add34, 8, !dbg !9988
  %total_bytes = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 6, !dbg !9990
  %37 = load i64, i64* %total_bytes, align 8, !dbg !9990
  %cmp69 = icmp eq i64 %div, %37, !dbg !9991
  br i1 %cmp69, label %if.end99, label %if.then71, !dbg !9992

if.then71:                                        ; preds = %if.end68
  %byte_buffer_in_use = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 7, !dbg !9993
  %38 = load i8, i8* %byte_buffer_in_use, align 8, !dbg !9993
  %tobool72 = icmp eq i8 %38, 0, !dbg !9996
  br i1 %tobool72, label %if.end79, label %if.then73, !dbg !9997

if.then73:                                        ; preds = %if.then71
  %byte = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !9998
  %39 = load i32, i32* %byte, align 4, !dbg !9998
  %conv74 = sext i32 %39 to i64, !dbg !9998
  %call75 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv74) #6, !dbg !9998
  %call76 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %call75, i32 1, i32 8, i32 1) #8, !dbg !10000
  %40 = load i64, i64* %total_bytes, align 8, !dbg !10001
  %inc = add nsw i64 %40, 1, !dbg !10001
  store i64 %inc, i64* %total_bytes, align 8, !dbg !10001
  store i8 0, i8* %byte_buffer_in_use, align 8, !dbg !10002
  br label %if.end79, !dbg !10003

if.end79:                                         ; preds = %if.then71, %if.then73
  %41 = phi i64 [ %37, %if.then71 ], [ %inc, %if.then73 ], !dbg !10004
  %cmp82 = icmp eq i64 %div, %41, !dbg !10006
  br i1 %cmp82, label %if.end99, label %if.then84, !dbg !10007

if.then84:                                        ; preds = %if.end79
  %cmp87 = icmp slt i64 %div, %41, !dbg !10008
  br i1 %cmp87, label %cond.true89, label %cond.end91, !dbg !10008

cond.true89:                                      ; preds = %if.then84
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 5010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !10008
  %.pre7 = load i64, i64* %total_bytes, align 8, !dbg !10010
  br label %cond.end91, !dbg !10008

cond.end91:                                       ; preds = %if.then84, %cond.true89
  %42 = phi i64 [ %41, %if.then84 ], [ %.pre7, %cond.true89 ], !dbg !10010
  %sub95 = sub nsw i64 %div, %42, !dbg !10011
  tail call void @assemble_zeros(i64 %sub95) #8, !dbg !10012
  store i64 %div, i64* %total_bytes, align 8, !dbg !10013
  br label %if.end99, !dbg !10014

if.end99:                                         ; preds = %if.end79, %if.end68, %cond.end91
  %byte_buffer_in_use100 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 7, !dbg !10015
  %43 = load i8, i8* %byte_buffer_in_use100, align 8, !dbg !10015
  %tobool101 = icmp eq i8 %43, 0, !dbg !10017
  br i1 %tobool101, label %if.then102, label %if.end109, !dbg !10018

if.then102:                                       ; preds = %if.end99
  %byte103 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !10019
  store i32 0, i32* %byte103, align 4, !dbg !10021
  %cmp104 = icmp sgt i64 %cond, 0, !dbg !10022
  br i1 %cmp104, label %if.then106, label %if.end109, !dbg !10024

if.then106:                                       ; preds = %if.then102
  store i8 1, i8* %byte_buffer_in_use100, align 8, !dbg !10025
  br label %if.end109, !dbg !10026

if.end109:                                        ; preds = %if.end99, %if.then102, %if.then106
  %44 = load i64*, i64** %32, align 8, !dbg !10027
  %bf.load112 = load i64, i64* %44, align 8, !dbg !10027
  %bf.cast1144 = and i64 %bf.load112, 65535, !dbg !10028
  %cmp115 = icmp eq i64 %bf.cast1144, 51, !dbg !10028
  br i1 %cmp115, label %if.then117, label %while.cond129.preheader, !dbg !10029

while.cond129.preheader:                          ; preds = %if.end109
  %byte140 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !10030
  %45 = bitcast %union.tree_node** %val to %struct.tree_int_cst**, !dbg !10032
  br label %while.cond129, !dbg !10037

if.then117:                                       ; preds = %if.end109
  %46 = bitcast i64* %44 to %union.tree_node*, !dbg !10029
  %47 = bitcast %struct.oc_outer_state* %output_state to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7, !dbg !10038
  %rem = srem i64 %add34, 8, !dbg !10039
  %conv118 = trunc i64 %rem to i32, !dbg !10040
  %bit_offset119 = getelementptr inbounds %struct.oc_outer_state, %struct.oc_outer_state* %output_state, i64 0, i32 0, !dbg !10041
  store i32 %conv118, i32* %bit_offset119, align 4, !dbg !10042
  %byte120 = getelementptr inbounds %struct.oc_local_state, %struct.oc_local_state* %local, i64 0, i32 8, !dbg !10043
  %48 = load i32, i32* %byte120, align 4, !dbg !10043
  %byte121 = getelementptr inbounds %struct.oc_outer_state, %struct.oc_outer_state* %output_state, i64 0, i32 1, !dbg !10044
  store i32 %48, i32* %byte121, align 4, !dbg !10045
  call void @llvm.dbg.value(metadata %struct.oc_outer_state* %output_state, metadata !9922, metadata !DIExpression(DW_OP_deref)), !dbg !10046
  %call123 = call fastcc i64 @output_constructor(%union.tree_node* %46, i64 0, i32 0, %struct.oc_outer_state* nonnull %output_state) #8, !dbg !10047
  %49 = load i64, i64* %total_bytes, align 8, !dbg !10048
  %add125 = add i64 %49, %call123, !dbg !10048
  store i64 %add125, i64* %total_bytes, align 8, !dbg !10048
  %50 = load i32, i32* %byte121, align 4, !dbg !10049
  store i32 %50, i32* %byte120, align 4, !dbg !10050
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7, !dbg !10051
  br label %cleanup.cont

while.cond129:                                    ; preds = %while.cond129.preheader, %if.end185
  %next_offset.0 = phi i64 [ %add194, %if.end185 ], [ %add34, %while.cond129.preheader ], !dbg !9931
  call void @llvm.dbg.value(metadata i64 %next_offset.0, metadata !9920, metadata !DIExpression()), !dbg !9931
  %cmp130 = icmp sgt i64 %add35, %next_offset.0, !dbg !10052
  br i1 %cmp130, label %while.body132, label %cleanup.cont.loopexit, !dbg !10037

while.body132:                                    ; preds = %while.cond129
  %div133 = sdiv i64 %next_offset.0, 8, !dbg !10053
  call void @llvm.dbg.value(metadata i64 %div133, metadata !9929, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i64 %rem134, metadata !9930, metadata !DIExpression()), !dbg !10054
  %.pre8 = load i64, i64* %total_bytes, align 8, !dbg !10055
  br label %while.cond135, !dbg !10056

while.cond135:                                    ; preds = %while.body139, %while.body132
  %51 = phi i64 [ %inc145, %while.body139 ], [ %.pre8, %while.body132 ], !dbg !10055
  %cmp137 = icmp eq i64 %div133, %51, !dbg !10057
  br i1 %cmp137, label %while.end147, label %while.body139, !dbg !10056

while.body139:                                    ; preds = %while.cond135
  %52 = load i32, i32* %byte140, align 4, !dbg !10058
  %conv141 = sext i32 %52 to i64, !dbg !10058
  %call142 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv141) #6, !dbg !10058
  %call143 = tail call zeroext i8 @assemble_integer(%struct.rtx_def* %call142, i32 1, i32 8, i32 1) #8, !dbg !10059
  %53 = load i64, i64* %total_bytes, align 8, !dbg !10060
  %inc145 = add nsw i64 %53, 1, !dbg !10060
  store i64 %inc145, i64* %total_bytes, align 8, !dbg !10060
  store i32 0, i32* %byte140, align 4, !dbg !10061
  br label %while.cond135, !dbg !10056, !llvm.loop !10062

while.end147:                                     ; preds = %while.cond135
  %rem134 = srem i64 %next_offset.0, 8, !dbg !10064
  %sub148 = sub nsw i64 %add35, %next_offset.0, !dbg !10065
  %sub149 = sub nsw i64 8, %rem134, !dbg !10065
  %cmp150 = icmp slt i64 %sub148, %sub149, !dbg !10065
  %cond157 = select i1 %cmp150, i64 %sub148, i64 %sub149, !dbg !10065
  %conv158 = trunc i64 %cond157 to i32, !dbg !10065
  call void @llvm.dbg.value(metadata i32 %conv158, metadata !9925, metadata !DIExpression()), !dbg !10054
  %sub159 = sub nsw i64 %next_offset.0, %add34, !dbg !10066
  %conv160 = trunc i64 %sub159 to i32, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %conv160, metadata !9927, metadata !DIExpression()), !dbg !10054
  %cmp161 = icmp slt i32 %conv160, 64, !dbg !10068
  %add164 = add nsw i32 %conv160, %conv158, !dbg !10070
  %cmp165 = icmp sgt i32 %add164, 64, !dbg !10071
  %or.cond = and i1 %cmp161, %cmp165, !dbg !10072
  %sub168 = sub nsw i32 64, %conv160, !dbg !10072
  %this_time.0 = select i1 %or.cond, i32 %sub168, i32 %conv158, !dbg !10072
  call void @llvm.dbg.value(metadata i32 %this_time.0, metadata !9925, metadata !DIExpression()), !dbg !10054
  br i1 %cmp161, label %if.then172, label %if.else, !dbg !10073

if.then172:                                       ; preds = %while.end147
  %54 = load %struct.tree_int_cst*, %struct.tree_int_cst** %45, align 8, !dbg !10074
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %54, i64 0, i32 1, i32 0, !dbg !10074
  br label %if.end185, !dbg !10075

if.else:                                          ; preds = %while.end147
  %cmp175 = icmp slt i32 %conv160, 128, !dbg !10076
  br i1 %cmp175, label %cond.end179, label %cond.true177, !dbg !10076

cond.true177:                                     ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 5117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !10076
  br label %cond.end179, !dbg !10076

cond.end179:                                      ; preds = %if.else, %cond.true177
  %55 = load %struct.tree_int_cst*, %struct.tree_int_cst** %45, align 8, !dbg !10077
  %high = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %55, i64 0, i32 1, i32 1, !dbg !10077
  %sub184 = add i64 %sub159, 4294967232, !dbg !10078
  call void @llvm.dbg.value(metadata i32 %conv160, metadata !9927, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !10054
  br label %if.end185

if.end185:                                        ; preds = %cond.end179, %if.then172
  %shift.0 = phi i64 [ %sub159, %if.then172 ], [ %sub184, %cond.end179 ], !dbg !10079
  %value.0.in = phi i64* [ %low, %if.then172 ], [ %high, %cond.end179 ]
  %value.0 = load i64, i64* %value.0.in, align 8, !dbg !10080
  call void @llvm.dbg.value(metadata i64 %value.0, metadata !9928, metadata !DIExpression()), !dbg !10054
  %sh_prom = and i64 %shift.0, 4294967295, !dbg !10081
  %shr = ashr i64 %value.0, %sh_prom, !dbg !10081
  %sub186 = add nsw i32 %this_time.0, -1, !dbg !10082
  %sh_prom187 = zext i32 %sub186 to i64, !dbg !10083
  %shl = shl i64 2, %sh_prom187, !dbg !10083
  %sub188 = add nsw i64 %shl, -1, !dbg !10084
  %and = and i64 %shr, %sub188, !dbg !10085
  %shl189 = shl i64 %and, %rem134, !dbg !10086
  %56 = load i32, i32* %byte140, align 4, !dbg !10087
  %57 = trunc i64 %shl189 to i32, !dbg !10087
  %conv192 = or i32 %56, %57, !dbg !10087
  store i32 %conv192, i32* %byte140, align 4, !dbg !10087
  %conv193 = sext i32 %this_time.0 to i64, !dbg !10088
  %add194 = add nsw i64 %next_offset.0, %conv193, !dbg !10089
  call void @llvm.dbg.value(metadata i64 %add194, metadata !9920, metadata !DIExpression()), !dbg !9931
  store i8 1, i8* %byte_buffer_in_use100, align 8, !dbg !10090
  br label %while.cond129, !dbg !10037, !llvm.loop !10091

cleanup.cont.loopexit:                            ; preds = %while.cond129
  br label %cleanup.cont, !dbg !10093

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then66, %if.then117
  ret void, !dbg !10093
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @array_size_for_constructor(%union.tree_node* %val) unnamed_addr #5 !dbg !10094 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !10098, metadata !DIExpression()), !dbg !10105
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10106
  %bf.load = load i64, i64* %0, align 8, !dbg !10106
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10108
  %cmp = icmp eq i64 %bf.cast1, 28, !dbg !10108
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !10109

for.cond.preheader:                               ; preds = %entry
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10110
  %1 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !10110
  br label %for.cond, !dbg !10113

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10114
  %3 = load i32, i32* %2, align 8, !dbg !10114
  %conv = sext i32 %3 to i64, !dbg !10114
  br label %cleanup, !dbg !10115

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %cnt.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !10116
  %4 = phi %struct.tree_exp* [ %14, %for.inc ], [ undef, %for.cond.preheader ]
  %index.0 = phi %union.tree_node* [ %index.2, %for.inc ], [ undef, %for.cond.preheader ]
  %max_index.0 = phi %union.tree_node* [ %max_index.1, %for.inc ], [ null, %for.cond.preheader ], !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %max_index.0, metadata !10099, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %index.0, metadata !10102, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata i64 %cnt.0, metadata !10101, metadata !DIExpression()), !dbg !10105
  %5 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !10117
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %5, null, !dbg !10117
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10117

cond.true:                                        ; preds = %for.cond
  %base3 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %5, i64 0, i32 0, !dbg !10117
  br label %cond.end, !dbg !10117

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base3, %cond.true ], [ null, %for.cond ], !dbg !10117
  %call = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond) #8, !dbg !10117
  %conv4 = zext i32 %call to i64, !dbg !10117
  %cmp5 = icmp ult i64 %cnt.0, %conv4, !dbg !10117
  br i1 %cmp5, label %cond.false8, label %cond.end35, !dbg !10117

cond.false8:                                      ; preds = %cond.end
  %6 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !10117
  %tobool11 = icmp eq %struct.VEC_constructor_elt_gc* %6, null, !dbg !10117
  br i1 %tobool11, label %cond.end17, label %cond.true12, !dbg !10117

cond.true12:                                      ; preds = %cond.false8
  %base15 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %6, i64 0, i32 0, !dbg !10117
  br label %cond.end17, !dbg !10117

cond.end17:                                       ; preds = %cond.false8, %cond.true12
  %cond18 = phi %struct.VEC_constructor_elt_base* [ %base15, %cond.true12 ], [ null, %cond.false8 ], !dbg !10117
  %conv19 = trunc i64 %cnt.0 to i32, !dbg !10117
  %call20 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond18, i32 %conv19) #8, !dbg !10117
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !10103, metadata !DIExpression()), !dbg !10105
  %7 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %1, align 8, !dbg !10117
  %tobool24 = icmp eq %struct.VEC_constructor_elt_gc* %7, null, !dbg !10117
  br i1 %tobool24, label %cond.end30, label %cond.true25, !dbg !10117

cond.true25:                                      ; preds = %cond.end17
  %base28 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %7, i64 0, i32 0, !dbg !10117
  br label %cond.end30, !dbg !10117

cond.end30:                                       ; preds = %cond.end17, %cond.true25
  %cond31 = phi %struct.VEC_constructor_elt_base* [ %base28, %cond.true25 ], [ null, %cond.end17 ], !dbg !10117
  %call33 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %cond31, i32 %conv19) #8, !dbg !10117
  %index34 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call33, i64 0, i32 0, !dbg !10117
  %8 = load %union.tree_node*, %union.tree_node** %index34, align 8, !dbg !10117
  %9 = bitcast %union.tree_node* %8 to %struct.tree_exp*, !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !10102, metadata !DIExpression()), !dbg !10105
  br label %cond.end35, !dbg !10117

cond.end35:                                       ; preds = %cond.end, %cond.end30
  %10 = phi %struct.tree_exp* [ %9, %cond.end30 ], [ %4, %cond.end ]
  %index.1 = phi %union.tree_node* [ %8, %cond.end30 ], [ %index.0, %cond.end ]
  %cond36 = phi i1 [ true, %cond.end30 ], [ false, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %index.1, metadata !10102, metadata !DIExpression()), !dbg !10105
  br i1 %cond36, label %for.body, label %for.end, !dbg !10113

for.body:                                         ; preds = %cond.end35
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %index.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10118
  %bf.load39 = load i64, i64* %11, align 8, !dbg !10118
  %bf.cast412 = and i64 %bf.load39, 65535, !dbg !10121
  %cmp42 = icmp eq i64 %bf.cast412, 111, !dbg !10121
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !10122

if.then44:                                        ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %10, i64 0, i32 3, i64 1, !dbg !10123
  %12 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !10123
  %13 = bitcast %union.tree_node* %12 to %struct.tree_exp*, !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !10102, metadata !DIExpression()), !dbg !10105
  br label %if.end45, !dbg !10124

if.end45:                                         ; preds = %if.then44, %for.body
  %14 = phi %struct.tree_exp* [ %13, %if.then44 ], [ %10, %for.body ]
  %index.2 = phi %union.tree_node* [ %12, %if.then44 ], [ %index.1, %for.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %index.2, metadata !10102, metadata !DIExpression()), !dbg !10105
  %cmp46 = icmp eq %union.tree_node* %max_index.0, null, !dbg !10125
  br i1 %cmp46, label %if.then50, label %lor.lhs.false, !dbg !10127

lor.lhs.false:                                    ; preds = %if.end45
  %call48 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %max_index.0, %union.tree_node* %index.2) #6, !dbg !10128
  %tobool49 = icmp eq i32 %call48, 0, !dbg !10128
  br i1 %tobool49, label %for.inc, label %if.then50, !dbg !10129

if.then50:                                        ; preds = %lor.lhs.false, %if.end45
  call void @llvm.dbg.value(metadata %union.tree_node* %index.2, metadata !10099, metadata !DIExpression()), !dbg !10105
  br label %for.inc, !dbg !10130

for.inc:                                          ; preds = %lor.lhs.false, %if.then50
  %max_index.1 = phi %union.tree_node* [ %index.2, %if.then50 ], [ %max_index.0, %lor.lhs.false ], !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %max_index.1, metadata !10099, metadata !DIExpression()), !dbg !10105
  %inc = add i64 %cnt.0, 1, !dbg !10117
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10101, metadata !DIExpression()), !dbg !10105
  br label %for.cond, !dbg !10117, !llvm.loop !10131

for.end:                                          ; preds = %cond.end35
  %max_index.0.lcssa = phi %union.tree_node* [ %max_index.0, %cond.end35 ], !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %max_index.0.lcssa, metadata !10099, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %max_index.0.lcssa, metadata !10099, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata %union.tree_node* %max_index.0.lcssa, metadata !10099, metadata !DIExpression()), !dbg !10105
  %cmp52 = icmp eq %union.tree_node* %max_index.0.lcssa, null, !dbg !10133
  br i1 %cmp52, label %cleanup, label %if.end55, !dbg !10135

if.end55:                                         ; preds = %for.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %val, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10136
  %15 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10136
  %16 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !10136
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %16, i64 0, i32 1, !dbg !10136
  %17 = bitcast %union.tree_node** %values to %struct.tree_type**, !dbg !10136
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !10136
  %minval = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 13, !dbg !10136
  %19 = load %union.tree_node*, %union.tree_node** %minval, align 8, !dbg !10136
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !10104, metadata !DIExpression()), !dbg !10105
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !10137
  %call58 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %20, %union.tree_node* nonnull %max_index.0.lcssa) #6, !dbg !10137
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !10137
  %call59 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %21, %union.tree_node* %19) #6, !dbg !10137
  %call60 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 64, %union.tree_node* %call58, %union.tree_node* %call59) #6, !dbg !10137
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !10100, metadata !DIExpression()), !dbg !10105
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !10138
  %call61 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %22, i64 1) #6, !dbg !10138
  %call62 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 63, %union.tree_node* %call60, %union.tree_node* %call61) #6, !dbg !10138
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !10100, metadata !DIExpression()), !dbg !10105
  %23 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !10139
  %24 = load %struct.tree_common*, %struct.tree_common** %23, align 8, !dbg !10139
  %type66 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %24, i64 0, i32 2, !dbg !10139
  %25 = bitcast %union.tree_node** %type66 to %struct.tree_type**, !dbg !10139
  %26 = load %struct.tree_type*, %struct.tree_type** %25, align 8, !dbg !10139
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %26, i64 0, i32 3, !dbg !10139
  %27 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !10139
  %call68 = tail call %union.tree_node* @size_binop_loc(i32 0, i32 65, %union.tree_node* %call62, %union.tree_node* %27) #6, !dbg !10139
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !10100, metadata !DIExpression()), !dbg !10105
  %call69 = tail call i64 @tree_low_cst(%union.tree_node* %call68, i32 1) #6, !dbg !10140
  br label %cleanup, !dbg !10141

cleanup:                                          ; preds = %for.end, %if.end55, %if.then
  %retval.0 = phi i64 [ %conv, %if.then ], [ %call69, %if.end55 ], [ 0, %for.end ], !dbg !10105
  ret i64 %retval.0, !dbg !10142
}

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @int_bit_position(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_gc_reserve(%struct.VEC_alias_pair_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10143 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_gc** @alias_pairs, metadata !10147, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 1, metadata !10148, metadata !DIExpression()), !dbg !10150
  %0 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !10151
  %tobool = icmp eq %struct.VEC_alias_pair_gc* %0, null, !dbg !10151
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10151

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %0, i64 0, i32 0, !dbg !10151
  br label %cond.end, !dbg !10151

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_pair_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10151
  %call = tail call fastcc i32 @VEC_alias_pair_base_space(%struct.VEC_alias_pair_base* %cond, i32 1) #8, !dbg !10151
  %tobool1 = icmp eq i32 %call, 0, !dbg !10151
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10151
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10149, metadata !DIExpression()), !dbg !10150
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10151

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_alias_pair_gc** @alias_pairs to i8**), align 8, !dbg !10152
  %call3 = tail call i8* @vec_gc_o_reserve(i8* %1, i32 1, i64 8, i64 16) #6, !dbg !10152
  store i8* %call3, i8** bitcast (%struct.VEC_alias_pair_gc** @alias_pairs to i8**), align 8, !dbg !10152
  br label %if.end, !dbg !10152

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_pair* @VEC_alias_pair_base_quick_push(%struct.VEC_alias_pair_base* %vec_, %struct.alias_pair* %obj_) unnamed_addr #0 !dbg !10154 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !10158, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata %struct.alias_pair* null, metadata !10159, metadata !DIExpression()), !dbg !10161
  %num1 = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !10162
  %0 = load i32, i32* %num1, align 8, !dbg !10162
  %inc = add i32 %0, 1, !dbg !10162
  store i32 %inc, i32* %num1, align 8, !dbg !10162
  %idxprom = zext i32 %0 to i64, !dbg !10162
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10162
  call void @llvm.dbg.value(metadata %struct.alias_pair* %arrayidx, metadata !10160, metadata !DIExpression()), !dbg !10161
  ret %struct.alias_pair* %arrayidx, !dbg !10162
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_base_space(%struct.VEC_alias_pair_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10163 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 1, metadata !10168, metadata !DIExpression()), !dbg !10169
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !10170
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10170

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 1, !dbg !10170
  %0 = load i32, i32* %alloc, align 4, !dbg !10170
  %num = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !10170
  %1 = load i32, i32* %num, align 8, !dbg !10170
  %cmp1 = icmp ne i32 %0, %1, !dbg !10170
  %phitmp = zext i1 %cmp1 to i32, !dbg !10170
  br label %cond.end, !dbg !10170

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10170
}

declare dso_local i8* @vec_gc_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @compare_constant(%union.tree_node* %t1, %union.tree_node* %t2) unnamed_addr #5 !dbg !10171 {
entry:
  %value1 = alloca %struct.addr_const, align 8
  %value2 = alloca %struct.addr_const, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t1, metadata !10175, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata %union.tree_node* %t2, metadata !10176, metadata !DIExpression()), !dbg !10194
  %cmp = icmp eq %union.tree_node* %t1, null, !dbg !10195
  %cmp1 = icmp eq %union.tree_node* %t2, null, !dbg !10194
  br i1 %cmp, label %if.then, label %if.end, !dbg !10197

if.then:                                          ; preds = %entry
  %conv = zext i1 %cmp1 to i32, !dbg !10198
  br label %cleanup395, !dbg !10199

if.end:                                           ; preds = %entry
  br i1 %cmp1, label %cleanup395, label %if.end5, !dbg !10200

if.end5:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10201
  %bf.load = load i64, i64* %0, align 8, !dbg !10201
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10203
  %bf.load7 = load i64, i64* %1, align 8, !dbg !10203
  %2 = xor i64 %bf.load, %bf.load7, !dbg !10204
  %3 = and i64 %2, 65535, !dbg !10204
  %cmp10 = icmp eq i64 %3, 0, !dbg !10204
  br i1 %cmp10, label %if.end13, label %cleanup395, !dbg !10205

if.end13:                                         ; preds = %if.end5
  %4 = trunc i64 %bf.load to i16, !dbg !10206
  switch i16 %4, label %cleanup395 [
    i16 23, label %sw.bb
    i16 24, label %sw.bb73
    i16 25, label %sw.bb94
    i16 28, label %sw.bb115
    i16 26, label %sw.bb176
    i16 51, label %sw.bb189
    i16 121, label %sw.bb351
    i16 122, label %sw.bb351
    i16 63, label %sw.bb369
    i16 66, label %sw.bb369
    i16 64, label %sw.bb369
    i16 111, label %sw.bb369
    i16 116, label %sw.bb387
    i16 113, label %sw.bb387
    i16 118, label %sw.bb387
  ], !dbg !10207

sw.bb:                                            ; preds = %if.end13
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10208
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10208
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !10208
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !10208
  %bf.load19 = load i32, i32* %precision, align 4, !dbg !10208
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10210
  %7 = bitcast %union.tree_node** %type22 to %struct.tree_type**, !dbg !10210
  %8 = load %struct.tree_type*, %struct.tree_type** %7, align 8, !dbg !10210
  %precision24 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !10210
  %bf.load25 = load i32, i32* %precision24, align 4, !dbg !10210
  %9 = xor i32 %bf.load19, %bf.load25, !dbg !10211
  %10 = and i32 %9, 1023, !dbg !10211
  %cmp27 = icmp eq i32 %10, 0, !dbg !10211
  %11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 0, i32 0, i32 0, !dbg !10212
  br i1 %cmp27, label %if.end30, label %cleanup395, !dbg !10212

if.end30:                                         ; preds = %sw.bb
  %12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 0, i32 0, i32 0, !dbg !10212
  %bf.load34 = load i64, i64* %12, align 8, !dbg !10213
  %bf.cast3614 = and i64 %bf.load34, 65535, !dbg !10213
  %cmp37 = icmp eq i64 %bf.cast3614, 14, !dbg !10213
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !10213

cond.true:                                        ; preds = %if.end30
  %.cast15 = bitcast %struct.tree_type* %6 to %union.tree_node*, !dbg !10213
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #6, !dbg !10213
  %.phi.trans.insert = bitcast %union.tree_node** %type22 to i64**, !dbg !10215
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !10216
  br label %cond.end, !dbg !10213

cond.false:                                       ; preds = %if.end30
  %bf.lshr = lshr i32 %bf.load19, 16, !dbg !10213
  %bf.clear45 = and i32 %bf.lshr, 255, !dbg !10213
  br label %cond.end, !dbg !10213

cond.end:                                         ; preds = %cond.false, %cond.true
  %13 = phi i64* [ %.pre, %cond.true ], [ %11, %cond.false ], !dbg !10216
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear45, %cond.false ], !dbg !10213
  %bf.load49 = load i64, i64* %13, align 8, !dbg !10216
  %bf.cast5116 = and i64 %bf.load49, 65535, !dbg !10216
  %cmp52 = icmp eq i64 %bf.cast5116, 14, !dbg !10216
  br i1 %cmp52, label %cond.true54, label %cond.false58, !dbg !10216

cond.true54:                                      ; preds = %cond.end
  %.cast17 = bitcast i64* %13 to %union.tree_node*, !dbg !10216
  %call57 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #6, !dbg !10216
  br label %cond.end66, !dbg !10216

cond.false58:                                     ; preds = %cond.end
  %type61 = bitcast i64* %13 to %struct.tree_type*, !dbg !10216
  %mode62 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type61, i64 0, i32 6, !dbg !10216
  %bf.load63 = load i32, i32* %mode62, align 4, !dbg !10216
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !10216
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !10216
  br label %cond.end66, !dbg !10216

cond.end66:                                       ; preds = %cond.false58, %cond.true54
  %cond67 = phi i32 [ %call57, %cond.true54 ], [ %bf.clear65, %cond.false58 ], !dbg !10216
  %cmp68 = icmp eq i32 %cond, %cond67, !dbg !10217
  br i1 %cmp68, label %if.end71, label %cleanup395, !dbg !10218

if.end71:                                         ; preds = %cond.end66
  %call72 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %t1, %union.tree_node* nonnull %t2) #6, !dbg !10219
  br label %cleanup395, !dbg !10220

sw.bb73:                                          ; preds = %if.end13
  %type75 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10221
  %14 = bitcast %union.tree_node** %type75 to %struct.tree_type**, !dbg !10221
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !10221
  %precision77 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 6, !dbg !10221
  %bf.load78 = load i32, i32* %precision77, align 4, !dbg !10221
  %type81 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10223
  %16 = bitcast %union.tree_node** %type81 to %struct.tree_type**, !dbg !10223
  %17 = load %struct.tree_type*, %struct.tree_type** %16, align 8, !dbg !10223
  %precision83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %17, i64 0, i32 6, !dbg !10223
  %bf.load84 = load i32, i32* %precision83, align 4, !dbg !10223
  %18 = xor i32 %bf.load78, %bf.load84, !dbg !10224
  %19 = and i32 %18, 1023, !dbg !10224
  %cmp86 = icmp eq i32 %19, 0, !dbg !10224
  br i1 %cmp86, label %if.end89, label %cleanup395, !dbg !10225

if.end89:                                         ; preds = %sw.bb73
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10226
  %20 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !10226
  %21 = load %struct.real_value*, %struct.real_value** %20, align 8, !dbg !10226
  %real_cst_ptr91 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10226
  %22 = bitcast i32* %real_cst_ptr91 to %struct.real_value**, !dbg !10226
  %23 = load %struct.real_value*, %struct.real_value** %22, align 8, !dbg !10226
  %call92 = tail call zeroext i8 @real_identical(%struct.real_value* %21, %struct.real_value* %23) #6, !dbg !10226
  %conv93 = zext i8 %call92 to i32, !dbg !10226
  br label %cleanup395, !dbg !10227

sw.bb94:                                          ; preds = %if.end13
  %type96 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10228
  %24 = bitcast %union.tree_node** %type96 to %struct.tree_type**, !dbg !10228
  %25 = load %struct.tree_type*, %struct.tree_type** %24, align 8, !dbg !10228
  %precision98 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %25, i64 0, i32 6, !dbg !10228
  %bf.load99 = load i32, i32* %precision98, align 4, !dbg !10228
  %type102 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10230
  %26 = bitcast %union.tree_node** %type102 to %struct.tree_type**, !dbg !10230
  %27 = load %struct.tree_type*, %struct.tree_type** %26, align 8, !dbg !10230
  %precision104 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %27, i64 0, i32 6, !dbg !10230
  %bf.load105 = load i32, i32* %precision104, align 4, !dbg !10230
  %28 = xor i32 %bf.load99, %bf.load105, !dbg !10231
  %29 = and i32 %28, 1023, !dbg !10231
  %cmp107 = icmp eq i32 %29, 0, !dbg !10231
  br i1 %cmp107, label %if.end110, label %cleanup395, !dbg !10232

if.end110:                                        ; preds = %sw.bb94
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10233
  %30 = bitcast i32* %fixed_cst_ptr to %struct.fixed_value**, !dbg !10233
  %31 = load %struct.fixed_value*, %struct.fixed_value** %30, align 8, !dbg !10233
  %fixed_cst_ptr112 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10233
  %32 = bitcast i32* %fixed_cst_ptr112 to %struct.fixed_value**, !dbg !10233
  %33 = load %struct.fixed_value*, %struct.fixed_value** %32, align 8, !dbg !10233
  %call113 = tail call zeroext i8 @fixed_identical(%struct.fixed_value* %31, %struct.fixed_value* %33) #6, !dbg !10233
  %conv114 = zext i8 %call113 to i32, !dbg !10233
  br label %cleanup395, !dbg !10234

sw.bb115:                                         ; preds = %if.end13
  %type117 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10235
  %34 = bitcast %union.tree_node** %type117 to i64**, !dbg !10235
  %35 = load i64*, i64** %34, align 8, !dbg !10235
  %bf.load119 = load i64, i64* %35, align 8, !dbg !10235
  %bf.cast1219 = and i64 %bf.load119, 65535, !dbg !10235
  %cmp122 = icmp eq i64 %bf.cast1219, 14, !dbg !10235
  br i1 %cmp122, label %cond.true124, label %cond.false128, !dbg !10235

cond.true124:                                     ; preds = %sw.bb115
  %.cast10 = bitcast i64* %35 to %union.tree_node*, !dbg !10235
  %call127 = tail call i32 @vector_type_mode(%union.tree_node* %.cast10) #6, !dbg !10235
  br label %cond.end136, !dbg !10235

cond.false128:                                    ; preds = %sw.bb115
  %type131 = bitcast i64* %35 to %struct.tree_type*, !dbg !10235
  %mode132 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type131, i64 0, i32 6, !dbg !10235
  %bf.load133 = load i32, i32* %mode132, align 4, !dbg !10235
  %bf.lshr134 = lshr i32 %bf.load133, 16, !dbg !10235
  %bf.clear135 = and i32 %bf.lshr134, 255, !dbg !10235
  br label %cond.end136, !dbg !10235

cond.end136:                                      ; preds = %cond.false128, %cond.true124
  %cond137 = phi i32 [ %call127, %cond.true124 ], [ %bf.clear135, %cond.false128 ], !dbg !10235
  %type139 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10237
  %36 = bitcast %union.tree_node** %type139 to i64**, !dbg !10237
  %37 = load i64*, i64** %36, align 8, !dbg !10237
  %bf.load141 = load i64, i64* %37, align 8, !dbg !10237
  %bf.cast14311 = and i64 %bf.load141, 65535, !dbg !10237
  %cmp144 = icmp eq i64 %bf.cast14311, 14, !dbg !10237
  br i1 %cmp144, label %cond.true146, label %cond.false150, !dbg !10237

cond.true146:                                     ; preds = %cond.end136
  %.cast12 = bitcast i64* %37 to %union.tree_node*, !dbg !10237
  %call149 = tail call i32 @vector_type_mode(%union.tree_node* %.cast12) #6, !dbg !10237
  br label %cond.end158, !dbg !10237

cond.false150:                                    ; preds = %cond.end136
  %type153 = bitcast i64* %37 to %struct.tree_type*, !dbg !10237
  %mode154 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type153, i64 0, i32 6, !dbg !10237
  %bf.load155 = load i32, i32* %mode154, align 4, !dbg !10237
  %bf.lshr156 = lshr i32 %bf.load155, 16, !dbg !10237
  %bf.clear157 = and i32 %bf.lshr156, 255, !dbg !10237
  br label %cond.end158, !dbg !10237

cond.end158:                                      ; preds = %cond.false150, %cond.true146
  %cond159 = phi i32 [ %call149, %cond.true146 ], [ %bf.clear157, %cond.false150 ], !dbg !10237
  %cmp160 = icmp eq i32 %cond137, %cond159, !dbg !10238
  br i1 %cmp160, label %if.end163, label %cleanup395, !dbg !10239

if.end163:                                        ; preds = %cond.end158
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10240
  %39 = load i32, i32* %38, align 8, !dbg !10240
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10241
  %41 = load i32, i32* %40, align 8, !dbg !10241
  %cmp166 = icmp eq i32 %39, %41, !dbg !10242
  br i1 %cmp166, label %land.rhs, label %land.end, !dbg !10243

land.rhs:                                         ; preds = %if.end163
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10244
  %arraydecay = bitcast i32* %str to i8*, !dbg !10244
  %str170 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10245
  %arraydecay171 = bitcast i32* %str170 to i8*, !dbg !10245
  %conv174 = sext i32 %39 to i64, !dbg !10246
  %call175 = tail call i32 @memcmp(i8* nonnull %arraydecay, i8* nonnull %arraydecay171, i64 %conv174) #6, !dbg !10247
  %tobool = icmp eq i32 %call175, 0, !dbg !10248
  %phitmp13 = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end163
  %42 = phi i32 [ 0, %if.end163 ], [ %phitmp13, %land.rhs ]
  br label %cleanup395, !dbg !10249

sw.bb176:                                         ; preds = %if.end13
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10250
  %43 = bitcast i32* %real to %union.tree_node**, !dbg !10250
  %44 = load %union.tree_node*, %union.tree_node** %43, align 8, !dbg !10250
  %real178 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10251
  %45 = bitcast i32* %real178 to %union.tree_node**, !dbg !10251
  %46 = load %union.tree_node*, %union.tree_node** %45, align 8, !dbg !10251
  %call179 = tail call fastcc i32 @compare_constant(%union.tree_node* %44, %union.tree_node* %46) #8, !dbg !10252
  %tobool180 = icmp eq i32 %call179, 0, !dbg !10252
  br i1 %tobool180, label %land.end187, label %land.rhs181, !dbg !10253

land.rhs181:                                      ; preds = %sw.bb176
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10254
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !10254
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10255
  %50 = load %union.tree_node*, %union.tree_node** %49, align 8, !dbg !10255
  %call185 = tail call fastcc i32 @compare_constant(%union.tree_node* %48, %union.tree_node* %50) #8, !dbg !10256
  %tobool186 = icmp ne i32 %call185, 0, !dbg !10253
  %phitmp8 = zext i1 %tobool186 to i32
  br label %land.end187

land.end187:                                      ; preds = %sw.bb176, %land.rhs181
  %51 = phi i32 [ 0, %sw.bb176 ], [ %phitmp8, %land.rhs181 ]
  br label %cleanup395, !dbg !10257

sw.bb189:                                         ; preds = %if.end13
  %type191 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10258
  %52 = bitcast %union.tree_node** %type191 to i64**, !dbg !10258
  %53 = load i64*, i64** %52, align 8, !dbg !10258
  %bf.load193 = load i64, i64* %53, align 8, !dbg !10258
  %54 = trunc i64 %bf.load193 to i32, !dbg !10258
  %bf.cast195 = and i32 %54, 65535, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %bf.cast195, metadata !10177, metadata !DIExpression()), !dbg !10194
  %type197 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10259
  %55 = bitcast %union.tree_node** %type197 to i64**, !dbg !10259
  %56 = load i64*, i64** %55, align 8, !dbg !10259
  %bf.load199 = load i64, i64* %56, align 8, !dbg !10259
  %57 = trunc i64 %bf.load199 to i32, !dbg !10259
  %bf.cast201 = and i32 %57, 65535, !dbg !10259
  %cmp202 = icmp eq i32 %bf.cast195, %bf.cast201, !dbg !10261
  %58 = bitcast i64* %53 to %union.tree_node*, !dbg !10262
  br i1 %cmp202, label %if.end205, label %cleanup395, !dbg !10262

if.end205:                                        ; preds = %sw.bb189
  %cmp206 = icmp eq i32 %bf.cast195, 15, !dbg !10263
  br i1 %cmp206, label %if.then208, label %if.else, !dbg !10264

if.then208:                                       ; preds = %if.end205
  %call211 = tail call i64 @int_size_in_bytes(%union.tree_node* %58) #6, !dbg !10265
  call void @llvm.dbg.value(metadata i64 %call211, metadata !10183, metadata !DIExpression()), !dbg !10266
  %59 = load i64*, i64** %52, align 8, !dbg !10267
  %bf.load215 = load i64, i64* %59, align 8, !dbg !10267
  %bf.cast2174 = and i64 %bf.load215, 65535, !dbg !10267
  %cmp218 = icmp eq i64 %bf.cast2174, 14, !dbg !10267
  br i1 %cmp218, label %cond.true220, label %cond.false224, !dbg !10267

cond.true220:                                     ; preds = %if.then208
  %.cast = bitcast i64* %59 to %union.tree_node*, !dbg !10267
  %call223 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #6, !dbg !10267
  br label %cond.end232, !dbg !10267

cond.false224:                                    ; preds = %if.then208
  %type227 = bitcast i64* %59 to %struct.tree_type*, !dbg !10267
  %mode228 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type227, i64 0, i32 6, !dbg !10267
  %bf.load229 = load i32, i32* %mode228, align 4, !dbg !10267
  %bf.lshr230 = lshr i32 %bf.load229, 16, !dbg !10267
  %bf.clear231 = and i32 %bf.lshr230, 255, !dbg !10267
  br label %cond.end232, !dbg !10267

cond.end232:                                      ; preds = %cond.false224, %cond.true220
  %cond233 = phi i32 [ %call223, %cond.true220 ], [ %bf.clear231, %cond.false224 ], !dbg !10267
  %60 = load i64*, i64** %55, align 8, !dbg !10269
  %bf.load237 = load i64, i64* %60, align 8, !dbg !10269
  %bf.cast2395 = and i64 %bf.load237, 65535, !dbg !10269
  %cmp240 = icmp eq i64 %bf.cast2395, 14, !dbg !10269
  br i1 %cmp240, label %cond.true242, label %cond.false246, !dbg !10269

cond.true242:                                     ; preds = %cond.end232
  %.cast6 = bitcast i64* %60 to %union.tree_node*, !dbg !10269
  %call245 = tail call i32 @vector_type_mode(%union.tree_node* %.cast6) #6, !dbg !10269
  br label %cond.end254, !dbg !10269

cond.false246:                                    ; preds = %cond.end232
  %type249 = bitcast i64* %60 to %struct.tree_type*, !dbg !10269
  %mode250 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type249, i64 0, i32 6, !dbg !10269
  %bf.load251 = load i32, i32* %mode250, align 4, !dbg !10269
  %bf.lshr252 = lshr i32 %bf.load251, 16, !dbg !10269
  %bf.clear253 = and i32 %bf.lshr252, 255, !dbg !10269
  br label %cond.end254, !dbg !10269

cond.end254:                                      ; preds = %cond.false246, %cond.true242
  %cond255 = phi i32 [ %call245, %cond.true242 ], [ %bf.clear253, %cond.false246 ], !dbg !10269
  %cmp256 = icmp ne i32 %cond233, %cond255, !dbg !10270
  %cmp258 = icmp eq i64 %call211, -1, !dbg !10271
  %or.cond = or i1 %cmp256, %cmp258, !dbg !10272
  br i1 %or.cond, label %cleanup, label %lor.lhs.false260, !dbg !10272

lor.lhs.false260:                                 ; preds = %cond.end254
  %61 = load %union.tree_node*, %union.tree_node** %type197, align 8, !dbg !10273
  %call263 = tail call i64 @int_size_in_bytes(%union.tree_node* %61) #6, !dbg !10274
  %cmp264 = icmp eq i64 %call211, %call263, !dbg !10275
  br label %cleanup, !dbg !10276

cleanup:                                          ; preds = %lor.lhs.false260, %cond.end254
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end254 ], [ %cmp264, %lor.lhs.false260 ]
  br i1 %cleanup.dest.slot.0, label %if.end276, label %cleanup395

if.else:                                          ; preds = %if.end205
  %cmp272 = icmp eq i64* %53, %56, !dbg !10277
  br i1 %cmp272, label %if.end276, label %cleanup395, !dbg !10280

if.end276:                                        ; preds = %if.else, %cleanup
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10281
  %62 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !10281
  %63 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %62, align 8, !dbg !10281
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %63, metadata !10178, metadata !DIExpression()), !dbg !10282
  %elts278 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10283
  %64 = bitcast i32* %elts278 to %struct.VEC_constructor_elt_gc**, !dbg !10283
  %65 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %64, align 8, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc* %65, metadata !10181, metadata !DIExpression()), !dbg !10282
  %base281 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %63, i64 0, i32 0, !dbg !10284
  %call285 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base281) #8, !dbg !10284
  %base288 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %65, i64 0, i32 0, !dbg !10286
  %call292 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base288) #8, !dbg !10286
  %cmp293 = icmp eq i32 %call285, %call292, !dbg !10287
  br i1 %cmp293, label %for.cond.preheader, label %cleanup395, !dbg !10288

for.cond.preheader:                               ; preds = %if.end276
  br i1 %cmp206, label %for.cond.preheader.split.us, label %for.cond.preheader.for.cond.preheader.split_crit_edge, !dbg !10289

for.cond.preheader.for.cond.preheader.split_crit_edge: ; preds = %for.cond.preheader
  br label %for.cond, !dbg !10289

for.cond.preheader.split.us:                      ; preds = %for.cond.preheader
  br label %for.cond.us, !dbg !10289

for.cond.us:                                      ; preds = %for.inc.us, %for.cond.preheader.split.us
  %idx.0.us = phi i64 [ %inc.us, %for.inc.us ], [ 0, %for.cond.preheader.split.us ], !dbg !10290
  call void @llvm.dbg.value(metadata i64 %idx.0.us, metadata !10182, metadata !DIExpression()), !dbg !10282
  %call303.us = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base281) #8, !dbg !10291
  %conv304.us = zext i32 %call303.us to i64, !dbg !10291
  %cmp305.us = icmp ult i64 %idx.0.us, %conv304.us, !dbg !10292
  br i1 %cmp305.us, label %for.body.us, label %cleanup395.loopexit.us-lcssa.us, !dbg !10289

for.body.us:                                      ; preds = %for.cond.us
  %conv313.us = trunc i64 %idx.0.us to i32, !dbg !10293
  %call314.us = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base281, i32 %conv313.us) #8, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call314.us, metadata !10186, metadata !DIExpression()), !dbg !10294
  %call322.us = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base288, i32 %conv313.us) #8, !dbg !10295
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call322.us, metadata !10190, metadata !DIExpression()), !dbg !10294
  %value.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call314.us, i64 0, i32 1, !dbg !10296
  %66 = load %union.tree_node*, %union.tree_node** %value.us, align 8, !dbg !10296
  %value323.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call322.us, i64 0, i32 1, !dbg !10298
  %67 = load %union.tree_node*, %union.tree_node** %value323.us, align 8, !dbg !10298
  %call324.us = tail call fastcc i32 @compare_constant(%union.tree_node* %66, %union.tree_node* %67) #8, !dbg !10299
  %tobool325.us = icmp eq i32 %call324.us, 0, !dbg !10299
  br i1 %tobool325.us, label %cleanup344.us, label %if.end327.us, !dbg !10300

if.end327.us:                                     ; preds = %for.body.us
  %index331.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call322.us, i64 0, i32 0, !dbg !10301
  %68 = load %union.tree_node*, %union.tree_node** %index331.us, align 8, !dbg !10301
  %index.us = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call314.us, i64 0, i32 0, !dbg !10301
  %69 = load %union.tree_node*, %union.tree_node** %index.us, align 8, !dbg !10301
  %call332.us = tail call fastcc i32 @compare_constant(%union.tree_node* %69, %union.tree_node* %68) #8, !dbg !10303
  %tobool333.us = icmp eq i32 %call332.us, 0, !dbg !10303
  br i1 %tobool333.us, label %cleanup344.us, label %if.end343.us, !dbg !10306

if.end343.us:                                     ; preds = %if.end327.us
  br label %cleanup344.us, !dbg !10307

cleanup344.us:                                    ; preds = %if.end343.us, %if.end327.us, %for.body.us
  %cleanup.dest.slot.1.us = phi i1 [ true, %if.end343.us ], [ false, %for.body.us ], [ false, %if.end327.us ]
  br i1 %cleanup.dest.slot.1.us, label %for.inc.us, label %cleanup395.loopexit.us-lcssa.us

for.inc.us:                                       ; preds = %cleanup344.us
  %inc.us = add nuw nsw i64 %idx.0.us, 1, !dbg !10308
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !10182, metadata !DIExpression()), !dbg !10282
  br label %for.cond.us, !dbg !10309, !llvm.loop !10310

cleanup395.loopexit.us-lcssa.us:                  ; preds = %cleanup344.us, %for.cond.us
  %retval.5.ph.ph.us = phi i32 [ 0, %cleanup344.us ], [ 1, %for.cond.us ]
  br label %cleanup395.loopexit, !dbg !10312

for.cond:                                         ; preds = %for.cond.preheader.for.cond.preheader.split_crit_edge, %for.inc
  %idx.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader.for.cond.preheader.split_crit_edge ], !dbg !10290
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !10182, metadata !DIExpression()), !dbg !10282
  %call303 = tail call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %base281) #8, !dbg !10291
  %conv304 = zext i32 %call303 to i64, !dbg !10291
  %cmp305 = icmp ult i64 %idx.0, %conv304, !dbg !10292
  br i1 %cmp305, label %for.body, label %cleanup395.loopexit.us-lcssa, !dbg !10289

for.body:                                         ; preds = %for.cond
  %conv313 = trunc i64 %idx.0 to i32, !dbg !10293
  %call314 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base281, i32 %conv313) #8, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call314, metadata !10186, metadata !DIExpression()), !dbg !10294
  %call322 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_index(%struct.VEC_constructor_elt_base* %base288, i32 %conv313) #8, !dbg !10295
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call322, metadata !10190, metadata !DIExpression()), !dbg !10294
  %value = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call314, i64 0, i32 1, !dbg !10296
  %70 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !10296
  %value323 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call322, i64 0, i32 1, !dbg !10298
  %71 = load %union.tree_node*, %union.tree_node** %value323, align 8, !dbg !10298
  %call324 = tail call fastcc i32 @compare_constant(%union.tree_node* %70, %union.tree_node* %71) #8, !dbg !10299
  %tobool325 = icmp eq i32 %call324, 0, !dbg !10299
  br i1 %tobool325, label %cleanup344, label %if.end327, !dbg !10300

if.end327:                                        ; preds = %for.body
  %index331 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call322, i64 0, i32 0, !dbg !10301
  %72 = load %union.tree_node*, %union.tree_node** %index331, align 8, !dbg !10301
  %index = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call314, i64 0, i32 0, !dbg !10301
  %73 = load %union.tree_node*, %union.tree_node** %index, align 8, !dbg !10301
  %cmp339 = icmp eq %union.tree_node* %73, %72, !dbg !10313
  br i1 %cmp339, label %if.end343, label %cleanup344, !dbg !10316

if.end343:                                        ; preds = %if.end327
  br label %cleanup344, !dbg !10307

cleanup344:                                       ; preds = %if.end327, %for.body, %if.end343
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end343 ], [ false, %for.body ], [ false, %if.end327 ]
  br i1 %cleanup.dest.slot.1, label %for.inc, label %cleanup395.loopexit.us-lcssa

for.inc:                                          ; preds = %cleanup344
  %inc = add nuw nsw i64 %idx.0, 1, !dbg !10308
  call void @llvm.dbg.value(metadata i64 %inc, metadata !10182, metadata !DIExpression()), !dbg !10282
  br label %for.cond, !dbg !10309, !llvm.loop !10310

sw.bb351:                                         ; preds = %if.end13, %if.end13
  %74 = bitcast %struct.addr_const* %value1 to i8*, !dbg !10317
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #7, !dbg !10317
  %75 = bitcast %struct.addr_const* %value2 to i8*, !dbg !10317
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #7, !dbg !10317
  call void @llvm.dbg.value(metadata %struct.addr_const* %value1, metadata !10191, metadata !DIExpression(DW_OP_deref)), !dbg !10318
  call fastcc void @decode_addr_const(%union.tree_node* nonnull %t1, %struct.addr_const* nonnull %value1) #8, !dbg !10319
  call void @llvm.dbg.value(metadata %struct.addr_const* %value2, metadata !10193, metadata !DIExpression(DW_OP_deref)), !dbg !10318
  call fastcc void @decode_addr_const(%union.tree_node* nonnull %t2, %struct.addr_const* nonnull %value2) #8, !dbg !10320
  %offset = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value1, i64 0, i32 1, !dbg !10321
  %76 = load i64, i64* %offset, align 8, !dbg !10321
  %offset352 = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value2, i64 0, i32 1, !dbg !10322
  %77 = load i64, i64* %offset352, align 8, !dbg !10322
  %cmp353 = icmp eq i64 %76, %77, !dbg !10323
  br i1 %cmp353, label %land.rhs355, label %land.end365, !dbg !10324

land.rhs355:                                      ; preds = %sw.bb351
  %base356 = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value1, i64 0, i32 0, !dbg !10325
  %78 = load %struct.rtx_def*, %struct.rtx_def** %base356, align 8, !dbg !10325
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10325
  %79 = load i8*, i8** %rt_str, align 8, !dbg !10325
  %base357 = getelementptr inbounds %struct.addr_const, %struct.addr_const* %value2, i64 0, i32 0, !dbg !10326
  %80 = load %struct.rtx_def*, %struct.rtx_def** %base357, align 8, !dbg !10326
  %rt_str361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10326
  %81 = load i8*, i8** %rt_str361, align 8, !dbg !10326
  %call362 = call i32 @strcmp(i8* %79, i8* %81) #6, !dbg !10327
  %cmp363 = icmp eq i32 %call362, 0, !dbg !10328
  %phitmp3 = zext i1 %cmp363 to i32
  br label %land.end365

land.end365:                                      ; preds = %land.rhs355, %sw.bb351
  %82 = phi i32 [ 0, %sw.bb351 ], [ %phitmp3, %land.rhs355 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #7, !dbg !10329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #7, !dbg !10329
  br label %cleanup395

sw.bb369:                                         ; preds = %if.end13, %if.end13, %if.end13, %if.end13
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10330
  %83 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10330
  %operands372 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10331
  %84 = load %union.tree_node*, %union.tree_node** %operands372, align 8, !dbg !10331
  %call374 = tail call fastcc i32 @compare_constant(%union.tree_node* %83, %union.tree_node* %84) #8, !dbg !10332
  %tobool375 = icmp eq i32 %call374, 0, !dbg !10332
  br i1 %tobool375, label %land.end385, label %land.rhs376, !dbg !10333

land.rhs376:                                      ; preds = %sw.bb369
  %arrayidx379 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10334
  %85 = load %union.tree_node*, %union.tree_node** %arrayidx379, align 8, !dbg !10334
  %arrayidx382 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands372, i64 1, !dbg !10335
  %86 = load %union.tree_node*, %union.tree_node** %arrayidx382, align 8, !dbg !10335
  %call383 = tail call fastcc i32 @compare_constant(%union.tree_node* %85, %union.tree_node* %86) #8, !dbg !10336
  %tobool384 = icmp ne i32 %call383, 0, !dbg !10333
  %phitmp = zext i1 %tobool384 to i32
  br label %land.end385

land.end385:                                      ; preds = %sw.bb369, %land.rhs376
  %87 = phi i32 [ 0, %sw.bb369 ], [ %phitmp, %land.rhs376 ]
  br label %cleanup395, !dbg !10337

sw.bb387:                                         ; preds = %if.end13, %if.end13, %if.end13
  %operands389 = getelementptr inbounds %union.tree_node, %union.tree_node* %t1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10338
  %88 = load %union.tree_node*, %union.tree_node** %operands389, align 8, !dbg !10338
  %operands392 = getelementptr inbounds %union.tree_node, %union.tree_node* %t2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10339
  %89 = load %union.tree_node*, %union.tree_node** %operands392, align 8, !dbg !10339
  %call394 = tail call fastcc i32 @compare_constant(%union.tree_node* %88, %union.tree_node* %89) #8, !dbg !10340
  br label %cleanup395, !dbg !10341

cleanup395.loopexit.us-lcssa:                     ; preds = %cleanup344, %for.cond
  %retval.5.ph.ph = phi i32 [ 0, %cleanup344 ], [ 1, %for.cond ]
  br label %cleanup395.loopexit, !dbg !10312

cleanup395.loopexit:                              ; preds = %cleanup395.loopexit.us-lcssa.us, %cleanup395.loopexit.us-lcssa
  %retval.5.ph = phi i32 [ %retval.5.ph.ph, %cleanup395.loopexit.us-lcssa ], [ %retval.5.ph.ph.us, %cleanup395.loopexit.us-lcssa.us ]
  br label %cleanup395, !dbg !10312

cleanup395:                                       ; preds = %cleanup395.loopexit, %cond.end66, %sw.bb, %sw.bb73, %sw.bb94, %cond.end158, %if.end276, %if.else, %sw.bb189, %if.end5, %if.end13, %cleanup, %if.end, %sw.bb387, %land.end385, %land.end365, %land.end187, %land.end, %if.end110, %if.end89, %if.end71, %if.then
  %retval.5 = phi i32 [ %conv, %if.then ], [ %call394, %sw.bb387 ], [ %87, %land.end385 ], [ %82, %land.end365 ], [ %51, %land.end187 ], [ %42, %land.end ], [ %conv114, %if.end110 ], [ %conv93, %if.end89 ], [ %call72, %if.end71 ], [ 0, %if.end ], [ 0, %if.end5 ], [ 0, %sw.bb ], [ 0, %cond.end66 ], [ 0, %sw.bb73 ], [ 0, %sw.bb94 ], [ 0, %cond.end158 ], [ 0, %cleanup ], [ 0, %sw.bb189 ], [ 0, %if.else ], [ 0, %if.end276 ], [ 0, %if.end13 ], [ %retval.5.ph, %cleanup395.loopexit ], !dbg !10194
  ret i32 %retval.5, !dbg !10312
}

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_identical(%struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @fixed_identical(%struct.fixed_value*, %struct.fixed_value*) local_unnamed_addr #2

declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @asm_output_aligned_bss(%struct._IO_FILE* %file, %union.tree_node* %decl, i8* %name, i64 %size, i32 %align) unnamed_addr #5 !dbg !10342 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !10346, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !10347, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.value(metadata i8* %name, metadata !10348, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.value(metadata i64 %size, metadata !10349, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.value(metadata i32 %align, metadata !10350, metadata !DIExpression()), !dbg !10357
  %0 = load %union.section*, %union.section** @bss_section, align 8, !dbg !10358
  tail call void @switch_to_section(%union.section* %0) #8, !dbg !10359
  %div = sdiv i32 %align, 8, !dbg !10360
  %conv = sext i32 %div to i64, !dbg !10360
  %call = tail call i32 @floor_log2(i64 %conv) #6, !dbg !10360
  %cmp = icmp eq i32 %call, 0, !dbg !10360
  br i1 %cmp, label %if.end, label %if.then, !dbg !10362

if.then:                                          ; preds = %entry
  %call4 = tail call i32 @floor_log2(i64 %conv) #6, !dbg !10360
  %shl = shl i32 1, %call4, !dbg !10360
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i32 %shl) #6, !dbg !10360
  br label %if.end, !dbg !10360

if.end:                                           ; preds = %entry, %if.then
  store %union.tree_node* %decl, %union.tree_node** @last_assemble_variable_decl, align 8, !dbg !10363
  %call8 = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), %struct._IO_FILE* %file) #6, !dbg !10364
  tail call void @assemble_name(%struct._IO_FILE* %file, i8* %name) #8, !dbg !10364
  %call9 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), %struct._IO_FILE* %file) #6, !dbg !10364
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i64 0, i64 0)) #6, !dbg !10364
  %call11 = tail call i32 @putc(i32 10, %struct._IO_FILE* %file) #6, !dbg !10364
  store i32 0, i32* @size_directive_output, align 4, !dbg !10367
  %1 = load i32, i32* @flag_inhibit_size_directive, align 4, !dbg !10368
  %tobool = icmp eq i32 %1, 0, !dbg !10368
  %tobool12 = icmp ne %union.tree_node* %decl, null, !dbg !10368
  %or.cond = and i1 %tobool, %tobool12, !dbg !10368
  br i1 %or.cond, label %land.lhs.true13, label %do.body24, !dbg !10368

land.lhs.true13:                                  ; preds = %if.end
  %size14 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10368
  %2 = load %union.tree_node*, %union.tree_node** %size14, align 8, !dbg !10368
  %tobool15 = icmp eq %union.tree_node* %2, null, !dbg !10368
  br i1 %tobool15, label %do.body24, label %if.then16, !dbg !10367

if.then16:                                        ; preds = %land.lhs.true13
  store i32 1, i32* @size_directive_output, align 4, !dbg !10369
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10369
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10369
  %call17 = tail call i64 @int_size_in_bytes(%union.tree_node* %3) #6, !dbg !10369
  call void @llvm.dbg.value(metadata i64 %call17, metadata !10351, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i64 %call17, metadata !10353, metadata !DIExpression()), !dbg !10371
  %call19 = tail call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), %struct._IO_FILE* %file) #6, !dbg !10372
  tail call void @assemble_name(%struct._IO_FILE* %file, i8* %name) #8, !dbg !10372
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i64 %call17) #6, !dbg !10372
  br label %do.body24, !dbg !10369

do.body24:                                        ; preds = %land.lhs.true13, %if.then16, %if.end
  tail call void @assemble_name(%struct._IO_FILE* %file, i8* %name) #8, !dbg !10373
  %call25 = tail call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), %struct._IO_FILE* %file) #6, !dbg !10373
  %tobool30 = icmp eq i64 %size, 0, !dbg !10375
  %cond = select i1 %tobool30, i64 1, i64 %size, !dbg !10375
  %call31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i64 0, i64 0), i64 %cond) #6, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: nounwind uwtable
define internal i32 @compute_reloc_for_rtx_1(%struct.rtx_def** %xp, i8* %data) #5 !dbg !10377 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %xp, metadata !10379, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i8* %data, metadata !10380, metadata !DIExpression()), !dbg !10383
  %0 = bitcast i8* %data to i32*, !dbg !10384
  call void @llvm.dbg.value(metadata i32* %0, metadata !10381, metadata !DIExpression()), !dbg !10383
  %1 = load %struct.rtx_def*, %struct.rtx_def** %xp, align 8, !dbg !10385
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !10382, metadata !DIExpression()), !dbg !10383
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 0, !dbg !10386
  %bf.load = load i32, i32* %2, align 8, !dbg !10386
  %trunc = trunc i32 %bf.load to i16, !dbg !10387
  switch i16 %trunc, label %sw.epilog [
    i16 45, label %sw.bb
    i16 44, label %sw.bb1
  ], !dbg !10387

sw.bb:                                            ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !10388
  %rt_int = bitcast %union.rtunion_def* %3 to i32*, !dbg !10388
  %4 = load i32, i32* %rt_int, align 8, !dbg !10388
  %and = and i32 %4, 2, !dbg !10388
  %cmp = icmp eq i32 %and, 0, !dbg !10388
  %cond = select i1 %cmp, i32 2, i32 1, !dbg !10388
  %5 = load i32, i32* %0, align 4, !dbg !10390
  %or = or i32 %5, %cond, !dbg !10390
  store i32 %or, i32* %0, align 4, !dbg !10390
  br label %sw.epilog, !dbg !10391

sw.bb1:                                           ; preds = %entry
  %6 = load i32, i32* %0, align 4, !dbg !10392
  %or2 = or i32 %6, 1, !dbg !10392
  store i32 %or2, i32* %0, align 4, !dbg !10392
  br label %sw.epilog, !dbg !10393

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret i32 0, !dbg !10394
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_gc_reserve(%struct.VEC_rtx_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10395 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** %vec_, metadata !10399, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 1, metadata !10400, metadata !DIExpression()), !dbg !10402
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %vec_, align 8, !dbg !10403
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !10403
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10403

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !10403
  br label %cond.end, !dbg !10403

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !10403
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 1) #8, !dbg !10403
  %tobool1 = icmp eq i32 %call, 0, !dbg !10403
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !10401, metadata !DIExpression()), !dbg !10402
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10403

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_rtx_gc** %vec_ to i8**, !dbg !10404
  %2 = load i8*, i8** %1, align 8, !dbg !10404
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !10404
  store i8* %call3, i8** %1, align 8, !dbg !10404
  br label %if.end, !dbg !10404

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !10403
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !10406 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10411, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !10412, metadata !DIExpression()), !dbg !10414
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10415
  %0 = load i32, i32* %num1, align 8, !dbg !10415
  %inc = add i32 %0, 1, !dbg !10415
  store i32 %inc, i32* %num1, align 8, !dbg !10415
  %idxprom = zext i32 %0 to i64, !dbg !10415
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10415
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !10413, metadata !DIExpression()), !dbg !10414
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !10415
  ret %struct.rtx_def** %arrayidx, !dbg !10415
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !10416 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10420, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 1, metadata !10421, metadata !DIExpression()), !dbg !10422
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !10423
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10423

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !10423
  %0 = load i32, i32* %alloc, align 4, !dbg !10423
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10423
  %1 = load i32, i32* %num, align 8, !dbg !10423
  %cmp1 = icmp ne i32 %0, %1, !dbg !10423
  %phitmp = zext i1 %cmp1 to i32, !dbg !10423
  br label %cond.end, !dbg !10423

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !10423
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_quick_insert(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def* %obj_) unnamed_addr #0 !dbg !10424 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10428, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10429, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata %struct.rtx_def* %obj_, metadata !10430, metadata !DIExpression()), !dbg !10432
  %idxprom = zext i32 %ix_ to i64, !dbg !10433
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10433
  call void @llvm.dbg.value(metadata %struct.rtx_def** %arrayidx, metadata !10431, metadata !DIExpression()), !dbg !10432
  %add.ptr = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %arrayidx, i64 1, !dbg !10433
  %0 = bitcast %struct.rtx_def** %add.ptr to i8*, !dbg !10433
  %1 = bitcast %struct.rtx_def** %arrayidx to i8*, !dbg !10433
  %num4 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10433
  %2 = load i32, i32* %num4, align 8, !dbg !10433
  %inc = add i32 %2, 1, !dbg !10433
  store i32 %inc, i32* %num4, align 8, !dbg !10433
  %sub = sub i32 %2, %ix_, !dbg !10433
  %conv5 = zext i32 %sub to i64, !dbg !10433
  %mul = shl nuw nsw i64 %conv5, 3, !dbg !10433
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !10433
  store %struct.rtx_def* %obj_, %struct.rtx_def** %arrayidx, align 8, !dbg !10433
  ret %struct.rtx_def** %arrayidx, !dbg !10433
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_object_block(%struct.object_block* %block) unnamed_addr #5 !dbg !10434 {
entry:
  %symbol = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.object_block* %block, metadata !10438, metadata !DIExpression()), !dbg !10444
  %0 = bitcast %struct.rtx_def** %symbol to i8*, !dbg !10445
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10445
  %objects = getelementptr inbounds %struct.object_block, %struct.object_block* %block, i64 0, i32 3, !dbg !10446
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %objects, align 8, !dbg !10446
  %cmp = icmp eq %struct.VEC_rtx_gc* %1, null, !dbg !10448
  br i1 %cmp, label %cleanup, label %if.end, !dbg !10449

if.end:                                           ; preds = %entry
  %sect = getelementptr inbounds %struct.object_block, %struct.object_block* %block, i64 0, i32 0, !dbg !10450
  %2 = load %union.section*, %union.section** %sect, align 8, !dbg !10450
  tail call void @switch_to_section(%union.section* %2) #8, !dbg !10451
  %alignment = getelementptr inbounds %struct.object_block, %struct.object_block* %block, i64 0, i32 1, !dbg !10452
  %3 = load i32, i32* %alignment, align 8, !dbg !10452
  tail call void @assemble_align(i32 %3) #8, !dbg !10453
  call void @llvm.dbg.value(metadata i32 0, metadata !10440, metadata !DIExpression()), !dbg !10444
  %anchors = getelementptr inbounds %struct.object_block, %struct.object_block* %block, i64 0, i32 4, !dbg !10454
  br label %for.cond, !dbg !10457

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !10458
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !10440, metadata !DIExpression()), !dbg !10444
  %4 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %anchors, align 8, !dbg !10459
  %tobool = icmp eq %struct.VEC_rtx_gc* %4, null, !dbg !10459
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !10459

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %4, i64 0, i32 0, !dbg !10459
  br label %cond.end, !dbg !10459

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !10459
  call void @llvm.dbg.value(metadata %struct.rtx_def** %symbol, metadata !10443, metadata !DIExpression(DW_OP_deref)), !dbg !10444
  %call = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond, i32 %i.0, %struct.rtx_def** nonnull %symbol) #8, !dbg !10459
  %tobool2 = icmp eq i32 %call, 0, !dbg !10460
  br i1 %tobool2, label %for.cond3.preheader, label %for.body, !dbg !10460

for.cond3.preheader:                              ; preds = %cond.end
  br label %for.cond3, !dbg !10461

for.body:                                         ; preds = %cond.end
  %5 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 0, i32 36), align 8, !dbg !10463
  %6 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !10464
  call void @llvm.dbg.value(metadata %struct.rtx_def* %6, metadata !10443, metadata !DIExpression()), !dbg !10444
  call void %5(%struct.rtx_def* %6) #6, !dbg !10465
  %inc = add i32 %i.0, 1, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %inc, metadata !10440, metadata !DIExpression()), !dbg !10444
  br label %for.cond, !dbg !10467, !llvm.loop !10468

for.cond3:                                        ; preds = %for.cond3.preheader, %for.inc75
  %offset.0 = phi i64 [ %offset.2, %for.inc75 ], [ 0, %for.cond3.preheader ], !dbg !10444
  %i.1 = phi i32 [ %inc76, %for.inc75 ], [ 0, %for.cond3.preheader ], !dbg !10470
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !10440, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i64 %offset.0, metadata !10441, metadata !DIExpression()), !dbg !10444
  %7 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %objects, align 8, !dbg !10471
  %tobool5 = icmp eq %struct.VEC_rtx_gc* %7, null, !dbg !10471
  br i1 %tobool5, label %cond.end10, label %cond.true6, !dbg !10471

cond.true6:                                       ; preds = %for.cond3
  %base8 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %7, i64 0, i32 0, !dbg !10471
  br label %cond.end10, !dbg !10471

cond.end10:                                       ; preds = %for.cond3, %cond.true6
  %cond11 = phi %struct.VEC_rtx_base* [ %base8, %cond.true6 ], [ null, %for.cond3 ], !dbg !10471
  call void @llvm.dbg.value(metadata %struct.rtx_def** %symbol, metadata !10443, metadata !DIExpression(DW_OP_deref)), !dbg !10444
  %call12 = call fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond11, i32 %i.1, %struct.rtx_def** nonnull %symbol) #8, !dbg !10471
  %tobool13 = icmp eq i32 %call12, 0, !dbg !10461
  br i1 %tobool13, label %cleanup.loopexit, label %for.body14, !dbg !10461

for.body14:                                       ; preds = %cond.end10
  %8 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !10473
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !10443, metadata !DIExpression()), !dbg !10444
  %offset15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i64 0, i32 1, i32 0, i32 2, !dbg !10473
  %9 = load i64, i64* %offset15, align 8, !dbg !10473
  %sub = sub nsw i64 %9, %offset.0, !dbg !10475
  call void @assemble_zeros(i64 %sub) #8, !dbg !10476
  %10 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !10477
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %offset18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 2, !dbg !10477
  %11 = load i64, i64* %offset18, align 8, !dbg !10477
  call void @llvm.dbg.value(metadata i64 %11, metadata !10441, metadata !DIExpression()), !dbg !10444
  %.cast = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 0, !dbg !10478
  %bf.load = load i32, i32* %.cast, align 8, !dbg !10478
  %bf.clear = and i32 %bf.load, 67108864, !dbg !10478
  %tobool19 = icmp eq i32 %bf.clear, 0, !dbg !10478
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !10480

if.then20:                                        ; preds = %for.body14
  br i1 false, label %if.then20.cond.end28_crit_edge, label %cond.true25, !dbg !10481

if.then20.cond.end28_crit_edge:                   ; preds = %if.then20
  br label %cond.end28, !dbg !10481

cond.true25:                                      ; preds = %if.then20
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10481
  %rt_constant = bitcast %union.rtunion_def* %12 to %struct.constant_descriptor_rtx**, !dbg !10481
  %13 = load %struct.constant_descriptor_rtx*, %struct.constant_descriptor_rtx** %rt_constant, align 8, !dbg !10481
  br label %cond.end28, !dbg !10481

cond.end28:                                       ; preds = %if.then20.cond.end28_crit_edge, %cond.true25
  %cond29 = phi %struct.constant_descriptor_rtx* [ %13, %cond.true25 ], [ undef, %if.then20.cond.end28_crit_edge ], !dbg !10481
  call void @llvm.dbg.value(metadata %struct.constant_descriptor_rtx* %cond29, metadata !10439, metadata !DIExpression()), !dbg !10444
  call fastcc void @output_constant_pool_1(%struct.constant_descriptor_rtx* %cond29, i32 1) #8, !dbg !10483
  %mode = getelementptr inbounds %struct.constant_descriptor_rtx, %struct.constant_descriptor_rtx* %cond29, i64 0, i32 6, !dbg !10484
  %14 = load i32, i32* %mode, align 4, !dbg !10484
  %idxprom = zext i32 %14 to i64, !dbg !10484
  %arrayidx30 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !10484
  %15 = load i8, i8* %arrayidx30, align 1, !dbg !10484
  %conv31 = zext i8 %15 to i64, !dbg !10484
  br label %for.inc75, !dbg !10485

if.else:                                          ; preds = %for.body14
  %bf.clear34 = and i32 %bf.load, 1073741824, !dbg !10486
  %tobool35 = icmp eq i32 %bf.clear34, 0, !dbg !10486
  br i1 %tobool35, label %if.else54, label %if.then36, !dbg !10488

if.then36:                                        ; preds = %if.else
  br i1 false, label %if.then36.cond.end46_crit_edge, label %cond.false42, !dbg !10489

if.then36.cond.end46_crit_edge:                   ; preds = %if.then36
  br label %cond.end46, !dbg !10489

cond.false42:                                     ; preds = %if.then36
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10489
  %rt_tree = bitcast %union.rtunion_def* %16 to %union.tree_node**, !dbg !10489
  %17 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !10489
  br label %cond.end46, !dbg !10489

cond.end46:                                       ; preds = %if.then36.cond.end46_crit_edge, %cond.false42
  %cond47 = phi %union.tree_node* [ %17, %cond.false42 ], [ undef, %if.then36.cond.end46_crit_edge ], !dbg !10489
  call void @llvm.dbg.value(metadata %union.tree_node* %cond47, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %rt_str = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10491
  %18 = load i8*, i8** %rt_str, align 8, !dbg !10491
  %call51 = call fastcc i32 @get_constant_alignment(%union.tree_node* %cond47) #8, !dbg !10492
  call fastcc void @assemble_constant_contents(%union.tree_node* %cond47, i8* %18, i32 %call51) #8, !dbg !10493
  %call52 = call fastcc i64 @get_constant_size(%union.tree_node* %cond47) #8, !dbg !10494
  br label %for.inc75, !dbg !10495

if.else54:                                        ; preds = %if.else
  br i1 false, label %if.else54.cond.end65_crit_edge, label %cond.false60, !dbg !10496

if.else54.cond.end65_crit_edge:                   ; preds = %if.else54
  br label %cond.end65, !dbg !10496

cond.false60:                                     ; preds = %if.else54
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !10496
  %rt_tree64 = bitcast %union.rtunion_def* %19 to %union.tree_node**, !dbg !10496
  %20 = load %union.tree_node*, %union.tree_node** %rt_tree64, align 8, !dbg !10496
  br label %cond.end65, !dbg !10496

cond.end65:                                       ; preds = %if.else54.cond.end65_crit_edge, %cond.false60
  %cond66 = phi %union.tree_node* [ %20, %cond.false60 ], [ undef, %if.else54.cond.end65_crit_edge ], !dbg !10496
  call void @llvm.dbg.value(metadata %union.tree_node* %cond66, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !10443, metadata !DIExpression()), !dbg !10444
  %rt_str70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, !dbg !10498
  %21 = load i8*, i8** %rt_str70, align 8, !dbg !10498
  call fastcc void @assemble_variable_contents(%union.tree_node* %cond66, i8* %21, i8 zeroext 0) #8, !dbg !10499
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %cond66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10500
  %22 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !10500
  %call71 = call i64 @tree_low_cst(%union.tree_node* %22, i32 1) #6, !dbg !10501
  br label %for.inc75

for.inc75:                                        ; preds = %cond.end28, %cond.end65, %cond.end46
  %conv31.pn = phi i64 [ %conv31, %cond.end28 ], [ %call52, %cond.end46 ], [ %call71, %cond.end65 ]
  %offset.2 = add nsw i64 %11, %conv31.pn, !dbg !10502
  call void @llvm.dbg.value(metadata i64 %offset.2, metadata !10441, metadata !DIExpression()), !dbg !10444
  %inc76 = add i32 %i.1, 1, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %inc76, metadata !10440, metadata !DIExpression()), !dbg !10444
  br label %for.cond3, !dbg !10504, !llvm.loop !10505

cleanup.loopexit:                                 ; preds = %cond.end10
  br label %cleanup, !dbg !10507

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !10507
  ret void, !dbg !10507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) unnamed_addr #0 !dbg !10508 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !10513, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct.rtx_def** %ptr, metadata !10514, metadata !DIExpression()), !dbg !10515
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !10516
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !10516

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !10516
  %0 = load i32, i32* %num, align 8, !dbg !10516
  %cmp = icmp ugt i32 %0, %ix_, !dbg !10516
  br i1 %cmp, label %if.then, label %if.else, !dbg !10518

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !10519
  %arrayidx = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !10519
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !10519
  br label %return, !dbg !10519

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !10521

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.rtx_def* [ null, %if.else ], [ %1, %if.then ], !dbg !10523
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !10523
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %ptr, align 8, !dbg !10523
  ret i32 %retval.0, !dbg !10518
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2029, !2030, !2031}
!llvm.ident = !{!2032}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "emutls_htab", scope: !2, file: !3, line: 194, type: !1219, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !620, globals: !1767, nameTableKind: None)
!3 = !DIFile(filename: "varasm.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !543, !565, !571, !581, !602, !610}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !521, line: 309, baseType: !7, size: 32, elements: !522)
!521 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!522 = !{!523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542}
!523 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!524 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!525 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!526 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!527 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!528 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!529 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!530 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!531 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!532 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!533 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!534 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!535 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!536 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!537 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!538 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!539 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!540 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!541 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!542 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!543 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !544, line: 36, baseType: !7, size: 32, elements: !545)
!544 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!545 = !{!546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!546 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!547 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!548 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!549 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!550 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!551 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!552 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!553 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!554 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!555 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!556 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!557 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!558 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!559 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!560 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!561 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!562 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!563 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!564 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "symbol_visibility", file: !151, line: 2465, baseType: !7, size: 32, elements: !566)
!566 = !{!567, !568, !569, !570}
!567 = !DIEnumerator(name: "VISIBILITY_DEFAULT", value: 0, isUnsigned: true)
!568 = !DIEnumerator(name: "VISIBILITY_PROTECTED", value: 1, isUnsigned: true)
!569 = !DIEnumerator(name: "VISIBILITY_HIDDEN", value: 2, isUnsigned: true)
!570 = !DIEnumerator(name: "VISIBILITY_INTERNAL", value: 3, isUnsigned: true)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tls_model", file: !572, line: 97, baseType: !7, size: 32, elements: !573)
!572 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!573 = !{!574, !575, !576, !577, !578, !579, !580}
!574 = !DIEnumerator(name: "TLS_MODEL_NONE", value: 0, isUnsigned: true)
!575 = !DIEnumerator(name: "TLS_MODEL_EMULATED", value: 1, isUnsigned: true)
!576 = !DIEnumerator(name: "TLS_MODEL_REAL", value: 2, isUnsigned: true)
!577 = !DIEnumerator(name: "TLS_MODEL_GLOBAL_DYNAMIC", value: 2, isUnsigned: true)
!578 = !DIEnumerator(name: "TLS_MODEL_LOCAL_DYNAMIC", value: 3, isUnsigned: true)
!579 = !DIEnumerator(name: "TLS_MODEL_INITIAL_EXEC", value: 4, isUnsigned: true)
!580 = !DIEnumerator(name: "TLS_MODEL_LOCAL_EXEC", value: 5, isUnsigned: true)
!581 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "section_category", file: !582, line: 444, baseType: !7, size: 32, elements: !583)
!582 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!583 = !{!584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601}
!584 = !DIEnumerator(name: "SECCAT_TEXT", value: 0, isUnsigned: true)
!585 = !DIEnumerator(name: "SECCAT_RODATA", value: 1, isUnsigned: true)
!586 = !DIEnumerator(name: "SECCAT_RODATA_MERGE_STR", value: 2, isUnsigned: true)
!587 = !DIEnumerator(name: "SECCAT_RODATA_MERGE_STR_INIT", value: 3, isUnsigned: true)
!588 = !DIEnumerator(name: "SECCAT_RODATA_MERGE_CONST", value: 4, isUnsigned: true)
!589 = !DIEnumerator(name: "SECCAT_SRODATA", value: 5, isUnsigned: true)
!590 = !DIEnumerator(name: "SECCAT_DATA", value: 6, isUnsigned: true)
!591 = !DIEnumerator(name: "SECCAT_DATA_REL", value: 7, isUnsigned: true)
!592 = !DIEnumerator(name: "SECCAT_DATA_REL_LOCAL", value: 8, isUnsigned: true)
!593 = !DIEnumerator(name: "SECCAT_DATA_REL_RO", value: 9, isUnsigned: true)
!594 = !DIEnumerator(name: "SECCAT_DATA_REL_RO_LOCAL", value: 10, isUnsigned: true)
!595 = !DIEnumerator(name: "SECCAT_SDATA", value: 11, isUnsigned: true)
!596 = !DIEnumerator(name: "SECCAT_TDATA", value: 12, isUnsigned: true)
!597 = !DIEnumerator(name: "SECCAT_BSS", value: 13, isUnsigned: true)
!598 = !DIEnumerator(name: "SECCAT_SBSS", value: 14, isUnsigned: true)
!599 = !DIEnumerator(name: "SECCAT_TBSS", value: 15, isUnsigned: true)
!600 = !DIEnumerator(name: "SECCAT_EMUTLS_VAR", value: 16, isUnsigned: true)
!601 = !DIEnumerator(name: "SECCAT_EMUTLS_TMPL", value: 17, isUnsigned: true)
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 56, baseType: !7, size: 32, elements: !604)
!603 = !DIFile(filename: "./target.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!604 = !{!605, !606, !607, !608, !609}
!605 = !DIEnumerator(name: "SWITCH_TYPE_PASSED", value: 0, isUnsigned: true)
!606 = !DIEnumerator(name: "SWITCH_TYPE_ENABLED", value: 1, isUnsigned: true)
!607 = !DIEnumerator(name: "SWITCH_TYPE_DESCRIPTIVE", value: 2, isUnsigned: true)
!608 = !DIEnumerator(name: "SWITCH_TYPE_LINE_START", value: 3, isUnsigned: true)
!609 = !DIEnumerator(name: "SWITCH_TYPE_LINE_END", value: 4, isUnsigned: true)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !611, line: 52, baseType: !7, size: 32, elements: !612)
!611 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!612 = !{!613, !614, !615, !616, !617, !618, !619}
!613 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!614 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!615 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!616 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!617 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!618 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!619 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!620 = !{!621, !622, !623, !624, !627, !628, !630, !183, !632, !1718, !639, !1044, !1719, !625, !1720, !811, !7, !5, !377, !754, !694, !543, !1721, !1017, !692, !571, !1727, !1220, !1241, !1434, !1494, !1734, !1026, !1736, !1738, !1740, !1040, !640, !1741, !1743, !1760, !1762, !1764, !1766, !1083}
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!623 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !631, line: 44, baseType: !7)
!631 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map", file: !151, line: 5278, size: 192, elements: !634)
!634 = !{!635, !1716, !1717}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !633, file: !151, line: 5279, baseType: !636, size: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_map_base", file: !151, line: 5267, size: 64, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !636, file: !151, line: 5268, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !572, line: 56, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !642)
!642 = !{!643, !676, !682, !695, !714, !725, !730, !739, !745, !758, !768, !806, !1098, !1126, !1134, !1135, !1140, !1149, !1155, !1160, !1164, !1168, !1342, !1389, !1395, !1402, !1409, !1435, !1460, !1477, !1489, !1511, !1526, !1698}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !151, line: 3372, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !645)
!645 = !{!646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !644, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !644, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !644, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !644, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !644, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !644, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !644, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !644, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !644, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !644, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !644, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !644, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !644, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !644, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !644, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !644, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !644, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !644, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !644, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !644, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !644, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !644, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !644, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !644, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !644, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !644, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !644, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !644, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !644, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !644, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !641, file: !151, line: 3373, baseType: !677, size: 192)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !677, file: !151, line: 403, baseType: !644, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !677, file: !151, line: 404, baseType: !639, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !677, file: !151, line: 405, baseType: !639, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !641, file: !151, line: 3374, baseType: !683, size: 320)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !684)
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !683, file: !151, line: 1385, baseType: !677, size: 192)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !683, file: !151, line: 1386, baseType: !687, size: 128, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !688, line: 58, baseType: !689)
!688 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !688, line: 54, size: 128, elements: !690)
!690 = !{!691, !693}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !689, file: !688, line: 56, baseType: !692, size: 64)
!692 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !689, file: !688, line: 57, baseType: !694, size: 64, offset: 64)
!694 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !641, file: !151, line: 3375, baseType: !696, size: 256)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !696, file: !151, line: 1398, baseType: !677, size: 192)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !696, file: !151, line: 1399, baseType: !700, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !702, line: 52, size: 256, elements: !703)
!702 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!703 = !{!704, !705, !706, !707, !708, !709, !710}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !701, file: !702, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !701, file: !702, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !701, file: !702, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !701, file: !702, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !701, file: !702, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !701, file: !702, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !701, file: !702, line: 62, baseType: !711, size: 192, offset: 64)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, size: 192, elements: !712)
!712 = !{!713}
!713 = !DISubrange(count: 3)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !641, file: !151, line: 3376, baseType: !715, size: 256)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !716)
!716 = !{!717, !718}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !715, file: !151, line: 1409, baseType: !677, size: 192)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !715, file: !151, line: 1410, baseType: !719, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !721, line: 27, size: 192, elements: !722)
!721 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!722 = !{!723, !724}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !720, file: !721, line: 29, baseType: !687, size: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !720, file: !721, line: 30, baseType: !5, size: 32, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !641, file: !151, line: 3377, baseType: !726, size: 256)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !726, file: !151, line: 1438, baseType: !677, size: 192)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !726, file: !151, line: 1439, baseType: !639, size: 64, offset: 192)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !641, file: !151, line: 3378, baseType: !731, size: 256)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !731, file: !151, line: 1419, baseType: !677, size: 192)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !731, file: !151, line: 1420, baseType: !623, size: 32, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !731, file: !151, line: 1421, baseType: !736, size: 8, offset: 224)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 8, elements: !737)
!737 = !{!738}
!738 = !DISubrange(count: 1)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !641, file: !151, line: 3379, baseType: !740, size: 320)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !741)
!741 = !{!742, !743, !744}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !740, file: !151, line: 1429, baseType: !677, size: 192)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !740, file: !151, line: 1430, baseType: !639, size: 64, offset: 192)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !740, file: !151, line: 1431, baseType: !639, size: 64, offset: 256)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !641, file: !151, line: 3380, baseType: !746, size: 320)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !747)
!747 = !{!748, !749}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !746, file: !151, line: 1461, baseType: !677, size: 192)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !746, file: !151, line: 1462, baseType: !750, size: 128, offset: 192)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !751, line: 31, size: 128, elements: !752)
!751 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!752 = !{!753, !756, !757}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !750, file: !751, line: 32, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !750, file: !751, line: 33, baseType: !7, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !750, file: !751, line: 34, baseType: !7, size: 32, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !641, file: !151, line: 3381, baseType: !759, size: 384)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !760)
!760 = !{!761, !762, !765, !766, !767}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !759, file: !151, line: 2508, baseType: !677, size: 192)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !759, file: !151, line: 2509, baseType: !763, size: 32, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !764, line: 58, baseType: !630)
!764 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!765 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !759, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !759, file: !151, line: 2511, baseType: !639, size: 64, offset: 256)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !759, file: !151, line: 2512, baseType: !639, size: 64, offset: 320)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !641, file: !151, line: 3382, baseType: !769, size: 896)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !769, file: !151, line: 2653, baseType: !759, size: 384)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !769, file: !151, line: 2654, baseType: !639, size: 64, offset: 384)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !769, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !769, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !769, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !769, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !769, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !769, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !769, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !769, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !769, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !769, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !769, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !769, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !769, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !769, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !769, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !769, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !769, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !769, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !769, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !769, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !769, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !769, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !769, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !769, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !769, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !769, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !769, file: !151, line: 2705, baseType: !639, size: 64, offset: 576)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !769, file: !151, line: 2706, baseType: !639, size: 64, offset: 640)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !769, file: !151, line: 2707, baseType: !639, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !769, file: !151, line: 2708, baseType: !639, size: 64, offset: 768)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !769, file: !151, line: 2711, baseType: !804, size: 64, offset: 832)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !641, file: !151, line: 3383, baseType: !807, size: 960)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !808)
!808 = !{!809, !810}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !807, file: !151, line: 2757, baseType: !769, size: 896)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !807, file: !151, line: 2758, baseType: !811, size: 64, offset: 896)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !572, line: 50, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !814)
!814 = !{!815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !813, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !813, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !813, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !813, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !813, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !813, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !813, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !813, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !813, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !813, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !813, file: !378, line: 321, baseType: !826, size: 320, offset: 64)
!826 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !827)
!827 = !{!828, !1032, !1034, !1096, !1097}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !826, file: !378, line: 316, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 64, elements: !737)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !832)
!832 = !{!833, !834, !835, !836, !837, !845, !846, !858, !861, !921, !922, !996, !1009, !1016}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !831, file: !378, line: 168, baseType: !623, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !831, file: !378, line: 169, baseType: !7, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !831, file: !378, line: 170, baseType: !628, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !831, file: !378, line: 171, baseType: !811, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !831, file: !378, line: 172, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !572, line: 53, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !840, file: !378, line: 360, baseType: !623, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !840, file: !378, line: 361, baseType: !844, size: 64, offset: 64)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !737)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !831, file: !378, line: 173, baseType: !5, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !831, file: !378, line: 174, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !848, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !848, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !848, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !848, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !848, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !848, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !848, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !848, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !831, file: !378, line: 175, baseType: !859, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !831, file: !378, line: 176, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !864, line: 75, size: 256, elements: !865)
!864 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!865 = !{!866, !880, !881, !882}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !863, file: !864, line: 76, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !864, line: 68, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !864, line: 63, size: 320, elements: !870)
!870 = !{!871, !873, !874, !875}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !869, file: !864, line: 64, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !869, file: !864, line: 65, baseType: !872, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !869, file: !864, line: 66, baseType: !7, size: 32, offset: 128)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !869, file: !864, line: 67, baseType: !876, size: 128, offset: 192)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !877, size: 128, elements: !878)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !864, line: 29, baseType: !692)
!878 = !{!879}
!879 = !DISubrange(count: 2)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !863, file: !864, line: 77, baseType: !867, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !863, file: !864, line: 78, baseType: !7, size: 32, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !863, file: !864, line: 79, baseType: !883, size: 64, offset: 192)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !864, line: 49, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !864, line: 45, size: 832, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !885, file: !864, line: 46, baseType: !872, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !885, file: !864, line: 47, baseType: !862, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !885, file: !864, line: 48, baseType: !890, size: 704, offset: 128)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !891, line: 164, size: 704, elements: !892)
!891 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!892 = !{!893, !894, !904, !905, !906, !907, !908, !909, !913, !917, !918, !919, !920}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !890, file: !891, line: 166, baseType: !694, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !890, file: !891, line: 167, baseType: !895, size: 64, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !891, line: 157, size: 192, elements: !897)
!897 = !{!898, !899, !900}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !896, file: !891, line: 159, baseType: !625, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !896, file: !891, line: 160, baseType: !895, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !896, file: !891, line: 161, baseType: !901, size: 32, offset: 128)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 32, elements: !902)
!902 = !{!903}
!903 = !DISubrange(count: 4)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !890, file: !891, line: 168, baseType: !625, size: 64, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !890, file: !891, line: 169, baseType: !625, size: 64, offset: 192)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !890, file: !891, line: 170, baseType: !625, size: 64, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !890, file: !891, line: 171, baseType: !694, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !890, file: !891, line: 172, baseType: !623, size: 32, offset: 384)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !890, file: !891, line: 176, baseType: !910, size: 64, offset: 448)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!895, !627, !694}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !890, file: !891, line: 177, baseType: !914, size: 64, offset: 512)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !627, !895}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !890, file: !891, line: 178, baseType: !627, size: 64, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !890, file: !891, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !890, file: !891, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !890, file: !891, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !831, file: !378, line: 177, baseType: !639, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !831, file: !378, line: 178, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !925)
!925 = !{!926, !961, !962, !963, !966, !970, !971, !972, !990, !991, !992, !993, !994, !995}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !924, file: !135, line: 219, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !929, file: !135, line: 151, baseType: !932, size: 128)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !933)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !933, file: !135, line: 150, baseType: !7, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !933, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !933, file: !135, line: 150, baseType: !938, size: 64, offset: 64)
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 64, elements: !737)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !572, line: 108, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !942)
!942 = !{!943, !944, !945, !953, !954, !955, !956, !957, !958, !959}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !941, file: !135, line: 124, baseType: !923, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !941, file: !135, line: 125, baseType: !923, size: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !941, file: !135, line: 131, baseType: !946, size: 64, offset: 128)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !947)
!947 = !{!948, !952}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !946, file: !135, line: 129, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !572, line: 66, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !572, line: 65, flags: DIFlagFwdDecl)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !946, file: !135, line: 130, baseType: !811, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !941, file: !135, line: 134, baseType: !627, size: 64, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !941, file: !135, line: 137, baseType: !639, size: 64, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !941, file: !135, line: 138, baseType: !763, size: 32, offset: 320)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !941, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !941, file: !135, line: 144, baseType: !623, size: 32, offset: 384)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !941, file: !135, line: 145, baseType: !623, size: 32, offset: 416)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !941, file: !135, line: 146, baseType: !960, size: 64, offset: 448)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !694)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !924, file: !135, line: 220, baseType: !927, size: 64, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !924, file: !135, line: 223, baseType: !627, size: 64, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !924, file: !135, line: 226, baseType: !964, size: 64, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !924, file: !135, line: 229, baseType: !967, size: 128, offset: 256)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 128, elements: !878)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !924, file: !135, line: 232, baseType: !923, size: 64, offset: 384)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !924, file: !135, line: 233, baseType: !923, size: 64, offset: 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !924, file: !135, line: 238, baseType: !973, size: 64, offset: 512)
!973 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !974)
!974 = !{!975, !981}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !973, file: !135, line: 236, baseType: !976, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !978)
!978 = !{!979, !980}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !977, file: !135, line: 275, baseType: !949, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !977, file: !135, line: 278, baseType: !949, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !973, file: !135, line: 237, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !984)
!984 = !{!985, !986, !987, !988, !989}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !983, file: !135, line: 261, baseType: !811, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !983, file: !135, line: 262, baseType: !811, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !983, file: !135, line: 266, baseType: !811, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !983, file: !135, line: 267, baseType: !811, size: 64, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !983, file: !135, line: 270, baseType: !623, size: 32, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !924, file: !135, line: 241, baseType: !960, size: 64, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !924, file: !135, line: 244, baseType: !623, size: 32, offset: 640)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !924, file: !135, line: 247, baseType: !623, size: 32, offset: 672)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !924, file: !135, line: 250, baseType: !623, size: 32, offset: 704)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !924, file: !135, line: 253, baseType: !623, size: 32, offset: 736)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !924, file: !135, line: 256, baseType: !623, size: 32, offset: 768)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !831, file: !378, line: 179, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1007, !1008}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !999, file: !378, line: 144, baseType: !639, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !999, file: !378, line: 145, baseType: !811, size: 64, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !999, file: !378, line: 146, baseType: !811, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !999, file: !378, line: 147, baseType: !1005, size: 32, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1006, line: 31, baseType: !623)
!1006 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !999, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !999, file: !378, line: 149, baseType: !622, size: 8, offset: 256)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !831, file: !378, line: 180, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1013)
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1012, file: !378, line: 160, baseType: !639, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1012, file: !378, line: 161, baseType: !694, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !831, file: !378, line: 181, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !3, line: 3459, size: 512, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1028, !1029, !1030, !1031}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1018, file: !3, line: 3460, baseType: !1017, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1018, file: !3, line: 3461, baseType: !811, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "sym", scope: !1018, file: !3, line: 3462, baseType: !811, size: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !1018, file: !3, line: 3463, baseType: !811, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1018, file: !3, line: 3464, baseType: !694, size: 64, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1018, file: !3, line: 3465, baseType: !1026, size: 32, offset: 320)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1027, line: 47, baseType: !7)
!1027 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1018, file: !3, line: 3466, baseType: !5, size: 32, offset: 352)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1018, file: !3, line: 3467, baseType: !7, size: 32, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "labelno", scope: !1018, file: !3, line: 3468, baseType: !623, size: 32, offset: 416)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !1018, file: !3, line: 3469, baseType: !623, size: 32, offset: 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !826, file: !378, line: 317, baseType: !1033, size: 64)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 64, elements: !737)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !826, file: !378, line: 318, baseType: !1035, size: 320)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1036)
!1036 = !{!1037, !1039, !1095}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1035, file: !378, line: 190, baseType: !1038, size: 192)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 192, elements: !712)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1035, file: !378, line: 193, baseType: !1040, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1042)
!1042 = !{!1043, !1080, !1081, !1082, !1094}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1041, file: !378, line: 208, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !572, line: 62, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !582, line: 538, size: 256, elements: !1047)
!1047 = !{!1048, !1052, !1058, !1071}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1046, file: !582, line: 539, baseType: !1049, size: 32)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !582, line: 482, size: 32, elements: !1050)
!1050 = !{!1051}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1049, file: !582, line: 484, baseType: !7, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1046, file: !582, line: 540, baseType: !1053, size: 192)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !582, line: 488, size: 192, elements: !1054)
!1054 = !{!1055, !1056, !1057}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1053, file: !582, line: 489, baseType: !1049, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1053, file: !582, line: 492, baseType: !628, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1053, file: !582, line: 496, baseType: !639, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1046, file: !582, line: 541, baseType: !1059, size: 256)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !582, line: 504, size: 256, elements: !1060)
!1060 = !{!1061, !1062, !1069, !1070}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1059, file: !582, line: 505, baseType: !1049, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1059, file: !582, line: 509, baseType: !1063, size: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !582, line: 501, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1067}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1059, file: !582, line: 510, baseType: !1067, size: 64, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1059, file: !582, line: 513, baseType: !1044, size: 64, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1046, file: !582, line: 542, baseType: !1072, size: 128)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !582, line: 530, size: 128, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1072, file: !582, line: 531, baseType: !1049, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1072, file: !582, line: 534, baseType: !1076, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !582, line: 525, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!622, !639, !628, !692, !692}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1041, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1041, file: !378, line: 214, baseType: !694, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1041, file: !378, line: 224, baseType: !1083, size: 64, offset: 192)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1086)
!1086 = !{!1087}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1085, file: !378, line: 202, baseType: !1088, size: 128)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1090)
!1090 = !{!1091, !1092, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1089, file: !378, line: 200, baseType: !7, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1089, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1089, file: !378, line: 200, baseType: !844, size: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1041, file: !378, line: 234, baseType: !1083, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1035, file: !378, line: 197, baseType: !694, size: 64, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !826, file: !378, line: 319, baseType: !701, size: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !826, file: !378, line: 320, baseType: !720, size: 192)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !641, file: !151, line: 3384, baseType: !1099, size: 1472)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1100)
!1100 = !{!1101, !1122, !1123, !1124, !1125}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1099, file: !151, line: 3115, baseType: !1102, size: 1216)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !151, line: 2985, baseType: !807, size: 960)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1102, file: !151, line: 2986, baseType: !639, size: 64, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1102, file: !151, line: 2987, baseType: !639, size: 64, offset: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1102, file: !151, line: 2988, baseType: !639, size: 64, offset: 1088)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1102, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1102, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1102, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1102, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1102, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1102, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1102, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1102, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1102, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1102, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1102, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1102, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1102, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1102, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1099, file: !151, line: 3117, baseType: !639, size: 64, offset: 1216)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1099, file: !151, line: 3119, baseType: !639, size: 64, offset: 1280)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1099, file: !151, line: 3121, baseType: !639, size: 64, offset: 1344)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1099, file: !151, line: 3123, baseType: !639, size: 64, offset: 1408)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !641, file: !151, line: 3385, baseType: !1127, size: 1088)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1128)
!1128 = !{!1129, !1130, !1131}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1127, file: !151, line: 2875, baseType: !807, size: 960)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1127, file: !151, line: 2876, baseType: !811, size: 64, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1127, file: !151, line: 2877, baseType: !1132, size: 64, offset: 1024)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !641, file: !151, line: 3386, baseType: !1102, size: 1216)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !641, file: !151, line: 3387, baseType: !1136, size: 1280)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1136, file: !151, line: 3094, baseType: !1102, size: 1216)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1136, file: !151, line: 3095, baseType: !1132, size: 64, offset: 1216)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !641, file: !151, line: 3388, baseType: !1141, size: 1216)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1141, file: !151, line: 2825, baseType: !769, size: 896)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1141, file: !151, line: 2827, baseType: !639, size: 64, offset: 896)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1141, file: !151, line: 2828, baseType: !639, size: 64, offset: 960)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1141, file: !151, line: 2829, baseType: !639, size: 64, offset: 1024)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1141, file: !151, line: 2830, baseType: !639, size: 64, offset: 1088)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1141, file: !151, line: 2831, baseType: !639, size: 64, offset: 1152)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !641, file: !151, line: 3389, baseType: !1150, size: 1024)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1151)
!1151 = !{!1152, !1153, !1154}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1150, file: !151, line: 2851, baseType: !807, size: 960)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1150, file: !151, line: 2852, baseType: !623, size: 32, offset: 960)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1150, file: !151, line: 2853, baseType: !623, size: 32, offset: 992)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !641, file: !151, line: 3390, baseType: !1156, size: 1024)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1157)
!1157 = !{!1158, !1159}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1156, file: !151, line: 2858, baseType: !807, size: 960)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1156, file: !151, line: 2859, baseType: !1132, size: 64, offset: 960)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !641, file: !151, line: 3391, baseType: !1161, size: 960)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1162)
!1162 = !{!1163}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1161, file: !151, line: 2863, baseType: !807, size: 960)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !641, file: !151, line: 3392, baseType: !1165, size: 1472)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1166)
!1166 = !{!1167}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1165, file: !151, line: 3305, baseType: !1099, size: 1472)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !641, file: !151, line: 3393, baseType: !1169, size: 1792)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1170)
!1170 = !{!1171, !1172, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1169, file: !151, line: 3249, baseType: !1099, size: 1472)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1169, file: !151, line: 3251, baseType: !1173, size: 64, offset: 1472)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1175, line: 463, size: 1152, elements: !1176)
!1175 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1176 = !{!1177, !1180, !1211, !1212, !1215, !1218, !1266, !1267, !1268, !1269, !1270, !1294, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1174, file: !1175, line: 464, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1175, line: 464, flags: DIFlagFwdDecl)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1174, file: !1175, line: 467, baseType: !1181, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1183)
!1183 = !{!1184, !1186, !1187, !1200, !1201, !1202, !1203, !1204, !1205, !1207, !1209, !1210}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1182, file: !135, line: 377, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !572, line: 111, baseType: !923)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1182, file: !135, line: 378, baseType: !1185, size: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1182, file: !135, line: 381, baseType: !1188, size: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1190, file: !135, line: 282, baseType: !1193, size: 128)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1195)
!1195 = !{!1196, !1197, !1198}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1194, file: !135, line: 281, baseType: !7, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1194, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1194, file: !135, line: 281, baseType: !1199, size: 64, offset: 64)
!1199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, size: 64, elements: !737)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1182, file: !135, line: 384, baseType: !623, size: 32, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1182, file: !135, line: 387, baseType: !623, size: 32, offset: 224)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1182, file: !135, line: 390, baseType: !623, size: 32, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1182, file: !135, line: 394, baseType: !1188, size: 64, offset: 320)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1182, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1182, file: !135, line: 399, baseType: !1206, size: 64, offset: 416)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !878)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1182, file: !135, line: 402, baseType: !1208, size: 64, offset: 480)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !878)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1182, file: !135, line: 406, baseType: !623, size: 32, offset: 544)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1182, file: !135, line: 409, baseType: !623, size: 32, offset: 576)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1174, file: !1175, line: 470, baseType: !950, size: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1174, file: !1175, line: 473, baseType: !1213, size: 64, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1175, line: 166, flags: DIFlagFwdDecl)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1174, file: !1175, line: 476, baseType: !1216, size: 64, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1175, line: 476, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1174, file: !1175, line: 479, baseType: !1219, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1027, line: 144, baseType: !1220)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1027, line: 100, size: 896, elements: !1222)
!1222 = !{!1223, !1228, !1233, !1238, !1240, !1243, !1244, !1245, !1246, !1247, !1252, !1254, !1255, !1260, !1265}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1221, file: !1027, line: 102, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1027, line: 52, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!1026, !1067}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1221, file: !1027, line: 105, baseType: !1229, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1027, line: 59, baseType: !1230)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!623, !1067, !1067}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1221, file: !1027, line: 108, baseType: !1234, size: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1027, line: 63, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !627}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1221, file: !1027, line: 111, baseType: !1239, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1221, file: !1027, line: 114, baseType: !1241, size: 64, offset: 256)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1242, line: 46, baseType: !692)
!1242 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1221, file: !1027, line: 117, baseType: !1241, size: 64, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1221, file: !1027, line: 120, baseType: !1241, size: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1221, file: !1027, line: 124, baseType: !7, size: 32, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1221, file: !1027, line: 128, baseType: !7, size: 32, offset: 480)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1221, file: !1027, line: 131, baseType: !1248, size: 64, offset: 512)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1027, line: 75, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!627, !1241, !1241}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1221, file: !1027, line: 132, baseType: !1253, size: 64, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1027, line: 78, baseType: !1235)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1221, file: !1027, line: 135, baseType: !627, size: 64, offset: 640)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1221, file: !1027, line: 136, baseType: !1256, size: 64, offset: 704)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1027, line: 82, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!627, !627, !1241, !1241}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1221, file: !1027, line: 137, baseType: !1261, size: 64, offset: 768)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1027, line: 83, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !627, !627}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1221, file: !1027, line: 141, baseType: !7, size: 32, offset: 832)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1174, file: !1175, line: 484, baseType: !639, size: 64, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1174, file: !1175, line: 488, baseType: !639, size: 64, offset: 448)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1174, file: !1175, line: 493, baseType: !639, size: 64, offset: 512)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1174, file: !1175, line: 496, baseType: !639, size: 64, offset: 576)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1174, file: !1175, line: 501, baseType: !1271, size: 64, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1273)
!1273 = !{!1274, !1277, !1278, !1279, !1280, !1282, !1283, !1288, !1289, !1290, !1291, !1292, !1293}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1272, file: !146, line: 2356, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1272, file: !146, line: 2357, baseType: !628, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1272, file: !146, line: 2358, baseType: !623, size: 32, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1272, file: !146, line: 2359, baseType: !623, size: 32, offset: 160)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1272, file: !146, line: 2360, baseType: !1281, size: 128, offset: 192)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 128, elements: !902)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1272, file: !146, line: 2364, baseType: !623, size: 32, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1272, file: !146, line: 2367, baseType: !1284, size: 128, offset: 384)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1285)
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1284, file: !146, line: 2351, baseType: !811, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1284, file: !146, line: 2352, baseType: !694, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1272, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1272, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1272, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1272, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1272, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1272, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1174, file: !1175, line: 504, baseType: !1295, size: 64, offset: 704)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1175, line: 504, flags: DIFlagFwdDecl)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1174, file: !1175, line: 507, baseType: !1219, size: 64, offset: 768)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1174, file: !1175, line: 510, baseType: !623, size: 32, offset: 832)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1174, file: !1175, line: 513, baseType: !623, size: 32, offset: 864)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1174, file: !1175, line: 516, baseType: !763, size: 32, offset: 896)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1174, file: !1175, line: 519, baseType: !763, size: 32, offset: 928)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1174, file: !1175, line: 522, baseType: !7, size: 32, offset: 960)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1174, file: !1175, line: 523, baseType: !7, size: 32, offset: 992)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1174, file: !1175, line: 528, baseType: !628, size: 64, offset: 1024)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1174, file: !1175, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1174, file: !1175, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1174, file: !1175, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1174, file: !1175, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1174, file: !1175, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1174, file: !1175, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1174, file: !1175, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1174, file: !1175, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1174, file: !1175, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1174, file: !1175, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1174, file: !1175, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1174, file: !1175, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1174, file: !1175, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1174, file: !1175, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1174, file: !1175, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1174, file: !1175, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1169, file: !151, line: 3254, baseType: !639, size: 64, offset: 1536)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1169, file: !151, line: 3257, baseType: !639, size: 64, offset: 1600)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1169, file: !151, line: 3258, baseType: !639, size: 64, offset: 1664)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1169, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1169, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1169, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1169, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1169, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1169, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1169, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1169, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1169, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1169, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1169, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1169, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1169, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1169, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1169, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1169, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1169, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1169, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !151, line: 3394, baseType: !1343, size: 1344)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1343, file: !151, line: 2280, baseType: !677, size: 192)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1343, file: !151, line: 2281, baseType: !639, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1343, file: !151, line: 2282, baseType: !639, size: 64, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1343, file: !151, line: 2283, baseType: !639, size: 64, offset: 320)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1343, file: !151, line: 2284, baseType: !639, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1343, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1343, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1343, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1343, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1343, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1343, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1343, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1343, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1343, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1343, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1343, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1343, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1343, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1343, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1343, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1343, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1343, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1343, file: !151, line: 2306, baseType: !1005, size: 32, offset: 544)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1343, file: !151, line: 2307, baseType: !639, size: 64, offset: 576)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1343, file: !151, line: 2308, baseType: !639, size: 64, offset: 640)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1343, file: !151, line: 2314, baseType: !1371, size: 64, offset: 704)
!1371 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1372)
!1372 = !{!1373, !1374, !1375}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1371, file: !151, line: 2310, baseType: !623, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1371, file: !151, line: 2311, baseType: !628, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1371, file: !151, line: 2312, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1343, file: !151, line: 2315, baseType: !639, size: 64, offset: 768)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1343, file: !151, line: 2316, baseType: !639, size: 64, offset: 832)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1343, file: !151, line: 2317, baseType: !639, size: 64, offset: 896)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1343, file: !151, line: 2318, baseType: !639, size: 64, offset: 960)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1343, file: !151, line: 2319, baseType: !639, size: 64, offset: 1024)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1343, file: !151, line: 2320, baseType: !639, size: 64, offset: 1088)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1343, file: !151, line: 2321, baseType: !639, size: 64, offset: 1152)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1343, file: !151, line: 2322, baseType: !639, size: 64, offset: 1216)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1343, file: !151, line: 2324, baseType: !1387, size: 64, offset: 1280)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !641, file: !151, line: 3395, baseType: !1390, size: 320)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1391)
!1391 = !{!1392, !1393, !1394}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1390, file: !151, line: 1470, baseType: !677, size: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1390, file: !151, line: 1471, baseType: !639, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1390, file: !151, line: 1472, baseType: !639, size: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !641, file: !151, line: 3396, baseType: !1396, size: 320)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1397)
!1397 = !{!1398, !1399, !1400}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !151, line: 1483, baseType: !677, size: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1396, file: !151, line: 1484, baseType: !623, size: 32, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1396, file: !151, line: 1485, baseType: !1401, size: 64, offset: 256)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 64, elements: !737)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !641, file: !151, line: 3397, baseType: !1403, size: 384)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1403, file: !151, line: 1830, baseType: !677, size: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1403, file: !151, line: 1831, baseType: !763, size: 32, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1403, file: !151, line: 1832, baseType: !639, size: 64, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1403, file: !151, line: 1835, baseType: !1401, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !641, file: !151, line: 3398, baseType: !1410, size: 704)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1418, !1419, !1422}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !151, line: 1899, baseType: !677, size: 192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1410, file: !151, line: 1902, baseType: !639, size: 64, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1410, file: !151, line: 1905, baseType: !1415, size: 64, offset: 256)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !572, line: 58, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !572, line: 57, flags: DIFlagFwdDecl)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1410, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1410, file: !151, line: 1911, baseType: !1420, size: 64, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1410, file: !151, line: 1914, baseType: !1423, size: 256, offset: 448)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1424)
!1424 = !{!1425, !1427, !1428, !1433}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1423, file: !151, line: 1884, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1423, file: !151, line: 1885, baseType: !1426, size: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1423, file: !151, line: 1891, baseType: !1429, size: 64, offset: 128)
!1429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1423, file: !151, line: 1891, size: 64, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1429, file: !151, line: 1891, baseType: !1415, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1429, file: !151, line: 1891, baseType: !639, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1423, file: !151, line: 1892, baseType: !1434, size: 64, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !641, file: !151, line: 3399, baseType: !1436, size: 704)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1455, !1456, !1457, !1458, !1459}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1436, file: !151, line: 2009, baseType: !677, size: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1436, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1436, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1436, file: !151, line: 2014, baseType: !763, size: 32, offset: 224)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1436, file: !151, line: 2016, baseType: !639, size: 64, offset: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1436, file: !151, line: 2017, baseType: !1444, size: 64, offset: 320)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1446, file: !151, line: 183, baseType: !1449, size: 128)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1451)
!1451 = !{!1452, !1453, !1454}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1450, file: !151, line: 182, baseType: !7, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1450, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1450, file: !151, line: 182, baseType: !1401, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1436, file: !151, line: 2019, baseType: !639, size: 64, offset: 384)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1436, file: !151, line: 2020, baseType: !639, size: 64, offset: 448)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1436, file: !151, line: 2021, baseType: !639, size: 64, offset: 512)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1436, file: !151, line: 2022, baseType: !639, size: 64, offset: 576)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1436, file: !151, line: 2023, baseType: !639, size: 64, offset: 640)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !641, file: !151, line: 3400, baseType: !1461, size: 832)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1461, file: !151, line: 2431, baseType: !677, size: 192)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1461, file: !151, line: 2433, baseType: !639, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1461, file: !151, line: 2434, baseType: !639, size: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1461, file: !151, line: 2435, baseType: !639, size: 64, offset: 320)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1461, file: !151, line: 2436, baseType: !639, size: 64, offset: 384)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1461, file: !151, line: 2437, baseType: !1444, size: 64, offset: 448)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1461, file: !151, line: 2438, baseType: !639, size: 64, offset: 512)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1461, file: !151, line: 2440, baseType: !639, size: 64, offset: 576)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1461, file: !151, line: 2441, baseType: !639, size: 64, offset: 640)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1461, file: !151, line: 2443, baseType: !1473, size: 128, offset: 704)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1475)
!1475 = !{!1476}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1474, file: !151, line: 182, baseType: !1449, size: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !641, file: !151, line: 3401, baseType: !1478, size: 320)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1479)
!1479 = !{!1480, !1481, !1488}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1478, file: !151, line: 3329, baseType: !677, size: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1478, file: !151, line: 3330, baseType: !1482, size: 64, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1484)
!1484 = !{!1485, !1486, !1487}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1483, file: !151, line: 3322, baseType: !1482, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1483, file: !151, line: 3323, baseType: !1482, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1483, file: !151, line: 3324, baseType: !639, size: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1478, file: !151, line: 3331, baseType: !1482, size: 64, offset: 256)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !641, file: !151, line: 3402, baseType: !1490, size: 256)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1490, file: !151, line: 1541, baseType: !677, size: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1490, file: !151, line: 1542, baseType: !1494, size: 64, offset: 192)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1496, file: !151, line: 1538, baseType: !1499, size: 192)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1501)
!1501 = !{!1502, !1503, !1504}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1500, file: !151, line: 1537, baseType: !7, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1500, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1500, file: !151, line: 1537, baseType: !1505, size: 128, offset: 64)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 128, elements: !737)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1507, file: !151, line: 1533, baseType: !639, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1507, file: !151, line: 1534, baseType: !639, size: 64, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !641, file: !151, line: 3403, baseType: !1512, size: 512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1523, !1524, !1525}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1512, file: !151, line: 1939, baseType: !677, size: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1512, file: !151, line: 1940, baseType: !763, size: 32, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1512, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1512, file: !151, line: 1946, baseType: !1518, size: 32, offset: 256)
!1518 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1519)
!1519 = !{!1520, !1521, !1522}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1518, file: !151, line: 1943, baseType: !169, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1518, file: !151, line: 1944, baseType: !176, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1518, file: !151, line: 1945, baseType: !183, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1512, file: !151, line: 1950, baseType: !949, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1512, file: !151, line: 1951, baseType: !949, size: 64, offset: 384)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1512, file: !151, line: 1953, baseType: !1401, size: 64, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !641, file: !151, line: 3404, baseType: !1527, size: 1664)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1528)
!1528 = !{!1529, !1530}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1527, file: !151, line: 3338, baseType: !677, size: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1527, file: !151, line: 3341, baseType: !1531, size: 1472, offset: 192)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1532, line: 410, size: 1472, elements: !1533)
!1532 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1531, file: !1532, line: 412, baseType: !623, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1531, file: !1532, line: 413, baseType: !623, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1531, file: !1532, line: 414, baseType: !623, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1531, file: !1532, line: 415, baseType: !623, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1531, file: !1532, line: 416, baseType: !623, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1531, file: !1532, line: 417, baseType: !623, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1531, file: !1532, line: 418, baseType: !622, size: 8, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1531, file: !1532, line: 419, baseType: !622, size: 8, offset: 200)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1531, file: !1532, line: 420, baseType: !1543, size: 8, offset: 208)
!1543 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1531, file: !1532, line: 421, baseType: !1543, size: 8, offset: 216)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1531, file: !1532, line: 422, baseType: !1543, size: 8, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1531, file: !1532, line: 423, baseType: !1543, size: 8, offset: 232)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1531, file: !1532, line: 424, baseType: !1543, size: 8, offset: 240)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1531, file: !1532, line: 425, baseType: !1543, size: 8, offset: 248)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1531, file: !1532, line: 426, baseType: !1543, size: 8, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1531, file: !1532, line: 427, baseType: !1543, size: 8, offset: 264)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1531, file: !1532, line: 428, baseType: !1543, size: 8, offset: 272)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1531, file: !1532, line: 429, baseType: !1543, size: 8, offset: 280)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1531, file: !1532, line: 430, baseType: !1543, size: 8, offset: 288)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1531, file: !1532, line: 431, baseType: !1543, size: 8, offset: 296)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1531, file: !1532, line: 432, baseType: !1543, size: 8, offset: 304)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1531, file: !1532, line: 433, baseType: !1543, size: 8, offset: 312)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1531, file: !1532, line: 434, baseType: !1543, size: 8, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1531, file: !1532, line: 435, baseType: !1543, size: 8, offset: 328)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1531, file: !1532, line: 436, baseType: !1543, size: 8, offset: 336)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1531, file: !1532, line: 437, baseType: !1543, size: 8, offset: 344)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1531, file: !1532, line: 438, baseType: !1543, size: 8, offset: 352)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1531, file: !1532, line: 439, baseType: !1543, size: 8, offset: 360)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1531, file: !1532, line: 440, baseType: !1543, size: 8, offset: 368)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1531, file: !1532, line: 441, baseType: !1543, size: 8, offset: 376)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1531, file: !1532, line: 442, baseType: !1543, size: 8, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1531, file: !1532, line: 443, baseType: !1543, size: 8, offset: 392)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1531, file: !1532, line: 444, baseType: !1543, size: 8, offset: 400)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1531, file: !1532, line: 445, baseType: !1543, size: 8, offset: 408)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1531, file: !1532, line: 446, baseType: !1543, size: 8, offset: 416)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1531, file: !1532, line: 447, baseType: !1543, size: 8, offset: 424)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1531, file: !1532, line: 448, baseType: !1543, size: 8, offset: 432)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1531, file: !1532, line: 449, baseType: !1543, size: 8, offset: 440)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1531, file: !1532, line: 450, baseType: !1543, size: 8, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1531, file: !1532, line: 451, baseType: !1543, size: 8, offset: 456)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1531, file: !1532, line: 452, baseType: !1543, size: 8, offset: 464)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1531, file: !1532, line: 453, baseType: !1543, size: 8, offset: 472)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1531, file: !1532, line: 454, baseType: !1543, size: 8, offset: 480)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1531, file: !1532, line: 455, baseType: !1543, size: 8, offset: 488)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1531, file: !1532, line: 456, baseType: !1543, size: 8, offset: 496)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1531, file: !1532, line: 457, baseType: !1543, size: 8, offset: 504)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1531, file: !1532, line: 458, baseType: !1543, size: 8, offset: 512)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1531, file: !1532, line: 459, baseType: !1543, size: 8, offset: 520)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1531, file: !1532, line: 460, baseType: !1543, size: 8, offset: 528)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1531, file: !1532, line: 461, baseType: !1543, size: 8, offset: 536)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1531, file: !1532, line: 462, baseType: !1543, size: 8, offset: 544)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1531, file: !1532, line: 463, baseType: !1543, size: 8, offset: 552)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1531, file: !1532, line: 464, baseType: !1543, size: 8, offset: 560)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1531, file: !1532, line: 465, baseType: !1543, size: 8, offset: 568)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1531, file: !1532, line: 466, baseType: !1543, size: 8, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1531, file: !1532, line: 467, baseType: !1543, size: 8, offset: 584)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1531, file: !1532, line: 468, baseType: !1543, size: 8, offset: 592)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1531, file: !1532, line: 469, baseType: !1543, size: 8, offset: 600)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1531, file: !1532, line: 470, baseType: !1543, size: 8, offset: 608)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1531, file: !1532, line: 471, baseType: !1543, size: 8, offset: 616)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1531, file: !1532, line: 472, baseType: !1543, size: 8, offset: 624)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1531, file: !1532, line: 473, baseType: !1543, size: 8, offset: 632)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1531, file: !1532, line: 474, baseType: !1543, size: 8, offset: 640)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1531, file: !1532, line: 475, baseType: !1543, size: 8, offset: 648)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1531, file: !1532, line: 476, baseType: !1543, size: 8, offset: 656)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1531, file: !1532, line: 477, baseType: !1543, size: 8, offset: 664)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1531, file: !1532, line: 478, baseType: !1543, size: 8, offset: 672)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1531, file: !1532, line: 479, baseType: !1543, size: 8, offset: 680)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1531, file: !1532, line: 480, baseType: !1543, size: 8, offset: 688)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1531, file: !1532, line: 481, baseType: !1543, size: 8, offset: 696)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1531, file: !1532, line: 482, baseType: !1543, size: 8, offset: 704)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1531, file: !1532, line: 483, baseType: !1543, size: 8, offset: 712)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1531, file: !1532, line: 484, baseType: !1543, size: 8, offset: 720)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1531, file: !1532, line: 485, baseType: !1543, size: 8, offset: 728)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1531, file: !1532, line: 486, baseType: !1543, size: 8, offset: 736)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1531, file: !1532, line: 487, baseType: !1543, size: 8, offset: 744)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1531, file: !1532, line: 488, baseType: !1543, size: 8, offset: 752)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1531, file: !1532, line: 489, baseType: !1543, size: 8, offset: 760)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1531, file: !1532, line: 490, baseType: !1543, size: 8, offset: 768)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1531, file: !1532, line: 491, baseType: !1543, size: 8, offset: 776)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1531, file: !1532, line: 492, baseType: !1543, size: 8, offset: 784)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1531, file: !1532, line: 493, baseType: !1543, size: 8, offset: 792)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1531, file: !1532, line: 494, baseType: !1543, size: 8, offset: 800)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1531, file: !1532, line: 495, baseType: !1543, size: 8, offset: 808)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1531, file: !1532, line: 496, baseType: !1543, size: 8, offset: 816)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1531, file: !1532, line: 497, baseType: !1543, size: 8, offset: 824)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1531, file: !1532, line: 498, baseType: !1543, size: 8, offset: 832)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1531, file: !1532, line: 499, baseType: !1543, size: 8, offset: 840)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1531, file: !1532, line: 500, baseType: !1543, size: 8, offset: 848)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1531, file: !1532, line: 501, baseType: !1543, size: 8, offset: 856)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1531, file: !1532, line: 502, baseType: !1543, size: 8, offset: 864)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1531, file: !1532, line: 503, baseType: !1543, size: 8, offset: 872)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1531, file: !1532, line: 504, baseType: !1543, size: 8, offset: 880)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1531, file: !1532, line: 505, baseType: !1543, size: 8, offset: 888)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1531, file: !1532, line: 506, baseType: !1543, size: 8, offset: 896)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1531, file: !1532, line: 507, baseType: !1543, size: 8, offset: 904)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1531, file: !1532, line: 508, baseType: !1543, size: 8, offset: 912)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1531, file: !1532, line: 509, baseType: !1543, size: 8, offset: 920)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1531, file: !1532, line: 510, baseType: !1543, size: 8, offset: 928)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1531, file: !1532, line: 511, baseType: !1543, size: 8, offset: 936)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1531, file: !1532, line: 512, baseType: !1543, size: 8, offset: 944)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1531, file: !1532, line: 513, baseType: !1543, size: 8, offset: 952)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1531, file: !1532, line: 514, baseType: !1543, size: 8, offset: 960)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1531, file: !1532, line: 515, baseType: !1543, size: 8, offset: 968)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1531, file: !1532, line: 516, baseType: !1543, size: 8, offset: 976)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1531, file: !1532, line: 517, baseType: !1543, size: 8, offset: 984)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1531, file: !1532, line: 518, baseType: !1543, size: 8, offset: 992)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1531, file: !1532, line: 519, baseType: !1543, size: 8, offset: 1000)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1531, file: !1532, line: 520, baseType: !1543, size: 8, offset: 1008)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1531, file: !1532, line: 521, baseType: !1543, size: 8, offset: 1016)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1531, file: !1532, line: 522, baseType: !1543, size: 8, offset: 1024)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1531, file: !1532, line: 523, baseType: !1543, size: 8, offset: 1032)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1531, file: !1532, line: 524, baseType: !1543, size: 8, offset: 1040)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1531, file: !1532, line: 525, baseType: !1543, size: 8, offset: 1048)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1531, file: !1532, line: 526, baseType: !1543, size: 8, offset: 1056)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1531, file: !1532, line: 527, baseType: !1543, size: 8, offset: 1064)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1531, file: !1532, line: 528, baseType: !1543, size: 8, offset: 1072)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1531, file: !1532, line: 529, baseType: !1543, size: 8, offset: 1080)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1531, file: !1532, line: 530, baseType: !1543, size: 8, offset: 1088)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1531, file: !1532, line: 531, baseType: !1543, size: 8, offset: 1096)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1531, file: !1532, line: 532, baseType: !1543, size: 8, offset: 1104)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1531, file: !1532, line: 533, baseType: !1543, size: 8, offset: 1112)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1531, file: !1532, line: 534, baseType: !1543, size: 8, offset: 1120)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1531, file: !1532, line: 535, baseType: !1543, size: 8, offset: 1128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1531, file: !1532, line: 536, baseType: !1543, size: 8, offset: 1136)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1531, file: !1532, line: 537, baseType: !1543, size: 8, offset: 1144)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1531, file: !1532, line: 538, baseType: !1543, size: 8, offset: 1152)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1531, file: !1532, line: 539, baseType: !1543, size: 8, offset: 1160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1531, file: !1532, line: 540, baseType: !1543, size: 8, offset: 1168)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1531, file: !1532, line: 541, baseType: !1543, size: 8, offset: 1176)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1531, file: !1532, line: 542, baseType: !1543, size: 8, offset: 1184)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1531, file: !1532, line: 543, baseType: !1543, size: 8, offset: 1192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1531, file: !1532, line: 544, baseType: !1543, size: 8, offset: 1200)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1531, file: !1532, line: 545, baseType: !1543, size: 8, offset: 1208)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1531, file: !1532, line: 546, baseType: !1543, size: 8, offset: 1216)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1531, file: !1532, line: 547, baseType: !1543, size: 8, offset: 1224)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1531, file: !1532, line: 548, baseType: !1543, size: 8, offset: 1232)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1531, file: !1532, line: 549, baseType: !1543, size: 8, offset: 1240)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1531, file: !1532, line: 550, baseType: !1543, size: 8, offset: 1248)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1531, file: !1532, line: 551, baseType: !1543, size: 8, offset: 1256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1531, file: !1532, line: 552, baseType: !1543, size: 8, offset: 1264)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1531, file: !1532, line: 553, baseType: !1543, size: 8, offset: 1272)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1531, file: !1532, line: 554, baseType: !1543, size: 8, offset: 1280)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1531, file: !1532, line: 555, baseType: !1543, size: 8, offset: 1288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1531, file: !1532, line: 556, baseType: !1543, size: 8, offset: 1296)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1531, file: !1532, line: 557, baseType: !1543, size: 8, offset: 1304)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1531, file: !1532, line: 558, baseType: !1543, size: 8, offset: 1312)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1531, file: !1532, line: 559, baseType: !1543, size: 8, offset: 1320)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1531, file: !1532, line: 560, baseType: !1543, size: 8, offset: 1328)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1531, file: !1532, line: 561, baseType: !1543, size: 8, offset: 1336)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1531, file: !1532, line: 562, baseType: !1543, size: 8, offset: 1344)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1531, file: !1532, line: 563, baseType: !1543, size: 8, offset: 1352)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1531, file: !1532, line: 564, baseType: !1543, size: 8, offset: 1360)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1531, file: !1532, line: 565, baseType: !1543, size: 8, offset: 1368)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1531, file: !1532, line: 566, baseType: !1543, size: 8, offset: 1376)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1531, file: !1532, line: 567, baseType: !1543, size: 8, offset: 1384)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1531, file: !1532, line: 568, baseType: !1543, size: 8, offset: 1392)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1531, file: !1532, line: 569, baseType: !1543, size: 8, offset: 1400)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1531, file: !1532, line: 570, baseType: !1543, size: 8, offset: 1408)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1531, file: !1532, line: 571, baseType: !1543, size: 8, offset: 1416)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1531, file: !1532, line: 572, baseType: !1543, size: 8, offset: 1424)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1531, file: !1532, line: 573, baseType: !1543, size: 8, offset: 1432)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1531, file: !1532, line: 574, baseType: !1543, size: 8, offset: 1440)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !641, file: !151, line: 3405, baseType: !1699, size: 384)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1699, file: !151, line: 3353, baseType: !677, size: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1699, file: !151, line: 3356, baseType: !1703, size: 192, offset: 192)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1532, line: 578, size: 192, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1703, file: !1532, line: 580, baseType: !623, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1703, file: !1532, line: 581, baseType: !623, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1703, file: !1532, line: 582, baseType: !623, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1703, file: !1532, line: 583, baseType: !623, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1703, file: !1532, line: 584, baseType: !622, size: 8, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1703, file: !1532, line: 585, baseType: !622, size: 8, offset: 136)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1703, file: !1532, line: 586, baseType: !622, size: 8, offset: 144)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1703, file: !1532, line: 587, baseType: !622, size: 8, offset: 152)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1703, file: !1532, line: 588, baseType: !622, size: 8, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1703, file: !1532, line: 589, baseType: !622, size: 8, offset: 168)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1703, file: !1532, line: 590, baseType: !622, size: 8, offset: 176)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !633, file: !151, line: 5280, baseType: !7, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !633, file: !151, line: 5281, baseType: !639, size: 64, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1720 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_tree", file: !521, line: 697, size: 192, elements: !1723)
!1723 = !{!1724, !1725, !1726}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1722, file: !521, line: 699, baseType: !811, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1722, file: !521, line: 702, baseType: !639, size: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1722, file: !521, line: 707, baseType: !1026, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_constant_pool", file: !3, line: 3443, size: 256, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1728, file: !3, line: 3445, baseType: !1017, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1728, file: !3, line: 3446, baseType: !1017, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "const_rtx_htab", scope: !1728, file: !3, line: 3452, baseType: !1219, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1728, file: !3, line: 3456, baseType: !694, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_gc", file: !151, line: 198, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_gc", file: !151, line: 198, size: 192, elements: !1746)
!1746 = !{!1747}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1745, file: !151, line: 198, baseType: !1748, size: 192)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_base", file: !151, line: 197, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_base", file: !151, line: 197, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1753}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1749, file: !151, line: 197, baseType: !7, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1749, file: !151, line: 197, baseType: !7, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1749, file: !151, line: 197, baseType: !1754, size: 128, offset: 64)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 128, elements: !737)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_pair", file: !151, line: 194, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_pair", file: !151, line: 190, size: 128, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1756, file: !151, line: 192, baseType: !639, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1756, file: !151, line: 193, baseType: !639, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!1767 = !{!1768, !1788, !1799, !1913, !1915, !1917, !1933, !1949, !1952, !1955, !1957, !1959, !1961, !1963, !1965, !1967, !1969, !1971, !1973, !1975, !1977, !1979, !1981, !1983, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !1999, !2001, !2003, !2005, !2007, !2009, !0, !2011, !2013, !2015, !2017, !2019, !2021, !2023, !2025}
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "table", scope: !1770, file: !3, line: 1075, type: !1778, isLocal: true, isDefinition: true)
!1770 = distinct !DISubprogram(name: "decode_reg_name", scope: !3, file: !3, line: 1046, type: !1771, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1773)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!623, !628}
!1773 = !{!1774, !1775}
!1774 = !DILocalVariable(name: "asmspec", arg: 1, scope: !1770, file: !3, line: 1046, type: !628)
!1775 = !DILocalVariable(name: "i", scope: !1776, file: !3, line: 1050, type: !623)
!1776 = distinct !DILexicalBlock(scope: !1777, file: !3, line: 1049, column: 5)
!1777 = distinct !DILexicalBlock(scope: !1770, file: !3, line: 1048, column: 7)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1779, size: 3072, elements: !1786)
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1770, file: !3, line: 1075, size: 128, elements: !1781)
!1781 = !{!1782, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1780, file: !3, line: 1075, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !1780, file: !3, line: 1075, baseType: !1785, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!1786 = !{!1787}
!1787 = !DISubrange(count: 24)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "visibility_types", scope: !1790, file: !3, line: 5827, type: !1798, isLocal: true, isDefinition: true)
!1790 = distinct !DISubprogram(name: "default_assemble_visibility", scope: !3, file: !3, line: 5825, type: !1791, scopeLine: 5826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1793)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{null, !639, !623}
!1793 = !{!1794, !1795, !1796, !1797}
!1794 = !DILocalVariable(name: "decl", arg: 1, scope: !1790, file: !3, line: 5825, type: !639)
!1795 = !DILocalVariable(name: "vis", arg: 2, scope: !1790, file: !3, line: 5825, type: !623)
!1796 = !DILocalVariable(name: "name", scope: !1790, file: !3, line: 5831, type: !628)
!1797 = !DILocalVariable(name: "type", scope: !1790, file: !3, line: 5831, type: !628)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 256, elements: !902)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "buffer", scope: !1801, file: !3, line: 7064, type: !1910, isLocal: true, isDefinition: true)
!1801 = distinct !DISubprogram(name: "elf_record_gcc_switches", scope: !3, file: !3, line: 7062, type: !1802, scopeLine: 7063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1805)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!623, !1804, !628}
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_switch_type", file: !603, line: 64, baseType: !602)
!1805 = !{!1806, !1807, !1808, !1814, !1816, !1817, !1818, !1819, !1823, !1827, !1828, !1832, !1834, !1835, !1838, !1839, !1840, !1841, !1845, !1849, !1850, !1854, !1856, !1857, !1862, !1863, !1864, !1865, !1869, !1873, !1874, !1878, !1880, !1881, !1889, !1890, !1891, !1892, !1896, !1900, !1901, !1905, !1907, !1908}
!1806 = !DILocalVariable(name: "type", arg: 1, scope: !1801, file: !3, line: 7062, type: !1804)
!1807 = !DILocalVariable(name: "name", arg: 2, scope: !1801, file: !3, line: 7062, type: !628)
!1808 = !DILocalVariable(name: "len", scope: !1809, file: !3, line: 7083, type: !7)
!1809 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 7082, column: 6)
!1810 = distinct !DILexicalBlock(scope: !1811, file: !3, line: 7081, column: 8)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 7080, column: 2)
!1812 = distinct !DILexicalBlock(scope: !1813, file: !3, line: 7079, column: 11)
!1813 = distinct !DILexicalBlock(scope: !1801, file: !3, line: 7077, column: 5)
!1814 = !DILocalVariable(name: "_ascii_bytes", scope: !1815, file: !3, line: 7086, type: !754)
!1815 = distinct !DILexicalBlock(scope: !1809, file: !3, line: 7086, column: 8)
!1816 = !DILocalVariable(name: "limit", scope: !1815, file: !3, line: 7086, type: !754)
!1817 = !DILocalVariable(name: "last_null", scope: !1815, file: !3, line: 7086, type: !754)
!1818 = !DILocalVariable(name: "bytes_in_chunk", scope: !1815, file: !3, line: 7086, type: !7)
!1819 = !DILocalVariable(name: "p", scope: !1820, file: !3, line: 7086, type: !754)
!1820 = distinct !DILexicalBlock(scope: !1821, file: !3, line: 7086, column: 8)
!1821 = distinct !DILexicalBlock(scope: !1822, file: !3, line: 7086, column: 8)
!1822 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 7086, column: 8)
!1823 = !DILocalVariable(name: "_limited_str", scope: !1824, file: !3, line: 7086, type: !754)
!1824 = distinct !DILexicalBlock(scope: !1825, file: !3, line: 7086, column: 8)
!1825 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 7086, column: 8)
!1826 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 7086, column: 8)
!1827 = !DILocalVariable(name: "ch", scope: !1824, file: !3, line: 7086, type: !7)
!1828 = !DILocalVariable(name: "escape", scope: !1829, file: !3, line: 7086, type: !623)
!1829 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 7086, column: 8)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !3, line: 7086, column: 8)
!1831 = distinct !DILexicalBlock(scope: !1824, file: !3, line: 7086, column: 8)
!1832 = !DILocalVariable(name: "escape", scope: !1833, file: !3, line: 7086, type: !623)
!1833 = distinct !DILexicalBlock(scope: !1826, file: !3, line: 7086, column: 8)
!1834 = !DILocalVariable(name: "ch", scope: !1833, file: !3, line: 7086, type: !7)
!1835 = !DILocalVariable(name: "_ascii_bytes", scope: !1836, file: !3, line: 7093, type: !754)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 7093, column: 8)
!1837 = distinct !DILexicalBlock(scope: !1810, file: !3, line: 7091, column: 6)
!1838 = !DILocalVariable(name: "limit", scope: !1836, file: !3, line: 7093, type: !754)
!1839 = !DILocalVariable(name: "last_null", scope: !1836, file: !3, line: 7093, type: !754)
!1840 = !DILocalVariable(name: "bytes_in_chunk", scope: !1836, file: !3, line: 7093, type: !7)
!1841 = !DILocalVariable(name: "p", scope: !1842, file: !3, line: 7093, type: !754)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 7093, column: 8)
!1843 = distinct !DILexicalBlock(scope: !1844, file: !3, line: 7093, column: 8)
!1844 = distinct !DILexicalBlock(scope: !1836, file: !3, line: 7093, column: 8)
!1845 = !DILocalVariable(name: "_limited_str", scope: !1846, file: !3, line: 7093, type: !754)
!1846 = distinct !DILexicalBlock(scope: !1847, file: !3, line: 7093, column: 8)
!1847 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 7093, column: 8)
!1848 = distinct !DILexicalBlock(scope: !1842, file: !3, line: 7093, column: 8)
!1849 = !DILocalVariable(name: "ch", scope: !1846, file: !3, line: 7093, type: !7)
!1850 = !DILocalVariable(name: "escape", scope: !1851, file: !3, line: 7093, type: !623)
!1851 = distinct !DILexicalBlock(scope: !1852, file: !3, line: 7093, column: 8)
!1852 = distinct !DILexicalBlock(scope: !1853, file: !3, line: 7093, column: 8)
!1853 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 7093, column: 8)
!1854 = !DILocalVariable(name: "escape", scope: !1855, file: !3, line: 7093, type: !623)
!1855 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 7093, column: 8)
!1856 = !DILocalVariable(name: "ch", scope: !1855, file: !3, line: 7093, type: !7)
!1857 = !DILocalVariable(name: "_ascii_bytes", scope: !1858, file: !3, line: 7101, type: !754)
!1858 = distinct !DILexicalBlock(scope: !1859, file: !3, line: 7101, column: 8)
!1859 = distinct !DILexicalBlock(scope: !1860, file: !3, line: 7100, column: 6)
!1860 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 7099, column: 8)
!1861 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 7098, column: 2)
!1862 = !DILocalVariable(name: "limit", scope: !1858, file: !3, line: 7101, type: !754)
!1863 = !DILocalVariable(name: "last_null", scope: !1858, file: !3, line: 7101, type: !754)
!1864 = !DILocalVariable(name: "bytes_in_chunk", scope: !1858, file: !3, line: 7101, type: !7)
!1865 = !DILocalVariable(name: "p", scope: !1866, file: !3, line: 7101, type: !754)
!1866 = distinct !DILexicalBlock(scope: !1867, file: !3, line: 7101, column: 8)
!1867 = distinct !DILexicalBlock(scope: !1868, file: !3, line: 7101, column: 8)
!1868 = distinct !DILexicalBlock(scope: !1858, file: !3, line: 7101, column: 8)
!1869 = !DILocalVariable(name: "_limited_str", scope: !1870, file: !3, line: 7101, type: !754)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !3, line: 7101, column: 8)
!1871 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 7101, column: 8)
!1872 = distinct !DILexicalBlock(scope: !1866, file: !3, line: 7101, column: 8)
!1873 = !DILocalVariable(name: "ch", scope: !1870, file: !3, line: 7101, type: !7)
!1874 = !DILocalVariable(name: "escape", scope: !1875, file: !3, line: 7101, type: !623)
!1875 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 7101, column: 8)
!1876 = distinct !DILexicalBlock(scope: !1877, file: !3, line: 7101, column: 8)
!1877 = distinct !DILexicalBlock(scope: !1870, file: !3, line: 7101, column: 8)
!1878 = !DILocalVariable(name: "escape", scope: !1879, file: !3, line: 7101, type: !623)
!1879 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 7101, column: 8)
!1880 = !DILocalVariable(name: "ch", scope: !1879, file: !3, line: 7101, type: !7)
!1881 = !DILocalVariable(name: "_ascii_bytes", scope: !1882, file: !3, line: 7120, type: !754)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !3, line: 7120, column: 5)
!1883 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 7119, column: 3)
!1884 = distinct !DILexicalBlock(scope: !1885, file: !3, line: 7118, column: 12)
!1885 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 7117, column: 6)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 7116, column: 8)
!1887 = distinct !DILexicalBlock(scope: !1888, file: !3, line: 7112, column: 2)
!1888 = distinct !DILexicalBlock(scope: !1813, file: !3, line: 7111, column: 11)
!1889 = !DILocalVariable(name: "limit", scope: !1882, file: !3, line: 7120, type: !754)
!1890 = !DILocalVariable(name: "last_null", scope: !1882, file: !3, line: 7120, type: !754)
!1891 = !DILocalVariable(name: "bytes_in_chunk", scope: !1882, file: !3, line: 7120, type: !7)
!1892 = !DILocalVariable(name: "p", scope: !1893, file: !3, line: 7120, type: !754)
!1893 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 7120, column: 5)
!1894 = distinct !DILexicalBlock(scope: !1895, file: !3, line: 7120, column: 5)
!1895 = distinct !DILexicalBlock(scope: !1882, file: !3, line: 7120, column: 5)
!1896 = !DILocalVariable(name: "_limited_str", scope: !1897, file: !3, line: 7120, type: !754)
!1897 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 7120, column: 5)
!1898 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 7120, column: 5)
!1899 = distinct !DILexicalBlock(scope: !1893, file: !3, line: 7120, column: 5)
!1900 = !DILocalVariable(name: "ch", scope: !1897, file: !3, line: 7120, type: !7)
!1901 = !DILocalVariable(name: "escape", scope: !1902, file: !3, line: 7120, type: !623)
!1902 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 7120, column: 5)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 7120, column: 5)
!1904 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 7120, column: 5)
!1905 = !DILocalVariable(name: "escape", scope: !1906, file: !3, line: 7120, type: !623)
!1906 = distinct !DILexicalBlock(scope: !1899, file: !3, line: 7120, column: 5)
!1907 = !DILocalVariable(name: "ch", scope: !1906, file: !3, line: 7120, type: !7)
!1908 = !DILocalVariable(name: "sec", scope: !1909, file: !3, line: 7126, type: !1044)
!1909 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 7125, column: 6)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 8192, elements: !1911)
!1911 = !{!1912}
!1912 = !DISubrange(count: 1024)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "previous_name_held_back", scope: !1801, file: !3, line: 7074, type: !622, isLocal: true, isDefinition: true)
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "started", scope: !1801, file: !3, line: 7114, type: !622, isLocal: true, isDefinition: true)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_varasm_h", scope: !2, file: !1919, line: 164, type: !1920, isLocal: false, isDefinition: true)
!1919 = !DIFile(filename: "./gt-varasm.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 4160, elements: !1931)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !1923, line: 69, size: 320, elements: !1924)
!1923 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1924 = !{!1925, !1926, !1927, !1928, !1930}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1922, file: !1923, line: 70, baseType: !627, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1922, file: !1923, line: 71, baseType: !1241, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1922, file: !1923, line: 72, baseType: !1241, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1922, file: !1923, line: 73, baseType: !1929, size: 64, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !1923, line: 65, baseType: !1235)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1922, file: !1923, line: 74, baseType: !1929, size: 64, offset: 256)
!1931 = !{!1932}
!1932 = !DISubrange(count: 13)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "gt_ggc_rc_gt_varasm_h", scope: !2, file: !1919, line: 252, type: !1935, isLocal: false, isDefinition: true)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1936, size: 768, elements: !878)
!1936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_cache_tab", file: !1923, line: 85, size: 384, elements: !1938)
!1938 = !{!1939, !1941, !1942, !1943, !1944, !1945}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1937, file: !1923, line: 86, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !1937, file: !1923, line: 87, baseType: !1241, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !1937, file: !1923, line: 88, baseType: !1241, size: 64, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1937, file: !1923, line: 89, baseType: !1929, size: 64, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !1937, file: !1923, line: 90, baseType: !1929, size: 64, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "marked_p", scope: !1937, file: !1923, line: 91, baseType: !1946, size: 64, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!623, !1067}
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "gt_pch_rc_gt_varasm_h", scope: !2, file: !1919, line: 264, type: !1951, isLocal: false, isDefinition: true)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 640, elements: !878)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "gt_pch_rs_gt_varasm_h", scope: !2, file: !1919, line: 275, type: !1954, isLocal: false, isDefinition: true)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 960, elements: !712)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "first_global_object_name", scope: !2, file: !3, line: 66, type: !628, isLocal: false, isDefinition: true)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "weak_global_object_name", scope: !2, file: !3, line: 67, type: !628, isLocal: false, isDefinition: true)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "const_labelno", scope: !2, file: !3, line: 78, type: !623, isLocal: true, isDefinition: true)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "size_directive_output", scope: !2, file: !3, line: 83, type: !623, isLocal: false, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "last_assemble_variable_decl", scope: !2, file: !3, line: 90, type: !639, isLocal: false, isDefinition: true)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "first_function_block_is_cold", scope: !2, file: !3, line: 95, type: !622, isLocal: false, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "const_alias_set", scope: !2, file: !3, line: 100, type: !1005, isLocal: true, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "text_section", scope: !2, file: !3, line: 133, type: !1044, isLocal: false, isDefinition: true)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "data_section", scope: !2, file: !3, line: 134, type: !1044, isLocal: false, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "readonly_data_section", scope: !2, file: !3, line: 135, type: !1044, isLocal: false, isDefinition: true)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "sdata_section", scope: !2, file: !3, line: 136, type: !1044, isLocal: false, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "ctors_section", scope: !2, file: !3, line: 137, type: !1044, isLocal: false, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "dtors_section", scope: !2, file: !3, line: 138, type: !1044, isLocal: false, isDefinition: true)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "bss_section", scope: !2, file: !3, line: 139, type: !1044, isLocal: false, isDefinition: true)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "sbss_section", scope: !2, file: !3, line: 140, type: !1044, isLocal: false, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "tls_comm_section", scope: !2, file: !3, line: 143, type: !1044, isLocal: false, isDefinition: true)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "comm_section", scope: !2, file: !3, line: 144, type: !1044, isLocal: false, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "lcomm_section", scope: !2, file: !3, line: 145, type: !1044, isLocal: false, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "bss_noswitch_section", scope: !2, file: !3, line: 149, type: !1044, isLocal: false, isDefinition: true)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "exception_section", scope: !2, file: !3, line: 154, type: !1044, isLocal: false, isDefinition: true)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "eh_frame_section", scope: !2, file: !3, line: 159, type: !1044, isLocal: false, isDefinition: true)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "in_section", scope: !2, file: !3, line: 163, type: !1044, isLocal: false, isDefinition: true)
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "in_cold_section_p", scope: !2, file: !3, line: 167, type: !622, isLocal: false, isDefinition: true)
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "unnamed_sections", scope: !2, file: !3, line: 170, type: !1044, isLocal: true, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "section_htab", scope: !2, file: !3, line: 180, type: !1219, isLocal: true, isDefinition: true)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "object_block_htab", scope: !2, file: !3, line: 183, type: !1219, isLocal: true, isDefinition: true)
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "anchor_labelno", scope: !2, file: !3, line: 186, type: !623, isLocal: true, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "shared_constant_pool", scope: !2, file: !3, line: 189, type: !1727, isLocal: true, isDefinition: true)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "emutls_object_type", scope: !2, file: !3, line: 195, type: !639, isLocal: true, isDefinition: true)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "pending_assemble_externals", scope: !2, file: !3, line: 2303, type: !639, isLocal: true, isDefinition: true)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "weak_decls", scope: !2, file: !3, line: 2359, type: !639, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "initial_trampoline", scope: !2, file: !3, line: 2566, type: !811, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "const_desc_htab", scope: !2, file: !3, line: 2857, type: !1219, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "weakref_targets", scope: !2, file: !3, line: 5387, type: !639, isLocal: true, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "alias_pairs", scope: !2, file: !3, line: 5518, type: !1743, isLocal: false, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "trampolines_created", scope: !2, file: !3, line: 6783, type: !623, isLocal: false, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2028 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2029 = !{i32 2, !"Dwarf Version", i32 4}
!2030 = !{i32 2, !"Debug Info Version", i32 3}
!2031 = !{i32 1, !"wchar_size", i32 4}
!2032 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2033 = distinct !DISubprogram(name: "vprintf", scope: !2034, file: !2034, line: 39, type: !2035, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2045)
!2034 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!623, !2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !628)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2039, file: !3, baseType: !7, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2039, file: !3, baseType: !7, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2039, file: !3, baseType: !627, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2039, file: !3, baseType: !627, size: 64, offset: 128)
!2045 = !{!2046, !2047}
!2046 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2033, file: !2034, line: 39, type: !2037)
!2047 = !DILocalVariable(name: "__arg", arg: 2, scope: !2033, file: !2034, line: 39, type: !2038)
!2048 = !DILocation(line: 0, scope: !2033)
!2049 = !DILocation(line: 41, column: 20, scope: !2033)
!2050 = !DILocation(line: 41, column: 10, scope: !2033)
!2051 = !DILocation(line: 41, column: 3, scope: !2033)
!2052 = distinct !DISubprogram(name: "getchar", scope: !2034, file: !2034, line: 47, type: !2053, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!623}
!2055 = !{}
!2056 = !DILocation(line: 49, column: 16, scope: !2052)
!2057 = !DILocation(line: 49, column: 10, scope: !2052)
!2058 = !DILocation(line: 49, column: 3, scope: !2052)
!2059 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2034, file: !2034, line: 56, type: !2060, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2112)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!623, !2062}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2064, line: 7, baseType: !2065)
!2064 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2066, line: 49, size: 1728, elements: !2067)
!2066 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2083, !2085, !2086, !2087, !2090, !2091, !2092, !2093, !2096, !2098, !2101, !2104, !2105, !2106, !2107, !2108}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2065, file: !2066, line: 51, baseType: !623, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2065, file: !2066, line: 54, baseType: !625, size: 64, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2065, file: !2066, line: 55, baseType: !625, size: 64, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2065, file: !2066, line: 56, baseType: !625, size: 64, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2065, file: !2066, line: 57, baseType: !625, size: 64, offset: 256)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2065, file: !2066, line: 58, baseType: !625, size: 64, offset: 320)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2065, file: !2066, line: 59, baseType: !625, size: 64, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2065, file: !2066, line: 60, baseType: !625, size: 64, offset: 448)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2065, file: !2066, line: 61, baseType: !625, size: 64, offset: 512)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2065, file: !2066, line: 64, baseType: !625, size: 64, offset: 576)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2065, file: !2066, line: 65, baseType: !625, size: 64, offset: 640)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2065, file: !2066, line: 66, baseType: !625, size: 64, offset: 704)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2065, file: !2066, line: 68, baseType: !2081, size: 64, offset: 768)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2066, line: 36, flags: DIFlagFwdDecl)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2065, file: !2066, line: 70, baseType: !2084, size: 64, offset: 832)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2065, file: !2066, line: 72, baseType: !623, size: 32, offset: 896)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2065, file: !2066, line: 73, baseType: !623, size: 32, offset: 928)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2065, file: !2066, line: 74, baseType: !2088, size: 64, offset: 960)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2089, line: 152, baseType: !694)
!2089 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2065, file: !2066, line: 77, baseType: !1720, size: 16, offset: 1024)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2065, file: !2066, line: 78, baseType: !1543, size: 8, offset: 1040)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2065, file: !2066, line: 79, baseType: !736, size: 8, offset: 1048)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2065, file: !2066, line: 81, baseType: !2094, size: 64, offset: 1088)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2066, line: 43, baseType: null)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2065, file: !2066, line: 89, baseType: !2097, size: 64, offset: 1152)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2089, line: 153, baseType: !694)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2065, file: !2066, line: 91, baseType: !2099, size: 64, offset: 1216)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2066, line: 37, flags: DIFlagFwdDecl)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2065, file: !2066, line: 92, baseType: !2102, size: 64, offset: 1280)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2066, line: 38, flags: DIFlagFwdDecl)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2065, file: !2066, line: 93, baseType: !2084, size: 64, offset: 1344)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2065, file: !2066, line: 94, baseType: !627, size: 64, offset: 1408)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2065, file: !2066, line: 95, baseType: !1241, size: 64, offset: 1472)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2065, file: !2066, line: 96, baseType: !623, size: 32, offset: 1536)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2065, file: !2066, line: 98, baseType: !2109, size: 160, offset: 1568)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 160, elements: !2110)
!2110 = !{!2111}
!2111 = !DISubrange(count: 20)
!2112 = !{!2113}
!2113 = !DILocalVariable(name: "__fp", arg: 1, scope: !2059, file: !2034, line: 56, type: !2062)
!2114 = !DILocation(line: 0, scope: !2059)
!2115 = !DILocation(line: 58, column: 10, scope: !2059)
!2116 = !DILocation(line: 58, column: 3, scope: !2059)
!2117 = distinct !DISubprogram(name: "getc_unlocked", scope: !2034, file: !2034, line: 66, type: !2060, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2118)
!2118 = !{!2119}
!2119 = !DILocalVariable(name: "__fp", arg: 1, scope: !2117, file: !2034, line: 66, type: !2062)
!2120 = !DILocation(line: 0, scope: !2117)
!2121 = !DILocation(line: 68, column: 10, scope: !2117)
!2122 = !DILocation(line: 68, column: 3, scope: !2117)
!2123 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2034, file: !2034, line: 73, type: !2053, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!2124 = !DILocation(line: 75, column: 10, scope: !2123)
!2125 = !DILocation(line: 75, column: 3, scope: !2123)
!2126 = distinct !DISubprogram(name: "putchar", scope: !2034, file: !2034, line: 82, type: !2127, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2129)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!623, !623}
!2129 = !{!2130}
!2130 = !DILocalVariable(name: "__c", arg: 1, scope: !2126, file: !2034, line: 82, type: !623)
!2131 = !DILocation(line: 0, scope: !2126)
!2132 = !DILocation(line: 84, column: 21, scope: !2126)
!2133 = !DILocation(line: 84, column: 10, scope: !2126)
!2134 = !DILocation(line: 84, column: 3, scope: !2126)
!2135 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2034, file: !2034, line: 91, type: !2136, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2138)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!623, !623, !2062}
!2138 = !{!2139, !2140}
!2139 = !DILocalVariable(name: "__c", arg: 1, scope: !2135, file: !2034, line: 91, type: !623)
!2140 = !DILocalVariable(name: "__stream", arg: 2, scope: !2135, file: !2034, line: 91, type: !2062)
!2141 = !DILocation(line: 0, scope: !2135)
!2142 = !DILocation(line: 93, column: 10, scope: !2135)
!2143 = !DILocation(line: 93, column: 3, scope: !2135)
!2144 = distinct !DISubprogram(name: "putc_unlocked", scope: !2034, file: !2034, line: 101, type: !2136, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2145 = !{!2146, !2147}
!2146 = !DILocalVariable(name: "__c", arg: 1, scope: !2144, file: !2034, line: 101, type: !623)
!2147 = !DILocalVariable(name: "__stream", arg: 2, scope: !2144, file: !2034, line: 101, type: !2062)
!2148 = !DILocation(line: 0, scope: !2144)
!2149 = !DILocation(line: 103, column: 10, scope: !2144)
!2150 = !DILocation(line: 103, column: 3, scope: !2144)
!2151 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2034, file: !2034, line: 108, type: !2127, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2152)
!2152 = !{!2153}
!2153 = !DILocalVariable(name: "__c", arg: 1, scope: !2151, file: !2034, line: 108, type: !623)
!2154 = !DILocation(line: 0, scope: !2151)
!2155 = !DILocation(line: 110, column: 10, scope: !2151)
!2156 = !DILocation(line: 110, column: 3, scope: !2151)
!2157 = distinct !DISubprogram(name: "getline", scope: !2034, file: !2034, line: 118, type: !2158, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2162)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!2160, !624, !2161, !2062}
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2089, line: 193, baseType: !694)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!2162 = !{!2163, !2164, !2165}
!2163 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2157, file: !2034, line: 118, type: !624)
!2164 = !DILocalVariable(name: "__n", arg: 2, scope: !2157, file: !2034, line: 118, type: !2161)
!2165 = !DILocalVariable(name: "__stream", arg: 3, scope: !2157, file: !2034, line: 118, type: !2062)
!2166 = !DILocation(line: 0, scope: !2157)
!2167 = !DILocation(line: 120, column: 10, scope: !2157)
!2168 = !DILocation(line: 120, column: 3, scope: !2157)
!2169 = distinct !DISubprogram(name: "feof_unlocked", scope: !2034, file: !2034, line: 128, type: !2060, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2170)
!2170 = !{!2171}
!2171 = !DILocalVariable(name: "__stream", arg: 1, scope: !2169, file: !2034, line: 128, type: !2062)
!2172 = !DILocation(line: 0, scope: !2169)
!2173 = !DILocation(line: 130, column: 10, scope: !2169)
!2174 = !DILocation(line: 130, column: 3, scope: !2169)
!2175 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2034, file: !2034, line: 135, type: !2060, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2176 = !{!2177}
!2177 = !DILocalVariable(name: "__stream", arg: 1, scope: !2175, file: !2034, line: 135, type: !2062)
!2178 = !DILocation(line: 0, scope: !2175)
!2179 = !DILocation(line: 137, column: 10, scope: !2175)
!2180 = !DILocation(line: 137, column: 3, scope: !2175)
!2181 = distinct !DISubprogram(name: "tolower", scope: !2182, file: !2182, line: 207, type: !2127, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2183)
!2182 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2183 = !{!2184}
!2184 = !DILocalVariable(name: "__c", arg: 1, scope: !2181, file: !2182, line: 207, type: !623)
!2185 = !DILocation(line: 0, scope: !2181)
!2186 = !DILocation(line: 209, column: 22, scope: !2181)
!2187 = !DILocation(line: 209, column: 39, scope: !2181)
!2188 = !DILocation(line: 209, column: 38, scope: !2181)
!2189 = !DILocation(line: 209, column: 37, scope: !2181)
!2190 = !DILocation(line: 209, column: 10, scope: !2181)
!2191 = !DILocation(line: 209, column: 3, scope: !2181)
!2192 = distinct !DISubprogram(name: "toupper", scope: !2182, file: !2182, line: 213, type: !2127, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2193)
!2193 = !{!2194}
!2194 = !DILocalVariable(name: "__c", arg: 1, scope: !2192, file: !2182, line: 213, type: !623)
!2195 = !DILocation(line: 0, scope: !2192)
!2196 = !DILocation(line: 215, column: 22, scope: !2192)
!2197 = !DILocation(line: 215, column: 39, scope: !2192)
!2198 = !DILocation(line: 215, column: 38, scope: !2192)
!2199 = !DILocation(line: 215, column: 37, scope: !2192)
!2200 = !DILocation(line: 215, column: 10, scope: !2192)
!2201 = !DILocation(line: 215, column: 3, scope: !2192)
!2202 = distinct !DISubprogram(name: "atoi", scope: !2203, file: !2203, line: 361, type: !1771, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2204)
!2203 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2204 = !{!2205}
!2205 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2202, file: !2203, line: 361, type: !628)
!2206 = !DILocation(line: 0, scope: !2202)
!2207 = !DILocation(line: 363, column: 16, scope: !2202)
!2208 = !DILocation(line: 363, column: 10, scope: !2202)
!2209 = !DILocation(line: 363, column: 3, scope: !2202)
!2210 = distinct !DISubprogram(name: "atol", scope: !2203, file: !2203, line: 366, type: !2211, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!694, !628}
!2213 = !{!2214}
!2214 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2210, file: !2203, line: 366, type: !628)
!2215 = !DILocation(line: 0, scope: !2210)
!2216 = !DILocation(line: 368, column: 10, scope: !2210)
!2217 = !DILocation(line: 368, column: 3, scope: !2210)
!2218 = distinct !DISubprogram(name: "atoll", scope: !2203, file: !2203, line: 373, type: !2219, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2222)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!2221, !628}
!2221 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2222 = !{!2223}
!2223 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2218, file: !2203, line: 373, type: !628)
!2224 = !DILocation(line: 0, scope: !2218)
!2225 = !DILocation(line: 375, column: 10, scope: !2218)
!2226 = !DILocation(line: 375, column: 3, scope: !2218)
!2227 = distinct !DISubprogram(name: "bsearch", scope: !2228, file: !2228, line: 20, type: !2229, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2232)
!2228 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!627, !1067, !1067, !1241, !1241, !2231}
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2203, line: 808, baseType: !1230)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242}
!2233 = !DILocalVariable(name: "__key", arg: 1, scope: !2227, file: !2228, line: 20, type: !1067)
!2234 = !DILocalVariable(name: "__base", arg: 2, scope: !2227, file: !2228, line: 20, type: !1067)
!2235 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2227, file: !2228, line: 20, type: !1241)
!2236 = !DILocalVariable(name: "__size", arg: 4, scope: !2227, file: !2228, line: 20, type: !1241)
!2237 = !DILocalVariable(name: "__compar", arg: 5, scope: !2227, file: !2228, line: 21, type: !2231)
!2238 = !DILocalVariable(name: "__l", scope: !2227, file: !2228, line: 23, type: !1241)
!2239 = !DILocalVariable(name: "__u", scope: !2227, file: !2228, line: 23, type: !1241)
!2240 = !DILocalVariable(name: "__idx", scope: !2227, file: !2228, line: 23, type: !1241)
!2241 = !DILocalVariable(name: "__p", scope: !2227, file: !2228, line: 24, type: !1067)
!2242 = !DILocalVariable(name: "__comparison", scope: !2227, file: !2228, line: 25, type: !623)
!2243 = !DILocation(line: 0, scope: !2227)
!2244 = !DILocation(line: 29, column: 3, scope: !2227)
!2245 = !DILocation(line: 27, column: 7, scope: !2227)
!2246 = !DILocation(line: 29, column: 14, scope: !2227)
!2247 = !DILocation(line: 31, column: 20, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2227, file: !2228, line: 30, column: 5)
!2249 = !DILocation(line: 31, column: 27, scope: !2248)
!2250 = !DILocation(line: 32, column: 56, scope: !2248)
!2251 = !DILocation(line: 32, column: 47, scope: !2248)
!2252 = !DILocation(line: 33, column: 22, scope: !2248)
!2253 = !DILocation(line: 34, column: 24, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2248, file: !2228, line: 34, column: 11)
!2255 = !DILocation(line: 34, column: 11, scope: !2248)
!2256 = !DILocation(line: 36, column: 29, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2254, file: !2228, line: 36, column: 16)
!2258 = !DILocation(line: 36, column: 16, scope: !2254)
!2259 = !DILocation(line: 37, column: 14, scope: !2257)
!2260 = distinct !{!2260, !2244, !2261}
!2261 = !DILocation(line: 40, column: 5, scope: !2227)
!2262 = !DILocation(line: 43, column: 1, scope: !2227)
!2263 = distinct !DISubprogram(name: "atof", scope: !2264, file: !2264, line: 25, type: !2265, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2268)
!2264 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!2267, !628}
!2267 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2268 = !{!2269}
!2269 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2263, file: !2264, line: 25, type: !628)
!2270 = !DILocation(line: 0, scope: !2263)
!2271 = !DILocation(line: 27, column: 10, scope: !2263)
!2272 = !DILocation(line: 27, column: 3, scope: !2263)
!2273 = distinct !DISubprogram(name: "strtoimax", scope: !2274, file: !2274, line: 324, type: !2275, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2281)
!2274 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!2277, !2037, !2280, !623}
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2278, line: 101, baseType: !2279)
!2278 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2089, line: 72, baseType: !694)
!2280 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !624)
!2281 = !{!2282, !2283, !2284}
!2282 = !DILocalVariable(name: "nptr", arg: 1, scope: !2273, file: !2274, line: 324, type: !2037)
!2283 = !DILocalVariable(name: "endptr", arg: 2, scope: !2273, file: !2274, line: 324, type: !2280)
!2284 = !DILocalVariable(name: "base", arg: 3, scope: !2273, file: !2274, line: 324, type: !623)
!2285 = !DILocation(line: 0, scope: !2273)
!2286 = !DILocation(line: 327, column: 10, scope: !2273)
!2287 = !DILocation(line: 327, column: 3, scope: !2273)
!2288 = distinct !DISubprogram(name: "strtoumax", scope: !2274, file: !2274, line: 336, type: !2289, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2293)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!2291, !2037, !2280, !623}
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2278, line: 102, baseType: !2292)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2089, line: 73, baseType: !692)
!2293 = !{!2294, !2295, !2296}
!2294 = !DILocalVariable(name: "nptr", arg: 1, scope: !2288, file: !2274, line: 336, type: !2037)
!2295 = !DILocalVariable(name: "endptr", arg: 2, scope: !2288, file: !2274, line: 336, type: !2280)
!2296 = !DILocalVariable(name: "base", arg: 3, scope: !2288, file: !2274, line: 336, type: !623)
!2297 = !DILocation(line: 0, scope: !2288)
!2298 = !DILocation(line: 339, column: 10, scope: !2288)
!2299 = !DILocation(line: 339, column: 3, scope: !2288)
!2300 = distinct !DISubprogram(name: "wcstoimax", scope: !2274, file: !2274, line: 348, type: !2301, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2310)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!2277, !2303, !2307, !623}
!2303 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2306)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2274, line: 34, baseType: !623)
!2307 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2308)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2310 = !{!2311, !2312, !2313}
!2311 = !DILocalVariable(name: "nptr", arg: 1, scope: !2300, file: !2274, line: 348, type: !2303)
!2312 = !DILocalVariable(name: "endptr", arg: 2, scope: !2300, file: !2274, line: 348, type: !2307)
!2313 = !DILocalVariable(name: "base", arg: 3, scope: !2300, file: !2274, line: 348, type: !623)
!2314 = !DILocation(line: 0, scope: !2300)
!2315 = !DILocation(line: 351, column: 10, scope: !2300)
!2316 = !DILocation(line: 351, column: 3, scope: !2300)
!2317 = distinct !DISubprogram(name: "wcstoumax", scope: !2274, file: !2274, line: 362, type: !2318, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2320)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{!2291, !2303, !2307, !623}
!2320 = !{!2321, !2322, !2323}
!2321 = !DILocalVariable(name: "nptr", arg: 1, scope: !2317, file: !2274, line: 362, type: !2303)
!2322 = !DILocalVariable(name: "endptr", arg: 2, scope: !2317, file: !2274, line: 362, type: !2307)
!2323 = !DILocalVariable(name: "base", arg: 3, scope: !2317, file: !2274, line: 362, type: !623)
!2324 = !DILocation(line: 0, scope: !2317)
!2325 = !DILocation(line: 365, column: 10, scope: !2317)
!2326 = !DILocation(line: 365, column: 3, scope: !2317)
!2327 = distinct !DISubprogram(name: "stat", scope: !2328, file: !2328, line: 453, type: !2329, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2366)
!2328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!623, !628, !2331}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2333, line: 46, size: 1152, elements: !2334)
!2333 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2334 = !{!2335, !2337, !2339, !2341, !2343, !2345, !2347, !2348, !2349, !2350, !2352, !2354, !2362, !2363, !2364}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2332, file: !2333, line: 48, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2089, line: 145, baseType: !692)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2332, file: !2333, line: 53, baseType: !2338, size: 64, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2089, line: 148, baseType: !692)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2332, file: !2333, line: 61, baseType: !2340, size: 64, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2089, line: 151, baseType: !692)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2332, file: !2333, line: 62, baseType: !2342, size: 32, offset: 192)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2089, line: 150, baseType: !7)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2332, file: !2333, line: 64, baseType: !2344, size: 32, offset: 224)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2089, line: 146, baseType: !7)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2332, file: !2333, line: 65, baseType: !2346, size: 32, offset: 256)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2089, line: 147, baseType: !7)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2332, file: !2333, line: 67, baseType: !623, size: 32, offset: 288)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2332, file: !2333, line: 69, baseType: !2336, size: 64, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2332, file: !2333, line: 74, baseType: !2088, size: 64, offset: 384)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2332, file: !2333, line: 78, baseType: !2351, size: 64, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2089, line: 174, baseType: !694)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2332, file: !2333, line: 80, baseType: !2353, size: 64, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2089, line: 179, baseType: !694)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2332, file: !2333, line: 91, baseType: !2355, size: 128, offset: 576)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2356, line: 10, size: 128, elements: !2357)
!2356 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2357 = !{!2358, !2360}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2355, file: !2356, line: 12, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2089, line: 160, baseType: !694)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2355, file: !2356, line: 16, baseType: !2361, size: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2089, line: 196, baseType: !694)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2332, file: !2333, line: 92, baseType: !2355, size: 128, offset: 704)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2332, file: !2333, line: 93, baseType: !2355, size: 128, offset: 832)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2332, file: !2333, line: 106, baseType: !2365, size: 192, offset: 960)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2361, size: 192, elements: !712)
!2366 = !{!2367, !2368}
!2367 = !DILocalVariable(name: "__path", arg: 1, scope: !2327, file: !2328, line: 453, type: !628)
!2368 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2327, file: !2328, line: 453, type: !2331)
!2369 = !DILocation(line: 0, scope: !2327)
!2370 = !DILocation(line: 455, column: 10, scope: !2327)
!2371 = !DILocation(line: 455, column: 3, scope: !2327)
!2372 = distinct !DISubprogram(name: "lstat", scope: !2328, file: !2328, line: 460, type: !2329, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2373)
!2373 = !{!2374, !2375}
!2374 = !DILocalVariable(name: "__path", arg: 1, scope: !2372, file: !2328, line: 460, type: !628)
!2375 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2372, file: !2328, line: 460, type: !2331)
!2376 = !DILocation(line: 0, scope: !2372)
!2377 = !DILocation(line: 462, column: 10, scope: !2372)
!2378 = !DILocation(line: 462, column: 3, scope: !2372)
!2379 = distinct !DISubprogram(name: "fstat", scope: !2328, file: !2328, line: 467, type: !2380, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2382)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!623, !623, !2331}
!2382 = !{!2383, !2384}
!2383 = !DILocalVariable(name: "__fd", arg: 1, scope: !2379, file: !2328, line: 467, type: !623)
!2384 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2379, file: !2328, line: 467, type: !2331)
!2385 = !DILocation(line: 0, scope: !2379)
!2386 = !DILocation(line: 469, column: 10, scope: !2379)
!2387 = !DILocation(line: 469, column: 3, scope: !2379)
!2388 = distinct !DISubprogram(name: "fstatat", scope: !2328, file: !2328, line: 474, type: !2389, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2391)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!623, !623, !628, !2331, !623}
!2391 = !{!2392, !2393, !2394, !2395}
!2392 = !DILocalVariable(name: "__fd", arg: 1, scope: !2388, file: !2328, line: 474, type: !623)
!2393 = !DILocalVariable(name: "__filename", arg: 2, scope: !2388, file: !2328, line: 474, type: !628)
!2394 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2388, file: !2328, line: 474, type: !2331)
!2395 = !DILocalVariable(name: "__flag", arg: 4, scope: !2388, file: !2328, line: 474, type: !623)
!2396 = !DILocation(line: 0, scope: !2388)
!2397 = !DILocation(line: 477, column: 10, scope: !2388)
!2398 = !DILocation(line: 477, column: 3, scope: !2388)
!2399 = distinct !DISubprogram(name: "mknod", scope: !2328, file: !2328, line: 483, type: !2400, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2402)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{!623, !628, !2342, !2336}
!2402 = !{!2403, !2404, !2405}
!2403 = !DILocalVariable(name: "__path", arg: 1, scope: !2399, file: !2328, line: 483, type: !628)
!2404 = !DILocalVariable(name: "__mode", arg: 2, scope: !2399, file: !2328, line: 483, type: !2342)
!2405 = !DILocalVariable(name: "__dev", arg: 3, scope: !2399, file: !2328, line: 483, type: !2336)
!2406 = !DILocation(line: 0, scope: !2399)
!2407 = !DILocation(line: 485, column: 10, scope: !2399)
!2408 = !DILocation(line: 485, column: 3, scope: !2399)
!2409 = distinct !DISubprogram(name: "mknodat", scope: !2328, file: !2328, line: 491, type: !2410, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2412)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!623, !623, !628, !2342, !2336}
!2412 = !{!2413, !2414, !2415, !2416}
!2413 = !DILocalVariable(name: "__fd", arg: 1, scope: !2409, file: !2328, line: 491, type: !623)
!2414 = !DILocalVariable(name: "__path", arg: 2, scope: !2409, file: !2328, line: 491, type: !628)
!2415 = !DILocalVariable(name: "__mode", arg: 3, scope: !2409, file: !2328, line: 491, type: !2342)
!2416 = !DILocalVariable(name: "__dev", arg: 4, scope: !2409, file: !2328, line: 491, type: !2336)
!2417 = !DILocation(line: 0, scope: !2409)
!2418 = !DILocation(line: 494, column: 10, scope: !2409)
!2419 = !DILocation(line: 494, column: 3, scope: !2409)
!2420 = distinct !DISubprogram(name: "stat64", scope: !2328, file: !2328, line: 502, type: !2421, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2443)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!623, !628, !2423}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2333, line: 119, size: 1152, elements: !2425)
!2425 = !{!2426, !2427, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2439, !2440, !2441, !2442}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2424, file: !2333, line: 121, baseType: !2336, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2424, file: !2333, line: 123, baseType: !2428, size: 64, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2089, line: 149, baseType: !692)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2424, file: !2333, line: 124, baseType: !2340, size: 64, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2424, file: !2333, line: 125, baseType: !2342, size: 32, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2424, file: !2333, line: 132, baseType: !2344, size: 32, offset: 224)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2424, file: !2333, line: 133, baseType: !2346, size: 32, offset: 256)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2424, file: !2333, line: 135, baseType: !623, size: 32, offset: 288)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2424, file: !2333, line: 136, baseType: !2336, size: 64, offset: 320)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2424, file: !2333, line: 137, baseType: !2088, size: 64, offset: 384)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2424, file: !2333, line: 143, baseType: !2351, size: 64, offset: 448)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2424, file: !2333, line: 144, baseType: !2438, size: 64, offset: 512)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2089, line: 180, baseType: !694)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2424, file: !2333, line: 152, baseType: !2355, size: 128, offset: 576)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2424, file: !2333, line: 153, baseType: !2355, size: 128, offset: 704)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2424, file: !2333, line: 154, baseType: !2355, size: 128, offset: 832)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2424, file: !2333, line: 164, baseType: !2365, size: 192, offset: 960)
!2443 = !{!2444, !2445}
!2444 = !DILocalVariable(name: "__path", arg: 1, scope: !2420, file: !2328, line: 502, type: !628)
!2445 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2420, file: !2328, line: 502, type: !2423)
!2446 = !DILocation(line: 0, scope: !2420)
!2447 = !DILocation(line: 504, column: 10, scope: !2420)
!2448 = !DILocation(line: 504, column: 3, scope: !2420)
!2449 = distinct !DISubprogram(name: "lstat64", scope: !2328, file: !2328, line: 509, type: !2421, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2450)
!2450 = !{!2451, !2452}
!2451 = !DILocalVariable(name: "__path", arg: 1, scope: !2449, file: !2328, line: 509, type: !628)
!2452 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2449, file: !2328, line: 509, type: !2423)
!2453 = !DILocation(line: 0, scope: !2449)
!2454 = !DILocation(line: 511, column: 10, scope: !2449)
!2455 = !DILocation(line: 511, column: 3, scope: !2449)
!2456 = distinct !DISubprogram(name: "fstat64", scope: !2328, file: !2328, line: 516, type: !2457, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!623, !623, !2423}
!2459 = !{!2460, !2461}
!2460 = !DILocalVariable(name: "__fd", arg: 1, scope: !2456, file: !2328, line: 516, type: !623)
!2461 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2456, file: !2328, line: 516, type: !2423)
!2462 = !DILocation(line: 0, scope: !2456)
!2463 = !DILocation(line: 518, column: 10, scope: !2456)
!2464 = !DILocation(line: 518, column: 3, scope: !2456)
!2465 = distinct !DISubprogram(name: "fstatat64", scope: !2328, file: !2328, line: 523, type: !2466, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2468)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!623, !623, !628, !2423, !623}
!2468 = !{!2469, !2470, !2471, !2472}
!2469 = !DILocalVariable(name: "__fd", arg: 1, scope: !2465, file: !2328, line: 523, type: !623)
!2470 = !DILocalVariable(name: "__filename", arg: 2, scope: !2465, file: !2328, line: 523, type: !628)
!2471 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2465, file: !2328, line: 523, type: !2423)
!2472 = !DILocalVariable(name: "__flag", arg: 4, scope: !2465, file: !2328, line: 523, type: !623)
!2473 = !DILocation(line: 0, scope: !2465)
!2474 = !DILocation(line: 526, column: 10, scope: !2465)
!2475 = !DILocation(line: 526, column: 3, scope: !2465)
!2476 = distinct !DISubprogram(name: "default_emutls_var_fields", scope: !3, file: !3, line: 238, type: !2477, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2479)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!639, !639, !1434}
!2479 = !{!2480, !2481, !2482, !2483, !2484}
!2480 = !DILocalVariable(name: "type", arg: 1, scope: !2476, file: !3, line: 238, type: !639)
!2481 = !DILocalVariable(name: "name", arg: 2, scope: !2476, file: !3, line: 238, type: !1434)
!2482 = !DILocalVariable(name: "word_type_node", scope: !2476, file: !3, line: 240, type: !639)
!2483 = !DILocalVariable(name: "field", scope: !2476, file: !3, line: 240, type: !639)
!2484 = !DILocalVariable(name: "next_field", scope: !2476, file: !3, line: 240, type: !639)
!2485 = !DILocation(line: 0, scope: !2476)
!2486 = !DILocation(line: 242, column: 11, scope: !2476)
!2487 = !DILocation(line: 244, column: 3, scope: !2476)
!2488 = !DILocation(line: 244, column: 24, scope: !2476)
!2489 = !DILocation(line: 247, column: 11, scope: !2476)
!2490 = !DILocation(line: 250, column: 3, scope: !2476)
!2491 = !DILocation(line: 250, column: 24, scope: !2476)
!2492 = !DILocation(line: 251, column: 3, scope: !2476)
!2493 = !DILocation(line: 251, column: 22, scope: !2476)
!2494 = !DILocation(line: 254, column: 37, scope: !2476)
!2495 = !DILocation(line: 254, column: 52, scope: !2476)
!2496 = !DILocation(line: 254, column: 20, scope: !2476)
!2497 = !DILocation(line: 255, column: 11, scope: !2476)
!2498 = !DILocation(line: 258, column: 3, scope: !2476)
!2499 = !DILocation(line: 258, column: 24, scope: !2476)
!2500 = !DILocation(line: 259, column: 3, scope: !2476)
!2501 = !DILocation(line: 259, column: 22, scope: !2476)
!2502 = !DILocation(line: 262, column: 11, scope: !2476)
!2503 = !DILocation(line: 264, column: 3, scope: !2476)
!2504 = !DILocation(line: 264, column: 24, scope: !2476)
!2505 = !DILocation(line: 265, column: 3, scope: !2476)
!2506 = !DILocation(line: 265, column: 22, scope: !2476)
!2507 = !DILocation(line: 267, column: 3, scope: !2476)
!2508 = distinct !DISubprogram(name: "emutls_decl", scope: !3, file: !3, line: 350, type: !2509, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2511)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!639, !639}
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517}
!2512 = !DILocalVariable(name: "decl", arg: 1, scope: !2508, file: !3, line: 350, type: !639)
!2513 = !DILocalVariable(name: "name", scope: !2508, file: !3, line: 352, type: !639)
!2514 = !DILocalVariable(name: "to", scope: !2508, file: !3, line: 352, type: !639)
!2515 = !DILocalVariable(name: "h", scope: !2508, file: !3, line: 353, type: !632)
!2516 = !DILocalVariable(name: "in", scope: !2508, file: !3, line: 353, type: !633)
!2517 = !DILocalVariable(name: "loc", scope: !2508, file: !3, line: 354, type: !1239)
!2518 = !DILocation(line: 0, scope: !2508)
!2519 = !DILocation(line: 353, column: 3, scope: !2508)
!2520 = !DILocation(line: 356, column: 15, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2508, file: !3, line: 356, column: 7)
!2522 = !DILocation(line: 356, column: 7, scope: !2521)
!2523 = !DILocation(line: 356, column: 32, scope: !2521)
!2524 = !DILocation(line: 356, column: 24, scope: !2521)
!2525 = !DILocation(line: 356, column: 51, scope: !2521)
!2526 = !DILocation(line: 356, column: 48, scope: !2521)
!2527 = !DILocation(line: 357, column: 10, scope: !2521)
!2528 = !DILocation(line: 357, column: 27, scope: !2521)
!2529 = !DILocation(line: 357, column: 39, scope: !2521)
!2530 = !DILocation(line: 357, column: 44, scope: !2521)
!2531 = !DILocation(line: 356, column: 7, scope: !2508)
!2532 = !DILocation(line: 362, column: 9, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2508, file: !3, line: 362, column: 7)
!2534 = !DILocation(line: 362, column: 7, scope: !2508)
!2535 = !DILocation(line: 363, column: 19, scope: !2533)
!2536 = !DILocation(line: 363, column: 17, scope: !2533)
!2537 = !DILocation(line: 363, column: 5, scope: !2533)
!2538 = !DILocation(line: 365, column: 10, scope: !2508)
!2539 = !DILocation(line: 370, column: 31, scope: !2508)
!2540 = !DILocation(line: 370, column: 13, scope: !2508)
!2541 = !DILocation(line: 370, column: 6, scope: !2508)
!2542 = !DILocation(line: 370, column: 11, scope: !2508)
!2543 = !DILocation(line: 371, column: 11, scope: !2508)
!2544 = !DILocation(line: 371, column: 16, scope: !2508)
!2545 = !DILocation(line: 372, column: 35, scope: !2508)
!2546 = !DILocation(line: 372, column: 9, scope: !2508)
!2547 = !DILocation(line: 373, column: 27, scope: !2508)
!2548 = !DILocation(line: 374, column: 9, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2508, file: !3, line: 374, column: 7)
!2550 = !DILocation(line: 374, column: 7, scope: !2508)
!2551 = !DILocation(line: 375, column: 13, scope: !2549)
!2552 = !DILocation(line: 375, column: 5, scope: !2549)
!2553 = !DILocation(line: 378, column: 12, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 377, column: 5)
!2555 = !DILocation(line: 382, column: 11, scope: !2554)
!2556 = !DILocation(line: 383, column: 20, scope: !2554)
!2557 = !DILocation(line: 383, column: 10, scope: !2554)
!2558 = !DILocation(line: 383, column: 15, scope: !2554)
!2559 = !DILocation(line: 384, column: 15, scope: !2554)
!2560 = !DILocation(line: 384, column: 20, scope: !2554)
!2561 = !DILocation(line: 385, column: 10, scope: !2554)
!2562 = !DILocation(line: 385, column: 13, scope: !2554)
!2563 = !DILocation(line: 386, column: 33, scope: !2554)
!2564 = !DILocation(line: 388, column: 7, scope: !2554)
!2565 = !DILocation(line: 388, column: 27, scope: !2554)
!2566 = !DILocation(line: 389, column: 7, scope: !2554)
!2567 = !DILocation(line: 389, column: 28, scope: !2554)
!2568 = !DILocation(line: 390, column: 27, scope: !2554)
!2569 = !DILocation(line: 391, column: 7, scope: !2554)
!2570 = !DILocation(line: 391, column: 26, scope: !2554)
!2571 = !DILocation(line: 392, column: 7, scope: !2554)
!2572 = !DILocation(line: 393, column: 11, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2554, file: !3, line: 393, column: 11)
!2574 = !DILocation(line: 393, column: 11, scope: !2554)
!2575 = !DILocation(line: 394, column: 26, scope: !2573)
!2576 = !DILocation(line: 394, column: 2, scope: !2573)
!2577 = !DILocation(line: 395, column: 27, scope: !2554)
!2578 = !DILocation(line: 395, column: 7, scope: !2554)
!2579 = !DILocation(line: 395, column: 25, scope: !2554)
!2580 = !DILocation(line: 396, column: 26, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2554, file: !3, line: 396, column: 11)
!2582 = !DILocation(line: 396, column: 11, scope: !2581)
!2583 = !DILocation(line: 396, column: 11, scope: !2554)
!2584 = !DILocation(line: 399, column: 23, scope: !2581)
!2585 = !DILocation(line: 399, column: 2, scope: !2581)
!2586 = !DILocation(line: 0, scope: !2549)
!2587 = !DILocation(line: 409, column: 22, scope: !2508)
!2588 = !DILocation(line: 409, column: 3, scope: !2508)
!2589 = !DILocation(line: 409, column: 20, scope: !2508)
!2590 = !DILocation(line: 410, column: 20, scope: !2508)
!2591 = !DILocation(line: 410, column: 18, scope: !2508)
!2592 = !DILocation(line: 411, column: 22, scope: !2508)
!2593 = !DILocation(line: 411, column: 20, scope: !2508)
!2594 = !DILocation(line: 412, column: 24, scope: !2508)
!2595 = !DILocation(line: 412, column: 3, scope: !2508)
!2596 = !DILocation(line: 412, column: 22, scope: !2508)
!2597 = !DILocation(line: 413, column: 22, scope: !2508)
!2598 = !DILocation(line: 413, column: 3, scope: !2508)
!2599 = !DILocation(line: 413, column: 20, scope: !2508)
!2600 = !DILocation(line: 414, column: 20, scope: !2508)
!2601 = !DILocation(line: 414, column: 18, scope: !2508)
!2602 = !DILocation(line: 415, column: 26, scope: !2508)
!2603 = !DILocation(line: 415, column: 24, scope: !2508)
!2604 = !DILocation(line: 417, column: 3, scope: !2508)
!2605 = !DILocation(line: 418, column: 1, scope: !2508)
!2606 = distinct !DISubprogram(name: "get_emutls_object_name", scope: !3, file: !3, line: 229, type: !2509, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2607)
!2607 = !{!2608, !2609}
!2608 = !DILocalVariable(name: "name", arg: 1, scope: !2606, file: !3, line: 229, type: !639)
!2609 = !DILocalVariable(name: "prefix", scope: !2606, file: !3, line: 231, type: !628)
!2610 = !DILocation(line: 0, scope: !2606)
!2611 = !DILocation(line: 231, column: 40, scope: !2606)
!2612 = !DILocation(line: 231, column: 25, scope: !2606)
!2613 = !DILocation(line: 234, column: 10, scope: !2606)
!2614 = !DILocation(line: 234, column: 3, scope: !2606)
!2615 = distinct !DISubprogram(name: "get_emutls_object_type", scope: !3, file: !3, line: 274, type: !2616, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2618)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!639}
!2618 = !{!2619, !2620, !2621}
!2619 = !DILocalVariable(name: "type", scope: !2615, file: !3, line: 276, type: !639)
!2620 = !DILocalVariable(name: "type_name", scope: !2615, file: !3, line: 276, type: !639)
!2621 = !DILocalVariable(name: "field", scope: !2615, file: !3, line: 276, type: !639)
!2622 = !DILocation(line: 276, column: 3, scope: !2615)
!2623 = !DILocation(line: 278, column: 10, scope: !2615)
!2624 = !DILocation(line: 0, scope: !2615)
!2625 = !DILocation(line: 279, column: 7, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 279, column: 7)
!2627 = !DILocation(line: 279, column: 7, scope: !2615)
!2628 = !DILocation(line: 282, column: 48, scope: !2615)
!2629 = !DILocation(line: 282, column: 31, scope: !2615)
!2630 = !DILocation(line: 282, column: 22, scope: !2615)
!2631 = !DILocation(line: 283, column: 13, scope: !2615)
!2632 = !DILocation(line: 284, column: 26, scope: !2615)
!2633 = !DILocation(line: 284, column: 11, scope: !2615)
!2634 = !DILocation(line: 285, column: 8, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 285, column: 7)
!2636 = !DILocation(line: 285, column: 7, scope: !2615)
!2637 = !DILocation(line: 286, column: 17, scope: !2635)
!2638 = !DILocation(line: 286, column: 15, scope: !2635)
!2639 = !DILocation(line: 286, column: 5, scope: !2635)
!2640 = !DILocation(line: 287, column: 15, scope: !2615)
!2641 = !DILocation(line: 287, column: 13, scope: !2615)
!2642 = !DILocation(line: 289, column: 22, scope: !2615)
!2643 = !DILocation(line: 289, column: 3, scope: !2615)
!2644 = !DILocation(line: 289, column: 20, scope: !2615)
!2645 = !DILocation(line: 290, column: 3, scope: !2615)
!2646 = !DILocation(line: 290, column: 22, scope: !2615)
!2647 = !DILocation(line: 291, column: 3, scope: !2615)
!2648 = !DILocation(line: 293, column: 3, scope: !2615)
!2649 = !DILocation(line: 294, column: 1, scope: !2615)
!2650 = distinct !DISubprogram(name: "make_decl_one_only", scope: !3, file: !3, line: 5879, type: !2651, scopeLine: 5880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2653)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{null, !639, !639}
!2653 = !{!2654, !2655}
!2654 = !DILocalVariable(name: "decl", arg: 1, scope: !2650, file: !3, line: 5879, type: !639)
!2655 = !DILocalVariable(name: "comdat_group", arg: 2, scope: !2650, file: !3, line: 5879, type: !639)
!2656 = !DILocation(line: 0, scope: !2650)
!2657 = !DILocation(line: 5881, column: 3, scope: !2650)
!2658 = !DILocation(line: 5884, column: 22, scope: !2650)
!2659 = !DILocation(line: 5889, column: 7, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 5887, column: 5)
!2661 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 5886, column: 7)
!2662 = !DILocation(line: 5891, column: 7, scope: !2660)
!2663 = !DILocation(line: 5891, column: 32, scope: !2660)
!2664 = !DILocation(line: 5901, column: 1, scope: !2650)
!2665 = distinct !DISubprogram(name: "emutls_finish", scope: !3, file: !3, line: 455, type: !2666, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{null}
!2668 = !{!2669}
!2669 = !DILocalVariable(name: "body", scope: !2670, file: !3, line: 459, type: !639)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 458, column: 5)
!2671 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 457, column: 7)
!2672 = !DILocation(line: 457, column: 22, scope: !2671)
!2673 = !DILocation(line: 457, column: 7, scope: !2671)
!2674 = !DILocation(line: 457, column: 7, scope: !2665)
!2675 = !DILocation(line: 459, column: 7, scope: !2670)
!2676 = !DILocation(line: 0, scope: !2670)
!2677 = !DILocation(line: 459, column: 12, scope: !2670)
!2678 = !DILocation(line: 461, column: 11, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 461, column: 11)
!2680 = !DILocation(line: 461, column: 23, scope: !2679)
!2681 = !DILocation(line: 461, column: 11, scope: !2670)
!2682 = !DILocation(line: 464, column: 7, scope: !2670)
!2683 = !DILocation(line: 465, column: 11, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 465, column: 11)
!2685 = !DILocation(line: 465, column: 16, scope: !2684)
!2686 = !DILocation(line: 465, column: 11, scope: !2670)
!2687 = !DILocation(line: 468, column: 7, scope: !2670)
!2688 = !DILocation(line: 469, column: 5, scope: !2671)
!2689 = !DILocation(line: 470, column: 1, scope: !2665)
!2690 = distinct !DISubprogram(name: "emutls_common_1", scope: !3, file: !3, line: 421, type: !2691, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2693)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!623, !1239, !627}
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700}
!2694 = !DILocalVariable(name: "loc", arg: 1, scope: !2690, file: !3, line: 421, type: !1239)
!2695 = !DILocalVariable(name: "xstmts", arg: 2, scope: !2690, file: !3, line: 421, type: !627)
!2696 = !DILocalVariable(name: "h", scope: !2690, file: !3, line: 423, type: !632)
!2697 = !DILocalVariable(name: "args", scope: !2690, file: !3, line: 424, type: !639)
!2698 = !DILocalVariable(name: "x", scope: !2690, file: !3, line: 424, type: !639)
!2699 = !DILocalVariable(name: "pstmts", scope: !2690, file: !3, line: 424, type: !1434)
!2700 = !DILocalVariable(name: "word_type_node", scope: !2690, file: !3, line: 425, type: !639)
!2701 = !DILocation(line: 0, scope: !2690)
!2702 = !DILocation(line: 423, column: 24, scope: !2690)
!2703 = !DILocation(line: 424, column: 27, scope: !2690)
!2704 = !DILocation(line: 427, column: 9, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 427, column: 7)
!2706 = !DILocation(line: 428, column: 7, scope: !2705)
!2707 = !DILocation(line: 428, column: 11, scope: !2705)
!2708 = !DILocation(line: 429, column: 4, scope: !2705)
!2709 = !DILocation(line: 429, column: 38, scope: !2705)
!2710 = !DILocation(line: 429, column: 35, scope: !2705)
!2711 = !DILocation(line: 427, column: 7, scope: !2690)
!2712 = !DILocation(line: 432, column: 37, scope: !2690)
!2713 = !DILocation(line: 432, column: 52, scope: !2690)
!2714 = !DILocation(line: 432, column: 20, scope: !2690)
!2715 = !DILocation(line: 438, column: 7, scope: !2690)
!2716 = !DILocation(line: 439, column: 10, scope: !2690)
!2717 = !DILocation(line: 440, column: 38, scope: !2690)
!2718 = !DILocation(line: 440, column: 7, scope: !2690)
!2719 = !DILocation(line: 441, column: 10, scope: !2690)
!2720 = !DILocation(line: 442, column: 7, scope: !2690)
!2721 = !DILocation(line: 443, column: 10, scope: !2690)
!2722 = !DILocation(line: 444, column: 7, scope: !2690)
!2723 = !DILocation(line: 445, column: 10, scope: !2690)
!2724 = !DILocation(line: 447, column: 7, scope: !2690)
!2725 = !DILocation(line: 448, column: 7, scope: !2690)
!2726 = !DILocation(line: 450, column: 3, scope: !2690)
!2727 = !DILocation(line: 451, column: 3, scope: !2690)
!2728 = !DILocation(line: 452, column: 1, scope: !2690)
!2729 = distinct !DISubprogram(name: "get_unnamed_section", scope: !3, file: !3, line: 521, type: !2730, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2732)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!1044, !7, !1064, !1067}
!2732 = !{!2733, !2734, !2735, !2736}
!2733 = !DILocalVariable(name: "flags", arg: 1, scope: !2729, file: !3, line: 521, type: !7)
!2734 = !DILocalVariable(name: "callback", arg: 2, scope: !2729, file: !3, line: 521, type: !1064)
!2735 = !DILocalVariable(name: "data", arg: 3, scope: !2729, file: !3, line: 522, type: !1067)
!2736 = !DILocalVariable(name: "sect", scope: !2729, file: !3, line: 524, type: !1044)
!2737 = !DILocation(line: 0, scope: !2729)
!2738 = !DILocation(line: 526, column: 10, scope: !2729)
!2739 = !DILocation(line: 527, column: 24, scope: !2729)
!2740 = !DILocation(line: 527, column: 30, scope: !2729)
!2741 = !DILocation(line: 528, column: 17, scope: !2729)
!2742 = !DILocation(line: 528, column: 26, scope: !2729)
!2743 = !DILocation(line: 529, column: 17, scope: !2729)
!2744 = !DILocation(line: 529, column: 22, scope: !2729)
!2745 = !DILocation(line: 530, column: 24, scope: !2729)
!2746 = !DILocation(line: 530, column: 17, scope: !2729)
!2747 = !DILocation(line: 530, column: 22, scope: !2729)
!2748 = !DILocation(line: 532, column: 20, scope: !2729)
!2749 = !DILocation(line: 533, column: 3, scope: !2729)
!2750 = distinct !DISubprogram(name: "get_section", scope: !3, file: !3, line: 554, type: !2751, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2753)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!1044, !628, !7, !639}
!2753 = !{!2754, !2755, !2756, !2757, !2758}
!2754 = !DILocalVariable(name: "name", arg: 1, scope: !2750, file: !3, line: 554, type: !628)
!2755 = !DILocalVariable(name: "flags", arg: 2, scope: !2750, file: !3, line: 554, type: !7)
!2756 = !DILocalVariable(name: "decl", arg: 3, scope: !2750, file: !3, line: 554, type: !639)
!2757 = !DILocalVariable(name: "sect", scope: !2750, file: !3, line: 556, type: !1044)
!2758 = !DILocalVariable(name: "slot", scope: !2750, file: !3, line: 556, type: !1719)
!2759 = !DILocation(line: 0, scope: !2750)
!2760 = !DILocation(line: 559, column: 31, scope: !2750)
!2761 = !DILocation(line: 560, column: 10, scope: !2750)
!2762 = !DILocation(line: 559, column: 5, scope: !2750)
!2763 = !DILocation(line: 558, column: 10, scope: !2750)
!2764 = !DILocation(line: 561, column: 9, scope: !2750)
!2765 = !DILocation(line: 562, column: 7, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 562, column: 7)
!2767 = !DILocation(line: 562, column: 13, scope: !2766)
!2768 = !DILocation(line: 562, column: 7, scope: !2750)
!2769 = !DILocation(line: 564, column: 14, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 563, column: 5)
!2771 = !DILocation(line: 565, column: 26, scope: !2770)
!2772 = !DILocation(line: 565, column: 32, scope: !2770)
!2773 = !DILocation(line: 566, column: 26, scope: !2770)
!2774 = !DILocation(line: 566, column: 19, scope: !2770)
!2775 = !DILocation(line: 566, column: 24, scope: !2770)
!2776 = !DILocation(line: 567, column: 19, scope: !2770)
!2777 = !DILocation(line: 567, column: 24, scope: !2770)
!2778 = !DILocation(line: 568, column: 13, scope: !2770)
!2779 = !DILocation(line: 569, column: 5, scope: !2770)
!2780 = !DILocation(line: 573, column: 25, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 573, column: 11)
!2782 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 571, column: 5)
!2783 = !DILocation(line: 573, column: 31, scope: !2781)
!2784 = !DILocation(line: 573, column: 52, scope: !2781)
!2785 = !DILocation(line: 574, column: 4, scope: !2781)
!2786 = !DILocation(line: 574, column: 28, scope: !2781)
!2787 = !DILocation(line: 574, column: 37, scope: !2781)
!2788 = !DILocation(line: 574, column: 57, scope: !2781)
!2789 = !DILocation(line: 573, column: 11, scope: !2782)
!2790 = !DILocation(line: 577, column: 13, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 577, column: 8)
!2792 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 575, column: 2)
!2793 = !DILocation(line: 577, column: 8, scope: !2792)
!2794 = !DILocation(line: 578, column: 25, scope: !2791)
!2795 = !DILocation(line: 578, column: 6, scope: !2791)
!2796 = !DILocation(line: 579, column: 4, scope: !2792)
!2797 = !DILocation(line: 580, column: 4, scope: !2792)
!2798 = !DILocation(line: 581, column: 2, scope: !2792)
!2799 = !DILocation(line: 0, scope: !2766)
!2800 = !DILocation(line: 583, column: 3, scope: !2750)
!2801 = distinct !DISubprogram(name: "unlikely_text_section", scope: !3, file: !3, line: 679, type: !2802, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!1044}
!2804 = !DILocation(line: 681, column: 7, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 681, column: 7)
!2806 = !DILocation(line: 681, column: 7, scope: !2801)
!2807 = !DILocation(line: 683, column: 30, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 683, column: 11)
!2809 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 682, column: 5)
!2810 = !DILocation(line: 683, column: 12, scope: !2808)
!2811 = !DILocation(line: 683, column: 11, scope: !2809)
!2812 = !DILocation(line: 684, column: 2, scope: !2808)
!2813 = !DILocation(line: 686, column: 57, scope: !2809)
!2814 = !DILocation(line: 686, column: 14, scope: !2809)
!2815 = !DILocation(line: 686, column: 7, scope: !2809)
!2816 = !DILocation(line: 689, column: 12, scope: !2805)
!2817 = !DILocation(line: 689, column: 5, scope: !2805)
!2818 = !DILocation(line: 0, scope: !2805)
!2819 = !DILocation(line: 690, column: 1, scope: !2801)
!2820 = distinct !DISubprogram(name: "initialize_cold_section_name", scope: !3, file: !3, line: 651, type: !2666, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2821)
!2821 = !{!2822, !2823, !2824, !2825}
!2822 = !DILocalVariable(name: "stripped_name", scope: !2820, file: !3, line: 653, type: !628)
!2823 = !DILocalVariable(name: "name", scope: !2820, file: !3, line: 654, type: !625)
!2824 = !DILocalVariable(name: "buffer", scope: !2820, file: !3, line: 654, type: !625)
!2825 = !DILocalVariable(name: "dsn", scope: !2820, file: !3, line: 655, type: !639)
!2826 = !DILocation(line: 657, column: 3, scope: !2820)
!2827 = !DILocation(line: 658, column: 25, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 658, column: 7)
!2829 = !DILocation(line: 658, column: 7, scope: !2828)
!2830 = !DILocation(line: 658, column: 7, scope: !2820)
!2831 = !DILocation(line: 661, column: 9, scope: !2820)
!2832 = !DILocation(line: 0, scope: !2820)
!2833 = !DILocation(line: 662, column: 7, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 662, column: 7)
!2835 = !DILocation(line: 662, column: 33, scope: !2834)
!2836 = !DILocation(line: 662, column: 30, scope: !2834)
!2837 = !DILocation(line: 664, column: 23, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 663, column: 5)
!2839 = !DILocation(line: 665, column: 21, scope: !2838)
!2840 = !DILocation(line: 665, column: 7, scope: !2838)
!2841 = !DILocation(line: 667, column: 31, scope: !2838)
!2842 = !DILocation(line: 667, column: 23, scope: !2838)
!2843 = !DILocation(line: 669, column: 16, scope: !2838)
!2844 = !DILocation(line: 670, column: 54, scope: !2838)
!2845 = !DILocation(line: 670, column: 52, scope: !2838)
!2846 = !DILocation(line: 671, column: 5, scope: !2838)
!2847 = !DILocation(line: 673, column: 50, scope: !2834)
!2848 = !DILocation(line: 674, column: 1, scope: !2820)
!2849 = distinct !DISubprogram(name: "get_named_section", scope: !3, file: !3, line: 721, type: !2850, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2852)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!1044, !639, !628, !623}
!2852 = !{!2853, !2854, !2855, !2856}
!2853 = !DILocalVariable(name: "decl", arg: 1, scope: !2849, file: !3, line: 721, type: !639)
!2854 = !DILocalVariable(name: "name", arg: 2, scope: !2849, file: !3, line: 721, type: !628)
!2855 = !DILocalVariable(name: "reloc", arg: 3, scope: !2849, file: !3, line: 721, type: !623)
!2856 = !DILocalVariable(name: "flags", scope: !2849, file: !3, line: 723, type: !7)
!2857 = !DILocation(line: 0, scope: !2849)
!2858 = !DILocation(line: 725, column: 3, scope: !2849)
!2859 = !DILocation(line: 726, column: 12, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 726, column: 7)
!2861 = !DILocation(line: 726, column: 7, scope: !2849)
!2862 = !DILocation(line: 727, column: 12, scope: !2860)
!2863 = !DILocation(line: 727, column: 5, scope: !2860)
!2864 = !DILocation(line: 729, column: 19, scope: !2849)
!2865 = !DILocation(line: 729, column: 11, scope: !2849)
!2866 = !DILocation(line: 731, column: 10, scope: !2849)
!2867 = !DILocation(line: 731, column: 3, scope: !2849)
!2868 = distinct !DISubprogram(name: "unlikely_text_section_p", scope: !3, file: !3, line: 698, type: !2869, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2871)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{!622, !1044}
!2871 = !{!2872, !2873}
!2872 = !DILocalVariable(name: "sect", arg: 1, scope: !2868, file: !3, line: 698, type: !1044)
!2873 = !DILocalVariable(name: "name", scope: !2868, file: !3, line: 700, type: !628)
!2874 = !DILocation(line: 0, scope: !2868)
!2875 = !DILocation(line: 702, column: 7, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 702, column: 7)
!2877 = !DILocation(line: 702, column: 7, scope: !2868)
!2878 = !DILocation(line: 707, column: 11, scope: !2868)
!2879 = !DILocation(line: 708, column: 7, scope: !2868)
!2880 = !DILocation(line: 708, column: 4, scope: !2868)
!2881 = !DILocation(line: 709, column: 7, scope: !2868)
!2882 = !DILocation(line: 709, column: 28, scope: !2868)
!2883 = !DILocation(line: 710, column: 4, scope: !2868)
!2884 = !DILocation(line: 710, column: 33, scope: !2868)
!2885 = !DILocation(line: 710, column: 7, scope: !2868)
!2886 = !DILocation(line: 710, column: 39, scope: !2868)
!2887 = !DILocation(line: 707, column: 3, scope: !2868)
!2888 = distinct !DISubprogram(name: "resolve_unique_section", scope: !3, file: !3, line: 737, type: !2889, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2891)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !639, !623, !623}
!2891 = !{!2892, !2893, !2894}
!2892 = !DILocalVariable(name: "decl", arg: 1, scope: !2888, file: !3, line: 737, type: !639)
!2893 = !DILocalVariable(name: "reloc", arg: 2, scope: !2888, file: !3, line: 737, type: !623)
!2894 = !DILocalVariable(name: "flag_function_or_data_sections", arg: 3, scope: !2888, file: !3, line: 738, type: !623)
!2895 = !DILocation(line: 0, scope: !2888)
!2896 = !DILocation(line: 740, column: 7, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 740, column: 7)
!2898 = !DILocation(line: 740, column: 32, scope: !2897)
!2899 = !DILocation(line: 741, column: 7, scope: !2897)
!2900 = !DILocation(line: 741, column: 18, scope: !2897)
!2901 = !DILocation(line: 741, column: 10, scope: !2897)
!2902 = !DILocation(line: 742, column: 7, scope: !2897)
!2903 = !DILocation(line: 742, column: 11, scope: !2897)
!2904 = !DILocation(line: 743, column: 4, scope: !2897)
!2905 = !DILocation(line: 743, column: 7, scope: !2897)
!2906 = !DILocation(line: 740, column: 7, scope: !2888)
!2907 = !DILocation(line: 744, column: 21, scope: !2897)
!2908 = !DILocation(line: 744, column: 5, scope: !2897)
!2909 = !DILocation(line: 745, column: 1, scope: !2888)
!2910 = distinct !DISubprogram(name: "function_section", scope: !3, file: !3, line: 827, type: !2911, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2913)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!1044, !639}
!2913 = !{!2914, !2915}
!2914 = !DILocalVariable(name: "decl", arg: 1, scope: !2910, file: !3, line: 827, type: !639)
!2915 = !DILocalVariable(name: "reloc", scope: !2910, file: !3, line: 829, type: !623)
!2916 = !DILocation(line: 0, scope: !2910)
!2917 = !DILocation(line: 831, column: 7, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 831, column: 7)
!2919 = !DILocation(line: 842, column: 10, scope: !2910)
!2920 = !DILocation(line: 842, column: 18, scope: !2910)
!2921 = !DILocation(line: 842, column: 45, scope: !2910)
!2922 = !DILocation(line: 842, column: 3, scope: !2910)
!2923 = distinct !DISubprogram(name: "hot_function_section", scope: !3, file: !3, line: 810, type: !2911, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2924)
!2924 = !{!2925}
!2925 = !DILocalVariable(name: "decl", arg: 1, scope: !2923, file: !3, line: 810, type: !639)
!2926 = !DILocation(line: 0, scope: !2923)
!2927 = !DILocation(line: 812, column: 12, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 812, column: 7)
!2929 = !DILocation(line: 813, column: 7, scope: !2928)
!2930 = !DILocation(line: 813, column: 10, scope: !2928)
!2931 = !DILocation(line: 813, column: 35, scope: !2928)
!2932 = !DILocation(line: 814, column: 7, scope: !2928)
!2933 = !DILocation(line: 814, column: 18, scope: !2928)
!2934 = !DILocation(line: 814, column: 10, scope: !2928)
!2935 = !DILocation(line: 812, column: 7, scope: !2923)
!2936 = !DILocation(line: 815, column: 12, scope: !2928)
!2937 = !DILocation(line: 815, column: 5, scope: !2928)
!2938 = !DILocation(line: 817, column: 12, scope: !2928)
!2939 = !DILocation(line: 817, column: 5, scope: !2928)
!2940 = !DILocation(line: 0, scope: !2928)
!2941 = !DILocation(line: 818, column: 1, scope: !2923)
!2942 = distinct !DISubprogram(name: "current_function_section", scope: !3, file: !3, line: 847, type: !2802, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!2943 = !DILocation(line: 860, column: 11, scope: !2942)
!2944 = !DILocation(line: 861, column: 6, scope: !2942)
!2945 = !DILocation(line: 862, column: 28, scope: !2942)
!2946 = !DILocation(line: 862, column: 6, scope: !2942)
!2947 = !DILocation(line: 860, column: 3, scope: !2942)
!2948 = distinct !DISubprogram(name: "default_function_rodata_section", scope: !3, file: !3, line: 869, type: !2911, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2949)
!2949 = !{!2950, !2951, !2954, !2957, !2958, !2959, !2962, !2963, !2966}
!2950 = !DILocalVariable(name: "decl", arg: 1, scope: !2948, file: !3, line: 869, type: !639)
!2951 = !DILocalVariable(name: "name", scope: !2952, file: !3, line: 873, type: !628)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 872, column: 5)
!2953 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 871, column: 7)
!2954 = !DILocalVariable(name: "dot", scope: !2955, file: !3, line: 877, type: !628)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 876, column: 9)
!2956 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 875, column: 11)
!2957 = !DILocalVariable(name: "len", scope: !2955, file: !3, line: 878, type: !1241)
!2958 = !DILocalVariable(name: "rname", scope: !2955, file: !3, line: 879, type: !625)
!2959 = !DILocalVariable(name: "len", scope: !2960, file: !3, line: 895, type: !1241)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 894, column: 2)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 892, column: 16)
!2962 = !DILocalVariable(name: "rname", scope: !2960, file: !3, line: 896, type: !625)
!2963 = !DILocalVariable(name: "len", scope: !2964, file: !3, line: 906, type: !1241)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 905, column: 2)
!2965 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 903, column: 16)
!2966 = !DILocalVariable(name: "rname", scope: !2964, file: !3, line: 907, type: !625)
!2967 = !DILocation(line: 0, scope: !2948)
!2968 = !DILocation(line: 871, column: 12, scope: !2953)
!2969 = !DILocation(line: 871, column: 25, scope: !2953)
!2970 = !DILocation(line: 871, column: 28, scope: !2953)
!2971 = !DILocation(line: 871, column: 7, scope: !2948)
!2972 = !DILocation(line: 873, column: 26, scope: !2952)
!2973 = !DILocation(line: 0, scope: !2952)
!2974 = !DILocation(line: 875, column: 11, scope: !2956)
!2975 = !DILocation(line: 875, column: 11, scope: !2952)
!2976 = !DILocation(line: 881, column: 23, scope: !2955)
!2977 = !DILocation(line: 881, column: 10, scope: !2955)
!2978 = !DILocation(line: 0, scope: !2955)
!2979 = !DILocation(line: 882, column: 9, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 882, column: 8)
!2981 = !DILocation(line: 882, column: 8, scope: !2955)
!2982 = !DILocation(line: 884, column: 10, scope: !2955)
!2983 = !DILocation(line: 884, column: 23, scope: !2955)
!2984 = !DILocation(line: 885, column: 21, scope: !2955)
!2985 = !DILocation(line: 887, column: 4, scope: !2955)
!2986 = !DILocation(line: 888, column: 4, scope: !2955)
!2987 = !DILocation(line: 889, column: 11, scope: !2955)
!2988 = !DILocation(line: 893, column: 9, scope: !2961)
!2989 = !DILocation(line: 903, column: 16, scope: !2965)
!2990 = !DILocation(line: 903, column: 42, scope: !2965)
!2991 = !DILocation(line: 892, column: 16, scope: !2956)
!2992 = !DILocation(line: 903, column: 39, scope: !2965)
!2993 = !DILocation(line: 904, column: 12, scope: !2965)
!2994 = !DILocation(line: 904, column: 40, scope: !2965)
!2995 = !DILocation(line: 903, column: 16, scope: !2961)
!2996 = !DILocation(line: 906, column: 17, scope: !2964)
!2997 = !DILocation(line: 0, scope: !2964)
!2998 = !DILocation(line: 907, column: 27, scope: !2964)
!2999 = !DILocation(line: 909, column: 4, scope: !2964)
!3000 = !DILocation(line: 910, column: 18, scope: !2964)
!3001 = !DILocation(line: 910, column: 28, scope: !2964)
!3002 = !DILocation(line: 910, column: 37, scope: !2964)
!3003 = !DILocation(line: 910, column: 4, scope: !2964)
!3004 = !DILocation(line: 911, column: 11, scope: !2964)
!3005 = !DILocation(line: 915, column: 10, scope: !2948)
!3006 = !DILocation(line: 915, column: 3, scope: !2948)
!3007 = !DILocation(line: 916, column: 1, scope: !2948)
!3008 = distinct !DISubprogram(name: "default_no_function_rodata_section", scope: !3, file: !3, line: 923, type: !2911, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3009)
!3009 = !{!3010}
!3010 = !DILocalVariable(name: "decl", arg: 1, scope: !3008, file: !3, line: 923, type: !639)
!3011 = !DILocation(line: 0, scope: !3008)
!3012 = !DILocation(line: 925, column: 10, scope: !3008)
!3013 = !DILocation(line: 925, column: 3, scope: !3008)
!3014 = distinct !DISubprogram(name: "mergeable_constant_section", scope: !3, file: !3, line: 987, type: !3015, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3017)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!1044, !5, !692, !7}
!3017 = !{!3018, !3019, !3020, !3021, !3022}
!3018 = !DILocalVariable(name: "mode", arg: 1, scope: !3014, file: !3, line: 987, type: !5)
!3019 = !DILocalVariable(name: "align", arg: 2, scope: !3014, file: !3, line: 988, type: !692)
!3020 = !DILocalVariable(name: "flags", arg: 3, scope: !3014, file: !3, line: 989, type: !7)
!3021 = !DILocalVariable(name: "modesize", scope: !3014, file: !3, line: 991, type: !7)
!3022 = !DILocalVariable(name: "name", scope: !3023, file: !3, line: 1001, type: !3025)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1000, column: 5)
!3024 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 993, column: 7)
!3025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 192, elements: !1786)
!3026 = !DILocation(line: 0, scope: !3014)
!3027 = !DILocation(line: 991, column: 27, scope: !3014)
!3028 = !DILocation(line: 993, column: 29, scope: !3024)
!3029 = !DILocation(line: 994, column: 7, scope: !3024)
!3030 = !DILocation(line: 996, column: 19, scope: !3024)
!3031 = !DILocation(line: 999, column: 32, scope: !3024)
!3032 = !{i64 0, i64 65}
!3033 = !DILocation(line: 993, column: 7, scope: !3014)
!3034 = !DILocation(line: 1001, column: 7, scope: !3023)
!3035 = !DILocation(line: 1001, column: 12, scope: !3023)
!3036 = !DILocation(line: 1003, column: 52, scope: !3023)
!3037 = !DILocation(line: 1003, column: 39, scope: !3023)
!3038 = !DILocation(line: 1003, column: 7, scope: !3023)
!3039 = !DILocation(line: 1004, column: 13, scope: !3023)
!3040 = !DILocation(line: 1005, column: 14, scope: !3023)
!3041 = !DILocation(line: 1006, column: 5, scope: !3024)
!3042 = !DILocation(line: 1007, column: 10, scope: !3014)
!3043 = !DILocation(line: 1007, column: 3, scope: !3014)
!3044 = !DILocation(line: 1008, column: 1, scope: !3014)
!3045 = distinct !DISubprogram(name: "set_user_assembler_name", scope: !3, file: !3, line: 1028, type: !3046, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3048)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !639, !628}
!3048 = !{!3049, !3050, !3051}
!3049 = !DILocalVariable(name: "decl", arg: 1, scope: !3045, file: !3, line: 1028, type: !639)
!3050 = !DILocalVariable(name: "name", arg: 2, scope: !3045, file: !3, line: 1028, type: !628)
!3051 = !DILocalVariable(name: "starred", scope: !3045, file: !3, line: 1030, type: !625)
!3052 = !DILocation(line: 0, scope: !3045)
!3053 = !DILocation(line: 1030, column: 28, scope: !3045)
!3054 = !DILocation(line: 1031, column: 14, scope: !3045)
!3055 = !DILocation(line: 1032, column: 19, scope: !3045)
!3056 = !DILocation(line: 1032, column: 3, scope: !3045)
!3057 = !DILocation(line: 1033, column: 37, scope: !3045)
!3058 = !DILocation(line: 1033, column: 3, scope: !3045)
!3059 = !DILocation(line: 1034, column: 3, scope: !3045)
!3060 = !DILocation(line: 1035, column: 1, scope: !3045)
!3061 = !DILocation(line: 0, scope: !1770)
!3062 = !DILocation(line: 1048, column: 15, scope: !1777)
!3063 = !DILocation(line: 1048, column: 7, scope: !1770)
!3064 = !DILocation(line: 1053, column: 17, scope: !1776)
!3065 = !DILocation(line: 1056, column: 16, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1056, column: 7)
!3067 = !DILocation(line: 0, scope: !1776)
!3068 = !DILocation(line: 1056, column: 12, scope: !3066)
!3069 = !DILocation(line: 0, scope: !3066)
!3070 = !DILocation(line: 1056, column: 40, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 1056, column: 7)
!3072 = !DILocation(line: 1056, column: 7, scope: !3066)
!3073 = !DILocation(line: 1057, column: 8, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 1057, column: 6)
!3075 = !DILocation(line: 1057, column: 6, scope: !3071)
!3076 = !DILocation(line: 1056, column: 7, scope: !3071)
!3077 = distinct !{!3077, !3072, !3078}
!3078 = !DILocation(line: 1058, column: 4, scope: !3066)
!3079 = !DILocation(line: 1059, column: 11, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1059, column: 11)
!3081 = !DILocation(line: 1059, column: 22, scope: !3080)
!3082 = !DILocation(line: 1059, column: 32, scope: !3080)
!3083 = !DILocation(line: 1059, column: 27, scope: !3080)
!3084 = !DILocation(line: 1068, column: 7, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1068, column: 7)
!3086 = !DILocation(line: 1061, column: 8, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 1060, column: 2)
!3088 = !DILocation(line: 1062, column: 34, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1062, column: 8)
!3090 = !DILocation(line: 0, scope: !3085)
!3091 = !DILocation(line: 1068, column: 21, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 1068, column: 7)
!3093 = !DILocation(line: 1078, column: 2, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 1078, column: 2)
!3095 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1074, column: 7)
!3096 = !DILocation(line: 1069, column: 6, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 1069, column: 6)
!3098 = !DILocation(line: 1070, column: 6, scope: !3097)
!3099 = !DILocation(line: 1070, column: 28, scope: !3097)
!3100 = !DILocation(line: 1070, column: 11, scope: !3097)
!3101 = !DILocation(line: 1069, column: 6, scope: !3092)
!3102 = !DILocation(line: 1068, column: 47, scope: !3092)
!3103 = !DILocation(line: 1068, column: 7, scope: !3092)
!3104 = distinct !{!3104, !3084, !3105}
!3105 = !DILocation(line: 1071, column: 11, scope: !3085)
!3106 = !DILocation(line: 0, scope: !3094)
!3107 = !DILocation(line: 1078, column: 16, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 1078, column: 2)
!3109 = !DILocation(line: 1079, column: 17, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 1079, column: 8)
!3111 = !DILocation(line: 1079, column: 8, scope: !3110)
!3112 = !DILocation(line: 1080, column: 8, scope: !3110)
!3113 = !DILocation(line: 1080, column: 13, scope: !3110)
!3114 = !DILocation(line: 1079, column: 8, scope: !3108)
!3115 = !DILocation(line: 1081, column: 22, scope: !3110)
!3116 = !DILocation(line: 1081, column: 6, scope: !3110)
!3117 = !DILocation(line: 1078, column: 45, scope: !3108)
!3118 = !DILocation(line: 1078, column: 2, scope: !3108)
!3119 = distinct !{!3119, !3093, !3120}
!3120 = !DILocation(line: 1081, column: 22, scope: !3094)
!3121 = !DILocation(line: 1085, column: 12, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1085, column: 11)
!3123 = !DILocation(line: 1085, column: 11, scope: !1776)
!3124 = !DILocation(line: 1088, column: 12, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 1088, column: 11)
!3126 = !DILocation(line: 1095, column: 1, scope: !1770)
!3127 = distinct !DISubprogram(name: "strip_reg_name", scope: !3, file: !3, line: 1013, type: !3128, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3130)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!628, !628}
!3130 = !{!3131}
!3131 = !DILocalVariable(name: "name", arg: 1, scope: !3127, file: !3, line: 1013, type: !628)
!3132 = !DILocation(line: 0, scope: !3127)
!3133 = !DILocation(line: 1019, column: 7, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 1019, column: 7)
!3135 = !DILocation(line: 1019, column: 15, scope: !3134)
!3136 = !DILocation(line: 1019, column: 22, scope: !3134)
!3137 = !DILocation(line: 1019, column: 33, scope: !3134)
!3138 = !DILocation(line: 1019, column: 7, scope: !3127)
!3139 = !DILocation(line: 1020, column: 9, scope: !3134)
!3140 = !DILocation(line: 1020, column: 5, scope: !3134)
!3141 = !DILocation(line: 1021, column: 3, scope: !3127)
!3142 = distinct !DISubprogram(name: "align_variable", scope: !3, file: !3, line: 1115, type: !3143, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3145)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{null, !639, !622}
!3145 = !{!3146, !3147, !3148, !3149, !3152}
!3146 = !DILocalVariable(name: "decl", arg: 1, scope: !3142, file: !3, line: 1115, type: !639)
!3147 = !DILocalVariable(name: "dont_output_data", arg: 2, scope: !3142, file: !3, line: 1115, type: !622)
!3148 = !DILocalVariable(name: "align", scope: !3142, file: !3, line: 1117, type: !7)
!3149 = !DILocalVariable(name: "data_align", scope: !3150, file: !3, line: 1140, type: !7)
!3150 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 1138, column: 5)
!3151 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1137, column: 7)
!3152 = !DILocalVariable(name: "const_align", scope: !3153, file: !3, line: 1149, type: !7)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1148, column: 2)
!3154 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1147, column: 11)
!3155 = !DILocation(line: 0, scope: !3142)
!3156 = !DILocation(line: 1117, column: 24, scope: !3142)
!3157 = !DILocation(line: 1122, column: 7, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1122, column: 7)
!3159 = !DILocation(line: 1122, column: 24, scope: !3158)
!3160 = !DILocation(line: 1122, column: 27, scope: !3158)
!3161 = !DILocation(line: 1122, column: 44, scope: !3158)
!3162 = !DILocation(line: 1123, column: 7, scope: !3158)
!3163 = !DILocation(line: 1123, column: 10, scope: !3158)
!3164 = !DILocation(line: 1123, column: 39, scope: !3158)
!3165 = !DILocation(line: 1122, column: 7, scope: !3142)
!3166 = !DILocation(line: 1124, column: 13, scope: !3158)
!3167 = !DILocation(line: 1128, column: 13, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1128, column: 7)
!3169 = !DILocation(line: 1128, column: 7, scope: !3142)
!3170 = !DILocation(line: 1130, column: 7, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1129, column: 5)
!3172 = !DILocation(line: 1134, column: 5, scope: !3171)
!3173 = !DILocation(line: 1137, column: 9, scope: !3151)
!3174 = !DILocation(line: 1137, column: 7, scope: !3142)
!3175 = !DILocation(line: 1140, column: 33, scope: !3150)
!3176 = !DILocation(line: 0, scope: !3150)
!3177 = !DILocation(line: 1143, column: 13, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1143, column: 11)
!3179 = !DILocation(line: 1143, column: 54, scope: !3178)
!3180 = !DILocation(line: 1143, column: 40, scope: !3178)
!3181 = !DILocation(line: 1147, column: 11, scope: !3154)
!3182 = !DILocation(line: 1147, column: 31, scope: !3154)
!3183 = !DILocation(line: 1147, column: 36, scope: !3154)
!3184 = !DILocation(line: 1147, column: 62, scope: !3154)
!3185 = !DILocation(line: 1147, column: 59, scope: !3154)
!3186 = !DILocation(line: 1147, column: 11, scope: !3150)
!3187 = !DILocation(line: 1149, column: 31, scope: !3153)
!3188 = !DILocation(line: 0, scope: !3153)
!3189 = !DILocation(line: 1153, column: 10, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 1153, column: 8)
!3191 = !DILocation(line: 1153, column: 52, scope: !3190)
!3192 = !DILocation(line: 1153, column: 37, scope: !3190)
!3193 = !DILocation(line: 1161, column: 21, scope: !3142)
!3194 = !DILocation(line: 1162, column: 1, scope: !3142)
!3195 = distinct !DISubprogram(name: "make_decl_rtl", scope: !3, file: !3, line: 1302, type: !3196, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3198)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{null, !639}
!3198 = !{!3199, !3200, !3201, !3202, !3203, !3207, !3213, !3216}
!3199 = !DILocalVariable(name: "decl", arg: 1, scope: !3195, file: !3, line: 1302, type: !639)
!3200 = !DILocalVariable(name: "name", scope: !3195, file: !3, line: 1304, type: !628)
!3201 = !DILocalVariable(name: "reg_number", scope: !3195, file: !3, line: 1305, type: !623)
!3202 = !DILocalVariable(name: "x", scope: !3195, file: !3, line: 1306, type: !811)
!3203 = !DILocalVariable(name: "asmspec", scope: !3204, file: !3, line: 1368, type: !628)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 1367, column: 5)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 1366, column: 12)
!3206 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1361, column: 7)
!3207 = !DILocalVariable(name: "nregs", scope: !3208, file: !3, line: 1384, type: !623)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1383, column: 2)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 1378, column: 16)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 1375, column: 16)
!3211 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 1373, column: 16)
!3212 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 1371, column: 11)
!3213 = !DILocalVariable(name: "address_mode", scope: !3214, file: !3, line: 1456, type: !5)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 1455, column: 5)
!3215 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1452, column: 7)
!3216 = !DILocalVariable(name: "as", scope: !3217, file: !3, line: 1459, type: !3219)
!3217 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 1458, column: 2)
!3218 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 1457, column: 11)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !572, line: 73, baseType: !622)
!3220 = !DILocation(line: 0, scope: !3195)
!3221 = !DILocation(line: 1309, column: 3, scope: !3195)
!3222 = !DILocation(line: 1313, column: 3, scope: !3195)
!3223 = !DILocation(line: 1320, column: 3, scope: !3195)
!3224 = !DILocation(line: 1325, column: 7, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1325, column: 7)
!3226 = !DILocation(line: 1325, column: 7, scope: !3195)
!3227 = !DILocation(line: 1328, column: 11, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1326, column: 5)
!3229 = !DILocation(line: 0, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 1329, column: 11)
!3231 = !DILocation(line: 1329, column: 11, scope: !3230)
!3232 = !DILocation(line: 1329, column: 27, scope: !3230)
!3233 = !DILocation(line: 1329, column: 24, scope: !3230)
!3234 = !DILocation(line: 1329, column: 11, scope: !3228)
!3235 = !DILocation(line: 1330, column: 2, scope: !3230)
!3236 = !DILocation(line: 1332, column: 11, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 1332, column: 11)
!3238 = !DILocation(line: 1332, column: 28, scope: !3237)
!3239 = !DILocation(line: 1332, column: 45, scope: !3237)
!3240 = !DILocation(line: 1332, column: 48, scope: !3237)
!3241 = !DILocation(line: 1332, column: 11, scope: !3228)
!3242 = !DILocation(line: 1343, column: 15, scope: !3228)
!3243 = !DILocation(line: 1343, column: 42, scope: !3228)
!3244 = !DILocation(line: 1343, column: 7, scope: !3228)
!3245 = !DILocation(line: 1347, column: 11, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 1347, column: 11)
!3247 = !DILocation(line: 1348, column: 4, scope: !3246)
!3248 = !DILocation(line: 1348, column: 7, scope: !3246)
!3249 = !DILocation(line: 1348, column: 30, scope: !3246)
!3250 = !DILocation(line: 1349, column: 4, scope: !3246)
!3251 = !DILocation(line: 1349, column: 7, scope: !3246)
!3252 = !DILocation(line: 1347, column: 11, scope: !3228)
!3253 = !DILocation(line: 1350, column: 36, scope: !3246)
!3254 = !DILocation(line: 1350, column: 2, scope: !3246)
!3255 = !DILocation(line: 1353, column: 11, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 1353, column: 11)
!3257 = !DILocation(line: 1353, column: 24, scope: !3256)
!3258 = !DILocation(line: 1353, column: 27, scope: !3256)
!3259 = !DILocation(line: 1353, column: 44, scope: !3256)
!3260 = !DILocation(line: 1353, column: 11, scope: !3228)
!3261 = !DILocation(line: 1354, column: 2, scope: !3256)
!3262 = !DILocation(line: 1359, column: 10, scope: !3195)
!3263 = !DILocation(line: 1361, column: 7, scope: !3206)
!3264 = !DILocation(line: 1361, column: 15, scope: !3206)
!3265 = !DILocation(line: 1361, column: 22, scope: !3206)
!3266 = !DILocation(line: 1366, column: 12, scope: !3205)
!3267 = !DILocation(line: 1366, column: 29, scope: !3205)
!3268 = !DILocation(line: 1361, column: 25, scope: !3206)
!3269 = !DILocation(line: 1361, column: 42, scope: !3206)
!3270 = !DILocation(line: 1362, column: 7, scope: !3206)
!3271 = !DILocation(line: 1362, column: 10, scope: !3206)
!3272 = !DILocation(line: 1361, column: 7, scope: !3195)
!3273 = !DILocation(line: 1364, column: 7, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 1363, column: 5)
!3275 = !DILocation(line: 1365, column: 5, scope: !3274)
!3276 = !DILocation(line: 1366, column: 46, scope: !3205)
!3277 = !DILocation(line: 1366, column: 49, scope: !3205)
!3278 = !DILocation(line: 1366, column: 12, scope: !3206)
!3279 = !DILocation(line: 1368, column: 33, scope: !3204)
!3280 = !DILocation(line: 0, scope: !3204)
!3281 = !DILocation(line: 1369, column: 20, scope: !3204)
!3282 = !DILocation(line: 1371, column: 22, scope: !3212)
!3283 = !DILocation(line: 1371, column: 11, scope: !3204)
!3284 = !DILocation(line: 1372, column: 2, scope: !3212)
!3285 = !DILocation(line: 1373, column: 27, scope: !3211)
!3286 = !DILocation(line: 1373, column: 16, scope: !3212)
!3287 = !DILocation(line: 1374, column: 2, scope: !3211)
!3288 = !DILocation(line: 1375, column: 16, scope: !3210)
!3289 = !DILocation(line: 1375, column: 45, scope: !3210)
!3290 = !DILocation(line: 1375, column: 16, scope: !3211)
!3291 = !DILocation(line: 1376, column: 2, scope: !3210)
!3292 = !DILocation(line: 1378, column: 18, scope: !3209)
!3293 = !DILocation(line: 1378, column: 16, scope: !3210)
!3294 = !DILocation(line: 1379, column: 2, scope: !3209)
!3295 = !DILocation(line: 1386, column: 8, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1386, column: 8)
!3297 = !DILocation(line: 1386, column: 28, scope: !3296)
!3298 = !DILocation(line: 1386, column: 33, scope: !3296)
!3299 = !DILocation(line: 1386, column: 36, scope: !3296)
!3300 = !DILocation(line: 1386, column: 8, scope: !3208)
!3301 = !DILocation(line: 1388, column: 28, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 1387, column: 6)
!3303 = !DILocation(line: 1389, column: 8, scope: !3302)
!3304 = !DILocation(line: 1390, column: 6, scope: !3302)
!3305 = !DILocation(line: 1391, column: 8, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1391, column: 8)
!3307 = !DILocation(line: 1391, column: 8, scope: !3208)
!3308 = !DILocation(line: 1392, column: 6, scope: !3306)
!3309 = !DILocation(line: 1401, column: 4, scope: !3208)
!3310 = !DILocation(line: 1402, column: 4, scope: !3208)
!3311 = !DILocation(line: 1402, column: 37, scope: !3208)
!3312 = !DILocation(line: 1403, column: 4, scope: !3208)
!3313 = !DILocation(line: 0, scope: !3208)
!3314 = !DILocation(line: 1403, column: 36, scope: !3208)
!3315 = !DILocation(line: 1405, column: 8, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1405, column: 8)
!3317 = !DILocation(line: 1405, column: 8, scope: !3208)
!3318 = !DILocation(line: 1413, column: 16, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 1406, column: 6)
!3320 = !DILocation(line: 1413, column: 45, scope: !3319)
!3321 = !DILocation(line: 1414, column: 8, scope: !3319)
!3322 = !DILocation(line: 0, scope: !3319)
!3323 = !DILocation(line: 1414, column: 21, scope: !3319)
!3324 = !DILocation(line: 1415, column: 31, scope: !3319)
!3325 = !DILocation(line: 1415, column: 29, scope: !3319)
!3326 = !DILocation(line: 1415, column: 3, scope: !3319)
!3327 = distinct !{!3327, !3321, !3328}
!3328 = !DILocation(line: 1415, column: 38, scope: !3319)
!3329 = !DILocation(line: 1442, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1442, column: 7)
!3331 = !DILocation(line: 1442, column: 24, scope: !3330)
!3332 = !DILocation(line: 1443, column: 7, scope: !3330)
!3333 = !DILocation(line: 1443, column: 10, scope: !3330)
!3334 = !DILocation(line: 1443, column: 35, scope: !3330)
!3335 = !DILocation(line: 1444, column: 7, scope: !3330)
!3336 = !DILocation(line: 1444, column: 10, scope: !3330)
!3337 = !DILocation(line: 1444, column: 30, scope: !3330)
!3338 = !DILocation(line: 1445, column: 7, scope: !3330)
!3339 = !DILocation(line: 1445, column: 10, scope: !3330)
!3340 = !DILocation(line: 1442, column: 7, scope: !3195)
!3341 = !DILocation(line: 1446, column: 24, scope: !3330)
!3342 = !DILocation(line: 1446, column: 5, scope: !3330)
!3343 = !DILocation(line: 1449, column: 36, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1449, column: 7)
!3345 = !DILocation(line: 1449, column: 39, scope: !3344)
!3346 = !DILocation(line: 1449, column: 7, scope: !3195)
!3347 = !DILocation(line: 1450, column: 24, scope: !3344)
!3348 = !DILocation(line: 1450, column: 5, scope: !3344)
!3349 = !DILocation(line: 1452, column: 7, scope: !3215)
!3350 = !DILocation(line: 1452, column: 30, scope: !3215)
!3351 = !DILocation(line: 1452, column: 33, scope: !3215)
!3352 = !DILocation(line: 1452, column: 7, scope: !3195)
!3353 = !DILocation(line: 1453, column: 36, scope: !3215)
!3354 = !DILocation(line: 1453, column: 9, scope: !3215)
!3355 = !DILocation(line: 1453, column: 5, scope: !3215)
!3356 = !DILocation(line: 0, scope: !3214)
!3357 = !DILocation(line: 1457, column: 11, scope: !3218)
!3358 = !DILocation(line: 1457, column: 31, scope: !3218)
!3359 = !DILocation(line: 1457, column: 28, scope: !3218)
!3360 = !DILocation(line: 1457, column: 11, scope: !3214)
!3361 = !DILocation(line: 1459, column: 22, scope: !3217)
!3362 = !DILocation(line: 0, scope: !3217)
!3363 = !DILocation(line: 1460, column: 38, scope: !3217)
!3364 = !DILocation(line: 1460, column: 19, scope: !3217)
!3365 = !DILocation(line: 1461, column: 2, scope: !3217)
!3366 = !DILocation(line: 1462, column: 11, scope: !3214)
!3367 = !DILocation(line: 0, scope: !3215)
!3368 = !DILocation(line: 1464, column: 25, scope: !3195)
!3369 = !DILocation(line: 1464, column: 3, scope: !3195)
!3370 = !DILocation(line: 1464, column: 23, scope: !3195)
!3371 = !DILocation(line: 1465, column: 3, scope: !3195)
!3372 = !DILocation(line: 1467, column: 20, scope: !3195)
!3373 = !DILocation(line: 1467, column: 7, scope: !3195)
!3374 = !DILocation(line: 1468, column: 7, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1468, column: 7)
!3376 = !DILocation(line: 1468, column: 24, scope: !3375)
!3377 = !DILocation(line: 1468, column: 7, scope: !3195)
!3378 = !DILocation(line: 1469, column: 5, scope: !3375)
!3379 = !DILocation(line: 1470, column: 3, scope: !3195)
!3380 = !DILocation(line: 1476, column: 11, scope: !3195)
!3381 = !DILocation(line: 1476, column: 38, scope: !3195)
!3382 = !DILocation(line: 1476, column: 3, scope: !3195)
!3383 = !DILocation(line: 1479, column: 7, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 1479, column: 7)
!3385 = !DILocation(line: 1479, column: 20, scope: !3384)
!3386 = !DILocation(line: 1479, column: 23, scope: !3384)
!3387 = !DILocation(line: 1479, column: 40, scope: !3384)
!3388 = !DILocation(line: 1479, column: 7, scope: !3195)
!3389 = !DILocation(line: 1480, column: 5, scope: !3384)
!3390 = !DILocation(line: 1481, column: 1, scope: !3195)
!3391 = distinct !DISubprogram(name: "change_symbol_block", scope: !3, file: !3, line: 1260, type: !3392, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3394)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{null, !811, !1040}
!3394 = !{!3395, !3396}
!3395 = !DILocalVariable(name: "symbol", arg: 1, scope: !3391, file: !3, line: 1260, type: !811)
!3396 = !DILocalVariable(name: "block", arg: 2, scope: !3391, file: !3, line: 1260, type: !1040)
!3397 = !DILocation(line: 0, scope: !3391)
!3398 = !DILocation(line: 1262, column: 16, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 1262, column: 7)
!3400 = !DILocation(line: 1262, column: 13, scope: !3399)
!3401 = !DILocation(line: 1262, column: 7, scope: !3391)
!3402 = !DILocation(line: 1264, column: 7, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1263, column: 5)
!3404 = !DILocation(line: 1265, column: 33, scope: !3403)
!3405 = !DILocation(line: 1266, column: 5, scope: !3403)
!3406 = !DILocation(line: 1267, column: 1, scope: !3391)
!3407 = distinct !DISubprogram(name: "get_block_for_decl", scope: !3, file: !3, line: 1223, type: !3408, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!1040, !639}
!3410 = !{!3411, !3412}
!3411 = !DILocalVariable(name: "decl", arg: 1, scope: !3407, file: !3, line: 1223, type: !639)
!3412 = !DILocalVariable(name: "sect", scope: !3407, file: !3, line: 1225, type: !1044)
!3413 = !DILocation(line: 0, scope: !3407)
!3414 = !DILocation(line: 1227, column: 7, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1227, column: 7)
!3416 = !DILocation(line: 1227, column: 24, scope: !3415)
!3417 = !DILocation(line: 1227, column: 7, scope: !3407)
!3418 = !DILocation(line: 1230, column: 11, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 1230, column: 11)
!3420 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 1228, column: 5)
!3421 = !DILocation(line: 1230, column: 11, scope: !3420)
!3422 = !DILocation(line: 1235, column: 11, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 1235, column: 11)
!3424 = !DILocation(line: 1235, column: 11, scope: !3420)
!3425 = !DILocation(line: 1241, column: 7, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1241, column: 7)
!3427 = !DILocation(line: 1241, column: 29, scope: !3426)
!3428 = !DILocation(line: 1241, column: 7, scope: !3407)
!3429 = !DILocation(line: 1243, column: 8, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1243, column: 7)
!3431 = !DILocation(line: 1243, column: 7, scope: !3407)
!3432 = !DILocation(line: 1248, column: 7, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1248, column: 7)
!3434 = !DILocation(line: 1248, column: 24, scope: !3433)
!3435 = !DILocation(line: 1248, column: 7, scope: !3407)
!3436 = !DILocation(line: 1249, column: 7, scope: !3433)
!3437 = !DILocation(line: 1250, column: 10, scope: !3407)
!3438 = !DILocation(line: 1251, column: 7, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 1251, column: 7)
!3440 = !DILocation(line: 1251, column: 28, scope: !3439)
!3441 = !DILocation(line: 1251, column: 7, scope: !3407)
!3442 = !DILocation(line: 1254, column: 10, scope: !3407)
!3443 = !DILocation(line: 1254, column: 3, scope: !3407)
!3444 = !DILocation(line: 1255, column: 1, scope: !3407)
!3445 = distinct !DISubprogram(name: "use_object_blocks_p", scope: !3, file: !3, line: 590, type: !3446, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!622}
!3448 = !DILocation(line: 592, column: 10, scope: !3445)
!3449 = !DILocation(line: 592, column: 3, scope: !3445)
!3450 = distinct !DISubprogram(name: "use_blocks_for_decl_p", scope: !3, file: !3, line: 1272, type: !3451, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3453)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!622, !639}
!3453 = !{!3454}
!3454 = !DILocalVariable(name: "decl", arg: 1, scope: !3450, file: !3, line: 1272, type: !639)
!3455 = !DILocation(line: 0, scope: !3450)
!3456 = !DILocation(line: 1275, column: 7, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 1275, column: 7)
!3458 = !DILocation(line: 1275, column: 24, scope: !3457)
!3459 = !DILocation(line: 1275, column: 36, scope: !3457)
!3460 = !DILocation(line: 1275, column: 56, scope: !3457)
!3461 = !DILocation(line: 1275, column: 7, scope: !3450)
!3462 = !DILocation(line: 1282, column: 7, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 1282, column: 7)
!3464 = !DILocation(line: 1282, column: 27, scope: !3463)
!3465 = !DILocation(line: 1282, column: 7, scope: !3450)
!3466 = !DILocation(line: 1286, column: 34, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 1286, column: 7)
!3468 = !DILocation(line: 1286, column: 7, scope: !3467)
!3469 = !DILocation(line: 1290, column: 1, scope: !3450)
!3470 = distinct !DISubprogram(name: "create_block_symbol", scope: !3, file: !3, line: 626, type: !3471, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!811, !628, !1040, !694}
!3473 = !{!3474, !3475, !3476, !3477, !3478}
!3474 = !DILocalVariable(name: "label", arg: 1, scope: !3470, file: !3, line: 626, type: !628)
!3475 = !DILocalVariable(name: "block", arg: 2, scope: !3470, file: !3, line: 626, type: !1040)
!3476 = !DILocalVariable(name: "offset", arg: 3, scope: !3470, file: !3, line: 627, type: !694)
!3477 = !DILocalVariable(name: "symbol", scope: !3470, file: !3, line: 629, type: !811)
!3478 = !DILocalVariable(name: "size", scope: !3470, file: !3, line: 630, type: !7)
!3479 = !DILocation(line: 0, scope: !3470)
!3480 = !DILocation(line: 634, column: 18, scope: !3470)
!3481 = !DILocation(line: 634, column: 12, scope: !3470)
!3482 = !DILocation(line: 637, column: 3, scope: !3470)
!3483 = !DILocation(line: 638, column: 3, scope: !3470)
!3484 = !DILocation(line: 639, column: 3, scope: !3470)
!3485 = !DILocation(line: 640, column: 3, scope: !3470)
!3486 = !DILocation(line: 640, column: 20, scope: !3470)
!3487 = !DILocation(line: 641, column: 3, scope: !3470)
!3488 = !DILocation(line: 641, column: 29, scope: !3470)
!3489 = !DILocation(line: 644, column: 3, scope: !3470)
!3490 = !DILocation(line: 644, column: 29, scope: !3470)
!3491 = !DILocation(line: 645, column: 3, scope: !3470)
!3492 = !DILocation(line: 645, column: 36, scope: !3470)
!3493 = !DILocation(line: 647, column: 3, scope: !3470)
!3494 = distinct !DISubprogram(name: "make_decl_rtl_for_debug", scope: !3, file: !3, line: 1488, type: !3495, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3497)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!811, !639}
!3497 = !{!3498, !3499, !3500, !3501}
!3498 = !DILocalVariable(name: "decl", arg: 1, scope: !3494, file: !3, line: 1488, type: !639)
!3499 = !DILocalVariable(name: "save_aliasing_flag", scope: !3494, file: !3, line: 1490, type: !7)
!3500 = !DILocalVariable(name: "save_mudflap_flag", scope: !3494, file: !3, line: 1490, type: !7)
!3501 = !DILocalVariable(name: "rtl", scope: !3494, file: !3, line: 1491, type: !811)
!3502 = !DILocation(line: 0, scope: !3494)
!3503 = !DILocation(line: 1493, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 1493, column: 7)
!3505 = !DILocation(line: 1508, column: 9, scope: !3494)
!3506 = !DILocation(line: 1493, column: 7, scope: !3494)
!3507 = !DILocation(line: 1494, column: 12, scope: !3504)
!3508 = !DILocation(line: 1503, column: 24, scope: !3494)
!3509 = !DILocation(line: 1504, column: 24, scope: !3494)
!3510 = !DILocation(line: 1505, column: 23, scope: !3494)
!3511 = !DILocation(line: 1506, column: 16, scope: !3494)
!3512 = !DILocation(line: 1511, column: 3, scope: !3494)
!3513 = !DILocation(line: 1513, column: 24, scope: !3494)
!3514 = !DILocation(line: 1514, column: 16, scope: !3494)
!3515 = !DILocation(line: 1516, column: 3, scope: !3494)
!3516 = !DILocation(line: 1517, column: 1, scope: !3494)
!3517 = distinct !DISubprogram(name: "assemble_asm", scope: !3, file: !3, line: 1523, type: !3196, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3518)
!3518 = !{!3519}
!3519 = !DILocalVariable(name: "string", arg: 1, scope: !3517, file: !3, line: 1523, type: !639)
!3520 = !DILocation(line: 0, scope: !3517)
!3521 = !DILocation(line: 1525, column: 3, scope: !3517)
!3522 = !DILocation(line: 1527, column: 7, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1527, column: 7)
!3524 = !DILocation(line: 1527, column: 26, scope: !3523)
!3525 = !DILocation(line: 1527, column: 7, scope: !3517)
!3526 = !DILocation(line: 1528, column: 14, scope: !3523)
!3527 = !DILocation(line: 1528, column: 5, scope: !3523)
!3528 = !DILocation(line: 1530, column: 12, scope: !3517)
!3529 = !DILocation(line: 1530, column: 36, scope: !3517)
!3530 = !DILocation(line: 1530, column: 3, scope: !3517)
!3531 = !DILocation(line: 1531, column: 1, scope: !3517)
!3532 = distinct !DISubprogram(name: "default_stabs_asm_out_destructor", scope: !3, file: !3, line: 1538, type: !3533, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3535)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{null, !811, !623}
!3535 = !{!3536, !3537}
!3536 = !DILocalVariable(name: "symbol", arg: 1, scope: !3532, file: !3, line: 1538, type: !811)
!3537 = !DILocalVariable(name: "priority", arg: 2, scope: !3532, file: !3, line: 1539, type: !623)
!3538 = !DILocation(line: 0, scope: !3532)
!3539 = !DILocation(line: 1545, column: 3, scope: !3532)
!3540 = !DILocation(line: 1546, column: 28, scope: !3532)
!3541 = !DILocation(line: 1546, column: 3, scope: !3532)
!3542 = !DILocation(line: 1550, column: 1, scope: !3532)
!3543 = distinct !DISubprogram(name: "assemble_addr_to_section", scope: !3, file: !3, line: 1554, type: !3544, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3546)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{null, !811, !1044}
!3546 = !{!3547, !3548}
!3547 = !DILocalVariable(name: "symbol", arg: 1, scope: !3543, file: !3, line: 1554, type: !811)
!3548 = !DILocalVariable(name: "sec", arg: 2, scope: !3543, file: !3, line: 1554, type: !1044)
!3549 = !DILocation(line: 0, scope: !3543)
!3550 = !DILocation(line: 1556, column: 3, scope: !3543)
!3551 = !DILocation(line: 1557, column: 3, scope: !3543)
!3552 = !DILocation(line: 1558, column: 3, scope: !3543)
!3553 = !DILocation(line: 1559, column: 1, scope: !3543)
!3554 = distinct !DISubprogram(name: "switch_to_section", scope: !3, file: !3, line: 6808, type: !3555, scopeLine: 6809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3557)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !1044}
!3557 = !{!3558}
!3558 = !DILocalVariable(name: "new_section", arg: 1, scope: !3554, file: !3, line: 6808, type: !1044)
!3559 = !DILocation(line: 0, scope: !3554)
!3560 = !DILocation(line: 6810, column: 7, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 6810, column: 7)
!3562 = !DILocation(line: 6810, column: 18, scope: !3561)
!3563 = !DILocation(line: 6810, column: 7, scope: !3554)
!3564 = !DILocation(line: 6813, column: 27, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 6813, column: 7)
!3566 = !DILocation(line: 6813, column: 33, scope: !3565)
!3567 = !DILocation(line: 6813, column: 7, scope: !3554)
!3568 = !DILocation(line: 6814, column: 5, scope: !3565)
!3569 = !DILocation(line: 0, scope: !3565)
!3570 = !DILocation(line: 6818, column: 11, scope: !3554)
!3571 = !DILocation(line: 6818, column: 3, scope: !3554)
!3572 = !DILocation(line: 6821, column: 11, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 6821, column: 11)
!3574 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 6819, column: 5)
!3575 = !DILocation(line: 6822, column: 26, scope: !3573)
!3576 = !DILocation(line: 6822, column: 8, scope: !3573)
!3577 = !DILocation(line: 6822, column: 4, scope: !3573)
!3578 = !DILocation(line: 6823, column: 34, scope: !3573)
!3579 = !DILocation(line: 6823, column: 7, scope: !3573)
!3580 = !DILocation(line: 6824, column: 45, scope: !3573)
!3581 = !DILocation(line: 6821, column: 11, scope: !3574)
!3582 = !DILocation(line: 6825, column: 47, scope: !3573)
!3583 = !DILocation(line: 6825, column: 2, scope: !3573)
!3584 = !DILocation(line: 6827, column: 23, scope: !3574)
!3585 = !DILocation(line: 6827, column: 57, scope: !3574)
!3586 = !DILocation(line: 6828, column: 36, scope: !3574)
!3587 = !DILocation(line: 6829, column: 29, scope: !3574)
!3588 = !DILocation(line: 6827, column: 7, scope: !3574)
!3589 = !DILocation(line: 6830, column: 7, scope: !3574)
!3590 = !DILocation(line: 6833, column: 28, scope: !3574)
!3591 = !DILocation(line: 6833, column: 59, scope: !3574)
!3592 = !DILocation(line: 6833, column: 7, scope: !3574)
!3593 = !DILocation(line: 6834, column: 7, scope: !3574)
!3594 = !DILocation(line: 6837, column: 7, scope: !3574)
!3595 = !DILocation(line: 6838, column: 7, scope: !3574)
!3596 = !DILocation(line: 6841, column: 29, scope: !3554)
!3597 = !DILocation(line: 6842, column: 1, scope: !3554)
!3598 = distinct !DISubprogram(name: "assemble_align", scope: !3, file: !3, line: 1896, type: !3599, scopeLine: 1897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3601)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{null, !623}
!3601 = !{!3602}
!3602 = !DILocalVariable(name: "align", arg: 1, scope: !3598, file: !3, line: 1896, type: !623)
!3603 = !DILocation(line: 0, scope: !3598)
!3604 = !DILocation(line: 1898, column: 13, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 1898, column: 7)
!3606 = !DILocation(line: 1898, column: 7, scope: !3598)
!3607 = !DILocation(line: 1900, column: 7, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1900, column: 7)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1899, column: 5)
!3610 = !DILocation(line: 1900, column: 7, scope: !3609)
!3611 = !DILocation(line: 1902, column: 1, scope: !3598)
!3612 = distinct !DISubprogram(name: "assemble_integer", scope: !3, file: !3, line: 2686, type: !3613, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!622, !811, !7, !7, !623}
!3615 = !{!3616, !3617, !3618, !3619, !3620, !3621, !3624, !3625, !3626, !3627, !3628, !3629}
!3616 = !DILocalVariable(name: "x", arg: 1, scope: !3612, file: !3, line: 2686, type: !811)
!3617 = !DILocalVariable(name: "size", arg: 2, scope: !3612, file: !3, line: 2686, type: !7)
!3618 = !DILocalVariable(name: "align", arg: 3, scope: !3612, file: !3, line: 2686, type: !7)
!3619 = !DILocalVariable(name: "force", arg: 4, scope: !3612, file: !3, line: 2686, type: !623)
!3620 = !DILocalVariable(name: "aligned_p", scope: !3612, file: !3, line: 2688, type: !623)
!3621 = !DILocalVariable(name: "omode", scope: !3622, file: !3, line: 2700, type: !5)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 2699, column: 5)
!3623 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 2698, column: 7)
!3624 = !DILocalVariable(name: "imode", scope: !3622, file: !3, line: 2700, type: !5)
!3625 = !DILocalVariable(name: "subalign", scope: !3622, file: !3, line: 2701, type: !7)
!3626 = !DILocalVariable(name: "subsize", scope: !3622, file: !3, line: 2702, type: !7)
!3627 = !DILocalVariable(name: "i", scope: !3622, file: !3, line: 2702, type: !7)
!3628 = !DILocalVariable(name: "mclass", scope: !3622, file: !3, line: 2703, type: !543)
!3629 = !DILocalVariable(name: "partial", scope: !3630, file: !3, line: 2717, type: !811)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2716, column: 2)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 2715, column: 7)
!3632 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2715, column: 7)
!3633 = !DILocation(line: 0, scope: !3612)
!3634 = !DILocation(line: 2690, column: 25, scope: !3612)
!3635 = !DILocation(line: 2690, column: 22, scope: !3612)
!3636 = !DILocation(line: 2693, column: 23, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 2693, column: 7)
!3638 = !DILocation(line: 2693, column: 7, scope: !3637)
!3639 = !DILocation(line: 2693, column: 7, scope: !3612)
!3640 = !DILocation(line: 2698, column: 12, scope: !3623)
!3641 = !DILocation(line: 2698, column: 7, scope: !3612)
!3642 = !DILocation(line: 2705, column: 22, scope: !3622)
!3643 = !DILocation(line: 2705, column: 17, scope: !3622)
!3644 = !DILocation(line: 0, scope: !3622)
!3645 = !DILocation(line: 2706, column: 18, scope: !3622)
!3646 = !DILocation(line: 2707, column: 11, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2707, column: 11)
!3648 = !DILocation(line: 2707, column: 24, scope: !3647)
!3649 = !DILocation(line: 2707, column: 11, scope: !3622)
!3650 = !DILocation(line: 2708, column: 11, scope: !3647)
!3651 = !DILocation(line: 2708, column: 2, scope: !3647)
!3652 = !DILocation(line: 0, scope: !3647)
!3653 = !DILocation(line: 2712, column: 15, scope: !3622)
!3654 = !DILocation(line: 2713, column: 15, scope: !3622)
!3655 = !DILocation(line: 2715, column: 12, scope: !3632)
!3656 = !DILocation(line: 0, scope: !3632)
!3657 = !DILocation(line: 2715, column: 21, scope: !3631)
!3658 = !DILocation(line: 2715, column: 7, scope: !3632)
!3659 = !DILocation(line: 2717, column: 18, scope: !3630)
!3660 = !DILocation(line: 0, scope: !3630)
!3661 = !DILocation(line: 2718, column: 9, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 2718, column: 8)
!3663 = !DILocation(line: 2718, column: 17, scope: !3662)
!3664 = !DILocation(line: 2718, column: 21, scope: !3662)
!3665 = !DILocation(line: 2718, column: 8, scope: !3630)
!3666 = !DILocation(line: 2715, column: 31, scope: !3631)
!3667 = !DILocation(line: 2715, column: 7, scope: !3631)
!3668 = distinct !{!3668, !3658, !3669}
!3669 = !DILocation(line: 2720, column: 2, scope: !3632)
!3670 = !DILocation(line: 2721, column: 13, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2721, column: 11)
!3672 = !DILocation(line: 2721, column: 11, scope: !3622)
!3673 = !DILocation(line: 2726, column: 7, scope: !3622)
!3674 = !DILocation(line: 2729, column: 3, scope: !3612)
!3675 = !DILocation(line: 2732, column: 1, scope: !3612)
!3676 = distinct !DISubprogram(name: "get_cdtor_priority_section", scope: !3, file: !3, line: 1564, type: !3677, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3679)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!1044, !623, !622}
!3679 = !{!3680, !3681, !3682}
!3680 = !DILocalVariable(name: "priority", arg: 1, scope: !3676, file: !3, line: 1564, type: !623)
!3681 = !DILocalVariable(name: "constructor_p", arg: 2, scope: !3676, file: !3, line: 1564, type: !622)
!3682 = !DILocalVariable(name: "buf", scope: !3676, file: !3, line: 1566, type: !3683)
!3683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 128, elements: !3684)
!3684 = !{!3685}
!3685 = !DISubrange(count: 16)
!3686 = !DILocation(line: 0, scope: !3676)
!3687 = !DILocation(line: 1566, column: 3, scope: !3676)
!3688 = !DILocation(line: 1566, column: 8, scope: !3676)
!3689 = !DILocation(line: 1570, column: 5, scope: !3676)
!3690 = !DILocation(line: 1574, column: 23, scope: !3676)
!3691 = !DILocation(line: 1569, column: 3, scope: !3676)
!3692 = !DILocation(line: 1575, column: 10, scope: !3676)
!3693 = !DILocation(line: 1576, column: 1, scope: !3676)
!3694 = !DILocation(line: 1575, column: 3, scope: !3676)
!3695 = distinct !DISubprogram(name: "default_named_section_asm_out_destructor", scope: !3, file: !3, line: 1579, type: !3533, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3696 = !{!3697, !3698, !3699}
!3697 = !DILocalVariable(name: "symbol", arg: 1, scope: !3695, file: !3, line: 1579, type: !811)
!3698 = !DILocalVariable(name: "priority", arg: 2, scope: !3695, file: !3, line: 1579, type: !623)
!3699 = !DILocalVariable(name: "sec", scope: !3695, file: !3, line: 1581, type: !1044)
!3700 = !DILocation(line: 0, scope: !3695)
!3701 = !DILocation(line: 1583, column: 16, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1583, column: 7)
!3703 = !DILocation(line: 1583, column: 7, scope: !3695)
!3704 = !DILocation(line: 1584, column: 11, scope: !3702)
!3705 = !DILocation(line: 1584, column: 5, scope: !3702)
!3706 = !DILocation(line: 1587, column: 11, scope: !3702)
!3707 = !DILocation(line: 0, scope: !3702)
!3708 = !DILocation(line: 1589, column: 3, scope: !3695)
!3709 = !DILocation(line: 1590, column: 1, scope: !3695)
!3710 = distinct !DISubprogram(name: "default_stabs_asm_out_constructor", scope: !3, file: !3, line: 1604, type: !3533, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3711)
!3711 = !{!3712, !3713}
!3712 = !DILocalVariable(name: "symbol", arg: 1, scope: !3710, file: !3, line: 1604, type: !811)
!3713 = !DILocalVariable(name: "priority", arg: 2, scope: !3710, file: !3, line: 1605, type: !623)
!3714 = !DILocation(line: 0, scope: !3710)
!3715 = !DILocation(line: 1611, column: 3, scope: !3710)
!3716 = !DILocation(line: 1612, column: 28, scope: !3710)
!3717 = !DILocation(line: 1612, column: 3, scope: !3710)
!3718 = !DILocation(line: 1616, column: 1, scope: !3710)
!3719 = distinct !DISubprogram(name: "default_named_section_asm_out_constructor", scope: !3, file: !3, line: 1619, type: !3533, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3720)
!3720 = !{!3721, !3722, !3723}
!3721 = !DILocalVariable(name: "symbol", arg: 1, scope: !3719, file: !3, line: 1619, type: !811)
!3722 = !DILocalVariable(name: "priority", arg: 2, scope: !3719, file: !3, line: 1619, type: !623)
!3723 = !DILocalVariable(name: "sec", scope: !3719, file: !3, line: 1621, type: !1044)
!3724 = !DILocation(line: 0, scope: !3719)
!3725 = !DILocation(line: 1623, column: 16, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1623, column: 7)
!3727 = !DILocation(line: 1623, column: 7, scope: !3719)
!3728 = !DILocation(line: 1624, column: 11, scope: !3726)
!3729 = !DILocation(line: 1624, column: 5, scope: !3726)
!3730 = !DILocation(line: 1627, column: 11, scope: !3726)
!3731 = !DILocation(line: 0, scope: !3726)
!3732 = !DILocation(line: 1629, column: 3, scope: !3719)
!3733 = !DILocation(line: 1630, column: 1, scope: !3719)
!3734 = distinct !DISubprogram(name: "notice_global_symbol", scope: !3, file: !3, line: 1656, type: !3196, scopeLine: 1657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3735)
!3735 = !{!3736, !3737, !3739, !3742, !3743}
!3736 = !DILocalVariable(name: "decl", arg: 1, scope: !3734, file: !3, line: 1656, type: !639)
!3737 = !DILocalVariable(name: "type", scope: !3734, file: !3, line: 1658, type: !3738)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!3739 = !DILocalVariable(name: "p", scope: !3740, file: !3, line: 1679, type: !628)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1678, column: 5)
!3741 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1677, column: 7)
!3742 = !DILocalVariable(name: "name", scope: !3740, file: !3, line: 1680, type: !628)
!3743 = !DILocalVariable(name: "decl_rtl", scope: !3740, file: !3, line: 1681, type: !811)
!3744 = !DILocation(line: 0, scope: !3734)
!3745 = !DILocation(line: 1660, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1660, column: 7)
!3747 = !DILocation(line: 1661, column: 7, scope: !3746)
!3748 = !DILocation(line: 1661, column: 11, scope: !3746)
!3749 = !DILocation(line: 1662, column: 7, scope: !3746)
!3750 = !DILocation(line: 1662, column: 10, scope: !3746)
!3751 = !DILocation(line: 1663, column: 7, scope: !3746)
!3752 = !DILocation(line: 1663, column: 11, scope: !3746)
!3753 = !DILocation(line: 1664, column: 7, scope: !3746)
!3754 = !DILocation(line: 1664, column: 28, scope: !3746)
!3755 = !DILocation(line: 1665, column: 4, scope: !3746)
!3756 = !DILocation(line: 1665, column: 25, scope: !3746)
!3757 = !DILocation(line: 1666, column: 8, scope: !3746)
!3758 = !DILocation(line: 1666, column: 12, scope: !3746)
!3759 = !DILocation(line: 1667, column: 5, scope: !3746)
!3760 = !DILocation(line: 1667, column: 9, scope: !3746)
!3761 = !DILocation(line: 1667, column: 29, scope: !3746)
!3762 = !DILocation(line: 1668, column: 9, scope: !3746)
!3763 = !DILocation(line: 1668, column: 35, scope: !3746)
!3764 = !DILocation(line: 1668, column: 32, scope: !3746)
!3765 = !DILocation(line: 1669, column: 7, scope: !3746)
!3766 = !DILocation(line: 1669, column: 11, scope: !3746)
!3767 = !DILocation(line: 0, scope: !3746)
!3768 = !DILocation(line: 1660, column: 7, scope: !3734)
!3769 = !DILocation(line: 1674, column: 7, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1674, column: 7)
!3771 = !DILocation(line: 1674, column: 24, scope: !3770)
!3772 = !DILocation(line: 1674, column: 27, scope: !3770)
!3773 = !DILocation(line: 1674, column: 51, scope: !3770)
!3774 = !DILocation(line: 1674, column: 48, scope: !3770)
!3775 = !DILocation(line: 1675, column: 5, scope: !3770)
!3776 = !DILocation(line: 1677, column: 8, scope: !3741)
!3777 = !DILocation(line: 1677, column: 7, scope: !3734)
!3778 = !DILocation(line: 1681, column: 22, scope: !3740)
!3779 = !DILocation(line: 0, scope: !3740)
!3780 = !DILocation(line: 1683, column: 19, scope: !3740)
!3781 = !DILocation(line: 1683, column: 40, scope: !3740)
!3782 = !DILocation(line: 1683, column: 11, scope: !3740)
!3783 = !DILocation(line: 1684, column: 14, scope: !3740)
!3784 = !DILocation(line: 1686, column: 13, scope: !3740)
!3785 = !DILocation(line: 1687, column: 5, scope: !3740)
!3786 = !DILocation(line: 1688, column: 1, scope: !3734)
!3787 = distinct !DISubprogram(name: "assemble_start_function", scope: !3, file: !3, line: 1696, type: !3046, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3788)
!3788 = !{!3789, !3790, !3791, !3792, !3796}
!3789 = !DILocalVariable(name: "decl", arg: 1, scope: !3787, file: !3, line: 1696, type: !639)
!3790 = !DILocalVariable(name: "fnname", arg: 2, scope: !3787, file: !3, line: 1696, type: !628)
!3791 = !DILocalVariable(name: "align", scope: !3787, file: !3, line: 1698, type: !623)
!3792 = !DILocalVariable(name: "tmp_label", scope: !3787, file: !3, line: 1699, type: !3793)
!3793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 800, elements: !3794)
!3794 = !{!3795}
!3795 = !DISubrange(count: 100)
!3796 = !DILocalVariable(name: "hot_label_written", scope: !3787, file: !3, line: 1700, type: !622)
!3797 = !DILocation(line: 0, scope: !3787)
!3798 = !DILocation(line: 1699, column: 3, scope: !3787)
!3799 = !DILocation(line: 1699, column: 8, scope: !3787)
!3800 = !DILocation(line: 1702, column: 48, scope: !3787)
!3801 = !DILocation(line: 1704, column: 32, scope: !3787)
!3802 = !DILocation(line: 1705, column: 7, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1705, column: 7)
!3804 = !DILocation(line: 1705, column: 7, scope: !3787)
!3805 = !DILocation(line: 1707, column: 7, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1707, column: 7)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1706, column: 5)
!3808 = !DILocation(line: 1708, column: 45, scope: !3807)
!3809 = !DILocation(line: 1708, column: 43, scope: !3807)
!3810 = !DILocation(line: 1709, column: 7, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1709, column: 7)
!3812 = !DILocation(line: 1710, column: 46, scope: !3807)
!3813 = !DILocation(line: 1710, column: 44, scope: !3807)
!3814 = !DILocation(line: 1711, column: 7, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1711, column: 7)
!3816 = !DILocation(line: 1712, column: 49, scope: !3807)
!3817 = !DILocation(line: 1712, column: 47, scope: !3807)
!3818 = !DILocation(line: 1713, column: 7, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 1713, column: 7)
!3820 = !DILocation(line: 1714, column: 50, scope: !3807)
!3821 = !DILocation(line: 1714, column: 48, scope: !3807)
!3822 = !DILocation(line: 1715, column: 20, scope: !3807)
!3823 = !DILocation(line: 1716, column: 5, scope: !3807)
!3824 = !DILocation(line: 1719, column: 43, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1718, column: 5)
!3826 = !DILocation(line: 1720, column: 44, scope: !3825)
!3827 = !DILocation(line: 1721, column: 47, scope: !3825)
!3828 = !DILocation(line: 1722, column: 48, scope: !3825)
!3829 = !DILocation(line: 1727, column: 3, scope: !3787)
!3830 = !DILocation(line: 1730, column: 5, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1729, column: 7)
!3832 = !DILocation(line: 1732, column: 36, scope: !3787)
!3833 = !DILocation(line: 1732, column: 3, scope: !3787)
!3834 = !DILocation(line: 1739, column: 7, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1739, column: 7)
!3836 = !DILocation(line: 1739, column: 7, scope: !3787)
!3837 = !DILocation(line: 1741, column: 26, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 1740, column: 5)
!3839 = !DILocation(line: 1741, column: 7, scope: !3838)
!3840 = !DILocation(line: 1742, column: 23, scope: !3838)
!3841 = !DILocation(line: 1742, column: 7, scope: !3838)
!3842 = !DILocation(line: 1743, column: 7, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1743, column: 7)
!3844 = !DILocation(line: 1748, column: 12, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1748, column: 11)
!3846 = !DILocation(line: 1748, column: 18, scope: !3845)
!3847 = !DILocation(line: 1749, column: 4, scope: !3845)
!3848 = !DILocation(line: 1749, column: 7, scope: !3845)
!3849 = !DILocation(line: 1749, column: 47, scope: !3845)
!3850 = !DILocation(line: 1748, column: 11, scope: !3838)
!3851 = !DILocation(line: 1751, column: 23, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 1750, column: 2)
!3853 = !DILocation(line: 1751, column: 4, scope: !3852)
!3854 = !DILocation(line: 1752, column: 20, scope: !3852)
!3855 = !DILocation(line: 1752, column: 4, scope: !3852)
!3856 = !DILocation(line: 1753, column: 4, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 1753, column: 4)
!3858 = !DILocation(line: 1755, column: 33, scope: !3852)
!3859 = !DILocation(line: 1756, column: 2, scope: !3852)
!3860 = !DILocation(line: 1758, column: 12, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 1758, column: 12)
!3862 = !DILocation(line: 1758, column: 12, scope: !3835)
!3863 = !DILocation(line: 1765, column: 7, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 1759, column: 5)
!3865 = !DILocation(line: 1767, column: 29, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 1767, column: 11)
!3867 = !DILocation(line: 1767, column: 11, scope: !3866)
!3868 = !DILocation(line: 1768, column: 4, scope: !3866)
!3869 = !DILocation(line: 1768, column: 15, scope: !3866)
!3870 = !DILocation(line: 1768, column: 7, scope: !3866)
!3871 = !DILocation(line: 1769, column: 54, scope: !3866)
!3872 = !DILocation(line: 1767, column: 11, scope: !3864)
!3873 = !DILocation(line: 1770, column: 31, scope: !3866)
!3874 = !DILocation(line: 1770, column: 2, scope: !3866)
!3875 = !DILocation(line: 1773, column: 23, scope: !3787)
!3876 = !DILocation(line: 1773, column: 21, scope: !3787)
!3877 = !DILocation(line: 1777, column: 22, scope: !3787)
!3878 = !DILocation(line: 1777, column: 3, scope: !3787)
!3879 = !DILocation(line: 1778, column: 7, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1778, column: 7)
!3881 = !DILocation(line: 1779, column: 7, scope: !3880)
!3882 = !DILocation(line: 1780, column: 5, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 1780, column: 5)
!3884 = !DILocation(line: 1783, column: 23, scope: !3787)
!3885 = !DILocation(line: 1783, column: 41, scope: !3787)
!3886 = !DILocation(line: 1783, column: 11, scope: !3787)
!3887 = !DILocation(line: 1784, column: 13, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1784, column: 7)
!3889 = !DILocation(line: 1784, column: 7, scope: !3787)
!3890 = !DILocation(line: 1786, column: 7, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 1786, column: 7)
!3892 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 1785, column: 5)
!3893 = !DILocation(line: 1787, column: 5, scope: !3892)
!3894 = !DILocation(line: 1792, column: 9, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1792, column: 7)
!3896 = !DILocation(line: 1793, column: 10, scope: !3895)
!3897 = !DILocation(line: 1793, column: 30, scope: !3895)
!3898 = !DILocation(line: 1793, column: 7, scope: !3895)
!3899 = !DILocation(line: 1794, column: 41, scope: !3895)
!3900 = !DILocation(line: 1794, column: 10, scope: !3895)
!3901 = !DILocation(line: 1797, column: 7, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 1797, column: 7)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1797, column: 7)
!3904 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1795, column: 5)
!3905 = !DILocation(line: 1792, column: 7, scope: !3787)
!3906 = !DILocation(line: 1797, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 1797, column: 7)
!3908 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 1797, column: 7)
!3909 = !DILocation(line: 0, scope: !3907)
!3910 = !DILocation(line: 1797, column: 7, scope: !3908)
!3911 = !DILocation(line: 1797, column: 7, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 1797, column: 7)
!3913 = !DILocation(line: 1797, column: 7, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1797, column: 7)
!3915 = !DILocation(line: 1808, column: 8, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1808, column: 7)
!3917 = !DILocation(line: 1808, column: 7, scope: !3787)
!3918 = !DILocation(line: 1809, column: 7, scope: !3916)
!3919 = !DILocation(line: 1809, column: 20, scope: !3916)
!3920 = !DILocation(line: 1809, column: 5, scope: !3916)
!3921 = !DILocation(line: 1813, column: 7, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1813, column: 7)
!3923 = !DILocation(line: 1813, column: 7, scope: !3787)
!3924 = !DILocation(line: 1815, column: 7, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 1814, column: 5)
!3926 = !DILocation(line: 1817, column: 7, scope: !3925)
!3927 = !DILocation(line: 1819, column: 7, scope: !3925)
!3928 = !DILocation(line: 1820, column: 5, scope: !3925)
!3929 = !DILocation(line: 1822, column: 7, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1822, column: 7)
!3931 = !DILocation(line: 1822, column: 7, scope: !3787)
!3932 = !DILocation(line: 1823, column: 21, scope: !3930)
!3933 = !DILocation(line: 1823, column: 5, scope: !3930)
!3934 = !DILocation(line: 1827, column: 3, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1827, column: 3)
!3936 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 1827, column: 3)
!3937 = !DILocation(line: 1827, column: 3, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 1827, column: 3)
!3939 = !DILocation(line: 1832, column: 1, scope: !3787)
!3940 = distinct !DISubprogram(name: "output_constant_pool", scope: !3, file: !3, line: 3995, type: !3941, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3943)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{null, !628, !639}
!3943 = !{!3944, !3945, !3946}
!3944 = !DILocalVariable(name: "fnname", arg: 1, scope: !3940, file: !3, line: 3995, type: !628)
!3945 = !DILocalVariable(name: "fndecl", arg: 2, scope: !3940, file: !3, line: 3996, type: !639)
!3946 = !DILocalVariable(name: "pool", scope: !3940, file: !3, line: 3998, type: !1727)
!3947 = !DILocation(line: 0, scope: !3940)
!3948 = !DILocation(line: 3998, column: 49, scope: !3940)
!3949 = !DILocation(line: 4003, column: 3, scope: !3940)
!3950 = !DILocation(line: 4009, column: 3, scope: !3940)
!3951 = !DILocation(line: 4014, column: 1, scope: !3940)
!3952 = distinct !DISubprogram(name: "assemble_name", scope: !3, file: !3, line: 2501, type: !3953, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !2062, !628}
!3955 = !{!3956, !3957, !3958, !3959, !3960}
!3956 = !DILocalVariable(name: "file", arg: 1, scope: !3952, file: !3, line: 2501, type: !2062)
!3957 = !DILocalVariable(name: "name", arg: 2, scope: !3952, file: !3, line: 2501, type: !628)
!3958 = !DILocalVariable(name: "real_name", scope: !3952, file: !3, line: 2503, type: !628)
!3959 = !DILocalVariable(name: "id", scope: !3952, file: !3, line: 2504, type: !639)
!3960 = !DILocalVariable(name: "id_orig", scope: !3961, file: !3, line: 2511, type: !639)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !3, line: 2510, column: 5)
!3962 = distinct !DILexicalBlock(scope: !3952, file: !3, line: 2509, column: 7)
!3963 = !DILocation(line: 0, scope: !3952)
!3964 = !DILocation(line: 2504, column: 3, scope: !3952)
!3965 = !DILocation(line: 2506, column: 23, scope: !3952)
!3966 = !DILocation(line: 2506, column: 15, scope: !3952)
!3967 = !DILocation(line: 2508, column: 8, scope: !3952)
!3968 = !DILocation(line: 2508, column: 6, scope: !3952)
!3969 = !DILocation(line: 2509, column: 7, scope: !3962)
!3970 = !DILocation(line: 2509, column: 7, scope: !3952)
!3971 = !DILocation(line: 0, scope: !3961)
!3972 = !DILocation(line: 2513, column: 7, scope: !3961)
!3973 = !DILocation(line: 2514, column: 7, scope: !3961)
!3974 = !DILocation(line: 2515, column: 11, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 2515, column: 11)
!3976 = !DILocation(line: 2515, column: 14, scope: !3975)
!3977 = !DILocation(line: 2515, column: 11, scope: !3961)
!3978 = !DILocation(line: 2516, column: 9, scope: !3975)
!3979 = !DILocation(line: 2516, column: 2, scope: !3975)
!3980 = !DILocation(line: 2517, column: 7, scope: !3961)
!3981 = !DILocation(line: 2520, column: 3, scope: !3952)
!3982 = !DILocation(line: 2521, column: 1, scope: !3952)
!3983 = distinct !DISubprogram(name: "globalize_decl", scope: !3, file: !3, line: 5475, type: !3196, scopeLine: 5476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3984)
!3984 = !{!3985, !3986, !3989, !3990}
!3985 = !DILocalVariable(name: "decl", arg: 1, scope: !3983, file: !3, line: 5475, type: !639)
!3986 = !DILocalVariable(name: "name", scope: !3987, file: !3, line: 5481, type: !628)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 5480, column: 5)
!3988 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 5479, column: 7)
!3989 = !DILocalVariable(name: "p", scope: !3987, file: !3, line: 5482, type: !1434)
!3990 = !DILocalVariable(name: "t", scope: !3987, file: !3, line: 5482, type: !639)
!3991 = !DILocation(line: 0, scope: !3983)
!3992 = !DILocation(line: 5479, column: 7, scope: !3988)
!3993 = !DILocation(line: 5479, column: 7, scope: !3983)
!3994 = !DILocation(line: 5481, column: 26, scope: !3987)
!3995 = !DILocation(line: 0, scope: !3987)
!3996 = !DILocation(line: 5487, column: 7, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 5487, column: 7)
!3998 = !DILocation(line: 5492, column: 12, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 5492, column: 7)
!4000 = !DILocation(line: 5492, column: 14, scope: !3999)
!4001 = !DILocation(line: 5492, column: 34, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 5492, column: 7)
!4003 = !DILocation(line: 5492, column: 7, scope: !3999)
!4004 = !DILocation(line: 5502, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 5502, column: 7)
!4006 = !DILocation(line: 5494, column: 8, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 5494, column: 8)
!4008 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 5493, column: 2)
!4009 = !DILocation(line: 5494, column: 38, scope: !4007)
!4010 = !DILocation(line: 5494, column: 35, scope: !4007)
!4011 = !DILocation(line: 0, scope: !4007)
!4012 = !DILocation(line: 5494, column: 8, scope: !4008)
!4013 = !DILocation(line: 5495, column: 11, scope: !4007)
!4014 = !DILocation(line: 5495, column: 9, scope: !4007)
!4015 = !DILocation(line: 5495, column: 6, scope: !4007)
!4016 = !DILocation(line: 0, scope: !3999)
!4017 = !DILocation(line: 5492, column: 7, scope: !4002)
!4018 = distinct !{!4018, !4003, !4019}
!4019 = !DILocation(line: 5498, column: 2, scope: !3999)
!4020 = !DILocation(line: 5502, column: 14, scope: !4005)
!4021 = !DILocation(line: 5502, column: 39, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 5502, column: 7)
!4023 = !DILocation(line: 5504, column: 8, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 5504, column: 8)
!4025 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 5503, column: 2)
!4026 = !DILocation(line: 5505, column: 47, scope: !4024)
!4027 = !DILocation(line: 5505, column: 11, scope: !4024)
!4028 = !DILocation(line: 5505, column: 8, scope: !4024)
!4029 = !DILocation(line: 0, scope: !4024)
!4030 = !DILocation(line: 5504, column: 8, scope: !4025)
!4031 = !DILocation(line: 5506, column: 11, scope: !4024)
!4032 = !DILocation(line: 5506, column: 9, scope: !4024)
!4033 = !DILocation(line: 5506, column: 6, scope: !4024)
!4034 = !DILocation(line: 0, scope: !4005)
!4035 = !DILocation(line: 5502, column: 7, scope: !4022)
!4036 = distinct !{!4036, !4004, !4037}
!4037 = !DILocation(line: 5509, column: 2, scope: !4005)
!4038 = !DILocation(line: 5515, column: 19, scope: !3983)
!4039 = !DILocation(line: 5515, column: 40, scope: !3983)
!4040 = !DILocation(line: 5515, column: 3, scope: !3983)
!4041 = !DILocation(line: 5516, column: 1, scope: !3983)
!4042 = distinct !DISubprogram(name: "maybe_assemble_visibility", scope: !3, file: !3, line: 5849, type: !4043, scopeLine: 5850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4045)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!623, !639}
!4045 = !{!4046, !4047}
!4046 = !DILocalVariable(name: "decl", arg: 1, scope: !4042, file: !3, line: 5849, type: !639)
!4047 = !DILocalVariable(name: "vis", scope: !4042, file: !3, line: 5851, type: !565)
!4048 = !DILocation(line: 0, scope: !4042)
!4049 = !DILocation(line: 5851, column: 32, scope: !4042)
!4050 = !DILocation(line: 5853, column: 11, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4042, file: !3, line: 5853, column: 7)
!4052 = !DILocation(line: 5853, column: 7, scope: !4042)
!4053 = !DILocation(line: 5855, column: 23, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 5854, column: 5)
!4055 = !DILocation(line: 5855, column: 7, scope: !4054)
!4056 = !DILocation(line: 5856, column: 7, scope: !4054)
!4057 = !DILocation(line: 0, scope: !4051)
!4058 = !DILocation(line: 5860, column: 1, scope: !4042)
!4059 = distinct !DISubprogram(name: "assemble_end_function", scope: !3, file: !3, line: 1838, type: !3046, scopeLine: 1839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4060)
!4060 = !{!4061, !4062, !4063}
!4061 = !DILocalVariable(name: "decl", arg: 1, scope: !4059, file: !3, line: 1838, type: !639)
!4062 = !DILocalVariable(name: "fnname", arg: 2, scope: !4059, file: !3, line: 1838, type: !628)
!4063 = !DILocalVariable(name: "save_text_section", scope: !4064, file: !3, line: 1855, type: !1044)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1854, column: 5)
!4065 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1853, column: 7)
!4066 = !DILocation(line: 0, scope: !4059)
!4067 = !DILocation(line: 1842, column: 7, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1842, column: 7)
!4069 = !DILocation(line: 1842, column: 7, scope: !4059)
!4070 = !DILocation(line: 1843, column: 24, scope: !4068)
!4071 = !DILocation(line: 1843, column: 5, scope: !4068)
!4072 = !DILocation(line: 1844, column: 3, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1844, column: 3)
!4074 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1844, column: 3)
!4075 = !DILocation(line: 1844, column: 3, scope: !4074)
!4076 = !DILocation(line: 1844, column: 3, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 1844, column: 3)
!4078 = !DILocation(line: 1853, column: 7, scope: !4065)
!4079 = !DILocation(line: 1853, column: 7, scope: !4059)
!4080 = !DILocation(line: 1857, column: 27, scope: !4064)
!4081 = !DILocation(line: 0, scope: !4064)
!4082 = !DILocation(line: 1858, column: 26, scope: !4064)
!4083 = !DILocation(line: 1858, column: 7, scope: !4064)
!4084 = !DILocation(line: 1859, column: 7, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1859, column: 7)
!4086 = !DILocation(line: 1860, column: 11, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1860, column: 11)
!4088 = !DILocation(line: 1860, column: 11, scope: !4064)
!4089 = !DILocation(line: 1861, column: 21, scope: !4087)
!4090 = !DILocation(line: 1861, column: 2, scope: !4087)
!4091 = !DILocation(line: 1863, column: 21, scope: !4087)
!4092 = !DILocation(line: 1863, column: 2, scope: !4087)
!4093 = !DILocation(line: 1864, column: 7, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 1864, column: 7)
!4095 = !DILocation(line: 1865, column: 7, scope: !4064)
!4096 = !DILocation(line: 1866, column: 5, scope: !4064)
!4097 = !DILocation(line: 1867, column: 1, scope: !4059)
!4098 = distinct !DISubprogram(name: "assemble_zeros", scope: !3, file: !3, line: 1872, type: !4099, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !692}
!4101 = !{!4102, !4103}
!4102 = !DILocalVariable(name: "size", arg: 1, scope: !4098, file: !3, line: 1872, type: !692)
!4103 = !DILocalVariable(name: "i", scope: !4104, file: !3, line: 1883, type: !692)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 1882, column: 5)
!4105 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1881, column: 7)
!4106 = !DILocation(line: 0, scope: !4098)
!4107 = !DILocation(line: 1875, column: 7, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1875, column: 7)
!4109 = !DILocation(line: 1875, column: 7, scope: !4098)
!4110 = !DILocation(line: 1881, column: 31, scope: !4105)
!4111 = !DILocation(line: 1881, column: 50, scope: !4105)
!4112 = !DILocation(line: 1881, column: 56, scope: !4105)
!4113 = !DILocation(line: 1881, column: 72, scope: !4105)
!4114 = !DILocation(line: 1881, column: 7, scope: !4098)
!4115 = !DILocation(line: 1884, column: 7, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 1884, column: 7)
!4117 = !DILocation(line: 0, scope: !4116)
!4118 = !DILocation(line: 0, scope: !4104)
!4119 = !DILocation(line: 1884, column: 21, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1884, column: 7)
!4121 = !DILocation(line: 1885, column: 20, scope: !4120)
!4122 = !DILocation(line: 1885, column: 2, scope: !4120)
!4123 = !DILocation(line: 1884, column: 30, scope: !4120)
!4124 = !DILocation(line: 1884, column: 7, scope: !4120)
!4125 = distinct !{!4125, !4115, !4126}
!4126 = !DILocation(line: 1885, column: 51, scope: !4116)
!4127 = !DILocation(line: 1889, column: 14, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 1889, column: 9)
!4129 = !DILocation(line: 1889, column: 9, scope: !4105)
!4130 = !DILocation(line: 1890, column: 7, scope: !4128)
!4131 = !DILocation(line: 1891, column: 1, scope: !4098)
!4132 = distinct !DISubprogram(name: "assemble_string", scope: !3, file: !3, line: 1907, type: !4133, scopeLine: 1908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4135)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{null, !628, !623}
!4135 = !{!4136, !4137, !4138, !4139, !4140, !4142, !4144, !4145, !4146, !4147, !4151, !4155, !4156, !4160, !4162}
!4136 = !DILocalVariable(name: "p", arg: 1, scope: !4132, file: !3, line: 1907, type: !628)
!4137 = !DILocalVariable(name: "size", arg: 2, scope: !4132, file: !3, line: 1907, type: !623)
!4138 = !DILocalVariable(name: "pos", scope: !4132, file: !3, line: 1909, type: !623)
!4139 = !DILocalVariable(name: "maximum", scope: !4132, file: !3, line: 1910, type: !623)
!4140 = !DILocalVariable(name: "thissize", scope: !4141, file: !3, line: 1916, type: !623)
!4141 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1915, column: 5)
!4142 = !DILocalVariable(name: "_ascii_bytes", scope: !4143, file: !3, line: 1920, type: !754)
!4143 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 1920, column: 7)
!4144 = !DILocalVariable(name: "limit", scope: !4143, file: !3, line: 1920, type: !754)
!4145 = !DILocalVariable(name: "last_null", scope: !4143, file: !3, line: 1920, type: !754)
!4146 = !DILocalVariable(name: "bytes_in_chunk", scope: !4143, file: !3, line: 1920, type: !7)
!4147 = !DILocalVariable(name: "p", scope: !4148, file: !3, line: 1920, type: !754)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1920, column: 7)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1920, column: 7)
!4150 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1920, column: 7)
!4151 = !DILocalVariable(name: "_limited_str", scope: !4152, file: !3, line: 1920, type: !754)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1920, column: 7)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1920, column: 7)
!4154 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 1920, column: 7)
!4155 = !DILocalVariable(name: "ch", scope: !4152, file: !3, line: 1920, type: !7)
!4156 = !DILocalVariable(name: "escape", scope: !4157, file: !3, line: 1920, type: !623)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 1920, column: 7)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 1920, column: 7)
!4159 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 1920, column: 7)
!4160 = !DILocalVariable(name: "escape", scope: !4161, file: !3, line: 1920, type: !623)
!4161 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1920, column: 7)
!4162 = !DILocalVariable(name: "ch", scope: !4161, file: !3, line: 1920, type: !7)
!4163 = !DILocation(line: 0, scope: !4132)
!4164 = !DILocation(line: 1914, column: 3, scope: !4132)
!4165 = !DILocation(line: 1914, column: 14, scope: !4132)
!4166 = !DILocation(line: 1916, column: 27, scope: !4141)
!4167 = !DILocation(line: 0, scope: !4141)
!4168 = !DILocation(line: 1917, column: 11, scope: !4141)
!4169 = !DILocation(line: 0, scope: !4143)
!4170 = !DILocation(line: 1920, column: 7, scope: !4143)
!4171 = !DILocation(line: 1920, column: 7, scope: !4149)
!4172 = !DILocation(line: 1920, column: 7, scope: !4150)
!4173 = !DILocation(line: 1920, column: 7, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 1920, column: 7)
!4175 = !DILocation(line: 1920, column: 7, scope: !4148)
!4176 = !DILocation(line: 1920, column: 7, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 1920, column: 7)
!4178 = !DILocation(line: 1920, column: 7, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 1920, column: 7)
!4180 = !DILocation(line: 1920, column: 7, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1920, column: 7)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 1920, column: 7)
!4183 = !DILocation(line: 0, scope: !4181)
!4184 = !DILocation(line: 0, scope: !4148)
!4185 = !DILocation(line: 1920, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 1920, column: 7)
!4187 = distinct !{!4187, !4180, !4180}
!4188 = !DILocation(line: 1920, column: 7, scope: !4154)
!4189 = !DILocation(line: 1920, column: 7, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1920, column: 7)
!4191 = !DILocation(line: 1920, column: 7, scope: !4153)
!4192 = !DILocation(line: 1920, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 1920, column: 7)
!4194 = !DILocation(line: 0, scope: !4152)
!4195 = !DILocation(line: 1920, column: 7, scope: !4152)
!4196 = !DILocation(line: 1920, column: 7, scope: !4158)
!4197 = !DILocation(line: 1920, column: 7, scope: !4159)
!4198 = !DILocation(line: 1920, column: 7, scope: !4157)
!4199 = !DILocation(line: 0, scope: !4157)
!4200 = !DILocation(line: 1920, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 1920, column: 7)
!4202 = distinct !{!4202, !4197, !4197}
!4203 = !DILocation(line: 1920, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 1920, column: 7)
!4205 = !DILocation(line: 1920, column: 7, scope: !4161)
!4206 = !DILocation(line: 0, scope: !4161)
!4207 = !DILocation(line: 1920, column: 7, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 1920, column: 7)
!4209 = !DILocation(line: 0, scope: !4154)
!4210 = distinct !{!4210, !4172, !4172}
!4211 = !DILocation(line: 1920, column: 7, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1920, column: 7)
!4213 = !DILocation(line: 1922, column: 11, scope: !4141)
!4214 = distinct !{!4214, !4164, !4215}
!4215 = !DILocation(line: 1924, column: 5, scope: !4132)
!4216 = !DILocation(line: 1925, column: 1, scope: !4132)
!4217 = distinct !DISubprogram(name: "default_emutls_var_init", scope: !3, file: !3, line: 2070, type: !4218, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4220)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!639, !639, !639, !639}
!4220 = !{!4221, !4222, !4223, !4224, !4225, !4227, !4228}
!4221 = !DILocalVariable(name: "to", arg: 1, scope: !4217, file: !3, line: 2070, type: !639)
!4222 = !DILocalVariable(name: "decl", arg: 2, scope: !4217, file: !3, line: 2070, type: !639)
!4223 = !DILocalVariable(name: "proxy", arg: 3, scope: !4217, file: !3, line: 2070, type: !639)
!4224 = !DILocalVariable(name: "v", scope: !4217, file: !3, line: 2072, type: !1494)
!4225 = !DILocalVariable(name: "elt", scope: !4217, file: !3, line: 2073, type: !4226)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!4227 = !DILocalVariable(name: "type", scope: !4217, file: !3, line: 2074, type: !639)
!4228 = !DILocalVariable(name: "field", scope: !4217, file: !3, line: 2075, type: !639)
!4229 = !DILocation(line: 0, scope: !4217)
!4230 = !DILocation(line: 2072, column: 32, scope: !4217)
!4231 = !DILocation(line: 2074, column: 15, scope: !4217)
!4232 = !DILocation(line: 2075, column: 16, scope: !4217)
!4233 = !DILocation(line: 2077, column: 9, scope: !4217)
!4234 = !DILocation(line: 2078, column: 8, scope: !4217)
!4235 = !DILocation(line: 2078, column: 14, scope: !4217)
!4236 = !DILocation(line: 2079, column: 16, scope: !4217)
!4237 = !DILocation(line: 2079, column: 8, scope: !4217)
!4238 = !DILocation(line: 2079, column: 14, scope: !4217)
!4239 = !DILocation(line: 2081, column: 9, scope: !4217)
!4240 = !DILocation(line: 2082, column: 11, scope: !4217)
!4241 = !DILocation(line: 2083, column: 8, scope: !4217)
!4242 = !DILocation(line: 2083, column: 14, scope: !4217)
!4243 = !DILocation(line: 2084, column: 31, scope: !4217)
!4244 = !DILocation(line: 2085, column: 10, scope: !4217)
!4245 = !DILocation(line: 2084, column: 16, scope: !4217)
!4246 = !DILocation(line: 2084, column: 8, scope: !4217)
!4247 = !DILocation(line: 2084, column: 14, scope: !4217)
!4248 = !DILocation(line: 2087, column: 9, scope: !4217)
!4249 = !DILocation(line: 2088, column: 11, scope: !4217)
!4250 = !DILocation(line: 2089, column: 8, scope: !4217)
!4251 = !DILocation(line: 2089, column: 14, scope: !4217)
!4252 = !DILocation(line: 2090, column: 16, scope: !4217)
!4253 = !DILocation(line: 2090, column: 8, scope: !4217)
!4254 = !DILocation(line: 2090, column: 14, scope: !4217)
!4255 = !DILocation(line: 2092, column: 9, scope: !4217)
!4256 = !DILocation(line: 2093, column: 11, scope: !4217)
!4257 = !DILocation(line: 2094, column: 14, scope: !4217)
!4258 = !DILocation(line: 2095, column: 8, scope: !4217)
!4259 = !DILocation(line: 2095, column: 14, scope: !4217)
!4260 = !DILocation(line: 2097, column: 10, scope: !4217)
!4261 = !DILocation(line: 2097, column: 3, scope: !4217)
!4262 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_alloc", scope: !151, file: !151, line: 1538, type: !4263, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!1494, !623}
!4265 = !{!4266}
!4266 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4262, file: !151, line: 1538, type: !623)
!4267 = !DILocation(line: 0, scope: !4262)
!4268 = !DILocation(line: 1538, column: 1, scope: !4262)
!4269 = distinct !DISubprogram(name: "VEC_constructor_elt_base_quick_push", scope: !151, file: !151, line: 1537, type: !4270, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4275)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!4226, !4272, !4273}
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!4275 = !{!4276, !4277, !4278}
!4276 = !DILocalVariable(name: "vec_", arg: 1, scope: !4269, file: !151, line: 1537, type: !4272)
!4277 = !DILocalVariable(name: "obj_", arg: 2, scope: !4269, file: !151, line: 1537, type: !4273)
!4278 = !DILocalVariable(name: "slot_", scope: !4269, file: !151, line: 1537, type: !4226)
!4279 = !DILocation(line: 0, scope: !4269)
!4280 = !DILocation(line: 1537, column: 1, scope: !4269)
!4281 = distinct !DISubprogram(name: "assemble_variable", scope: !3, file: !3, line: 2111, type: !4282, scopeLine: 2113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4284)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{null, !639, !623, !623, !623}
!4284 = !{!4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293}
!4285 = !DILocalVariable(name: "decl", arg: 1, scope: !4281, file: !3, line: 2111, type: !639)
!4286 = !DILocalVariable(name: "top_level", arg: 2, scope: !4281, file: !3, line: 2111, type: !623)
!4287 = !DILocalVariable(name: "at_end", arg: 3, scope: !4281, file: !3, line: 2112, type: !623)
!4288 = !DILocalVariable(name: "dont_output_data", arg: 4, scope: !4281, file: !3, line: 2112, type: !623)
!4289 = !DILocalVariable(name: "name", scope: !4281, file: !3, line: 2114, type: !628)
!4290 = !DILocalVariable(name: "decl_rtl", scope: !4281, file: !3, line: 2115, type: !811)
!4291 = !DILocalVariable(name: "symbol", scope: !4281, file: !3, line: 2115, type: !811)
!4292 = !DILocalVariable(name: "sect", scope: !4281, file: !3, line: 2116, type: !1044)
!4293 = !DILocalVariable(name: "to", scope: !4294, file: !3, line: 2122, type: !639)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 2121, column: 5)
!4295 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2118, column: 7)
!4296 = !DILocation(line: 0, scope: !4281)
!4297 = !DILocation(line: 2118, column: 17, scope: !4295)
!4298 = !DILocation(line: 2118, column: 9, scope: !4295)
!4299 = !DILocation(line: 2119, column: 7, scope: !4295)
!4300 = !DILocation(line: 2119, column: 10, scope: !4295)
!4301 = !DILocation(line: 2119, column: 27, scope: !4295)
!4302 = !DILocation(line: 2120, column: 7, scope: !4295)
!4303 = !DILocation(line: 2120, column: 10, scope: !4295)
!4304 = !DILocation(line: 2118, column: 7, scope: !4281)
!4305 = !DILocation(line: 2122, column: 17, scope: !4294)
!4306 = !DILocation(line: 0, scope: !4294)
!4307 = !DILocation(line: 2129, column: 13, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 2129, column: 11)
!4309 = !DILocation(line: 2130, column: 4, scope: !4308)
!4310 = !DILocation(line: 2130, column: 10, scope: !4308)
!4311 = !DILocation(line: 2131, column: 8, scope: !4308)
!4312 = !DILocation(line: 2131, column: 12, scope: !4308)
!4313 = !DILocation(line: 2132, column: 5, scope: !4308)
!4314 = !DILocation(line: 2132, column: 31, scope: !4308)
!4315 = !DILocation(line: 2132, column: 28, scope: !4308)
!4316 = !DILocation(line: 2129, column: 11, scope: !4294)
!4317 = !DILocation(line: 2134, column: 39, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 2133, column: 2)
!4319 = !DILocation(line: 2135, column: 17, scope: !4318)
!4320 = !DILocation(line: 2134, column: 24, scope: !4318)
!4321 = !DILocation(line: 2134, column: 4, scope: !4318)
!4322 = !DILocation(line: 2134, column: 22, scope: !4318)
!4323 = !DILocation(line: 2141, column: 4, scope: !4318)
!4324 = !DILocation(line: 2142, column: 2, scope: !4318)
!4325 = !DILocation(line: 2147, column: 31, scope: !4281)
!4326 = !DILocation(line: 2153, column: 7, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2153, column: 7)
!4328 = !DILocation(line: 2153, column: 7, scope: !4281)
!4329 = !DILocation(line: 2159, column: 7, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2159, column: 7)
!4331 = !DILocation(line: 2159, column: 24, scope: !4330)
!4332 = !DILocation(line: 2159, column: 7, scope: !4281)
!4333 = !DILocation(line: 2163, column: 7, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2163, column: 7)
!4335 = !DILocation(line: 2163, column: 29, scope: !4334)
!4336 = !DILocation(line: 2163, column: 32, scope: !4334)
!4337 = !DILocation(line: 2163, column: 7, scope: !4281)
!4338 = !DILocation(line: 2165, column: 31, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 2164, column: 5)
!4340 = !DILocation(line: 2166, column: 7, scope: !4339)
!4341 = !DILocation(line: 2172, column: 7, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2172, column: 7)
!4343 = !DILocation(line: 2172, column: 24, scope: !4342)
!4344 = !DILocation(line: 2172, column: 7, scope: !4281)
!4345 = !DILocation(line: 2173, column: 5, scope: !4342)
!4346 = !DILocation(line: 2178, column: 8, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2178, column: 7)
!4348 = !DILocation(line: 2178, column: 25, scope: !4347)
!4349 = !DILocation(line: 2178, column: 28, scope: !4347)
!4350 = !DILocation(line: 2178, column: 45, scope: !4347)
!4351 = !DILocation(line: 2178, column: 7, scope: !4281)
!4352 = !DILocation(line: 2180, column: 7, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 2179, column: 5)
!4354 = !DILocation(line: 2181, column: 31, scope: !4353)
!4355 = !DILocation(line: 2182, column: 7, scope: !4353)
!4356 = !DILocation(line: 2190, column: 7, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2190, column: 7)
!4358 = !DILocation(line: 2190, column: 7, scope: !4281)
!4359 = !DILocation(line: 2195, column: 14, scope: !4281)
!4360 = !DILocation(line: 2197, column: 27, scope: !4281)
!4361 = !DILocation(line: 2200, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2200, column: 7)
!4363 = !DILocation(line: 2200, column: 7, scope: !4281)
!4364 = !DILocation(line: 2203, column: 3, scope: !4281)
!4365 = !DILocation(line: 2206, column: 7, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2205, column: 7)
!4367 = !DILocation(line: 2206, column: 27, scope: !4366)
!4368 = !DILocation(line: 2206, column: 12, scope: !4366)
!4369 = !DILocation(line: 2205, column: 7, scope: !4281)
!4370 = !DILocation(line: 2208, column: 7, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 2207, column: 5)
!4372 = !DILocation(line: 2209, column: 7, scope: !4371)
!4373 = !DILocation(line: 2212, column: 3, scope: !4281)
!4374 = !DILocation(line: 2213, column: 3, scope: !4281)
!4375 = !DILocation(line: 2214, column: 12, scope: !4281)
!4376 = !DILocation(line: 2215, column: 10, scope: !4281)
!4377 = !DILocation(line: 2216, column: 7, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2216, column: 7)
!4379 = !DILocation(line: 2216, column: 26, scope: !4378)
!4380 = !DILocation(line: 2216, column: 29, scope: !4378)
!4381 = !DILocation(line: 2216, column: 7, scope: !4281)
!4382 = !DILocation(line: 2217, column: 5, scope: !4378)
!4383 = !DILocation(line: 2221, column: 25, scope: !4281)
!4384 = !DILocation(line: 2221, column: 3, scope: !4281)
!4385 = !DILocation(line: 2222, column: 28, scope: !4281)
!4386 = !DILocation(line: 2222, column: 3, scope: !4281)
!4387 = !DILocation(line: 2224, column: 7, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2224, column: 7)
!4389 = !DILocation(line: 2224, column: 7, scope: !4281)
!4390 = !DILocation(line: 2225, column: 5, scope: !4388)
!4391 = !DILocation(line: 2227, column: 7, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2227, column: 7)
!4393 = !DILocation(line: 2227, column: 7, scope: !4281)
!4394 = !DILocation(line: 2228, column: 21, scope: !4392)
!4395 = !DILocation(line: 2228, column: 5, scope: !4392)
!4396 = !DILocation(line: 2231, column: 10, scope: !4281)
!4397 = !DILocation(line: 2232, column: 7, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2232, column: 7)
!4399 = !DILocation(line: 2233, column: 7, scope: !4398)
!4400 = !DILocation(line: 2233, column: 24, scope: !4398)
!4401 = !DILocation(line: 2233, column: 30, scope: !4398)
!4402 = !DILocation(line: 2233, column: 48, scope: !4398)
!4403 = !DILocation(line: 2232, column: 7, scope: !4281)
!4404 = !DILocation(line: 2234, column: 5, scope: !4398)
!4405 = !DILocation(line: 2237, column: 7, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2237, column: 7)
!4407 = !DILocation(line: 2237, column: 27, scope: !4406)
!4408 = !DILocation(line: 2237, column: 53, scope: !4406)
!4409 = !DILocation(line: 2237, column: 50, scope: !4406)
!4410 = !DILocation(line: 2237, column: 7, scope: !4281)
!4411 = !DILocation(line: 2238, column: 5, scope: !4406)
!4412 = !DILocation(line: 2241, column: 7, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2241, column: 7)
!4414 = !DILocation(line: 2241, column: 12, scope: !4413)
!4415 = !DILocation(line: 2241, column: 29, scope: !4413)
!4416 = !DILocation(line: 2241, column: 35, scope: !4413)
!4417 = !DILocation(line: 2241, column: 51, scope: !4413)
!4418 = !DILocation(line: 2241, column: 7, scope: !4281)
!4419 = !DILocation(line: 2242, column: 5, scope: !4413)
!4420 = !DILocation(line: 2242, column: 33, scope: !4413)
!4421 = !DILocation(line: 2247, column: 7, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 2247, column: 7)
!4423 = !DILocation(line: 2247, column: 44, scope: !4422)
!4424 = !DILocation(line: 2247, column: 47, scope: !4422)
!4425 = !DILocation(line: 2247, column: 7, scope: !4281)
!4426 = !DILocation(line: 2249, column: 7, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 2248, column: 5)
!4428 = !DILocation(line: 2250, column: 7, scope: !4427)
!4429 = !DILocation(line: 2251, column: 5, scope: !4427)
!4430 = !DILocation(line: 2252, column: 12, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 2252, column: 12)
!4432 = !DILocation(line: 2252, column: 33, scope: !4431)
!4433 = !DILocation(line: 2252, column: 12, scope: !4422)
!4434 = !DILocation(line: 2253, column: 5, scope: !4431)
!4435 = !DILocation(line: 2256, column: 7, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2255, column: 5)
!4437 = !DILocation(line: 2257, column: 11, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 2257, column: 11)
!4439 = !DILocation(line: 2257, column: 29, scope: !4438)
!4440 = !DILocation(line: 2257, column: 11, scope: !4436)
!4441 = !DILocation(line: 2258, column: 2, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2258, column: 2)
!4443 = !DILocation(line: 2258, column: 2, scope: !4438)
!4444 = !DILocation(line: 2259, column: 7, scope: !4436)
!4445 = !DILocation(line: 2261, column: 1, scope: !4281)
!4446 = distinct !DISubprogram(name: "get_emutls_init_templ_addr", scope: !3, file: !3, line: 300, type: !2509, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4447)
!4447 = !{!4448, !4449, !4450, !4451}
!4448 = !DILocalVariable(name: "decl", arg: 1, scope: !4446, file: !3, line: 300, type: !639)
!4449 = !DILocalVariable(name: "name", scope: !4446, file: !3, line: 302, type: !639)
!4450 = !DILocalVariable(name: "to", scope: !4446, file: !3, line: 302, type: !639)
!4451 = !DILocalVariable(name: "prefix", scope: !4452, file: !3, line: 311, type: !628)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 310, column: 5)
!4453 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 309, column: 7)
!4454 = !DILocation(line: 0, scope: !4446)
!4455 = !DILocation(line: 304, column: 22, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 304, column: 7)
!4457 = !DILocation(line: 304, column: 7, scope: !4456)
!4458 = !DILocation(line: 304, column: 38, scope: !4456)
!4459 = !DILocation(line: 304, column: 42, scope: !4456)
!4460 = !DILocation(line: 305, column: 7, scope: !4456)
!4461 = !DILocation(line: 305, column: 11, scope: !4456)
!4462 = !DILocation(line: 304, column: 7, scope: !4446)
!4463 = !DILocation(line: 306, column: 12, scope: !4456)
!4464 = !DILocation(line: 306, column: 5, scope: !4456)
!4465 = !DILocation(line: 308, column: 10, scope: !4446)
!4466 = !DILocation(line: 309, column: 23, scope: !4453)
!4467 = !DILocation(line: 309, column: 8, scope: !4453)
!4468 = !DILocation(line: 309, column: 35, scope: !4453)
!4469 = !DILocation(line: 309, column: 38, scope: !4453)
!4470 = !DILocation(line: 309, column: 7, scope: !4446)
!4471 = !DILocation(line: 311, column: 29, scope: !4452)
!4472 = !DILocation(line: 0, scope: !4452)
!4473 = !DILocation(line: 314, column: 14, scope: !4452)
!4474 = !DILocation(line: 315, column: 5, scope: !4452)
!4475 = !DILocation(line: 317, column: 8, scope: !4446)
!4476 = !DILocation(line: 319, column: 3, scope: !4446)
!4477 = !DILocation(line: 320, column: 3, scope: !4446)
!4478 = !DILocation(line: 320, column: 23, scope: !4446)
!4479 = !DILocation(line: 321, column: 3, scope: !4446)
!4480 = !DILocation(line: 321, column: 24, scope: !4446)
!4481 = !DILocation(line: 322, column: 20, scope: !4446)
!4482 = !DILocation(line: 322, column: 3, scope: !4446)
!4483 = !DILocation(line: 322, column: 18, scope: !4446)
!4484 = !DILocation(line: 323, column: 22, scope: !4446)
!4485 = !DILocation(line: 324, column: 23, scope: !4446)
!4486 = !DILocation(line: 325, column: 23, scope: !4446)
!4487 = !DILocation(line: 325, column: 3, scope: !4446)
!4488 = !DILocation(line: 325, column: 21, scope: !4446)
!4489 = !DILocation(line: 326, column: 28, scope: !4446)
!4490 = !DILocation(line: 326, column: 3, scope: !4446)
!4491 = !DILocation(line: 326, column: 26, scope: !4446)
!4492 = !DILocation(line: 328, column: 20, scope: !4446)
!4493 = !DILocation(line: 328, column: 18, scope: !4446)
!4494 = !DILocation(line: 329, column: 7, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 329, column: 7)
!4496 = !DILocation(line: 329, column: 7, scope: !4446)
!4497 = !DILocation(line: 331, column: 31, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 330, column: 5)
!4499 = !DILocation(line: 331, column: 7, scope: !4498)
!4500 = !DILocation(line: 332, column: 26, scope: !4498)
!4501 = !DILocation(line: 332, column: 24, scope: !4498)
!4502 = !DILocation(line: 333, column: 26, scope: !4498)
!4503 = !DILocation(line: 333, column: 24, scope: !4498)
!4504 = !DILocation(line: 334, column: 30, scope: !4498)
!4505 = !DILocation(line: 334, column: 28, scope: !4498)
!4506 = !DILocation(line: 335, column: 5, scope: !4498)
!4507 = !DILocation(line: 337, column: 22, scope: !4495)
!4508 = !DILocation(line: 339, column: 23, scope: !4446)
!4509 = !DILocation(line: 339, column: 3, scope: !4446)
!4510 = !DILocation(line: 339, column: 21, scope: !4446)
!4511 = !DILocation(line: 340, column: 23, scope: !4446)
!4512 = !DILocation(line: 342, column: 3, scope: !4446)
!4513 = !DILocation(line: 343, column: 10, scope: !4446)
!4514 = !DILocation(line: 343, column: 3, scope: !4446)
!4515 = !DILocation(line: 344, column: 1, scope: !4446)
!4516 = distinct !DISubprogram(name: "get_variable_section", scope: !3, file: !3, line: 1169, type: !4517, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4519)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!1044, !639, !622}
!4519 = !{!4520, !4521, !4522, !4523}
!4520 = !DILocalVariable(name: "decl", arg: 1, scope: !4516, file: !3, line: 1169, type: !639)
!4521 = !DILocalVariable(name: "prefer_noswitch_p", arg: 2, scope: !4516, file: !3, line: 1169, type: !622)
!4522 = !DILocalVariable(name: "as", scope: !4516, file: !3, line: 1171, type: !3219)
!4523 = !DILocalVariable(name: "reloc", scope: !4516, file: !3, line: 1172, type: !623)
!4524 = !DILocation(line: 0, scope: !4516)
!4525 = !DILocation(line: 1174, column: 7, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1174, column: 7)
!4527 = !DILocation(line: 1174, column: 27, scope: !4526)
!4528 = !DILocation(line: 1174, column: 24, scope: !4526)
!4529 = !DILocation(line: 1174, column: 7, scope: !4516)
!4530 = !DILocation(line: 1175, column: 10, scope: !4526)
!4531 = !DILocation(line: 1175, column: 5, scope: !4526)
!4532 = !DILocation(line: 1177, column: 7, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1177, column: 7)
!4534 = !DILocation(line: 1177, column: 7, scope: !4516)
!4535 = !DILocation(line: 1182, column: 7, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 1178, column: 5)
!4537 = !DILocation(line: 1184, column: 11, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 1184, column: 11)
!4539 = !DILocation(line: 1184, column: 11, scope: !4536)
!4540 = !DILocation(line: 1185, column: 9, scope: !4538)
!4541 = !DILocation(line: 1185, column: 2, scope: !4538)
!4542 = !DILocation(line: 1188, column: 16, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 1188, column: 16)
!4544 = !DILocation(line: 1188, column: 38, scope: !4543)
!4545 = !DILocation(line: 1189, column: 28, scope: !4543)
!4546 = !DILocation(line: 1189, column: 13, scope: !4543)
!4547 = !DILocation(line: 1189, column: 9, scope: !4543)
!4548 = !DILocation(line: 1191, column: 16, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 1191, column: 16)
!4550 = !DILocation(line: 1191, column: 35, scope: !4549)
!4551 = !DILocation(line: 1191, column: 38, scope: !4549)
!4552 = !DILocation(line: 1191, column: 16, scope: !4543)
!4553 = !DILocation(line: 1192, column: 9, scope: !4549)
!4554 = !DILocation(line: 1192, column: 2, scope: !4549)
!4555 = !DILocation(line: 1195, column: 7, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1195, column: 7)
!4557 = !DILocation(line: 1195, column: 30, scope: !4556)
!4558 = !DILocation(line: 1195, column: 27, scope: !4556)
!4559 = !DILocation(line: 1195, column: 7, scope: !4516)
!4560 = !DILocation(line: 1196, column: 34, scope: !4556)
!4561 = !DILocation(line: 1196, column: 13, scope: !4556)
!4562 = !DILocation(line: 1196, column: 5, scope: !4556)
!4563 = !DILocation(line: 1197, column: 12, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1197, column: 12)
!4565 = !DILocation(line: 1197, column: 12, scope: !4556)
!4566 = !DILocation(line: 1198, column: 13, scope: !4564)
!4567 = !DILocation(line: 1198, column: 5, scope: !4564)
!4568 = !DILocation(line: 0, scope: !4556)
!4569 = !DILocation(line: 1202, column: 40, scope: !4516)
!4570 = !DILocation(line: 1202, column: 3, scope: !4516)
!4571 = !DILocation(line: 1203, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1203, column: 7)
!4573 = !DILocation(line: 1203, column: 7, scope: !4516)
!4574 = !DILocation(line: 1204, column: 12, scope: !4572)
!4575 = !DILocation(line: 1204, column: 5, scope: !4572)
!4576 = !DILocation(line: 1206, column: 7, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1206, column: 7)
!4578 = !DILocation(line: 1207, column: 7, scope: !4577)
!4579 = !DILocation(line: 1207, column: 11, scope: !4577)
!4580 = !DILocation(line: 1208, column: 7, scope: !4577)
!4581 = !DILocation(line: 1208, column: 12, scope: !4577)
!4582 = !DILocation(line: 1208, column: 30, scope: !4577)
!4583 = !DILocation(line: 1208, column: 41, scope: !4577)
!4584 = !DILocation(line: 1208, column: 33, scope: !4577)
!4585 = !DILocation(line: 1209, column: 7, scope: !4577)
!4586 = !DILocation(line: 1209, column: 10, scope: !4577)
!4587 = !DILocation(line: 1206, column: 7, scope: !4516)
!4588 = !DILocation(line: 1211, column: 12, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1211, column: 11)
!4590 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 1210, column: 5)
!4591 = !DILocation(line: 1211, column: 11, scope: !4590)
!4592 = !DILocation(line: 1212, column: 9, scope: !4589)
!4593 = !DILocation(line: 1212, column: 2, scope: !4589)
!4594 = !DILocation(line: 1213, column: 11, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1213, column: 11)
!4596 = !DILocation(line: 1213, column: 11, scope: !4590)
!4597 = !DILocation(line: 1214, column: 2, scope: !4595)
!4598 = !DILocation(line: 1217, column: 26, scope: !4516)
!4599 = !DILocation(line: 1217, column: 55, scope: !4516)
!4600 = !DILocation(line: 1217, column: 10, scope: !4516)
!4601 = !DILocation(line: 1217, column: 3, scope: !4516)
!4602 = !DILocation(line: 1218, column: 1, scope: !4516)
!4603 = distinct !DISubprogram(name: "output_addressed_constants", scope: !3, file: !3, line: 4090, type: !3196, scopeLine: 4091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4604)
!4604 = !{!4605, !4606, !4607}
!4605 = !DILocalVariable(name: "exp", arg: 1, scope: !4603, file: !3, line: 4090, type: !639)
!4606 = !DILocalVariable(name: "tem", scope: !4603, file: !3, line: 4092, type: !639)
!4607 = !DILocalVariable(name: "idx", scope: !4608, file: !3, line: 4126, type: !692)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 4125, column: 7)
!4609 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 4095, column: 5)
!4610 = !DILocation(line: 4121, column: 7, scope: !4609)
!4611 = !DILocation(line: 0, scope: !4603)
!4612 = !DILocation(line: 4094, column: 11, scope: !4603)
!4613 = !DILocation(line: 4094, column: 3, scope: !4603)
!4614 = !DILocation(line: 0, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 4127, column: 2)
!4616 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 4127, column: 2)
!4617 = !DILocation(line: 4127, column: 2, scope: !4616)
!4618 = !DILocation(line: 4101, column: 12, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 4101, column: 7)
!4620 = !DILocation(line: 0, scope: !4619)
!4621 = !DILocation(line: 4101, column: 41, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 4101, column: 7)
!4623 = !DILocation(line: 4101, column: 7, scope: !4619)
!4624 = !DILocation(line: 4101, column: 7, scope: !4622)
!4625 = distinct !{!4625, !4623, !4626}
!4626 = !DILocation(line: 4103, column: 2, scope: !4619)
!4627 = !DILocation(line: 4106, column: 11, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 4106, column: 11)
!4629 = !DILocation(line: 4106, column: 27, scope: !4628)
!4630 = !DILocation(line: 4106, column: 41, scope: !4628)
!4631 = !DILocation(line: 4106, column: 44, scope: !4628)
!4632 = !DILocation(line: 4106, column: 11, scope: !4609)
!4633 = !DILocation(line: 0, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 4109, column: 11)
!4635 = !DILocation(line: 4109, column: 11, scope: !4634)
!4636 = !DILocation(line: 4107, column: 2, scope: !4628)
!4637 = !DILocation(line: 0, scope: !4609)
!4638 = !DILocation(line: 4109, column: 34, scope: !4634)
!4639 = !DILocation(line: 4109, column: 53, scope: !4634)
!4640 = !DILocation(line: 4109, column: 11, scope: !4609)
!4641 = !DILocation(line: 4110, column: 2, scope: !4634)
!4642 = !DILocation(line: 4116, column: 35, scope: !4609)
!4643 = !DILocation(line: 4116, column: 7, scope: !4609)
!4644 = !DILocation(line: 4121, column: 35, scope: !4609)
!4645 = !DILocation(line: 0, scope: !4616)
!4646 = !DILocation(line: 0, scope: !4608)
!4647 = !DILocation(line: 4127, column: 2, scope: !4615)
!4648 = !DILocation(line: 4128, column: 12, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 4128, column: 8)
!4650 = !DILocation(line: 4128, column: 8, scope: !4615)
!4651 = !DILocation(line: 4129, column: 6, scope: !4649)
!4652 = distinct !{!4652, !4617, !4653}
!4653 = !DILocation(line: 4129, column: 37, scope: !4616)
!4654 = !DILocation(line: 4136, column: 1, scope: !4603)
!4655 = distinct !DISubprogram(name: "place_block_symbol", scope: !3, file: !3, line: 6848, type: !4656, scopeLine: 6849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{null, !811}
!4658 = !{!4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666}
!4659 = !DILocalVariable(name: "symbol", arg: 1, scope: !4655, file: !3, line: 6848, type: !811)
!4660 = !DILocalVariable(name: "size", scope: !4655, file: !3, line: 6850, type: !692)
!4661 = !DILocalVariable(name: "mask", scope: !4655, file: !3, line: 6850, type: !692)
!4662 = !DILocalVariable(name: "offset", scope: !4655, file: !3, line: 6850, type: !692)
!4663 = !DILocalVariable(name: "desc", scope: !4655, file: !3, line: 6851, type: !1017)
!4664 = !DILocalVariable(name: "alignment", scope: !4655, file: !3, line: 6852, type: !7)
!4665 = !DILocalVariable(name: "block", scope: !4655, file: !3, line: 6853, type: !1040)
!4666 = !DILocalVariable(name: "decl", scope: !4655, file: !3, line: 6854, type: !639)
!4667 = !DILocation(line: 0, scope: !4655)
!4668 = !DILocation(line: 6856, column: 3, scope: !4655)
!4669 = !DILocation(line: 6857, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 6857, column: 7)
!4671 = !DILocation(line: 6857, column: 40, scope: !4670)
!4672 = !DILocation(line: 6857, column: 7, scope: !4655)
!4673 = !DILocation(line: 6861, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 6861, column: 7)
!4675 = !DILocation(line: 6861, column: 7, scope: !4655)
!4676 = !DILocation(line: 6863, column: 14, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 6862, column: 5)
!4678 = !DILocation(line: 6864, column: 25, scope: !4677)
!4679 = !DILocation(line: 6865, column: 14, scope: !4677)
!4680 = !DILocation(line: 6866, column: 5, scope: !4677)
!4681 = !DILocation(line: 6867, column: 12, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 6867, column: 12)
!4683 = !DILocation(line: 6867, column: 12, scope: !4674)
!4684 = !DILocation(line: 6869, column: 14, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 6868, column: 5)
!4686 = !DILocation(line: 6870, column: 19, scope: !4685)
!4687 = !DILocation(line: 6871, column: 14, scope: !4685)
!4688 = !DILocation(line: 6872, column: 5, scope: !4685)
!4689 = !DILocation(line: 6875, column: 14, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 6874, column: 5)
!4691 = !DILocation(line: 6876, column: 19, scope: !4690)
!4692 = !DILocation(line: 6877, column: 28, scope: !4690)
!4693 = !DILocation(line: 6877, column: 14, scope: !4690)
!4694 = !DILocation(line: 0, scope: !4674)
!4695 = !DILocation(line: 6881, column: 11, scope: !4655)
!4696 = !DILocation(line: 6882, column: 20, scope: !4655)
!4697 = !DILocation(line: 6882, column: 36, scope: !4655)
!4698 = !DILocation(line: 6882, column: 10, scope: !4655)
!4699 = !DILocation(line: 6883, column: 20, scope: !4655)
!4700 = !DILocation(line: 6883, column: 25, scope: !4655)
!4701 = !DILocation(line: 6883, column: 35, scope: !4655)
!4702 = !DILocation(line: 6883, column: 33, scope: !4655)
!4703 = !DILocation(line: 6884, column: 36, scope: !4655)
!4704 = !DILocation(line: 6887, column: 22, scope: !4655)
!4705 = !DILocation(line: 6887, column: 20, scope: !4655)
!4706 = !DILocation(line: 6888, column: 24, scope: !4655)
!4707 = !DILocation(line: 6888, column: 15, scope: !4655)
!4708 = !DILocation(line: 6890, column: 3, scope: !4655)
!4709 = !DILocation(line: 6891, column: 1, scope: !4655)
!4710 = distinct !DISubprogram(name: "assemble_noswitch_variable", scope: !3, file: !3, line: 2010, type: !4711, scopeLine: 2011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4713)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{null, !639, !628, !1044}
!4713 = !{!4714, !4715, !4716, !4717, !4718}
!4714 = !DILocalVariable(name: "decl", arg: 1, scope: !4710, file: !3, line: 2010, type: !639)
!4715 = !DILocalVariable(name: "name", arg: 2, scope: !4710, file: !3, line: 2010, type: !628)
!4716 = !DILocalVariable(name: "sect", arg: 3, scope: !4710, file: !3, line: 2010, type: !1044)
!4717 = !DILocalVariable(name: "size", scope: !4710, file: !3, line: 2012, type: !692)
!4718 = !DILocalVariable(name: "rounded", scope: !4710, file: !3, line: 2012, type: !692)
!4719 = !DILocation(line: 0, scope: !4710)
!4720 = !DILocation(line: 2014, column: 24, scope: !4710)
!4721 = !DILocation(line: 2014, column: 10, scope: !4710)
!4722 = !DILocation(line: 2019, column: 12, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 2019, column: 7)
!4724 = !DILocation(line: 2019, column: 7, scope: !4710)
!4725 = !DILocation(line: 2024, column: 15, scope: !4710)
!4726 = !DILocation(line: 2024, column: 50, scope: !4710)
!4727 = !DILocation(line: 2024, column: 11, scope: !4710)
!4728 = !DILocation(line: 2025, column: 22, scope: !4710)
!4729 = !DILocation(line: 2026, column: 28, scope: !4710)
!4730 = !DILocation(line: 2026, column: 7, scope: !4710)
!4731 = !DILocation(line: 2028, column: 23, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 2028, column: 7)
!4733 = !DILocation(line: 2028, column: 8, scope: !4732)
!4734 = !DILocation(line: 2029, column: 7, scope: !4732)
!4735 = !DILocation(line: 2029, column: 35, scope: !4732)
!4736 = !DILocation(line: 2029, column: 10, scope: !4732)
!4737 = !DILocation(line: 2029, column: 58, scope: !4732)
!4738 = !DILocation(line: 2028, column: 7, scope: !4710)
!4739 = !DILocation(line: 2030, column: 5, scope: !4732)
!4740 = !DILocation(line: 2032, column: 1, scope: !4710)
!4741 = distinct !DISubprogram(name: "assemble_variable_contents", scope: !3, file: !3, line: 2039, type: !4742, scopeLine: 2041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4744)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{null, !639, !628, !622}
!4744 = !{!4745, !4746, !4747, !4748, !4750}
!4745 = !DILocalVariable(name: "decl", arg: 1, scope: !4741, file: !3, line: 2039, type: !639)
!4746 = !DILocalVariable(name: "name", arg: 2, scope: !4741, file: !3, line: 2039, type: !628)
!4747 = !DILocalVariable(name: "dont_output_data", arg: 3, scope: !4741, file: !3, line: 2040, type: !622)
!4748 = !DILocalVariable(name: "size", scope: !4749, file: !3, line: 2045, type: !694)
!4749 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2045, column: 3)
!4750 = !DILocalVariable(name: "size_", scope: !4751, file: !3, line: 2045, type: !694)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 2045, column: 3)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 2045, column: 3)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 2045, column: 3)
!4754 = !DILocation(line: 0, scope: !4741)
!4755 = !DILocation(line: 2044, column: 31, scope: !4741)
!4756 = !DILocation(line: 2045, column: 3, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 2045, column: 3)
!4758 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 2045, column: 3)
!4759 = !DILocation(line: 2045, column: 3, scope: !4749)
!4760 = !DILocation(line: 2045, column: 3, scope: !4753)
!4761 = !DILocation(line: 2045, column: 3, scope: !4752)
!4762 = !DILocation(line: 0, scope: !4749)
!4763 = !DILocation(line: 0, scope: !4751)
!4764 = !DILocation(line: 2045, column: 3, scope: !4751)
!4765 = !DILocation(line: 2045, column: 3, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 2045, column: 3)
!4767 = !DILocation(line: 2051, column: 8, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2051, column: 7)
!4769 = !DILocation(line: 2051, column: 7, scope: !4741)
!4770 = !DILocation(line: 2053, column: 11, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 2053, column: 11)
!4772 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2052, column: 5)
!4773 = !DILocation(line: 2054, column: 4, scope: !4771)
!4774 = !DILocation(line: 2054, column: 30, scope: !4771)
!4775 = !DILocation(line: 2054, column: 27, scope: !4771)
!4776 = !DILocation(line: 2055, column: 4, scope: !4771)
!4777 = !DILocation(line: 2055, column: 8, scope: !4771)
!4778 = !DILocation(line: 2053, column: 11, scope: !4772)
!4779 = !DILocation(line: 2057, column: 19, scope: !4771)
!4780 = !DILocation(line: 2058, column: 19, scope: !4771)
!4781 = !DILocation(line: 2058, column: 5, scope: !4771)
!4782 = !DILocation(line: 2059, column: 5, scope: !4771)
!4783 = !DILocation(line: 2057, column: 2, scope: !4771)
!4784 = !DILocation(line: 2062, column: 32, scope: !4771)
!4785 = !DILocation(line: 2062, column: 18, scope: !4771)
!4786 = !DILocation(line: 2062, column: 2, scope: !4771)
!4787 = !DILocation(line: 2064, column: 1, scope: !4741)
!4788 = distinct !DISubprogram(name: "process_pending_assemble_externals", scope: !3, file: !3, line: 2346, type: !2666, scopeLine: 2347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4789)
!4789 = !{!4790}
!4790 = !DILocalVariable(name: "list", scope: !4788, file: !3, line: 2349, type: !639)
!4791 = !DILocation(line: 2350, column: 8, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 2350, column: 3)
!4793 = !DILocation(line: 0, scope: !4792)
!4794 = !DILocation(line: 0, scope: !4788)
!4795 = !DILocation(line: 2350, column: 3, scope: !4792)
!4796 = !DILocation(line: 2351, column: 29, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2350, column: 3)
!4798 = !DILocation(line: 2351, column: 5, scope: !4797)
!4799 = !DILocation(line: 2350, column: 56, scope: !4797)
!4800 = !DILocation(line: 2350, column: 3, scope: !4797)
!4801 = distinct !{!4801, !4795, !4802}
!4802 = !DILocation(line: 2351, column: 46, scope: !4792)
!4803 = !DILocation(line: 2353, column: 30, scope: !4788)
!4804 = !DILocation(line: 2355, column: 1, scope: !4788)
!4805 = distinct !DISubprogram(name: "assemble_external_real", scope: !3, file: !3, line: 2330, type: !3196, scopeLine: 2331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4806)
!4806 = !{!4807, !4808}
!4807 = !DILocalVariable(name: "decl", arg: 1, scope: !4805, file: !3, line: 2330, type: !639)
!4808 = !DILocalVariable(name: "rtl", scope: !4805, file: !3, line: 2332, type: !811)
!4809 = !DILocation(line: 0, scope: !4805)
!4810 = !DILocation(line: 2332, column: 13, scope: !4805)
!4811 = !DILocation(line: 2334, column: 7, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 2334, column: 7)
!4813 = !DILocation(line: 2334, column: 19, scope: !4812)
!4814 = !DILocation(line: 2334, column: 22, scope: !4812)
!4815 = !DILocation(line: 2334, column: 47, scope: !4812)
!4816 = !DILocation(line: 2335, column: 7, scope: !4812)
!4817 = !DILocation(line: 2335, column: 11, scope: !4812)
!4818 = !DILocation(line: 2336, column: 7, scope: !4812)
!4819 = !DILocation(line: 2336, column: 11, scope: !4812)
!4820 = !DILocation(line: 2334, column: 7, scope: !4805)
!4821 = !DILocation(line: 2339, column: 7, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2337, column: 5)
!4823 = !DILocation(line: 2339, column: 39, scope: !4822)
!4824 = !DILocation(line: 2340, column: 7, scope: !4822)
!4825 = !DILocation(line: 2341, column: 5, scope: !4822)
!4826 = !DILocation(line: 2342, column: 1, scope: !4805)
!4827 = distinct !DISubprogram(name: "assemble_external", scope: !3, file: !3, line: 2367, type: !3196, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4828)
!4828 = !{!4829}
!4829 = !DILocalVariable(name: "decl", arg: 1, scope: !4827, file: !3, line: 2367, type: !639)
!4830 = !DILocation(line: 0, scope: !4827)
!4831 = !DILocation(line: 2373, column: 3, scope: !4827)
!4832 = !DILocation(line: 2375, column: 8, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2375, column: 7)
!4834 = !DILocation(line: 2375, column: 22, scope: !4833)
!4835 = !DILocation(line: 2375, column: 26, scope: !4833)
!4836 = !DILocation(line: 2375, column: 47, scope: !4833)
!4837 = !DILocation(line: 2375, column: 51, scope: !4833)
!4838 = !DILocation(line: 2375, column: 7, scope: !4827)
!4839 = !DILocation(line: 2382, column: 10, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2381, column: 7)
!4841 = !DILocation(line: 2388, column: 7, scope: !4840)
!4842 = !DILocation(line: 2388, column: 11, scope: !4840)
!4843 = !DILocation(line: 2389, column: 7, scope: !4840)
!4844 = !DILocation(line: 2389, column: 36, scope: !4840)
!4845 = !DILocation(line: 2389, column: 10, scope: !4840)
!4846 = !DILocation(line: 2390, column: 7, scope: !4840)
!4847 = !DILocation(line: 2390, column: 30, scope: !4840)
!4848 = !DILocation(line: 2390, column: 10, scope: !4840)
!4849 = !DILocation(line: 2390, column: 42, scope: !4840)
!4850 = !DILocation(line: 2381, column: 7, scope: !4827)
!4851 = !DILocation(line: 2391, column: 18, scope: !4840)
!4852 = !DILocation(line: 2391, column: 16, scope: !4840)
!4853 = !DILocation(line: 2391, column: 5, scope: !4840)
!4854 = !DILocation(line: 2394, column: 27, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 2394, column: 7)
!4856 = !DILocation(line: 2394, column: 7, scope: !4855)
!4857 = !DILocation(line: 2394, column: 55, scope: !4855)
!4858 = !DILocation(line: 2394, column: 7, scope: !4827)
!4859 = !DILocation(line: 2395, column: 34, scope: !4855)
!4860 = !DILocation(line: 2395, column: 32, scope: !4855)
!4861 = !DILocation(line: 2395, column: 5, scope: !4855)
!4862 = !DILocation(line: 2398, column: 1, scope: !4827)
!4863 = distinct !DISubprogram(name: "assemble_external_libcall", scope: !3, file: !3, line: 2403, type: !4656, scopeLine: 2404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4864)
!4864 = !{!4865}
!4865 = !DILocalVariable(name: "fun", arg: 1, scope: !4863, file: !3, line: 2403, type: !811)
!4866 = !DILocation(line: 0, scope: !4863)
!4867 = !DILocation(line: 2406, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2406, column: 7)
!4869 = !DILocation(line: 2406, column: 7, scope: !4863)
!4870 = !DILocation(line: 2408, column: 29, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 2407, column: 5)
!4872 = !DILocation(line: 2409, column: 23, scope: !4871)
!4873 = !DILocation(line: 2409, column: 7, scope: !4871)
!4874 = !DILocation(line: 2410, column: 5, scope: !4871)
!4875 = !DILocation(line: 2411, column: 1, scope: !4863)
!4876 = distinct !DISubprogram(name: "assemble_label", scope: !3, file: !3, line: 2416, type: !4877, scopeLine: 2417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4879)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{null, !628}
!4879 = !{!4880}
!4880 = !DILocalVariable(name: "name", arg: 1, scope: !4876, file: !3, line: 2416, type: !628)
!4881 = !DILocation(line: 0, scope: !4876)
!4882 = !DILocation(line: 2418, column: 3, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 2418, column: 3)
!4884 = !DILocation(line: 2419, column: 1, scope: !4876)
!4885 = distinct !DISubprogram(name: "mark_referenced", scope: !3, file: !3, line: 2423, type: !3196, scopeLine: 2424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4886)
!4886 = !{!4887}
!4887 = !DILocalVariable(name: "id", arg: 1, scope: !4885, file: !3, line: 2423, type: !639)
!4888 = !DILocation(line: 0, scope: !4885)
!4889 = !DILocation(line: 2425, column: 3, scope: !4885)
!4890 = !DILocation(line: 2425, column: 31, scope: !4885)
!4891 = !DILocation(line: 2426, column: 1, scope: !4885)
!4892 = distinct !DISubprogram(name: "mark_decl_referenced", scope: !3, file: !3, line: 2430, type: !3196, scopeLine: 2431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4893)
!4893 = !{!4894, !4895, !5041}
!4894 = !DILocalVariable(name: "decl", arg: 1, scope: !4892, file: !3, line: 2430, type: !639)
!4895 = !DILocalVariable(name: "node", scope: !4896, file: !3, line: 2438, type: !4898)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2433, column: 5)
!4897 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2432, column: 7)
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4899, size: 64)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !521, line: 181, size: 2496, elements: !4900)
!4900 = !{!4901, !4902, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4955, !4977, !4987, !4991, !5018, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !4899, file: !521, line: 182, baseType: !639, size: 64)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !4899, file: !521, line: 183, baseType: !4903, size: 64, offset: 64)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !521, line: 314, size: 768, elements: !4905)
!4905 = !{!4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4917, !4918, !4919, !4920, !4921, !4922, !4923}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4904, file: !521, line: 316, baseType: !960, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4904, file: !521, line: 317, baseType: !4898, size: 64, offset: 64)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !4904, file: !521, line: 318, baseType: !4898, size: 64, offset: 128)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !4904, file: !521, line: 319, baseType: !4903, size: 64, offset: 192)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !4904, file: !521, line: 320, baseType: !4903, size: 64, offset: 256)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !4904, file: !521, line: 321, baseType: !4903, size: 64, offset: 320)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !4904, file: !521, line: 322, baseType: !4903, size: 64, offset: 384)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !4904, file: !521, line: 323, baseType: !1415, size: 64, offset: 448)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !4904, file: !521, line: 324, baseType: !627, size: 64, offset: 512)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !4904, file: !521, line: 327, baseType: !4916, size: 32, offset: 576)
!4916 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !521, line: 312, baseType: !520)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !4904, file: !521, line: 330, baseType: !7, size: 32, offset: 608)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4904, file: !521, line: 334, baseType: !623, size: 32, offset: 640)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4904, file: !521, line: 336, baseType: !623, size: 32, offset: 672)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !4904, file: !521, line: 338, baseType: !1720, size: 16, offset: 704)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !4904, file: !521, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !4904, file: !521, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !4904, file: !521, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !4899, file: !521, line: 184, baseType: !4903, size: 64, offset: 128)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4899, file: !521, line: 185, baseType: !4898, size: 64, offset: 192)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !4899, file: !521, line: 186, baseType: !4898, size: 64, offset: 256)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !4899, file: !521, line: 188, baseType: !4898, size: 64, offset: 320)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !4899, file: !521, line: 190, baseType: !4898, size: 64, offset: 384)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !4899, file: !521, line: 192, baseType: !4898, size: 64, offset: 448)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !4899, file: !521, line: 194, baseType: !4898, size: 64, offset: 512)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !4899, file: !521, line: 196, baseType: !4898, size: 64, offset: 576)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !4899, file: !521, line: 197, baseType: !4898, size: 64, offset: 640)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !4899, file: !521, line: 198, baseType: !4898, size: 64, offset: 704)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !4899, file: !521, line: 199, baseType: !4898, size: 64, offset: 768)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !4899, file: !521, line: 202, baseType: !4898, size: 64, offset: 832)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !4899, file: !521, line: 204, baseType: !4898, size: 64, offset: 896)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !4899, file: !521, line: 207, baseType: !1219, size: 64, offset: 960)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !4899, file: !521, line: 209, baseType: !627, size: 64, offset: 1024)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !4899, file: !521, line: 214, baseType: !4940, size: 64, offset: 1088)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1175, line: 177, baseType: !4942)
!4942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1175, line: 177, size: 128, elements: !4943)
!4943 = !{!4944}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4942, file: !1175, line: 177, baseType: !4945, size: 128)
!4945 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1175, line: 176, baseType: !4946)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1175, line: 176, size: 128, elements: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4946, file: !1175, line: 176, baseType: !7, size: 32)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4946, file: !1175, line: 176, baseType: !7, size: 32, offset: 32)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4946, file: !1175, line: 176, baseType: !4951, size: 64, offset: 64)
!4951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4952, size: 64, elements: !737)
!4952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1175, line: 174, baseType: !4953)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4954 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !1175, line: 173, flags: DIFlagFwdDecl)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4899, file: !521, line: 216, baseType: !4956, size: 320, offset: 1152)
!4956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !521, line: 88, size: 320, elements: !4957)
!4957 = !{!4958, !4961, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !4956, file: !521, line: 90, baseType: !4959, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !521, line: 51, flags: DIFlagFwdDecl)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !4956, file: !521, line: 92, baseType: !4962, size: 192, offset: 64)
!4962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !521, line: 57, size: 192, elements: !4963)
!4963 = !{!4964, !4965, !4966, !4967, !4968}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !4962, file: !521, line: 60, baseType: !694, size: 64)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !4962, file: !521, line: 63, baseType: !623, size: 32, offset: 64)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !4962, file: !521, line: 65, baseType: !623, size: 32, offset: 96)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !4962, file: !521, line: 67, baseType: !623, size: 32, offset: 128)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !4962, file: !521, line: 69, baseType: !623, size: 32, offset: 160)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4956, file: !521, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !4956, file: !521, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !4956, file: !521, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !4956, file: !521, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !4956, file: !521, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !4956, file: !521, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !4956, file: !521, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !4956, file: !521, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !4899, file: !521, line: 217, baseType: !4978, size: 320, offset: 1472)
!4978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !521, line: 126, size: 320, elements: !4979)
!4979 = !{!4980, !4981, !4982, !4983, !4984, !4985, !4986}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !4978, file: !521, line: 128, baseType: !694, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !4978, file: !521, line: 130, baseType: !694, size: 64, offset: 64)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !4978, file: !521, line: 134, baseType: !4898, size: 64, offset: 128)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4978, file: !521, line: 137, baseType: !623, size: 32, offset: 192)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4978, file: !521, line: 138, baseType: !623, size: 32, offset: 224)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !4978, file: !521, line: 141, baseType: !623, size: 32, offset: 256)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !4978, file: !521, line: 144, baseType: !622, size: 8, offset: 288)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !4899, file: !521, line: 218, baseType: !4988, size: 32, offset: 1792)
!4988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !521, line: 150, size: 32, elements: !4989)
!4989 = !{!4990}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !4988, file: !521, line: 151, baseType: !7, size: 32)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !4899, file: !521, line: 219, baseType: !4992, size: 192, offset: 1856)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !521, line: 171, size: 192, elements: !4993)
!4993 = !{!4994, !5015, !5017}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !4992, file: !521, line: 173, baseType: !4995, size: 64)
!4995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 64)
!4996 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !521, line: 169, baseType: !4997)
!4997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !521, line: 169, size: 128, elements: !4998)
!4998 = !{!4999}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4997, file: !521, line: 169, baseType: !5000, size: 128)
!5000 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !521, line: 168, baseType: !5001)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !521, line: 168, size: 128, elements: !5002)
!5002 = !{!5003, !5004, !5005}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5001, file: !521, line: 168, baseType: !7, size: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5001, file: !521, line: 168, baseType: !7, size: 32, offset: 32)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5001, file: !521, line: 168, baseType: !5006, size: 64, offset: 64)
!5006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5007, size: 64, elements: !737)
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !521, line: 167, baseType: !5008)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !521, line: 156, size: 192, elements: !5010)
!5010 = !{!5011, !5012, !5013, !5014}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !5009, file: !521, line: 159, baseType: !639, size: 64)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !5009, file: !521, line: 161, baseType: !639, size: 64, offset: 64)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !5009, file: !521, line: 163, baseType: !622, size: 8, offset: 128)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !5009, file: !521, line: 165, baseType: !622, size: 8, offset: 136)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !4992, file: !521, line: 174, baseType: !5016, size: 64, offset: 64)
!5016 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !572, line: 47, baseType: !862)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !4992, file: !521, line: 175, baseType: !5016, size: 64, offset: 128)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !4899, file: !521, line: 220, baseType: !5019, size: 256, offset: 2048)
!5019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !521, line: 74, size: 256, elements: !5020)
!5020 = !{!5021, !5022, !5023, !5024, !5025, !5026}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !5019, file: !521, line: 76, baseType: !694, size: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !5019, file: !521, line: 77, baseType: !694, size: 64, offset: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !5019, file: !521, line: 78, baseType: !639, size: 64, offset: 128)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !5019, file: !521, line: 79, baseType: !622, size: 8, offset: 192)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !5019, file: !521, line: 80, baseType: !622, size: 8, offset: 200)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !5019, file: !521, line: 82, baseType: !622, size: 8, offset: 208)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4899, file: !521, line: 223, baseType: !960, size: 64, offset: 2304)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4899, file: !521, line: 225, baseType: !623, size: 32, offset: 2368)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !4899, file: !521, line: 227, baseType: !623, size: 32, offset: 2400)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4899, file: !521, line: 231, baseType: !623, size: 32, offset: 2432)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !4899, file: !521, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !4899, file: !521, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !4899, file: !521, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !4899, file: !521, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !4899, file: !521, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !4899, file: !521, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !4899, file: !521, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4899, file: !521, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !4899, file: !521, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !4899, file: !521, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!5041 = !DILocalVariable(name: "node", scope: !5042, file: !3, line: 2446, type: !5044)
!5042 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 2445, column: 5)
!5043 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2444, column: 12)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !521, line: 358, size: 320, elements: !5046)
!5046 = !{!5047, !5048, !5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !5045, file: !521, line: 359, baseType: !639, size: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5045, file: !521, line: 361, baseType: !5044, size: 64, offset: 64)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !5045, file: !521, line: 363, baseType: !5044, size: 64, offset: 128)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !5045, file: !521, line: 366, baseType: !5044, size: 64, offset: 192)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !5045, file: !521, line: 368, baseType: !623, size: 32, offset: 256)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !5045, file: !521, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !5045, file: !521, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !5045, file: !521, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !5045, file: !521, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !5045, file: !521, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !5045, file: !521, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !5045, file: !521, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!5059 = !DILocation(line: 0, scope: !4892)
!5060 = !DILocation(line: 2432, column: 7, scope: !4897)
!5061 = !DILocation(line: 2432, column: 24, scope: !4897)
!5062 = !DILocation(line: 2432, column: 7, scope: !4892)
!5063 = !DILocation(line: 2438, column: 34, scope: !4896)
!5064 = !DILocation(line: 0, scope: !4896)
!5065 = !DILocation(line: 2439, column: 12, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2439, column: 11)
!5067 = !DILocation(line: 2440, column: 4, scope: !5066)
!5068 = !DILocation(line: 2440, column: 21, scope: !5066)
!5069 = !DILocation(line: 2440, column: 9, scope: !5066)
!5070 = !DILocation(line: 2440, column: 39, scope: !5066)
!5071 = !DILocation(line: 2440, column: 35, scope: !5066)
!5072 = !DILocation(line: 2441, column: 24, scope: !5066)
!5073 = !DILocation(line: 2441, column: 12, scope: !5066)
!5074 = !DILocation(line: 2439, column: 11, scope: !4896)
!5075 = !DILocation(line: 2442, column: 2, scope: !5066)
!5076 = !DILocation(line: 2444, column: 29, scope: !5043)
!5077 = !DILocation(line: 2444, column: 12, scope: !4897)
!5078 = !DILocation(line: 2446, column: 35, scope: !5042)
!5079 = !DILocation(line: 0, scope: !5042)
!5080 = !DILocation(line: 2447, column: 7, scope: !5042)
!5081 = !DILocation(line: 2450, column: 13, scope: !5042)
!5082 = !DILocation(line: 2450, column: 26, scope: !5042)
!5083 = !DILocation(line: 2451, column: 5, scope: !5042)
!5084 = !DILocation(line: 2454, column: 1, scope: !4892)
!5085 = distinct !DISubprogram(name: "assemble_name_raw", scope: !3, file: !3, line: 2487, type: !3953, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5086)
!5086 = !{!5087, !5088}
!5087 = !DILocalVariable(name: "file", arg: 1, scope: !5085, file: !3, line: 2487, type: !2062)
!5088 = !DILocalVariable(name: "name", arg: 2, scope: !5085, file: !3, line: 2487, type: !628)
!5089 = !DILocation(line: 0, scope: !5085)
!5090 = !DILocation(line: 2489, column: 7, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 2489, column: 7)
!5092 = !DILocation(line: 2489, column: 15, scope: !5091)
!5093 = !DILocation(line: 2489, column: 7, scope: !5085)
!5094 = !DILocation(line: 2490, column: 13, scope: !5091)
!5095 = !DILocation(line: 2490, column: 5, scope: !5091)
!5096 = !DILocation(line: 2492, column: 5, scope: !5091)
!5097 = !DILocation(line: 2493, column: 1, scope: !5085)
!5098 = distinct !DISubprogram(name: "ultimate_transparent_alias_target", scope: !3, file: !3, line: 2465, type: !5099, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5101)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!639, !1434}
!5101 = !{!5102, !5103}
!5102 = !DILocalVariable(name: "alias", arg: 1, scope: !5098, file: !3, line: 2465, type: !1434)
!5103 = !DILocalVariable(name: "target", scope: !5098, file: !3, line: 2467, type: !639)
!5104 = !DILocation(line: 0, scope: !5098)
!5105 = !DILocation(line: 2467, column: 17, scope: !5098)
!5106 = !DILocation(line: 2469, column: 7, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 2469, column: 7)
!5108 = !DILocation(line: 2469, column: 7, scope: !5098)
!5109 = !DILocation(line: 2471, column: 7, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 2470, column: 5)
!5111 = !DILocation(line: 2472, column: 16, scope: !5110)
!5112 = !DILocation(line: 2473, column: 7, scope: !5110)
!5113 = !DILocation(line: 2475, column: 14, scope: !5110)
!5114 = !DILocation(line: 2476, column: 5, scope: !5110)
!5115 = !DILocation(line: 2478, column: 3, scope: !5098)
!5116 = distinct !DISubprogram(name: "assemble_static_space", scope: !3, file: !3, line: 2527, type: !5117, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5119)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!811, !692}
!5119 = !{!5120, !5121, !5125, !5126}
!5120 = !DILocalVariable(name: "size", arg: 1, scope: !5116, file: !3, line: 2527, type: !692)
!5121 = !DILocalVariable(name: "name", scope: !5116, file: !3, line: 2529, type: !5122)
!5122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 96, elements: !5123)
!5123 = !{!5124}
!5124 = !DISubrange(count: 12)
!5125 = !DILocalVariable(name: "namestring", scope: !5116, file: !3, line: 2530, type: !628)
!5126 = !DILocalVariable(name: "x", scope: !5116, file: !3, line: 2531, type: !811)
!5127 = !DILocation(line: 0, scope: !5116)
!5128 = !DILocation(line: 2529, column: 3, scope: !5116)
!5129 = !DILocation(line: 2529, column: 8, scope: !5116)
!5130 = !DILocation(line: 2533, column: 3, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 2533, column: 3)
!5132 = !DILocation(line: 2534, column: 3, scope: !5116)
!5133 = !DILocation(line: 2535, column: 16, scope: !5116)
!5134 = !DILocation(line: 2537, column: 7, scope: !5116)
!5135 = !DILocation(line: 2538, column: 3, scope: !5116)
!5136 = !DILocation(line: 2538, column: 24, scope: !5116)
!5137 = !DILocation(line: 2545, column: 3, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 2545, column: 3)
!5139 = !DILocation(line: 2545, column: 3, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 2545, column: 3)
!5141 = !DILocation(line: 2560, column: 1, scope: !5116)
!5142 = !DILocation(line: 2559, column: 3, scope: !5116)
!5143 = distinct !DISubprogram(name: "assemble_trampoline_template", scope: !3, file: !3, line: 2569, type: !5144, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5146)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!811}
!5146 = !{!5147, !5151, !5152, !5153}
!5147 = !DILocalVariable(name: "label", scope: !5143, file: !3, line: 2571, type: !5148)
!5148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 2048, elements: !5149)
!5149 = !{!5150}
!5150 = !DISubrange(count: 256)
!5151 = !DILocalVariable(name: "name", scope: !5143, file: !3, line: 2572, type: !628)
!5152 = !DILocalVariable(name: "align", scope: !5143, file: !3, line: 2573, type: !623)
!5153 = !DILocalVariable(name: "symbol", scope: !5143, file: !3, line: 2574, type: !811)
!5154 = !DILocation(line: 2571, column: 3, scope: !5143)
!5155 = !DILocation(line: 2571, column: 8, scope: !5143)
!5156 = !DILocation(line: 2576, column: 3, scope: !5143)
!5157 = !DILocation(line: 2578, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2578, column: 7)
!5159 = !DILocation(line: 2578, column: 7, scope: !5143)
!5160 = !DILocation(line: 2579, column: 5, scope: !5158)
!5161 = !DILocation(line: 2586, column: 22, scope: !5143)
!5162 = !DILocation(line: 2586, column: 3, scope: !5143)
!5163 = !DILocation(line: 2590, column: 11, scope: !5143)
!5164 = !DILocation(line: 0, scope: !5143)
!5165 = !DILocation(line: 2591, column: 13, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2591, column: 7)
!5167 = !DILocation(line: 2591, column: 7, scope: !5143)
!5168 = !DILocation(line: 2592, column: 5, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 2592, column: 5)
!5170 = !DILocation(line: 2594, column: 19, scope: !5143)
!5171 = !DILocation(line: 2594, column: 35, scope: !5143)
!5172 = !DILocation(line: 2594, column: 3, scope: !5143)
!5173 = !DILocation(line: 2595, column: 19, scope: !5143)
!5174 = !DILocation(line: 2595, column: 40, scope: !5143)
!5175 = !DILocation(line: 2595, column: 3, scope: !5143)
!5176 = !DILocation(line: 2598, column: 3, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2598, column: 3)
!5178 = !DILocation(line: 2599, column: 10, scope: !5143)
!5179 = !DILocation(line: 2600, column: 12, scope: !5143)
!5180 = !DILocation(line: 2601, column: 3, scope: !5143)
!5181 = !DILocation(line: 2601, column: 29, scope: !5143)
!5182 = !DILocation(line: 2603, column: 24, scope: !5143)
!5183 = !DILocation(line: 2603, column: 22, scope: !5143)
!5184 = !DILocation(line: 2604, column: 3, scope: !5143)
!5185 = !DILocation(line: 2605, column: 17, scope: !5143)
!5186 = !DILocation(line: 2605, column: 37, scope: !5143)
!5187 = !DILocation(line: 2605, column: 3, scope: !5143)
!5188 = !DILocation(line: 2607, column: 3, scope: !5143)
!5189 = !DILocation(line: 2608, column: 1, scope: !5143)
!5190 = distinct !DISubprogram(name: "integer_asm_op", scope: !3, file: !3, line: 2628, type: !5191, scopeLine: 2629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!628, !623, !623}
!5193 = !{!5194, !5195, !5196}
!5194 = !DILocalVariable(name: "size", arg: 1, scope: !5190, file: !3, line: 2628, type: !623)
!5195 = !DILocalVariable(name: "aligned_p", arg: 2, scope: !5190, file: !3, line: 2628, type: !623)
!5196 = !DILocalVariable(name: "ops", scope: !5190, file: !3, line: 2630, type: !5197)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "asm_int_op", file: !603, line: 102, size: 256, elements: !5199)
!5199 = !{!5200, !5201, !5202, !5203}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "hi", scope: !5198, file: !603, line: 104, baseType: !628, size: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5198, file: !603, line: 105, baseType: !628, size: 64, offset: 64)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5198, file: !603, line: 106, baseType: !628, size: 64, offset: 128)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !5198, file: !603, line: 107, baseType: !628, size: 64, offset: 192)
!5204 = !DILocation(line: 0, scope: !5190)
!5205 = !DILocation(line: 2632, column: 7, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 2632, column: 7)
!5207 = !DILocation(line: 2637, column: 3, scope: !5190)
!5208 = !DILocation(line: 2640, column: 30, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 2638, column: 5)
!5210 = !DILocation(line: 2640, column: 7, scope: !5209)
!5211 = !DILocation(line: 2642, column: 19, scope: !5209)
!5212 = !DILocation(line: 2642, column: 7, scope: !5209)
!5213 = !DILocation(line: 2644, column: 19, scope: !5209)
!5214 = !DILocation(line: 2644, column: 7, scope: !5209)
!5215 = !DILocation(line: 2646, column: 19, scope: !5209)
!5216 = !DILocation(line: 2646, column: 7, scope: !5209)
!5217 = !DILocation(line: 2648, column: 19, scope: !5209)
!5218 = !DILocation(line: 2648, column: 7, scope: !5209)
!5219 = !DILocation(line: 0, scope: !5209)
!5220 = !DILocation(line: 2652, column: 1, scope: !5190)
!5221 = distinct !DISubprogram(name: "assemble_integer_with_op", scope: !3, file: !3, line: 2658, type: !5222, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5224)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !628, !811}
!5224 = !{!5225, !5226}
!5225 = !DILocalVariable(name: "op", arg: 1, scope: !5221, file: !3, line: 2658, type: !628)
!5226 = !DILocalVariable(name: "x", arg: 2, scope: !5221, file: !3, line: 2658, type: !811)
!5227 = !DILocation(line: 0, scope: !5221)
!5228 = !DILocation(line: 2660, column: 14, scope: !5221)
!5229 = !DILocation(line: 2660, column: 3, scope: !5221)
!5230 = !DILocation(line: 2661, column: 22, scope: !5221)
!5231 = !DILocation(line: 2661, column: 3, scope: !5221)
!5232 = !DILocation(line: 2662, column: 16, scope: !5221)
!5233 = !DILocation(line: 2662, column: 3, scope: !5221)
!5234 = !DILocation(line: 2663, column: 1, scope: !5221)
!5235 = distinct !DISubprogram(name: "default_assemble_integer", scope: !3, file: !3, line: 2668, type: !5236, scopeLine: 2671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5238)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!622, !811, !7, !623}
!5238 = !{!5239, !5240, !5241, !5242}
!5239 = !DILocalVariable(name: "x", arg: 1, scope: !5235, file: !3, line: 2668, type: !811)
!5240 = !DILocalVariable(name: "size", arg: 2, scope: !5235, file: !3, line: 2669, type: !7)
!5241 = !DILocalVariable(name: "aligned_p", arg: 3, scope: !5235, file: !3, line: 2670, type: !623)
!5242 = !DILocalVariable(name: "op", scope: !5235, file: !3, line: 2672, type: !628)
!5243 = !DILocation(line: 0, scope: !5235)
!5244 = !DILocation(line: 2672, column: 20, scope: !5235)
!5245 = !DILocation(line: 2675, column: 12, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 2675, column: 7)
!5247 = !DILocation(line: 2675, column: 29, scope: !5246)
!5248 = !DILocation(line: 2677, column: 10, scope: !5235)
!5249 = !DILocation(line: 2677, column: 13, scope: !5235)
!5250 = !DILocation(line: 2677, column: 17, scope: !5235)
!5251 = !DILocation(line: 2677, column: 3, scope: !5235)
!5252 = !DILocation(line: 2678, column: 1, scope: !5235)
!5253 = distinct !DISubprogram(name: "assemble_real", scope: !3, file: !3, line: 2735, type: !5254, scopeLine: 2736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5256)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{null, !701, !5, !7}
!5256 = !{!5257, !5258, !5259, !5260, !5262, !5263, !5264, !5265, !5266}
!5257 = !DILocalVariable(name: "d", arg: 1, scope: !5253, file: !3, line: 2735, type: !701)
!5258 = !DILocalVariable(name: "mode", arg: 2, scope: !5253, file: !3, line: 2735, type: !5)
!5259 = !DILocalVariable(name: "align", arg: 3, scope: !5253, file: !3, line: 2735, type: !7)
!5260 = !DILocalVariable(name: "data", scope: !5253, file: !3, line: 2737, type: !5261)
!5261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 256, elements: !902)
!5262 = !DILocalVariable(name: "i", scope: !5253, file: !3, line: 2738, type: !623)
!5263 = !DILocalVariable(name: "bitsize", scope: !5253, file: !3, line: 2739, type: !623)
!5264 = !DILocalVariable(name: "nelts", scope: !5253, file: !3, line: 2739, type: !623)
!5265 = !DILocalVariable(name: "nunits", scope: !5253, file: !3, line: 2739, type: !623)
!5266 = !DILocalVariable(name: "units_per", scope: !5253, file: !3, line: 2739, type: !623)
!5267 = !DILocation(line: 2735, column: 32, scope: !5253)
!5268 = !DILocation(line: 0, scope: !5253)
!5269 = !DILocation(line: 2737, column: 3, scope: !5253)
!5270 = !DILocation(line: 2737, column: 8, scope: !5253)
!5271 = !DILocation(line: 2753, column: 12, scope: !5253)
!5272 = !DILocation(line: 2754, column: 20, scope: !5253)
!5273 = !DILocation(line: 2755, column: 11, scope: !5253)
!5274 = !DILocation(line: 2758, column: 19, scope: !5253)
!5275 = !DILocation(line: 2758, column: 3, scope: !5253)
!5276 = !DILocation(line: 2764, column: 21, scope: !5253)
!5277 = !DILocation(line: 2764, column: 50, scope: !5253)
!5278 = !DILocation(line: 2764, column: 3, scope: !5253)
!5279 = !DILocation(line: 2771, column: 11, scope: !5253)
!5280 = !DILocation(line: 2773, column: 8, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 2773, column: 3)
!5282 = !DILocation(line: 0, scope: !5281)
!5283 = !DILocation(line: 2773, column: 17, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 2773, column: 3)
!5285 = !DILocation(line: 2773, column: 3, scope: !5281)
!5286 = !DILocation(line: 2778, column: 25, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 2774, column: 5)
!5288 = !DILocation(line: 2778, column: 54, scope: !5287)
!5289 = !DILocation(line: 2778, column: 7, scope: !5287)
!5290 = !DILocation(line: 2773, column: 27, scope: !5284)
!5291 = !DILocation(line: 2773, column: 3, scope: !5284)
!5292 = distinct !{!5292, !5285, !5293}
!5293 = !DILocation(line: 2783, column: 5, scope: !5281)
!5294 = !DILocation(line: 2784, column: 1, scope: !5253)
!5295 = distinct !DISubprogram(name: "min_align", scope: !3, file: !3, line: 2614, type: !5296, scopeLine: 2615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5298)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!7, !7, !7}
!5298 = !{!5299, !5300}
!5299 = !DILocalVariable(name: "a", arg: 1, scope: !5295, file: !3, line: 2614, type: !7)
!5300 = !DILocalVariable(name: "b", arg: 2, scope: !5295, file: !3, line: 2614, type: !7)
!5301 = !DILocation(line: 0, scope: !5295)
!5302 = !DILocation(line: 2616, column: 13, scope: !5295)
!5303 = !DILocation(line: 2616, column: 20, scope: !5295)
!5304 = !DILocation(line: 2616, column: 18, scope: !5295)
!5305 = !DILocation(line: 2616, column: 3, scope: !5295)
!5306 = distinct !DISubprogram(name: "constant_pool_htab", scope: !3, file: !3, line: 2865, type: !5307, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!1219}
!5309 = !DILocation(line: 2867, column: 10, scope: !5306)
!5310 = !DILocation(line: 2867, column: 3, scope: !5306)
!5311 = distinct !DISubprogram(name: "output_constant_def", scope: !3, file: !3, line: 3307, type: !5312, scopeLine: 3308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5314)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!811, !639, !623}
!5314 = !{!5315, !5316, !5317, !5318, !5319}
!5315 = !DILocalVariable(name: "exp", arg: 1, scope: !5311, file: !3, line: 3307, type: !639)
!5316 = !DILocalVariable(name: "defer", arg: 2, scope: !5311, file: !3, line: 3307, type: !623)
!5317 = !DILocalVariable(name: "desc", scope: !5311, file: !3, line: 3309, type: !1721)
!5318 = !DILocalVariable(name: "key", scope: !5311, file: !3, line: 3310, type: !1722)
!5319 = !DILocalVariable(name: "loc", scope: !5311, file: !3, line: 3311, type: !1239)
!5320 = !DILocation(line: 0, scope: !5311)
!5321 = !DILocation(line: 3310, column: 3, scope: !5311)
!5322 = !DILocation(line: 3315, column: 7, scope: !5311)
!5323 = !DILocation(line: 3315, column: 13, scope: !5311)
!5324 = !DILocation(line: 3316, column: 14, scope: !5311)
!5325 = !DILocation(line: 3316, column: 7, scope: !5311)
!5326 = !DILocation(line: 3316, column: 12, scope: !5311)
!5327 = !DILocation(line: 3317, column: 35, scope: !5311)
!5328 = !DILocation(line: 3317, column: 9, scope: !5311)
!5329 = !DILocation(line: 3319, column: 46, scope: !5311)
!5330 = !DILocation(line: 3320, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3320, column: 7)
!5332 = !DILocation(line: 3320, column: 7, scope: !5311)
!5333 = !DILocation(line: 3322, column: 14, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 3321, column: 5)
!5335 = !DILocation(line: 3323, column: 24, scope: !5334)
!5336 = !DILocation(line: 3323, column: 13, scope: !5334)
!5337 = !DILocation(line: 3323, column: 18, scope: !5334)
!5338 = !DILocation(line: 3324, column: 12, scope: !5334)
!5339 = !DILocation(line: 3325, column: 5, scope: !5334)
!5340 = !DILocation(line: 3327, column: 3, scope: !5311)
!5341 = !DILocation(line: 3328, column: 16, scope: !5311)
!5342 = !DILocation(line: 3329, column: 1, scope: !5311)
!5343 = !DILocation(line: 3328, column: 3, scope: !5311)
!5344 = distinct !DISubprogram(name: "const_hash_1", scope: !3, file: !3, line: 2879, type: !5345, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5348)
!5345 = !DISubroutineType(types: !5346)
!5346 = !{!1026, !5347}
!5347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!5348 = !{!5349, !5350, !5351, !5352, !5353, !5354, !5355, !5358, !5359}
!5349 = !DILocalVariable(name: "exp", arg: 1, scope: !5344, file: !3, line: 2879, type: !5347)
!5350 = !DILocalVariable(name: "p", scope: !5344, file: !3, line: 2881, type: !628)
!5351 = !DILocalVariable(name: "hi", scope: !5344, file: !3, line: 2882, type: !1026)
!5352 = !DILocalVariable(name: "len", scope: !5344, file: !3, line: 2883, type: !623)
!5353 = !DILocalVariable(name: "i", scope: !5344, file: !3, line: 2883, type: !623)
!5354 = !DILocalVariable(name: "code", scope: !5344, file: !3, line: 2884, type: !183)
!5355 = !DILocalVariable(name: "idx", scope: !5356, file: !3, line: 2913, type: !692)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2912, column: 7)
!5357 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 2890, column: 5)
!5358 = !DILocalVariable(name: "value", scope: !5356, file: !3, line: 2914, type: !639)
!5359 = !DILocalVariable(name: "value", scope: !5360, file: !3, line: 2928, type: !5361)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 2927, column: 7)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addr_const", file: !3, line: 2791, size: 128, elements: !5362)
!5362 = !{!5363, !5364}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5361, file: !3, line: 2792, baseType: !811, size: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5361, file: !3, line: 2793, baseType: !694, size: 64, offset: 64)
!5365 = !DILocation(line: 0, scope: !5344)
!5366 = !DILocation(line: 2884, column: 25, scope: !5344)
!5367 = !DILocation(line: 2889, column: 3, scope: !5344)
!5368 = !DILocation(line: 2892, column: 21, scope: !5357)
!5369 = !DILocation(line: 2894, column: 7, scope: !5357)
!5370 = !DILocation(line: 2897, column: 25, scope: !5357)
!5371 = !DILocation(line: 2897, column: 14, scope: !5357)
!5372 = !DILocation(line: 2897, column: 7, scope: !5357)
!5373 = !DILocation(line: 2900, column: 26, scope: !5357)
!5374 = !DILocation(line: 2900, column: 14, scope: !5357)
!5375 = !DILocation(line: 2900, column: 7, scope: !5357)
!5376 = !DILocation(line: 2903, column: 11, scope: !5357)
!5377 = !DILocation(line: 2904, column: 13, scope: !5357)
!5378 = !DILocation(line: 2905, column: 7, scope: !5357)
!5379 = !DILocation(line: 2908, column: 29, scope: !5357)
!5380 = !DILocation(line: 2908, column: 15, scope: !5357)
!5381 = !DILocation(line: 2908, column: 50, scope: !5357)
!5382 = !DILocation(line: 2909, column: 24, scope: !5357)
!5383 = !DILocation(line: 2909, column: 10, scope: !5357)
!5384 = !DILocation(line: 2909, column: 8, scope: !5357)
!5385 = !DILocation(line: 2908, column: 7, scope: !5357)
!5386 = !DILocation(line: 2916, column: 30, scope: !5356)
!5387 = !DILocation(line: 2916, column: 11, scope: !5356)
!5388 = !DILocation(line: 2916, column: 7, scope: !5356)
!5389 = !DILocation(line: 0, scope: !5356)
!5390 = !DILocation(line: 0, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2918, column: 2)
!5392 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 2918, column: 2)
!5393 = !DILocation(line: 2918, column: 2, scope: !5392)
!5394 = !DILocation(line: 0, scope: !5392)
!5395 = !DILocation(line: 2918, column: 2, scope: !5391)
!5396 = !DILocation(line: 2919, column: 8, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 2919, column: 8)
!5398 = !DILocation(line: 2919, column: 8, scope: !5391)
!5399 = !DILocation(line: 2920, column: 14, scope: !5397)
!5400 = !DILocation(line: 2920, column: 22, scope: !5397)
!5401 = !DILocation(line: 2920, column: 20, scope: !5397)
!5402 = !DILocation(line: 2920, column: 6, scope: !5397)
!5403 = distinct !{!5403, !5393, !5404}
!5404 = !DILocation(line: 2920, column: 41, scope: !5392)
!5405 = !DILocation(line: 2928, column: 2, scope: !5360)
!5406 = !DILocation(line: 0, scope: !5360)
!5407 = !DILocation(line: 2930, column: 2, scope: !5360)
!5408 = !DILocation(line: 2931, column: 10, scope: !5360)
!5409 = !DILocation(line: 2931, column: 2, scope: !5360)
!5410 = !DILocation(line: 2936, column: 17, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 2932, column: 4)
!5412 = !DILocation(line: 2936, column: 11, scope: !5411)
!5413 = !DILocation(line: 2937, column: 10, scope: !5411)
!5414 = !DILocation(line: 2938, column: 11, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 2938, column: 6)
!5416 = !DILocation(line: 0, scope: !5415)
!5417 = !DILocation(line: 0, scope: !5411)
!5418 = !DILocation(line: 2938, column: 18, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 2938, column: 6)
!5420 = !DILocation(line: 2938, column: 23, scope: !5419)
!5421 = !DILocation(line: 2938, column: 6, scope: !5415)
!5422 = !DILocation(line: 2939, column: 18, scope: !5419)
!5423 = !DILocation(line: 2939, column: 27, scope: !5419)
!5424 = !DILocation(line: 2939, column: 25, scope: !5419)
!5425 = !DILocation(line: 2938, column: 30, scope: !5419)
!5426 = !DILocation(line: 2938, column: 6, scope: !5419)
!5427 = distinct !{!5427, !5421, !5428}
!5428 = !DILocation(line: 2939, column: 44, scope: !5415)
!5429 = !DILocation(line: 2943, column: 17, scope: !5411)
!5430 = !DILocation(line: 2943, column: 26, scope: !5411)
!5431 = !DILocation(line: 2943, column: 67, scope: !5411)
!5432 = !DILocation(line: 2943, column: 11, scope: !5411)
!5433 = !DILocation(line: 2944, column: 6, scope: !5411)
!5434 = !DILocation(line: 2947, column: 6, scope: !5411)
!5435 = !DILocation(line: 2948, column: 4, scope: !5411)
!5436 = !DILocation(line: 2949, column: 7, scope: !5357)
!5437 = !DILocation(line: 2950, column: 7, scope: !5357)
!5438 = !DILocation(line: 2955, column: 29, scope: !5357)
!5439 = !DILocation(line: 2955, column: 15, scope: !5357)
!5440 = !DILocation(line: 2955, column: 52, scope: !5357)
!5441 = !DILocation(line: 2956, column: 24, scope: !5357)
!5442 = !DILocation(line: 2956, column: 10, scope: !5357)
!5443 = !DILocation(line: 2956, column: 8, scope: !5357)
!5444 = !DILocation(line: 2955, column: 7, scope: !5357)
!5445 = !DILocation(line: 2959, column: 28, scope: !5357)
!5446 = !DILocation(line: 2959, column: 14, scope: !5357)
!5447 = !DILocation(line: 2959, column: 51, scope: !5357)
!5448 = !DILocation(line: 2959, column: 55, scope: !5357)
!5449 = !DILocation(line: 2959, column: 7, scope: !5357)
!5450 = !DILocation(line: 0, scope: !5357)
!5451 = !DILocation(line: 2968, column: 8, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 2968, column: 3)
!5453 = !DILocation(line: 0, scope: !5452)
!5454 = !DILocation(line: 2968, column: 17, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 2968, column: 3)
!5456 = !DILocation(line: 2968, column: 3, scope: !5452)
!5457 = !DILocation(line: 2969, column: 15, scope: !5455)
!5458 = !DILocation(line: 2969, column: 36, scope: !5455)
!5459 = !DILocation(line: 2969, column: 24, scope: !5455)
!5460 = !DILocation(line: 2969, column: 22, scope: !5455)
!5461 = !DILocation(line: 2968, column: 25, scope: !5455)
!5462 = !DILocation(line: 2968, column: 3, scope: !5455)
!5463 = distinct !{!5463, !5456, !5464}
!5464 = !DILocation(line: 2969, column: 41, scope: !5452)
!5465 = !DILocation(line: 2972, column: 1, scope: !5344)
!5466 = distinct !DISubprogram(name: "build_constant_desc", scope: !3, file: !3, line: 3239, type: !5467, scopeLine: 3240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5469)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!1721, !639}
!5469 = !{!5470, !5471, !5472, !5473, !5474, !5475, !5476}
!5470 = !DILocalVariable(name: "exp", arg: 1, scope: !5466, file: !3, line: 3239, type: !639)
!5471 = !DILocalVariable(name: "symbol", scope: !5466, file: !3, line: 3241, type: !811)
!5472 = !DILocalVariable(name: "rtl", scope: !5466, file: !3, line: 3242, type: !811)
!5473 = !DILocalVariable(name: "label", scope: !5466, file: !3, line: 3243, type: !5148)
!5474 = !DILocalVariable(name: "labelno", scope: !5466, file: !3, line: 3244, type: !623)
!5475 = !DILocalVariable(name: "desc", scope: !5466, file: !3, line: 3245, type: !1721)
!5476 = !DILocalVariable(name: "sect", scope: !5477, file: !3, line: 3261, type: !1044)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 3260, column: 5)
!5478 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 3259, column: 7)
!5479 = !DILocation(line: 0, scope: !5466)
!5480 = !DILocation(line: 3243, column: 3, scope: !5466)
!5481 = !DILocation(line: 3243, column: 8, scope: !5466)
!5482 = !DILocation(line: 3247, column: 10, scope: !5466)
!5483 = !DILocation(line: 3248, column: 17, scope: !5466)
!5484 = !DILocation(line: 3248, column: 9, scope: !5466)
!5485 = !DILocation(line: 3248, column: 15, scope: !5466)
!5486 = !DILocation(line: 3251, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 3251, column: 7)
!5488 = !DILocation(line: 3251, column: 20, scope: !5487)
!5489 = !DILocation(line: 3251, column: 23, scope: !5487)
!5490 = !DILocation(line: 3251, column: 7, scope: !5466)
!5491 = !DILocation(line: 3252, column: 20, scope: !5487)
!5492 = !DILocation(line: 3252, column: 5, scope: !5487)
!5493 = !DILocation(line: 3255, column: 26, scope: !5466)
!5494 = !DILocation(line: 3256, column: 3, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 3256, column: 3)
!5496 = !DILocation(line: 3259, column: 7, scope: !5478)
!5497 = !DILocation(line: 3259, column: 7, scope: !5466)
!5498 = !DILocation(line: 3261, column: 23, scope: !5477)
!5499 = !DILocation(line: 0, scope: !5477)
!5500 = !DILocation(line: 3262, column: 37, scope: !5477)
!5501 = !DILocation(line: 3263, column: 9, scope: !5477)
!5502 = !DILocation(line: 3262, column: 16, scope: !5477)
!5503 = !DILocation(line: 3264, column: 5, scope: !5477)
!5504 = !DILocation(line: 3266, column: 14, scope: !5478)
!5505 = !DILocation(line: 0, scope: !5478)
!5506 = !DILocation(line: 3267, column: 3, scope: !5466)
!5507 = !DILocation(line: 3267, column: 29, scope: !5466)
!5508 = !DILocation(line: 3268, column: 3, scope: !5466)
!5509 = !DILocation(line: 3269, column: 41, scope: !5466)
!5510 = !DILocation(line: 3271, column: 22, scope: !5466)
!5511 = !DILocation(line: 3271, column: 9, scope: !5466)
!5512 = !DILocation(line: 3272, column: 3, scope: !5466)
!5513 = !DILocation(line: 3273, column: 3, scope: !5466)
!5514 = !DILocation(line: 3274, column: 27, scope: !5466)
!5515 = !DILocation(line: 3274, column: 3, scope: !5466)
!5516 = !DILocation(line: 3278, column: 3, scope: !5466)
!5517 = !DILocation(line: 3278, column: 24, scope: !5466)
!5518 = !DILocation(line: 3286, column: 11, scope: !5466)
!5519 = !DILocation(line: 3286, column: 3, scope: !5466)
!5520 = !DILocation(line: 3288, column: 9, scope: !5466)
!5521 = !DILocation(line: 3288, column: 13, scope: !5466)
!5522 = !DILocation(line: 3291, column: 1, scope: !5466)
!5523 = !DILocation(line: 3290, column: 3, scope: !5466)
!5524 = distinct !DISubprogram(name: "maybe_output_constant_def_contents", scope: !3, file: !3, line: 3334, type: !5525, scopeLine: 3336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5527)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{null, !1721, !623}
!5527 = !{!5528, !5529, !5530, !5531}
!5528 = !DILocalVariable(name: "desc", arg: 1, scope: !5524, file: !3, line: 3334, type: !1721)
!5529 = !DILocalVariable(name: "defer", arg: 2, scope: !5524, file: !3, line: 3335, type: !623)
!5530 = !DILocalVariable(name: "symbol", scope: !5524, file: !3, line: 3337, type: !811)
!5531 = !DILocalVariable(name: "exp", scope: !5524, file: !3, line: 3338, type: !639)
!5532 = !DILocation(line: 0, scope: !5524)
!5533 = !DILocation(line: 3337, column: 16, scope: !5524)
!5534 = !DILocation(line: 3340, column: 7, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 3340, column: 7)
!5536 = !DILocation(line: 3340, column: 7, scope: !5524)
!5537 = !DILocation(line: 3338, column: 20, scope: !5524)
!5538 = !DILocation(line: 3343, column: 7, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 3343, column: 7)
!5540 = !DILocation(line: 3343, column: 7, scope: !5524)
!5541 = !DILocation(line: 3349, column: 7, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 3349, column: 7)
!5543 = !DILocation(line: 3349, column: 7, scope: !5524)
!5544 = !DILocation(line: 3356, column: 11, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 3356, column: 11)
!5546 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 3350, column: 5)
!5547 = !DILocation(line: 3356, column: 11, scope: !5546)
!5548 = !DILocation(line: 3357, column: 22, scope: !5545)
!5549 = !DILocation(line: 3357, column: 2, scope: !5545)
!5550 = !DILocation(line: 3361, column: 3, scope: !5524)
!5551 = !DILocation(line: 3362, column: 1, scope: !5524)
!5552 = distinct !DISubprogram(name: "lookup_constant_def", scope: !3, file: !3, line: 3423, type: !3495, scopeLine: 3424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5553)
!5553 = !{!5554, !5555, !5556}
!5554 = !DILocalVariable(name: "exp", arg: 1, scope: !5552, file: !3, line: 3423, type: !639)
!5555 = !DILocalVariable(name: "desc", scope: !5552, file: !3, line: 3425, type: !1721)
!5556 = !DILocalVariable(name: "key", scope: !5552, file: !3, line: 3426, type: !1722)
!5557 = !DILocation(line: 0, scope: !5552)
!5558 = !DILocation(line: 3426, column: 3, scope: !5552)
!5559 = !DILocation(line: 3428, column: 7, scope: !5552)
!5560 = !DILocation(line: 3428, column: 13, scope: !5552)
!5561 = !DILocation(line: 3429, column: 14, scope: !5552)
!5562 = !DILocation(line: 3429, column: 7, scope: !5552)
!5563 = !DILocation(line: 3429, column: 12, scope: !5552)
!5564 = !DILocation(line: 3431, column: 26, scope: !5552)
!5565 = !DILocation(line: 3431, column: 5, scope: !5552)
!5566 = !DILocation(line: 3433, column: 11, scope: !5552)
!5567 = !DILocation(line: 3433, column: 24, scope: !5552)
!5568 = !DILocation(line: 3434, column: 1, scope: !5552)
!5569 = !DILocation(line: 3433, column: 3, scope: !5552)
!5570 = distinct !DISubprogram(name: "init_varasm_status", scope: !3, file: !3, line: 3604, type: !2666, scopeLine: 3605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!5571 = !DILocation(line: 3606, column: 23, scope: !5570)
!5572 = !DILocation(line: 3606, column: 21, scope: !5570)
!5573 = !DILocation(line: 3607, column: 35, scope: !5570)
!5574 = !DILocation(line: 3608, column: 1, scope: !5570)
!5575 = distinct !DISubprogram(name: "create_constant_pool", scope: !3, file: !3, line: 3588, type: !5576, scopeLine: 3589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5578)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!1727}
!5578 = !{!5579}
!5579 = !DILocalVariable(name: "pool", scope: !5575, file: !3, line: 3590, type: !1727)
!5580 = !DILocation(line: 3592, column: 10, scope: !5575)
!5581 = !DILocation(line: 0, scope: !5575)
!5582 = !DILocation(line: 3593, column: 26, scope: !5575)
!5583 = !DILocation(line: 3593, column: 9, scope: !5575)
!5584 = !DILocation(line: 3593, column: 24, scope: !5575)
!5585 = !DILocation(line: 3595, column: 9, scope: !5575)
!5586 = !DILocation(line: 3595, column: 15, scope: !5575)
!5587 = !DILocation(line: 3596, column: 9, scope: !5575)
!5588 = !DILocation(line: 3596, column: 14, scope: !5575)
!5589 = !DILocation(line: 3597, column: 9, scope: !5575)
!5590 = !DILocation(line: 3597, column: 16, scope: !5575)
!5591 = !DILocation(line: 3598, column: 3, scope: !5575)
!5592 = distinct !DISubprogram(name: "simplify_subtraction", scope: !3, file: !3, line: 3614, type: !5593, scopeLine: 3615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!811, !811}
!5595 = !{!5596, !5597}
!5596 = !DILocalVariable(name: "x", arg: 1, scope: !5592, file: !3, line: 3614, type: !811)
!5597 = !DILocalVariable(name: "r", scope: !5592, file: !3, line: 3616, type: !811)
!5598 = !DILocation(line: 0, scope: !5592)
!5599 = !DILocation(line: 3616, column: 11, scope: !5592)
!5600 = !DILocation(line: 3617, column: 10, scope: !5592)
!5601 = !DILocation(line: 3617, column: 3, scope: !5592)
!5602 = distinct !DISubprogram(name: "force_const_mem", scope: !3, file: !3, line: 3624, type: !5603, scopeLine: 3625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5605)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!811, !5, !811}
!5605 = !{!5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5619}
!5606 = !DILocalVariable(name: "mode", arg: 1, scope: !5602, file: !3, line: 3624, type: !5)
!5607 = !DILocalVariable(name: "x", arg: 2, scope: !5602, file: !3, line: 3624, type: !811)
!5608 = !DILocalVariable(name: "desc", scope: !5602, file: !3, line: 3626, type: !1017)
!5609 = !DILocalVariable(name: "tmp", scope: !5602, file: !3, line: 3626, type: !1018)
!5610 = !DILocalVariable(name: "pool", scope: !5602, file: !3, line: 3627, type: !1727)
!5611 = !DILocalVariable(name: "label", scope: !5602, file: !3, line: 3628, type: !5148)
!5612 = !DILocalVariable(name: "def", scope: !5602, file: !3, line: 3629, type: !811)
!5613 = !DILocalVariable(name: "symbol", scope: !5602, file: !3, line: 3629, type: !811)
!5614 = !DILocalVariable(name: "hash", scope: !5602, file: !3, line: 3630, type: !1026)
!5615 = !DILocalVariable(name: "align", scope: !5602, file: !3, line: 3631, type: !7)
!5616 = !DILocalVariable(name: "slot", scope: !5602, file: !3, line: 3632, type: !1239)
!5617 = !DILocalVariable(name: "type", scope: !5618, file: !3, line: 3665, type: !639)
!5618 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3664, column: 3)
!5619 = !DILocalVariable(name: "sect", scope: !5620, file: !3, line: 3698, type: !1044)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3697, column: 5)
!5621 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3696, column: 7)
!5622 = !DILocation(line: 0, scope: !5602)
!5623 = !DILocation(line: 3626, column: 3, scope: !5602)
!5624 = !DILocation(line: 3628, column: 3, scope: !5602)
!5625 = !DILocation(line: 3628, column: 8, scope: !5602)
!5626 = !DILocation(line: 3635, column: 15, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3635, column: 7)
!5628 = !DILocation(line: 3635, column: 7, scope: !5627)
!5629 = !DILocation(line: 3635, column: 7, scope: !5602)
!5630 = !DILocation(line: 3639, column: 25, scope: !5602)
!5631 = !DILocation(line: 3642, column: 19, scope: !5602)
!5632 = !DILocation(line: 3642, column: 11, scope: !5602)
!5633 = !DILocation(line: 3647, column: 7, scope: !5602)
!5634 = !DILocation(line: 3647, column: 16, scope: !5602)
!5635 = !DILocation(line: 3648, column: 7, scope: !5602)
!5636 = !DILocation(line: 3648, column: 12, scope: !5602)
!5637 = !DILocation(line: 3649, column: 10, scope: !5602)
!5638 = !DILocation(line: 3650, column: 42, scope: !5602)
!5639 = !DILocation(line: 3650, column: 10, scope: !5602)
!5640 = !DILocation(line: 3651, column: 45, scope: !5602)
!5641 = !DILocation(line: 3654, column: 7, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3654, column: 7)
!5643 = !DILocation(line: 3654, column: 7, scope: !5602)
!5644 = !DILocation(line: 3655, column: 28, scope: !5642)
!5645 = !DILocation(line: 3655, column: 12, scope: !5642)
!5646 = !DILocation(line: 3655, column: 5, scope: !5642)
!5647 = !DILocation(line: 3658, column: 10, scope: !5602)
!5648 = !DILocation(line: 3659, column: 9, scope: !5602)
!5649 = !DILocation(line: 3662, column: 11, scope: !5602)
!5650 = !DILocation(line: 3665, column: 34, scope: !5618)
!5651 = !DILocation(line: 3665, column: 17, scope: !5618)
!5652 = !DILocation(line: 0, scope: !5618)
!5653 = !DILocation(line: 3666, column: 14, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 3666, column: 9)
!5655 = !DILocation(line: 3666, column: 9, scope: !5618)
!5656 = !DILocation(line: 3667, column: 15, scope: !5654)
!5657 = !DILocation(line: 3667, column: 7, scope: !5654)
!5658 = !DILocation(line: 3671, column: 26, scope: !5602)
!5659 = !DILocation(line: 3671, column: 43, scope: !5602)
!5660 = !DILocation(line: 3671, column: 19, scope: !5602)
!5661 = !DILocation(line: 3671, column: 9, scope: !5602)
!5662 = !DILocation(line: 3671, column: 16, scope: !5602)
!5663 = !DILocation(line: 3672, column: 19, scope: !5602)
!5664 = !DILocation(line: 3672, column: 16, scope: !5602)
!5665 = !DILocation(line: 3674, column: 9, scope: !5602)
!5666 = !DILocation(line: 3674, column: 14, scope: !5602)
!5667 = !DILocation(line: 3675, column: 24, scope: !5602)
!5668 = !DILocation(line: 3675, column: 9, scope: !5602)
!5669 = !DILocation(line: 3675, column: 18, scope: !5602)
!5670 = !DILocation(line: 3676, column: 24, scope: !5602)
!5671 = !DILocation(line: 3676, column: 9, scope: !5602)
!5672 = !DILocation(line: 3676, column: 16, scope: !5602)
!5673 = !DILocation(line: 3677, column: 9, scope: !5602)
!5674 = !DILocation(line: 3677, column: 14, scope: !5602)
!5675 = !DILocation(line: 3678, column: 9, scope: !5602)
!5676 = !DILocation(line: 3678, column: 14, scope: !5602)
!5677 = !DILocation(line: 3679, column: 9, scope: !5602)
!5678 = !DILocation(line: 3679, column: 15, scope: !5602)
!5679 = !DILocation(line: 3680, column: 19, scope: !5602)
!5680 = !DILocation(line: 3680, column: 9, scope: !5602)
!5681 = !DILocation(line: 3680, column: 17, scope: !5602)
!5682 = !DILocation(line: 3681, column: 9, scope: !5602)
!5683 = !DILocation(line: 3681, column: 14, scope: !5602)
!5684 = !DILocation(line: 3683, column: 19, scope: !5602)
!5685 = !DILocation(line: 3683, column: 16, scope: !5602)
!5686 = !DILocation(line: 3684, column: 13, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3684, column: 7)
!5688 = !DILocation(line: 3684, column: 7, scope: !5687)
!5689 = !DILocation(line: 3684, column: 7, scope: !5602)
!5690 = !DILocation(line: 3685, column: 22, scope: !5687)
!5691 = !DILocation(line: 3688, column: 14, scope: !5602)
!5692 = !DILocation(line: 3685, column: 5, scope: !5687)
!5693 = !DILocation(line: 3687, column: 30, scope: !5687)
!5694 = !DILocation(line: 3687, column: 17, scope: !5687)
!5695 = !DILocation(line: 3691, column: 3, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3691, column: 3)
!5697 = !DILocation(line: 3692, column: 3, scope: !5602)
!5698 = !DILocation(line: 3696, column: 7, scope: !5621)
!5699 = !DILocation(line: 3696, column: 30, scope: !5621)
!5700 = !DILocation(line: 3696, column: 41, scope: !5621)
!5701 = !DILocation(line: 3696, column: 33, scope: !5621)
!5702 = !DILocation(line: 3696, column: 7, scope: !5602)
!5703 = !DILocation(line: 3698, column: 39, scope: !5620)
!5704 = !DILocation(line: 3698, column: 68, scope: !5620)
!5705 = !DILocation(line: 3698, column: 23, scope: !5620)
!5706 = !DILocation(line: 0, scope: !5620)
!5707 = !DILocation(line: 3699, column: 37, scope: !5620)
!5708 = !DILocation(line: 3700, column: 9, scope: !5620)
!5709 = !DILocation(line: 3699, column: 16, scope: !5620)
!5710 = !DILocation(line: 3701, column: 5, scope: !5620)
!5711 = !DILocation(line: 3703, column: 14, scope: !5621)
!5712 = !DILocation(line: 0, scope: !5621)
!5713 = !DILocation(line: 3704, column: 9, scope: !5602)
!5714 = !DILocation(line: 3704, column: 13, scope: !5602)
!5715 = !DILocation(line: 3705, column: 3, scope: !5602)
!5716 = !DILocation(line: 3705, column: 29, scope: !5602)
!5717 = !DILocation(line: 3706, column: 3, scope: !5602)
!5718 = !DILocation(line: 3706, column: 36, scope: !5602)
!5719 = !DILocation(line: 3707, column: 3, scope: !5602)
!5720 = !DILocation(line: 3710, column: 21, scope: !5602)
!5721 = !DILocation(line: 3710, column: 9, scope: !5602)
!5722 = !DILocation(line: 3710, column: 13, scope: !5602)
!5723 = !DILocation(line: 3711, column: 45, scope: !5602)
!5724 = !DILocation(line: 3711, column: 28, scope: !5602)
!5725 = !DILocation(line: 3711, column: 3, scope: !5602)
!5726 = !DILocation(line: 3712, column: 3, scope: !5602)
!5727 = !DILocation(line: 3716, column: 7, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 3716, column: 7)
!5729 = !DILocation(line: 3716, column: 20, scope: !5728)
!5730 = !DILocation(line: 3716, column: 7, scope: !5602)
!5731 = !DILocation(line: 3717, column: 5, scope: !5728)
!5732 = !DILocation(line: 3717, column: 36, scope: !5728)
!5733 = !DILocation(line: 3719, column: 10, scope: !5602)
!5734 = !DILocation(line: 3719, column: 3, scope: !5602)
!5735 = !DILocation(line: 3720, column: 1, scope: !5602)
!5736 = distinct !DISubprogram(name: "const_rtx_hash", scope: !3, file: !3, line: 3577, type: !5737, scopeLine: 3578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5739)
!5737 = !DISubroutineType(types: !5738)
!5738 = !{!1026, !811}
!5739 = !{!5740, !5741}
!5740 = !DILocalVariable(name: "x", arg: 1, scope: !5736, file: !3, line: 3577, type: !811)
!5741 = !DILocalVariable(name: "h", scope: !5736, file: !3, line: 3579, type: !1026)
!5742 = !DILocation(line: 0, scope: !5736)
!5743 = !DILocation(line: 3579, column: 3, scope: !5736)
!5744 = !DILocation(line: 3579, column: 13, scope: !5736)
!5745 = !DILocation(line: 3580, column: 3, scope: !5736)
!5746 = !DILocation(line: 3581, column: 10, scope: !5736)
!5747 = !DILocation(line: 3582, column: 1, scope: !5736)
!5748 = !DILocation(line: 3581, column: 3, scope: !5736)
!5749 = distinct !DISubprogram(name: "get_block_for_section", scope: !3, file: !3, line: 600, type: !5750, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5752)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!1040, !1044}
!5752 = !{!5753, !5754, !5755}
!5753 = !DILocalVariable(name: "sect", arg: 1, scope: !5749, file: !3, line: 600, type: !1044)
!5754 = !DILocalVariable(name: "block", scope: !5749, file: !3, line: 602, type: !1040)
!5755 = !DILocalVariable(name: "slot", scope: !5749, file: !3, line: 603, type: !1239)
!5756 = !DILocation(line: 0, scope: !5749)
!5757 = !DILocation(line: 605, column: 12, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 605, column: 7)
!5759 = !DILocation(line: 605, column: 7, scope: !5749)
!5760 = !DILocation(line: 608, column: 36, scope: !5749)
!5761 = !DILocation(line: 608, column: 55, scope: !5749)
!5762 = !DILocation(line: 609, column: 8, scope: !5749)
!5763 = !DILocation(line: 608, column: 10, scope: !5749)
!5764 = !DILocation(line: 610, column: 35, scope: !5749)
!5765 = !DILocation(line: 611, column: 13, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 611, column: 7)
!5767 = !DILocation(line: 611, column: 7, scope: !5749)
!5768 = !DILocation(line: 614, column: 2, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 612, column: 5)
!5770 = !DILocation(line: 613, column: 15, scope: !5769)
!5771 = !DILocation(line: 615, column: 14, scope: !5769)
!5772 = !DILocation(line: 615, column: 19, scope: !5769)
!5773 = !DILocation(line: 616, column: 13, scope: !5769)
!5774 = !DILocation(line: 617, column: 5, scope: !5769)
!5775 = !DILocation(line: 619, column: 1, scope: !5749)
!5776 = distinct !DISubprogram(name: "get_pool_constant", scope: !3, file: !3, line: 3725, type: !5593, scopeLine: 3726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5777)
!5777 = !{!5778}
!5778 = !DILocalVariable(name: "addr", arg: 1, scope: !5776, file: !3, line: 3725, type: !811)
!5779 = !DILocation(line: 0, scope: !5776)
!5780 = !DILocation(line: 3727, column: 10, scope: !5776)
!5781 = !DILocation(line: 3727, column: 38, scope: !5776)
!5782 = !DILocation(line: 3727, column: 3, scope: !5776)
!5783 = distinct !DISubprogram(name: "get_pool_constant_mark", scope: !3, file: !3, line: 3734, type: !5784, scopeLine: 3735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5786)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!811, !811, !621}
!5786 = !{!5787, !5788, !5789}
!5787 = !DILocalVariable(name: "addr", arg: 1, scope: !5783, file: !3, line: 3734, type: !811)
!5788 = !DILocalVariable(name: "pmarked", arg: 2, scope: !5783, file: !3, line: 3734, type: !621)
!5789 = !DILocalVariable(name: "desc", scope: !5783, file: !3, line: 3736, type: !1017)
!5790 = !DILocation(line: 0, scope: !5783)
!5791 = !DILocation(line: 3738, column: 10, scope: !5783)
!5792 = !DILocation(line: 3739, column: 21, scope: !5783)
!5793 = !DILocation(line: 3739, column: 26, scope: !5783)
!5794 = !DILocation(line: 3739, column: 14, scope: !5783)
!5795 = !DILocation(line: 3739, column: 12, scope: !5783)
!5796 = !DILocation(line: 3740, column: 16, scope: !5783)
!5797 = !DILocation(line: 3740, column: 3, scope: !5783)
!5798 = distinct !DISubprogram(name: "get_pool_mode", scope: !3, file: !3, line: 3746, type: !5799, scopeLine: 3747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5804)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!5, !5801}
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !572, line: 51, baseType: !5802)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!5804 = !{!5805}
!5805 = !DILocalVariable(name: "addr", arg: 1, scope: !5798, file: !3, line: 3746, type: !5801)
!5806 = !DILocation(line: 0, scope: !5798)
!5807 = !DILocation(line: 3748, column: 10, scope: !5798)
!5808 = !DILocation(line: 3748, column: 38, scope: !5798)
!5809 = !DILocation(line: 3748, column: 3, scope: !5798)
!5810 = distinct !DISubprogram(name: "get_pool_size", scope: !3, file: !3, line: 3754, type: !2053, scopeLine: 3755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!5811 = !DILocation(line: 3756, column: 23, scope: !5810)
!5812 = !DILocation(line: 3756, column: 29, scope: !5810)
!5813 = !DILocation(line: 3756, column: 10, scope: !5810)
!5814 = !DILocation(line: 3756, column: 3, scope: !5810)
!5815 = distinct !DISubprogram(name: "output_shared_constant_pool", scope: !3, file: !3, line: 4019, type: !2666, scopeLine: 4020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!5816 = !DILocation(line: 4021, column: 34, scope: !5815)
!5817 = !DILocation(line: 4021, column: 3, scope: !5815)
!5818 = !DILocation(line: 4022, column: 1, scope: !5815)
!5819 = distinct !DISubprogram(name: "output_constant_pool_contents", scope: !3, file: !3, line: 3968, type: !5820, scopeLine: 3969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5822)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{null, !1727}
!5822 = !{!5823, !5824}
!5823 = !DILocalVariable(name: "pool", arg: 1, scope: !5819, file: !3, line: 3968, type: !1727)
!5824 = !DILocalVariable(name: "desc", scope: !5819, file: !3, line: 3970, type: !1017)
!5825 = !DILocation(line: 0, scope: !5819)
!5826 = !DILocation(line: 3972, column: 21, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 3972, column: 3)
!5828 = !DILocation(line: 3972, column: 8, scope: !5827)
!5829 = !DILocation(line: 0, scope: !5827)
!5830 = !DILocation(line: 3972, column: 3, scope: !5827)
!5831 = !DILocation(line: 3973, column: 15, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 3973, column: 9)
!5833 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3972, column: 3)
!5834 = !DILocation(line: 3973, column: 9, scope: !5832)
!5835 = !DILocation(line: 3973, column: 9, scope: !5833)
!5836 = !DILocation(line: 3979, column: 6, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 3979, column: 6)
!5838 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 3974, column: 7)
!5839 = !DILocation(line: 3980, column: 6, scope: !5837)
!5840 = !DILocation(line: 3980, column: 9, scope: !5837)
!5841 = !DILocation(line: 3979, column: 6, scope: !5838)
!5842 = !DILocation(line: 3981, column: 4, scope: !5837)
!5843 = !DILocation(line: 3984, column: 41, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 3983, column: 4)
!5845 = !DILocation(line: 3985, column: 18, scope: !5844)
!5846 = !DILocation(line: 3985, column: 30, scope: !5844)
!5847 = !DILocation(line: 3985, column: 46, scope: !5844)
!5848 = !DILocation(line: 3985, column: 40, scope: !5844)
!5849 = !DILocation(line: 3984, column: 25, scope: !5844)
!5850 = !DILocation(line: 3984, column: 6, scope: !5844)
!5851 = !DILocation(line: 3986, column: 42, scope: !5844)
!5852 = !DILocation(line: 3986, column: 6, scope: !5844)
!5853 = !DILocation(line: 3972, column: 48, scope: !5833)
!5854 = !DILocation(line: 3972, column: 3, scope: !5833)
!5855 = distinct !{!5855, !5830, !5856}
!5856 = !DILocation(line: 3988, column: 7, scope: !5827)
!5857 = !DILocation(line: 3989, column: 1, scope: !5819)
!5858 = distinct !DISubprogram(name: "compute_reloc_for_constant", scope: !3, file: !3, line: 4027, type: !4043, scopeLine: 4028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5859)
!5859 = !{!5860, !5861, !5862, !5863, !5864}
!5860 = !DILocalVariable(name: "exp", arg: 1, scope: !5858, file: !3, line: 4027, type: !639)
!5861 = !DILocalVariable(name: "reloc", scope: !5858, file: !3, line: 4029, type: !623)
!5862 = !DILocalVariable(name: "reloc2", scope: !5858, file: !3, line: 4029, type: !623)
!5863 = !DILocalVariable(name: "tem", scope: !5858, file: !3, line: 4030, type: !639)
!5864 = !DILocalVariable(name: "idx", scope: !5865, file: !3, line: 4072, type: !692)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 4071, column: 7)
!5866 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 4033, column: 5)
!5867 = !DILocation(line: 4067, column: 15, scope: !5866)
!5868 = !DILocation(line: 0, scope: !5858)
!5869 = !DILocation(line: 4032, column: 11, scope: !5858)
!5870 = !DILocation(line: 4032, column: 3, scope: !5858)
!5871 = !DILocation(line: 0, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 4073, column: 2)
!5873 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 4073, column: 2)
!5874 = !DILocation(line: 4073, column: 2, scope: !5873)
!5875 = !DILocation(line: 4039, column: 12, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 4039, column: 7)
!5877 = !DILocation(line: 0, scope: !5876)
!5878 = !DILocation(line: 4039, column: 41, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 4039, column: 7)
!5880 = !DILocation(line: 4039, column: 7, scope: !5876)
!5881 = !DILocation(line: 4039, column: 7, scope: !5879)
!5882 = distinct !{!5882, !5880, !5883}
!5883 = !DILocation(line: 4041, column: 2, scope: !5876)
!5884 = !DILocation(line: 4043, column: 11, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 4043, column: 11)
!5886 = !DILocation(line: 4043, column: 11, scope: !5866)
!5887 = !DILocation(line: 4051, column: 43, scope: !5866)
!5888 = !DILocation(line: 4051, column: 15, scope: !5866)
!5889 = !DILocation(line: 4052, column: 44, scope: !5866)
!5890 = !DILocation(line: 4052, column: 16, scope: !5866)
!5891 = !DILocation(line: 4052, column: 13, scope: !5866)
!5892 = !DILocation(line: 4082, column: 3, scope: !5858)
!5893 = !DILocation(line: 4056, column: 43, scope: !5866)
!5894 = !DILocation(line: 4056, column: 15, scope: !5866)
!5895 = !DILocation(line: 4057, column: 44, scope: !5866)
!5896 = !DILocation(line: 4057, column: 16, scope: !5866)
!5897 = !DILocation(line: 4059, column: 17, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 4059, column: 11)
!5899 = !DILocation(line: 4059, column: 32, scope: !5898)
!5900 = !DILocation(line: 4059, column: 22, scope: !5898)
!5901 = !DILocation(line: 4067, column: 43, scope: !5866)
!5902 = !DILocation(line: 0, scope: !5873)
!5903 = !DILocation(line: 0, scope: !5865)
!5904 = !DILocation(line: 4073, column: 2, scope: !5872)
!5905 = !DILocation(line: 4074, column: 12, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 4074, column: 8)
!5907 = !DILocation(line: 4074, column: 8, scope: !5872)
!5908 = !DILocation(line: 4075, column: 15, scope: !5906)
!5909 = !DILocation(line: 4075, column: 12, scope: !5906)
!5910 = !DILocation(line: 4075, column: 6, scope: !5906)
!5911 = distinct !{!5911, !5874, !5912}
!5912 = !DILocation(line: 4075, column: 46, scope: !5873)
!5913 = distinct !DISubprogram(name: "handled_component_p", scope: !151, file: !151, line: 4551, type: !5914, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5917)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!622, !5916}
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !572, line: 59, baseType: !1741)
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "t", arg: 1, scope: !5913, file: !151, line: 4551, type: !5916)
!5919 = !DILocation(line: 0, scope: !5913)
!5920 = !DILocation(line: 4553, column: 11, scope: !5913)
!5921 = !DILocation(line: 4553, column: 3, scope: !5913)
!5922 = !DILocation(line: 4565, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5913, file: !151, line: 4554, column: 5)
!5924 = !DILocation(line: 0, scope: !5923)
!5925 = !DILocation(line: 4567, column: 1, scope: !5913)
!5926 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !151, file: !151, line: 1537, type: !5927, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5931)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{!7, !5929}
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5930, size: 64)
!5930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "vec_", arg: 1, scope: !5926, file: !151, line: 1537, type: !5929)
!5933 = !DILocation(line: 0, scope: !5926)
!5934 = !DILocation(line: 1537, column: 1, scope: !5926)
!5935 = distinct !DISubprogram(name: "VEC_constructor_elt_base_index", scope: !151, file: !151, line: 1537, type: !5936, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5938)
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!4226, !4272, !7}
!5938 = !{!5939, !5940}
!5939 = !DILocalVariable(name: "vec_", arg: 1, scope: !5935, file: !151, line: 1537, type: !4272)
!5940 = !DILocalVariable(name: "ix_", arg: 2, scope: !5935, file: !151, line: 1537, type: !7)
!5941 = !DILocation(line: 0, scope: !5935)
!5942 = !DILocation(line: 1537, column: 1, scope: !5935)
!5943 = distinct !DISubprogram(name: "constructor_static_from_elts_p", scope: !3, file: !3, line: 4144, type: !5914, scopeLine: 4145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5944)
!5944 = !{!5945}
!5945 = !DILocalVariable(name: "ctor", arg: 1, scope: !5943, file: !3, line: 4144, type: !5916)
!5946 = !DILocation(line: 0, scope: !5943)
!5947 = !DILocation(line: 4146, column: 11, scope: !5943)
!5948 = !DILocation(line: 4147, column: 4, scope: !5943)
!5949 = !DILocation(line: 4147, column: 8, scope: !5943)
!5950 = !DILocation(line: 4147, column: 37, scope: !5943)
!5951 = !DILocation(line: 4148, column: 8, scope: !5943)
!5952 = !DILocation(line: 4148, column: 40, scope: !5943)
!5953 = !DILocation(line: 4149, column: 4, scope: !5943)
!5954 = !DILocation(line: 4149, column: 8, scope: !5943)
!5955 = !DILocation(line: 4146, column: 3, scope: !5943)
!5956 = distinct !DISubprogram(name: "initializer_constant_valid_p", scope: !3, file: !3, line: 4505, type: !5957, scopeLine: 4506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5959)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{!639, !639, !639}
!5959 = !{!5960, !5961}
!5960 = !DILocalVariable(name: "value", arg: 1, scope: !5956, file: !3, line: 4505, type: !639)
!5961 = !DILocalVariable(name: "endtype", arg: 2, scope: !5956, file: !3, line: 4505, type: !639)
!5962 = !DILocation(line: 0, scope: !5956)
!5963 = !DILocation(line: 4507, column: 10, scope: !5956)
!5964 = !DILocation(line: 4507, column: 3, scope: !5956)
!5965 = distinct !DISubprogram(name: "initializer_constant_valid_p_1", scope: !3, file: !3, line: 4245, type: !5966, scopeLine: 4246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5968)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!639, !639, !639, !1434}
!5968 = !{!5969, !5970, !5971, !5972, !5973, !5977, !5978, !5979, !5983, !5985, !5987, !5988, !5989, !5991, !5992, !5993, !5996, !6000, !6001, !6002, !6005, !6006}
!5969 = !DILocalVariable(name: "value", arg: 1, scope: !5965, file: !3, line: 4245, type: !639)
!5970 = !DILocalVariable(name: "endtype", arg: 2, scope: !5965, file: !3, line: 4245, type: !639)
!5971 = !DILocalVariable(name: "cache", arg: 3, scope: !5965, file: !3, line: 4245, type: !1434)
!5972 = !DILocalVariable(name: "ret", scope: !5965, file: !3, line: 4247, type: !639)
!5973 = !DILocalVariable(name: "idx", scope: !5974, file: !3, line: 4254, type: !692)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 4253, column: 2)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4252, column: 11)
!5976 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 4250, column: 5)
!5977 = !DILocalVariable(name: "elt", scope: !5974, file: !3, line: 4255, type: !639)
!5978 = !DILocalVariable(name: "absolute", scope: !5974, file: !3, line: 4256, type: !622)
!5979 = !DILocalVariable(name: "reloc", scope: !5980, file: !3, line: 4262, type: !639)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 4261, column: 6)
!5981 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 4260, column: 4)
!5982 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 4260, column: 4)
!5983 = !DILocalVariable(name: "op0", scope: !5984, file: !3, line: 4301, type: !639)
!5984 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4300, column: 7)
!5985 = !DILocalVariable(name: "src", scope: !5986, file: !3, line: 4329, type: !639)
!5986 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4328, column: 7)
!5987 = !DILocalVariable(name: "src_type", scope: !5986, file: !3, line: 4330, type: !639)
!5988 = !DILocalVariable(name: "dest_type", scope: !5986, file: !3, line: 4331, type: !639)
!5989 = !DILocalVariable(name: "src", scope: !5990, file: !3, line: 4351, type: !639)
!5990 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4350, column: 7)
!5991 = !DILocalVariable(name: "src_type", scope: !5990, file: !3, line: 4352, type: !639)
!5992 = !DILocalVariable(name: "dest_type", scope: !5990, file: !3, line: 4353, type: !639)
!5993 = !DILocalVariable(name: "inner", scope: !5994, file: !3, line: 4372, type: !639)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 4371, column: 4)
!5995 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4370, column: 6)
!5996 = !DILocalVariable(name: "ncache", scope: !5997, file: !3, line: 4417, type: !5999)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 4416, column: 2)
!5998 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4414, column: 11)
!5999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 256, elements: !902)
!6000 = !DILocalVariable(name: "valid0", scope: !5997, file: !3, line: 4418, type: !639)
!6001 = !DILocalVariable(name: "valid1", scope: !5997, file: !3, line: 4421, type: !639)
!6002 = !DILocalVariable(name: "ncache", scope: !6003, file: !3, line: 4452, type: !5999)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 4451, column: 2)
!6004 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4449, column: 11)
!6005 = !DILocalVariable(name: "valid0", scope: !6003, file: !3, line: 4453, type: !639)
!6006 = !DILocalVariable(name: "valid1", scope: !6003, file: !3, line: 4456, type: !639)
!6007 = !DILocation(line: 0, scope: !5965)
!6008 = !DILocation(line: 4249, column: 11, scope: !5965)
!6009 = !DILocation(line: 4249, column: 3, scope: !5965)
!6010 = !DILocation(line: 4252, column: 11, scope: !5975)
!6011 = !DILocation(line: 4252, column: 11, scope: !5976)
!6012 = !DILocation(line: 0, scope: !5974)
!6013 = !DILocation(line: 4258, column: 8, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 4258, column: 8)
!6015 = !DILocation(line: 4258, column: 14, scope: !6014)
!6016 = !DILocation(line: 4258, column: 17, scope: !6014)
!6017 = !DILocation(line: 4258, column: 26, scope: !6014)
!6018 = !DILocation(line: 4258, column: 8, scope: !5974)
!6019 = !DILocation(line: 4259, column: 13, scope: !6014)
!6020 = !DILocation(line: 4259, column: 6, scope: !6014)
!6021 = !DILocation(line: 0, scope: !5981)
!6022 = !DILocation(line: 0, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 4268, column: 7)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 4267, column: 9)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 4266, column: 3)
!6026 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4265, column: 12)
!6027 = !DILocation(line: 4260, column: 4, scope: !5982)
!6028 = !DILocation(line: 0, scope: !5982)
!6029 = !DILocation(line: 4260, column: 4, scope: !5981)
!6030 = !DILocation(line: 4263, column: 53, scope: !5980)
!6031 = !DILocation(line: 4263, column: 16, scope: !5980)
!6032 = !DILocation(line: 0, scope: !5980)
!6033 = !DILocation(line: 4265, column: 13, scope: !6026)
!6034 = !DILocation(line: 4265, column: 12, scope: !5980)
!6035 = !DILocation(line: 4274, column: 21, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 4274, column: 12)
!6037 = !DILocation(line: 4274, column: 18, scope: !6036)
!6038 = !DILocation(line: 4274, column: 12, scope: !5980)
!6039 = !DILocation(line: 4276, column: 6, scope: !5981)
!6040 = !DILocation(line: 4267, column: 9, scope: !6025)
!6041 = distinct !{!6041, !6027, !6042}
!6042 = !DILocation(line: 4276, column: 6, scope: !5982)
!6043 = !DILocation(line: 4280, column: 8, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 4280, column: 8)
!6045 = !DILocation(line: 4493, column: 1, scope: !5965)
!6046 = !DILocation(line: 4269, column: 18, scope: !6023)
!6047 = !DILocation(line: 4270, column: 18, scope: !6023)
!6048 = !DILocation(line: 4271, column: 7, scope: !6023)
!6049 = !DILocation(line: 4280, column: 8, scope: !5974)
!6050 = !DILocation(line: 4285, column: 11, scope: !5974)
!6051 = !DILocation(line: 4282, column: 17, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 4281, column: 6)
!6053 = !DILocation(line: 4283, column: 19, scope: !6052)
!6054 = !DILocation(line: 4283, column: 17, scope: !6052)
!6055 = !DILocation(line: 4284, column: 6, scope: !6052)
!6056 = !DILocation(line: 4288, column: 14, scope: !5976)
!6057 = !DILocation(line: 4296, column: 14, scope: !5976)
!6058 = !DILocation(line: 4296, column: 7, scope: !5976)
!6059 = !DILocation(line: 4301, column: 22, scope: !5984)
!6060 = !DILocation(line: 4301, column: 13, scope: !5984)
!6061 = !DILocation(line: 0, scope: !5984)
!6062 = !DILocation(line: 4302, column: 6, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 4302, column: 6)
!6064 = !DILocation(line: 4302, column: 6, scope: !5984)
!6065 = !DILocation(line: 4306, column: 10, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 4306, column: 10)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 4303, column: 4)
!6068 = !DILocation(line: 4306, column: 26, scope: !6066)
!6069 = !DILocation(line: 4307, column: 3, scope: !6066)
!6070 = !DILocation(line: 4307, column: 6, scope: !6066)
!6071 = !DILocation(line: 4306, column: 10, scope: !6067)
!6072 = !DILocation(line: 4308, column: 15, scope: !6066)
!6073 = !DILocation(line: 4308, column: 8, scope: !6066)
!6074 = !DILocation(line: 4311, column: 26, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 4311, column: 10)
!6076 = !DILocation(line: 4312, column: 3, scope: !6075)
!6077 = !DILocation(line: 4312, column: 6, scope: !6075)
!6078 = !DILocation(line: 4313, column: 3, scope: !6075)
!6079 = !DILocation(line: 4313, column: 7, scope: !6075)
!6080 = !DILocation(line: 4311, column: 10, scope: !6067)
!6081 = !DILocation(line: 4317, column: 26, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 4317, column: 10)
!6083 = !DILocation(line: 4317, column: 10, scope: !6067)
!6084 = !DILocation(line: 4320, column: 2, scope: !5984)
!6085 = !DILocation(line: 4324, column: 46, scope: !5976)
!6086 = !DILocation(line: 4324, column: 14, scope: !5976)
!6087 = !DILocation(line: 4324, column: 7, scope: !5976)
!6088 = !DILocation(line: 4329, column: 13, scope: !5986)
!6089 = !DILocation(line: 0, scope: !5986)
!6090 = !DILocation(line: 4330, column: 18, scope: !5986)
!6091 = !DILocation(line: 4331, column: 19, scope: !5986)
!6092 = !DILocation(line: 4337, column: 6, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 4337, column: 6)
!6094 = !DILocation(line: 4337, column: 34, scope: !6093)
!6095 = !DILocation(line: 4337, column: 38, scope: !6093)
!6096 = !DILocation(line: 4337, column: 6, scope: !5986)
!6097 = !DILocation(line: 4339, column: 10, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 4339, column: 10)
!6099 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4338, column: 4)
!6100 = !DILocation(line: 4339, column: 33, scope: !6098)
!6101 = !DILocation(line: 4339, column: 30, scope: !6098)
!6102 = !DILocation(line: 4339, column: 10, scope: !6099)
!6103 = !DILocation(line: 4340, column: 15, scope: !6098)
!6104 = !DILocation(line: 4340, column: 8, scope: !6098)
!6105 = !DILocation(line: 4346, column: 9, scope: !5986)
!6106 = !DILocation(line: 4346, column: 2, scope: !5986)
!6107 = !DILocation(line: 4351, column: 13, scope: !5990)
!6108 = !DILocation(line: 0, scope: !5990)
!6109 = !DILocation(line: 4352, column: 18, scope: !5990)
!6110 = !DILocation(line: 4353, column: 19, scope: !5990)
!6111 = !DILocation(line: 4357, column: 7, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4357, column: 6)
!6113 = !DILocation(line: 4357, column: 34, scope: !6112)
!6114 = !DILocation(line: 4357, column: 37, scope: !6112)
!6115 = !DILocation(line: 4358, column: 6, scope: !6112)
!6116 = !DILocation(line: 4358, column: 10, scope: !6112)
!6117 = !DILocation(line: 4358, column: 35, scope: !6112)
!6118 = !DILocation(line: 4358, column: 38, scope: !6112)
!6119 = !DILocation(line: 4359, column: 6, scope: !6112)
!6120 = !DILocation(line: 4359, column: 32, scope: !6112)
!6121 = !DILocation(line: 4360, column: 3, scope: !6112)
!6122 = !DILocation(line: 4360, column: 6, scope: !6112)
!6123 = !DILocation(line: 4360, column: 27, scope: !6112)
!6124 = !DILocation(line: 4357, column: 6, scope: !5990)
!6125 = !DILocation(line: 4361, column: 11, scope: !6112)
!6126 = !DILocation(line: 4361, column: 4, scope: !6112)
!6127 = !DILocation(line: 4364, column: 6, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4364, column: 6)
!6129 = !DILocation(line: 4364, column: 34, scope: !6128)
!6130 = !DILocation(line: 4364, column: 37, scope: !6128)
!6131 = !DILocation(line: 4365, column: 6, scope: !6128)
!6132 = !DILocation(line: 4365, column: 10, scope: !6128)
!6133 = !DILocation(line: 4365, column: 40, scope: !6128)
!6134 = !DILocation(line: 4365, column: 37, scope: !6128)
!6135 = !DILocation(line: 4364, column: 6, scope: !5990)
!6136 = !DILocation(line: 4366, column: 11, scope: !6128)
!6137 = !DILocation(line: 4366, column: 4, scope: !6128)
!6138 = !DILocation(line: 4370, column: 6, scope: !5995)
!6139 = !DILocation(line: 4370, column: 34, scope: !5995)
!6140 = !DILocation(line: 4370, column: 37, scope: !5995)
!6141 = !DILocation(line: 4370, column: 6, scope: !5990)
!6142 = !DILocation(line: 4372, column: 19, scope: !5994)
!6143 = !DILocation(line: 0, scope: !5994)
!6144 = !DILocation(line: 4373, column: 19, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 4373, column: 10)
!6146 = !DILocation(line: 4373, column: 16, scope: !6145)
!6147 = !DILocation(line: 4373, column: 10, scope: !5994)
!6148 = !DILocation(line: 4379, column: 6, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4379, column: 6)
!6150 = !DILocation(line: 4379, column: 34, scope: !6149)
!6151 = !DILocation(line: 4379, column: 37, scope: !6149)
!6152 = !DILocation(line: 4380, column: 6, scope: !6149)
!6153 = !DILocation(line: 4380, column: 10, scope: !6149)
!6154 = !DILocation(line: 4380, column: 40, scope: !6149)
!6155 = !DILocation(line: 4380, column: 37, scope: !6149)
!6156 = !DILocation(line: 4379, column: 6, scope: !5990)
!6157 = !DILocation(line: 4381, column: 11, scope: !6149)
!6158 = !DILocation(line: 4381, column: 4, scope: !6149)
!6159 = !DILocation(line: 4385, column: 7, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4385, column: 6)
!6161 = !DILocation(line: 4386, column: 7, scope: !6160)
!6162 = !DILocation(line: 4387, column: 6, scope: !6160)
!6163 = !DILocation(line: 4387, column: 9, scope: !6160)
!6164 = !DILocation(line: 4385, column: 6, scope: !5990)
!6165 = !DILocation(line: 4389, column: 10, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 4389, column: 10)
!6167 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 4388, column: 4)
!6168 = !DILocation(line: 4389, column: 26, scope: !6166)
!6169 = !DILocation(line: 4390, column: 3, scope: !6166)
!6170 = !DILocation(line: 4390, column: 6, scope: !6166)
!6171 = !DILocation(line: 4390, column: 36, scope: !6166)
!6172 = !DILocation(line: 4390, column: 33, scope: !6166)
!6173 = !DILocation(line: 4389, column: 10, scope: !6167)
!6174 = !DILocation(line: 4391, column: 15, scope: !6166)
!6175 = !DILocation(line: 4391, column: 8, scope: !6166)
!6176 = !DILocation(line: 4392, column: 10, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 4392, column: 10)
!6178 = !DILocation(line: 4392, column: 10, scope: !6167)
!6179 = !DILocation(line: 4393, column: 15, scope: !6177)
!6180 = !DILocation(line: 4393, column: 8, scope: !6177)
!6181 = !DILocation(line: 4394, column: 15, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 4394, column: 15)
!6183 = !DILocation(line: 4394, column: 45, scope: !6182)
!6184 = !DILocation(line: 4394, column: 42, scope: !6182)
!6185 = !DILocation(line: 4394, column: 15, scope: !6177)
!6186 = !DILocation(line: 4400, column: 6, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 4400, column: 6)
!6188 = !DILocation(line: 4400, column: 28, scope: !6187)
!6189 = !DILocation(line: 4395, column: 15, scope: !6182)
!6190 = !DILocation(line: 4395, column: 8, scope: !6182)
!6191 = !DILocation(line: 4401, column: 6, scope: !6187)
!6192 = !DILocation(line: 4401, column: 31, scope: !6187)
!6193 = !DILocation(line: 4400, column: 6, scope: !5990)
!6194 = !DILocation(line: 4402, column: 11, scope: !6187)
!6195 = !DILocation(line: 4402, column: 4, scope: !6187)
!6196 = !DILocation(line: 4410, column: 11, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4410, column: 11)
!6198 = !DILocation(line: 4410, column: 31, scope: !6197)
!6199 = !DILocation(line: 4410, column: 11, scope: !5976)
!6200 = !DILocation(line: 4412, column: 11, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4412, column: 11)
!6202 = !DILocation(line: 4412, column: 17, scope: !6201)
!6203 = !DILocation(line: 4412, column: 20, scope: !6201)
!6204 = !DILocation(line: 4412, column: 29, scope: !6201)
!6205 = !DILocation(line: 4412, column: 11, scope: !5976)
!6206 = !DILocation(line: 4413, column: 9, scope: !6201)
!6207 = !DILocation(line: 4413, column: 2, scope: !6201)
!6208 = !DILocation(line: 4414, column: 13, scope: !5998)
!6209 = !DILocation(line: 4415, column: 4, scope: !5998)
!6210 = !DILocation(line: 4415, column: 7, scope: !5998)
!6211 = !DILocation(line: 4415, column: 35, scope: !5998)
!6212 = !DILocation(line: 4415, column: 32, scope: !5998)
!6213 = !DILocation(line: 4414, column: 11, scope: !5976)
!6214 = !DILocation(line: 4417, column: 4, scope: !5997)
!6215 = !DILocation(line: 4417, column: 9, scope: !5997)
!6216 = !DILocation(line: 4419, column: 40, scope: !5997)
!6217 = !DILocation(line: 4420, column: 21, scope: !5997)
!6218 = !DILocation(line: 4419, column: 8, scope: !5997)
!6219 = !DILocation(line: 0, scope: !5997)
!6220 = !DILocation(line: 4422, column: 40, scope: !5997)
!6221 = !DILocation(line: 4423, column: 28, scope: !5997)
!6222 = !DILocation(line: 4422, column: 8, scope: !5997)
!6223 = !DILocation(line: 4425, column: 18, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4425, column: 8)
!6225 = !DILocation(line: 4425, column: 15, scope: !6224)
!6226 = !DILocation(line: 4425, column: 8, scope: !5997)
!6227 = !DILocation(line: 4427, column: 20, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 4427, column: 13)
!6229 = !DILocation(line: 4427, column: 13, scope: !6224)
!6230 = !DILocation(line: 4431, column: 12, scope: !6228)
!6231 = !DILocation(line: 0, scope: !6224)
!6232 = !DILocation(line: 4433, column: 2, scope: !5998)
!6233 = !DILocation(line: 4433, column: 2, scope: !5997)
!6234 = !DILocation(line: 4436, column: 8, scope: !5998)
!6235 = !DILocation(line: 0, scope: !5998)
!6236 = !DILocation(line: 4437, column: 11, scope: !5976)
!6237 = !DILocation(line: 4439, column: 13, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 4438, column: 2)
!6239 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4437, column: 11)
!6240 = !DILocation(line: 4440, column: 4, scope: !6238)
!6241 = !DILocation(line: 4440, column: 13, scope: !6238)
!6242 = !DILocation(line: 4441, column: 2, scope: !6238)
!6243 = !DILocation(line: 4445, column: 11, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4445, column: 11)
!6245 = !DILocation(line: 4445, column: 31, scope: !6244)
!6246 = !DILocation(line: 4445, column: 11, scope: !5976)
!6247 = !DILocation(line: 4447, column: 11, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4447, column: 11)
!6249 = !DILocation(line: 4447, column: 17, scope: !6248)
!6250 = !DILocation(line: 4447, column: 20, scope: !6248)
!6251 = !DILocation(line: 4447, column: 29, scope: !6248)
!6252 = !DILocation(line: 4447, column: 11, scope: !5976)
!6253 = !DILocation(line: 4448, column: 9, scope: !6248)
!6254 = !DILocation(line: 4448, column: 2, scope: !6248)
!6255 = !DILocation(line: 4449, column: 13, scope: !6004)
!6256 = !DILocation(line: 4450, column: 4, scope: !6004)
!6257 = !DILocation(line: 4450, column: 7, scope: !6004)
!6258 = !DILocation(line: 4450, column: 35, scope: !6004)
!6259 = !DILocation(line: 4450, column: 32, scope: !6004)
!6260 = !DILocation(line: 4449, column: 11, scope: !5976)
!6261 = !DILocation(line: 4452, column: 4, scope: !6003)
!6262 = !DILocation(line: 4452, column: 9, scope: !6003)
!6263 = !DILocation(line: 4454, column: 40, scope: !6003)
!6264 = !DILocation(line: 4455, column: 21, scope: !6003)
!6265 = !DILocation(line: 4454, column: 8, scope: !6003)
!6266 = !DILocation(line: 0, scope: !6003)
!6267 = !DILocation(line: 4457, column: 40, scope: !6003)
!6268 = !DILocation(line: 4458, column: 28, scope: !6003)
!6269 = !DILocation(line: 4457, column: 8, scope: !6003)
!6270 = !DILocation(line: 4460, column: 18, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4460, column: 8)
!6272 = !DILocation(line: 4460, column: 15, scope: !6271)
!6273 = !DILocation(line: 4460, column: 8, scope: !6003)
!6274 = !DILocation(line: 4464, column: 20, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 4464, column: 13)
!6276 = !DILocation(line: 4464, column: 40, scope: !6275)
!6277 = !DILocation(line: 4464, column: 30, scope: !6275)
!6278 = !DILocation(line: 4465, column: 6, scope: !6275)
!6279 = !DILocation(line: 4469, column: 13, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 4469, column: 13)
!6281 = !DILocation(line: 4469, column: 20, scope: !6280)
!6282 = !DILocation(line: 4469, column: 23, scope: !6280)
!6283 = !DILocation(line: 4469, column: 42, scope: !6280)
!6284 = !DILocation(line: 4470, column: 9, scope: !6280)
!6285 = !DILocation(line: 4470, column: 6, scope: !6280)
!6286 = !DILocation(line: 4470, column: 19, scope: !6280)
!6287 = !DILocation(line: 4470, column: 38, scope: !6280)
!6288 = !DILocation(line: 4471, column: 6, scope: !6280)
!6289 = !DILocation(line: 4471, column: 9, scope: !6280)
!6290 = !DILocation(line: 4469, column: 13, scope: !6275)
!6291 = !DILocation(line: 4472, column: 12, scope: !6280)
!6292 = !DILocation(line: 4472, column: 6, scope: !6280)
!6293 = !DILocation(line: 4475, column: 12, scope: !6280)
!6294 = !DILocation(line: 0, scope: !6271)
!6295 = !DILocation(line: 4477, column: 2, scope: !6004)
!6296 = !DILocation(line: 4477, column: 2, scope: !6003)
!6297 = !DILocation(line: 4480, column: 8, scope: !6004)
!6298 = !DILocation(line: 0, scope: !6004)
!6299 = !DILocation(line: 4481, column: 11, scope: !5976)
!6300 = !DILocation(line: 4483, column: 13, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 4482, column: 2)
!6302 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 4481, column: 11)
!6303 = !DILocation(line: 4484, column: 4, scope: !6301)
!6304 = !DILocation(line: 4484, column: 13, scope: !6301)
!6305 = !DILocation(line: 4485, column: 2, scope: !6301)
!6306 = !DILocation(line: 4492, column: 3, scope: !5965)
!6307 = distinct !DISubprogram(name: "initializer_constant_valid_for_bitfield_p", scope: !3, file: !3, line: 4515, type: !3451, scopeLine: 4516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6308)
!6308 = !{!6309, !6310, !6313}
!6309 = !DILocalVariable(name: "value", arg: 1, scope: !6307, file: !3, line: 4515, type: !639)
!6310 = !DILocalVariable(name: "idx", scope: !6311, file: !3, line: 4523, type: !692)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 4522, column: 7)
!6312 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 4520, column: 5)
!6313 = !DILocalVariable(name: "elt", scope: !6311, file: !3, line: 4524, type: !639)
!6314 = !DILocation(line: 4538, column: 2, scope: !6312)
!6315 = !DILocation(line: 0, scope: !6307)
!6316 = !DILocation(line: 4519, column: 11, scope: !6307)
!6317 = !DILocation(line: 4519, column: 3, scope: !6307)
!6318 = !DILocation(line: 0, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 4526, column: 2)
!6320 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 4526, column: 2)
!6321 = !DILocation(line: 4526, column: 2, scope: !6320)
!6322 = !DILocation(line: 0, scope: !6320)
!6323 = !DILocation(line: 0, scope: !6311)
!6324 = !DILocation(line: 4526, column: 2, scope: !6319)
!6325 = !DILocation(line: 4527, column: 9, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 4527, column: 8)
!6327 = !DILocation(line: 4527, column: 8, scope: !6319)
!6328 = distinct !{!6328, !6321, !6329}
!6329 = !DILocation(line: 4528, column: 13, scope: !6320)
!6330 = !DILocation(line: 4538, column: 45, scope: !6312)
!6331 = !DILocation(line: 4544, column: 3, scope: !6307)
!6332 = !DILocation(line: 4545, column: 1, scope: !6307)
!6333 = distinct !DISubprogram(name: "output_constant", scope: !3, file: !3, line: 4580, type: !6334, scopeLine: 4581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6336)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{null, !639, !692, !7}
!6336 = !{!6337, !6338, !6339, !6340, !6341, !6342, !6345, !6347, !6348, !6352, !6353, !6354}
!6337 = !DILocalVariable(name: "exp", arg: 1, scope: !6333, file: !3, line: 4580, type: !639)
!6338 = !DILocalVariable(name: "size", arg: 2, scope: !6333, file: !3, line: 4580, type: !692)
!6339 = !DILocalVariable(name: "align", arg: 3, scope: !6333, file: !3, line: 4580, type: !7)
!6340 = !DILocalVariable(name: "code", scope: !6333, file: !3, line: 4582, type: !183)
!6341 = !DILocalVariable(name: "thissize", scope: !6333, file: !3, line: 4583, type: !692)
!6342 = !DILocalVariable(name: "saved_type", scope: !6343, file: !3, line: 4598, type: !639)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 4597, column: 5)
!6344 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4592, column: 7)
!6345 = !DILocalVariable(name: "type_size", scope: !6346, file: !3, line: 4627, type: !694)
!6346 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4626, column: 5)
!6347 = !DILocalVariable(name: "op_size", scope: !6346, file: !3, line: 4628, type: !694)
!6348 = !DILocalVariable(name: "elt_size", scope: !6349, file: !3, line: 4711, type: !623)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 4710, column: 4)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 4699, column: 2)
!6351 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4669, column: 5)
!6352 = !DILocalVariable(name: "link", scope: !6349, file: !3, line: 4712, type: !639)
!6353 = !DILocalVariable(name: "nalign", scope: !6349, file: !3, line: 4713, type: !7)
!6354 = !DILocalVariable(name: "inner", scope: !6349, file: !3, line: 4714, type: !5)
!6355 = !DILocation(line: 0, scope: !6333)
!6356 = !DILocation(line: 4585, column: 12, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4585, column: 7)
!6358 = !DILocation(line: 4585, column: 20, scope: !6357)
!6359 = !DILocation(line: 4585, column: 17, scope: !6357)
!6360 = !DILocation(line: 4592, column: 7, scope: !6344)
!6361 = !DILocation(line: 4592, column: 23, scope: !6344)
!6362 = !DILocation(line: 4593, column: 7, scope: !6344)
!6363 = !DILocation(line: 4593, column: 10, scope: !6344)
!6364 = !DILocation(line: 4594, column: 7, scope: !6344)
!6365 = !DILocation(line: 4594, column: 29, scope: !6344)
!6366 = !DILocation(line: 4595, column: 6, scope: !6344)
!6367 = !DILocation(line: 0, scope: !6344)
!6368 = !DILocation(line: 4596, column: 6, scope: !6344)
!6369 = !DILocation(line: 4594, column: 10, scope: !6344)
!6370 = !DILocation(line: 4592, column: 7, scope: !6333)
!6371 = !DILocation(line: 4598, column: 25, scope: !6343)
!6372 = !DILocation(line: 0, scope: !6343)
!6373 = !DILocation(line: 4602, column: 7, scope: !6343)
!6374 = !DILocation(line: 4602, column: 14, scope: !6343)
!6375 = !DILocation(line: 4602, column: 30, scope: !6343)
!6376 = !DILocation(line: 4603, column: 7, scope: !6343)
!6377 = !DILocation(line: 4603, column: 10, scope: !6343)
!6378 = !DILocation(line: 4604, column: 7, scope: !6343)
!6379 = !DILocation(line: 4604, column: 29, scope: !6343)
!6380 = !DILocation(line: 4605, column: 6, scope: !6343)
!6381 = !DILocation(line: 4606, column: 6, scope: !6343)
!6382 = !DILocation(line: 4604, column: 10, scope: !6343)
!6383 = !DILocation(line: 4612, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 4612, column: 11)
!6385 = !DILocation(line: 4607, column: 8, scope: !6343)
!6386 = distinct !{!6386, !6373, !6385}
!6387 = !DILocation(line: 4612, column: 27, scope: !6384)
!6388 = !DILocation(line: 4612, column: 11, scope: !6343)
!6389 = !DILocation(line: 4613, column: 8, scope: !6384)
!6390 = !DILocation(line: 4613, column: 2, scope: !6384)
!6391 = !DILocation(line: 4615, column: 32, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 4615, column: 16)
!6393 = !DILocation(line: 4615, column: 16, scope: !6384)
!6394 = !DILocation(line: 4616, column: 40, scope: !6392)
!6395 = !DILocation(line: 4617, column: 7, scope: !6392)
!6396 = !DILocation(line: 4616, column: 8, scope: !6392)
!6397 = !DILocation(line: 4616, column: 2, scope: !6392)
!6398 = !DILocation(line: 4623, column: 3, scope: !6333)
!6399 = !DILocation(line: 4613, column: 6, scope: !6384)
!6400 = !DILocation(line: 4623, column: 10, scope: !6333)
!6401 = !DILocation(line: 4624, column: 3, scope: !6333)
!6402 = !DILocation(line: 4625, column: 3, scope: !6333)
!6403 = !DILocation(line: 4627, column: 52, scope: !6346)
!6404 = !DILocation(line: 4627, column: 33, scope: !6346)
!6405 = !DILocation(line: 0, scope: !6346)
!6406 = !DILocation(line: 4628, column: 50, scope: !6346)
!6407 = !DILocation(line: 4628, column: 31, scope: !6346)
!6408 = !DILocation(line: 4633, column: 21, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 4633, column: 11)
!6410 = !DILocation(line: 4634, column: 4, scope: !6409)
!6411 = !DILocation(line: 4634, column: 7, scope: !6409)
!6412 = !DILocation(line: 4634, column: 23, scope: !6409)
!6413 = !DILocation(line: 4635, column: 4, scope: !6409)
!6414 = !DILocation(line: 4635, column: 7, scope: !6409)
!6415 = !DILocation(line: 4635, column: 35, scope: !6409)
!6416 = !DILocation(line: 4633, column: 11, scope: !6346)
!6417 = !DILocation(line: 4639, column: 8, scope: !6409)
!6418 = !DILocation(line: 4640, column: 5, scope: !6333)
!6419 = distinct !{!6419, !6398, !6418}
!6420 = !DILocation(line: 4642, column: 10, scope: !6333)
!6421 = !DILocation(line: 4643, column: 33, scope: !6333)
!6422 = !DILocation(line: 4643, column: 14, scope: !6333)
!6423 = !DILocation(line: 4647, column: 7, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4647, column: 7)
!6425 = !DILocation(line: 4647, column: 23, scope: !6424)
!6426 = !DILocation(line: 4648, column: 7, scope: !6424)
!6427 = !DILocation(line: 4648, column: 10, scope: !6424)
!6428 = !DILocation(line: 4647, column: 7, scope: !6333)
!6429 = !DILocation(line: 4654, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4654, column: 7)
!6431 = !DILocation(line: 4650, column: 7, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 4649, column: 5)
!6433 = !DILocation(line: 4651, column: 7, scope: !6432)
!6434 = !DILocation(line: 4654, column: 23, scope: !6430)
!6435 = !DILocation(line: 4654, column: 7, scope: !6333)
!6436 = !DILocation(line: 4661, column: 7, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 4655, column: 5)
!6438 = !DILocation(line: 4663, column: 7, scope: !6437)
!6439 = !DILocation(line: 4668, column: 3, scope: !6333)
!6440 = !DILocation(line: 4677, column: 31, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 4677, column: 11)
!6442 = !DILocation(line: 4679, column: 10, scope: !6441)
!6443 = !DILocation(line: 4677, column: 13, scope: !6441)
!6444 = !DILocation(line: 4677, column: 11, scope: !6351)
!6445 = !DILocation(line: 4680, column: 2, scope: !6441)
!6446 = !DILocation(line: 4684, column: 27, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 4684, column: 11)
!6448 = !DILocation(line: 4684, column: 11, scope: !6351)
!6449 = !DILocation(line: 4685, column: 2, scope: !6447)
!6450 = !DILocation(line: 4687, column: 17, scope: !6447)
!6451 = !DILocation(line: 4687, column: 38, scope: !6447)
!6452 = !DILocation(line: 4687, column: 2, scope: !6447)
!6453 = !DILocation(line: 4691, column: 24, scope: !6351)
!6454 = !DILocation(line: 4691, column: 54, scope: !6351)
!6455 = !DILocation(line: 4691, column: 7, scope: !6351)
!6456 = !DILocation(line: 4692, column: 24, scope: !6351)
!6457 = !DILocation(line: 4693, column: 42, scope: !6351)
!6458 = !DILocation(line: 4693, column: 28, scope: !6351)
!6459 = !DILocation(line: 4693, column: 10, scope: !6351)
!6460 = !DILocation(line: 4692, column: 7, scope: !6351)
!6461 = !DILocation(line: 4694, column: 7, scope: !6351)
!6462 = !DILocation(line: 4698, column: 15, scope: !6351)
!6463 = !DILocation(line: 4698, column: 7, scope: !6351)
!6464 = !DILocation(line: 4701, column: 6, scope: !6350)
!6465 = !DILocation(line: 4702, column: 4, scope: !6350)
!6466 = !DILocation(line: 4704, column: 15, scope: !6350)
!6467 = !DILocation(line: 4706, column: 21, scope: !6350)
!6468 = !DILocation(line: 4706, column: 48, scope: !6350)
!6469 = !DILocation(line: 4706, column: 4, scope: !6350)
!6470 = !DILocation(line: 4707, column: 4, scope: !6350)
!6471 = !DILocation(line: 4716, column: 14, scope: !6349)
!6472 = !DILocation(line: 0, scope: !6349)
!6473 = !DILocation(line: 4717, column: 15, scope: !6349)
!6474 = !DILocation(line: 4719, column: 17, scope: !6349)
!6475 = !DILocation(line: 4721, column: 13, scope: !6349)
!6476 = !DILocation(line: 4722, column: 23, scope: !6349)
!6477 = !DILocation(line: 4722, column: 42, scope: !6349)
!6478 = !DILocation(line: 4722, column: 6, scope: !6349)
!6479 = !DILocation(line: 4724, column: 6, scope: !6349)
!6480 = !DILocation(line: 4724, column: 21, scope: !6349)
!6481 = !DILocation(line: 4724, column: 40, scope: !6349)
!6482 = !DILocation(line: 4726, column: 20, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 4725, column: 8)
!6484 = !DILocation(line: 4726, column: 3, scope: !6483)
!6485 = !DILocation(line: 4727, column: 12, scope: !6483)
!6486 = distinct !{!6486, !6479, !6487}
!6487 = !DILocation(line: 4728, column: 8, scope: !6349)
!6488 = !DILocation(line: 4732, column: 4, scope: !6350)
!6489 = !DILocation(line: 4733, column: 2, scope: !6350)
!6490 = !DILocation(line: 4738, column: 7, scope: !6351)
!6491 = !DILocation(line: 4739, column: 7, scope: !6351)
!6492 = !DILocation(line: 4740, column: 7, scope: !6351)
!6493 = !DILocation(line: 4746, column: 7, scope: !6351)
!6494 = !DILocation(line: 4747, column: 5, scope: !6351)
!6495 = !DILocation(line: 4749, column: 12, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 4749, column: 7)
!6497 = !DILocation(line: 4643, column: 12, scope: !6333)
!6498 = !DILocation(line: 4749, column: 7, scope: !6333)
!6499 = !DILocation(line: 4750, column: 26, scope: !6496)
!6500 = !DILocation(line: 4750, column: 5, scope: !6496)
!6501 = !DILocation(line: 4751, column: 1, scope: !6333)
!6502 = distinct !DISubprogram(name: "expand_expr", scope: !611, file: !611, line: 555, type: !6503, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!811, !639, !811, !5, !610}
!6505 = !{!6506, !6507, !6508, !6509}
!6506 = !DILocalVariable(name: "exp", arg: 1, scope: !6502, file: !611, line: 555, type: !639)
!6507 = !DILocalVariable(name: "target", arg: 2, scope: !6502, file: !611, line: 555, type: !811)
!6508 = !DILocalVariable(name: "mode", arg: 3, scope: !6502, file: !611, line: 555, type: !5)
!6509 = !DILocalVariable(name: "modifier", arg: 4, scope: !6502, file: !611, line: 556, type: !610)
!6510 = !DILocation(line: 0, scope: !6502)
!6511 = !DILocation(line: 558, column: 10, scope: !6502)
!6512 = !DILocation(line: 558, column: 3, scope: !6502)
!6513 = distinct !DISubprogram(name: "output_constructor", scope: !3, file: !3, line: 5139, type: !6514, scopeLine: 5141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6522)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!692, !639, !692, !7, !6516}
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DIDerivedType(tag: DW_TAG_typedef, name: "oc_outer_state", file: !3, line: 4553, baseType: !6518)
!6518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4550, size: 64, elements: !6519)
!6519 = !{!6520, !6521}
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !6518, file: !3, line: 4551, baseType: !7, size: 32)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !6518, file: !3, line: 4552, baseType: !623, size: 32, offset: 32)
!6522 = !{!6523, !6524, !6525, !6526, !6527, !6528, !6529}
!6523 = !DILocalVariable(name: "exp", arg: 1, scope: !6513, file: !3, line: 5139, type: !639)
!6524 = !DILocalVariable(name: "size", arg: 2, scope: !6513, file: !3, line: 5139, type: !692)
!6525 = !DILocalVariable(name: "align", arg: 3, scope: !6513, file: !3, line: 5140, type: !7)
!6526 = !DILocalVariable(name: "outer", arg: 4, scope: !6513, file: !3, line: 5140, type: !6516)
!6527 = !DILocalVariable(name: "cnt", scope: !6513, file: !3, line: 5142, type: !692)
!6528 = !DILocalVariable(name: "ce", scope: !6513, file: !3, line: 5143, type: !4226)
!6529 = !DILocalVariable(name: "local", scope: !6513, file: !3, line: 5145, type: !6530)
!6530 = !DIDerivedType(tag: DW_TAG_typedef, name: "oc_local_state", file: !3, line: 4823, baseType: !6531)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 4799, size: 704, elements: !6532)
!6532 = !{!6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !6531, file: !3, line: 4802, baseType: !639, size: 64)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6531, file: !3, line: 4803, baseType: !692, size: 64, offset: 64)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6531, file: !3, line: 4804, baseType: !7, size: 32, offset: 128)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6531, file: !3, line: 4807, baseType: !639, size: 64, offset: 192)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !6531, file: !3, line: 4808, baseType: !639, size: 64, offset: 256)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "min_index", scope: !6531, file: !3, line: 4809, baseType: !639, size: 64, offset: 320)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !6531, file: !3, line: 4812, baseType: !694, size: 64, offset: 384)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_in_use", scope: !6531, file: !3, line: 4813, baseType: !622, size: 8, offset: 448)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !6531, file: !3, line: 4814, baseType: !623, size: 32, offset: 480)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "last_relative_index", scope: !6531, file: !3, line: 4817, baseType: !623, size: 32, offset: 512)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6531, file: !3, line: 4820, baseType: !639, size: 64, offset: 576)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6531, file: !3, line: 4821, baseType: !639, size: 64, offset: 640)
!6545 = !DILocation(line: 0, scope: !6513)
!6546 = !DILocation(line: 5143, column: 3, scope: !6513)
!6547 = !DILocation(line: 5145, column: 3, scope: !6513)
!6548 = !DILocation(line: 5148, column: 9, scope: !6513)
!6549 = !DILocation(line: 5148, column: 13, scope: !6513)
!6550 = !DILocation(line: 5149, column: 9, scope: !6513)
!6551 = !DILocation(line: 5149, column: 14, scope: !6513)
!6552 = !DILocation(line: 5150, column: 9, scope: !6513)
!6553 = !DILocation(line: 5150, column: 15, scope: !6513)
!6554 = !DILocation(line: 5152, column: 9, scope: !6513)
!6555 = !DILocation(line: 5152, column: 21, scope: !6513)
!6556 = !DILocation(line: 5153, column: 36, scope: !6513)
!6557 = !DILocation(line: 5153, column: 30, scope: !6513)
!6558 = !DILocation(line: 5153, column: 9, scope: !6513)
!6559 = !DILocation(line: 5153, column: 28, scope: !6513)
!6560 = !DILocation(line: 5154, column: 16, scope: !6513)
!6561 = !DILocation(line: 5154, column: 31, scope: !6513)
!6562 = !DILocation(line: 5154, column: 9, scope: !6513)
!6563 = !DILocation(line: 5154, column: 14, scope: !6513)
!6564 = !DILocation(line: 5156, column: 16, scope: !6513)
!6565 = !DILocation(line: 5156, column: 9, scope: !6513)
!6566 = !DILocation(line: 5156, column: 14, scope: !6513)
!6567 = !DILocation(line: 5158, column: 9, scope: !6513)
!6568 = !DILocation(line: 5158, column: 29, scope: !6513)
!6569 = !DILocation(line: 5160, column: 9, scope: !6513)
!6570 = !DILocation(line: 5160, column: 19, scope: !6513)
!6571 = !DILocation(line: 5161, column: 7, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 5161, column: 7)
!6573 = !DILocation(line: 5161, column: 30, scope: !6572)
!6574 = !DILocation(line: 5162, column: 7, scope: !6572)
!6575 = !DILocation(line: 5162, column: 10, scope: !6572)
!6576 = !DILocation(line: 5162, column: 35, scope: !6572)
!6577 = !DILocation(line: 5161, column: 7, scope: !6513)
!6578 = !DILocation(line: 5163, column: 23, scope: !6572)
!6579 = !DILocation(line: 5163, column: 21, scope: !6572)
!6580 = !DILocation(line: 5163, column: 5, scope: !6572)
!6581 = !DILocation(line: 5176, column: 9, scope: !6513)
!6582 = !DILocation(line: 5176, column: 15, scope: !6513)
!6583 = !DILocation(line: 5177, column: 7, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 5177, column: 7)
!6585 = !DILocation(line: 5177, column: 30, scope: !6584)
!6586 = !DILocation(line: 5177, column: 7, scope: !6513)
!6587 = !DILocation(line: 0, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 5189, column: 11)
!6589 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 5183, column: 5)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 5180, column: 3)
!6591 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 5180, column: 3)
!6592 = !DILocation(line: 5178, column: 19, scope: !6584)
!6593 = !DILocation(line: 5178, column: 17, scope: !6584)
!6594 = !DILocation(line: 5178, column: 5, scope: !6584)
!6595 = !DILocation(line: 0, scope: !6590)
!6596 = !DILocation(line: 0, scope: !6589)
!6597 = !DILocation(line: 0, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 5195, column: 16)
!6599 = !DILocation(line: 5180, column: 8, scope: !6591)
!6600 = !DILocation(line: 0, scope: !6591)
!6601 = !DILocation(line: 5181, column: 8, scope: !6590)
!6602 = !DILocation(line: 5180, column: 3, scope: !6591)
!6603 = !DILocation(line: 5184, column: 19, scope: !6589)
!6604 = !DILocation(line: 5184, column: 23, scope: !6589)
!6605 = !DILocation(line: 5184, column: 17, scope: !6589)
!6606 = !DILocation(line: 5185, column: 19, scope: !6589)
!6607 = !DILocation(line: 5189, column: 12, scope: !6588)
!6608 = !DILocation(line: 5189, column: 35, scope: !6588)
!6609 = !DILocation(line: 5190, column: 5, scope: !6588)
!6610 = !DILocation(line: 5190, column: 31, scope: !6588)
!6611 = !DILocation(line: 5191, column: 5, scope: !6588)
!6612 = !DILocation(line: 5191, column: 31, scope: !6588)
!6613 = !DILocation(line: 5192, column: 4, scope: !6588)
!6614 = !DILocation(line: 5192, column: 11, scope: !6588)
!6615 = !DILocation(line: 5192, column: 17, scope: !6588)
!6616 = !DILocation(line: 5189, column: 11, scope: !6589)
!6617 = !DILocation(line: 5193, column: 14, scope: !6588)
!6618 = !DILocation(line: 5193, column: 2, scope: !6588)
!6619 = !DILocation(line: 5195, column: 39, scope: !6598)
!6620 = !DILocation(line: 5195, column: 16, scope: !6588)
!6621 = !DILocation(line: 5196, column: 20, scope: !6598)
!6622 = !DILocation(line: 5196, column: 14, scope: !6598)
!6623 = !DILocation(line: 5196, column: 2, scope: !6598)
!6624 = !DILocation(line: 5199, column: 17, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 5199, column: 11)
!6626 = !DILocation(line: 5199, column: 11, scope: !6625)
!6627 = !DILocation(line: 5199, column: 26, scope: !6625)
!6628 = !DILocation(line: 5199, column: 23, scope: !6625)
!6629 = !DILocation(line: 5200, column: 11, scope: !6625)
!6630 = !DILocation(line: 5202, column: 4, scope: !6625)
!6631 = !DILocation(line: 5203, column: 6, scope: !6625)
!6632 = !DILocation(line: 5200, column: 2, scope: !6625)
!6633 = !DILocation(line: 5208, column: 17, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 5208, column: 11)
!6635 = !DILocation(line: 5208, column: 21, scope: !6634)
!6636 = !DILocation(line: 5208, column: 11, scope: !6589)
!6637 = !DILocation(line: 5209, column: 2, scope: !6634)
!6638 = !DILocation(line: 5215, column: 4, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 5214, column: 11)
!6640 = !DILocation(line: 5215, column: 13, scope: !6639)
!6641 = !DILocation(line: 5215, column: 19, scope: !6639)
!6642 = !DILocation(line: 5216, column: 4, scope: !6639)
!6643 = !DILocation(line: 5216, column: 7, scope: !6639)
!6644 = !DILocation(line: 5216, column: 31, scope: !6639)
!6645 = !DILocation(line: 5214, column: 11, scope: !6589)
!6646 = !DILocation(line: 5217, column: 2, scope: !6639)
!6647 = !DILocation(line: 5222, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 5221, column: 16)
!6649 = !DILocation(line: 5222, column: 19, scope: !6648)
!6650 = !DILocation(line: 5222, column: 25, scope: !6648)
!6651 = !DILocation(line: 5223, column: 6, scope: !6648)
!6652 = !DILocation(line: 5223, column: 10, scope: !6648)
!6653 = !DILocation(line: 5221, column: 16, scope: !6639)
!6654 = !DILocation(line: 5224, column: 2, scope: !6648)
!6655 = !DILocation(line: 5228, column: 2, scope: !6648)
!6656 = !DILocation(line: 5182, column: 11, scope: !6590)
!6657 = !DILocation(line: 5182, column: 35, scope: !6590)
!6658 = !DILocation(line: 5182, column: 29, scope: !6590)
!6659 = !DILocation(line: 5182, column: 43, scope: !6590)
!6660 = !DILocation(line: 5182, column: 27, scope: !6590)
!6661 = !DILocation(line: 5180, column: 3, scope: !6590)
!6662 = distinct !{!6662, !6602, !6663}
!6663 = !DILocation(line: 5229, column: 5, scope: !6591)
!6664 = !DILocation(line: 5233, column: 7, scope: !6513)
!6665 = !DILocation(line: 5234, column: 25, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 5233, column: 7)
!6667 = !DILocation(line: 5234, column: 12, scope: !6666)
!6668 = !DILocation(line: 5234, column: 17, scope: !6666)
!6669 = !DILocation(line: 5250, column: 16, scope: !6513)
!6670 = !DILocation(line: 5234, column: 5, scope: !6666)
!6671 = !DILocation(line: 5237, column: 17, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 5237, column: 11)
!6673 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 5236, column: 5)
!6674 = !DILocation(line: 5237, column: 11, scope: !6672)
!6675 = !DILocation(line: 5237, column: 11, scope: !6673)
!6676 = !DILocation(line: 5243, column: 41, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 5243, column: 11)
!6678 = !DILocation(line: 5239, column: 22, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 5238, column: 2)
!6680 = !DILocation(line: 5239, column: 4, scope: !6679)
!6681 = !DILocation(line: 5240, column: 21, scope: !6679)
!6682 = !DILocation(line: 5241, column: 2, scope: !6679)
!6683 = !DILocation(line: 5243, column: 61, scope: !6677)
!6684 = !DILocation(line: 5243, column: 53, scope: !6677)
!6685 = !DILocation(line: 5243, column: 11, scope: !6673)
!6686 = !DILocation(line: 5245, column: 31, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 5244, column: 2)
!6688 = !DILocation(line: 5245, column: 4, scope: !6687)
!6689 = !DILocation(line: 5246, column: 30, scope: !6687)
!6690 = !DILocation(line: 5246, column: 22, scope: !6687)
!6691 = !DILocation(line: 5247, column: 2, scope: !6687)
!6692 = !DILocation(line: 5251, column: 1, scope: !6513)
!6693 = !DILocation(line: 5250, column: 3, scope: !6513)
!6694 = distinct !DISubprogram(name: "merge_weak", scope: !3, file: !3, line: 5270, type: !2651, scopeLine: 5271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6695)
!6695 = !{!6696, !6697, !6698, !6703}
!6696 = !DILocalVariable(name: "newdecl", arg: 1, scope: !6694, file: !3, line: 5270, type: !639)
!6697 = !DILocalVariable(name: "olddecl", arg: 2, scope: !6694, file: !3, line: 5270, type: !639)
!6698 = !DILocalVariable(name: "pwd", scope: !6699, file: !3, line: 5276, type: !1434)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 5275, column: 9)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 5274, column: 11)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 5273, column: 5)
!6702 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 5272, column: 7)
!6703 = !DILocalVariable(name: "wd", scope: !6704, file: !3, line: 5291, type: !639)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 5290, column: 5)
!6705 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 5289, column: 7)
!6706 = !DILocation(line: 0, scope: !6694)
!6707 = !DILocation(line: 5272, column: 7, scope: !6702)
!6708 = !DILocation(line: 5272, column: 30, scope: !6702)
!6709 = !DILocation(line: 5272, column: 27, scope: !6702)
!6710 = !DILocation(line: 5272, column: 7, scope: !6694)
!6711 = !DILocation(line: 5274, column: 11, scope: !6701)
!6712 = !DILocation(line: 5279, column: 4, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 5279, column: 4)
!6714 = !DILocation(line: 0, scope: !6713)
!6715 = !DILocation(line: 0, scope: !6699)
!6716 = !DILocation(line: 5279, column: 28, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 5279, column: 4)
!6718 = !DILocation(line: 5280, column: 10, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 5280, column: 10)
!6720 = !DILocation(line: 5280, column: 28, scope: !6719)
!6721 = !DILocation(line: 0, scope: !6717)
!6722 = !DILocation(line: 5280, column: 10, scope: !6717)
!6723 = distinct !{!6723, !6712, !6724}
!6724 = !DILocation(line: 5284, column: 8, scope: !6713)
!6725 = !DILocation(line: 5282, column: 17, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 5281, column: 8)
!6727 = !DILocation(line: 5282, column: 15, scope: !6726)
!6728 = !DILocation(line: 5283, column: 3, scope: !6726)
!6729 = !DILocation(line: 5289, column: 7, scope: !6694)
!6730 = !DILocation(line: 5299, column: 11, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 5299, column: 11)
!6732 = !DILocation(line: 5299, column: 11, scope: !6704)
!6733 = !DILocation(line: 5300, column: 2, scope: !6731)
!6734 = !DILocation(line: 5306, column: 16, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 5306, column: 16)
!6736 = !DILocation(line: 5307, column: 9, scope: !6735)
!6737 = !DILocation(line: 5307, column: 12, scope: !6735)
!6738 = !DILocation(line: 5306, column: 16, scope: !6731)
!6739 = !DILocation(line: 5308, column: 2, scope: !6735)
!6740 = !DILocation(line: 5315, column: 9, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 5315, column: 4)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 5312, column: 2)
!6743 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 5311, column: 11)
!6744 = !DILocation(line: 0, scope: !6741)
!6745 = !DILocation(line: 0, scope: !6704)
!6746 = !DILocation(line: 5315, column: 4, scope: !6741)
!6747 = !DILocation(line: 5316, column: 10, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 5316, column: 10)
!6749 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 5315, column: 4)
!6750 = !DILocation(line: 5316, column: 26, scope: !6748)
!6751 = !DILocation(line: 5316, column: 10, scope: !6749)
!6752 = !DILocation(line: 5318, column: 19, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 5317, column: 8)
!6754 = !DILocation(line: 5319, column: 3, scope: !6753)
!6755 = !DILocation(line: 5315, column: 35, scope: !6749)
!6756 = !DILocation(line: 5315, column: 4, scope: !6749)
!6757 = distinct !{!6757, !6746, !6758}
!6758 = !DILocation(line: 5320, column: 8, scope: !6741)
!6759 = !DILocation(line: 5328, column: 7, scope: !6704)
!6760 = !DILocation(line: 5329, column: 5, scope: !6704)
!6761 = !DILocation(line: 5333, column: 5, scope: !6705)
!6762 = !DILocation(line: 5334, column: 1, scope: !6694)
!6763 = distinct !DISubprogram(name: "mark_weak", scope: !3, file: !3, line: 5256, type: !3196, scopeLine: 5257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6764)
!6764 = !{!6765}
!6765 = !DILocalVariable(name: "decl", arg: 1, scope: !6763, file: !3, line: 5256, type: !639)
!6766 = !DILocation(line: 0, scope: !6763)
!6767 = !DILocation(line: 5258, column: 3, scope: !6763)
!6768 = !DILocation(line: 5258, column: 20, scope: !6763)
!6769 = !DILocation(line: 5260, column: 7, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 5260, column: 7)
!6771 = !DILocation(line: 5261, column: 7, scope: !6770)
!6772 = !DILocation(line: 5261, column: 10, scope: !6770)
!6773 = !DILocation(line: 5262, column: 7, scope: !6770)
!6774 = !DILocation(line: 5262, column: 10, scope: !6770)
!6775 = !DILocation(line: 0, scope: !6770)
!6776 = !DILocation(line: 5263, column: 7, scope: !6770)
!6777 = !DILocation(line: 5263, column: 10, scope: !6770)
!6778 = !DILocation(line: 5263, column: 47, scope: !6770)
!6779 = !DILocation(line: 5260, column: 7, scope: !6763)
!6780 = !DILocation(line: 5264, column: 5, scope: !6770)
!6781 = !DILocation(line: 5264, column: 49, scope: !6770)
!6782 = !DILocation(line: 5265, column: 1, scope: !6763)
!6783 = distinct !DISubprogram(name: "declare_weak", scope: !3, file: !3, line: 5339, type: !3196, scopeLine: 5340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6784)
!6784 = !{!6785}
!6785 = !DILocalVariable(name: "decl", arg: 1, scope: !6783, file: !3, line: 5339, type: !639)
!6786 = !DILocation(line: 0, scope: !6783)
!6787 = !DILocation(line: 5341, column: 9, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 5341, column: 7)
!6789 = !DILocation(line: 5341, column: 7, scope: !6783)
!6790 = !DILocation(line: 5342, column: 5, scope: !6788)
!6791 = !DILocation(line: 5343, column: 29, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 5343, column: 12)
!6793 = !DILocation(line: 5343, column: 46, scope: !6792)
!6794 = !DILocation(line: 5343, column: 49, scope: !6792)
!6795 = !DILocation(line: 5343, column: 12, scope: !6788)
!6796 = !DILocation(line: 5344, column: 5, scope: !6792)
!6797 = !DILocation(line: 5348, column: 3, scope: !6783)
!6798 = !DILocation(line: 5349, column: 34, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 5349, column: 7)
!6800 = !DILocation(line: 5349, column: 8, scope: !6799)
!6801 = !DILocation(line: 5349, column: 7, scope: !6783)
!6802 = !DILocation(line: 5351, column: 9, scope: !6799)
!6803 = !DILocation(line: 5351, column: 7, scope: !6799)
!6804 = !DILocation(line: 5350, column: 5, scope: !6799)
!6805 = !DILocation(line: 5352, column: 1, scope: !6783)
!6806 = distinct !DISubprogram(name: "weak_finish", scope: !3, file: !3, line: 5395, type: !2666, scopeLine: 5396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6807)
!6807 = !{!6808, !6809, !6813, !6814, !6816, !6817}
!6808 = !DILocalVariable(name: "t", scope: !6806, file: !3, line: 5397, type: !639)
!6809 = !DILocalVariable(name: "alias_decl", scope: !6810, file: !3, line: 5401, type: !639)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 5400, column: 5)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 5399, column: 3)
!6812 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 5399, column: 3)
!6813 = !DILocalVariable(name: "target", scope: !6810, file: !3, line: 5402, type: !639)
!6814 = !DILocalVariable(name: "p", scope: !6815, file: !3, line: 5438, type: !1434)
!6815 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 5437, column: 7)
!6816 = !DILocalVariable(name: "t2", scope: !6815, file: !3, line: 5439, type: !639)
!6817 = !DILocalVariable(name: "decl", scope: !6818, file: !3, line: 5466, type: !639)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 5465, column: 5)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 5464, column: 3)
!6820 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 5464, column: 3)
!6821 = !DILocation(line: 5399, column: 8, scope: !6812)
!6822 = !DILocation(line: 0, scope: !6812)
!6823 = !DILocation(line: 0, scope: !6806)
!6824 = !DILocation(line: 5399, column: 3, scope: !6812)
!6825 = !DILocation(line: 5401, column: 25, scope: !6810)
!6826 = !DILocation(line: 0, scope: !6810)
!6827 = !DILocation(line: 5402, column: 57, scope: !6810)
!6828 = !DILocation(line: 5402, column: 21, scope: !6810)
!6829 = !DILocation(line: 5404, column: 13, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 5404, column: 11)
!6831 = !DILocation(line: 5404, column: 11, scope: !6810)
!6832 = !DILocation(line: 0, scope: !6815)
!6833 = !DILocation(line: 5444, column: 7, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 5444, column: 2)
!6835 = !DILocation(line: 5444, column: 9, scope: !6834)
!6836 = !DILocation(line: 5444, column: 30, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 5444, column: 2)
!6838 = !DILocation(line: 5444, column: 2, scope: !6834)
!6839 = !DILocation(line: 5446, column: 10, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 5446, column: 10)
!6841 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 5445, column: 4)
!6842 = !DILocation(line: 5446, column: 26, scope: !6840)
!6843 = !DILocation(line: 5447, column: 3, scope: !6840)
!6844 = !DILocation(line: 5447, column: 16, scope: !6840)
!6845 = !DILocation(line: 5447, column: 13, scope: !6840)
!6846 = !DILocation(line: 5446, column: 10, scope: !6841)
!6847 = !DILocation(line: 5448, column: 13, scope: !6840)
!6848 = !DILocation(line: 5448, column: 11, scope: !6840)
!6849 = !DILocation(line: 5448, column: 8, scope: !6840)
!6850 = !DILocation(line: 5450, column: 13, scope: !6840)
!6851 = !DILocation(line: 0, scope: !6834)
!6852 = !DILocation(line: 5444, column: 2, scope: !6837)
!6853 = distinct !{!6853, !6838, !6854}
!6854 = !DILocation(line: 5451, column: 4, scope: !6834)
!6855 = !DILocation(line: 5454, column: 12, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 5454, column: 2)
!6857 = !DILocation(line: 5454, column: 7, scope: !6856)
!6858 = !DILocation(line: 5454, column: 9, scope: !6856)
!6859 = !DILocation(line: 5454, column: 34, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 5454, column: 2)
!6861 = !DILocation(line: 5454, column: 2, scope: !6856)
!6862 = !DILocation(line: 5456, column: 56, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 5456, column: 10)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 5455, column: 4)
!6865 = !DILocation(line: 5456, column: 20, scope: !6863)
!6866 = !DILocation(line: 5456, column: 17, scope: !6863)
!6867 = !DILocation(line: 0, scope: !6863)
!6868 = !DILocation(line: 5456, column: 10, scope: !6864)
!6869 = !DILocation(line: 5457, column: 13, scope: !6863)
!6870 = !DILocation(line: 5457, column: 11, scope: !6863)
!6871 = !DILocation(line: 5457, column: 8, scope: !6863)
!6872 = !DILocation(line: 0, scope: !6856)
!6873 = !DILocation(line: 5454, column: 2, scope: !6860)
!6874 = distinct !{!6874, !6861, !6875}
!6875 = !DILocation(line: 5460, column: 4, scope: !6856)
!6876 = !DILocation(line: 5399, column: 3, scope: !6811)
!6877 = distinct !{!6877, !6824, !6878}
!6878 = !DILocation(line: 5462, column: 5, scope: !6812)
!6879 = !DILocation(line: 5464, column: 8, scope: !6820)
!6880 = !DILocation(line: 0, scope: !6820)
!6881 = !DILocation(line: 5464, column: 3, scope: !6820)
!6882 = !DILocation(line: 5466, column: 19, scope: !6818)
!6883 = !DILocation(line: 0, scope: !6818)
!6884 = !DILocation(line: 5468, column: 7, scope: !6818)
!6885 = !DILocation(line: 5464, column: 31, scope: !6819)
!6886 = !DILocation(line: 5464, column: 3, scope: !6819)
!6887 = distinct !{!6887, !6881, !6888}
!6888 = !DILocation(line: 5469, column: 5, scope: !6820)
!6889 = !DILocation(line: 5470, column: 1, scope: !6806)
!6890 = distinct !DISubprogram(name: "weak_finish_1", scope: !3, file: !3, line: 5355, type: !3196, scopeLine: 5356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6891)
!6891 = !{!6892, !6893}
!6892 = !DILocalVariable(name: "decl", arg: 1, scope: !6890, file: !3, line: 5355, type: !639)
!6893 = !DILocalVariable(name: "name", scope: !6890, file: !3, line: 5358, type: !1783)
!6894 = !DILocation(line: 0, scope: !6890)
!6895 = !DILocation(line: 5358, column: 28, scope: !6890)
!6896 = !DILocation(line: 5361, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 5361, column: 7)
!6898 = !DILocation(line: 5361, column: 7, scope: !6890)
!6899 = !DILocation(line: 5368, column: 3, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 5368, column: 3)
!6901 = !DILocation(line: 5383, column: 1, scope: !6890)
!6902 = distinct !DISubprogram(name: "remove_unreachable_alias_pairs", scope: !3, file: !3, line: 5665, type: !2666, scopeLine: 5666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6903)
!6903 = !{!6904, !6905, !6907, !6913}
!6904 = !DILocalVariable(name: "i", scope: !6902, file: !3, line: 5667, type: !7)
!6905 = !DILocalVariable(name: "p", scope: !6902, file: !3, line: 5668, type: !6906)
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!6907 = !DILocalVariable(name: "fnode", scope: !6908, file: !3, line: 5677, type: !4898)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 5676, column: 2)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 5675, column: 11)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 5674, column: 5)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 5673, column: 3)
!6912 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 5673, column: 3)
!6913 = !DILocalVariable(name: "vnode", scope: !6908, file: !3, line: 5678, type: !5044)
!6914 = !DILocation(line: 5668, column: 3, scope: !6902)
!6915 = !DILocation(line: 5670, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 5670, column: 7)
!6917 = !DILocation(line: 5670, column: 19, scope: !6916)
!6918 = !DILocation(line: 5670, column: 7, scope: !6902)
!6919 = !DILocation(line: 0, scope: !6909)
!6920 = !DILocation(line: 5673, column: 3, scope: !6912)
!6921 = !DILocation(line: 0, scope: !6902)
!6922 = !DILocation(line: 5673, column: 15, scope: !6911)
!6923 = !DILocation(line: 5675, column: 12, scope: !6909)
!6924 = !DILocation(line: 5675, column: 11, scope: !6910)
!6925 = !DILocation(line: 0, scope: !6908)
!6926 = !DILocation(line: 5679, column: 36, scope: !6908)
!6927 = !DILocation(line: 5679, column: 12, scope: !6908)
!6928 = !DILocation(line: 5680, column: 19, scope: !6908)
!6929 = !DILocation(line: 5680, column: 12, scope: !6908)
!6930 = !DILocation(line: 5680, column: 52, scope: !6908)
!6931 = !DILocation(line: 5680, column: 55, scope: !6908)
!6932 = !DILocation(line: 5680, column: 30, scope: !6908)
!6933 = !DILocation(line: 5681, column: 31, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 5681, column: 8)
!6935 = !DILocation(line: 5681, column: 22, scope: !6934)
!6936 = !DILocation(line: 5683, column: 8, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 5682, column: 6)
!6938 = !DILocation(line: 5684, column: 8, scope: !6937)
!6939 = distinct !{!6939, !6920, !6940}
!6940 = !DILocation(line: 5689, column: 5, scope: !6912)
!6941 = !DILocation(line: 5688, column: 8, scope: !6910)
!6942 = !DILocation(line: 5673, column: 3, scope: !6911)
!6943 = !DILocation(line: 5690, column: 1, scope: !6902)
!6944 = distinct !DISubprogram(name: "VEC_alias_pair_base_iterate", scope: !151, file: !151, line: 197, type: !6945, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6949)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!623, !6947, !7, !6948}
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6906, size: 64)
!6949 = !{!6950, !6951, !6952}
!6950 = !DILocalVariable(name: "vec_", arg: 1, scope: !6944, file: !151, line: 197, type: !6947)
!6951 = !DILocalVariable(name: "ix_", arg: 2, scope: !6944, file: !151, line: 197, type: !7)
!6952 = !DILocalVariable(name: "ptr", arg: 3, scope: !6944, file: !151, line: 197, type: !6948)
!6953 = !DILocation(line: 0, scope: !6944)
!6954 = !DILocation(line: 197, column: 1, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6944, file: !151, line: 197, column: 1)
!6956 = !DILocation(line: 197, column: 1, scope: !6944)
!6957 = !DILocation(line: 197, column: 1, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6955, file: !151, line: 197, column: 1)
!6959 = !DILocation(line: 197, column: 1, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6955, file: !151, line: 197, column: 1)
!6961 = !DILocation(line: 0, scope: !6955)
!6962 = distinct !DISubprogram(name: "VEC_alias_pair_base_unordered_remove", scope: !151, file: !151, line: 197, type: !6963, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6965)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{null, !6947, !7}
!6965 = !{!6966, !6967}
!6966 = !DILocalVariable(name: "vec_", arg: 1, scope: !6962, file: !151, line: 197, type: !6947)
!6967 = !DILocalVariable(name: "ix_", arg: 2, scope: !6962, file: !151, line: 197, type: !7)
!6968 = !DILocation(line: 0, scope: !6962)
!6969 = !DILocation(line: 197, column: 1, scope: !6962)
!6970 = distinct !DISubprogram(name: "finish_aliases_1", scope: !3, file: !3, line: 5697, type: !2666, scopeLine: 5698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6971)
!6971 = !{!6972, !6973, !6974}
!6972 = !DILocalVariable(name: "i", scope: !6970, file: !3, line: 5699, type: !7)
!6973 = !DILocalVariable(name: "p", scope: !6970, file: !3, line: 5700, type: !6906)
!6974 = !DILocalVariable(name: "target_decl", scope: !6975, file: !3, line: 5704, type: !639)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 5703, column: 5)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 5702, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 5702, column: 3)
!6978 = !DILocation(line: 5700, column: 3, scope: !6970)
!6979 = !DILocation(line: 0, scope: !6970)
!6980 = !DILocation(line: 0, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 5713, column: 16)
!6982 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 5707, column: 11)
!6983 = !DILocation(line: 5702, column: 8, scope: !6977)
!6984 = !DILocation(line: 0, scope: !6977)
!6985 = !DILocation(line: 5702, column: 15, scope: !6976)
!6986 = !DILocation(line: 5702, column: 3, scope: !6977)
!6987 = !DILocation(line: 5706, column: 48, scope: !6975)
!6988 = !DILocation(line: 5706, column: 51, scope: !6975)
!6989 = !DILocation(line: 5706, column: 60, scope: !6975)
!6990 = !DILocation(line: 5706, column: 21, scope: !6975)
!6991 = !DILocation(line: 0, scope: !6975)
!6992 = !DILocation(line: 5707, column: 23, scope: !6982)
!6993 = !DILocation(line: 5707, column: 11, scope: !6975)
!6994 = !DILocation(line: 5709, column: 39, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 5709, column: 8)
!6996 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 5708, column: 2)
!6997 = !DILocation(line: 5709, column: 10, scope: !6995)
!6998 = !DILocation(line: 5709, column: 8, scope: !6996)
!6999 = !DILocation(line: 5711, column: 6, scope: !6995)
!7000 = !DILocation(line: 5711, column: 9, scope: !6995)
!7001 = !DILocation(line: 5711, column: 18, scope: !6995)
!7002 = !DILocation(line: 5710, column: 6, scope: !6995)
!7003 = !DILocation(line: 5713, column: 16, scope: !6981)
!7004 = !DILocation(line: 5718, column: 10, scope: !6981)
!7005 = !DILocation(line: 5718, column: 14, scope: !6981)
!7006 = !DILocation(line: 5718, column: 38, scope: !6981)
!7007 = !DILocation(line: 5722, column: 7, scope: !6981)
!7008 = !DILocation(line: 5722, column: 12, scope: !6981)
!7009 = !DILocation(line: 5723, column: 9, scope: !6981)
!7010 = !DILocation(line: 5723, column: 43, scope: !6981)
!7011 = !DILocation(line: 5723, column: 14, scope: !6981)
!7012 = !DILocation(line: 5713, column: 16, scope: !6982)
!7013 = !DILocation(line: 5725, column: 9, scope: !6981)
!7014 = !DILocation(line: 5725, column: 12, scope: !6981)
!7015 = !DILocation(line: 5725, column: 21, scope: !6981)
!7016 = !DILocation(line: 5724, column: 2, scope: !6981)
!7017 = !DILocation(line: 5702, column: 61, scope: !6976)
!7018 = !DILocation(line: 5702, column: 3, scope: !6976)
!7019 = distinct !{!7019, !6986, !7020}
!7020 = !DILocation(line: 5726, column: 5, scope: !6977)
!7021 = !DILocation(line: 5727, column: 1, scope: !6970)
!7022 = distinct !DISubprogram(name: "find_decl_and_mark_needed", scope: !3, file: !3, line: 5524, type: !5957, scopeLine: 5525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7023)
!7023 = !{!7024, !7025, !7026, !7027}
!7024 = !DILocalVariable(name: "decl", arg: 1, scope: !7022, file: !3, line: 5524, type: !639)
!7025 = !DILocalVariable(name: "target", arg: 2, scope: !7022, file: !3, line: 5524, type: !639)
!7026 = !DILocalVariable(name: "fnode", scope: !7022, file: !3, line: 5526, type: !4898)
!7027 = !DILocalVariable(name: "vnode", scope: !7022, file: !3, line: 5527, type: !5044)
!7028 = !DILocation(line: 0, scope: !7022)
!7029 = !DILocation(line: 5529, column: 7, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 5529, column: 7)
!7031 = !DILocation(line: 5529, column: 24, scope: !7030)
!7032 = !DILocation(line: 5529, column: 7, scope: !7022)
!7033 = !DILocation(line: 5531, column: 15, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 5530, column: 5)
!7035 = !DILocation(line: 5532, column: 17, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 5532, column: 11)
!7037 = !DILocation(line: 5532, column: 11, scope: !7034)
!7038 = !DILocation(line: 5533, column: 10, scope: !7036)
!7039 = !DILocation(line: 5533, column: 2, scope: !7036)
!7040 = !DILocation(line: 5537, column: 15, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 5536, column: 5)
!7042 = !DILocation(line: 5538, column: 17, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 5538, column: 11)
!7044 = !DILocation(line: 5538, column: 11, scope: !7041)
!7045 = !DILocation(line: 5539, column: 10, scope: !7043)
!7046 = !DILocation(line: 5539, column: 2, scope: !7043)
!7047 = !DILocation(line: 0, scope: !7030)
!7048 = !DILocation(line: 5542, column: 7, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 5542, column: 7)
!7050 = !DILocation(line: 5542, column: 7, scope: !7022)
!7051 = !DILocation(line: 5544, column: 7, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 5543, column: 5)
!7053 = !DILocation(line: 5545, column: 21, scope: !7052)
!7054 = !DILocation(line: 5545, column: 7, scope: !7052)
!7055 = !DILocation(line: 5547, column: 12, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 5547, column: 12)
!7057 = !DILocation(line: 5547, column: 12, scope: !7049)
!7058 = !DILocation(line: 5549, column: 7, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 5548, column: 5)
!7060 = !DILocation(line: 5550, column: 21, scope: !7059)
!7061 = !DILocation(line: 5550, column: 7, scope: !7059)
!7062 = !DILocation(line: 0, scope: !7049)
!7063 = !DILocation(line: 5554, column: 1, scope: !7022)
!7064 = distinct !DISubprogram(name: "finish_aliases_2", scope: !3, file: !3, line: 5734, type: !2666, scopeLine: 5735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7065)
!7065 = !{!7066, !7067}
!7066 = !DILocalVariable(name: "i", scope: !7064, file: !3, line: 5736, type: !7)
!7067 = !DILocalVariable(name: "p", scope: !7064, file: !3, line: 5737, type: !6906)
!7068 = !DILocation(line: 5737, column: 3, scope: !7064)
!7069 = !DILocation(line: 0, scope: !7064)
!7070 = !DILocation(line: 5739, column: 8, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 5739, column: 3)
!7072 = !DILocation(line: 0, scope: !7071)
!7073 = !DILocation(line: 5739, column: 15, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 5739, column: 3)
!7075 = !DILocation(line: 5739, column: 3, scope: !7071)
!7076 = !DILocation(line: 5740, column: 24, scope: !7074)
!7077 = !DILocation(line: 5740, column: 27, scope: !7074)
!7078 = !DILocation(line: 5740, column: 36, scope: !7074)
!7079 = !DILocation(line: 5740, column: 5, scope: !7074)
!7080 = !DILocation(line: 5739, column: 61, scope: !7074)
!7081 = !DILocation(line: 5739, column: 3, scope: !7074)
!7082 = distinct !{!7082, !7075, !7083}
!7083 = !DILocation(line: 5740, column: 42, scope: !7071)
!7084 = !DILocation(line: 5742, column: 3, scope: !7064)
!7085 = !DILocation(line: 5743, column: 1, scope: !7064)
!7086 = distinct !DISubprogram(name: "do_assemble_alias", scope: !3, file: !3, line: 5561, type: !2651, scopeLine: 5562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7087)
!7087 = !{!7088, !7089}
!7088 = !DILocalVariable(name: "decl", arg: 1, scope: !7086, file: !3, line: 5561, type: !639)
!7089 = !DILocalVariable(name: "target", arg: 2, scope: !7086, file: !3, line: 5561, type: !639)
!7090 = !DILocation(line: 0, scope: !7086)
!7091 = !DILocation(line: 5563, column: 7, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 5563, column: 7)
!7093 = !DILocation(line: 5563, column: 7, scope: !7086)
!7094 = !DILocation(line: 5568, column: 3, scope: !7086)
!7095 = !DILocation(line: 5570, column: 27, scope: !7086)
!7096 = !DILocation(line: 5571, column: 3, scope: !7086)
!7097 = !DILocation(line: 5571, column: 49, scope: !7086)
!7098 = !DILocation(line: 5573, column: 36, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 5573, column: 7)
!7100 = !DILocation(line: 5573, column: 7, scope: !7099)
!7101 = !DILocation(line: 5573, column: 7, scope: !7086)
!7102 = !DILocation(line: 5575, column: 7, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 5574, column: 5)
!7104 = !DILocation(line: 5577, column: 20, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 5577, column: 11)
!7106 = !DILocation(line: 5577, column: 12, scope: !7105)
!7107 = !DILocation(line: 5578, column: 4, scope: !7105)
!7108 = !DILocation(line: 5578, column: 7, scope: !7105)
!7109 = !DILocation(line: 5578, column: 24, scope: !7105)
!7110 = !DILocation(line: 5579, column: 4, scope: !7105)
!7111 = !DILocation(line: 5579, column: 7, scope: !7105)
!7112 = !DILocation(line: 5577, column: 11, scope: !7103)
!7113 = !DILocation(line: 5581, column: 11, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 5580, column: 2)
!7115 = !DILocation(line: 5582, column: 37, scope: !7114)
!7116 = !DILocation(line: 5582, column: 13, scope: !7114)
!7117 = !DILocation(line: 5582, column: 11, scope: !7114)
!7118 = !DILocation(line: 5583, column: 2, scope: !7114)
!7119 = !DILocation(line: 5585, column: 12, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 5585, column: 11)
!7121 = !DILocation(line: 5585, column: 11, scope: !7103)
!7122 = !DILocation(line: 5586, column: 20, scope: !7120)
!7123 = !DILocation(line: 5586, column: 18, scope: !7120)
!7124 = !DILocation(line: 5586, column: 2, scope: !7120)
!7125 = !DILocation(line: 5589, column: 7, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 5589, column: 7)
!7127 = !DILocation(line: 5600, column: 7, scope: !7103)
!7128 = !DILocation(line: 5603, column: 16, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 5603, column: 7)
!7130 = !DILocation(line: 5603, column: 8, scope: !7129)
!7131 = !DILocation(line: 5604, column: 7, scope: !7129)
!7132 = !DILocation(line: 5604, column: 10, scope: !7129)
!7133 = !DILocation(line: 5604, column: 27, scope: !7129)
!7134 = !DILocation(line: 5605, column: 7, scope: !7129)
!7135 = !DILocation(line: 5605, column: 10, scope: !7129)
!7136 = !DILocation(line: 5603, column: 7, scope: !7086)
!7137 = !DILocation(line: 5607, column: 14, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 5606, column: 5)
!7139 = !DILocation(line: 5608, column: 40, scope: !7138)
!7140 = !DILocation(line: 5608, column: 16, scope: !7138)
!7141 = !DILocation(line: 5608, column: 14, scope: !7138)
!7142 = !DILocation(line: 5609, column: 5, scope: !7138)
!7143 = !DILocation(line: 5614, column: 7, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 5614, column: 7)
!7145 = !DILocation(line: 5614, column: 7, scope: !7086)
!7146 = !DILocation(line: 5616, column: 7, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 5615, column: 5)
!7148 = !DILocation(line: 5617, column: 7, scope: !7147)
!7149 = !DILocation(line: 5618, column: 5, scope: !7147)
!7150 = !DILocation(line: 5623, column: 3, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 5623, column: 3)
!7152 = !DILocation(line: 5658, column: 1, scope: !7086)
!7153 = distinct !DISubprogram(name: "VEC_alias_pair_base_truncate", scope: !151, file: !151, line: 197, type: !6963, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7154)
!7154 = !{!7155, !7156}
!7155 = !DILocalVariable(name: "vec_", arg: 1, scope: !7153, file: !151, line: 197, type: !6947)
!7156 = !DILocalVariable(name: "size_", arg: 2, scope: !7153, file: !151, line: 197, type: !7)
!7157 = !DILocation(line: 0, scope: !7153)
!7158 = !DILocation(line: 197, column: 1, scope: !7153)
!7159 = !DILocation(line: 197, column: 1, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7153, file: !151, line: 197, column: 1)
!7161 = distinct !DISubprogram(name: "assemble_alias", scope: !3, file: !3, line: 5749, type: !2651, scopeLine: 5750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7162)
!7162 = !{!7163, !7164, !7165, !7166, !7167, !7170}
!7163 = !DILocalVariable(name: "decl", arg: 1, scope: !7161, file: !3, line: 5749, type: !639)
!7164 = !DILocalVariable(name: "target", arg: 2, scope: !7161, file: !3, line: 5749, type: !639)
!7165 = !DILocalVariable(name: "target_decl", scope: !7161, file: !3, line: 5751, type: !639)
!7166 = !DILocalVariable(name: "is_weakref", scope: !7161, file: !3, line: 5752, type: !622)
!7167 = !DILocalVariable(name: "alias", scope: !7168, file: !3, line: 5756, type: !639)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 5755, column: 5)
!7169 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 5754, column: 7)
!7170 = !DILocalVariable(name: "p", scope: !7171, file: !3, line: 5815, type: !6906)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 5814, column: 5)
!7172 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 5811, column: 7)
!7173 = !DILocation(line: 0, scope: !7161)
!7174 = !DILocation(line: 5754, column: 36, scope: !7169)
!7175 = !DILocation(line: 5754, column: 7, scope: !7169)
!7176 = !DILocation(line: 5754, column: 7, scope: !7161)
!7177 = !DILocation(line: 5756, column: 20, scope: !7168)
!7178 = !DILocation(line: 0, scope: !7168)
!7179 = !DILocation(line: 5760, column: 7, scope: !7168)
!7180 = !DILocation(line: 5762, column: 20, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 5762, column: 11)
!7182 = !DILocation(line: 5762, column: 17, scope: !7181)
!7183 = !DILocation(line: 5762, column: 11, scope: !7168)
!7184 = !DILocation(line: 5763, column: 2, scope: !7181)
!7185 = !DILocation(line: 5771, column: 11, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 5771, column: 11)
!7187 = !DILocation(line: 5771, column: 11, scope: !7168)
!7188 = !DILocation(line: 5772, column: 2, scope: !7186)
!7189 = !DILocation(line: 5791, column: 3, scope: !7161)
!7190 = !DILocation(line: 5791, column: 20, scope: !7161)
!7191 = !DILocation(line: 5796, column: 7, scope: !7161)
!7192 = !DILocation(line: 5797, column: 5, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 5796, column: 7)
!7194 = !DILocation(line: 5797, column: 26, scope: !7193)
!7195 = !DILocation(line: 5800, column: 24, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 5800, column: 7)
!7197 = !DILocation(line: 5800, column: 7, scope: !7161)
!7198 = !DILocation(line: 5801, column: 5, scope: !7196)
!7199 = !DILocation(line: 5801, column: 25, scope: !7196)
!7200 = !DILocation(line: 5801, column: 31, scope: !7196)
!7201 = !DILocation(line: 5803, column: 5, scope: !7196)
!7202 = !DILocation(line: 5803, column: 26, scope: !7196)
!7203 = !DILocation(line: 5803, column: 32, scope: !7196)
!7204 = !DILocation(line: 5807, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 5807, column: 7)
!7206 = !DILocation(line: 5807, column: 7, scope: !7161)
!7207 = !DILocation(line: 5808, column: 52, scope: !7205)
!7208 = !DILocation(line: 5808, column: 19, scope: !7205)
!7209 = !DILocation(line: 5808, column: 5, scope: !7205)
!7210 = !DILocation(line: 0, scope: !7205)
!7211 = !DILocation(line: 5811, column: 7, scope: !7172)
!7212 = !DILocation(line: 5811, column: 19, scope: !7172)
!7213 = !DILocation(line: 5811, column: 22, scope: !7172)
!7214 = !DILocation(line: 5811, column: 7, scope: !7161)
!7215 = !DILocation(line: 5812, column: 30, scope: !7172)
!7216 = !DILocation(line: 5812, column: 5, scope: !7172)
!7217 = !DILocation(line: 5815, column: 23, scope: !7171)
!7218 = !DILocation(line: 0, scope: !7171)
!7219 = !DILocation(line: 5816, column: 10, scope: !7171)
!7220 = !DILocation(line: 5816, column: 15, scope: !7171)
!7221 = !DILocation(line: 5817, column: 19, scope: !7171)
!7222 = !DILocation(line: 5817, column: 10, scope: !7171)
!7223 = !DILocation(line: 5817, column: 17, scope: !7171)
!7224 = !DILocation(line: 5819, column: 1, scope: !7161)
!7225 = distinct !DISubprogram(name: "VEC_alias_pair_gc_safe_push", scope: !151, file: !151, line: 198, type: !7226, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7231)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{!6906, !7228, !7229}
!7228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 64)
!7230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1755)
!7231 = !{!7232, !7233}
!7232 = !DILocalVariable(name: "vec_", arg: 1, scope: !7225, file: !151, line: 198, type: !7228)
!7233 = !DILocalVariable(name: "obj_", arg: 2, scope: !7225, file: !151, line: 198, type: !7229)
!7234 = !DILocation(line: 0, scope: !7225)
!7235 = !DILocation(line: 198, column: 1, scope: !7225)
!7236 = !DILocation(line: 0, scope: !1790)
!7237 = !DILocation(line: 5833, column: 10, scope: !1790)
!7238 = !DILocation(line: 5834, column: 10, scope: !1790)
!7239 = !DILocation(line: 5837, column: 12, scope: !1790)
!7240 = !DILocation(line: 5837, column: 3, scope: !1790)
!7241 = !DILocation(line: 5838, column: 18, scope: !1790)
!7242 = !DILocation(line: 5838, column: 3, scope: !1790)
!7243 = !DILocation(line: 5839, column: 12, scope: !1790)
!7244 = !DILocation(line: 5839, column: 3, scope: !1790)
!7245 = !DILocation(line: 5844, column: 1, scope: !1790)
!7246 = distinct !DISubprogram(name: "supports_one_only", scope: !3, file: !3, line: 5868, type: !2053, scopeLine: 5869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!7247 = !DILocation(line: 5871, column: 5, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 5870, column: 7)
!7249 = distinct !DISubprogram(name: "init_varasm_once", scope: !3, file: !3, line: 5904, type: !2666, scopeLine: 5905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!7250 = !DILocation(line: 5906, column: 18, scope: !7249)
!7251 = !DILocation(line: 5906, column: 16, scope: !7249)
!7252 = !DILocation(line: 5908, column: 23, scope: !7249)
!7253 = !DILocation(line: 5908, column: 21, scope: !7249)
!7254 = !DILocation(line: 5910, column: 21, scope: !7249)
!7255 = !DILocation(line: 5910, column: 19, scope: !7249)
!7256 = !DILocation(line: 5913, column: 21, scope: !7249)
!7257 = !DILocation(line: 5913, column: 19, scope: !7249)
!7258 = !DILocation(line: 5914, column: 26, scope: !7249)
!7259 = !DILocation(line: 5914, column: 24, scope: !7249)
!7260 = !DILocation(line: 5917, column: 18, scope: !7249)
!7261 = !DILocation(line: 5917, column: 16, scope: !7249)
!7262 = !DILocation(line: 5922, column: 18, scope: !7249)
!7263 = !DILocation(line: 5922, column: 16, scope: !7249)
!7264 = !DILocation(line: 5932, column: 27, scope: !7249)
!7265 = !DILocation(line: 5932, column: 25, scope: !7249)
!7266 = !DILocation(line: 5947, column: 17, scope: !7249)
!7267 = !DILocation(line: 5947, column: 15, scope: !7249)
!7268 = !DILocation(line: 5958, column: 22, scope: !7249)
!7269 = !DILocation(line: 5958, column: 20, scope: !7249)
!7270 = !DILocation(line: 5960, column: 19, scope: !7249)
!7271 = !DILocation(line: 5960, column: 17, scope: !7249)
!7272 = !DILocation(line: 5962, column: 18, scope: !7249)
!7273 = !DILocation(line: 5962, column: 16, scope: !7249)
!7274 = !DILocation(line: 5966, column: 26, scope: !7249)
!7275 = !DILocation(line: 5966, column: 24, scope: !7249)
!7276 = !DILocation(line: 5970, column: 19, scope: !7249)
!7277 = !DILocation(line: 5970, column: 3, scope: !7249)
!7278 = !DILocation(line: 5972, column: 7, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 5972, column: 7)
!7280 = !DILocation(line: 5972, column: 29, scope: !7279)
!7281 = !DILocation(line: 5972, column: 7, scope: !7249)
!7282 = !DILocation(line: 5973, column: 29, scope: !7279)
!7283 = !DILocation(line: 5973, column: 27, scope: !7279)
!7284 = !DILocation(line: 5973, column: 5, scope: !7279)
!7285 = !DILocation(line: 5974, column: 1, scope: !7249)
!7286 = distinct !DISubprogram(name: "section_entry_hash", scope: !3, file: !3, line: 484, type: !1226, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7287)
!7287 = !{!7288, !7289}
!7288 = !DILocalVariable(name: "p", arg: 1, scope: !7286, file: !3, line: 484, type: !1067)
!7289 = !DILocalVariable(name: "old", scope: !7286, file: !3, line: 486, type: !1760)
!7290 = !DILocation(line: 0, scope: !7286)
!7291 = !DILocation(line: 487, column: 39, scope: !7286)
!7292 = !DILocation(line: 487, column: 10, scope: !7286)
!7293 = !DILocation(line: 487, column: 3, scope: !7286)
!7294 = distinct !DISubprogram(name: "section_entry_eq", scope: !3, file: !3, line: 475, type: !1231, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7295)
!7295 = !{!7296, !7297, !7298, !7299}
!7296 = !DILocalVariable(name: "p1", arg: 1, scope: !7294, file: !3, line: 475, type: !1067)
!7297 = !DILocalVariable(name: "p2", arg: 2, scope: !7294, file: !3, line: 475, type: !1067)
!7298 = !DILocalVariable(name: "old", scope: !7294, file: !3, line: 477, type: !1760)
!7299 = !DILocalVariable(name: "new_name", scope: !7294, file: !3, line: 478, type: !628)
!7300 = !DILocation(line: 0, scope: !7294)
!7301 = !DILocation(line: 480, column: 29, scope: !7294)
!7302 = !DILocation(line: 480, column: 10, scope: !7294)
!7303 = !DILocation(line: 480, column: 45, scope: !7294)
!7304 = !DILocation(line: 480, column: 3, scope: !7294)
!7305 = distinct !DISubprogram(name: "object_block_entry_hash", scope: !3, file: !3, line: 512, type: !1226, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7306)
!7306 = !{!7307, !7308}
!7307 = !DILocalVariable(name: "p", arg: 1, scope: !7305, file: !3, line: 512, type: !1067)
!7308 = !DILocalVariable(name: "old", scope: !7305, file: !3, line: 514, type: !1762)
!7309 = !DILocation(line: 0, scope: !7305)
!7310 = !DILocation(line: 515, column: 29, scope: !7305)
!7311 = !DILocation(line: 515, column: 10, scope: !7305)
!7312 = !DILocation(line: 515, column: 3, scope: !7305)
!7313 = distinct !DISubprogram(name: "object_block_entry_eq", scope: !3, file: !3, line: 503, type: !1231, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7314)
!7314 = !{!7315, !7316, !7317, !7318}
!7315 = !DILocalVariable(name: "p1", arg: 1, scope: !7313, file: !3, line: 503, type: !1067)
!7316 = !DILocalVariable(name: "p2", arg: 2, scope: !7313, file: !3, line: 503, type: !1067)
!7317 = !DILocalVariable(name: "old", scope: !7313, file: !3, line: 505, type: !1762)
!7318 = !DILocalVariable(name: "new_section", scope: !7313, file: !3, line: 506, type: !1760)
!7319 = !DILocation(line: 0, scope: !7313)
!7320 = !DILocation(line: 506, column: 32, scope: !7313)
!7321 = !DILocation(line: 508, column: 15, scope: !7313)
!7322 = !DILocation(line: 508, column: 20, scope: !7313)
!7323 = !DILocation(line: 508, column: 3, scope: !7313)
!7324 = distinct !DISubprogram(name: "const_desc_hash", scope: !3, file: !3, line: 2873, type: !1226, scopeLine: 2874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7325)
!7325 = !{!7326}
!7326 = !DILocalVariable(name: "ptr", arg: 1, scope: !7324, file: !3, line: 2873, type: !1067)
!7327 = !DILocation(line: 0, scope: !7324)
!7328 = !DILocation(line: 2875, column: 58, scope: !7324)
!7329 = !DILocation(line: 2875, column: 3, scope: !7324)
!7330 = distinct !DISubprogram(name: "const_desc_eq", scope: !3, file: !3, line: 2976, type: !1231, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7331)
!7331 = !{!7332, !7333, !7334, !7336}
!7332 = !DILocalVariable(name: "p1", arg: 1, scope: !7330, file: !3, line: 2976, type: !1067)
!7333 = !DILocalVariable(name: "p2", arg: 2, scope: !7330, file: !3, line: 2976, type: !1067)
!7334 = !DILocalVariable(name: "c1", scope: !7330, file: !3, line: 2978, type: !7335)
!7335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!7336 = !DILocalVariable(name: "c2", scope: !7330, file: !3, line: 2980, type: !7335)
!7337 = !DILocation(line: 0, scope: !7330)
!7338 = !DILocation(line: 2982, column: 11, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2982, column: 7)
!7340 = !DILocation(line: 2982, column: 23, scope: !7339)
!7341 = !DILocation(line: 2982, column: 16, scope: !7339)
!7342 = !DILocation(line: 2982, column: 7, scope: !7330)
!7343 = !DILocation(line: 2984, column: 32, scope: !7330)
!7344 = !DILocation(line: 2984, column: 43, scope: !7330)
!7345 = !DILocation(line: 2984, column: 10, scope: !7330)
!7346 = !DILocation(line: 2984, column: 3, scope: !7330)
!7347 = !DILocation(line: 2985, column: 1, scope: !7330)
!7348 = distinct !DISubprogram(name: "output_section_asm_op", scope: !3, file: !3, line: 6799, type: !1065, scopeLine: 6800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7349)
!7349 = !{!7350}
!7350 = !DILocalVariable(name: "directive", arg: 1, scope: !7348, file: !3, line: 6799, type: !1067)
!7351 = !DILocation(line: 0, scope: !7348)
!7352 = !DILocation(line: 6801, column: 12, scope: !7348)
!7353 = !DILocation(line: 6801, column: 3, scope: !7348)
!7354 = !DILocation(line: 6802, column: 1, scope: !7348)
!7355 = distinct !DISubprogram(name: "get_noswitch_section", scope: !3, file: !3, line: 539, type: !7356, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7358)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{!1044, !7, !1076}
!7358 = !{!7359, !7360, !7361}
!7359 = !DILocalVariable(name: "flags", arg: 1, scope: !7355, file: !3, line: 539, type: !7)
!7360 = !DILocalVariable(name: "callback", arg: 2, scope: !7355, file: !3, line: 539, type: !1076)
!7361 = !DILocalVariable(name: "sect", scope: !7355, file: !3, line: 541, type: !1044)
!7362 = !DILocation(line: 0, scope: !7355)
!7363 = !DILocation(line: 543, column: 10, scope: !7355)
!7364 = !DILocation(line: 544, column: 39, scope: !7355)
!7365 = !DILocation(line: 544, column: 25, scope: !7355)
!7366 = !DILocation(line: 544, column: 31, scope: !7355)
!7367 = !DILocation(line: 545, column: 18, scope: !7355)
!7368 = !DILocation(line: 545, column: 27, scope: !7355)
!7369 = !DILocation(line: 547, column: 3, scope: !7355)
!7370 = distinct !DISubprogram(name: "emit_tls_common", scope: !3, file: !3, line: 1992, type: !1078, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7371)
!7371 = !{!7372, !7373, !7374, !7375}
!7372 = !DILocalVariable(name: "decl", arg: 1, scope: !7370, file: !3, line: 1992, type: !639)
!7373 = !DILocalVariable(name: "name", arg: 2, scope: !7370, file: !3, line: 1993, type: !628)
!7374 = !DILocalVariable(name: "size", arg: 3, scope: !7370, file: !3, line: 1994, type: !692)
!7375 = !DILocalVariable(name: "rounded", arg: 4, scope: !7370, file: !3, line: 1995, type: !692)
!7376 = !DILocation(line: 0, scope: !7370)
!7377 = !DILocation(line: 1998, column: 3, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 1998, column: 3)
!7379 = !DILocation(line: 1999, column: 3, scope: !7370)
!7380 = distinct !DISubprogram(name: "emit_local", scope: !3, file: !3, line: 1931, type: !1078, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384, !7385}
!7382 = !DILocalVariable(name: "decl", arg: 1, scope: !7380, file: !3, line: 1931, type: !639)
!7383 = !DILocalVariable(name: "name", arg: 2, scope: !7380, file: !3, line: 1932, type: !628)
!7384 = !DILocalVariable(name: "size", arg: 3, scope: !7380, file: !3, line: 1933, type: !692)
!7385 = !DILocalVariable(name: "rounded", arg: 4, scope: !7380, file: !3, line: 1934, type: !692)
!7386 = !DILocation(line: 0, scope: !7380)
!7387 = !DILocation(line: 1941, column: 3, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1941, column: 3)
!7389 = !DILocation(line: 1941, column: 3, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 1941, column: 3)
!7391 = !DILocation(line: 1942, column: 3, scope: !7380)
!7392 = distinct !DISubprogram(name: "emit_common", scope: !3, file: !3, line: 1971, type: !1078, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7393)
!7393 = !{!7394, !7395, !7396, !7397}
!7394 = !DILocalVariable(name: "decl", arg: 1, scope: !7392, file: !3, line: 1971, type: !639)
!7395 = !DILocalVariable(name: "name", arg: 2, scope: !7392, file: !3, line: 1972, type: !628)
!7396 = !DILocalVariable(name: "size", arg: 3, scope: !7392, file: !3, line: 1973, type: !692)
!7397 = !DILocalVariable(name: "rounded", arg: 4, scope: !7392, file: !3, line: 1974, type: !692)
!7398 = !DILocation(line: 0, scope: !7392)
!7399 = !DILocation(line: 1981, column: 3, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 1981, column: 3)
!7401 = !DILocation(line: 1982, column: 3, scope: !7392)
!7402 = distinct !DISubprogram(name: "emit_bss", scope: !3, file: !3, line: 1953, type: !1078, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7403)
!7403 = !{!7404, !7405, !7406, !7407}
!7404 = !DILocalVariable(name: "decl", arg: 1, scope: !7402, file: !3, line: 1953, type: !639)
!7405 = !DILocalVariable(name: "name", arg: 2, scope: !7402, file: !3, line: 1954, type: !628)
!7406 = !DILocalVariable(name: "size", arg: 3, scope: !7402, file: !3, line: 1955, type: !692)
!7407 = !DILocalVariable(name: "rounded", arg: 4, scope: !7402, file: !3, line: 1956, type: !692)
!7408 = !DILocation(line: 0, scope: !7402)
!7409 = !DILocation(line: 1959, column: 3, scope: !7402)
!7410 = !DILocation(line: 1960, column: 3, scope: !7402)
!7411 = distinct !DISubprogram(name: "decl_default_tls_model", scope: !3, file: !3, line: 5977, type: !7412, scopeLine: 5978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7414)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!571, !5916}
!7414 = !{!7415, !7416, !7417}
!7415 = !DILocalVariable(name: "decl", arg: 1, scope: !7411, file: !3, line: 5977, type: !5916)
!7416 = !DILocalVariable(name: "kind", scope: !7411, file: !3, line: 5979, type: !571)
!7417 = !DILocalVariable(name: "is_local", scope: !7411, file: !3, line: 5980, type: !622)
!7418 = !DILocation(line: 0, scope: !7411)
!7419 = !DILocation(line: 5982, column: 22, scope: !7411)
!7420 = !DILocation(line: 5982, column: 14, scope: !7411)
!7421 = !DILocation(line: 5983, column: 8, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 5983, column: 7)
!7423 = !DILocation(line: 5983, column: 7, scope: !7411)
!7424 = !DILocation(line: 5985, column: 11, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 5985, column: 11)
!7426 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 5984, column: 5)
!7427 = !DILocation(line: 5989, column: 5, scope: !7426)
!7428 = !DILocation(line: 5993, column: 12, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 5993, column: 12)
!7430 = !DILocation(line: 5993, column: 24, scope: !7429)
!7431 = !DILocation(line: 5993, column: 21, scope: !7429)
!7432 = !DILocation(line: 0, scope: !7422)
!7433 = !DILocation(line: 5997, column: 14, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 5997, column: 7)
!7435 = !DILocation(line: 5997, column: 12, scope: !7434)
!7436 = !DILocation(line: 5997, column: 7, scope: !7411)
!7437 = !DILocation(line: 6000, column: 3, scope: !7411)
!7438 = distinct !DISubprogram(name: "default_section_type_flags", scope: !3, file: !3, line: 6011, type: !7439, scopeLine: 6012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7441)
!7439 = !DISubroutineType(types: !7440)
!7440 = !{!7, !639, !628, !623}
!7441 = !{!7442, !7443, !7444, !7445}
!7442 = !DILocalVariable(name: "decl", arg: 1, scope: !7438, file: !3, line: 6011, type: !639)
!7443 = !DILocalVariable(name: "name", arg: 2, scope: !7438, file: !3, line: 6011, type: !628)
!7444 = !DILocalVariable(name: "reloc", arg: 3, scope: !7438, file: !3, line: 6011, type: !623)
!7445 = !DILocalVariable(name: "flags", scope: !7438, file: !3, line: 6013, type: !7)
!7446 = !DILocation(line: 0, scope: !7438)
!7447 = !DILocation(line: 6015, column: 12, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6015, column: 7)
!7449 = !DILocation(line: 6015, column: 15, scope: !7448)
!7450 = !DILocation(line: 6015, column: 32, scope: !7448)
!7451 = !DILocation(line: 6015, column: 7, scope: !7438)
!7452 = !DILocation(line: 6017, column: 20, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 6017, column: 12)
!7454 = !DILocation(line: 6017, column: 12, scope: !7448)
!7455 = !DILocation(line: 6019, column: 12, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 6019, column: 12)
!7457 = !DILocation(line: 6020, column: 5, scope: !7456)
!7458 = !DILocation(line: 6020, column: 8, scope: !7456)
!7459 = !DILocation(line: 6021, column: 26, scope: !7456)
!7460 = !DILocation(line: 6021, column: 8, scope: !7456)
!7461 = !DILocation(line: 6021, column: 5, scope: !7456)
!7462 = !DILocation(line: 6022, column: 8, scope: !7456)
!7463 = !DILocation(line: 6022, column: 68, scope: !7456)
!7464 = !DILocation(line: 6019, column: 12, scope: !7453)
!7465 = !DILocation(line: 6025, column: 5, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 6024, column: 12)
!7467 = !DILocation(line: 6025, column: 10, scope: !7466)
!7468 = !DILocation(line: 6025, column: 32, scope: !7466)
!7469 = !DILocation(line: 6025, column: 36, scope: !7466)
!7470 = !DILocation(line: 6026, column: 5, scope: !7466)
!7471 = !DILocation(line: 6026, column: 8, scope: !7466)
!7472 = !DILocation(line: 6026, column: 59, scope: !7466)
!7473 = !DILocation(line: 6024, column: 12, scope: !7456)
!7474 = !DILocation(line: 0, scope: !7448)
!7475 = !DILocation(line: 6031, column: 12, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6031, column: 7)
!7477 = !DILocation(line: 6031, column: 15, scope: !7476)
!7478 = !DILocation(line: 6032, column: 11, scope: !7476)
!7479 = !DILocation(line: 6031, column: 7, scope: !7438)
!7480 = !DILocation(line: 6034, column: 12, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6034, column: 7)
!7482 = !DILocation(line: 6034, column: 15, scope: !7481)
!7483 = !DILocation(line: 6034, column: 32, scope: !7481)
!7484 = !DILocation(line: 6034, column: 44, scope: !7481)
!7485 = !DILocation(line: 6034, column: 47, scope: !7481)
!7486 = !DILocation(line: 6035, column: 11, scope: !7481)
!7487 = !DILocation(line: 6034, column: 7, scope: !7438)
!7488 = !DILocation(line: 6037, column: 7, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6037, column: 7)
!7490 = !DILocation(line: 6037, column: 29, scope: !7489)
!7491 = !DILocation(line: 6038, column: 7, scope: !7489)
!7492 = !DILocation(line: 6038, column: 10, scope: !7489)
!7493 = !DILocation(line: 6038, column: 37, scope: !7489)
!7494 = !DILocation(line: 6039, column: 7, scope: !7489)
!7495 = !DILocation(line: 6039, column: 10, scope: !7489)
!7496 = !DILocation(line: 6039, column: 49, scope: !7489)
!7497 = !DILocation(line: 6040, column: 7, scope: !7489)
!7498 = !DILocation(line: 6040, column: 10, scope: !7489)
!7499 = !DILocation(line: 6040, column: 33, scope: !7489)
!7500 = !DILocation(line: 6041, column: 7, scope: !7489)
!7501 = !DILocation(line: 6041, column: 10, scope: !7489)
!7502 = !DILocation(line: 6041, column: 38, scope: !7489)
!7503 = !DILocation(line: 6042, column: 7, scope: !7489)
!7504 = !DILocation(line: 6042, column: 10, scope: !7489)
!7505 = !DILocation(line: 6042, column: 50, scope: !7489)
!7506 = !DILocation(line: 6037, column: 7, scope: !7438)
!7507 = !DILocation(line: 6043, column: 11, scope: !7489)
!7508 = !DILocation(line: 6043, column: 5, scope: !7489)
!7509 = !DILocation(line: 6045, column: 7, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6045, column: 7)
!7511 = !DILocation(line: 6045, column: 31, scope: !7510)
!7512 = !DILocation(line: 6046, column: 7, scope: !7510)
!7513 = !DILocation(line: 6046, column: 10, scope: !7510)
!7514 = !DILocation(line: 6046, column: 39, scope: !7510)
!7515 = !DILocation(line: 6047, column: 7, scope: !7510)
!7516 = !DILocation(line: 6047, column: 10, scope: !7510)
!7517 = !DILocation(line: 6047, column: 50, scope: !7510)
!7518 = !DILocation(line: 6045, column: 7, scope: !7438)
!7519 = !DILocation(line: 6048, column: 11, scope: !7510)
!7520 = !DILocation(line: 6048, column: 5, scope: !7510)
!7521 = !DILocation(line: 6050, column: 7, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6050, column: 7)
!7523 = !DILocation(line: 6050, column: 30, scope: !7522)
!7524 = !DILocation(line: 6051, column: 7, scope: !7522)
!7525 = !DILocation(line: 6051, column: 10, scope: !7522)
!7526 = !DILocation(line: 6051, column: 38, scope: !7522)
!7527 = !DILocation(line: 6052, column: 7, scope: !7522)
!7528 = !DILocation(line: 6052, column: 10, scope: !7522)
!7529 = !DILocation(line: 6052, column: 50, scope: !7522)
!7530 = !DILocation(line: 6050, column: 7, scope: !7438)
!7531 = !DILocation(line: 6053, column: 11, scope: !7522)
!7532 = !DILocation(line: 6053, column: 5, scope: !7522)
!7533 = !DILocation(line: 6060, column: 15, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 6060, column: 7)
!7535 = !DILocation(line: 6061, column: 7, scope: !7534)
!7536 = !DILocation(line: 6061, column: 11, scope: !7534)
!7537 = !DILocation(line: 6061, column: 40, scope: !7534)
!7538 = !DILocation(line: 6062, column: 4, scope: !7534)
!7539 = !DILocation(line: 6062, column: 7, scope: !7534)
!7540 = !DILocation(line: 6062, column: 36, scope: !7534)
!7541 = !DILocation(line: 6063, column: 4, scope: !7534)
!7542 = !DILocation(line: 6063, column: 7, scope: !7534)
!7543 = !DILocation(line: 6063, column: 39, scope: !7534)
!7544 = !DILocation(line: 6060, column: 7, scope: !7438)
!7545 = !DILocation(line: 6064, column: 11, scope: !7534)
!7546 = !DILocation(line: 6064, column: 5, scope: !7534)
!7547 = !DILocation(line: 6066, column: 3, scope: !7438)
!7548 = distinct !DISubprogram(name: "decl_readonly_section", scope: !3, file: !3, line: 6321, type: !7549, scopeLine: 6322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!622, !5916, !623}
!7551 = !{!7552, !7553}
!7552 = !DILocalVariable(name: "decl", arg: 1, scope: !7548, file: !3, line: 6321, type: !5916)
!7553 = !DILocalVariable(name: "reloc", arg: 2, scope: !7548, file: !3, line: 6321, type: !623)
!7554 = !DILocation(line: 0, scope: !7548)
!7555 = !DILocation(line: 6323, column: 11, scope: !7548)
!7556 = !DILocation(line: 6323, column: 3, scope: !7548)
!7557 = !DILocation(line: 0, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 6324, column: 5)
!7559 = !DILocation(line: 6336, column: 1, scope: !7548)
!7560 = distinct !DISubprogram(name: "have_global_bss_p", scope: !3, file: !3, line: 6074, type: !3446, scopeLine: 6075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!7561 = !DILocation(line: 6076, column: 10, scope: !7560)
!7562 = !DILocation(line: 6076, column: 31, scope: !7560)
!7563 = !DILocation(line: 6076, column: 3, scope: !7560)
!7564 = distinct !DISubprogram(name: "default_no_named_section", scope: !3, file: !3, line: 6083, type: !7565, scopeLine: 6086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{null, !628, !7, !639}
!7567 = !{!7568, !7569, !7570}
!7568 = !DILocalVariable(name: "name", arg: 1, scope: !7564, file: !3, line: 6083, type: !628)
!7569 = !DILocalVariable(name: "flags", arg: 2, scope: !7564, file: !3, line: 6084, type: !7)
!7570 = !DILocalVariable(name: "decl", arg: 3, scope: !7564, file: !3, line: 6085, type: !639)
!7571 = !DILocation(line: 0, scope: !7564)
!7572 = !DILocation(line: 6089, column: 3, scope: !7564)
!7573 = !DILocation(line: 6090, column: 1, scope: !7564)
!7574 = distinct !DISubprogram(name: "default_elf_asm_named_section", scope: !3, file: !3, line: 6097, type: !7565, scopeLine: 6099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7575)
!7575 = !{!7576, !7577, !7578, !7579, !7583, !7584, !7587}
!7576 = !DILocalVariable(name: "name", arg: 1, scope: !7574, file: !3, line: 6097, type: !628)
!7577 = !DILocalVariable(name: "flags", arg: 2, scope: !7574, file: !3, line: 6097, type: !7)
!7578 = !DILocalVariable(name: "decl", arg: 3, scope: !7574, file: !3, line: 6098, type: !639)
!7579 = !DILocalVariable(name: "flagchars", scope: !7574, file: !3, line: 6100, type: !7580)
!7580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 80, elements: !7581)
!7581 = !{!7582}
!7582 = !DISubrange(count: 10)
!7583 = !DILocalVariable(name: "f", scope: !7574, file: !3, line: 6100, type: !625)
!7584 = !DILocalVariable(name: "type", scope: !7585, file: !3, line: 6135, type: !628)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 6134, column: 5)
!7586 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6133, column: 7)
!7587 = !DILocalVariable(name: "format", scope: !7585, file: !3, line: 6136, type: !628)
!7588 = !DILocation(line: 0, scope: !7574)
!7589 = !DILocation(line: 6100, column: 3, scope: !7574)
!7590 = !DILocation(line: 6100, column: 8, scope: !7574)
!7591 = !DILocation(line: 6107, column: 7, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6106, column: 7)
!7593 = !DILocation(line: 6109, column: 16, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 6108, column: 5)
!7595 = !DILocation(line: 6109, column: 7, scope: !7594)
!7596 = !DILocation(line: 6110, column: 7, scope: !7594)
!7597 = !DILocation(line: 6113, column: 15, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6113, column: 7)
!7599 = !DILocation(line: 6113, column: 7, scope: !7574)
!7600 = !DILocation(line: 6114, column: 7, scope: !7598)
!7601 = !DILocation(line: 6114, column: 10, scope: !7598)
!7602 = !DILocation(line: 6114, column: 5, scope: !7598)
!7603 = !DILocation(line: 6115, column: 13, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6115, column: 7)
!7605 = !DILocation(line: 6115, column: 7, scope: !7574)
!7606 = !DILocation(line: 6116, column: 7, scope: !7604)
!7607 = !DILocation(line: 6116, column: 10, scope: !7604)
!7608 = !DILocation(line: 6116, column: 5, scope: !7604)
!7609 = !DILocation(line: 6117, column: 13, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6117, column: 7)
!7611 = !DILocation(line: 6117, column: 7, scope: !7574)
!7612 = !DILocation(line: 6118, column: 7, scope: !7610)
!7613 = !DILocation(line: 6118, column: 10, scope: !7610)
!7614 = !DILocation(line: 6118, column: 5, scope: !7610)
!7615 = !DILocation(line: 6119, column: 13, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6119, column: 7)
!7617 = !DILocation(line: 6119, column: 7, scope: !7574)
!7618 = !DILocation(line: 6120, column: 7, scope: !7616)
!7619 = !DILocation(line: 6120, column: 10, scope: !7616)
!7620 = !DILocation(line: 6120, column: 5, scope: !7616)
!7621 = !DILocation(line: 6121, column: 13, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6121, column: 7)
!7623 = !DILocation(line: 6121, column: 7, scope: !7574)
!7624 = !DILocation(line: 6122, column: 7, scope: !7622)
!7625 = !DILocation(line: 6122, column: 10, scope: !7622)
!7626 = !DILocation(line: 6122, column: 5, scope: !7622)
!7627 = !DILocation(line: 6123, column: 13, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6123, column: 7)
!7629 = !DILocation(line: 6123, column: 7, scope: !7574)
!7630 = !DILocation(line: 6124, column: 7, scope: !7628)
!7631 = !DILocation(line: 6124, column: 10, scope: !7628)
!7632 = !DILocation(line: 6124, column: 5, scope: !7628)
!7633 = !DILocation(line: 6125, column: 13, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6125, column: 7)
!7635 = !DILocation(line: 6125, column: 7, scope: !7574)
!7636 = !DILocation(line: 6126, column: 7, scope: !7634)
!7637 = !DILocation(line: 6126, column: 10, scope: !7634)
!7638 = !DILocation(line: 6126, column: 5, scope: !7634)
!7639 = !DILocation(line: 6127, column: 35, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 6127, column: 7)
!7641 = !DILocation(line: 6127, column: 7, scope: !7574)
!7642 = !DILocation(line: 6128, column: 7, scope: !7640)
!7643 = !DILocation(line: 6128, column: 10, scope: !7640)
!7644 = !DILocation(line: 6128, column: 5, scope: !7640)
!7645 = !DILocation(line: 6129, column: 6, scope: !7574)
!7646 = !DILocation(line: 6131, column: 12, scope: !7574)
!7647 = !DILocation(line: 6131, column: 3, scope: !7574)
!7648 = !DILocation(line: 6133, column: 15, scope: !7586)
!7649 = !DILocation(line: 6133, column: 7, scope: !7574)
!7650 = !DILocation(line: 6138, column: 17, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 6138, column: 11)
!7652 = !DILocation(line: 0, scope: !7585)
!7653 = !DILocation(line: 6147, column: 11, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 6147, column: 11)
!7655 = !DILocation(line: 6147, column: 43, scope: !7654)
!7656 = !DILocation(line: 6147, column: 11, scope: !7585)
!7657 = !DILocation(line: 6150, column: 16, scope: !7585)
!7658 = !DILocation(line: 6150, column: 7, scope: !7585)
!7659 = !DILocation(line: 6152, column: 17, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 6152, column: 11)
!7661 = !DILocation(line: 6152, column: 11, scope: !7585)
!7662 = !DILocation(line: 6153, column: 11, scope: !7660)
!7663 = !DILocation(line: 6153, column: 2, scope: !7660)
!7664 = !DILocation(line: 6154, column: 11, scope: !7585)
!7665 = !DILocation(line: 6156, column: 8, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 6156, column: 8)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 6155, column: 2)
!7668 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 6154, column: 11)
!7669 = !DILocation(line: 6156, column: 25, scope: !7666)
!7670 = !DILocation(line: 0, scope: !7666)
!7671 = !DILocation(line: 6156, column: 8, scope: !7667)
!7672 = !DILocation(line: 6157, column: 43, scope: !7666)
!7673 = !DILocation(line: 6157, column: 6, scope: !7666)
!7674 = !DILocation(line: 6160, column: 8, scope: !7666)
!7675 = !DILocation(line: 6159, column: 6, scope: !7666)
!7676 = !DILocation(line: 6164, column: 15, scope: !7574)
!7677 = !DILocation(line: 6164, column: 3, scope: !7574)
!7678 = !DILocation(line: 6165, column: 1, scope: !7574)
!7679 = distinct !DISubprogram(name: "default_coff_asm_named_section", scope: !3, file: !3, line: 6168, type: !7565, scopeLine: 6170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7680)
!7680 = !{!7681, !7682, !7683, !7684, !7688}
!7681 = !DILocalVariable(name: "name", arg: 1, scope: !7679, file: !3, line: 6168, type: !628)
!7682 = !DILocalVariable(name: "flags", arg: 2, scope: !7679, file: !3, line: 6168, type: !7)
!7683 = !DILocalVariable(name: "decl", arg: 3, scope: !7679, file: !3, line: 6169, type: !639)
!7684 = !DILocalVariable(name: "flagchars", scope: !7679, file: !3, line: 6171, type: !7685)
!7685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 64, elements: !7686)
!7686 = !{!7687}
!7687 = !DISubrange(count: 8)
!7688 = !DILocalVariable(name: "f", scope: !7679, file: !3, line: 6171, type: !625)
!7689 = !DILocation(line: 0, scope: !7679)
!7690 = !DILocation(line: 6171, column: 3, scope: !7679)
!7691 = !DILocation(line: 6171, column: 8, scope: !7679)
!7692 = !DILocation(line: 6173, column: 13, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6173, column: 7)
!7694 = !DILocation(line: 6173, column: 7, scope: !7679)
!7695 = !DILocation(line: 6174, column: 7, scope: !7693)
!7696 = !DILocation(line: 6174, column: 10, scope: !7693)
!7697 = !DILocation(line: 6174, column: 5, scope: !7693)
!7698 = !DILocation(line: 6175, column: 13, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 6175, column: 7)
!7700 = !DILocation(line: 6175, column: 7, scope: !7679)
!7701 = !DILocation(line: 6176, column: 7, scope: !7699)
!7702 = !DILocation(line: 6176, column: 10, scope: !7699)
!7703 = !DILocation(line: 6176, column: 5, scope: !7699)
!7704 = !DILocation(line: 6177, column: 6, scope: !7679)
!7705 = !DILocation(line: 6179, column: 12, scope: !7679)
!7706 = !DILocation(line: 6179, column: 3, scope: !7679)
!7707 = !DILocation(line: 6180, column: 1, scope: !7679)
!7708 = distinct !DISubprogram(name: "default_pe_asm_named_section", scope: !3, file: !3, line: 6183, type: !7565, scopeLine: 6185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7709)
!7709 = !{!7710, !7711, !7712}
!7710 = !DILocalVariable(name: "name", arg: 1, scope: !7708, file: !3, line: 6183, type: !628)
!7711 = !DILocalVariable(name: "flags", arg: 2, scope: !7708, file: !3, line: 6183, type: !7)
!7712 = !DILocalVariable(name: "decl", arg: 3, scope: !7708, file: !3, line: 6184, type: !639)
!7713 = !DILocation(line: 0, scope: !7708)
!7714 = !DILocation(line: 6186, column: 3, scope: !7708)
!7715 = !DILocation(line: 6188, column: 13, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 6188, column: 7)
!7717 = !DILocation(line: 6188, column: 7, scope: !7708)
!7718 = !DILocation(line: 6193, column: 16, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 6189, column: 5)
!7720 = !DILocation(line: 6194, column: 16, scope: !7719)
!7721 = !DILocation(line: 6194, column: 10, scope: !7719)
!7722 = !DILocation(line: 6193, column: 7, scope: !7719)
!7723 = !DILocation(line: 6195, column: 5, scope: !7719)
!7724 = !DILocation(line: 6196, column: 1, scope: !7708)
!7725 = distinct !DISubprogram(name: "default_select_section", scope: !3, file: !3, line: 6201, type: !7726, scopeLine: 6203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7728)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!1044, !639, !623, !692}
!7728 = !{!7729, !7730, !7731}
!7729 = !DILocalVariable(name: "decl", arg: 1, scope: !7725, file: !3, line: 6201, type: !639)
!7730 = !DILocalVariable(name: "reloc", arg: 2, scope: !7725, file: !3, line: 6201, type: !623)
!7731 = !DILocalVariable(name: "align", arg: 3, scope: !7725, file: !3, line: 6202, type: !692)
!7732 = !DILocation(line: 0, scope: !7725)
!7733 = !DILocation(line: 6204, column: 7, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 6204, column: 7)
!7735 = !DILocation(line: 6204, column: 7, scope: !7725)
!7736 = !DILocation(line: 6206, column: 11, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 6206, column: 11)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 6205, column: 5)
!7739 = !DILocation(line: 6206, column: 11, scope: !7738)
!7740 = !DILocation(line: 6207, column: 2, scope: !7737)
!7741 = !DILocation(line: 6209, column: 29, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 6209, column: 12)
!7743 = !DILocation(line: 6209, column: 12, scope: !7734)
!7744 = !DILocation(line: 6211, column: 15, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 6211, column: 11)
!7746 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 6210, column: 5)
!7747 = !DILocation(line: 6211, column: 27, scope: !7745)
!7748 = !DILocation(line: 6211, column: 24, scope: !7745)
!7749 = !DILocation(line: 6212, column: 11, scope: !7745)
!7750 = !DILocation(line: 6213, column: 7, scope: !7745)
!7751 = !DILocation(line: 6213, column: 10, scope: !7745)
!7752 = !DILocation(line: 6214, column: 7, scope: !7745)
!7753 = !DILocation(line: 6214, column: 11, scope: !7745)
!7754 = !DILocation(line: 6211, column: 11, scope: !7746)
!7755 = !DILocation(line: 6215, column: 2, scope: !7745)
!7756 = !DILocation(line: 6217, column: 29, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 6217, column: 12)
!7758 = !DILocation(line: 6217, column: 12, scope: !7742)
!7759 = !DILocation(line: 6218, column: 5, scope: !7757)
!7760 = !DILocation(line: 6219, column: 15, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 6219, column: 12)
!7762 = !DILocation(line: 6219, column: 27, scope: !7761)
!7763 = !DILocation(line: 6219, column: 24, scope: !7761)
!7764 = !DILocation(line: 6220, column: 5, scope: !7761)
!7765 = !DILocation(line: 6222, column: 3, scope: !7725)
!7766 = !DILocation(line: 6223, column: 1, scope: !7725)
!7767 = distinct !DISubprogram(name: "categorize_decl_for_section", scope: !3, file: !3, line: 6226, type: !7768, scopeLine: 6227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7770)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!581, !5916, !623}
!7770 = !{!7771, !7772, !7773}
!7771 = !DILocalVariable(name: "decl", arg: 1, scope: !7767, file: !3, line: 6226, type: !5916)
!7772 = !DILocalVariable(name: "reloc", arg: 2, scope: !7767, file: !3, line: 6226, type: !623)
!7773 = !DILocalVariable(name: "ret", scope: !7767, file: !3, line: 6228, type: !581)
!7774 = !DILocation(line: 0, scope: !7767)
!7775 = !DILocation(line: 6230, column: 7, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 6230, column: 7)
!7777 = !DILocation(line: 6230, column: 24, scope: !7776)
!7778 = !DILocation(line: 6230, column: 7, scope: !7767)
!7779 = !DILocation(line: 6232, column: 29, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 6232, column: 12)
!7781 = !DILocation(line: 6232, column: 12, scope: !7776)
!7782 = !DILocation(line: 6234, column: 11, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 6234, column: 11)
!7784 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 6233, column: 5)
!7785 = !DILocation(line: 0, scope: !7783)
!7786 = !DILocation(line: 6239, column: 29, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 6239, column: 12)
!7788 = !DILocation(line: 6239, column: 12, scope: !7780)
!7789 = !DILocation(line: 6241, column: 11, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 6241, column: 11)
!7791 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 6240, column: 5)
!7792 = !DILocation(line: 6241, column: 11, scope: !7791)
!7793 = !DILocation(line: 6243, column: 18, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 6243, column: 16)
!7795 = !DILocation(line: 6244, column: 9, scope: !7794)
!7796 = !DILocation(line: 6244, column: 12, scope: !7794)
!7797 = !DILocation(line: 6245, column: 9, scope: !7794)
!7798 = !DILocation(line: 6245, column: 14, scope: !7794)
!7799 = !DILocation(line: 6243, column: 16, scope: !7790)
!7800 = !DILocation(line: 6251, column: 32, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 6251, column: 8)
!7802 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 6246, column: 2)
!7803 = !DILocation(line: 6251, column: 16, scope: !7801)
!7804 = !DILocation(line: 6251, column: 14, scope: !7801)
!7805 = !DILocation(line: 6251, column: 8, scope: !7802)
!7806 = !DILocation(line: 6252, column: 18, scope: !7801)
!7807 = !DILocation(line: 6252, column: 12, scope: !7801)
!7808 = !DILocation(line: 6252, column: 6, scope: !7801)
!7809 = !DILocation(line: 6256, column: 40, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 6256, column: 16)
!7811 = !DILocation(line: 6256, column: 24, scope: !7810)
!7812 = !DILocation(line: 6256, column: 22, scope: !7810)
!7813 = !DILocation(line: 6256, column: 16, scope: !7794)
!7814 = !DILocation(line: 6257, column: 14, scope: !7810)
!7815 = !DILocation(line: 6257, column: 8, scope: !7810)
!7816 = !DILocation(line: 6257, column: 2, scope: !7810)
!7817 = !DILocation(line: 6258, column: 16, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 6258, column: 16)
!7819 = !DILocation(line: 6258, column: 25, scope: !7818)
!7820 = !DILocation(line: 6258, column: 46, scope: !7818)
!7821 = !DILocation(line: 6258, column: 22, scope: !7818)
!7822 = !DILocation(line: 6263, column: 16, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 6263, column: 16)
!7824 = !DILocation(line: 6263, column: 48, scope: !7823)
!7825 = !DILocation(line: 6268, column: 29, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 6268, column: 12)
!7827 = !DILocation(line: 6268, column: 12, scope: !7787)
!7828 = !DILocation(line: 6270, column: 36, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 6270, column: 11)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 6269, column: 5)
!7831 = !DILocation(line: 6270, column: 20, scope: !7829)
!7832 = !DILocation(line: 6270, column: 18, scope: !7829)
!7833 = !DILocation(line: 6271, column: 4, scope: !7829)
!7834 = !DILocation(line: 6271, column: 7, scope: !7829)
!7835 = !DILocation(line: 6272, column: 4, scope: !7829)
!7836 = !DILocation(line: 6272, column: 9, scope: !7829)
!7837 = !DILocation(line: 6270, column: 11, scope: !7830)
!7838 = !DILocation(line: 0, scope: !7787)
!7839 = !DILocation(line: 6281, column: 7, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 6281, column: 7)
!7841 = !DILocation(line: 6281, column: 24, scope: !7840)
!7842 = !DILocation(line: 6281, column: 36, scope: !7840)
!7843 = !DILocation(line: 6281, column: 39, scope: !7840)
!7844 = !DILocation(line: 6281, column: 7, scope: !7767)
!7845 = !DILocation(line: 6283, column: 33, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 6283, column: 11)
!7847 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 6282, column: 5)
!7848 = !DILocation(line: 6283, column: 11, scope: !7847)
!7849 = !DILocation(line: 6285, column: 8, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 6285, column: 8)
!7851 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 6284, column: 2)
!7852 = !DILocation(line: 6285, column: 8, scope: !7851)
!7853 = !DILocation(line: 6287, column: 27, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 6287, column: 12)
!7855 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 6286, column: 6)
!7856 = !DILocation(line: 6287, column: 12, scope: !7854)
!7857 = !DILocation(line: 6287, column: 12, scope: !7855)
!7858 = !DILocation(line: 6289, column: 6, scope: !7855)
!7859 = !DILocation(line: 6292, column: 27, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 6292, column: 12)
!7861 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 6291, column: 6)
!7862 = !DILocation(line: 6292, column: 12, scope: !7860)
!7863 = !DILocation(line: 6292, column: 12, scope: !7861)
!7864 = !DILocation(line: 6298, column: 20, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 6298, column: 16)
!7866 = !DILocation(line: 6299, column: 9, scope: !7865)
!7867 = !DILocation(line: 6299, column: 13, scope: !7865)
!7868 = !DILocation(line: 6300, column: 6, scope: !7865)
!7869 = !DILocation(line: 6300, column: 28, scope: !7865)
!7870 = !DILocation(line: 6300, column: 9, scope: !7865)
!7871 = !DILocation(line: 6298, column: 16, scope: !7846)
!7872 = !DILocation(line: 6307, column: 20, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 6307, column: 12)
!7874 = !DILocation(line: 6307, column: 12, scope: !7873)
!7875 = !DILocation(line: 6307, column: 12, scope: !7840)
!7876 = !DILocation(line: 6309, column: 15, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 6309, column: 11)
!7878 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 6308, column: 5)
!7879 = !DILocation(line: 6309, column: 11, scope: !7878)
!7880 = !DILocation(line: 6311, column: 24, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 6311, column: 16)
!7882 = !DILocation(line: 6311, column: 16, scope: !7881)
!7883 = !DILocation(line: 6311, column: 52, scope: !7881)
!7884 = !DILocation(line: 6311, column: 45, scope: !7881)
!7885 = !DILocation(line: 6318, column: 1, scope: !7767)
!7886 = distinct !DISubprogram(name: "bss_initializer_p", scope: !3, file: !3, line: 1100, type: !5914, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7887)
!7887 = !{!7888}
!7888 = !DILocalVariable(name: "decl", arg: 1, scope: !7886, file: !3, line: 1100, type: !5916)
!7889 = !DILocation(line: 0, scope: !7886)
!7890 = !DILocation(line: 1102, column: 11, scope: !7886)
!7891 = !DILocation(line: 1102, column: 31, scope: !7886)
!7892 = !DILocation(line: 1103, column: 4, scope: !7886)
!7893 = !DILocation(line: 1103, column: 30, scope: !7886)
!7894 = !DILocation(line: 1103, column: 27, scope: !7886)
!7895 = !DILocation(line: 1104, column: 4, scope: !7886)
!7896 = !DILocation(line: 1104, column: 8, scope: !7886)
!7897 = !DILocation(line: 1107, column: 8, scope: !7886)
!7898 = !DILocation(line: 1107, column: 12, scope: !7886)
!7899 = !DILocation(line: 1108, column: 8, scope: !7886)
!7900 = !DILocation(line: 1108, column: 11, scope: !7886)
!7901 = !DILocation(line: 1102, column: 3, scope: !7886)
!7902 = distinct !DISubprogram(name: "default_elf_select_section", scope: !3, file: !3, line: 6341, type: !7726, scopeLine: 6343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7903)
!7903 = !{!7904, !7905, !7906, !7907}
!7904 = !DILocalVariable(name: "decl", arg: 1, scope: !7902, file: !3, line: 6341, type: !639)
!7905 = !DILocalVariable(name: "reloc", arg: 2, scope: !7902, file: !3, line: 6341, type: !623)
!7906 = !DILocalVariable(name: "align", arg: 3, scope: !7902, file: !3, line: 6342, type: !692)
!7907 = !DILocalVariable(name: "sname", scope: !7902, file: !3, line: 6344, type: !628)
!7908 = !DILocation(line: 0, scope: !7902)
!7909 = !DILocation(line: 6345, column: 11, scope: !7902)
!7910 = !DILocation(line: 6345, column: 3, scope: !7902)
!7911 = !DILocation(line: 6349, column: 7, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 6346, column: 5)
!7913 = !DILocation(line: 6351, column: 14, scope: !7912)
!7914 = !DILocation(line: 6351, column: 7, scope: !7912)
!7915 = !DILocation(line: 6353, column: 14, scope: !7912)
!7916 = !DILocation(line: 6353, column: 7, scope: !7912)
!7917 = !DILocation(line: 6355, column: 40, scope: !7912)
!7918 = !DILocation(line: 6355, column: 14, scope: !7912)
!7919 = !DILocation(line: 6355, column: 7, scope: !7912)
!7920 = !DILocation(line: 6357, column: 42, scope: !7912)
!7921 = !DILocation(line: 6357, column: 14, scope: !7912)
!7922 = !DILocation(line: 6357, column: 7, scope: !7912)
!7923 = !DILocation(line: 6362, column: 14, scope: !7912)
!7924 = !DILocation(line: 6362, column: 7, scope: !7912)
!7925 = !DILocation(line: 6365, column: 7, scope: !7912)
!7926 = !DILocation(line: 6368, column: 7, scope: !7912)
!7927 = !DILocation(line: 6371, column: 7, scope: !7912)
!7928 = !DILocation(line: 6374, column: 7, scope: !7912)
!7929 = !DILocation(line: 6377, column: 7, scope: !7912)
!7930 = !DILocation(line: 6380, column: 7, scope: !7912)
!7931 = !DILocation(line: 6382, column: 11, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 6382, column: 11)
!7933 = !DILocation(line: 6382, column: 11, scope: !7912)
!7934 = !DILocation(line: 6383, column: 2, scope: !7932)
!7935 = !DILocation(line: 6388, column: 7, scope: !7912)
!7936 = !DILocation(line: 6391, column: 7, scope: !7912)
!7937 = !DILocation(line: 6393, column: 30, scope: !7912)
!7938 = !DILocation(line: 6394, column: 7, scope: !7912)
!7939 = !DILocation(line: 6396, column: 30, scope: !7912)
!7940 = !DILocation(line: 6397, column: 7, scope: !7912)
!7941 = !DILocation(line: 6399, column: 7, scope: !7912)
!7942 = !DILocation(line: 6400, column: 5, scope: !7912)
!7943 = !DILocation(line: 6402, column: 8, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 6402, column: 7)
!7945 = !DILocation(line: 6402, column: 7, scope: !7902)
!7946 = !DILocation(line: 6404, column: 10, scope: !7902)
!7947 = !DILocation(line: 6404, column: 3, scope: !7902)
!7948 = !DILocation(line: 6405, column: 1, scope: !7902)
!7949 = distinct !DISubprogram(name: "mergeable_string_section", scope: !3, file: !3, line: 931, type: !7950, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7952)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!1044, !639, !692, !7}
!7952 = !{!7953, !7954, !7955, !7956, !7957, !7960, !7961, !7962, !7963, !7964, !7965}
!7953 = !DILocalVariable(name: "decl", arg: 1, scope: !7949, file: !3, line: 931, type: !639)
!7954 = !DILocalVariable(name: "align", arg: 2, scope: !7949, file: !3, line: 932, type: !692)
!7955 = !DILocalVariable(name: "flags", arg: 3, scope: !7949, file: !3, line: 933, type: !7)
!7956 = !DILocalVariable(name: "len", scope: !7949, file: !3, line: 935, type: !694)
!7957 = !DILocalVariable(name: "mode", scope: !7958, file: !3, line: 944, type: !5)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 943, column: 5)
!7959 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 937, column: 7)
!7960 = !DILocalVariable(name: "modesize", scope: !7958, file: !3, line: 945, type: !7)
!7961 = !DILocalVariable(name: "str", scope: !7958, file: !3, line: 946, type: !628)
!7962 = !DILocalVariable(name: "i", scope: !7958, file: !3, line: 947, type: !694)
!7963 = !DILocalVariable(name: "j", scope: !7958, file: !3, line: 948, type: !623)
!7964 = !DILocalVariable(name: "unit", scope: !7958, file: !3, line: 948, type: !623)
!7965 = !DILocalVariable(name: "name", scope: !7958, file: !3, line: 949, type: !7966)
!7966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 240, elements: !7967)
!7967 = !{!7968}
!7968 = !DISubrange(count: 30)
!7969 = !DILocation(line: 0, scope: !7949)
!7970 = !DILocation(line: 937, column: 29, scope: !7959)
!7971 = !DILocation(line: 938, column: 7, scope: !7959)
!7972 = !DILocation(line: 938, column: 10, scope: !7959)
!7973 = !DILocation(line: 938, column: 27, scope: !7959)
!7974 = !DILocation(line: 939, column: 7, scope: !7959)
!7975 = !DILocation(line: 939, column: 10, scope: !7959)
!7976 = !DILocation(line: 939, column: 39, scope: !7959)
!7977 = !DILocation(line: 940, column: 16, scope: !7959)
!7978 = !DILocation(line: 940, column: 7, scope: !7959)
!7979 = !DILocation(line: 941, column: 17, scope: !7959)
!7980 = !DILocation(line: 941, column: 55, scope: !7959)
!7981 = !DILocation(line: 942, column: 7, scope: !7959)
!7982 = !DILocation(line: 942, column: 10, scope: !7959)
!7983 = !DILocation(line: 942, column: 36, scope: !7959)
!7984 = !DILocation(line: 937, column: 7, scope: !7949)
!7985 = !DILocation(line: 949, column: 7, scope: !7958)
!7986 = !DILocation(line: 949, column: 12, scope: !7958)
!7987 = !DILocation(line: 951, column: 14, scope: !7958)
!7988 = !DILocation(line: 0, scope: !7958)
!7989 = !DILocation(line: 952, column: 18, scope: !7958)
!7990 = !DILocation(line: 953, column: 25, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 953, column: 11)
!7992 = !DILocation(line: 954, column: 35, scope: !7991)
!7993 = !{i32 0, i32 9}
!7994 = !DILocation(line: 953, column: 11, scope: !7958)
!7995 = !DILocation(line: 956, column: 16, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 956, column: 8)
!7997 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 955, column: 2)
!7998 = !DILocation(line: 956, column: 14, scope: !7996)
!7999 = !DILocation(line: 956, column: 8, scope: !7997)
!8000 = !DILocation(line: 959, column: 10, scope: !7997)
!8001 = !DILocation(line: 0, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 963, column: 4)
!8003 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 963, column: 4)
!8004 = !DILocation(line: 963, column: 9, scope: !8003)
!8005 = !DILocation(line: 0, scope: !8003)
!8006 = !DILocation(line: 963, column: 18, scope: !8002)
!8007 = !DILocation(line: 963, column: 4, scope: !8003)
!8008 = !DILocation(line: 965, column: 22, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 965, column: 8)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 965, column: 8)
!8011 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 964, column: 6)
!8012 = !DILocation(line: 965, column: 8, scope: !8010)
!8013 = !DILocation(line: 0, scope: !8010)
!8014 = !DILocation(line: 966, column: 13, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 966, column: 7)
!8016 = !DILocation(line: 966, column: 7, scope: !8015)
!8017 = !DILocation(line: 966, column: 18, scope: !8015)
!8018 = !DILocation(line: 966, column: 7, scope: !8009)
!8019 = !DILocation(line: 965, column: 31, scope: !8009)
!8020 = !DILocation(line: 965, column: 8, scope: !8009)
!8021 = distinct !{!8021, !8012, !8022}
!8022 = !DILocation(line: 967, column: 5, scope: !8010)
!8023 = !DILocation(line: 968, column: 14, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 968, column: 12)
!8025 = !DILocation(line: 968, column: 12, scope: !8011)
!8026 = !DILocation(line: 963, column: 27, scope: !8002)
!8027 = !DILocation(line: 963, column: 4, scope: !8002)
!8028 = distinct !{!8028, !8007, !8029}
!8029 = !DILocation(line: 970, column: 6, scope: !8003)
!8030 = !DILocation(line: 971, column: 17, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 971, column: 8)
!8032 = !DILocation(line: 971, column: 10, scope: !8031)
!8033 = !DILocation(line: 971, column: 8, scope: !7997)
!8034 = !DILocation(line: 974, column: 23, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 972, column: 6)
!8036 = !DILocation(line: 974, column: 10, scope: !8035)
!8037 = !DILocation(line: 973, column: 8, scope: !8035)
!8038 = !DILocation(line: 975, column: 14, scope: !8035)
!8039 = !DILocation(line: 976, column: 15, scope: !8035)
!8040 = !DILocation(line: 976, column: 8, scope: !8035)
!8041 = !DILocation(line: 979, column: 5, scope: !7959)
!8042 = !DILocation(line: 981, column: 10, scope: !7949)
!8043 = !DILocation(line: 981, column: 3, scope: !7949)
!8044 = !DILocation(line: 982, column: 1, scope: !7949)
!8045 = distinct !DISubprogram(name: "default_unique_section", scope: !3, file: !3, line: 6411, type: !1791, scopeLine: 6412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8046)
!8046 = !{!8047, !8048, !8049, !8050, !8051, !8052, !8053}
!8047 = !DILocalVariable(name: "decl", arg: 1, scope: !8045, file: !3, line: 6411, type: !639)
!8048 = !DILocalVariable(name: "reloc", arg: 2, scope: !8045, file: !3, line: 6411, type: !623)
!8049 = !DILocalVariable(name: "one_only", scope: !8045, file: !3, line: 6414, type: !622)
!8050 = !DILocalVariable(name: "prefix", scope: !8045, file: !3, line: 6415, type: !628)
!8051 = !DILocalVariable(name: "name", scope: !8045, file: !3, line: 6415, type: !628)
!8052 = !DILocalVariable(name: "linkonce", scope: !8045, file: !3, line: 6415, type: !628)
!8053 = !DILocalVariable(name: "string", scope: !8045, file: !3, line: 6416, type: !625)
!8054 = !DILocation(line: 0, scope: !8045)
!8055 = !DILocation(line: 6418, column: 11, scope: !8045)
!8056 = !DILocation(line: 6418, column: 3, scope: !8045)
!8057 = !DILocation(line: 6422, column: 7, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 6419, column: 5)
!8059 = !DILocation(line: 6428, column: 7, scope: !8058)
!8060 = !DILocation(line: 6431, column: 7, scope: !8058)
!8061 = !DILocation(line: 6434, column: 7, scope: !8058)
!8062 = !DILocation(line: 6437, column: 7, scope: !8058)
!8063 = !DILocation(line: 6440, column: 7, scope: !8058)
!8064 = !DILocation(line: 6443, column: 7, scope: !8058)
!8065 = !DILocation(line: 6446, column: 7, scope: !8058)
!8066 = !DILocation(line: 6449, column: 7, scope: !8058)
!8067 = !DILocation(line: 6452, column: 7, scope: !8058)
!8068 = !DILocation(line: 6455, column: 7, scope: !8058)
!8069 = !DILocation(line: 6458, column: 7, scope: !8058)
!8070 = !DILocation(line: 6461, column: 7, scope: !8058)
!8071 = !DILocation(line: 6463, column: 31, scope: !8058)
!8072 = !DILocation(line: 6464, column: 7, scope: !8058)
!8073 = !DILocation(line: 6466, column: 31, scope: !8058)
!8074 = !DILocation(line: 6467, column: 7, scope: !8058)
!8075 = !DILocation(line: 6469, column: 7, scope: !8058)
!8076 = !DILocation(line: 6470, column: 5, scope: !8058)
!8077 = !DILocation(line: 6472, column: 10, scope: !8045)
!8078 = !DILocation(line: 6473, column: 18, scope: !8045)
!8079 = !DILocation(line: 6473, column: 10, scope: !8045)
!8080 = !DILocation(line: 6479, column: 12, scope: !8045)
!8081 = !DILocation(line: 6481, column: 44, scope: !8045)
!8082 = !DILocation(line: 6481, column: 30, scope: !8045)
!8083 = !DILocation(line: 6481, column: 3, scope: !8045)
!8084 = !DILocation(line: 6481, column: 28, scope: !8045)
!8085 = !DILocation(line: 6482, column: 1, scope: !8045)
!8086 = distinct !DISubprogram(name: "default_select_rtx_section", scope: !3, file: !3, line: 6529, type: !8087, scopeLine: 6532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8089)
!8087 = !DISubroutineType(types: !8088)
!8088 = !{!1044, !5, !811, !692}
!8089 = !{!8090, !8091, !8092}
!8090 = !DILocalVariable(name: "mode", arg: 1, scope: !8086, file: !3, line: 6529, type: !5)
!8091 = !DILocalVariable(name: "x", arg: 2, scope: !8086, file: !3, line: 6530, type: !811)
!8092 = !DILocalVariable(name: "align", arg: 3, scope: !8086, file: !3, line: 6531, type: !692)
!8093 = !DILocation(line: 0, scope: !8086)
!8094 = !DILocation(line: 6533, column: 7, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 6533, column: 7)
!8096 = !DILocation(line: 6533, column: 51, scope: !8095)
!8097 = !DILocation(line: 6533, column: 35, scope: !8095)
!8098 = !DILocation(line: 6533, column: 33, scope: !8095)
!8099 = !DILocation(line: 6533, column: 7, scope: !8086)
!8100 = !DILocation(line: 6537, column: 1, scope: !8086)
!8101 = distinct !DISubprogram(name: "compute_reloc_for_rtx", scope: !3, file: !3, line: 6510, type: !8102, scopeLine: 6511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8104)
!8102 = !DISubroutineType(types: !8103)
!8103 = !{!623, !811}
!8104 = !{!8105, !8106}
!8105 = !DILocalVariable(name: "x", arg: 1, scope: !8101, file: !3, line: 6510, type: !811)
!8106 = !DILocalVariable(name: "reloc", scope: !8101, file: !3, line: 6512, type: !623)
!8107 = !DILocation(line: 0, scope: !8101)
!8108 = !DILocation(line: 6512, column: 3, scope: !8101)
!8109 = !DILocation(line: 6514, column: 11, scope: !8101)
!8110 = !DILocation(line: 6514, column: 3, scope: !8101)
!8111 = !DILocation(line: 6519, column: 13, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 6515, column: 5)
!8113 = !DILocation(line: 6520, column: 7, scope: !8112)
!8114 = !DILocation(line: 6521, column: 14, scope: !8112)
!8115 = !DILocation(line: 6521, column: 7, scope: !8112)
!8116 = !DILocation(line: 0, scope: !8112)
!8117 = !DILocation(line: 6526, column: 1, scope: !8101)
!8118 = distinct !DISubprogram(name: "default_elf_select_rtx_section", scope: !3, file: !3, line: 6540, type: !8087, scopeLine: 6542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8119)
!8119 = !{!8120, !8121, !8122, !8123}
!8120 = !DILocalVariable(name: "mode", arg: 1, scope: !8118, file: !3, line: 6540, type: !5)
!8121 = !DILocalVariable(name: "x", arg: 2, scope: !8118, file: !3, line: 6540, type: !811)
!8122 = !DILocalVariable(name: "align", arg: 3, scope: !8118, file: !3, line: 6541, type: !692)
!8123 = !DILocalVariable(name: "reloc", scope: !8118, file: !3, line: 6543, type: !623)
!8124 = !DILocation(line: 0, scope: !8118)
!8125 = !DILocation(line: 6543, column: 15, scope: !8118)
!8126 = !DILocation(line: 6547, column: 31, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 6547, column: 7)
!8128 = !DILocation(line: 6547, column: 15, scope: !8127)
!8129 = !DILocation(line: 6547, column: 13, scope: !8127)
!8130 = !DILocation(line: 6547, column: 7, scope: !8118)
!8131 = !DILocation(line: 6549, column: 17, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 6549, column: 11)
!8133 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 6548, column: 5)
!8134 = !DILocation(line: 6549, column: 11, scope: !8133)
!8135 = !DILocation(line: 6550, column: 9, scope: !8132)
!8136 = !DILocation(line: 6550, column: 2, scope: !8132)
!8137 = !DILocation(line: 6552, column: 9, scope: !8132)
!8138 = !DILocation(line: 6552, column: 2, scope: !8132)
!8139 = !DILocation(line: 6555, column: 10, scope: !8118)
!8140 = !DILocation(line: 6555, column: 3, scope: !8118)
!8141 = !DILocation(line: 6556, column: 1, scope: !8118)
!8142 = distinct !DISubprogram(name: "default_encode_section_info", scope: !3, file: !3, line: 6561, type: !8143, scopeLine: 6562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8145)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{null, !639, !811, !623}
!8145 = !{!8146, !8147, !8148, !8149, !8150}
!8146 = !DILocalVariable(name: "decl", arg: 1, scope: !8142, file: !3, line: 6561, type: !639)
!8147 = !DILocalVariable(name: "rtl", arg: 2, scope: !8142, file: !3, line: 6561, type: !811)
!8148 = !DILocalVariable(name: "first", arg: 3, scope: !8142, file: !3, line: 6561, type: !623)
!8149 = !DILocalVariable(name: "symbol", scope: !8142, file: !3, line: 6563, type: !811)
!8150 = !DILocalVariable(name: "flags", scope: !8142, file: !3, line: 6564, type: !623)
!8151 = !DILocation(line: 0, scope: !8142)
!8152 = !DILocation(line: 6567, column: 8, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6567, column: 7)
!8154 = !DILocation(line: 6567, column: 7, scope: !8142)
!8155 = !DILocation(line: 6569, column: 12, scope: !8142)
!8156 = !DILocation(line: 6570, column: 7, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6570, column: 7)
!8158 = !DILocation(line: 6570, column: 25, scope: !8157)
!8159 = !DILocation(line: 6570, column: 7, scope: !8142)
!8160 = !DILocation(line: 6573, column: 11, scope: !8142)
!8161 = !DILocation(line: 6573, column: 37, scope: !8142)
!8162 = !DILocation(line: 6574, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6574, column: 7)
!8164 = !DILocation(line: 6574, column: 24, scope: !8163)
!8165 = !DILocation(line: 6574, column: 7, scope: !8142)
!8166 = !DILocation(line: 6576, column: 15, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6576, column: 7)
!8168 = !DILocation(line: 6576, column: 7, scope: !8167)
!8169 = !DILocation(line: 6576, column: 7, scope: !8142)
!8170 = !DILocation(line: 6578, column: 7, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6578, column: 7)
!8172 = !DILocation(line: 6578, column: 24, scope: !8171)
!8173 = !DILocation(line: 6578, column: 36, scope: !8171)
!8174 = !DILocation(line: 6578, column: 39, scope: !8171)
!8175 = !DILocation(line: 6579, column: 7, scope: !8171)
!8176 = !DILocation(line: 6579, column: 10, scope: !8171)
!8177 = !DILocation(line: 6579, column: 32, scope: !8171)
!8178 = !DILocation(line: 6578, column: 7, scope: !8142)
!8179 = !DILocation(line: 6580, column: 36, scope: !8171)
!8180 = !DILocation(line: 6580, column: 11, scope: !8171)
!8181 = !DILocation(line: 6580, column: 5, scope: !8171)
!8182 = !DILocation(line: 6581, column: 20, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 6581, column: 12)
!8184 = !DILocation(line: 6581, column: 12, scope: !8183)
!8185 = !DILocation(line: 6582, column: 11, scope: !8183)
!8186 = !DILocation(line: 6581, column: 12, scope: !8171)
!8187 = !DILocation(line: 6586, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 6586, column: 7)
!8189 = !DILocation(line: 0, scope: !8171)
!8190 = !DILocation(line: 6586, column: 21, scope: !8188)
!8191 = !DILocation(line: 6586, column: 24, scope: !8188)
!8192 = !DILocation(line: 6586, column: 45, scope: !8188)
!8193 = !DILocation(line: 6586, column: 7, scope: !8142)
!8194 = !DILocation(line: 6589, column: 29, scope: !8142)
!8195 = !DILocation(line: 6590, column: 1, scope: !8142)
!8196 = distinct !DISubprogram(name: "default_strip_name_encoding", scope: !3, file: !3, line: 6596, type: !3128, scopeLine: 6597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8197)
!8197 = !{!8198}
!8198 = !DILocalVariable(name: "str", arg: 1, scope: !8196, file: !3, line: 6596, type: !628)
!8199 = !DILocation(line: 0, scope: !8196)
!8200 = !DILocation(line: 6598, column: 17, scope: !8196)
!8201 = !DILocation(line: 6598, column: 22, scope: !8196)
!8202 = !DILocation(line: 6598, column: 14, scope: !8196)
!8203 = !DILocation(line: 6598, column: 3, scope: !8196)
!8204 = distinct !DISubprogram(name: "default_asm_output_anchor", scope: !3, file: !3, line: 6606, type: !4656, scopeLine: 6607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8205)
!8205 = !{!8206, !8207}
!8206 = !DILocalVariable(name: "symbol", arg: 1, scope: !8204, file: !3, line: 6606, type: !811)
!8207 = !DILocalVariable(name: "buffer", scope: !8204, file: !3, line: 6608, type: !3793)
!8208 = !DILocation(line: 0, scope: !8204)
!8209 = !DILocation(line: 6608, column: 3, scope: !8204)
!8210 = !DILocation(line: 6608, column: 8, scope: !8204)
!8211 = !DILocation(line: 6611, column: 5, scope: !8204)
!8212 = !DILocation(line: 6610, column: 3, scope: !8204)
!8213 = !DILocation(line: 6612, column: 3, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 6612, column: 3)
!8215 = !DILocation(line: 6613, column: 1, scope: !8204)
!8216 = distinct !DISubprogram(name: "default_use_anchors_for_symbol_p", scope: !3, file: !3, line: 6619, type: !8217, scopeLine: 6620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8219)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!622, !5801}
!8219 = !{!8220, !8221, !8222}
!8220 = !DILocalVariable(name: "symbol", arg: 1, scope: !8216, file: !3, line: 6619, type: !5801)
!8221 = !DILocalVariable(name: "sect", scope: !8216, file: !3, line: 6621, type: !1044)
!8222 = !DILocalVariable(name: "decl", scope: !8216, file: !3, line: 6622, type: !639)
!8223 = !DILocation(line: 0, scope: !8216)
!8224 = !DILocation(line: 6626, column: 10, scope: !8216)
!8225 = !DILocation(line: 6626, column: 37, scope: !8216)
!8226 = !DILocation(line: 6627, column: 20, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 6627, column: 7)
!8228 = !DILocation(line: 6627, column: 26, scope: !8227)
!8229 = !DILocation(line: 6627, column: 7, scope: !8216)
!8230 = !DILocation(line: 6632, column: 26, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 6632, column: 7)
!8232 = !DILocation(line: 6632, column: 7, scope: !8216)
!8233 = !DILocation(line: 6635, column: 10, scope: !8216)
!8234 = !DILocation(line: 6636, column: 7, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 6636, column: 7)
!8236 = !DILocation(line: 6636, column: 12, scope: !8235)
!8237 = !DILocation(line: 6636, column: 15, scope: !8235)
!8238 = !DILocation(line: 6636, column: 7, scope: !8216)
!8239 = !DILocation(line: 6640, column: 20, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6640, column: 11)
!8241 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 6637, column: 5)
!8242 = !DILocation(line: 6640, column: 12, scope: !8240)
!8243 = !DILocation(line: 6640, column: 11, scope: !8241)
!8244 = !DILocation(line: 6648, column: 19, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 6648, column: 11)
!8246 = !DILocation(line: 6648, column: 11, scope: !8245)
!8247 = !DILocation(line: 6648, column: 11, scope: !8241)
!8248 = !DILocation(line: 6651, column: 3, scope: !8216)
!8249 = !DILocation(line: 6652, column: 1, scope: !8216)
!8250 = distinct !DISubprogram(name: "default_binds_local_p", scope: !3, file: !3, line: 6658, type: !5914, scopeLine: 6659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8251)
!8251 = !{!8252}
!8252 = !DILocalVariable(name: "exp", arg: 1, scope: !8250, file: !3, line: 6658, type: !5916)
!8253 = !DILocation(line: 0, scope: !8250)
!8254 = !DILocation(line: 6660, column: 40, scope: !8250)
!8255 = !DILocation(line: 6660, column: 10, scope: !8250)
!8256 = !DILocation(line: 6660, column: 3, scope: !8250)
!8257 = distinct !DISubprogram(name: "default_binds_local_p_1", scope: !3, file: !3, line: 6664, type: !7549, scopeLine: 6665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8258)
!8258 = !{!8259, !8260, !8261}
!8259 = !DILocalVariable(name: "exp", arg: 1, scope: !8257, file: !3, line: 6664, type: !5916)
!8260 = !DILocalVariable(name: "shlib", arg: 2, scope: !8257, file: !3, line: 6664, type: !623)
!8261 = !DILocalVariable(name: "local_p", scope: !8257, file: !3, line: 6666, type: !622)
!8262 = !DILocation(line: 0, scope: !8257)
!8263 = !DILocation(line: 6669, column: 8, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 6669, column: 7)
!8265 = !DILocation(line: 6669, column: 7, scope: !8257)
!8266 = !DILocation(line: 6673, column: 41, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 6673, column: 12)
!8268 = !DILocation(line: 6673, column: 12, scope: !8267)
!8269 = !DILocation(line: 6673, column: 12, scope: !8264)
!8270 = !DILocation(line: 6676, column: 14, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 6676, column: 12)
!8272 = !DILocation(line: 6676, column: 12, scope: !8267)
!8273 = !DILocation(line: 6680, column: 12, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 6680, column: 12)
!8275 = !DILocation(line: 6681, column: 5, scope: !8274)
!8276 = !DILocation(line: 6681, column: 8, scope: !8274)
!8277 = !DILocation(line: 6681, column: 30, scope: !8274)
!8278 = !DILocation(line: 6680, column: 12, scope: !8271)
!8279 = !DILocation(line: 6684, column: 12, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 6684, column: 12)
!8281 = !DILocation(line: 6684, column: 12, scope: !8274)
!8282 = !DILocation(line: 6688, column: 12, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 6688, column: 12)
!8284 = !DILocation(line: 6688, column: 34, scope: !8283)
!8285 = !DILocation(line: 6688, column: 12, scope: !8280)
!8286 = !DILocation(line: 6692, column: 12, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 6692, column: 12)
!8288 = !DILocation(line: 6692, column: 12, scope: !8283)
!8289 = !DILocation(line: 6697, column: 12, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 6697, column: 12)
!8291 = !DILocation(line: 6697, column: 12, scope: !8287)
!8292 = !DILocation(line: 6698, column: 15, scope: !8290)
!8293 = !DILocation(line: 6698, column: 5, scope: !8290)
!8294 = !DILocation(line: 6701, column: 12, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 6701, column: 12)
!8296 = !DILocation(line: 6702, column: 5, scope: !8295)
!8297 = !DILocation(line: 6702, column: 9, scope: !8295)
!8298 = !DILocation(line: 6702, column: 28, scope: !8295)
!8299 = !DILocation(line: 6703, column: 9, scope: !8295)
!8300 = !DILocation(line: 6703, column: 34, scope: !8295)
!8301 = !DILocation(line: 6703, column: 31, scope: !8295)
!8302 = !DILocation(line: 6701, column: 12, scope: !8290)
!8303 = !DILocation(line: 0, scope: !8264)
!8304 = !DILocation(line: 6710, column: 3, scope: !8257)
!8305 = distinct !DISubprogram(name: "default_globalize_label", scope: !3, file: !3, line: 6718, type: !3953, scopeLine: 6719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8306)
!8306 = !{!8307, !8308}
!8307 = !DILocalVariable(name: "stream", arg: 1, scope: !8305, file: !3, line: 6718, type: !2062)
!8308 = !DILocalVariable(name: "name", arg: 2, scope: !8305, file: !3, line: 6718, type: !628)
!8309 = !DILocation(line: 0, scope: !8305)
!8310 = !DILocation(line: 6720, column: 3, scope: !8305)
!8311 = !DILocation(line: 6721, column: 3, scope: !8305)
!8312 = !DILocation(line: 6722, column: 3, scope: !8305)
!8313 = !DILocation(line: 6723, column: 1, scope: !8305)
!8314 = distinct !DISubprogram(name: "default_globalize_decl_name", scope: !3, file: !3, line: 6728, type: !8315, scopeLine: 6729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{null, !2062, !639}
!8317 = !{!8318, !8319, !8320}
!8318 = !DILocalVariable(name: "stream", arg: 1, scope: !8314, file: !3, line: 6728, type: !2062)
!8319 = !DILocalVariable(name: "decl", arg: 2, scope: !8314, file: !3, line: 6728, type: !639)
!8320 = !DILocalVariable(name: "name", scope: !8314, file: !3, line: 6730, type: !628)
!8321 = !DILocation(line: 0, scope: !8314)
!8322 = !DILocation(line: 6730, column: 22, scope: !8314)
!8323 = !DILocation(line: 6731, column: 19, scope: !8314)
!8324 = !DILocation(line: 6731, column: 3, scope: !8314)
!8325 = !DILocation(line: 6732, column: 1, scope: !8314)
!8326 = distinct !DISubprogram(name: "default_emit_unwind_label", scope: !3, file: !3, line: 6738, type: !8327, scopeLine: 6742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8329)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{null, !2062, !639, !623, !623}
!8329 = !{!8330, !8331, !8332, !8333}
!8330 = !DILocalVariable(name: "stream", arg: 1, scope: !8326, file: !3, line: 6738, type: !2062)
!8331 = !DILocalVariable(name: "decl", arg: 2, scope: !8326, file: !3, line: 6739, type: !639)
!8332 = !DILocalVariable(name: "for_eh", arg: 3, scope: !8326, file: !3, line: 6740, type: !623)
!8333 = !DILocalVariable(name: "empty", arg: 4, scope: !8326, file: !3, line: 6741, type: !623)
!8334 = !DILocation(line: 0, scope: !8326)
!8335 = !DILocation(line: 6743, column: 1, scope: !8326)
!8336 = distinct !DISubprogram(name: "default_emit_except_table_label", scope: !3, file: !3, line: 6749, type: !8337, scopeLine: 6750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !2062}
!8339 = !{!8340}
!8340 = !DILocalVariable(name: "stream", arg: 1, scope: !8336, file: !3, line: 6749, type: !2062)
!8341 = !DILocation(line: 0, scope: !8336)
!8342 = !DILocation(line: 6751, column: 1, scope: !8336)
!8343 = distinct !DISubprogram(name: "default_internal_label", scope: !3, file: !3, line: 6757, type: !8344, scopeLine: 6759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{null, !2062, !628, !692}
!8346 = !{!8347, !8348, !8349, !8350}
!8347 = !DILocalVariable(name: "stream", arg: 1, scope: !8343, file: !3, line: 6757, type: !2062)
!8348 = !DILocalVariable(name: "prefix", arg: 2, scope: !8343, file: !3, line: 6757, type: !628)
!8349 = !DILocalVariable(name: "labelno", arg: 3, scope: !8343, file: !3, line: 6758, type: !692)
!8350 = !DILocalVariable(name: "buf", scope: !8343, file: !3, line: 6760, type: !8351)
!8351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!8352 = !DILocation(line: 0, scope: !8343)
!8353 = !DILocation(line: 6760, column: 30, scope: !8343)
!8354 = !DILocation(line: 6761, column: 3, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 6761, column: 3)
!8356 = !DILocation(line: 6762, column: 3, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 6762, column: 3)
!8358 = !DILocation(line: 6763, column: 1, scope: !8343)
!8359 = distinct !DISubprogram(name: "default_file_start", scope: !3, file: !3, line: 6768, type: !2666, scopeLine: 6769, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!8360 = !DILocation(line: 6770, column: 15, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 6770, column: 7)
!8362 = !DILocation(line: 6770, column: 7, scope: !8361)
!8363 = !DILocation(line: 6771, column: 12, scope: !8361)
!8364 = !DILocation(line: 6771, column: 32, scope: !8361)
!8365 = !DILocation(line: 6771, column: 7, scope: !8361)
!8366 = !DILocation(line: 6771, column: 50, scope: !8361)
!8367 = !DILocation(line: 6772, column: 25, scope: !8361)
!8368 = !DILocation(line: 6772, column: 5, scope: !8361)
!8369 = !DILocation(line: 6774, column: 15, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 6774, column: 7)
!8371 = !DILocation(line: 6774, column: 7, scope: !8370)
!8372 = !DILocation(line: 6774, column: 7, scope: !8359)
!8373 = !DILocation(line: 6775, column: 28, scope: !8370)
!8374 = !DILocation(line: 6775, column: 42, scope: !8370)
!8375 = !DILocation(line: 6775, column: 5, scope: !8370)
!8376 = !DILocation(line: 6776, column: 1, scope: !8359)
!8377 = distinct !DISubprogram(name: "file_end_indicate_exec_stack", scope: !3, file: !3, line: 6786, type: !2666, scopeLine: 6787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8378)
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "flags", scope: !8377, file: !3, line: 6788, type: !7)
!8380 = !DILocation(line: 0, scope: !8377)
!8381 = !DILocation(line: 6789, column: 7, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 6789, column: 7)
!8383 = !DILocation(line: 6789, column: 7, scope: !8377)
!8384 = !DILocation(line: 6792, column: 22, scope: !8377)
!8385 = !DILocation(line: 6792, column: 3, scope: !8377)
!8386 = !DILocation(line: 6793, column: 1, scope: !8377)
!8387 = distinct !DISubprogram(name: "get_constant_alignment", scope: !3, file: !3, line: 3194, type: !8388, scopeLine: 3195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8390)
!8388 = !DISubroutineType(types: !8389)
!8389 = !{!7, !639}
!8390 = !{!8391, !8392}
!8391 = !DILocalVariable(name: "exp", arg: 1, scope: !8387, file: !3, line: 3194, type: !639)
!8392 = !DILocalVariable(name: "align", scope: !8387, file: !3, line: 3196, type: !7)
!8393 = !DILocation(line: 0, scope: !8387)
!8394 = !DILocation(line: 3198, column: 11, scope: !8387)
!8395 = !DILocation(line: 3200, column: 11, scope: !8387)
!8396 = !DILocation(line: 3202, column: 3, scope: !8387)
!8397 = distinct !DISubprogram(name: "get_constant_size", scope: !3, file: !3, line: 3221, type: !8398, scopeLine: 3222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!694, !639}
!8400 = !{!8401, !8402}
!8401 = !DILocalVariable(name: "exp", arg: 1, scope: !8397, file: !3, line: 3221, type: !639)
!8402 = !DILocalVariable(name: "size", scope: !8397, file: !3, line: 3223, type: !694)
!8403 = !DILocation(line: 0, scope: !8397)
!8404 = !DILocation(line: 3225, column: 29, scope: !8397)
!8405 = !DILocation(line: 3225, column: 10, scope: !8397)
!8406 = !DILocation(line: 3226, column: 7, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 3226, column: 7)
!8408 = !DILocation(line: 3226, column: 23, scope: !8407)
!8409 = !DILocation(line: 3226, column: 7, scope: !8397)
!8410 = !DILocation(line: 3227, column: 12, scope: !8407)
!8411 = !DILocation(line: 3228, column: 3, scope: !8397)
!8412 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_push", scope: !378, file: !378, line: 202, type: !8413, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8417)
!8413 = !DISubroutineType(types: !8414)
!8414 = !{!8415, !8416, !811}
!8415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!8416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!8417 = !{!8418, !8419}
!8418 = !DILocalVariable(name: "vec_", arg: 1, scope: !8412, file: !378, line: 202, type: !8416)
!8419 = !DILocalVariable(name: "obj_", arg: 2, scope: !8412, file: !378, line: 202, type: !811)
!8420 = !DILocation(line: 0, scope: !8412)
!8421 = !DILocation(line: 202, column: 1, scope: !8412)
!8422 = distinct !DISubprogram(name: "get_section_anchor", scope: !3, file: !3, line: 6898, type: !8423, scopeLine: 6900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8425)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!811, !1040, !694, !571}
!8425 = !{!8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8435, !8436, !8437, !8438}
!8426 = !DILocalVariable(name: "block", arg: 1, scope: !8422, file: !3, line: 6898, type: !1040)
!8427 = !DILocalVariable(name: "offset", arg: 2, scope: !8422, file: !3, line: 6898, type: !694)
!8428 = !DILocalVariable(name: "model", arg: 3, scope: !8422, file: !3, line: 6899, type: !571)
!8429 = !DILocalVariable(name: "label", scope: !8422, file: !3, line: 6901, type: !3793)
!8430 = !DILocalVariable(name: "begin", scope: !8422, file: !3, line: 6902, type: !7)
!8431 = !DILocalVariable(name: "middle", scope: !8422, file: !3, line: 6902, type: !7)
!8432 = !DILocalVariable(name: "end", scope: !8422, file: !3, line: 6902, type: !7)
!8433 = !DILocalVariable(name: "min_offset", scope: !8422, file: !3, line: 6903, type: !692)
!8434 = !DILocalVariable(name: "max_offset", scope: !8422, file: !3, line: 6903, type: !692)
!8435 = !DILocalVariable(name: "range", scope: !8422, file: !3, line: 6903, type: !692)
!8436 = !DILocalVariable(name: "bias", scope: !8422, file: !3, line: 6903, type: !692)
!8437 = !DILocalVariable(name: "delta", scope: !8422, file: !3, line: 6903, type: !692)
!8438 = !DILocalVariable(name: "anchor", scope: !8422, file: !3, line: 6904, type: !811)
!8439 = !DILocation(line: 0, scope: !8422)
!8440 = !DILocation(line: 6901, column: 3, scope: !8422)
!8441 = !DILocation(line: 6901, column: 8, scope: !8422)
!8442 = !DILocation(line: 6920, column: 49, scope: !8422)
!8443 = !DILocation(line: 6921, column: 49, scope: !8422)
!8444 = !DILocation(line: 6922, column: 22, scope: !8422)
!8445 = !DILocation(line: 6922, column: 35, scope: !8422)
!8446 = !DILocation(line: 6923, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 6923, column: 7)
!8448 = !DILocation(line: 6923, column: 7, scope: !8422)
!8449 = !DILocation(line: 6927, column: 20, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 6926, column: 5)
!8451 = !DILocation(line: 6927, column: 48, scope: !8450)
!8452 = !DILocation(line: 6927, column: 16, scope: !8450)
!8453 = !DILocation(line: 6927, column: 14, scope: !8450)
!8454 = !DILocation(line: 6928, column: 18, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 6928, column: 11)
!8456 = !DILocation(line: 6928, column: 11, scope: !8450)
!8457 = !DILocation(line: 6930, column: 45, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 6929, column: 2)
!8459 = !DILocation(line: 6931, column: 19, scope: !8458)
!8460 = !DILocation(line: 6931, column: 10, scope: !8458)
!8461 = !DILocation(line: 6932, column: 14, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 6932, column: 8)
!8463 = !DILocation(line: 6932, column: 8, scope: !8458)
!8464 = !DILocation(line: 6934, column: 30, scope: !8458)
!8465 = !DILocation(line: 6935, column: 2, scope: !8458)
!8466 = !DILocation(line: 6938, column: 44, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 6937, column: 2)
!8468 = !DILocation(line: 6939, column: 19, scope: !8467)
!8469 = !DILocation(line: 6939, column: 10, scope: !8467)
!8470 = !DILocation(line: 6940, column: 21, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 6940, column: 8)
!8472 = !DILocation(line: 6940, column: 14, scope: !8471)
!8473 = !DILocation(line: 6940, column: 8, scope: !8467)
!8474 = !DILocation(line: 0, scope: !8447)
!8475 = !DILocation(line: 6949, column: 9, scope: !8422)
!8476 = !DILocation(line: 6950, column: 3, scope: !8422)
!8477 = !DILocation(line: 6948, column: 9, scope: !8422)
!8478 = !DILocation(line: 6950, column: 16, scope: !8422)
!8479 = !DILocation(line: 6952, column: 21, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 6951, column: 5)
!8481 = !DILocation(line: 6952, column: 30, scope: !8480)
!8482 = !DILocation(line: 6953, column: 16, scope: !8480)
!8483 = !DILocation(line: 6954, column: 11, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 6954, column: 11)
!8485 = !DILocation(line: 6954, column: 44, scope: !8484)
!8486 = !DILocation(line: 6954, column: 11, scope: !8480)
!8487 = !DILocation(line: 6956, column: 49, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 6956, column: 16)
!8489 = !DILocation(line: 6956, column: 16, scope: !8484)
!8490 = !DILocation(line: 6957, column: 17, scope: !8488)
!8491 = !DILocation(line: 6957, column: 2, scope: !8488)
!8492 = !DILocation(line: 6958, column: 16, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 6958, column: 16)
!8494 = !DILocation(line: 6958, column: 46, scope: !8493)
!8495 = !DILocation(line: 6958, column: 16, scope: !8488)
!8496 = !DILocation(line: 6960, column: 46, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 6960, column: 16)
!8498 = !DILocation(line: 6960, column: 16, scope: !8493)
!8499 = !DILocation(line: 6961, column: 17, scope: !8497)
!8500 = distinct !{!8500, !8476, !8501}
!8501 = !DILocation(line: 6964, column: 5, scope: !8422)
!8502 = !DILocation(line: 6967, column: 3, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 6967, column: 3)
!8504 = !DILocation(line: 6968, column: 33, scope: !8422)
!8505 = !DILocation(line: 6968, column: 12, scope: !8422)
!8506 = !DILocation(line: 6969, column: 3, scope: !8422)
!8507 = !DILocation(line: 6969, column: 29, scope: !8422)
!8508 = !DILocation(line: 6970, column: 38, scope: !8422)
!8509 = !DILocation(line: 6970, column: 29, scope: !8422)
!8510 = !DILocation(line: 6973, column: 3, scope: !8422)
!8511 = !DILocation(line: 6974, column: 3, scope: !8422)
!8512 = !DILocation(line: 6975, column: 1, scope: !8422)
!8513 = distinct !DISubprogram(name: "VEC_rtx_base_length", scope: !378, file: !378, line: 200, type: !8514, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8518)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!7, !8516}
!8516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8517, size: 64)
!8517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "vec_", arg: 1, scope: !8513, file: !378, line: 200, type: !8516)
!8520 = !DILocation(line: 0, scope: !8513)
!8521 = !DILocation(line: 200, column: 1, scope: !8513)
!8522 = distinct !DISubprogram(name: "VEC_rtx_base_index", scope: !378, file: !378, line: 200, type: !8523, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8525)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!811, !8516, !7}
!8525 = !{!8526, !8527}
!8526 = !DILocalVariable(name: "vec_", arg: 1, scope: !8522, file: !378, line: 200, type: !8516)
!8527 = !DILocalVariable(name: "ix_", arg: 2, scope: !8522, file: !378, line: 200, type: !7)
!8528 = !DILocation(line: 0, scope: !8522)
!8529 = !DILocation(line: 200, column: 1, scope: !8522)
!8530 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_insert", scope: !378, file: !378, line: 202, type: !8531, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8533)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{!8415, !8416, !7, !811}
!8533 = !{!8534, !8535, !8536}
!8534 = !DILocalVariable(name: "vec_", arg: 1, scope: !8530, file: !378, line: 202, type: !8416)
!8535 = !DILocalVariable(name: "ix_", arg: 2, scope: !8530, file: !378, line: 202, type: !7)
!8536 = !DILocalVariable(name: "obj_", arg: 3, scope: !8530, file: !378, line: 202, type: !811)
!8537 = !DILocation(line: 0, scope: !8530)
!8538 = !DILocation(line: 202, column: 1, scope: !8530)
!8539 = distinct !DISubprogram(name: "output_object_blocks", scope: !3, file: !3, line: 7043, type: !2666, scopeLine: 7044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2055)
!8540 = !DILocation(line: 7045, column: 18, scope: !8539)
!8541 = !DILocation(line: 7045, column: 3, scope: !8539)
!8542 = !DILocation(line: 7046, column: 1, scope: !8539)
!8543 = distinct !DISubprogram(name: "output_object_block_htab", scope: !3, file: !3, line: 7034, type: !2691, scopeLine: 7035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8544)
!8544 = !{!8545, !8546}
!8545 = !DILocalVariable(name: "slot", arg: 1, scope: !8543, file: !3, line: 7034, type: !1239)
!8546 = !DILocalVariable(name: "data", arg: 2, scope: !8543, file: !3, line: 7034, type: !627)
!8547 = !DILocation(line: 0, scope: !8543)
!8548 = !DILocation(line: 7036, column: 49, scope: !8543)
!8549 = !DILocation(line: 7036, column: 3, scope: !8543)
!8550 = !DILocation(line: 7037, column: 3, scope: !8543)
!8551 = !DILocation(line: 0, scope: !1801)
!8552 = !DILocation(line: 7076, column: 3, scope: !1801)
!8553 = !DILocation(line: 7079, column: 11, scope: !1812)
!8554 = !DILocation(line: 7079, column: 18, scope: !1812)
!8555 = !DILocation(line: 0, scope: !1812)
!8556 = !DILocation(line: 7079, column: 11, scope: !1813)
!8557 = !DILocation(line: 7081, column: 8, scope: !1811)
!8558 = !DILocation(line: 7083, column: 27, scope: !1809)
!8559 = !DILocation(line: 7085, column: 25, scope: !1809)
!8560 = !DILocation(line: 7085, column: 46, scope: !1809)
!8561 = !DILocation(line: 7085, column: 8, scope: !1809)
!8562 = !DILocation(line: 0, scope: !1815)
!8563 = !DILocation(line: 7086, column: 8, scope: !1815)
!8564 = !DILocation(line: 7086, column: 8, scope: !1821)
!8565 = !DILocation(line: 7086, column: 8, scope: !1822)
!8566 = !DILocation(line: 7086, column: 8, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 7086, column: 8)
!8568 = !DILocation(line: 7086, column: 8, scope: !1820)
!8569 = !DILocation(line: 7086, column: 8, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 7086, column: 8)
!8571 = !DILocation(line: 7086, column: 8, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 7086, column: 8)
!8573 = !DILocation(line: 7086, column: 8, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 7086, column: 8)
!8575 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 7086, column: 8)
!8576 = !DILocation(line: 0, scope: !8574)
!8577 = !DILocation(line: 0, scope: !1820)
!8578 = !DILocation(line: 7086, column: 8, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 7086, column: 8)
!8580 = distinct !{!8580, !8573, !8573}
!8581 = !DILocation(line: 7086, column: 8, scope: !1826)
!8582 = !DILocation(line: 0, scope: !8572)
!8583 = !DILocation(line: 7086, column: 8, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !1825, file: !3, line: 7086, column: 8)
!8585 = !DILocation(line: 7086, column: 8, scope: !1825)
!8586 = !DILocation(line: 7086, column: 8, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 7086, column: 8)
!8588 = !DILocation(line: 0, scope: !1824)
!8589 = !DILocation(line: 7086, column: 8, scope: !1824)
!8590 = !DILocation(line: 7086, column: 8, scope: !1830)
!8591 = !DILocation(line: 7086, column: 8, scope: !1831)
!8592 = !DILocation(line: 7086, column: 8, scope: !1829)
!8593 = !DILocation(line: 0, scope: !1829)
!8594 = !DILocation(line: 7086, column: 8, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !1829, file: !3, line: 7086, column: 8)
!8596 = distinct !{!8596, !8591, !8591}
!8597 = !DILocation(line: 7086, column: 8, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !1833, file: !3, line: 7086, column: 8)
!8599 = !DILocation(line: 7086, column: 8, scope: !1833)
!8600 = !DILocation(line: 0, scope: !1833)
!8601 = !DILocation(line: 7086, column: 8, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !1833, file: !3, line: 7086, column: 8)
!8603 = !DILocation(line: 0, scope: !1826)
!8604 = distinct !{!8604, !8565, !8565}
!8605 = !DILocation(line: 7086, column: 8, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 7086, column: 8)
!8607 = !DILocation(line: 7087, column: 8, scope: !1809)
!8608 = !DILocation(line: 7088, column: 32, scope: !1809)
!8609 = !DILocation(line: 7089, column: 6, scope: !1809)
!8610 = !DILocation(line: 7092, column: 8, scope: !1837)
!8611 = !DILocation(line: 0, scope: !1836)
!8612 = !DILocation(line: 7093, column: 8, scope: !1836)
!8613 = !DILocation(line: 7093, column: 8, scope: !1843)
!8614 = !DILocation(line: 7093, column: 8, scope: !1844)
!8615 = !DILocation(line: 7093, column: 8, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !1842, file: !3, line: 7093, column: 8)
!8617 = !DILocation(line: 7093, column: 8, scope: !1842)
!8618 = !DILocation(line: 7093, column: 8, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 7093, column: 8)
!8620 = !DILocation(line: 7093, column: 8, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !1842, file: !3, line: 7093, column: 8)
!8622 = !DILocation(line: 7093, column: 8, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 7093, column: 8)
!8624 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 7093, column: 8)
!8625 = !DILocation(line: 0, scope: !8623)
!8626 = !DILocation(line: 0, scope: !1842)
!8627 = !DILocation(line: 7093, column: 8, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 7093, column: 8)
!8629 = distinct !{!8629, !8622, !8622}
!8630 = !DILocation(line: 7093, column: 8, scope: !1848)
!8631 = !DILocation(line: 0, scope: !8621)
!8632 = !DILocation(line: 7093, column: 8, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !1847, file: !3, line: 7093, column: 8)
!8634 = !DILocation(line: 7093, column: 8, scope: !1847)
!8635 = !DILocation(line: 7093, column: 8, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 7093, column: 8)
!8637 = !DILocation(line: 0, scope: !1846)
!8638 = !DILocation(line: 7093, column: 8, scope: !1846)
!8639 = !DILocation(line: 7093, column: 8, scope: !1852)
!8640 = !DILocation(line: 7093, column: 8, scope: !1853)
!8641 = !DILocation(line: 7093, column: 8, scope: !1851)
!8642 = !DILocation(line: 0, scope: !1851)
!8643 = !DILocation(line: 7093, column: 8, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 7093, column: 8)
!8645 = distinct !{!8645, !8640, !8640}
!8646 = !DILocation(line: 7093, column: 8, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 7093, column: 8)
!8648 = !DILocation(line: 7093, column: 8, scope: !1855)
!8649 = !DILocation(line: 0, scope: !1855)
!8650 = !DILocation(line: 7093, column: 8, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 7093, column: 8)
!8652 = !DILocation(line: 0, scope: !1848)
!8653 = distinct !{!8653, !8614, !8614}
!8654 = !DILocation(line: 7093, column: 8, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !1836, file: !3, line: 7093, column: 8)
!8656 = !DILocation(line: 7094, column: 8, scope: !1837)
!8657 = !DILocation(line: 7099, column: 8, scope: !1861)
!8658 = !DILocation(line: 0, scope: !1858)
!8659 = !DILocation(line: 7101, column: 8, scope: !1858)
!8660 = !DILocation(line: 7101, column: 8, scope: !1867)
!8661 = !DILocation(line: 7101, column: 8, scope: !1868)
!8662 = !DILocation(line: 7101, column: 8, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !1866, file: !3, line: 7101, column: 8)
!8664 = !DILocation(line: 7101, column: 8, scope: !1866)
!8665 = !DILocation(line: 7101, column: 8, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 7101, column: 8)
!8667 = !DILocation(line: 7101, column: 8, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !1866, file: !3, line: 7101, column: 8)
!8669 = !DILocation(line: 7101, column: 8, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 7101, column: 8)
!8671 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 7101, column: 8)
!8672 = !DILocation(line: 0, scope: !8670)
!8673 = !DILocation(line: 0, scope: !1866)
!8674 = !DILocation(line: 7101, column: 8, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 7101, column: 8)
!8676 = distinct !{!8676, !8669, !8669}
!8677 = !DILocation(line: 7101, column: 8, scope: !1872)
!8678 = !DILocation(line: 7101, column: 8, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !1871, file: !3, line: 7101, column: 8)
!8680 = !DILocation(line: 7101, column: 8, scope: !1871)
!8681 = !DILocation(line: 7101, column: 8, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 7101, column: 8)
!8683 = !DILocation(line: 0, scope: !1870)
!8684 = !DILocation(line: 7101, column: 8, scope: !1870)
!8685 = !DILocation(line: 7101, column: 8, scope: !1876)
!8686 = !DILocation(line: 7101, column: 8, scope: !1877)
!8687 = !DILocation(line: 7101, column: 8, scope: !1875)
!8688 = !DILocation(line: 0, scope: !1875)
!8689 = !DILocation(line: 7101, column: 8, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !1875, file: !3, line: 7101, column: 8)
!8691 = distinct !{!8691, !8686, !8686}
!8692 = !DILocation(line: 7101, column: 8, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !1879, file: !3, line: 7101, column: 8)
!8694 = !DILocation(line: 7101, column: 8, scope: !1879)
!8695 = !DILocation(line: 0, scope: !1879)
!8696 = !DILocation(line: 7101, column: 8, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !1879, file: !3, line: 7101, column: 8)
!8698 = !DILocation(line: 0, scope: !1872)
!8699 = distinct !{!8699, !8661, !8661}
!8700 = !DILocation(line: 7101, column: 8, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !1858, file: !3, line: 7101, column: 8)
!8702 = !DILocation(line: 7102, column: 8, scope: !1859)
!8703 = !DILocation(line: 7103, column: 6, scope: !1859)
!8704 = !DILocation(line: 7105, column: 4, scope: !1861)
!8705 = !DILocation(line: 7106, column: 28, scope: !1861)
!8706 = !DILocation(line: 7111, column: 16, scope: !1888)
!8707 = !DILocation(line: 7111, column: 11, scope: !1813)
!8708 = !DILocation(line: 7116, column: 8, scope: !1886)
!8709 = !DILocation(line: 7116, column: 8, scope: !1887)
!8710 = !DILocation(line: 7118, column: 12, scope: !1884)
!8711 = !DILocation(line: 7118, column: 12, scope: !1885)
!8712 = !DILocation(line: 0, scope: !1882)
!8713 = !DILocation(line: 7120, column: 5, scope: !1882)
!8714 = !DILocation(line: 7120, column: 5, scope: !1894)
!8715 = !DILocation(line: 7120, column: 5, scope: !1895)
!8716 = !DILocation(line: 7120, column: 5, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !1893, file: !3, line: 7120, column: 5)
!8718 = !DILocation(line: 7120, column: 5, scope: !1893)
!8719 = !DILocation(line: 7120, column: 5, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 7120, column: 5)
!8721 = !DILocation(line: 7120, column: 5, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !1893, file: !3, line: 7120, column: 5)
!8723 = !DILocation(line: 7120, column: 5, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 7120, column: 5)
!8725 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 7120, column: 5)
!8726 = !DILocation(line: 0, scope: !8724)
!8727 = !DILocation(line: 0, scope: !1893)
!8728 = !DILocation(line: 7120, column: 5, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 7120, column: 5)
!8730 = distinct !{!8730, !8723, !8723}
!8731 = !DILocation(line: 7120, column: 5, scope: !1899)
!8732 = !DILocation(line: 7120, column: 5, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 7120, column: 5)
!8734 = !DILocation(line: 7120, column: 5, scope: !1898)
!8735 = !DILocation(line: 7120, column: 5, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 7120, column: 5)
!8737 = !DILocation(line: 0, scope: !1897)
!8738 = !DILocation(line: 7120, column: 5, scope: !1897)
!8739 = !DILocation(line: 7120, column: 5, scope: !1903)
!8740 = !DILocation(line: 7120, column: 5, scope: !1904)
!8741 = !DILocation(line: 7120, column: 5, scope: !1902)
!8742 = !DILocation(line: 0, scope: !1902)
!8743 = !DILocation(line: 7120, column: 5, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !1902, file: !3, line: 7120, column: 5)
!8745 = distinct !{!8745, !8740, !8740}
!8746 = !DILocation(line: 7120, column: 5, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !1906, file: !3, line: 7120, column: 5)
!8748 = !DILocation(line: 7120, column: 5, scope: !1906)
!8749 = !DILocation(line: 0, scope: !1906)
!8750 = !DILocation(line: 7120, column: 5, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !1906, file: !3, line: 7120, column: 5)
!8752 = !DILocation(line: 0, scope: !1899)
!8753 = distinct !{!8753, !8715, !8715}
!8754 = !DILocation(line: 7120, column: 5, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !1882, file: !3, line: 7120, column: 5)
!8756 = !DILocation(line: 7121, column: 5, scope: !1883)
!8757 = !DILocation(line: 7122, column: 3, scope: !1883)
!8758 = !DILocation(line: 7128, column: 43, scope: !1909)
!8759 = !DILocation(line: 7128, column: 14, scope: !1909)
!8760 = !DILocation(line: 0, scope: !1909)
!8761 = !DILocation(line: 7134, column: 8, scope: !1909)
!8762 = !DILocation(line: 7135, column: 16, scope: !1909)
!8763 = !DILocation(line: 7146, column: 3, scope: !1801)
!8764 = distinct !DISubprogram(name: "default_elf_asm_output_external", scope: !3, file: !3, line: 7152, type: !8765, scopeLine: 7155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8767)
!8765 = !DISubroutineType(types: !8766)
!8766 = !{null, !2062, !639, !628}
!8767 = !{!8768, !8769, !8770}
!8768 = !DILocalVariable(name: "file", arg: 1, scope: !8764, file: !3, line: 7152, type: !2062)
!8769 = !DILocalVariable(name: "decl", arg: 2, scope: !8764, file: !3, line: 7153, type: !639)
!8770 = !DILocalVariable(name: "name", arg: 3, scope: !8764, file: !3, line: 7154, type: !628)
!8771 = !DILocation(line: 0, scope: !8764)
!8772 = !DILocation(line: 7159, column: 7, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 7159, column: 7)
!8774 = !DILocation(line: 7160, column: 7, scope: !8773)
!8775 = !DILocation(line: 7160, column: 18, scope: !8773)
!8776 = !DILocation(line: 7160, column: 10, scope: !8773)
!8777 = !DILocation(line: 7159, column: 7, scope: !8764)
!8778 = !DILocation(line: 7161, column: 5, scope: !8773)
!8779 = !DILocation(line: 7162, column: 1, scope: !8764)
!8780 = distinct !DISubprogram(name: "gt_ggc_mx_rtx_constant_pool", scope: !1919, file: !1919, line: 23, type: !1236, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8781)
!8781 = !{!8782, !8783}
!8782 = !DILocalVariable(name: "x_p", arg: 1, scope: !8780, file: !1919, line: 23, type: !627)
!8783 = !DILocalVariable(name: "x", scope: !8780, file: !1919, line: 25, type: !8784)
!8784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!8785 = !DILocation(line: 0, scope: !8780)
!8786 = !DILocation(line: 26, column: 7, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8780, file: !1919, line: 26, column: 7)
!8788 = !DILocation(line: 26, column: 7, scope: !8780)
!8789 = !DILocation(line: 28, column: 7, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !1919, line: 28, column: 7)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !1919, line: 28, column: 7)
!8792 = distinct !DILexicalBlock(scope: !8787, file: !1919, line: 27, column: 5)
!8793 = !DILocation(line: 28, column: 7, scope: !8791)
!8794 = !DILocation(line: 29, column: 7, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !1919, line: 29, column: 7)
!8796 = distinct !DILexicalBlock(scope: !8792, file: !1919, line: 29, column: 7)
!8797 = !DILocation(line: 29, column: 7, scope: !8796)
!8798 = !DILocation(line: 30, column: 54, scope: !8792)
!8799 = !DILocation(line: 30, column: 7, scope: !8792)
!8800 = !DILocation(line: 31, column: 5, scope: !8792)
!8801 = !DILocation(line: 32, column: 1, scope: !8780)
!8802 = distinct !DISubprogram(name: "gt_ggc_mx_constant_descriptor_rtx", scope: !1919, file: !1919, line: 35, type: !1236, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8803)
!8803 = !{!8804, !8805, !8806}
!8804 = !DILocalVariable(name: "x_p", arg: 1, scope: !8802, file: !1919, line: 35, type: !627)
!8805 = !DILocalVariable(name: "x", scope: !8802, file: !1919, line: 37, type: !1017)
!8806 = !DILocalVariable(name: "xlimit", scope: !8802, file: !1919, line: 38, type: !1017)
!8807 = !DILocation(line: 0, scope: !8802)
!8808 = !DILocation(line: 37, column: 40, scope: !8802)
!8809 = !DILocation(line: 39, column: 3, scope: !8802)
!8810 = !DILocation(line: 39, column: 10, scope: !8802)
!8811 = !DILocation(line: 40, column: 24, scope: !8802)
!8812 = distinct !{!8812, !8809, !8813}
!8813 = !DILocation(line: 40, column: 28, scope: !8802)
!8814 = !DILocation(line: 41, column: 3, scope: !8802)
!8815 = !DILocation(line: 41, column: 12, scope: !8802)
!8816 = !DILocation(line: 43, column: 7, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !1919, line: 43, column: 7)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !1919, line: 43, column: 7)
!8819 = distinct !DILexicalBlock(scope: !8802, file: !1919, line: 42, column: 5)
!8820 = !DILocation(line: 43, column: 7, scope: !8818)
!8821 = !DILocation(line: 44, column: 7, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !1919, line: 44, column: 7)
!8823 = distinct !DILexicalBlock(scope: !8819, file: !1919, line: 44, column: 7)
!8824 = !DILocation(line: 44, column: 7, scope: !8823)
!8825 = !DILocation(line: 45, column: 7, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !1919, line: 45, column: 7)
!8827 = distinct !DILexicalBlock(scope: !8819, file: !1919, line: 45, column: 7)
!8828 = !DILocation(line: 45, column: 7, scope: !8827)
!8829 = !DILocation(line: 46, column: 7, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !1919, line: 46, column: 7)
!8831 = distinct !DILexicalBlock(scope: !8819, file: !1919, line: 46, column: 7)
!8832 = !DILocation(line: 46, column: 7, scope: !8831)
!8833 = !DILocation(line: 47, column: 17, scope: !8819)
!8834 = distinct !{!8834, !8814, !8835}
!8835 = !DILocation(line: 48, column: 5, scope: !8802)
!8836 = !DILocation(line: 49, column: 1, scope: !8802)
!8837 = distinct !DISubprogram(name: "gt_ggc_m_P23constant_descriptor_rtx4htab", scope: !1919, file: !1919, line: 52, type: !1236, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8838)
!8838 = !{!8839, !8840, !8842, !8847}
!8839 = !DILocalVariable(name: "x_p", arg: 1, scope: !8837, file: !1919, line: 52, type: !627)
!8840 = !DILocalVariable(name: "x", scope: !8837, file: !1919, line: 54, type: !8841)
!8841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!8842 = !DILocalVariable(name: "i0", scope: !8843, file: !1919, line: 58, type: !1241)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !1919, line: 57, column: 33)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1919, line: 57, column: 11)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !1919, line: 56, column: 5)
!8846 = distinct !DILexicalBlock(scope: !8837, file: !1919, line: 55, column: 7)
!8847 = !DILocalVariable(name: "a__", scope: !8848, file: !1919, line: 62, type: !8849)
!8848 = distinct !DILexicalBlock(scope: !8843, file: !1919, line: 62, column: 9)
!8849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!8850 = !DILocation(line: 0, scope: !8837)
!8851 = !DILocation(line: 55, column: 7, scope: !8846)
!8852 = !DILocation(line: 55, column: 7, scope: !8837)
!8853 = !DILocation(line: 57, column: 16, scope: !8844)
!8854 = !DILocation(line: 57, column: 24, scope: !8844)
!8855 = !DILocation(line: 57, column: 11, scope: !8845)
!8856 = !DILocation(line: 0, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !1919, line: 59, column: 9)
!8858 = distinct !DILexicalBlock(scope: !8843, file: !1919, line: 59, column: 9)
!8859 = !DILocation(line: 59, column: 9, scope: !8858)
!8860 = !DILocation(line: 0, scope: !8843)
!8861 = !DILocation(line: 0, scope: !8858)
!8862 = !DILocation(line: 59, column: 44, scope: !8857)
!8863 = !DILocation(line: 59, column: 25, scope: !8857)
!8864 = !DILocation(line: 60, column: 11, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !1919, line: 60, column: 11)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !1919, line: 60, column: 11)
!8867 = distinct !DILexicalBlock(scope: !8857, file: !1919, line: 59, column: 57)
!8868 = !DILocation(line: 60, column: 11, scope: !8866)
!8869 = !DILocation(line: 59, column: 53, scope: !8857)
!8870 = !DILocation(line: 59, column: 9, scope: !8857)
!8871 = distinct !{!8871, !8859, !8872}
!8872 = !DILocation(line: 61, column: 9, scope: !8858)
!8873 = !DILocation(line: 0, scope: !8848)
!8874 = !DILocation(line: 62, column: 9, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8848, file: !1919, line: 62, column: 9)
!8876 = !DILocation(line: 62, column: 9, scope: !8848)
!8877 = !DILocation(line: 65, column: 1, scope: !8837)
!8878 = distinct !DISubprogram(name: "gt_pch_nx_rtx_constant_pool", scope: !1919, file: !1919, line: 68, type: !1236, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8879)
!8879 = !{!8880, !8881}
!8880 = !DILocalVariable(name: "x_p", arg: 1, scope: !8878, file: !1919, line: 68, type: !627)
!8881 = !DILocalVariable(name: "x", scope: !8878, file: !1919, line: 70, type: !8784)
!8882 = !DILocation(line: 0, scope: !8878)
!8883 = !DILocation(line: 71, column: 7, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8878, file: !1919, line: 71, column: 7)
!8885 = !DILocation(line: 71, column: 7, scope: !8878)
!8886 = !DILocation(line: 73, column: 7, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !1919, line: 73, column: 7)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !1919, line: 73, column: 7)
!8889 = distinct !DILexicalBlock(scope: !8884, file: !1919, line: 72, column: 5)
!8890 = !DILocation(line: 73, column: 7, scope: !8888)
!8891 = !DILocation(line: 74, column: 7, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !1919, line: 74, column: 7)
!8893 = distinct !DILexicalBlock(scope: !8889, file: !1919, line: 74, column: 7)
!8894 = !DILocation(line: 74, column: 7, scope: !8893)
!8895 = !DILocation(line: 75, column: 54, scope: !8889)
!8896 = !DILocation(line: 75, column: 7, scope: !8889)
!8897 = !DILocation(line: 76, column: 5, scope: !8889)
!8898 = !DILocation(line: 77, column: 1, scope: !8878)
!8899 = distinct !DISubprogram(name: "gt_pch_p_17rtx_constant_pool", scope: !1919, file: !1919, line: 113, type: !8900, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8903)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{null, !627, !627, !8902, !627}
!8902 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !1923, line: 38, baseType: !1262)
!8903 = !{!8904, !8905, !8906, !8907, !8908}
!8904 = !DILocalVariable(name: "this_obj", arg: 1, scope: !8899, file: !1919, line: 113, type: !627)
!8905 = !DILocalVariable(name: "x_p", arg: 2, scope: !8899, file: !1919, line: 114, type: !627)
!8906 = !DILocalVariable(name: "op", arg: 3, scope: !8899, file: !1919, line: 115, type: !8902)
!8907 = !DILocalVariable(name: "cookie", arg: 4, scope: !8899, file: !1919, line: 116, type: !627)
!8908 = !DILocalVariable(name: "x", scope: !8899, file: !1919, line: 118, type: !8784)
!8909 = !DILocation(line: 0, scope: !8899)
!8910 = !DILocation(line: 119, column: 19, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8899, file: !1919, line: 119, column: 7)
!8912 = !DILocation(line: 119, column: 7, scope: !8899)
!8913 = !DILocation(line: 120, column: 5, scope: !8911)
!8914 = !DILocation(line: 121, column: 7, scope: !8899)
!8915 = !DILocation(line: 122, column: 16, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8899, file: !1919, line: 121, column: 7)
!8917 = !DILocation(line: 122, column: 5, scope: !8916)
!8918 = !DILocation(line: 123, column: 7, scope: !8899)
!8919 = !DILocation(line: 124, column: 16, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8899, file: !1919, line: 123, column: 7)
!8921 = !DILocation(line: 124, column: 5, scope: !8920)
!8922 = !DILocation(line: 125, column: 1, scope: !8899)
!8923 = distinct !DISubprogram(name: "gt_pch_nx_constant_descriptor_rtx", scope: !1919, file: !1919, line: 80, type: !1236, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8924)
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "x_p", arg: 1, scope: !8923, file: !1919, line: 80, type: !627)
!8926 = !DILocalVariable(name: "x", scope: !8923, file: !1919, line: 82, type: !1017)
!8927 = !DILocalVariable(name: "xlimit", scope: !8923, file: !1919, line: 83, type: !1017)
!8928 = !DILocation(line: 0, scope: !8923)
!8929 = !DILocation(line: 82, column: 40, scope: !8923)
!8930 = !DILocation(line: 84, column: 3, scope: !8923)
!8931 = !DILocation(line: 84, column: 10, scope: !8923)
!8932 = !DILocation(line: 86, column: 3, scope: !8923)
!8933 = !DILocation(line: 85, column: 24, scope: !8923)
!8934 = distinct !{!8934, !8930, !8935}
!8935 = !DILocation(line: 85, column: 28, scope: !8923)
!8936 = !DILocation(line: 86, column: 12, scope: !8923)
!8937 = !DILocation(line: 88, column: 7, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !1919, line: 88, column: 7)
!8939 = distinct !DILexicalBlock(scope: !8940, file: !1919, line: 88, column: 7)
!8940 = distinct !DILexicalBlock(scope: !8923, file: !1919, line: 87, column: 5)
!8941 = !DILocation(line: 88, column: 7, scope: !8939)
!8942 = !DILocation(line: 89, column: 7, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !1919, line: 89, column: 7)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !1919, line: 89, column: 7)
!8945 = !DILocation(line: 89, column: 7, scope: !8944)
!8946 = !DILocation(line: 90, column: 7, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !1919, line: 90, column: 7)
!8948 = distinct !DILexicalBlock(scope: !8940, file: !1919, line: 90, column: 7)
!8949 = !DILocation(line: 90, column: 7, scope: !8948)
!8950 = !DILocation(line: 91, column: 7, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !1919, line: 91, column: 7)
!8952 = distinct !DILexicalBlock(scope: !8940, file: !1919, line: 91, column: 7)
!8953 = !DILocation(line: 91, column: 7, scope: !8952)
!8954 = !DILocation(line: 92, column: 17, scope: !8940)
!8955 = distinct !{!8955, !8932, !8956}
!8956 = !DILocation(line: 93, column: 5, scope: !8923)
!8957 = !DILocation(line: 94, column: 1, scope: !8923)
!8958 = distinct !DISubprogram(name: "gt_pch_n_P23constant_descriptor_rtx4htab", scope: !1919, file: !1919, line: 97, type: !1236, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8959)
!8959 = !{!8960, !8961, !8962}
!8960 = !DILocalVariable(name: "x_p", arg: 1, scope: !8958, file: !1919, line: 97, type: !627)
!8961 = !DILocalVariable(name: "x", scope: !8958, file: !1919, line: 99, type: !8841)
!8962 = !DILocalVariable(name: "i0", scope: !8963, file: !1919, line: 103, type: !1241)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1919, line: 102, column: 33)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !1919, line: 102, column: 11)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !1919, line: 101, column: 5)
!8966 = distinct !DILexicalBlock(scope: !8958, file: !1919, line: 100, column: 7)
!8967 = !DILocation(line: 0, scope: !8958)
!8968 = !DILocation(line: 100, column: 7, scope: !8966)
!8969 = !DILocation(line: 100, column: 7, scope: !8958)
!8970 = !DILocation(line: 102, column: 16, scope: !8964)
!8971 = !DILocation(line: 102, column: 24, scope: !8964)
!8972 = !DILocation(line: 102, column: 11, scope: !8965)
!8973 = !DILocation(line: 0, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !1919, line: 104, column: 9)
!8975 = distinct !DILexicalBlock(scope: !8963, file: !1919, line: 104, column: 9)
!8976 = !DILocation(line: 104, column: 9, scope: !8975)
!8977 = !DILocation(line: 0, scope: !8963)
!8978 = !DILocation(line: 0, scope: !8975)
!8979 = !DILocation(line: 104, column: 44, scope: !8974)
!8980 = !DILocation(line: 104, column: 25, scope: !8974)
!8981 = !DILocation(line: 105, column: 11, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !1919, line: 105, column: 11)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !1919, line: 105, column: 11)
!8984 = distinct !DILexicalBlock(scope: !8974, file: !1919, line: 104, column: 57)
!8985 = !DILocation(line: 105, column: 11, scope: !8983)
!8986 = !DILocation(line: 104, column: 53, scope: !8974)
!8987 = !DILocation(line: 104, column: 9, scope: !8974)
!8988 = distinct !{!8988, !8976, !8989}
!8989 = !DILocation(line: 106, column: 9, scope: !8975)
!8990 = !DILocation(line: 107, column: 29, scope: !8963)
!8991 = !DILocation(line: 107, column: 9, scope: !8963)
!8992 = !DILocation(line: 108, column: 7, scope: !8963)
!8993 = !DILocation(line: 110, column: 1, scope: !8958)
!8994 = distinct !DISubprogram(name: "gt_pch_p_23constant_descriptor_rtx", scope: !1919, file: !1919, line: 128, type: !8900, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8995)
!8995 = !{!8996, !8997, !8998, !8999, !9000}
!8996 = !DILocalVariable(name: "this_obj", arg: 1, scope: !8994, file: !1919, line: 128, type: !627)
!8997 = !DILocalVariable(name: "x_p", arg: 2, scope: !8994, file: !1919, line: 129, type: !627)
!8998 = !DILocalVariable(name: "op", arg: 3, scope: !8994, file: !1919, line: 130, type: !8902)
!8999 = !DILocalVariable(name: "cookie", arg: 4, scope: !8994, file: !1919, line: 131, type: !627)
!9000 = !DILocalVariable(name: "x", scope: !8994, file: !1919, line: 133, type: !9001)
!9001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!9002 = !DILocation(line: 0, scope: !8994)
!9003 = !DILocation(line: 134, column: 19, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8994, file: !1919, line: 134, column: 7)
!9005 = !DILocation(line: 134, column: 7, scope: !8994)
!9006 = !DILocation(line: 135, column: 5, scope: !9004)
!9007 = !DILocation(line: 136, column: 7, scope: !8994)
!9008 = !DILocation(line: 137, column: 16, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8994, file: !1919, line: 136, column: 7)
!9010 = !DILocation(line: 137, column: 5, scope: !9009)
!9011 = !DILocation(line: 138, column: 7, scope: !8994)
!9012 = !DILocation(line: 139, column: 16, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8994, file: !1919, line: 138, column: 7)
!9014 = !DILocation(line: 139, column: 5, scope: !9013)
!9015 = !DILocation(line: 140, column: 7, scope: !8994)
!9016 = !DILocation(line: 141, column: 16, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8994, file: !1919, line: 140, column: 7)
!9018 = !DILocation(line: 141, column: 5, scope: !9017)
!9019 = !DILocation(line: 142, column: 1, scope: !8994)
!9020 = distinct !DISubprogram(name: "gt_pch_p_P23constant_descriptor_rtx4htab", scope: !1919, file: !1919, line: 145, type: !8900, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9021)
!9021 = !{!9022, !9023, !9024, !9025, !9026, !9027}
!9022 = !DILocalVariable(name: "this_obj", arg: 1, scope: !9020, file: !1919, line: 145, type: !627)
!9023 = !DILocalVariable(name: "x_p", arg: 2, scope: !9020, file: !1919, line: 146, type: !627)
!9024 = !DILocalVariable(name: "op", arg: 3, scope: !9020, file: !1919, line: 147, type: !8902)
!9025 = !DILocalVariable(name: "cookie", arg: 4, scope: !9020, file: !1919, line: 148, type: !627)
!9026 = !DILocalVariable(name: "x", scope: !9020, file: !1919, line: 150, type: !8841)
!9027 = !DILocalVariable(name: "i0", scope: !9028, file: !1919, line: 152, type: !1241)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !1919, line: 151, column: 29)
!9029 = distinct !DILexicalBlock(scope: !9020, file: !1919, line: 151, column: 7)
!9030 = !DILocation(line: 0, scope: !9020)
!9031 = !DILocation(line: 151, column: 12, scope: !9029)
!9032 = !DILocation(line: 151, column: 20, scope: !9029)
!9033 = !DILocation(line: 151, column: 7, scope: !9020)
!9034 = !DILocation(line: 0, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !1919, line: 153, column: 5)
!9036 = distinct !DILexicalBlock(scope: !9028, file: !1919, line: 153, column: 5)
!9037 = !DILocation(line: 0, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !1919, line: 154, column: 11)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !1919, line: 153, column: 53)
!9040 = !DILocation(line: 153, column: 5, scope: !9036)
!9041 = !DILocation(line: 0, scope: !9036)
!9042 = !DILocation(line: 0, scope: !9028)
!9043 = !DILocation(line: 153, column: 40, scope: !9035)
!9044 = !DILocation(line: 153, column: 21, scope: !9035)
!9045 = !DILocation(line: 154, column: 25, scope: !9038)
!9046 = !DILocation(line: 154, column: 34, scope: !9038)
!9047 = !DILocation(line: 154, column: 11, scope: !9039)
!9048 = !DILocation(line: 155, column: 15, scope: !9038)
!9049 = !DILocation(line: 155, column: 13, scope: !9038)
!9050 = !DILocation(line: 155, column: 9, scope: !9038)
!9051 = !DILocation(line: 153, column: 49, scope: !9035)
!9052 = !DILocation(line: 153, column: 5, scope: !9035)
!9053 = distinct !{!9053, !9040, !9054}
!9054 = !DILocation(line: 156, column: 5, scope: !9036)
!9055 = !DILocation(line: 157, column: 21, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9028, file: !1919, line: 157, column: 9)
!9057 = !DILocation(line: 157, column: 9, scope: !9028)
!9058 = !DILocation(line: 158, column: 7, scope: !9056)
!9059 = !DILocation(line: 160, column: 1, scope: !9020)
!9060 = distinct !DISubprogram(name: "prefix_name", scope: !3, file: !3, line: 213, type: !9061, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9063)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!639, !628, !639}
!9063 = !{!9064, !9065, !9066, !9067, !9068}
!9064 = !DILocalVariable(name: "prefix", arg: 1, scope: !9060, file: !3, line: 213, type: !628)
!9065 = !DILocalVariable(name: "name", arg: 2, scope: !9060, file: !3, line: 213, type: !639)
!9066 = !DILocalVariable(name: "plen", scope: !9060, file: !3, line: 215, type: !7)
!9067 = !DILocalVariable(name: "nlen", scope: !9060, file: !3, line: 216, type: !7)
!9068 = !DILocalVariable(name: "toname", scope: !9060, file: !3, line: 217, type: !625)
!9069 = !DILocation(line: 0, scope: !9060)
!9070 = !DILocation(line: 215, column: 19, scope: !9060)
!9071 = !DILocation(line: 216, column: 27, scope: !9060)
!9072 = !DILocation(line: 216, column: 19, scope: !9060)
!9073 = !DILocation(line: 217, column: 27, scope: !9060)
!9074 = !DILocation(line: 219, column: 27, scope: !9060)
!9075 = !DILocation(line: 219, column: 3, scope: !9060)
!9076 = !DILocation(line: 220, column: 18, scope: !9060)
!9077 = !DILocation(line: 220, column: 26, scope: !9060)
!9078 = !DILocation(line: 220, column: 58, scope: !9060)
!9079 = !DILocation(line: 220, column: 53, scope: !9060)
!9080 = !DILocation(line: 220, column: 3, scope: !9060)
!9081 = !DILocation(line: 222, column: 10, scope: !9060)
!9082 = !DILocation(line: 222, column: 3, scope: !9060)
!9083 = distinct !DISubprogram(name: "contains_pointers_p", scope: !3, file: !3, line: 2266, type: !4043, scopeLine: 2267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9084)
!9084 = !{!9085, !9086}
!9085 = !DILocalVariable(name: "type", arg: 1, scope: !9083, file: !3, line: 2266, type: !639)
!9086 = !DILocalVariable(name: "fields", scope: !9087, file: !3, line: 2281, type: !639)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 2280, column: 7)
!9088 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 2269, column: 5)
!9089 = !DILocation(line: 2292, column: 14, scope: !9088)
!9090 = !DILocation(line: 0, scope: !9083)
!9091 = !DILocation(line: 2268, column: 11, scope: !9083)
!9092 = !DILocation(line: 2268, column: 3, scope: !9083)
!9093 = !DILocation(line: 2283, column: 16, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2283, column: 2)
!9095 = !DILocation(line: 2283, column: 7, scope: !9094)
!9096 = !DILocation(line: 0, scope: !9094)
!9097 = !DILocation(line: 0, scope: !9087)
!9098 = !DILocation(line: 2283, column: 2, scope: !9094)
!9099 = !DILocation(line: 2284, column: 8, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 2284, column: 8)
!9101 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 2283, column: 2)
!9102 = !DILocation(line: 2284, column: 27, scope: !9100)
!9103 = !DILocation(line: 2285, column: 8, scope: !9100)
!9104 = !DILocation(line: 2285, column: 32, scope: !9100)
!9105 = !DILocation(line: 2285, column: 11, scope: !9100)
!9106 = !DILocation(line: 2284, column: 8, scope: !9101)
!9107 = !DILocation(line: 2283, column: 53, scope: !9101)
!9108 = !DILocation(line: 2283, column: 2, scope: !9101)
!9109 = distinct !{!9109, !9098, !9110}
!9110 = !DILocation(line: 2286, column: 13, scope: !9094)
!9111 = !DILocation(line: 2292, column: 35, scope: !9088)
!9112 = !DILocation(line: 2295, column: 7, scope: !9088)
!9113 = !DILocation(line: 2297, column: 1, scope: !9083)
!9114 = !DILocation(line: 0, scope: !9088)
!9115 = distinct !DISubprogram(name: "incorporeal_function_p", scope: !3, file: !3, line: 2310, type: !3451, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9116)
!9116 = !{!9117, !9118}
!9117 = !DILocalVariable(name: "decl", arg: 1, scope: !9115, file: !3, line: 2310, type: !639)
!9118 = !DILocalVariable(name: "name", scope: !9119, file: !3, line: 2314, type: !628)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 2313, column: 5)
!9120 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 2312, column: 7)
!9121 = !DILocation(line: 0, scope: !9115)
!9122 = !DILocation(line: 2312, column: 7, scope: !9120)
!9123 = !DILocation(line: 2312, column: 24, scope: !9120)
!9124 = !DILocation(line: 2312, column: 41, scope: !9120)
!9125 = !DILocation(line: 2312, column: 44, scope: !9120)
!9126 = !DILocation(line: 2312, column: 7, scope: !9115)
!9127 = !DILocation(line: 2316, column: 38, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 2316, column: 11)
!9129 = !DILocation(line: 2317, column: 4, scope: !9128)
!9130 = !DILocation(line: 2317, column: 7, scope: !9128)
!9131 = !DILocation(line: 2317, column: 33, scope: !9128)
!9132 = !DILocation(line: 2316, column: 11, scope: !9119)
!9133 = !DILocation(line: 2320, column: 14, scope: !9119)
!9134 = !DILocation(line: 0, scope: !9119)
!9135 = !DILocation(line: 2321, column: 11, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 2321, column: 11)
!9137 = !DILocation(line: 0, scope: !9120)
!9138 = !DILocation(line: 2324, column: 3, scope: !9115)
!9139 = !DILocation(line: 2325, column: 1, scope: !9115)
!9140 = distinct !DISubprogram(name: "decode_addr_const", scope: !3, file: !3, line: 2797, type: !9141, scopeLine: 2798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9144)
!9141 = !DISubroutineType(types: !9142)
!9142 = !{null, !639, !9143}
!9143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!9144 = !{!9145, !9146, !9147, !9148, !9149}
!9145 = !DILocalVariable(name: "exp", arg: 1, scope: !9140, file: !3, line: 2797, type: !639)
!9146 = !DILocalVariable(name: "value", arg: 2, scope: !9140, file: !3, line: 2797, type: !9143)
!9147 = !DILocalVariable(name: "target", scope: !9140, file: !3, line: 2799, type: !639)
!9148 = !DILocalVariable(name: "offset", scope: !9140, file: !3, line: 2800, type: !623)
!9149 = !DILocalVariable(name: "x", scope: !9140, file: !3, line: 2801, type: !811)
!9150 = !DILocation(line: 0, scope: !9140)
!9151 = !DILocation(line: 2799, column: 17, scope: !9140)
!9152 = !DILocation(line: 2803, column: 3, scope: !9140)
!9153 = !DILocation(line: 2805, column: 11, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 2805, column: 11)
!9155 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 2804, column: 5)
!9156 = !DILocation(line: 2805, column: 30, scope: !9154)
!9157 = !DILocation(line: 2806, column: 4, scope: !9154)
!9158 = !DILocation(line: 2806, column: 37, scope: !9154)
!9159 = !DILocation(line: 2806, column: 22, scope: !9154)
!9160 = !DILocation(line: 2806, column: 7, scope: !9154)
!9161 = !DILocation(line: 2805, column: 11, scope: !9155)
!9162 = !DILocation(line: 2812, column: 16, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 2812, column: 16)
!9164 = !DILocation(line: 2812, column: 35, scope: !9163)
!9165 = !DILocation(line: 2809, column: 33, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 2808, column: 2)
!9167 = !DILocation(line: 2809, column: 14, scope: !9166)
!9168 = !DILocation(line: 2810, column: 13, scope: !9166)
!9169 = !DILocation(line: 2811, column: 2, scope: !9166)
!9170 = !DILocation(line: 2813, column: 9, scope: !9163)
!9171 = !DILocation(line: 2815, column: 29, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 2814, column: 2)
!9173 = !DILocation(line: 2815, column: 15, scope: !9172)
!9174 = !DILocation(line: 2816, column: 24, scope: !9172)
!9175 = !DILocation(line: 2816, column: 10, scope: !9172)
!9176 = !DILocation(line: 2816, column: 8, scope: !9172)
!9177 = !DILocation(line: 2817, column: 13, scope: !9172)
!9178 = !DILocation(line: 0, scope: !9154)
!9179 = distinct !{!9179, !9152, !9180}
!9180 = !DILocation(line: 2821, column: 5, scope: !9140)
!9181 = !DILocation(line: 2823, column: 11, scope: !9140)
!9182 = !DILocation(line: 2823, column: 3, scope: !9140)
!9183 = !DILocation(line: 2827, column: 11, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 2824, column: 5)
!9185 = !DILocation(line: 2832, column: 10, scope: !9184)
!9186 = !DILocation(line: 2831, column: 11, scope: !9184)
!9187 = !DILocation(line: 2833, column: 7, scope: !9184)
!9188 = !DILocation(line: 2841, column: 11, scope: !9184)
!9189 = !DILocation(line: 2842, column: 7, scope: !9184)
!9190 = !DILocation(line: 2845, column: 7, scope: !9184)
!9191 = !DILocation(line: 2846, column: 5, scope: !9184)
!9192 = !DILocation(line: 2848, column: 3, scope: !9140)
!9193 = !DILocation(line: 2849, column: 7, scope: !9140)
!9194 = !DILocation(line: 2851, column: 15, scope: !9140)
!9195 = !DILocation(line: 2852, column: 19, scope: !9140)
!9196 = !DILocation(line: 2852, column: 10, scope: !9140)
!9197 = !DILocation(line: 2852, column: 17, scope: !9140)
!9198 = !DILocation(line: 2853, column: 1, scope: !9140)
!9199 = distinct !DISubprogram(name: "copy_constant", scope: !3, file: !3, line: 3128, type: !2509, scopeLine: 3129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9200)
!9200 = !{!9201, !9202, !9205, !9206, !9207, !9208, !9209}
!9201 = !DILocalVariable(name: "exp", arg: 1, scope: !9199, file: !3, line: 3128, type: !639)
!9202 = !DILocalVariable(name: "copy", scope: !9203, file: !3, line: 3166, type: !639)
!9203 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 3165, column: 7)
!9204 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3131, column: 5)
!9205 = !DILocalVariable(name: "v", scope: !9203, file: !3, line: 3167, type: !1494)
!9206 = !DILocalVariable(name: "idx", scope: !9203, file: !3, line: 3168, type: !692)
!9207 = !DILocalVariable(name: "purpose", scope: !9203, file: !3, line: 3169, type: !639)
!9208 = !DILocalVariable(name: "value", scope: !9203, file: !3, line: 3169, type: !639)
!9209 = !DILocalVariable(name: "ce", scope: !9210, file: !3, line: 3175, type: !4226)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 3174, column: 4)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3173, column: 2)
!9212 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3173, column: 2)
!9213 = !DILocation(line: 0, scope: !9199)
!9214 = !DILocation(line: 3130, column: 11, scope: !9199)
!9215 = !DILocation(line: 3130, column: 3, scope: !9199)
!9216 = !DILocation(line: 3135, column: 11, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 3135, column: 11)
!9218 = !DILocation(line: 3135, column: 11, scope: !9204)
!9219 = !DILocation(line: 3136, column: 9, scope: !9217)
!9220 = !DILocation(line: 3189, column: 1, scope: !9199)
!9221 = !DILocation(line: 3139, column: 9, scope: !9217)
!9222 = !DILocation(line: 3139, column: 2, scope: !9217)
!9223 = !DILocation(line: 3145, column: 14, scope: !9204)
!9224 = !DILocation(line: 3145, column: 7, scope: !9204)
!9225 = !DILocation(line: 3148, column: 29, scope: !9204)
!9226 = !DILocation(line: 3149, column: 23, scope: !9204)
!9227 = !DILocation(line: 3149, column: 8, scope: !9204)
!9228 = !DILocation(line: 3150, column: 23, scope: !9204)
!9229 = !DILocation(line: 3150, column: 8, scope: !9204)
!9230 = !DILocation(line: 3148, column: 14, scope: !9204)
!9231 = !DILocation(line: 3155, column: 14, scope: !9204)
!9232 = !DILocation(line: 3161, column: 14, scope: !9204)
!9233 = !DILocation(line: 3166, column: 14, scope: !9203)
!9234 = !DILocation(line: 0, scope: !9203)
!9235 = !DILocation(line: 3171, column: 6, scope: !9203)
!9236 = !DILocation(line: 0, scope: !9210)
!9237 = !DILocation(line: 3173, column: 2, scope: !9212)
!9238 = !DILocation(line: 0, scope: !9212)
!9239 = !DILocation(line: 3173, column: 2, scope: !9211)
!9240 = !DILocation(line: 3175, column: 28, scope: !9210)
!9241 = !DILocation(line: 3176, column: 10, scope: !9210)
!9242 = !DILocation(line: 3176, column: 16, scope: !9210)
!9243 = !DILocation(line: 3177, column: 18, scope: !9210)
!9244 = !DILocation(line: 3177, column: 10, scope: !9210)
!9245 = !DILocation(line: 3177, column: 16, scope: !9210)
!9246 = distinct !{!9246, !9237, !9247}
!9247 = !DILocation(line: 3178, column: 4, scope: !9212)
!9248 = !DILocation(line: 3179, column: 2, scope: !9203)
!9249 = !DILocation(line: 3179, column: 26, scope: !9203)
!9250 = !DILocation(line: 3184, column: 7, scope: !9204)
!9251 = !DILocation(line: 3187, column: 5, scope: !9199)
!9252 = distinct !DISubprogram(name: "get_constant_section", scope: !3, file: !3, line: 3208, type: !2911, scopeLine: 3209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9253)
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "exp", arg: 1, scope: !9252, file: !3, line: 3208, type: !639)
!9255 = !DILocation(line: 0, scope: !9252)
!9256 = !DILocation(line: 3210, column: 7, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3210, column: 7)
!9258 = !DILocation(line: 3210, column: 7, scope: !9252)
!9259 = !DILocation(line: 3211, column: 42, scope: !9257)
!9260 = !DILocation(line: 3211, column: 12, scope: !9257)
!9261 = !DILocation(line: 3211, column: 5, scope: !9257)
!9262 = !DILocation(line: 3213, column: 28, scope: !9257)
!9263 = !DILocation(line: 3214, column: 9, scope: !9257)
!9264 = !DILocation(line: 3215, column: 9, scope: !9257)
!9265 = !DILocation(line: 3213, column: 12, scope: !9257)
!9266 = !DILocation(line: 3213, column: 5, scope: !9257)
!9267 = !DILocation(line: 0, scope: !9257)
!9268 = !DILocation(line: 3216, column: 1, scope: !9252)
!9269 = distinct !DISubprogram(name: "output_constant_def_contents", scope: !3, file: !3, line: 3390, type: !4656, scopeLine: 3391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9270)
!9270 = !{!9271, !9272, !9273}
!9271 = !DILocalVariable(name: "symbol", arg: 1, scope: !9269, file: !3, line: 3390, type: !811)
!9272 = !DILocalVariable(name: "exp", scope: !9269, file: !3, line: 3392, type: !639)
!9273 = !DILocalVariable(name: "align", scope: !9269, file: !3, line: 3393, type: !7)
!9274 = !DILocation(line: 0, scope: !9269)
!9275 = !DILocation(line: 3392, column: 14, scope: !9269)
!9276 = !DILocation(line: 3397, column: 3, scope: !9269)
!9277 = !DILocation(line: 3400, column: 3, scope: !9269)
!9278 = !DILocation(line: 3400, column: 26, scope: !9269)
!9279 = !DILocation(line: 3405, column: 7, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 3405, column: 7)
!9281 = !DILocation(line: 3405, column: 44, scope: !9280)
!9282 = !DILocation(line: 3405, column: 47, scope: !9280)
!9283 = !DILocation(line: 3405, column: 7, scope: !9269)
!9284 = !DILocation(line: 3406, column: 5, scope: !9280)
!9285 = !DILocation(line: 3409, column: 26, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 3408, column: 5)
!9287 = !DILocation(line: 3409, column: 7, scope: !9286)
!9288 = !DILocation(line: 3410, column: 15, scope: !9286)
!9289 = !DILocation(line: 3411, column: 17, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3411, column: 11)
!9291 = !DILocation(line: 3411, column: 11, scope: !9286)
!9292 = !DILocation(line: 3412, column: 2, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 3412, column: 2)
!9294 = !DILocation(line: 3412, column: 2, scope: !9290)
!9295 = !DILocation(line: 3413, column: 40, scope: !9286)
!9296 = !DILocation(line: 3413, column: 7, scope: !9286)
!9297 = !DILocation(line: 3415, column: 7, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 3415, column: 7)
!9299 = !DILocation(line: 3415, column: 7, scope: !9269)
!9300 = !DILocation(line: 3416, column: 5, scope: !9298)
!9301 = !DILocation(line: 3417, column: 1, scope: !9269)
!9302 = distinct !DISubprogram(name: "assemble_constant_contents", scope: !3, file: !3, line: 3369, type: !9303, scopeLine: 3370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{null, !639, !628, !7}
!9305 = !{!9306, !9307, !9308, !9309}
!9306 = !DILocalVariable(name: "exp", arg: 1, scope: !9302, file: !3, line: 3369, type: !639)
!9307 = !DILocalVariable(name: "label", arg: 2, scope: !9302, file: !3, line: 3369, type: !628)
!9308 = !DILocalVariable(name: "align", arg: 3, scope: !9302, file: !3, line: 3369, type: !7)
!9309 = !DILocalVariable(name: "size", scope: !9302, file: !3, line: 3371, type: !694)
!9310 = !DILocation(line: 0, scope: !9302)
!9311 = !DILocation(line: 3373, column: 10, scope: !9302)
!9312 = !DILocation(line: 3380, column: 3, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3380, column: 3)
!9314 = !DILocation(line: 3384, column: 3, scope: !9302)
!9315 = !DILocation(line: 3385, column: 1, scope: !9302)
!9316 = distinct !DISubprogram(name: "const_desc_rtx_hash", scope: !3, file: !3, line: 3475, type: !1226, scopeLine: 3476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9317)
!9317 = !{!9318, !9319}
!9318 = !DILocalVariable(name: "ptr", arg: 1, scope: !9316, file: !3, line: 3475, type: !1067)
!9319 = !DILocalVariable(name: "desc", scope: !9316, file: !3, line: 3477, type: !9320)
!9320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!9321 = !DILocation(line: 0, scope: !9316)
!9322 = !DILocation(line: 3479, column: 16, scope: !9316)
!9323 = !DILocation(line: 3479, column: 3, scope: !9316)
!9324 = distinct !DISubprogram(name: "const_desc_rtx_eq", scope: !3, file: !3, line: 3483, type: !1231, scopeLine: 3484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9325)
!9325 = !{!9326, !9327, !9328, !9329}
!9326 = !DILocalVariable(name: "a", arg: 1, scope: !9324, file: !3, line: 3483, type: !1067)
!9327 = !DILocalVariable(name: "b", arg: 2, scope: !9324, file: !3, line: 3483, type: !1067)
!9328 = !DILocalVariable(name: "x", scope: !9324, file: !3, line: 3485, type: !9320)
!9329 = !DILocalVariable(name: "y", scope: !9324, file: !3, line: 3487, type: !9320)
!9330 = !DILocation(line: 0, scope: !9324)
!9331 = !DILocation(line: 3490, column: 10, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 3490, column: 7)
!9333 = !DILocation(line: 3490, column: 21, scope: !9332)
!9334 = !DILocation(line: 3490, column: 15, scope: !9332)
!9335 = !DILocation(line: 3490, column: 7, scope: !9324)
!9336 = !DILocation(line: 3492, column: 26, scope: !9324)
!9337 = !DILocation(line: 3492, column: 39, scope: !9324)
!9338 = !DILocation(line: 3492, column: 10, scope: !9324)
!9339 = !DILocation(line: 3492, column: 3, scope: !9324)
!9340 = !DILocation(line: 3493, column: 1, scope: !9324)
!9341 = distinct !DISubprogram(name: "const_rtx_hash_1", scope: !3, file: !3, line: 3498, type: !9342, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9344)
!9342 = !DISubroutineType(types: !9343)
!9343 = !{!623, !8415, !627}
!9344 = !{!9345, !9346, !9347, !9348, !9349, !9350, !9351, !9352, !9353, !9356, !9357, !9358, !9360}
!9345 = !DILocalVariable(name: "xp", arg: 1, scope: !9341, file: !3, line: 3498, type: !8415)
!9346 = !DILocalVariable(name: "data", arg: 2, scope: !9341, file: !3, line: 3498, type: !627)
!9347 = !DILocalVariable(name: "hwi", scope: !9341, file: !3, line: 3500, type: !692)
!9348 = !DILocalVariable(name: "mode", scope: !9341, file: !3, line: 3501, type: !5)
!9349 = !DILocalVariable(name: "code", scope: !9341, file: !3, line: 3502, type: !377)
!9350 = !DILocalVariable(name: "h", scope: !9341, file: !3, line: 3503, type: !1026)
!9351 = !DILocalVariable(name: "hp", scope: !9341, file: !3, line: 3503, type: !1740)
!9352 = !DILocalVariable(name: "x", scope: !9341, file: !3, line: 3504, type: !811)
!9353 = !DILocalVariable(name: "shift", scope: !9354, file: !3, line: 3517, type: !623)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 3516, column: 7)
!9355 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 3512, column: 5)
!9356 = !DILocalVariable(name: "n", scope: !9354, file: !3, line: 3518, type: !1785)
!9357 = !DILocalVariable(name: "i", scope: !9354, file: !3, line: 3519, type: !623)
!9358 = !DILocalVariable(name: "i", scope: !9359, file: !3, line: 3546, type: !623)
!9359 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 3545, column: 7)
!9360 = !DILabel(scope: !9355, name: "fold_hwi", file: !3, line: 3515)
!9361 = !DILocation(line: 0, scope: !9341)
!9362 = !DILocation(line: 3506, column: 7, scope: !9341)
!9363 = !DILocation(line: 3507, column: 10, scope: !9341)
!9364 = !DILocation(line: 3508, column: 10, scope: !9341)
!9365 = !DILocation(line: 3509, column: 24, scope: !9341)
!9366 = !DILocation(line: 3509, column: 34, scope: !9341)
!9367 = !DILocation(line: 3511, column: 3, scope: !9341)
!9368 = !DILocation(line: 3514, column: 13, scope: !9355)
!9369 = !DILocation(line: 3514, column: 7, scope: !9355)
!9370 = !DILocation(line: 0, scope: !9355)
!9371 = !DILocation(line: 3515, column: 5, scope: !9355)
!9372 = !DILocation(line: 0, scope: !9354)
!9373 = !DILocation(line: 3521, column: 7, scope: !9354)
!9374 = !DILocation(line: 3521, column: 4, scope: !9354)
!9375 = !DILocation(line: 3522, column: 7, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 3522, column: 2)
!9377 = !DILocation(line: 0, scope: !9376)
!9378 = !DILocation(line: 3522, column: 16, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 3522, column: 2)
!9380 = !DILocation(line: 3522, column: 2, scope: !9376)
!9381 = !DILocation(line: 3524, column: 10, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 3523, column: 4)
!9383 = !DILocation(line: 3525, column: 11, scope: !9382)
!9384 = !DILocation(line: 3525, column: 8, scope: !9382)
!9385 = !DILocation(line: 3522, column: 21, scope: !9379)
!9386 = !DILocation(line: 3522, column: 2, scope: !9379)
!9387 = distinct !{!9387, !9380, !9388}
!9388 = !DILocation(line: 3526, column: 4, scope: !9376)
!9389 = !DILocation(line: 3531, column: 16, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 3531, column: 11)
!9391 = !DILocation(line: 0, scope: !9390)
!9392 = !DILocation(line: 3531, column: 11, scope: !9355)
!9393 = !DILocation(line: 3533, column: 10, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3532, column: 2)
!9395 = !DILocation(line: 3533, column: 33, scope: !9394)
!9396 = !DILocation(line: 3533, column: 31, scope: !9394)
!9397 = !DILocation(line: 3534, column: 4, scope: !9394)
!9398 = !DILocation(line: 3537, column: 18, scope: !9390)
!9399 = !DILocation(line: 3537, column: 7, scope: !9390)
!9400 = !DILocation(line: 3537, column: 4, scope: !9390)
!9401 = !DILocation(line: 3538, column: 7, scope: !9355)
!9402 = !DILocation(line: 3541, column: 24, scope: !9355)
!9403 = !DILocation(line: 3541, column: 12, scope: !9355)
!9404 = !DILocation(line: 3541, column: 9, scope: !9355)
!9405 = !DILocation(line: 3542, column: 7, scope: !9355)
!9406 = !DILocation(line: 3547, column: 11, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 3547, column: 2)
!9408 = !DILocation(line: 0, scope: !9359)
!9409 = !DILocation(line: 3547, column: 7, scope: !9407)
!9410 = !DILocation(line: 3547, column: 28, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 3547, column: 2)
!9412 = !DILocation(line: 3547, column: 31, scope: !9411)
!9413 = !DILocation(line: 3547, column: 2, scope: !9407)
!9414 = !DILocation(line: 3548, column: 10, scope: !9411)
!9415 = !DILocation(line: 3548, column: 37, scope: !9411)
!9416 = !DILocation(line: 3548, column: 18, scope: !9411)
!9417 = !DILocation(line: 3547, column: 2, scope: !9411)
!9418 = distinct !{!9418, !9413, !9419}
!9419 = !DILocation(line: 3548, column: 60, scope: !9407)
!9420 = !DILocation(line: 3553, column: 30, scope: !9355)
!9421 = !DILocation(line: 3553, column: 12, scope: !9355)
!9422 = !DILocation(line: 3553, column: 9, scope: !9355)
!9423 = !DILocation(line: 3554, column: 7, scope: !9355)
!9424 = !DILocation(line: 3557, column: 13, scope: !9355)
!9425 = !DILocation(line: 3557, column: 21, scope: !9355)
!9426 = !DILocation(line: 3557, column: 19, scope: !9355)
!9427 = !DILocation(line: 3558, column: 7, scope: !9355)
!9428 = !DILocation(line: 3562, column: 13, scope: !9355)
!9429 = !DILocation(line: 3562, column: 21, scope: !9355)
!9430 = !DILocation(line: 3562, column: 19, scope: !9355)
!9431 = !DILocation(line: 3563, column: 7, scope: !9355)
!9432 = !DILocation(line: 3569, column: 8, scope: !9341)
!9433 = !DILocation(line: 3570, column: 9, scope: !9341)
!9434 = !DILocation(line: 3570, column: 13, scope: !9341)
!9435 = !DILocation(line: 3570, column: 19, scope: !9341)
!9436 = !DILocation(line: 3570, column: 7, scope: !9341)
!9437 = !DILocation(line: 3571, column: 3, scope: !9341)
!9438 = distinct !DISubprogram(name: "hash_section", scope: !3, file: !3, line: 493, type: !9439, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!1026, !1044}
!9441 = !{!9442}
!9442 = !DILocalVariable(name: "sect", arg: 1, scope: !9438, file: !3, line: 493, type: !1044)
!9443 = !DILocation(line: 0, scope: !9438)
!9444 = !DILocation(line: 495, column: 20, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 495, column: 7)
!9446 = !DILocation(line: 495, column: 26, scope: !9445)
!9447 = !DILocation(line: 495, column: 7, scope: !9438)
!9448 = !DILocation(line: 496, column: 42, scope: !9445)
!9449 = !DILocation(line: 496, column: 12, scope: !9445)
!9450 = !DILocation(line: 496, column: 5, scope: !9445)
!9451 = !DILocation(line: 497, column: 3, scope: !9438)
!9452 = !DILocation(line: 498, column: 1, scope: !9438)
!9453 = distinct !DISubprogram(name: "mark_constant_pool", scope: !3, file: !3, line: 3949, type: !2666, scopeLine: 3950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9454)
!9454 = !{!9455, !9456}
!9455 = !DILocalVariable(name: "insn", scope: !9453, file: !3, line: 3951, type: !811)
!9456 = !DILocalVariable(name: "link", scope: !9453, file: !3, line: 3951, type: !811)
!9457 = !DILocation(line: 3953, column: 14, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 3953, column: 7)
!9459 = !DILocation(line: 3953, column: 8, scope: !9458)
!9460 = !DILocation(line: 3953, column: 33, scope: !9458)
!9461 = !DILocation(line: 3953, column: 54, scope: !9458)
!9462 = !DILocation(line: 3953, column: 30, scope: !9458)
!9463 = !DILocation(line: 3956, column: 15, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 3956, column: 3)
!9465 = !DILocation(line: 0, scope: !9453)
!9466 = !DILocation(line: 3956, column: 8, scope: !9464)
!9467 = !DILocation(line: 0, scope: !9464)
!9468 = !DILocation(line: 3956, column: 3, scope: !9464)
!9469 = !DILocation(line: 3957, column: 5, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 3956, column: 3)
!9471 = !DILocation(line: 3956, column: 42, scope: !9470)
!9472 = !DILocation(line: 3956, column: 3, scope: !9470)
!9473 = distinct !{!9473, !9468, !9474}
!9474 = !DILocation(line: 3957, column: 25, scope: !9464)
!9475 = !DILocation(line: 3959, column: 8, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 3959, column: 3)
!9477 = !DILocation(line: 0, scope: !9476)
!9478 = !DILocation(line: 3959, column: 3, scope: !9476)
!9479 = !DILocation(line: 3962, column: 21, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 3959, column: 3)
!9481 = !DILocation(line: 3962, column: 5, scope: !9480)
!9482 = !DILocation(line: 3961, column: 15, scope: !9480)
!9483 = !DILocation(line: 3959, column: 3, scope: !9480)
!9484 = distinct !{!9484, !9478, !9485}
!9485 = !DILocation(line: 3962, column: 35, scope: !9476)
!9486 = !DILocation(line: 3963, column: 1, scope: !9453)
!9487 = distinct !DISubprogram(name: "mark_constants", scope: !3, file: !3, line: 3921, type: !4656, scopeLine: 3922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9488)
!9488 = !{!9489, !9490, !9493, !9494, !9495}
!9489 = !DILocalVariable(name: "insn", arg: 1, scope: !9487, file: !3, line: 3921, type: !811)
!9490 = !DILocalVariable(name: "seq", scope: !9491, file: !3, line: 3931, type: !811)
!9491 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 3930, column: 5)
!9492 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 3929, column: 7)
!9493 = !DILocalVariable(name: "i", scope: !9491, file: !3, line: 3932, type: !623)
!9494 = !DILocalVariable(name: "n", scope: !9491, file: !3, line: 3932, type: !623)
!9495 = !DILocalVariable(name: "subinsn", scope: !9496, file: !3, line: 3935, type: !811)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 3934, column: 2)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 3933, column: 7)
!9498 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 3933, column: 7)
!9499 = !DILocation(line: 0, scope: !9487)
!9500 = !DILocation(line: 3923, column: 8, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 3923, column: 7)
!9502 = !DILocation(line: 3923, column: 7, scope: !9487)
!9503 = !DILocation(line: 3929, column: 7, scope: !9492)
!9504 = !DILocation(line: 3929, column: 33, scope: !9492)
!9505 = !DILocation(line: 3929, column: 7, scope: !9487)
!9506 = !DILocation(line: 0, scope: !9491)
!9507 = !DILocation(line: 3932, column: 18, scope: !9491)
!9508 = !DILocation(line: 3933, column: 12, scope: !9498)
!9509 = !DILocation(line: 0, scope: !9498)
!9510 = !DILocation(line: 3933, column: 21, scope: !9497)
!9511 = !DILocation(line: 3933, column: 7, scope: !9498)
!9512 = !DILocation(line: 3935, column: 18, scope: !9496)
!9513 = !DILocation(line: 0, scope: !9496)
!9514 = !DILocation(line: 3936, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 3936, column: 8)
!9516 = !DILocation(line: 3936, column: 8, scope: !9496)
!9517 = !DILocation(line: 3937, column: 21, scope: !9515)
!9518 = !DILocation(line: 3937, column: 6, scope: !9515)
!9519 = !DILocation(line: 3933, column: 26, scope: !9497)
!9520 = !DILocation(line: 3933, column: 7, scope: !9497)
!9521 = distinct !{!9521, !9511, !9522}
!9522 = !DILocation(line: 3938, column: 2, scope: !9498)
!9523 = !DILocation(line: 0, scope: !9492)
!9524 = !DILocation(line: 3941, column: 5, scope: !9492)
!9525 = !DILocation(line: 3942, column: 1, scope: !9487)
!9526 = distinct !DISubprogram(name: "mark_constant", scope: !3, file: !3, line: 3886, type: !9342, scopeLine: 3887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9527)
!9527 = !{!9528, !9529, !9530, !9531, !9534}
!9528 = !DILocalVariable(name: "current_rtx", arg: 1, scope: !9526, file: !3, line: 3886, type: !8415)
!9529 = !DILocalVariable(name: "data", arg: 2, scope: !9526, file: !3, line: 3886, type: !627)
!9530 = !DILocalVariable(name: "x", scope: !9526, file: !3, line: 3888, type: !811)
!9531 = !DILocalVariable(name: "desc", scope: !9532, file: !3, line: 3895, type: !1017)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 3894, column: 5)
!9533 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 3893, column: 7)
!9534 = !DILocalVariable(name: "exp", scope: !9535, file: !3, line: 3904, type: !639)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 3903, column: 5)
!9536 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 3902, column: 12)
!9537 = !DILocation(line: 0, scope: !9526)
!9538 = !DILocation(line: 3888, column: 11, scope: !9526)
!9539 = !DILocation(line: 3890, column: 9, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 3890, column: 7)
!9541 = !DILocation(line: 3890, column: 21, scope: !9540)
!9542 = !DILocation(line: 3890, column: 24, scope: !9540)
!9543 = !DILocation(line: 3890, column: 37, scope: !9540)
!9544 = !DILocation(line: 3890, column: 7, scope: !9526)
!9545 = !DILocation(line: 3893, column: 7, scope: !9533)
!9546 = !DILocation(line: 3893, column: 7, scope: !9526)
!9547 = !DILocation(line: 3895, column: 46, scope: !9532)
!9548 = !DILocation(line: 0, scope: !9532)
!9549 = !DILocation(line: 3896, column: 17, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 3896, column: 11)
!9551 = !DILocation(line: 3896, column: 22, scope: !9550)
!9552 = !DILocation(line: 3896, column: 11, scope: !9532)
!9553 = !DILocation(line: 3898, column: 15, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 3897, column: 2)
!9555 = !DILocation(line: 3899, column: 25, scope: !9554)
!9556 = !DILocation(line: 3899, column: 4, scope: !9554)
!9557 = !DILocation(line: 3900, column: 2, scope: !9554)
!9558 = !DILocation(line: 3902, column: 12, scope: !9536)
!9559 = !DILocation(line: 3902, column: 12, scope: !9533)
!9560 = !DILocation(line: 3904, column: 18, scope: !9535)
!9561 = !DILocation(line: 3905, column: 12, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 3905, column: 11)
!9563 = !DILocation(line: 3905, column: 11, scope: !9535)
!9564 = !DILocation(line: 3907, column: 24, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 3906, column: 2)
!9566 = !DILocation(line: 3908, column: 4, scope: !9565)
!9567 = !DILocation(line: 3909, column: 2, scope: !9565)
!9568 = !DILocation(line: 3913, column: 1, scope: !9526)
!9569 = distinct !DISubprogram(name: "output_constant_pool_1", scope: !3, file: !3, line: 3818, type: !9570, scopeLine: 3820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9572)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{null, !1017, !7}
!9572 = !{!9573, !9574, !9575, !9576}
!9573 = !DILocalVariable(name: "desc", arg: 1, scope: !9569, file: !3, line: 3818, type: !1017)
!9574 = !DILocalVariable(name: "align", arg: 2, scope: !9569, file: !3, line: 3819, type: !7)
!9575 = !DILocalVariable(name: "x", scope: !9569, file: !3, line: 3821, type: !811)
!9576 = !DILocalVariable(name: "tmp", scope: !9569, file: !3, line: 3821, type: !811)
!9577 = !DILocation(line: 0, scope: !9569)
!9578 = !DILocation(line: 3823, column: 13, scope: !9569)
!9579 = !DILocation(line: 3835, column: 11, scope: !9569)
!9580 = !DILocation(line: 3835, column: 3, scope: !9569)
!9581 = !DILocation(line: 3838, column: 11, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3838, column: 11)
!9583 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 3836, column: 5)
!9584 = !DILocation(line: 3838, column: 36, scope: !9582)
!9585 = !DILocation(line: 3839, column: 4, scope: !9582)
!9586 = !DILocation(line: 3839, column: 7, scope: !9582)
!9587 = !DILocation(line: 3839, column: 42, scope: !9582)
!9588 = !DILocation(line: 3838, column: 11, scope: !9583)
!9589 = !DILocation(line: 3841, column: 7, scope: !9583)
!9590 = !DILocation(line: 3845, column: 13, scope: !9583)
!9591 = !DILocation(line: 3846, column: 7, scope: !9583)
!9592 = !DILocation(line: 3847, column: 7, scope: !9583)
!9593 = !DILocation(line: 3860, column: 3, scope: !9569)
!9594 = !DILocation(line: 3863, column: 19, scope: !9569)
!9595 = !DILocation(line: 3863, column: 35, scope: !9569)
!9596 = !DILocation(line: 3863, column: 61, scope: !9569)
!9597 = !DILocation(line: 3863, column: 55, scope: !9569)
!9598 = !DILocation(line: 3863, column: 3, scope: !9569)
!9599 = !DILocation(line: 3866, column: 33, scope: !9569)
!9600 = !DILocation(line: 3866, column: 3, scope: !9569)
!9601 = !DILocation(line: 3870, column: 15, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 3870, column: 7)
!9603 = !DILocation(line: 3870, column: 13, scope: !9602)
!9604 = !DILocation(line: 3871, column: 10, scope: !9602)
!9605 = !DILocation(line: 3871, column: 7, scope: !9602)
!9606 = !DILocation(line: 3872, column: 30, scope: !9602)
!9607 = !DILocation(line: 3872, column: 36, scope: !9602)
!9608 = !DILocation(line: 3870, column: 7, scope: !9569)
!9609 = !DILocation(line: 3873, column: 5, scope: !9602)
!9610 = !DILocation(line: 3879, column: 1, scope: !9569)
!9611 = distinct !DISubprogram(name: "output_constant_pool_2", scope: !3, file: !3, line: 3763, type: !9612, scopeLine: 3764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9614)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{null, !5, !811, !7}
!9614 = !{!9615, !9616, !9617, !9618, !9621, !9623, !9624, !9625, !9626}
!9615 = !DILocalVariable(name: "mode", arg: 1, scope: !9611, file: !3, line: 3763, type: !5)
!9616 = !DILocalVariable(name: "x", arg: 2, scope: !9611, file: !3, line: 3763, type: !811)
!9617 = !DILocalVariable(name: "align", arg: 3, scope: !9611, file: !3, line: 3763, type: !7)
!9618 = !DILocalVariable(name: "r", scope: !9619, file: !3, line: 3770, type: !701)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 3769, column: 7)
!9620 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 3766, column: 5)
!9621 = !DILocalVariable(name: "i", scope: !9622, file: !3, line: 3794, type: !623)
!9622 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 3793, column: 7)
!9623 = !DILocalVariable(name: "units", scope: !9622, file: !3, line: 3794, type: !623)
!9624 = !DILocalVariable(name: "submode", scope: !9622, file: !3, line: 3795, type: !5)
!9625 = !DILocalVariable(name: "subalign", scope: !9622, file: !3, line: 3796, type: !7)
!9626 = !DILocalVariable(name: "elt", scope: !9627, file: !3, line: 3803, type: !811)
!9627 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 3802, column: 4)
!9628 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3801, column: 2)
!9629 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 3801, column: 2)
!9630 = !DILocation(line: 0, scope: !9611)
!9631 = !DILocation(line: 3765, column: 11, scope: !9611)
!9632 = !DILocation(line: 3765, column: 3, scope: !9611)
!9633 = !DILocation(line: 3770, column: 2, scope: !9619)
!9634 = !DILocation(line: 3772, column: 2, scope: !9619)
!9635 = !DILocation(line: 3773, column: 2, scope: !9619)
!9636 = !DILocation(line: 0, scope: !9619)
!9637 = !DILocation(line: 3774, column: 2, scope: !9619)
!9638 = !DILocation(line: 3776, column: 7, scope: !9620)
!9639 = !DILocation(line: 3784, column: 28, scope: !9620)
!9640 = !DILocation(line: 3784, column: 7, scope: !9620)
!9641 = !DILocation(line: 3785, column: 7, scope: !9620)
!9642 = !DILocation(line: 3795, column: 37, scope: !9622)
!9643 = !DILocation(line: 0, scope: !9622)
!9644 = !DILocation(line: 3796, column: 26, scope: !9622)
!9645 = !DILocation(line: 3798, column: 2, scope: !9622)
!9646 = !DILocation(line: 3799, column: 10, scope: !9622)
!9647 = !DILocation(line: 3801, column: 7, scope: !9629)
!9648 = !DILocation(line: 0, scope: !9629)
!9649 = !DILocation(line: 3801, column: 16, scope: !9628)
!9650 = !DILocation(line: 3801, column: 2, scope: !9629)
!9651 = !DILocation(line: 3803, column: 16, scope: !9627)
!9652 = !DILocation(line: 0, scope: !9627)
!9653 = !DILocation(line: 3804, column: 44, scope: !9627)
!9654 = !DILocation(line: 3804, column: 6, scope: !9627)
!9655 = !DILocation(line: 3801, column: 26, scope: !9628)
!9656 = !DILocation(line: 3801, column: 2, scope: !9628)
!9657 = distinct !{!9657, !9650, !9658}
!9658 = !DILocation(line: 3805, column: 4, scope: !9629)
!9659 = !DILocation(line: 3810, column: 7, scope: !9620)
!9660 = !DILocation(line: 3811, column: 5, scope: !9620)
!9661 = !DILocation(line: 3812, column: 1, scope: !9611)
!9662 = distinct !DISubprogram(name: "narrowing_initializer_constant_valid_p", scope: !3, file: !3, line: 4164, type: !5966, scopeLine: 4165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9663)
!9663 = !{!9664, !9665, !9666, !9667, !9668, !9669, !9671}
!9664 = !DILocalVariable(name: "value", arg: 1, scope: !9662, file: !3, line: 4164, type: !639)
!9665 = !DILocalVariable(name: "endtype", arg: 2, scope: !9662, file: !3, line: 4164, type: !639)
!9666 = !DILocalVariable(name: "cache", arg: 3, scope: !9662, file: !3, line: 4164, type: !1434)
!9667 = !DILocalVariable(name: "op0", scope: !9662, file: !3, line: 4166, type: !639)
!9668 = !DILocalVariable(name: "op1", scope: !9662, file: !3, line: 4166, type: !639)
!9669 = !DILocalVariable(name: "inner", scope: !9670, file: !3, line: 4182, type: !639)
!9670 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 4181, column: 5)
!9671 = !DILocalVariable(name: "inner", scope: !9672, file: !3, line: 4194, type: !639)
!9672 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 4193, column: 5)
!9673 = !DILocation(line: 0, scope: !9662)
!9674 = !DILocation(line: 4168, column: 8, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 4168, column: 7)
!9676 = !DILocation(line: 4168, column: 7, scope: !9662)
!9677 = !DILocation(line: 4171, column: 9, scope: !9662)
!9678 = !DILocation(line: 4172, column: 9, scope: !9662)
!9679 = !DILocation(line: 4179, column: 3, scope: !9662)
!9680 = !DILocation(line: 4171, column: 7, scope: !9662)
!9681 = !DILocation(line: 4179, column: 10, scope: !9662)
!9682 = !DILocation(line: 4180, column: 3, scope: !9662)
!9683 = !DILocation(line: 4182, column: 20, scope: !9670)
!9684 = !DILocation(line: 0, scope: !9670)
!9685 = !DILocation(line: 4183, column: 20, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 4183, column: 11)
!9687 = !DILocation(line: 4183, column: 17, scope: !9686)
!9688 = !DILocation(line: 4184, column: 4, scope: !9686)
!9689 = !DILocation(line: 4184, column: 9, scope: !9686)
!9690 = !DILocation(line: 4185, column: 4, scope: !9686)
!9691 = !DILocation(line: 4185, column: 8, scope: !9686)
!9692 = !DILocation(line: 4186, column: 10, scope: !9686)
!9693 = !DILocation(line: 4186, column: 8, scope: !9686)
!9694 = !DILocation(line: 4183, column: 11, scope: !9670)
!9695 = distinct !{!9695, !9679, !9696}
!9696 = !DILocation(line: 4189, column: 5, scope: !9662)
!9697 = !DILocation(line: 4191, column: 3, scope: !9662)
!9698 = !DILocation(line: 4172, column: 7, scope: !9662)
!9699 = !DILocation(line: 4191, column: 10, scope: !9662)
!9700 = !DILocation(line: 4192, column: 3, scope: !9662)
!9701 = !DILocation(line: 4194, column: 20, scope: !9672)
!9702 = !DILocation(line: 0, scope: !9672)
!9703 = !DILocation(line: 4195, column: 20, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 4195, column: 11)
!9705 = !DILocation(line: 4195, column: 17, scope: !9704)
!9706 = !DILocation(line: 4196, column: 4, scope: !9704)
!9707 = !DILocation(line: 4196, column: 9, scope: !9704)
!9708 = !DILocation(line: 4197, column: 4, scope: !9704)
!9709 = !DILocation(line: 4197, column: 8, scope: !9704)
!9710 = !DILocation(line: 4198, column: 10, scope: !9704)
!9711 = !DILocation(line: 4198, column: 8, scope: !9704)
!9712 = !DILocation(line: 4195, column: 11, scope: !9672)
!9713 = distinct !{!9713, !9697, !9714}
!9714 = !DILocation(line: 4201, column: 5, scope: !9662)
!9715 = !DILocation(line: 4203, column: 9, scope: !9662)
!9716 = !DILocation(line: 4204, column: 8, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 4204, column: 7)
!9718 = !DILocation(line: 4204, column: 7, scope: !9662)
!9719 = !DILocation(line: 4208, column: 6, scope: !9662)
!9720 = !DILocation(line: 4207, column: 9, scope: !9662)
!9721 = !DILocation(line: 4210, column: 7, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 4210, column: 7)
!9723 = !DILocation(line: 4210, column: 7, scope: !9662)
!9724 = !DILocation(line: 4212, column: 15, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 4212, column: 11)
!9726 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 4211, column: 5)
!9727 = !DILocation(line: 4213, column: 4, scope: !9725)
!9728 = !DILocation(line: 4213, column: 15, scope: !9725)
!9729 = !DILocation(line: 4213, column: 12, scope: !9725)
!9730 = !DILocation(line: 4214, column: 8, scope: !9725)
!9731 = !DILocation(line: 4214, column: 11, scope: !9725)
!9732 = !DILocation(line: 4214, column: 29, scope: !9725)
!9733 = !DILocation(line: 4212, column: 11, scope: !9726)
!9734 = !DILocation(line: 4215, column: 2, scope: !9725)
!9735 = !DILocation(line: 4218, column: 11, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 4218, column: 11)
!9737 = !DILocation(line: 4218, column: 27, scope: !9736)
!9738 = !DILocation(line: 4219, column: 4, scope: !9736)
!9739 = !DILocation(line: 4219, column: 7, scope: !9736)
!9740 = !DILocation(line: 4219, column: 23, scope: !9736)
!9741 = !DILocation(line: 4218, column: 11, scope: !9726)
!9742 = !DILocation(line: 4220, column: 9, scope: !9736)
!9743 = !DILocation(line: 4220, column: 2, scope: !9736)
!9744 = !DILocation(line: 4222, column: 27, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 4222, column: 11)
!9746 = !DILocation(line: 4223, column: 4, scope: !9745)
!9747 = !DILocation(line: 4223, column: 7, scope: !9745)
!9748 = !DILocation(line: 4223, column: 23, scope: !9745)
!9749 = !DILocation(line: 4224, column: 4, scope: !9745)
!9750 = !DILocation(line: 4224, column: 7, scope: !9745)
!9751 = !DILocation(line: 4225, column: 9, scope: !9745)
!9752 = !DILocation(line: 4222, column: 11, scope: !9726)
!9753 = !DILocation(line: 4229, column: 1, scope: !9662)
!9754 = distinct !DISubprogram(name: "VEC_constructor_elt_base_iterate", scope: !151, file: !151, line: 1537, type: !9755, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9758)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!623, !4272, !7, !9757}
!9757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4226, size: 64)
!9758 = !{!9759, !9760, !9761}
!9759 = !DILocalVariable(name: "vec_", arg: 1, scope: !9754, file: !151, line: 1537, type: !4272)
!9760 = !DILocalVariable(name: "ix_", arg: 2, scope: !9754, file: !151, line: 1537, type: !7)
!9761 = !DILocalVariable(name: "ptr", arg: 3, scope: !9754, file: !151, line: 1537, type: !9757)
!9762 = !DILocation(line: 0, scope: !9754)
!9763 = !DILocation(line: 1537, column: 1, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9754, file: !151, line: 1537, column: 1)
!9765 = !DILocation(line: 1537, column: 1, scope: !9754)
!9766 = !DILocation(line: 1537, column: 1, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9764, file: !151, line: 1537, column: 1)
!9768 = !DILocation(line: 1537, column: 1, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !151, line: 1537, column: 1)
!9770 = !DILocation(line: 0, scope: !9764)
!9771 = distinct !DISubprogram(name: "output_constructor_array_range", scope: !3, file: !3, line: 4829, type: !9772, scopeLine: 4830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9775)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{null, !9774}
!9774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 64)
!9775 = !{!9776, !9777, !9778, !9779, !9780, !9781}
!9776 = !DILocalVariable(name: "local", arg: 1, scope: !9771, file: !3, line: 4829, type: !9774)
!9777 = !DILocalVariable(name: "fieldsize", scope: !9771, file: !3, line: 4831, type: !692)
!9778 = !DILocalVariable(name: "lo_index", scope: !9771, file: !3, line: 4834, type: !694)
!9779 = !DILocalVariable(name: "hi_index", scope: !9771, file: !3, line: 4836, type: !694)
!9780 = !DILocalVariable(name: "index", scope: !9771, file: !3, line: 4838, type: !694)
!9781 = !DILocalVariable(name: "align2", scope: !9771, file: !3, line: 4840, type: !7)
!9782 = !DILocation(line: 0, scope: !9771)
!9783 = !DILocation(line: 4832, column: 26, scope: !9771)
!9784 = !DILocation(line: 4832, column: 7, scope: !9771)
!9785 = !DILocation(line: 4835, column: 21, scope: !9771)
!9786 = !DILocation(line: 4835, column: 7, scope: !9771)
!9787 = !DILocation(line: 4837, column: 21, scope: !9771)
!9788 = !DILocation(line: 4837, column: 7, scope: !9771)
!9789 = !DILocation(line: 4841, column: 25, scope: !9771)
!9790 = !DILocation(line: 4841, column: 32, scope: !9771)
!9791 = !DILocation(line: 4841, column: 7, scope: !9771)
!9792 = !DILocation(line: 0, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 4846, column: 11)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 4844, column: 5)
!9795 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 4843, column: 3)
!9796 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 4843, column: 3)
!9797 = !DILocation(line: 0, scope: !9794)
!9798 = !DILocation(line: 4843, column: 8, scope: !9796)
!9799 = !DILocation(line: 0, scope: !9796)
!9800 = !DILocation(line: 4843, column: 32, scope: !9795)
!9801 = !DILocation(line: 4843, column: 3, scope: !9796)
!9802 = !DILocation(line: 4846, column: 18, scope: !9793)
!9803 = !DILocation(line: 4846, column: 22, scope: !9793)
!9804 = !DILocation(line: 4846, column: 11, scope: !9794)
!9805 = !DILocation(line: 4847, column: 2, scope: !9793)
!9806 = !DILocation(line: 4849, column: 2, scope: !9793)
!9807 = !DILocation(line: 4852, column: 26, scope: !9794)
!9808 = !DILocation(line: 4843, column: 50, scope: !9795)
!9809 = !DILocation(line: 4843, column: 3, scope: !9795)
!9810 = distinct !{!9810, !9801, !9811}
!9811 = !DILocation(line: 4853, column: 5, scope: !9796)
!9812 = !DILocation(line: 4854, column: 1, scope: !9771)
!9813 = distinct !DISubprogram(name: "output_constructor_regular_field", scope: !3, file: !3, line: 4860, type: !9772, scopeLine: 4861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817, !9818}
!9815 = !DILocalVariable(name: "local", arg: 1, scope: !9813, file: !3, line: 4860, type: !9774)
!9816 = !DILocalVariable(name: "fieldsize", scope: !9813, file: !3, line: 4864, type: !692)
!9817 = !DILocalVariable(name: "fieldpos", scope: !9813, file: !3, line: 4865, type: !694)
!9818 = !DILocalVariable(name: "align2", scope: !9813, file: !3, line: 4867, type: !7)
!9819 = !DILocation(line: 0, scope: !9813)
!9820 = !DILocation(line: 4869, column: 14, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4869, column: 7)
!9822 = !DILocation(line: 4869, column: 20, scope: !9821)
!9823 = !DILocation(line: 4869, column: 7, scope: !9813)
!9824 = !DILocation(line: 4870, column: 31, scope: !9821)
!9825 = !DILocation(line: 4870, column: 17, scope: !9821)
!9826 = !DILocation(line: 4871, column: 28, scope: !9821)
!9827 = !DILocation(line: 4871, column: 7, scope: !9821)
!9828 = !DILocation(line: 4872, column: 30, scope: !9821)
!9829 = !DILocation(line: 4872, column: 9, scope: !9821)
!9830 = !DILocation(line: 4872, column: 7, scope: !9821)
!9831 = !DILocation(line: 4871, column: 3, scope: !9821)
!9832 = !DILocation(line: 4870, column: 5, scope: !9821)
!9833 = !DILocation(line: 4873, column: 19, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4873, column: 12)
!9835 = !DILocation(line: 4873, column: 25, scope: !9834)
!9836 = !DILocation(line: 4873, column: 12, scope: !9821)
!9837 = !DILocation(line: 4874, column: 16, scope: !9834)
!9838 = !DILocation(line: 4874, column: 5, scope: !9834)
!9839 = !DILocation(line: 0, scope: !9821)
!9840 = !DILocation(line: 4879, column: 14, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4879, column: 7)
!9842 = !DILocation(line: 4879, column: 7, scope: !9841)
!9843 = !DILocation(line: 4879, column: 7, scope: !9813)
!9844 = !DILocation(line: 4881, column: 25, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 4880, column: 5)
!9846 = !DILocation(line: 4881, column: 7, scope: !9845)
!9847 = !DILocation(line: 4882, column: 14, scope: !9845)
!9848 = !DILocation(line: 4882, column: 25, scope: !9845)
!9849 = !DILocation(line: 4883, column: 33, scope: !9845)
!9850 = !DILocation(line: 4884, column: 5, scope: !9845)
!9851 = !DILocation(line: 4889, column: 15, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4889, column: 7)
!9853 = !DILocation(line: 4889, column: 21, scope: !9852)
!9854 = !DILocation(line: 4889, column: 34, scope: !9852)
!9855 = !DILocation(line: 4889, column: 44, scope: !9852)
!9856 = !DILocation(line: 4889, column: 50, scope: !9852)
!9857 = !DILocation(line: 4890, column: 7, scope: !9852)
!9858 = !DILocation(line: 4890, column: 29, scope: !9852)
!9859 = !DILocation(line: 4890, column: 19, scope: !9852)
!9860 = !DILocation(line: 4889, column: 7, scope: !9813)
!9861 = !DILocation(line: 4892, column: 7, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 4891, column: 5)
!9863 = !DILocation(line: 4893, column: 41, scope: !9862)
!9864 = !DILocation(line: 4893, column: 32, scope: !9862)
!9865 = !DILocation(line: 4893, column: 7, scope: !9862)
!9866 = !DILocation(line: 4894, column: 26, scope: !9862)
!9867 = !DILocation(line: 4895, column: 5, scope: !9862)
!9868 = !DILocation(line: 4898, column: 30, scope: !9813)
!9869 = !DILocation(line: 4898, column: 37, scope: !9813)
!9870 = !DILocation(line: 4898, column: 12, scope: !9813)
!9871 = !DILocation(line: 4901, column: 14, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4901, column: 7)
!9873 = !DILocation(line: 4901, column: 7, scope: !9872)
!9874 = !DILocation(line: 4901, column: 7, scope: !9813)
!9875 = !DILocation(line: 4910, column: 11, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 4910, column: 11)
!9877 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 4902, column: 5)
!9878 = !DILocation(line: 4910, column: 48, scope: !9876)
!9879 = !DILocation(line: 4911, column: 4, scope: !9876)
!9880 = !DILocation(line: 4911, column: 7, scope: !9876)
!9881 = !DILocation(line: 4912, column: 4, scope: !9876)
!9882 = !DILocation(line: 4912, column: 9, scope: !9876)
!9883 = !DILocation(line: 4910, column: 11, scope: !9877)
!9884 = !DILocation(line: 4914, column: 51, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 4913, column: 2)
!9886 = !DILocation(line: 4914, column: 16, scope: !9885)
!9887 = !DILocation(line: 4917, column: 4, scope: !9885)
!9888 = !DILocation(line: 4919, column: 16, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 4919, column: 16)
!9890 = !DILocation(line: 4919, column: 16, scope: !9876)
!9891 = !DILocation(line: 4923, column: 8, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 4923, column: 8)
!9893 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 4920, column: 2)
!9894 = !DILocation(line: 4923, column: 8, scope: !9893)
!9895 = !DILocation(line: 4924, column: 32, scope: !9892)
!9896 = !DILocation(line: 4924, column: 18, scope: !9892)
!9897 = !DILocation(line: 4924, column: 6, scope: !9892)
!9898 = !DILocation(line: 4928, column: 36, scope: !9872)
!9899 = !DILocation(line: 4928, column: 17, scope: !9872)
!9900 = !DILocation(line: 0, scope: !9872)
!9901 = !DILocation(line: 4931, column: 14, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 4931, column: 7)
!9903 = !DILocation(line: 4931, column: 18, scope: !9902)
!9904 = !DILocation(line: 4931, column: 7, scope: !9813)
!9905 = !DILocation(line: 4932, column: 5, scope: !9902)
!9906 = !DILocation(line: 4934, column: 5, scope: !9902)
!9907 = !DILocation(line: 4937, column: 10, scope: !9813)
!9908 = !DILocation(line: 4937, column: 22, scope: !9813)
!9909 = !DILocation(line: 4938, column: 1, scope: !9813)
!9910 = distinct !DISubprogram(name: "output_constructor_bitfield", scope: !3, file: !3, line: 4944, type: !9911, scopeLine: 4945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9913)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{null, !9774, !6516}
!9913 = !{!9914, !9915, !9916, !9917, !9918, !9919, !9920, !9921, !9922, !9925, !9927, !9928, !9929, !9930}
!9914 = !DILocalVariable(name: "local", arg: 1, scope: !9910, file: !3, line: 4944, type: !9774)
!9915 = !DILocalVariable(name: "outer", arg: 2, scope: !9910, file: !3, line: 4944, type: !6516)
!9916 = !DILocalVariable(name: "ebitsize", scope: !9910, file: !3, line: 4947, type: !694)
!9917 = !DILocalVariable(name: "relative_index", scope: !9910, file: !3, line: 4953, type: !694)
!9918 = !DILocalVariable(name: "constructor_relative_ebitpos", scope: !9910, file: !3, line: 4963, type: !694)
!9919 = !DILocalVariable(name: "byte_relative_ebitpos", scope: !9910, file: !3, line: 4970, type: !694)
!9920 = !DILocalVariable(name: "next_offset", scope: !9910, file: !3, line: 4976, type: !694)
!9921 = !DILocalVariable(name: "end_offset", scope: !9910, file: !3, line: 4977, type: !694)
!9922 = !DILocalVariable(name: "output_state", scope: !9923, file: !3, line: 5028, type: !6517)
!9923 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 5027, column: 5)
!9924 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 5026, column: 7)
!9925 = !DILocalVariable(name: "this_time", scope: !9926, file: !3, line: 5043, type: !623)
!9926 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 5042, column: 5)
!9927 = !DILocalVariable(name: "shift", scope: !9926, file: !3, line: 5044, type: !623)
!9928 = !DILocalVariable(name: "value", scope: !9926, file: !3, line: 5045, type: !694)
!9929 = !DILocalVariable(name: "next_byte", scope: !9926, file: !3, line: 5046, type: !694)
!9930 = !DILocalVariable(name: "next_bit", scope: !9926, file: !3, line: 5047, type: !694)
!9931 = !DILocation(line: 0, scope: !9910)
!9932 = !DILocation(line: 4948, column: 15, scope: !9910)
!9933 = !DILocation(line: 4948, column: 8, scope: !9910)
!9934 = !DILocation(line: 4949, column: 24, scope: !9910)
!9935 = !DILocation(line: 4949, column: 10, scope: !9910)
!9936 = !DILocation(line: 4950, column: 24, scope: !9910)
!9937 = !DILocation(line: 4950, column: 10, scope: !9910)
!9938 = !DILocation(line: 4954, column: 16, scope: !9910)
!9939 = !DILocation(line: 4954, column: 9, scope: !9910)
!9940 = !DILocation(line: 4954, column: 8, scope: !9910)
!9941 = !DILocation(line: 4955, column: 18, scope: !9910)
!9942 = !DILocation(line: 4955, column: 11, scope: !9910)
!9943 = !DILocation(line: 4956, column: 7, scope: !9910)
!9944 = !DILocation(line: 4957, column: 30, scope: !9910)
!9945 = !DILocation(line: 4957, column: 9, scope: !9910)
!9946 = !DILocation(line: 4957, column: 7, scope: !9910)
!9947 = !DILocation(line: 4964, column: 17, scope: !9910)
!9948 = !DILocation(line: 4958, column: 13, scope: !9910)
!9949 = !DILocation(line: 4958, column: 33, scope: !9910)
!9950 = !DILocation(line: 4958, column: 6, scope: !9910)
!9951 = !DILocation(line: 4964, column: 10, scope: !9910)
!9952 = !DILocation(line: 4965, column: 5, scope: !9910)
!9953 = !DILocation(line: 4966, column: 14, scope: !9910)
!9954 = !DILocation(line: 4971, column: 11, scope: !9910)
!9955 = !DILocation(line: 4971, column: 26, scope: !9910)
!9956 = !DILocation(line: 4971, column: 42, scope: !9910)
!9957 = !DILocation(line: 4977, column: 52, scope: !9910)
!9958 = !DILocation(line: 4979, column: 32, scope: !9910)
!9959 = !DILocation(line: 4979, column: 10, scope: !9910)
!9960 = !DILocation(line: 4979, column: 30, scope: !9910)
!9961 = !DILocation(line: 4981, column: 14, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4981, column: 7)
!9963 = !DILocation(line: 4981, column: 18, scope: !9962)
!9964 = !DILocation(line: 4981, column: 7, scope: !9910)
!9965 = !DILocation(line: 4982, column: 18, scope: !9962)
!9966 = !DILocation(line: 4982, column: 16, scope: !9962)
!9967 = !DILocation(line: 4982, column: 5, scope: !9962)
!9968 = !DILocation(line: 4984, column: 3, scope: !9910)
!9969 = !DILocation(line: 4984, column: 10, scope: !9910)
!9970 = !DILocation(line: 4984, column: 33, scope: !9910)
!9971 = !DILocation(line: 4985, column: 3, scope: !9910)
!9972 = !DILocation(line: 4985, column: 6, scope: !9910)
!9973 = !DILocation(line: 4985, column: 29, scope: !9910)
!9974 = !DILocation(line: 4986, column: 18, scope: !9910)
!9975 = !DILocation(line: 4986, column: 16, scope: !9910)
!9976 = distinct !{!9976, !9968, !9974}
!9977 = !DILocation(line: 4988, column: 7, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4988, column: 7)
!9979 = !DILocation(line: 4988, column: 30, scope: !9978)
!9980 = !DILocation(line: 4989, column: 7, scope: !9978)
!9981 = !DILocation(line: 4989, column: 10, scope: !9978)
!9982 = !DILocation(line: 4989, column: 33, scope: !9978)
!9983 = !DILocation(line: 4988, column: 7, scope: !9910)
!9984 = !DILocation(line: 4991, column: 54, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 4990, column: 5)
!9986 = !DILocation(line: 4991, column: 7, scope: !9985)
!9987 = !DILocation(line: 4992, column: 7, scope: !9985)
!9988 = !DILocation(line: 4997, column: 19, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4997, column: 7)
!9990 = !DILocation(line: 4997, column: 45, scope: !9989)
!9991 = !DILocation(line: 4997, column: 35, scope: !9989)
!9992 = !DILocation(line: 4997, column: 7, scope: !9910)
!9993 = !DILocation(line: 5000, column: 18, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 5000, column: 11)
!9995 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 4998, column: 5)
!9996 = !DILocation(line: 5000, column: 11, scope: !9994)
!9997 = !DILocation(line: 5000, column: 11, scope: !9995)
!9998 = !DILocation(line: 5002, column: 22, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 5001, column: 2)
!10000 = !DILocation(line: 5002, column: 4, scope: !9999)
!10001 = !DILocation(line: 5003, column: 22, scope: !9999)
!10002 = !DILocation(line: 5004, column: 30, scope: !9999)
!10003 = !DILocation(line: 5005, column: 2, scope: !9999)
!10004 = !DILocation(line: 5008, column: 49, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 5008, column: 11)
!10006 = !DILocation(line: 5008, column: 39, scope: !10005)
!10007 = !DILocation(line: 5008, column: 11, scope: !9995)
!10008 = !DILocation(line: 5010, column: 4, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 5009, column: 2)
!10010 = !DILocation(line: 5011, column: 57, scope: !10009)
!10011 = !DILocation(line: 5011, column: 48, scope: !10009)
!10012 = !DILocation(line: 5011, column: 4, scope: !10009)
!10013 = !DILocation(line: 5012, column: 23, scope: !10009)
!10014 = !DILocation(line: 5013, column: 2, scope: !10009)
!10015 = !DILocation(line: 5017, column: 15, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 5017, column: 7)
!10017 = !DILocation(line: 5017, column: 8, scope: !10016)
!10018 = !DILocation(line: 5017, column: 7, scope: !9910)
!10019 = !DILocation(line: 5019, column: 14, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 5018, column: 5)
!10021 = !DILocation(line: 5019, column: 19, scope: !10020)
!10022 = !DILocation(line: 5020, column: 20, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 5020, column: 11)
!10024 = !DILocation(line: 5020, column: 11, scope: !10020)
!10025 = !DILocation(line: 5021, column: 28, scope: !10023)
!10026 = !DILocation(line: 5021, column: 2, scope: !10023)
!10027 = !DILocation(line: 5026, column: 7, scope: !9924)
!10028 = !DILocation(line: 5026, column: 30, scope: !9924)
!10029 = !DILocation(line: 5026, column: 7, scope: !9910)
!10030 = !DILocation(line: 0, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 5052, column: 2)
!10032 = !DILocation(line: 0, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 5116, column: 6)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 5113, column: 8)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 5097, column: 2)
!10036 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 5062, column: 11)
!10037 = !DILocation(line: 5041, column: 3, scope: !9910)
!10038 = !DILocation(line: 5028, column: 7, scope: !9923)
!10039 = !DILocation(line: 5030, column: 45, scope: !9923)
!10040 = !DILocation(line: 5030, column: 33, scope: !9923)
!10041 = !DILocation(line: 5030, column: 20, scope: !9923)
!10042 = !DILocation(line: 5030, column: 31, scope: !9923)
!10043 = !DILocation(line: 5031, column: 34, scope: !9923)
!10044 = !DILocation(line: 5031, column: 20, scope: !9923)
!10045 = !DILocation(line: 5031, column: 25, scope: !9923)
!10046 = !DILocation(line: 0, scope: !9923)
!10047 = !DILocation(line: 5033, column: 7, scope: !9923)
!10048 = !DILocation(line: 5033, column: 4, scope: !9923)
!10049 = !DILocation(line: 5034, column: 34, scope: !9923)
!10050 = !DILocation(line: 5034, column: 19, scope: !9923)
!10051 = !DILocation(line: 5036, column: 5, scope: !9924)
!10052 = !DILocation(line: 5041, column: 22, scope: !9910)
!10053 = !DILocation(line: 5046, column: 45, scope: !9926)
!10054 = !DILocation(line: 0, scope: !9926)
!10055 = !DILocation(line: 5051, column: 34, scope: !9926)
!10056 = !DILocation(line: 5051, column: 7, scope: !9926)
!10057 = !DILocation(line: 5051, column: 24, scope: !9926)
!10058 = !DILocation(line: 5053, column: 22, scope: !10031)
!10059 = !DILocation(line: 5053, column: 4, scope: !10031)
!10060 = !DILocation(line: 5054, column: 22, scope: !10031)
!10061 = !DILocation(line: 5055, column: 16, scope: !10031)
!10062 = distinct !{!10062, !10056, !10063}
!10063 = !DILocation(line: 5056, column: 2, scope: !9926)
!10064 = !DILocation(line: 5047, column: 44, scope: !9926)
!10065 = !DILocation(line: 5060, column: 19, scope: !9926)
!10066 = !DILocation(line: 5102, column: 24, scope: !10035)
!10067 = !DILocation(line: 5102, column: 12, scope: !10035)
!10068 = !DILocation(line: 5108, column: 14, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 5108, column: 8)
!10070 = !DILocation(line: 5109, column: 17, scope: !10069)
!10071 = !DILocation(line: 5109, column: 29, scope: !10069)
!10072 = !DILocation(line: 5109, column: 8, scope: !10069)
!10073 = !DILocation(line: 5113, column: 8, scope: !10035)
!10074 = !DILocation(line: 5114, column: 14, scope: !10034)
!10075 = !DILocation(line: 5114, column: 6, scope: !10034)
!10076 = !DILocation(line: 5117, column: 8, scope: !10033)
!10077 = !DILocation(line: 5118, column: 16, scope: !10033)
!10078 = !DILocation(line: 5119, column: 14, scope: !10033)
!10079 = !DILocation(line: 0, scope: !10035)
!10080 = !DILocation(line: 0, scope: !10034)
!10081 = !DILocation(line: 5124, column: 28, scope: !10035)
!10082 = !DILocation(line: 5125, column: 43, scope: !10035)
!10083 = !DILocation(line: 5125, column: 29, scope: !10035)
!10084 = !DILocation(line: 5125, column: 49, scope: !10035)
!10085 = !DILocation(line: 5125, column: 7, scope: !10035)
!10086 = !DILocation(line: 5126, column: 6, scope: !10035)
!10087 = !DILocation(line: 5124, column: 16, scope: !10035)
!10088 = !DILocation(line: 5129, column: 22, scope: !9926)
!10089 = !DILocation(line: 5129, column: 19, scope: !9926)
!10090 = !DILocation(line: 5130, column: 33, scope: !9926)
!10091 = distinct !{!10091, !10037, !10092}
!10092 = !DILocation(line: 5131, column: 5, scope: !9910)
!10093 = !DILocation(line: 5132, column: 1, scope: !9910)
!10094 = distinct !DISubprogram(name: "array_size_for_constructor", scope: !3, file: !3, line: 4759, type: !10095, scopeLine: 4760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!692, !639}
!10097 = !{!10098, !10099, !10100, !10101, !10102, !10103, !10104}
!10098 = !DILocalVariable(name: "val", arg: 1, scope: !10094, file: !3, line: 4759, type: !639)
!10099 = !DILocalVariable(name: "max_index", scope: !10094, file: !3, line: 4761, type: !639)
!10100 = !DILocalVariable(name: "i", scope: !10094, file: !3, line: 4761, type: !639)
!10101 = !DILocalVariable(name: "cnt", scope: !10094, file: !3, line: 4762, type: !692)
!10102 = !DILocalVariable(name: "index", scope: !10094, file: !3, line: 4763, type: !639)
!10103 = !DILocalVariable(name: "value", scope: !10094, file: !3, line: 4763, type: !639)
!10104 = !DILocalVariable(name: "tmp", scope: !10094, file: !3, line: 4763, type: !639)
!10105 = !DILocation(line: 0, scope: !10094)
!10106 = !DILocation(line: 4768, column: 7, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 4768, column: 7)
!10108 = !DILocation(line: 4768, column: 23, scope: !10107)
!10109 = !DILocation(line: 4768, column: 7, scope: !10094)
!10110 = !DILocation(line: 0, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 4772, column: 3)
!10112 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 4772, column: 3)
!10113 = !DILocation(line: 4772, column: 3, scope: !10112)
!10114 = !DILocation(line: 4769, column: 12, scope: !10107)
!10115 = !DILocation(line: 4769, column: 5, scope: !10107)
!10116 = !DILocation(line: 0, scope: !10112)
!10117 = !DILocation(line: 4772, column: 3, scope: !10111)
!10118 = !DILocation(line: 4774, column: 11, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 4774, column: 11)
!10120 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 4773, column: 5)
!10121 = !DILocation(line: 4774, column: 29, scope: !10119)
!10122 = !DILocation(line: 4774, column: 11, scope: !10120)
!10123 = !DILocation(line: 4775, column: 10, scope: !10119)
!10124 = !DILocation(line: 4775, column: 2, scope: !10119)
!10125 = !DILocation(line: 4776, column: 21, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 4776, column: 11)
!10127 = !DILocation(line: 4776, column: 34, scope: !10126)
!10128 = !DILocation(line: 4776, column: 37, scope: !10126)
!10129 = !DILocation(line: 4776, column: 11, scope: !10120)
!10130 = !DILocation(line: 4777, column: 2, scope: !10126)
!10131 = distinct !{!10131, !10113, !10132}
!10132 = !DILocation(line: 4778, column: 5, scope: !10112)
!10133 = !DILocation(line: 4780, column: 17, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 4780, column: 7)
!10135 = !DILocation(line: 4780, column: 7, scope: !10094)
!10136 = !DILocation(line: 4784, column: 9, scope: !10094)
!10137 = !DILocation(line: 4785, column: 7, scope: !10094)
!10138 = !DILocation(line: 4787, column: 7, scope: !10094)
!10139 = !DILocation(line: 4790, column: 7, scope: !10094)
!10140 = !DILocation(line: 4792, column: 10, scope: !10094)
!10141 = !DILocation(line: 4792, column: 3, scope: !10094)
!10142 = !DILocation(line: 4793, column: 1, scope: !10094)
!10143 = distinct !DISubprogram(name: "VEC_alias_pair_gc_reserve", scope: !151, file: !151, line: 198, type: !10144, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10146)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{!623, !7228, !623}
!10146 = !{!10147, !10148, !10149}
!10147 = !DILocalVariable(name: "vec_", arg: 1, scope: !10143, file: !151, line: 198, type: !7228)
!10148 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10143, file: !151, line: 198, type: !623)
!10149 = !DILocalVariable(name: "extend", scope: !10143, file: !151, line: 198, type: !623)
!10150 = !DILocation(line: 0, scope: !10143)
!10151 = !DILocation(line: 198, column: 1, scope: !10143)
!10152 = !DILocation(line: 198, column: 1, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10143, file: !151, line: 198, column: 1)
!10154 = distinct !DISubprogram(name: "VEC_alias_pair_base_quick_push", scope: !151, file: !151, line: 197, type: !10155, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!6906, !6947, !7229}
!10157 = !{!10158, !10159, !10160}
!10158 = !DILocalVariable(name: "vec_", arg: 1, scope: !10154, file: !151, line: 197, type: !6947)
!10159 = !DILocalVariable(name: "obj_", arg: 2, scope: !10154, file: !151, line: 197, type: !7229)
!10160 = !DILocalVariable(name: "slot_", scope: !10154, file: !151, line: 197, type: !6906)
!10161 = !DILocation(line: 0, scope: !10154)
!10162 = !DILocation(line: 197, column: 1, scope: !10154)
!10163 = distinct !DISubprogram(name: "VEC_alias_pair_base_space", scope: !151, file: !151, line: 197, type: !10164, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!623, !6947, !623}
!10166 = !{!10167, !10168}
!10167 = !DILocalVariable(name: "vec_", arg: 1, scope: !10163, file: !151, line: 197, type: !6947)
!10168 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10163, file: !151, line: 197, type: !623)
!10169 = !DILocation(line: 0, scope: !10163)
!10170 = !DILocation(line: 197, column: 1, scope: !10163)
!10171 = distinct !DISubprogram(name: "compare_constant", scope: !3, file: !3, line: 2991, type: !10172, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10174)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!623, !5347, !5347}
!10174 = !{!10175, !10176, !10177, !10178, !10181, !10182, !10183, !10186, !10190, !10191, !10193}
!10175 = !DILocalVariable(name: "t1", arg: 1, scope: !10171, file: !3, line: 2991, type: !5347)
!10176 = !DILocalVariable(name: "t2", arg: 2, scope: !10171, file: !3, line: 2991, type: !5347)
!10177 = !DILocalVariable(name: "typecode", scope: !10171, file: !3, line: 2993, type: !183)
!10178 = !DILocalVariable(name: "v1", scope: !10179, file: !3, line: 3041, type: !1494)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3040, column: 7)
!10180 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 3004, column: 5)
!10181 = !DILocalVariable(name: "v2", scope: !10179, file: !3, line: 3041, type: !1494)
!10182 = !DILocalVariable(name: "idx", scope: !10179, file: !3, line: 3042, type: !692)
!10183 = !DILocalVariable(name: "size_1", scope: !10184, file: !3, line: 3050, type: !694)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 3049, column: 4)
!10185 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3048, column: 6)
!10186 = !DILocalVariable(name: "c1", scope: !10187, file: !3, line: 3073, type: !4226)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 3072, column: 4)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 3071, column: 2)
!10189 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3071, column: 2)
!10190 = !DILocalVariable(name: "c2", scope: !10187, file: !3, line: 3074, type: !4226)
!10191 = !DILocalVariable(name: "value1", scope: !10192, file: !3, line: 3098, type: !5361)
!10192 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3097, column: 7)
!10193 = !DILocalVariable(name: "value2", scope: !10192, file: !3, line: 3098, type: !5361)
!10194 = !DILocation(line: 0, scope: !10171)
!10195 = !DILocation(line: 2995, column: 10, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2995, column: 7)
!10197 = !DILocation(line: 2995, column: 7, scope: !10171)
!10198 = !DILocation(line: 2996, column: 15, scope: !10196)
!10199 = !DILocation(line: 2996, column: 5, scope: !10196)
!10200 = !DILocation(line: 2997, column: 7, scope: !10171)
!10201 = !DILocation(line: 3000, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 3000, column: 7)
!10203 = !DILocation(line: 3000, column: 25, scope: !10202)
!10204 = !DILocation(line: 3000, column: 22, scope: !10202)
!10205 = !DILocation(line: 3000, column: 7, scope: !10171)
!10206 = !DILocation(line: 3003, column: 11, scope: !10171)
!10207 = !DILocation(line: 3003, column: 3, scope: !10171)
!10208 = !DILocation(line: 3007, column: 11, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3007, column: 11)
!10210 = !DILocation(line: 3007, column: 46, scope: !10209)
!10211 = !DILocation(line: 3007, column: 43, scope: !10209)
!10212 = !DILocation(line: 3007, column: 11, scope: !10180)
!10213 = !DILocation(line: 3009, column: 11, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3009, column: 11)
!10215 = !DILocation(line: 0, scope: !10214)
!10216 = !DILocation(line: 3009, column: 41, scope: !10214)
!10217 = !DILocation(line: 3009, column: 38, scope: !10214)
!10218 = !DILocation(line: 3009, column: 11, scope: !10180)
!10219 = !DILocation(line: 3011, column: 14, scope: !10180)
!10220 = !DILocation(line: 3011, column: 7, scope: !10180)
!10221 = !DILocation(line: 3015, column: 11, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3015, column: 11)
!10223 = !DILocation(line: 3015, column: 46, scope: !10222)
!10224 = !DILocation(line: 3015, column: 43, scope: !10222)
!10225 = !DILocation(line: 3015, column: 11, scope: !10180)
!10226 = !DILocation(line: 3018, column: 14, scope: !10180)
!10227 = !DILocation(line: 3018, column: 7, scope: !10180)
!10228 = !DILocation(line: 3022, column: 11, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3022, column: 11)
!10230 = !DILocation(line: 3022, column: 46, scope: !10229)
!10231 = !DILocation(line: 3022, column: 43, scope: !10229)
!10232 = !DILocation(line: 3022, column: 11, scope: !10180)
!10233 = !DILocation(line: 3025, column: 14, scope: !10180)
!10234 = !DILocation(line: 3025, column: 7, scope: !10180)
!10235 = !DILocation(line: 3028, column: 11, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 3028, column: 11)
!10237 = !DILocation(line: 3028, column: 41, scope: !10236)
!10238 = !DILocation(line: 3028, column: 38, scope: !10236)
!10239 = !DILocation(line: 3028, column: 11, scope: !10180)
!10240 = !DILocation(line: 3031, column: 15, scope: !10180)
!10241 = !DILocation(line: 3031, column: 42, scope: !10180)
!10242 = !DILocation(line: 3031, column: 39, scope: !10180)
!10243 = !DILocation(line: 3032, column: 8, scope: !10180)
!10244 = !DILocation(line: 3032, column: 21, scope: !10180)
!10245 = !DILocation(line: 3032, column: 47, scope: !10180)
!10246 = !DILocation(line: 3033, column: 5, scope: !10180)
!10247 = !DILocation(line: 3032, column: 13, scope: !10180)
!10248 = !DILocation(line: 3032, column: 11, scope: !10180)
!10249 = !DILocation(line: 3031, column: 7, scope: !10180)
!10250 = !DILocation(line: 3036, column: 33, scope: !10180)
!10251 = !DILocation(line: 3036, column: 53, scope: !10180)
!10252 = !DILocation(line: 3036, column: 15, scope: !10180)
!10253 = !DILocation(line: 3037, column: 8, scope: !10180)
!10254 = !DILocation(line: 3037, column: 29, scope: !10180)
!10255 = !DILocation(line: 3037, column: 49, scope: !10180)
!10256 = !DILocation(line: 3037, column: 11, scope: !10180)
!10257 = !DILocation(line: 3036, column: 7, scope: !10180)
!10258 = !DILocation(line: 3044, column: 13, scope: !10179)
!10259 = !DILocation(line: 3045, column: 18, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3045, column: 6)
!10261 = !DILocation(line: 3045, column: 15, scope: !10260)
!10262 = !DILocation(line: 3045, column: 6, scope: !10179)
!10263 = !DILocation(line: 3048, column: 15, scope: !10185)
!10264 = !DILocation(line: 3048, column: 6, scope: !10179)
!10265 = !DILocation(line: 3050, column: 29, scope: !10184)
!10266 = !DILocation(line: 0, scope: !10184)
!10267 = !DILocation(line: 3052, column: 10, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3052, column: 10)
!10269 = !DILocation(line: 3052, column: 40, scope: !10268)
!10270 = !DILocation(line: 3052, column: 37, scope: !10268)
!10271 = !DILocation(line: 3053, column: 13, scope: !10268)
!10272 = !DILocation(line: 3053, column: 3, scope: !10268)
!10273 = !DILocation(line: 3054, column: 35, scope: !10268)
!10274 = !DILocation(line: 3054, column: 16, scope: !10268)
!10275 = !DILocation(line: 3054, column: 13, scope: !10268)
!10276 = !DILocation(line: 3052, column: 10, scope: !10184)
!10277 = !DILocation(line: 3061, column: 25, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 3061, column: 10)
!10279 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 3058, column: 4)
!10280 = !DILocation(line: 3061, column: 10, scope: !10279)
!10281 = !DILocation(line: 3065, column: 7, scope: !10179)
!10282 = !DILocation(line: 0, scope: !10179)
!10283 = !DILocation(line: 3066, column: 7, scope: !10179)
!10284 = !DILocation(line: 3067, column: 6, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3067, column: 6)
!10286 = !DILocation(line: 3068, column: 9, scope: !10285)
!10287 = !DILocation(line: 3068, column: 6, scope: !10285)
!10288 = !DILocation(line: 3067, column: 6, scope: !10179)
!10289 = !DILocation(line: 3071, column: 2, scope: !10189)
!10290 = !DILocation(line: 0, scope: !10189)
!10291 = !DILocation(line: 3071, column: 22, scope: !10188)
!10292 = !DILocation(line: 3071, column: 20, scope: !10188)
!10293 = !DILocation(line: 3073, column: 28, scope: !10187)
!10294 = !DILocation(line: 0, scope: !10187)
!10295 = !DILocation(line: 3074, column: 28, scope: !10187)
!10296 = !DILocation(line: 3077, column: 33, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 3077, column: 10)
!10298 = !DILocation(line: 3077, column: 44, scope: !10297)
!10299 = !DILocation(line: 3077, column: 11, scope: !10297)
!10300 = !DILocation(line: 3077, column: 10, scope: !10187)
!10301 = !DILocation(line: 0, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 3080, column: 10)
!10303 = !DILocation(line: 3082, column: 8, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 3082, column: 7)
!10305 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 3081, column: 8)
!10306 = !DILocation(line: 3082, column: 7, scope: !10305)
!10307 = !DILocation(line: 3090, column: 4, scope: !10188)
!10308 = !DILocation(line: 3071, column: 56, scope: !10188)
!10309 = !DILocation(line: 3071, column: 2, scope: !10188)
!10310 = distinct !{!10310, !10289, !10311}
!10311 = !DILocation(line: 3090, column: 4, scope: !10189)
!10312 = !DILocation(line: 3122, column: 1, scope: !10171)
!10313 = !DILocation(line: 3087, column: 17, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 3087, column: 7)
!10315 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 3086, column: 8)
!10316 = !DILocation(line: 3087, column: 7, scope: !10315)
!10317 = !DILocation(line: 3098, column: 2, scope: !10192)
!10318 = !DILocation(line: 0, scope: !10192)
!10319 = !DILocation(line: 3100, column: 2, scope: !10192)
!10320 = !DILocation(line: 3101, column: 2, scope: !10192)
!10321 = !DILocation(line: 3102, column: 17, scope: !10192)
!10322 = !DILocation(line: 3102, column: 34, scope: !10192)
!10323 = !DILocation(line: 3102, column: 24, scope: !10192)
!10324 = !DILocation(line: 3103, column: 3, scope: !10192)
!10325 = !DILocation(line: 3103, column: 14, scope: !10192)
!10326 = !DILocation(line: 3103, column: 37, scope: !10192)
!10327 = !DILocation(line: 3103, column: 6, scope: !10192)
!10328 = !DILocation(line: 3103, column: 60, scope: !10192)
!10329 = !DILocation(line: 3104, column: 7, scope: !10180)
!10330 = !DILocation(line: 3110, column: 33, scope: !10180)
!10331 = !DILocation(line: 3110, column: 55, scope: !10180)
!10332 = !DILocation(line: 3110, column: 15, scope: !10180)
!10333 = !DILocation(line: 3111, column: 8, scope: !10180)
!10334 = !DILocation(line: 3111, column: 28, scope: !10180)
!10335 = !DILocation(line: 3111, column: 50, scope: !10180)
!10336 = !DILocation(line: 3111, column: 11, scope: !10180)
!10337 = !DILocation(line: 3110, column: 7, scope: !10180)
!10338 = !DILocation(line: 3115, column: 32, scope: !10180)
!10339 = !DILocation(line: 3115, column: 54, scope: !10180)
!10340 = !DILocation(line: 3115, column: 14, scope: !10180)
!10341 = !DILocation(line: 3115, column: 7, scope: !10180)
!10342 = distinct !DISubprogram(name: "asm_output_aligned_bss", scope: !3, file: !3, line: 785, type: !10343, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10345)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{null, !2062, !639, !628, !692, !623}
!10345 = !{!10346, !10347, !10348, !10349, !10350, !10351, !10353}
!10346 = !DILocalVariable(name: "file", arg: 1, scope: !10342, file: !3, line: 785, type: !2062)
!10347 = !DILocalVariable(name: "decl", arg: 2, scope: !10342, file: !3, line: 785, type: !639)
!10348 = !DILocalVariable(name: "name", arg: 3, scope: !10342, file: !3, line: 786, type: !628)
!10349 = !DILocalVariable(name: "size", arg: 4, scope: !10342, file: !3, line: 786, type: !692)
!10350 = !DILocalVariable(name: "align", arg: 5, scope: !10342, file: !3, line: 787, type: !623)
!10351 = !DILocalVariable(name: "size", scope: !10352, file: !3, line: 793, type: !694)
!10352 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 793, column: 3)
!10353 = !DILocalVariable(name: "size_", scope: !10354, file: !3, line: 793, type: !694)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 793, column: 3)
!10355 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 793, column: 3)
!10356 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 793, column: 3)
!10357 = !DILocation(line: 0, scope: !10342)
!10358 = !DILocation(line: 789, column: 22, scope: !10342)
!10359 = !DILocation(line: 789, column: 3, scope: !10342)
!10360 = !DILocation(line: 790, column: 3, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 790, column: 3)
!10362 = !DILocation(line: 790, column: 3, scope: !10342)
!10363 = !DILocation(line: 792, column: 31, scope: !10342)
!10364 = !DILocation(line: 793, column: 3, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 793, column: 3)
!10366 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 793, column: 3)
!10367 = !DILocation(line: 793, column: 3, scope: !10352)
!10368 = !DILocation(line: 793, column: 3, scope: !10356)
!10369 = !DILocation(line: 793, column: 3, scope: !10355)
!10370 = !DILocation(line: 0, scope: !10352)
!10371 = !DILocation(line: 0, scope: !10354)
!10372 = !DILocation(line: 793, column: 3, scope: !10354)
!10373 = !DILocation(line: 793, column: 3, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 793, column: 3)
!10375 = !DILocation(line: 798, column: 3, scope: !10342)
!10376 = !DILocation(line: 799, column: 1, scope: !10342)
!10377 = distinct !DISubprogram(name: "compute_reloc_for_rtx_1", scope: !3, file: !3, line: 6489, type: !9342, scopeLine: 6490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10378)
!10378 = !{!10379, !10380, !10381, !10382}
!10379 = !DILocalVariable(name: "xp", arg: 1, scope: !10377, file: !3, line: 6489, type: !8415)
!10380 = !DILocalVariable(name: "data", arg: 2, scope: !10377, file: !3, line: 6489, type: !627)
!10381 = !DILocalVariable(name: "preloc", scope: !10377, file: !3, line: 6491, type: !1766)
!10382 = !DILocalVariable(name: "x", scope: !10377, file: !3, line: 6492, type: !811)
!10383 = !DILocation(line: 0, scope: !10377)
!10384 = !DILocation(line: 6491, column: 17, scope: !10377)
!10385 = !DILocation(line: 6492, column: 11, scope: !10377)
!10386 = !DILocation(line: 6494, column: 11, scope: !10377)
!10387 = !DILocation(line: 6494, column: 3, scope: !10377)
!10388 = !DILocation(line: 6497, column: 18, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 6495, column: 5)
!10390 = !DILocation(line: 6497, column: 15, scope: !10389)
!10391 = !DILocation(line: 6498, column: 7, scope: !10389)
!10392 = !DILocation(line: 6500, column: 15, scope: !10389)
!10393 = !DILocation(line: 6501, column: 7, scope: !10389)
!10394 = !DILocation(line: 6506, column: 3, scope: !10377)
!10395 = distinct !DISubprogram(name: "VEC_rtx_gc_reserve", scope: !378, file: !378, line: 202, type: !10396, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10398)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!623, !8416, !623}
!10398 = !{!10399, !10400, !10401}
!10399 = !DILocalVariable(name: "vec_", arg: 1, scope: !10395, file: !378, line: 202, type: !8416)
!10400 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10395, file: !378, line: 202, type: !623)
!10401 = !DILocalVariable(name: "extend", scope: !10395, file: !378, line: 202, type: !623)
!10402 = !DILocation(line: 0, scope: !10395)
!10403 = !DILocation(line: 202, column: 1, scope: !10395)
!10404 = !DILocation(line: 202, column: 1, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10395, file: !378, line: 202, column: 1)
!10406 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !378, file: !378, line: 200, type: !10407, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10410)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{!8415, !10409, !811}
!10409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!10410 = !{!10411, !10412, !10413}
!10411 = !DILocalVariable(name: "vec_", arg: 1, scope: !10406, file: !378, line: 200, type: !10409)
!10412 = !DILocalVariable(name: "obj_", arg: 2, scope: !10406, file: !378, line: 200, type: !811)
!10413 = !DILocalVariable(name: "slot_", scope: !10406, file: !378, line: 200, type: !8415)
!10414 = !DILocation(line: 0, scope: !10406)
!10415 = !DILocation(line: 200, column: 1, scope: !10406)
!10416 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !378, file: !378, line: 200, type: !10417, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10419)
!10417 = !DISubroutineType(types: !10418)
!10418 = !{!623, !10409, !623}
!10419 = !{!10420, !10421}
!10420 = !DILocalVariable(name: "vec_", arg: 1, scope: !10416, file: !378, line: 200, type: !10409)
!10421 = !DILocalVariable(name: "alloc_", arg: 2, scope: !10416, file: !378, line: 200, type: !623)
!10422 = !DILocation(line: 0, scope: !10416)
!10423 = !DILocation(line: 200, column: 1, scope: !10416)
!10424 = distinct !DISubprogram(name: "VEC_rtx_base_quick_insert", scope: !378, file: !378, line: 200, type: !10425, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10427)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!8415, !10409, !7, !811}
!10427 = !{!10428, !10429, !10430, !10431}
!10428 = !DILocalVariable(name: "vec_", arg: 1, scope: !10424, file: !378, line: 200, type: !10409)
!10429 = !DILocalVariable(name: "ix_", arg: 2, scope: !10424, file: !378, line: 200, type: !7)
!10430 = !DILocalVariable(name: "obj_", arg: 3, scope: !10424, file: !378, line: 200, type: !811)
!10431 = !DILocalVariable(name: "slot_", scope: !10424, file: !378, line: 200, type: !8415)
!10432 = !DILocation(line: 0, scope: !10424)
!10433 = !DILocation(line: 200, column: 1, scope: !10424)
!10434 = distinct !DISubprogram(name: "output_object_block", scope: !3, file: !3, line: 6980, type: !10435, scopeLine: 6981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10437)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{null, !1040}
!10437 = !{!10438, !10439, !10440, !10441, !10442, !10443}
!10438 = !DILocalVariable(name: "block", arg: 1, scope: !10434, file: !3, line: 6980, type: !1040)
!10439 = !DILocalVariable(name: "desc", scope: !10434, file: !3, line: 6982, type: !1017)
!10440 = !DILocalVariable(name: "i", scope: !10434, file: !3, line: 6983, type: !7)
!10441 = !DILocalVariable(name: "offset", scope: !10434, file: !3, line: 6984, type: !694)
!10442 = !DILocalVariable(name: "decl", scope: !10434, file: !3, line: 6985, type: !639)
!10443 = !DILocalVariable(name: "symbol", scope: !10434, file: !3, line: 6986, type: !811)
!10444 = !DILocation(line: 0, scope: !10434)
!10445 = !DILocation(line: 6986, column: 3, scope: !10434)
!10446 = !DILocation(line: 6988, column: 14, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 6988, column: 7)
!10448 = !DILocation(line: 6988, column: 22, scope: !10447)
!10449 = !DILocation(line: 6988, column: 7, scope: !10434)
!10450 = !DILocation(line: 6993, column: 29, scope: !10434)
!10451 = !DILocation(line: 6993, column: 3, scope: !10434)
!10452 = !DILocation(line: 6994, column: 26, scope: !10434)
!10453 = !DILocation(line: 6994, column: 3, scope: !10434)
!10454 = !DILocation(line: 0, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 6998, column: 3)
!10456 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 6998, column: 3)
!10457 = !DILocation(line: 6998, column: 8, scope: !10456)
!10458 = !DILocation(line: 0, scope: !10456)
!10459 = !DILocation(line: 6998, column: 15, scope: !10455)
!10460 = !DILocation(line: 6998, column: 3, scope: !10456)
!10461 = !DILocation(line: 7003, column: 3, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 7003, column: 3)
!10463 = !DILocation(line: 6999, column: 21, scope: !10455)
!10464 = !DILocation(line: 6999, column: 36, scope: !10455)
!10465 = !DILocation(line: 6999, column: 5, scope: !10455)
!10466 = !DILocation(line: 6998, column: 62, scope: !10455)
!10467 = !DILocation(line: 6998, column: 3, scope: !10455)
!10468 = distinct !{!10468, !10460, !10469}
!10469 = !DILocation(line: 6999, column: 42, scope: !10456)
!10470 = !DILocation(line: 0, scope: !10462)
!10471 = !DILocation(line: 7003, column: 15, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 7003, column: 3)
!10473 = !DILocation(line: 7006, column: 23, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 7004, column: 5)
!10475 = !DILocation(line: 7006, column: 56, scope: !10474)
!10476 = !DILocation(line: 7006, column: 7, scope: !10474)
!10477 = !DILocation(line: 7007, column: 16, scope: !10474)
!10478 = !DILocation(line: 7008, column: 11, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 7008, column: 11)
!10480 = !DILocation(line: 7008, column: 11, scope: !10474)
!10481 = !DILocation(line: 7010, column: 11, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 7009, column: 2)
!10483 = !DILocation(line: 7011, column: 4, scope: !10482)
!10484 = !DILocation(line: 7012, column: 14, scope: !10482)
!10485 = !DILocation(line: 7013, column: 2, scope: !10482)
!10486 = !DILocation(line: 7014, column: 16, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 7014, column: 16)
!10488 = !DILocation(line: 7014, column: 16, scope: !10479)
!10489 = !DILocation(line: 7016, column: 11, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 7015, column: 2)
!10491 = !DILocation(line: 7017, column: 38, scope: !10490)
!10492 = !DILocation(line: 7018, column: 11, scope: !10490)
!10493 = !DILocation(line: 7017, column: 4, scope: !10490)
!10494 = !DILocation(line: 7019, column: 14, scope: !10490)
!10495 = !DILocation(line: 7020, column: 2, scope: !10490)
!10496 = !DILocation(line: 7023, column: 11, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 7022, column: 2)
!10498 = !DILocation(line: 7024, column: 38, scope: !10497)
!10499 = !DILocation(line: 7024, column: 4, scope: !10497)
!10500 = !DILocation(line: 7025, column: 28, scope: !10497)
!10501 = !DILocation(line: 7025, column: 14, scope: !10497)
!10502 = !DILocation(line: 0, scope: !10479)
!10503 = !DILocation(line: 7003, column: 62, scope: !10472)
!10504 = !DILocation(line: 7003, column: 3, scope: !10472)
!10505 = distinct !{!10505, !10461, !10506}
!10506 = !DILocation(line: 7027, column: 5, scope: !10462)
!10507 = !DILocation(line: 7028, column: 1, scope: !10434)
!10508 = distinct !DISubprogram(name: "VEC_rtx_base_iterate", scope: !378, file: !378, line: 200, type: !10509, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10511)
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!623, !8516, !7, !8415}
!10511 = !{!10512, !10513, !10514}
!10512 = !DILocalVariable(name: "vec_", arg: 1, scope: !10508, file: !378, line: 200, type: !8516)
!10513 = !DILocalVariable(name: "ix_", arg: 2, scope: !10508, file: !378, line: 200, type: !7)
!10514 = !DILocalVariable(name: "ptr", arg: 3, scope: !10508, file: !378, line: 200, type: !8415)
!10515 = !DILocation(line: 0, scope: !10508)
!10516 = !DILocation(line: 200, column: 1, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10508, file: !378, line: 200, column: 1)
!10518 = !DILocation(line: 200, column: 1, scope: !10508)
!10519 = !DILocation(line: 200, column: 1, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10517, file: !378, line: 200, column: 1)
!10521 = !DILocation(line: 200, column: 1, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10517, file: !378, line: 200, column: 1)
!10523 = !DILocation(line: 0, scope: !10517)
