; ModuleID = 'sese.bc'
source_filename = "sese.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rename_map_elt_s = type { %union.tree_node*, %union.tree_node* }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.ivtype_map_elt_s = type { %union.tree_node*, i8* }
%struct.sese_s = type { %struct.edge_def*, %struct.edge_def*, %struct.VEC_tree_heap*, %struct.bitmap_head_def*, %struct.VEC_loop_p_heap*, i8 }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.alep = type { %struct.loop*, %struct.VEC_rename_map_elt_heap* }
%struct.VEC_rename_map_elt_heap = type { %struct.VEC_rename_map_elt_base }
%struct.VEC_rename_map_elt_base = type { i32, i32, [1 x %struct.rename_map_elt_s*] }
%struct.igp = type { %struct.basic_block_def*, %struct.edge_def*, %struct.edge_def*, %struct.htab* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.ifsese_s = type { %struct.sese_s*, %struct.sese_s*, %struct.sese_s* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str = private unnamed_addr constant [7 x i8] c"sese.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"var\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"(%s, \00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.7 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !1919 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !1932, metadata !DIExpression()), !dbg !1934
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !1933, metadata !DIExpression()), !dbg !1934
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1935
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !1936
  ret i32 %call, !dbg !1937
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !1938 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1942
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !1943
  ret i32 %call, !dbg !1944
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !1945 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2000, metadata !DIExpression()), !dbg !2001
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2002
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2002
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2002
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2002
  %cmp = icmp uge i8* %0, %1, !dbg !2002
  %conv1 = zext i1 %cmp to i64, !dbg !2002
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2002
  %tobool = icmp eq i64 %expval, 0, !dbg !2002
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2002

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2002
  br label %cond.end, !dbg !2002

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2002
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2002
  %2 = load i8, i8* %0, align 1, !dbg !2002
  %conv3 = zext i8 %2 to i32, !dbg !2002
  br label %cond.end, !dbg !2002

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2002
  ret i32 %cond, !dbg !2003
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2004 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2006, metadata !DIExpression()), !dbg !2007
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2008
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2008
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2008
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2008
  %cmp = icmp uge i8* %0, %1, !dbg !2008
  %conv1 = zext i1 %cmp to i64, !dbg !2008
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2008
  %tobool = icmp eq i64 %expval, 0, !dbg !2008
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2008

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2008
  br label %cond.end, !dbg !2008

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2008
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2008
  %2 = load i8, i8* %0, align 1, !dbg !2008
  %conv3 = zext i8 %2 to i32, !dbg !2008
  br label %cond.end, !dbg !2008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2008
  ret i32 %cond, !dbg !2009
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2010 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2011
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2011
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2011
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2011
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2011
  %cmp = icmp uge i8* %1, %2, !dbg !2011
  %conv1 = zext i1 %cmp to i64, !dbg !2011
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2011
  %tobool = icmp eq i64 %expval, 0, !dbg !2011
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2011

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2011
  br label %cond.end, !dbg !2011

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2011
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2011
  %3 = load i8, i8* %1, align 1, !dbg !2011
  %conv3 = zext i8 %3 to i32, !dbg !2011
  br label %cond.end, !dbg !2011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2011
  ret i32 %cond, !dbg !2012
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2013 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2017, metadata !DIExpression()), !dbg !2018
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2019
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2020
  ret i32 %call, !dbg !2021
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2022 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2026, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2027, metadata !DIExpression()), !dbg !2028
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2029
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2029
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2029
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2029
  %cmp = icmp uge i8* %0, %1, !dbg !2029
  %conv1 = zext i1 %cmp to i64, !dbg !2029
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2029
  %tobool = icmp eq i64 %expval, 0, !dbg !2029
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2029

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2029
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2029
  br label %cond.end, !dbg !2029

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2029
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2029
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2029
  store i8 %conv2, i8* %0, align 1, !dbg !2029
  %conv6 = and i32 %__c, 255, !dbg !2029
  br label %cond.end, !dbg !2029

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2029
  ret i32 %cond, !dbg !2030
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2031 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2033, metadata !DIExpression()), !dbg !2035
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2034, metadata !DIExpression()), !dbg !2035
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2036
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2036
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2036
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2036
  %cmp = icmp uge i8* %0, %1, !dbg !2036
  %conv1 = zext i1 %cmp to i64, !dbg !2036
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2036
  %tobool = icmp eq i64 %expval, 0, !dbg !2036
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2036

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2036
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2036
  br label %cond.end, !dbg !2036

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2036
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2036
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2036
  store i8 %conv2, i8* %0, align 1, !dbg !2036
  %conv6 = and i32 %__c, 255, !dbg !2036
  br label %cond.end, !dbg !2036

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2036
  ret i32 %cond, !dbg !2037
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2038 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2040, metadata !DIExpression()), !dbg !2041
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2042
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2042
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2042
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2042
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2042
  %cmp = icmp uge i8* %1, %2, !dbg !2042
  %conv1 = zext i1 %cmp to i64, !dbg !2042
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2042
  %tobool = icmp eq i64 %expval, 0, !dbg !2042
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2042

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2042
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2042
  br label %cond.end, !dbg !2042

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2042
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2042
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2042
  store i8 %conv4, i8* %1, align 1, !dbg !2042
  %conv6 = and i32 %__c, 255, !dbg !2042
  br label %cond.end, !dbg !2042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2042
  ret i32 %cond, !dbg !2043
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2044 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2050, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2051, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2052, metadata !DIExpression()), !dbg !2053
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2054
  ret i64 %call, !dbg !2055
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2056 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2058, metadata !DIExpression()), !dbg !2059
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2060
  %0 = load i32, i32* %_flags, align 8, !dbg !2060
  %and = lshr i32 %0, 4, !dbg !2060
  %and.lobit = and i32 %and, 1, !dbg !2060
  ret i32 %and.lobit, !dbg !2061
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2062 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2064, metadata !DIExpression()), !dbg !2065
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2066
  %0 = load i32, i32* %_flags, align 8, !dbg !2066
  %and = lshr i32 %0, 5, !dbg !2066
  %and.lobit = and i32 %and, 1, !dbg !2066
  ret i32 %and.lobit, !dbg !2067
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2068 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2071, metadata !DIExpression()), !dbg !2072
  %__c.off = add i32 %__c, 128, !dbg !2073
  %0 = icmp ult i32 %__c.off, 384, !dbg !2073
  br i1 %0, label %cond.true, label %cond.end, !dbg !2073

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2074
  %1 = load i32*, i32** %call, align 8, !dbg !2075
  %idxprom = sext i32 %__c to i64, !dbg !2076
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2076
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2076
  br label %cond.end, !dbg !2077

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2077
  ret i32 %cond, !dbg !2078
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2079 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2081, metadata !DIExpression()), !dbg !2082
  %__c.off = add i32 %__c, 128, !dbg !2083
  %0 = icmp ult i32 %__c.off, 384, !dbg !2083
  br i1 %0, label %cond.true, label %cond.end, !dbg !2083

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2084
  %1 = load i32*, i32** %call, align 8, !dbg !2085
  %idxprom = sext i32 %__c to i64, !dbg !2086
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2086
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2086
  br label %cond.end, !dbg !2087

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2087
  ret i32 %cond, !dbg !2088
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2089 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2094, metadata !DIExpression()), !dbg !2095
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2096
  %conv = trunc i64 %call to i32, !dbg !2097
  ret i32 %conv, !dbg !2098
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2099 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2103, metadata !DIExpression()), !dbg !2104
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2105
  ret i64 %call, !dbg !2106
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2107 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2112, metadata !DIExpression()), !dbg !2113
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2114
  ret i64 %call, !dbg !2115
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2116 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2122, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2123, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2124, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2125, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2126, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 0, metadata !2127, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2128, metadata !DIExpression()), !dbg !2132
  br label %while.cond, !dbg !2133

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2134
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2128, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2127, metadata !DIExpression()), !dbg !2132
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2135
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2133

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2136
  %div = lshr i64 %add, 1, !dbg !2138
  call void @llvm.dbg.value(metadata i64 %div, metadata !2129, metadata !DIExpression()), !dbg !2132
  %mul = mul i64 %div, %__size, !dbg !2139
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2140
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2130, metadata !DIExpression()), !dbg !2132
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2141
  call void @llvm.dbg.value(metadata i32 %call, metadata !2131, metadata !DIExpression()), !dbg !2132
  %cmp1 = icmp slt i32 %call, 0, !dbg !2142
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2144

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2145
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2147

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2148
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2127, metadata !DIExpression()), !dbg !2132
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2132
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2128, metadata !DIExpression()), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2127, metadata !DIExpression()), !dbg !2132
  br label %while.cond, !dbg !2133, !llvm.loop !2149

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2132
  ret i8* %retval.0, !dbg !2151
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2152 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2158, metadata !DIExpression()), !dbg !2159
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2160
  ret double %call, !dbg !2161
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2162 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2171, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2172, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.value(metadata i32 %base, metadata !2173, metadata !DIExpression()), !dbg !2174
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2175
  ret i64 %call, !dbg !2176
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2177 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2183, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2184, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.value(metadata i32 %base, metadata !2185, metadata !DIExpression()), !dbg !2186
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2187
  ret i64 %call, !dbg !2188
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2189 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2200, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2201, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.value(metadata i32 %base, metadata !2202, metadata !DIExpression()), !dbg !2203
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2204
  ret i64 %call, !dbg !2205
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2210, metadata !DIExpression()), !dbg !2213
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2211, metadata !DIExpression()), !dbg !2213
  call void @llvm.dbg.value(metadata i32 %base, metadata !2212, metadata !DIExpression()), !dbg !2213
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2214
  ret i64 %call, !dbg !2215
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2216 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2256, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2257, metadata !DIExpression()), !dbg !2258
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2259
  ret i32 %call, !dbg !2260
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2261 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2263, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2264, metadata !DIExpression()), !dbg !2265
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2266
  ret i32 %call, !dbg !2267
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2268 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2272, metadata !DIExpression()), !dbg !2274
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2273, metadata !DIExpression()), !dbg !2274
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2275
  ret i32 %call, !dbg !2276
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2277 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2281, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2282, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2283, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2284, metadata !DIExpression()), !dbg !2285
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2286
  ret i32 %call, !dbg !2287
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2288 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2292, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2293, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2294, metadata !DIExpression()), !dbg !2295
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2294, metadata !DIExpression(DW_OP_deref)), !dbg !2295
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2296
  ret i32 %call, !dbg !2297
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2298 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2302, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2303, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2304, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2305, metadata !DIExpression()), !dbg !2306
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2305, metadata !DIExpression(DW_OP_deref)), !dbg !2306
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2307
  ret i32 %call, !dbg !2308
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2309 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2333, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2334, metadata !DIExpression()), !dbg !2335
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2336
  ret i32 %call, !dbg !2337
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2338 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2340, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2341, metadata !DIExpression()), !dbg !2342
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2343
  ret i32 %call, !dbg !2344
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2350, metadata !DIExpression()), !dbg !2351
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2352
  ret i32 %call, !dbg !2353
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2354 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2358, metadata !DIExpression()), !dbg !2362
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2359, metadata !DIExpression()), !dbg !2362
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2360, metadata !DIExpression()), !dbg !2362
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2361, metadata !DIExpression()), !dbg !2362
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2363
  ret i32 %call, !dbg !2364
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @debug_rename_map(%struct.htab* %map) local_unnamed_addr #5 !dbg !2365 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !2369, metadata !DIExpression()), !dbg !2370
  tail call void @htab_traverse(%struct.htab* %map, i32 (i8**, i8*)* nonnull @debug_rename_map_1, i8* null) #6, !dbg !2371
  ret void, !dbg !2372
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @debug_rename_map_1(i8** %slot, i8* %s) #5 !dbg !2373 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !2377, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata i8* %s, metadata !2378, metadata !DIExpression()), !dbg !2380
  %0 = bitcast i8** %slot to %struct.rename_map_elt_s**, !dbg !2381
  %1 = load %struct.rename_map_elt_s*, %struct.rename_map_elt_s** %0, align 8, !dbg !2381
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %1, metadata !2379, metadata !DIExpression()), !dbg !2380
  tail call fastcc void @debug_rename_elt(%struct.rename_map_elt_s* %1) #7, !dbg !2382
  ret i32 1, !dbg !2383
}

; Function Attrs: nounwind uwtable
define dso_local i32 @rename_map_elt_info(i8* %elt) local_unnamed_addr #5 !dbg !2384 {
entry:
  call void @llvm.dbg.value(metadata i8* %elt, metadata !2386, metadata !DIExpression()), !dbg !2387
  %0 = bitcast i8* %elt to %struct.tree_ssa_name**, !dbg !2388
  %1 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %0, align 8, !dbg !2388
  %version = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %1, i64 0, i32 3, !dbg !2388
  %2 = load i32, i32* %version, align 8, !dbg !2388
  ret i32 %2, !dbg !2389
}

; Function Attrs: nounwind uwtable
define dso_local i32 @eq_rename_map_elts(i8* %e1, i8* %e2) local_unnamed_addr #5 !dbg !2390 {
entry:
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2392, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2393, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2394, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2395, metadata !DIExpression()), !dbg !2396
  %old_name = bitcast i8* %e1 to %union.tree_node**, !dbg !2397
  %0 = load %union.tree_node*, %union.tree_node** %old_name, align 8, !dbg !2397
  %old_name1 = bitcast i8* %e2 to %union.tree_node**, !dbg !2398
  %1 = load %union.tree_node*, %union.tree_node** %old_name1, align 8, !dbg !2398
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !2399
  %conv = zext i1 %cmp to i32, !dbg !2399
  ret i32 %conv, !dbg !2400
}

; Function Attrs: nounwind uwtable
define dso_local void @debug_ivtype_map(%struct.htab* %map) local_unnamed_addr #5 !dbg !2401 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !2403, metadata !DIExpression()), !dbg !2404
  tail call void @htab_traverse(%struct.htab* %map, i32 (i8**, i8*)* nonnull @debug_ivtype_map_1, i8* null) #6, !dbg !2405
  ret void, !dbg !2406
}

; Function Attrs: nounwind uwtable
define internal i32 @debug_ivtype_map_1(i8** %slot, i8* %s) #5 !dbg !2407 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !2409, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i8* %s, metadata !2410, metadata !DIExpression()), !dbg !2412
  %0 = bitcast i8** %slot to %struct.ivtype_map_elt_s**, !dbg !2413
  %1 = load %struct.ivtype_map_elt_s*, %struct.ivtype_map_elt_s** %0, align 8, !dbg !2413
  call void @llvm.dbg.value(metadata %struct.ivtype_map_elt_s* %1, metadata !2411, metadata !DIExpression()), !dbg !2412
  tail call fastcc void @debug_ivtype_elt(%struct.ivtype_map_elt_s* %1) #7, !dbg !2414
  ret i32 1, !dbg !2415
}

; Function Attrs: nounwind uwtable
define dso_local i32 @ivtype_map_elt_info(i8* %elt) local_unnamed_addr #5 !dbg !2416 {
entry:
  call void @llvm.dbg.value(metadata i8* %elt, metadata !2418, metadata !DIExpression()), !dbg !2419
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !2420
  %cloog_iv = getelementptr inbounds i8, i8* %elt, i64 8, !dbg !2421
  %1 = bitcast i8* %cloog_iv to i8**, !dbg !2421
  %2 = load i8*, i8** %1, align 8, !dbg !2421
  %call = tail call i32 %0(i8* %2) #6, !dbg !2420
  ret i32 %call, !dbg !2422
}

; Function Attrs: nounwind uwtable
define dso_local i32 @eq_ivtype_map_elts(i8* %e1, i8* %e2) local_unnamed_addr #5 !dbg !2423 {
entry:
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2425, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2426, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata i8* %e1, metadata !2427, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.value(metadata i8* %e2, metadata !2428, metadata !DIExpression()), !dbg !2429
  %cloog_iv = getelementptr inbounds i8, i8* %e1, i64 8, !dbg !2430
  %0 = bitcast i8* %cloog_iv to i8**, !dbg !2430
  %1 = load i8*, i8** %0, align 8, !dbg !2430
  %cloog_iv1 = getelementptr inbounds i8, i8* %e2, i64 8, !dbg !2431
  %2 = bitcast i8* %cloog_iv1 to i8**, !dbg !2431
  %3 = load i8*, i8** %2, align 8, !dbg !2431
  %cmp = icmp eq i8* %1, %3, !dbg !2432
  %conv = zext i1 %cmp to i32, !dbg !2432
  ret i32 %conv, !dbg !2433
}

; Function Attrs: nounwind uwtable
define dso_local void @build_sese_loop_nests(%struct.sese_s* %region) local_unnamed_addr #5 !dbg !2434 {
entry:
  %loop0 = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2438, metadata !DIExpression()), !dbg !2448
  %0 = bitcast %struct.loop** %loop0 to i8*, !dbg !2449
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2449
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2450
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2450
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2450
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2450
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2450
  br label %for.cond, !dbg !2450

for.cond:                                         ; preds = %for.inc, %entry
  %4 = phi %struct.control_flow_graph* [ %2, %entry ], [ %.pre1, %for.inc ], !dbg !2451
  %.pn = phi %struct.basic_block_def* [ %3, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2452
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2452
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2440, metadata !DIExpression()), !dbg !2448
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 1, !dbg !2451
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2451
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %5, !dbg !2451
  br i1 %cmp, label %for.cond9.preheader, label %for.body, !dbg !2450

for.cond9.preheader:                              ; preds = %for.cond
  %loop_nest = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 4, !dbg !2453
  br label %for.cond9, !dbg !2456

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %bb.0, %struct.sese_s* %region) #7, !dbg !2457
  %tobool = icmp eq i8 %call, 0, !dbg !2457
  br i1 %tobool, label %for.inc, label %if.then, !dbg !2458

if.then:                                          ; preds = %for.body
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !2459
  %6 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !2459
  call void @llvm.dbg.value(metadata %struct.loop* %6, metadata !2443, metadata !DIExpression()), !dbg !2460
  %header = getelementptr inbounds %struct.loop, %struct.loop* %6, i64 0, i32 2, !dbg !2461
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !2461
  %cmp3 = icmp eq %struct.basic_block_def* %7, %bb.0, !dbg !2463
  br i1 %cmp3, label %land.lhs.true, label %for.inc, !dbg !2464

land.lhs.true:                                    ; preds = %if.then
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %6, i64 0, i32 3, !dbg !2465
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !2465
  %call4 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %8, %struct.sese_s* %region) #7, !dbg !2466
  %tobool5 = icmp eq i8 %call4, 0, !dbg !2466
  br i1 %tobool5, label %for.inc, label %if.then6, !dbg !2467

if.then6:                                         ; preds = %land.lhs.true
  tail call fastcc void @sese_record_loop(%struct.sese_s* %region, %struct.loop* %6) #7, !dbg !2468
  br label %for.inc, !dbg !2468

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then6, %if.then
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2451
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2469
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !2451
  br label %for.cond, !dbg !2451, !llvm.loop !2470

for.cond9:                                        ; preds = %for.cond9.preheader, %for.inc62
  %i.0 = phi i32 [ %add, %for.inc62 ], [ 0, %for.cond9.preheader ], !dbg !2472
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2439, metadata !DIExpression()), !dbg !2448
  %9 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2473
  %tobool10 = icmp eq %struct.VEC_loop_p_heap* %9, null, !dbg !2473
  br i1 %tobool10, label %cond.end, label %cond.true, !dbg !2473

cond.true:                                        ; preds = %for.cond9
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %9, i64 0, i32 0, !dbg !2473
  br label %cond.end, !dbg !2473

cond.end:                                         ; preds = %for.cond9, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %for.cond9 ], !dbg !2473
  call void @llvm.dbg.value(metadata %struct.loop** %loop0, metadata !2441, metadata !DIExpression(DW_OP_deref)), !dbg !2448
  %call12 = call fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %cond, i32 %i.0, %struct.loop** nonnull %loop0) #7, !dbg !2473
  %tobool13 = icmp eq i32 %call12, 0, !dbg !2456
  br i1 %tobool13, label %for.end63, label %for.body14, !dbg !2456

for.body14:                                       ; preds = %cond.end
  %10 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2474
  %tobool16 = icmp eq %struct.VEC_loop_p_heap* %10, null, !dbg !2474
  br i1 %tobool16, label %cond.end21, label %cond.true17, !dbg !2474

cond.true17:                                      ; preds = %for.body14
  %base19 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %10, i64 0, i32 0, !dbg !2474
  br label %cond.end21, !dbg !2474

cond.end21:                                       ; preds = %for.body14, %cond.true17
  %cond22 = phi %struct.VEC_loop_p_base* [ %base19, %cond.true17 ], [ null, %for.body14 ], !dbg !2474
  %call23 = call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond22) #7, !dbg !2474
  %add = add i32 %i.0, 1, !dbg !2477
  %cmp24 = icmp eq i32 %call23, %add, !dbg !2478
  br i1 %cmp24, label %for.end63, label %if.end27, !dbg !2479

if.end27:                                         ; preds = %cond.end21
  %11 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2480
  %tobool29 = icmp eq %struct.VEC_loop_p_heap* %11, null, !dbg !2480
  br i1 %tobool29, label %cond.end34, label %cond.true30, !dbg !2480

cond.true30:                                      ; preds = %if.end27
  %base32 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %11, i64 0, i32 0, !dbg !2480
  br label %cond.end34, !dbg !2480

cond.end34:                                       ; preds = %if.end27, %cond.true30
  %cond35 = phi %struct.VEC_loop_p_base* [ %base32, %cond.true30 ], [ null, %if.end27 ], !dbg !2480
  %call37 = call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond35, i32 %add) #7, !dbg !2480
  call void @llvm.dbg.value(metadata %struct.loop* %call37, metadata !2442, metadata !DIExpression()), !dbg !2448
  %12 = load %struct.loop*, %struct.loop** %loop0, align 8, !dbg !2481
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2441, metadata !DIExpression()), !dbg !2448
  %num = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !2483
  %13 = load i32, i32* %num, align 8, !dbg !2483
  %num38 = getelementptr inbounds %struct.loop, %struct.loop* %call37, i64 0, i32 0, !dbg !2484
  %14 = load i32, i32* %num38, align 8, !dbg !2484
  %cmp39 = icmp sgt i32 %13, %14, !dbg !2485
  br i1 %cmp39, label %if.then41, label %for.inc62, !dbg !2486

if.then41:                                        ; preds = %cond.end34
  %15 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2487
  %tobool43 = icmp eq %struct.VEC_loop_p_heap* %15, null, !dbg !2487
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !2487

cond.true44:                                      ; preds = %if.then41
  %base46 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %15, i64 0, i32 0, !dbg !2487
  br label %cond.end48, !dbg !2487

cond.end48:                                       ; preds = %if.then41, %cond.true44
  %cond49 = phi %struct.VEC_loop_p_base* [ %base46, %cond.true44 ], [ null, %if.then41 ], !dbg !2487
  %call50 = call fastcc %struct.loop* @VEC_loop_p_base_replace(%struct.VEC_loop_p_base* %cond49, i32 %i.0, %struct.loop* %call37) #7, !dbg !2487
  %16 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %loop_nest, align 8, !dbg !2489
  %tobool52 = icmp eq %struct.VEC_loop_p_heap* %16, null, !dbg !2489
  br i1 %tobool52, label %cond.end57, label %cond.true53, !dbg !2489

cond.true53:                                      ; preds = %cond.end48
  %base55 = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %16, i64 0, i32 0, !dbg !2489
  br label %cond.end57, !dbg !2489

cond.end57:                                       ; preds = %cond.end48, %cond.true53
  %cond58 = phi %struct.VEC_loop_p_base* [ %base55, %cond.true53 ], [ null, %cond.end48 ], !dbg !2489
  %17 = load %struct.loop*, %struct.loop** %loop0, align 8, !dbg !2489
  call void @llvm.dbg.value(metadata %struct.loop* %17, metadata !2441, metadata !DIExpression()), !dbg !2448
  %call60 = call fastcc %struct.loop* @VEC_loop_p_base_replace(%struct.VEC_loop_p_base* %cond58, i32 %add, %struct.loop* %17) #7, !dbg !2489
  br label %for.inc62, !dbg !2490

for.inc62:                                        ; preds = %cond.end34, %cond.end57
  call void @llvm.dbg.value(metadata i32 %add, metadata !2439, metadata !DIExpression()), !dbg !2448
  br label %for.cond9, !dbg !2491, !llvm.loop !2492

for.end63:                                        ; preds = %cond.end, %cond.end21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2494
  ret void, !dbg !2494
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %bb, %struct.sese_s* %region) unnamed_addr #0 !dbg !2495 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2499, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2500, metadata !DIExpression()), !dbg !2503
  %entry2 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 0, !dbg !2504
  %0 = load %struct.edge_def*, %struct.edge_def** %entry2, align 8, !dbg !2504
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i64 0, i32 1, !dbg !2504
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2504
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !2501, metadata !DIExpression()), !dbg !2503
  %exit3 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 1, !dbg !2505
  %2 = load %struct.edge_def*, %struct.edge_def** %exit3, align 8, !dbg !2505
  %dest4 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %2, i64 0, i32 1, !dbg !2505
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest4, align 8, !dbg !2505
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !2502, metadata !DIExpression()), !dbg !2503
  %call = tail call fastcc zeroext i8 @bb_in_region(%struct.basic_block_def* %bb, %struct.basic_block_def* %1, %struct.basic_block_def* %3) #7, !dbg !2506
  ret i8 %call, !dbg !2507
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_record_loop(%struct.sese_s* %region, %struct.loop* %loop) unnamed_addr #5 !dbg !2508 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2512, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2513, metadata !DIExpression()), !dbg !2514
  %call = tail call fastcc zeroext i8 @sese_contains_loop(%struct.sese_s* %region, %struct.loop* %loop) #7, !dbg !2515
  %tobool = icmp eq i8 %call, 0, !dbg !2515
  br i1 %tobool, label %if.end, label %return, !dbg !2517

if.end:                                           ; preds = %entry
  %loops = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 3, !dbg !2518
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %loops, align 8, !dbg !2518
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !2519
  %1 = load i32, i32* %num, align 8, !dbg !2519
  %call1 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !2520
  %loop_nest = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 4, !dbg !2521
  %call2 = tail call fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** nonnull %loop_nest, %struct.loop* %loop) #7, !dbg !2521
  br label %return, !dbg !2522

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !2522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !2523 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !2530, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2531, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.value(metadata %struct.loop** %ptr, metadata !2532, metadata !DIExpression()), !dbg !2533
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !2534
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2534

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !2534
  %0 = load i32, i32* %num, align 8, !dbg !2534
  %cmp = icmp ugt i32 %0, %ix_, !dbg !2534
  br i1 %cmp, label %if.then, label %if.else, !dbg !2536

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !2537
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2537
  %1 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !2537
  br label %return, !dbg !2537

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !2539

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.loop* [ null, %if.else ], [ %1, %if.then ], !dbg !2541
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !2541
  store %struct.loop* %storemerge, %struct.loop** %ptr, align 8, !dbg !2541
  ret i32 %retval.0, !dbg !2536
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !2546, metadata !DIExpression()), !dbg !2547
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !2548
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2548

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !2548
  %0 = load i32, i32* %num, align 8, !dbg !2548
  br label %cond.end, !dbg !2548

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !2548
  ret i32 %cond, !dbg !2548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2549 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !2553, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2554, metadata !DIExpression()), !dbg !2555
  br label %land.end, !dbg !2556

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2556
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2556
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !2556
  ret %struct.loop* %0, !dbg !2556
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_replace(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop* %obj_) unnamed_addr #0 !dbg !2557 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !2562, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2563, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !2564, metadata !DIExpression()), !dbg !2566
  %idxprom = zext i32 %ix_ to i64, !dbg !2567
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2567
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !2567
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !2565, metadata !DIExpression()), !dbg !2566
  store %struct.loop* %obj_, %struct.loop** %arrayidx, align 8, !dbg !2567
  ret %struct.loop* %0, !dbg !2567
}

; Function Attrs: nounwind uwtable
define dso_local %struct.sese_s* @new_sese(%struct.edge_def* %entry1, %struct.edge_def* %exit) local_unnamed_addr #5 !dbg !2568 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !2572, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !2573, metadata !DIExpression()), !dbg !2575
  %call = tail call i8* @xmalloc(i64 48) #6, !dbg !2576
  %0 = bitcast i8* %call to %struct.sese_s*, !dbg !2576
  call void @llvm.dbg.value(metadata %struct.sese_s* %0, metadata !2574, metadata !DIExpression()), !dbg !2575
  %entry2 = bitcast i8* %call to %struct.edge_def**, !dbg !2577
  store %struct.edge_def* %entry1, %struct.edge_def** %entry2, align 8, !dbg !2578
  %exit3 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2579
  %1 = bitcast i8* %exit3 to %struct.edge_def**, !dbg !2579
  store %struct.edge_def* %exit, %struct.edge_def** %1, align 8, !dbg !2580
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2581
  %loops = getelementptr inbounds i8, i8* %call, i64 24, !dbg !2582
  %2 = bitcast i8* %loops to %struct.bitmap_head_def**, !dbg !2582
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** %2, align 8, !dbg !2583
  %call5 = tail call fastcc %struct.VEC_loop_p_heap* @VEC_loop_p_heap_alloc(i32 3) #7, !dbg !2584
  %loop_nest = getelementptr inbounds i8, i8* %call, i64 32, !dbg !2585
  %3 = bitcast i8* %loop_nest to %struct.VEC_loop_p_heap**, !dbg !2585
  store %struct.VEC_loop_p_heap* %call5, %struct.VEC_loop_p_heap** %3, align 8, !dbg !2586
  %4 = getelementptr inbounds i8, i8* %call, i64 40, !dbg !2587
  store i8 1, i8* %4, align 8, !dbg !2588
  %call6 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 3) #7, !dbg !2589
  %params = getelementptr inbounds i8, i8* %call, i64 16, !dbg !2590
  %5 = bitcast i8* %params to %struct.VEC_tree_heap**, !dbg !2590
  store %struct.VEC_tree_heap* %call6, %struct.VEC_tree_heap** %5, align 8, !dbg !2591
  ret %struct.sese_s* %0, !dbg !2592
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_loop_p_heap* @VEC_loop_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !2593 {
entry:
  call void @llvm.dbg.value(metadata i32 3, metadata !2597, metadata !DIExpression()), !dbg !2598
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 3) #6, !dbg !2599
  %0 = bitcast i8* %call to %struct.VEC_loop_p_heap*, !dbg !2599
  ret %struct.VEC_loop_p_heap* %0, !dbg !2599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !2600 {
entry:
  call void @llvm.dbg.value(metadata i32 3, metadata !2604, metadata !DIExpression()), !dbg !2605
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 3) #6, !dbg !2606
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !2606
  ret %struct.VEC_tree_heap* %0, !dbg !2606
}

; Function Attrs: nounwind uwtable
define dso_local void @free_sese(%struct.sese_s* %region) local_unnamed_addr #5 !dbg !2607 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2609, metadata !DIExpression()), !dbg !2610
  %loops = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 3, !dbg !2611
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %loops, align 8, !dbg !2611
  %tobool = icmp eq %struct.bitmap_head_def* %0, null, !dbg !2611
  br i1 %tobool, label %if.end, label %if.then, !dbg !2613

if.then:                                          ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2614
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %loops, align 8, !dbg !2615
  br label %if.end, !dbg !2616

if.end:                                           ; preds = %entry, %if.then
  %params = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 2, !dbg !2617
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %params) #7, !dbg !2617
  %loop_nest = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 4, !dbg !2618
  tail call fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** nonnull %loop_nest) #7, !dbg !2618
  %1 = bitcast %struct.sese_s* %region to i8*, !dbg !2619
  tail call void @free(i8* %1) #6, !dbg !2619
  ret void, !dbg !2620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !2626, metadata !DIExpression()), !dbg !2627
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !2628
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !2628
  br i1 %tobool, label %if.end, label %if.then, !dbg !2630

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !2630
  tail call void @free(i8* nonnull %1) #6, !dbg !2628
  br label %if.end, !dbg !2628

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !2630
  ret void, !dbg !2630
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_loop_p_heap_free(%struct.VEC_loop_p_heap** %vec_) unnamed_addr #0 !dbg !2631 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !2636, metadata !DIExpression()), !dbg !2637
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !2638
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !2638
  br i1 %tobool, label %if.end, label %if.then, !dbg !2640

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_loop_p_heap* %0 to i8*, !dbg !2640
  tail call void @free(i8* nonnull %1) #6, !dbg !2638
  br label %if.end, !dbg !2638

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_loop_p_heap* null, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !2640
  ret void, !dbg !2640
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @sese_insert_phis_for_liveouts(%struct.sese_s* %region, %struct.basic_block_def* %bb, %struct.edge_def* %false_e, %struct.edge_def* %true_e) local_unnamed_addr #5 !dbg !2641 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2645, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2646, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.edge_def* %false_e, metadata !2647, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.edge_def* %true_e, metadata !2648, metadata !DIExpression()), !dbg !2659
  %0 = bitcast i32* %i to i8*, !dbg !2660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2660
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !2661
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !2661
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2662
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2658, metadata !DIExpression()), !dbg !2659
  tail call void @update_ssa(i32 2048) #6, !dbg !2663
  tail call fastcc void @sese_build_liveouts(%struct.sese_s* %region, %struct.bitmap_head_def* %call) #7, !dbg !2664
  call void @llvm.dbg.value(metadata i32* %i, metadata !2649, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2650, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %call, i32 0, i32* nonnull %i) #7, !dbg !2665
  br label %for.cond, !dbg !2665

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %i, metadata !2649, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2650, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2667
  %tobool = icmp eq i8 %call1, 0, !dbg !2665
  br i1 %tobool, label %for.end, label %for.body, !dbg !2665

for.body:                                         ; preds = %for.cond
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2669
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 3, !dbg !2669
  %3 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !2669
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %3, i64 0, i32 2, !dbg !2669
  %4 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !2669
  %tobool2 = icmp eq %struct.VEC_tree_gc* %4, null, !dbg !2669
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !2669

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %4, i64 0, i32 0, !dbg !2669
  br label %cond.end, !dbg !2669

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !2669
  %5 = load i32, i32* %i, align 4, !dbg !2669
  call void @llvm.dbg.value(metadata i32 %5, metadata !2649, metadata !DIExpression()), !dbg !2659
  %call6 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %5) #7, !dbg !2669
  call fastcc void @sese_add_exit_phis_edge(%struct.basic_block_def* %bb, %union.tree_node* %call6, %struct.edge_def* %false_e, %struct.edge_def* %true_e) #7, !dbg !2670
  call void @llvm.dbg.value(metadata i32* %i, metadata !2649, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2650, metadata !DIExpression(DW_OP_deref)), !dbg !2659
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !2667
  br label %for.cond, !dbg !2667, !llvm.loop !2671

for.end:                                          ; preds = %for.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !2673
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2658, metadata !DIExpression()), !dbg !2659
  call void @update_ssa(i32 2048) #6, !dbg !2674
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !2675
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !2675
  ret void, !dbg !2675
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_build_liveouts(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts) unnamed_addr #5 !dbg !2676 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !2680, metadata !DIExpression()), !dbg !2683
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %liveouts, metadata !2681, metadata !DIExpression()), !dbg !2683
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2684
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2684
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2684
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !2684
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2684
  br label %for.cond, !dbg !2684

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre2, %for.body ], !dbg !2686
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !2688
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2688
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2682, metadata !DIExpression()), !dbg !2683
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !2686
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2686
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !2686
  br i1 %cmp, label %for.end, label %for.body, !dbg !2684

for.body:                                         ; preds = %for.cond
  tail call fastcc void @sese_build_liveouts_bb(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb.0) #7, !dbg !2689
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2686
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !2690
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !2686
  br label %for.cond, !dbg !2686, !llvm.loop !2691

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.control_flow_graph* [ %3, %for.cond ], !dbg !2686
  %bb.0.lcssa = phi %struct.basic_block_def* [ %bb.0, %for.cond ], !dbg !2688
  %5 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2693
  %tobool = icmp eq i32 %5, 0, !dbg !2693
  br i1 %tobool, label %if.end, label %if.then, !dbg !2695

if.then:                                          ; preds = %for.end
  %x_entry_block_ptr6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !2696
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr6, align 8, !dbg !2696
  br label %for.cond8, !dbg !2696

for.cond8:                                        ; preds = %for.body13, %if.then
  %7 = phi %struct.basic_block_def* [ %bb.0.lcssa, %if.then ], [ %.pre5, %for.body13 ], !dbg !2698
  %.pn1 = phi %struct.basic_block_def* [ %6, %if.then ], [ %bb.1, %for.body13 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn1, i64 0, i32 6, !dbg !2700
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !2700
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !2682, metadata !DIExpression()), !dbg !2683
  %cmp12 = icmp eq %struct.basic_block_def* %bb.1, %7, !dbg !2698
  br i1 %cmp12, label %if.end.loopexit, label %for.body13, !dbg !2696

for.body13:                                       ; preds = %for.cond8
  tail call fastcc void @sese_reset_debug_liveouts_bb(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb.1) #7, !dbg !2701
  %.pre3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2698
  %cfg10.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre3, i64 0, i32 1, !dbg !2702
  %.pre4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg10.phi.trans.insert, align 8, !dbg !2698
  %x_exit_block_ptr11.phi.trans.insert = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.pre4, i64 0, i32 1, !dbg !2702
  %.pre5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr11.phi.trans.insert, align 8, !dbg !2698
  br label %for.cond8, !dbg !2698, !llvm.loop !2703

if.end.loopexit:                                  ; preds = %for.cond8
  br label %if.end, !dbg !2705

if.end:                                           ; preds = %if.end.loopexit, %for.end
  ret void, !dbg !2705
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !2706 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2715, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !2716, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata i32 0, metadata !2717, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !2720
  %1 = load i64, i64* %0, align 8, !dbg !2720
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !2721
  store i64 %1, i64* %2, align 8, !dbg !2721
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !2722
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !2723
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !2724
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !2727
  br label %while.body, !dbg !2727

while.body:                                       ; preds = %entry, %if.end5
  %tobool = icmp eq i64 %1, 0, !dbg !2728
  br i1 %tobool, label %if.then, label %if.end, !dbg !2729

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !2730
  br label %while.end, !dbg !2732

if.end:                                           ; preds = %while.body
  br i1 false, label %if.end5, label %while.end.loopexit, !dbg !2733

if.end5:                                          ; preds = %if.end
  br label %while.body, !dbg !2727, !llvm.loop !2734

while.end.loopexit:                               ; preds = %if.end
  br label %while.end, !dbg !2736

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %4 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %5 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %6 = phi %struct.bitmap_element_def* [ %3, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !2736
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %6, i64 0, i32 2, !dbg !2738
  %7 = load i32, i32* %indx9, align 8, !dbg !2738
  %cmp11 = icmp eq i32 %7, 0, !dbg !2739
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !2740

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %5, i64 0, i32 2, !dbg !2741
  %8 = load i32, i32* %indx14, align 8, !dbg !2741
  %mul = shl i32 %8, 7, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %mul, metadata !2717, metadata !DIExpression()), !dbg !2719
  br label %if.end15, !dbg !2743

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ 0, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !2717, metadata !DIExpression()), !dbg !2719
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !2744
  store i32 0, i32* %word_no, align 8, !dbg !2745
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %4, i64 0, i32 3, i64 0, !dbg !2746
  %9 = load i64, i64* %arrayidx, align 8, !dbg !2746
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2747
  store i64 %9, i64* %bits21, align 8, !dbg !2748
  %tobool23 = icmp eq i64 %9, 0, !dbg !2749
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !2749
  %add = or i32 %start_bit.addr.0, %lnot.ext, !dbg !2750
  call void @llvm.dbg.value(metadata i32 %add, metadata !2717, metadata !DIExpression()), !dbg !2719
  store i32 %add, i32* %bit_no, align 4, !dbg !2751
  ret void, !dbg !2752
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !2753 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2757, metadata !DIExpression()), !dbg !2762
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2758, metadata !DIExpression()), !dbg !2762
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2763
  %0 = load i64, i64* %bits, align 8, !dbg !2763
  %tobool = icmp eq i64 %0, 0, !dbg !2764
  br i1 %tobool, label %if.end, label %next_bit, !dbg !2765

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !2766
  br label %next_bit, !dbg !2769

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !2759), !dbg !2770
  br label %while.cond, !dbg !2769

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !2771
  %and = and i64 %2, 1, !dbg !2772
  %tobool2 = icmp eq i64 %and, 0, !dbg !2773
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !2769

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !2774
  store i64 %shr, i64* %bits, align 8, !dbg !2774
  %3 = load i32, i32* %bit_no, align 4, !dbg !2776
  %add = add i32 %3, 1, !dbg !2776
  store i32 %add, i32* %bit_no, align 4, !dbg !2776
  %.pre = load i64, i64* %bits, align 8, !dbg !2771
  br label %while.cond, !dbg !2769, !llvm.loop !2777

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !2779
  %sub = add i32 %4, 63, !dbg !2780
  %div = and i32 %sub, -64, !dbg !2781
  store i32 %div, i32* %bit_no, align 4, !dbg !2782
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !2783
  %5 = load i32, i32* %word_no, align 8, !dbg !2784
  %inc = add i32 %5, 1, !dbg !2784
  store i32 %inc, i32* %word_no, align 8, !dbg !2784
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !2785
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !2785
  br label %while.body6, !dbg !2786

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !2787

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !2788
  %cmp = icmp eq i32 %8, 2, !dbg !2789
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !2785
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !2787

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !2766
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !2766
  %10 = load i64, i64* %arrayidx, align 8, !dbg !2766
  store i64 %10, i64* %bits, align 8, !dbg !2790
  %tobool14 = icmp eq i64 %10, 0, !dbg !2791
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !2793

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !2794
  %add17 = add i32 %11, 64, !dbg !2794
  store i32 %add17, i32* %bit_no, align 4, !dbg !2794
  %12 = load i32, i32* %word_no, align 8, !dbg !2795
  %inc19 = add i32 %12, 1, !dbg !2795
  store i32 %inc19, i32* %word_no, align 8, !dbg !2795
  br label %while.cond7, !dbg !2787, !llvm.loop !2796

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !2785
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !2798
  %14 = load i64, i64* %13, align 8, !dbg !2798
  store i64 %14, i64* %6, align 8, !dbg !2799
  %tobool24 = icmp eq i64 %14, 0, !dbg !2800
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !2802

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !2802
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !2803
  %16 = load i32, i32* %indx, align 8, !dbg !2803
  %mul28 = shl i32 %16, 7, !dbg !2804
  store i32 %mul28, i32* %bit_no, align 4, !dbg !2805
  store i32 0, i32* %word_no, align 8, !dbg !2806
  br label %while.body6, !dbg !2786, !llvm.loop !2807

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !2809

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !2809

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !2762
  ret i8 %retval.0, !dbg !2809
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_add_exit_phis_edge(%struct.basic_block_def* %exit, %union.tree_node* %use, %struct.edge_def* %false_e, %struct.edge_def* %true_e) unnamed_addr #5 !dbg !2810 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %exit, metadata !2814, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !2815, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.value(metadata %struct.edge_def* %false_e, metadata !2816, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.value(metadata %struct.edge_def* %true_e, metadata !2817, metadata !DIExpression()), !dbg !2819
  %call = tail call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %use, %struct.basic_block_def* %exit) #6, !dbg !2820
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !2818, metadata !DIExpression()), !dbg !2819
  %call1 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call) #7, !dbg !2821
  %call2 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call) #7, !dbg !2822
  %call3 = tail call %union.tree_node* @create_new_def_for(%union.tree_node* %call1, %union.gimple_statement_d* %call, %union.tree_node** %call2) #6, !dbg !2823
  tail call void @add_phi_arg(%union.gimple_statement_d* %call, %union.tree_node* %use, %struct.edge_def* %false_e, i32 0) #6, !dbg !2824
  tail call void @add_phi_arg(%union.gimple_statement_d* %call, %union.tree_node* %use, %struct.edge_def* %true_e, i32 0) #6, !dbg !2825
  ret void, !dbg !2826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !2827 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !2833, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !2834, metadata !DIExpression()), !dbg !2835
  br label %land.end, !dbg !2836

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !2836
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !2836
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !2836
  ret %union.tree_node* %0, !dbg !2836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !2837 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !2841, metadata !DIExpression()), !dbg !2843
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !2842, metadata !DIExpression()), !dbg !2843
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !2844
  %0 = load i64, i64* %bits, align 8, !dbg !2845
  %shr = lshr i64 %0, 1, !dbg !2845
  store i64 %shr, i64* %bits, align 8, !dbg !2845
  %1 = load i32, i32* %bit_no, align 4, !dbg !2846
  %add = add i32 %1, 1, !dbg !2846
  store i32 %add, i32* %bit_no, align 4, !dbg !2846
  ret void, !dbg !2847
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @set_rename(%struct.htab* %map, %union.tree_node* %old_name, %union.tree_node* %expr) local_unnamed_addr #5 !dbg !2848 {
entry:
  %tmp = alloca %struct.rename_map_elt_s, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !2852, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !2853, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !2854, metadata !DIExpression()), !dbg !2857
  %0 = bitcast %struct.rename_map_elt_s* %tmp to i8*, !dbg !2858
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2858
  %cmp = icmp eq %union.tree_node* %old_name, %expr, !dbg !2859
  br i1 %cmp, label %cleanup, label %if.end, !dbg !2861

if.end:                                           ; preds = %entry
  %old_name1 = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %tmp, i64 0, i32 0, !dbg !2862
  store %union.tree_node* %old_name, %union.tree_node** %old_name1, align 8, !dbg !2863
  %call = call i8** @htab_find_slot(%struct.htab* %map, i8* nonnull %0, i32 1) #6, !dbg !2864
  call void @llvm.dbg.value(metadata i8** %call, metadata !2856, metadata !DIExpression()), !dbg !2857
  %tobool = icmp eq i8** %call, null, !dbg !2865
  br i1 %tobool, label %cleanup, label %if.end3, !dbg !2867

if.end3:                                          ; preds = %if.end
  %1 = load i8*, i8** %call, align 8, !dbg !2868
  %tobool4 = icmp eq i8* %1, null, !dbg !2868
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !2870

if.then5:                                         ; preds = %if.end3
  call void @free(i8* nonnull %1) #6, !dbg !2871
  br label %if.end6, !dbg !2871

if.end6:                                          ; preds = %if.end3, %if.then5
  %call7 = call fastcc %struct.rename_map_elt_s* @new_rename_map_elt(%union.tree_node* %old_name, %union.tree_node* %expr) #7, !dbg !2872
  %2 = bitcast i8** %call to %struct.rename_map_elt_s**, !dbg !2873
  store %struct.rename_map_elt_s* %call7, %struct.rename_map_elt_s** %2, align 8, !dbg !2873
  br label %cleanup, !dbg !2874

cleanup:                                          ; preds = %if.end, %entry, %if.end6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2874
  ret void, !dbg !2874
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rename_map_elt_s* @new_rename_map_elt(%union.tree_node* %old_name, %union.tree_node* %expr) unnamed_addr #0 !dbg !2875 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !2879, metadata !DIExpression()), !dbg !2882
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !2880, metadata !DIExpression()), !dbg !2882
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !2883
  %0 = bitcast i8* %call to %struct.rename_map_elt_s*, !dbg !2883
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %0, metadata !2881, metadata !DIExpression()), !dbg !2882
  %old_name1 = bitcast i8* %call to %union.tree_node**, !dbg !2884
  store %union.tree_node* %old_name, %union.tree_node** %old_name1, align 8, !dbg !2885
  %expr2 = getelementptr inbounds i8, i8* %call, i64 8, !dbg !2886
  %1 = bitcast i8* %expr2 to %union.tree_node**, !dbg !2886
  store %union.tree_node* %expr, %union.tree_node** %1, align 8, !dbg !2887
  ret %struct.rename_map_elt_s* %0, !dbg !2888
}

; Function Attrs: nounwind uwtable
define dso_local void @rename_nb_iterations(%struct.htab* %rename_map) local_unnamed_addr #5 !dbg !2889 {
entry:
  %li = alloca %struct.loop_iterator, align 8
  %loop = alloca %struct.loop*, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %rename_map, metadata !2891, metadata !DIExpression()), !dbg !2899
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !2900
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2900
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !2901
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2901
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2892, metadata !DIExpression(DW_OP_deref)), !dbg !2899
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2898, metadata !DIExpression(DW_OP_deref)), !dbg !2899
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #7, !dbg !2902
  br label %for.cond, !dbg !2902

for.cond:                                         ; preds = %for.body, %entry
  %2 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2904
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !2898, metadata !DIExpression()), !dbg !2899
  %tobool = icmp eq %struct.loop* %2, null, !dbg !2902
  br i1 %tobool, label %for.end, label %for.body, !dbg !2902

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !2898, metadata !DIExpression()), !dbg !2899
  %nb_iterations = getelementptr inbounds %struct.loop, %struct.loop* %2, i64 0, i32 11, !dbg !2906
  %3 = load %union.tree_node*, %union.tree_node** %nb_iterations, align 8, !dbg !2906
  %call = call fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %rename_map, %union.tree_node* %3) #7, !dbg !2907
  %4 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2908
  call void @llvm.dbg.value(metadata %struct.loop* %4, metadata !2898, metadata !DIExpression()), !dbg !2899
  %nb_iterations1 = getelementptr inbounds %struct.loop, %struct.loop* %4, i64 0, i32 11, !dbg !2909
  store %union.tree_node* %call, %union.tree_node** %nb_iterations1, align 8, !dbg !2910
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2892, metadata !DIExpression(DW_OP_deref)), !dbg !2899
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2898, metadata !DIExpression(DW_OP_deref)), !dbg !2899
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #7, !dbg !2904
  br label %for.cond, !dbg !2904, !llvm.loop !2911

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2913
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !2913
  ret void, !dbg !2913
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !2914 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2919, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2920, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 0, metadata !2921, metadata !DIExpression()), !dbg !2925
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !2926
  store i32 0, i32* %idx, align 8, !dbg !2927
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2928
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !2928
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2928
  %tobool = icmp eq %struct.loops* %1, null, !dbg !2928
  br i1 %tobool, label %if.then, label %if.end, !dbg !2930

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2931
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !2933
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !2934
  br label %cleanup, !dbg !2935

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #7, !dbg !2936
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #7, !dbg !2936
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2937
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2938
  call void @llvm.dbg.value(metadata i32 1, metadata !2924, metadata !DIExpression()), !dbg !2925
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2939
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !2939
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !2939
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !2939
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !2939
  br label %while.cond79, !dbg !2942

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !2944
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2922, metadata !DIExpression()), !dbg !2925
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !2947
  %13 = load i32, i32* %num81, align 8, !dbg !2947
  %cmp82 = icmp slt i32 %13, 1, !dbg !2948
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !2949

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2950
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !2950
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !2950

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !2950
  br label %cond.end90, !dbg !2950

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !2950
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !2922, metadata !DIExpression()), !dbg !2925
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !2950
  %15 = load i32, i32* %num92, align 8, !dbg !2950
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #7, !dbg !2950
  br label %if.end94, !dbg !2950

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !2922, metadata !DIExpression()), !dbg !2925
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !2951
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !2951
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !2953
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !2954

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !2955

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !2922, metadata !DIExpression()), !dbg !2925
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !2957
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !2957
  br label %if.end111, !dbg !2958

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !2959
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !2922, metadata !DIExpression()), !dbg !2925
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !2960
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !2961

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !2922, metadata !DIExpression()), !dbg !2925
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !2962
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !2962
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !2963
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !2964
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !2922, metadata !DIExpression()), !dbg !2925
  br i1 %23, label %while.body104, label %while.end106, !dbg !2955

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #7, !dbg !2965
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !2922, metadata !DIExpression()), !dbg !2925
  br label %while.cond100, !dbg !2955, !llvm.loop !2966

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !2968
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !2970

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !2922, metadata !DIExpression()), !dbg !2925
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !2971
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !2971
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !2942, !llvm.loop !2972

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #7, !dbg !2974
  br label %cleanup, !dbg !2975

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !2975
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %m, %union.tree_node* %t) unnamed_addr #5 !dbg !2976 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %m, metadata !2980, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !2981, metadata !DIExpression()), !dbg !2982
  %tobool = icmp eq %union.tree_node* %t, null, !dbg !2983
  br i1 %tobool, label %return, label %if.end, !dbg !2985

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2986
  %bf.load = load i64, i64* %0, align 8, !dbg !2986
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2988
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !2988
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !2989

if.then1:                                         ; preds = %if.end
  %call = tail call fastcc %union.tree_node* @get_rename(%struct.htab* %m, %union.tree_node* nonnull %t) #7, !dbg !2990
  br label %return, !dbg !2991

if.end2:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast1, !dbg !2992
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2992
  switch i8 %1, label %return [
    i8 3, label %sw.bb
    i8 2, label %sw.bb12
    i8 1, label %sw.bb20
  ], !dbg !2993

sw.bb:                                            ; preds = %if.end2
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2994
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !2994
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx7, align 8, !dbg !2994
  %call8 = tail call fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %m, %union.tree_node* %2) #7, !dbg !2996
  store %union.tree_node* %call8, %union.tree_node** %arrayidx7, align 8, !dbg !2997
  br label %sw.bb12, !dbg !2998

sw.bb12:                                          ; preds = %if.end2, %sw.bb
  %operands14 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !2999
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands14, i64 1, !dbg !2999
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !2999
  %call16 = tail call fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %m, %union.tree_node* %3) #7, !dbg !3000
  store %union.tree_node* %call16, %union.tree_node** %arrayidx15, align 8, !dbg !3001
  br label %sw.bb20, !dbg !3002

sw.bb20:                                          ; preds = %if.end2, %sw.bb12
  %operands22 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !3003
  %4 = load %union.tree_node*, %union.tree_node** %operands22, align 8, !dbg !3003
  %call24 = tail call fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %m, %union.tree_node* %4) #7, !dbg !3004
  store %union.tree_node* %call24, %union.tree_node** %operands22, align 8, !dbg !3005
  ret %union.tree_node* %t, !dbg !3006

return:                                           ; preds = %entry, %if.end2, %if.then1
  %retval.0 = phi %union.tree_node* [ %call, %if.then1 ], [ null, %entry ], [ %t, %if.end2 ], !dbg !2982
  ret %union.tree_node* %retval.0, !dbg !3006
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3007 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3011, metadata !DIExpression()), !dbg !3014
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3012, metadata !DIExpression()), !dbg !3014
  %0 = bitcast i32* %anum to i8*, !dbg !3015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3015
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3014
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3014
  br label %while.cond, !dbg !3016

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3017
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3017
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3017

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3017
  br label %cond.end, !dbg !3017

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3017
  %2 = load i32, i32* %idx, align 8, !dbg !3017
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3013, metadata !DIExpression(DW_OP_deref)), !dbg !3014
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #7, !dbg !3017
  %tobool2 = icmp eq i32 %call, 0, !dbg !3016
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3016

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3018
  %inc = add i32 %3, 1, !dbg !3018
  store i32 %inc, i32* %idx, align 8, !dbg !3018
  %4 = load i32, i32* %anum, align 4, !dbg !3020
  call void @llvm.dbg.value(metadata i32 %4, metadata !3013, metadata !DIExpression()), !dbg !3014
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #7, !dbg !3021
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3022
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3023
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3025, !llvm.loop !3026

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #7, !dbg !3028
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3029
  br label %cleanup, !dbg !3030

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3030

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !3030
  ret void, !dbg !3030
}

; Function Attrs: nounwind uwtable
define dso_local void @rename_sese_parameters(%struct.htab* %rename_map, %struct.sese_s* %region) local_unnamed_addr #5 !dbg !3031 {
entry:
  %p = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %rename_map, metadata !3035, metadata !DIExpression()), !dbg !3039
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3036, metadata !DIExpression()), !dbg !3039
  %0 = bitcast %union.tree_node** %p to i8*, !dbg !3040
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3040
  call void @llvm.dbg.value(metadata i32 0, metadata !3037, metadata !DIExpression()), !dbg !3039
  %params = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 2, !dbg !3041
  br label %for.cond, !dbg !3044

for.cond:                                         ; preds = %cond.end9, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %cond.end9 ], !dbg !3045
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3037, metadata !DIExpression()), !dbg !3039
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %params, align 8, !dbg !3046
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !3046
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3046

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !3046
  br label %cond.end, !dbg !3046

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3046
  call void @llvm.dbg.value(metadata %union.tree_node** %p, metadata !3038, metadata !DIExpression(DW_OP_deref)), !dbg !3039
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %p) #7, !dbg !3046
  %tobool2 = icmp eq i32 %call, 0, !dbg !3047
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3047

for.body:                                         ; preds = %cond.end
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %params, align 8, !dbg !3048
  %tobool4 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !3048
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !3048

cond.true5:                                       ; preds = %for.body
  %base7 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !3048
  br label %cond.end9, !dbg !3048

cond.end9:                                        ; preds = %for.body, %cond.true5
  %cond10 = phi %struct.VEC_tree_base* [ %base7, %cond.true5 ], [ null, %for.body ], !dbg !3048
  %3 = load %union.tree_node*, %union.tree_node** %p, align 8, !dbg !3048
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3038, metadata !DIExpression()), !dbg !3039
  %call11 = call fastcc %union.tree_node* @rename_variables_in_expr(%struct.htab* %rename_map, %union.tree_node* %3) #7, !dbg !3048
  %call12 = call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond10, i32 %i.0, %union.tree_node* %call11) #7, !dbg !3048
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3049
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3037, metadata !DIExpression()), !dbg !3039
  br label %for.cond, !dbg !3050, !llvm.loop !3051

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3053
  ret void, !dbg !3053
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !3054 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3058, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3059, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !3060, metadata !DIExpression()), !dbg !3061
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3062
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3062

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3062
  %0 = load i32, i32* %num, align 8, !dbg !3062
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3062
  br i1 %cmp, label %if.then, label %if.else, !dbg !3064

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3065
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3065
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3065
  br label %return, !dbg !3065

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3067

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !3069
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3069
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !3069
  ret i32 %retval.0, !dbg !3064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !3070 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3075, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3076, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !3077, metadata !DIExpression()), !dbg !3079
  %idxprom = zext i32 %ix_ to i64, !dbg !3080
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3080
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3080
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3078, metadata !DIExpression()), !dbg !3079
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !3080
  ret %union.tree_node* %0, !dbg !3080
}

; Function Attrs: nounwind uwtable
define dso_local void @sese_adjust_liveout_phis(%struct.sese_s* %region, %struct.htab* %rename_map, %struct.basic_block_def* %bb, %struct.edge_def* %false_e, %struct.edge_def* %true_e) local_unnamed_addr #5 !dbg !3081 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3085, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.htab* %rename_map, metadata !3086, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3087, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.edge_def* %false_e, metadata !3088, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.edge_def* %true_e, metadata !3089, metadata !DIExpression()), !dbg !3115
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !3116
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3116
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3117
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3117
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #6, !dbg !3117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3117
  %2 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !3118
  br label %for.cond, !dbg !3119

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3090, metadata !DIExpression(DW_OP_deref)), !dbg !3115
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !3120
  %tobool = icmp eq i8 %call, 0, !dbg !3121
  br i1 %tobool, label %for.body, label %for.end49, !dbg !3122

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, metadata !3101, metadata !DIExpression()), !dbg !3123
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3090, metadata !DIExpression(DW_OP_deref)), !dbg !3115
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !3124
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3102, metadata !DIExpression()), !dbg !3123
  %call2 = call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call1) #7, !dbg !3125
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !3103, metadata !DIExpression()), !dbg !3123
  %call3 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !3126
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3126
  br i1 %tobool4, label %if.then, label %for.cond5.preheader, !dbg !3128

for.cond5.preheader:                              ; preds = %for.body
  br label %for.cond5, !dbg !3129

if.then:                                          ; preds = %for.body
  call fastcc void @sese_adjust_vphi(%struct.sese_s* %region, %union.gimple_statement_d* %call1, %struct.edge_def* %true_e) #7, !dbg !3131
  br label %cleanup, !dbg !3133

for.cond5:                                        ; preds = %for.cond5.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond5.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3134
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3097, metadata !DIExpression()), !dbg !3123
  %call6 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call1) #7, !dbg !3135
  %3 = zext i32 %call6 to i64, !dbg !3137
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !3137
  br i1 %cmp, label %for.body7, label %for.cond5.for.end_crit_edge, !dbg !3129

for.cond5.for.end_crit_edge:                      ; preds = %for.cond5
  br label %for.end, !dbg !3129

for.body7:                                        ; preds = %for.cond5
  %call8 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %call1, i64 %indvars.iv) #7, !dbg !3138
  %cmp9 = icmp eq %struct.edge_def* %call8, %false_e, !dbg !3140
  br i1 %cmp9, label %for.end.loopexit, label %for.inc, !dbg !3141

for.inc:                                          ; preds = %for.body7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3142
  br label %for.cond5, !dbg !3143, !llvm.loop !3144

for.end.loopexit:                                 ; preds = %for.body7
  %indvars.iv.lcssa5 = phi i64 [ %indvars.iv, %for.body7 ], !dbg !3134
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa5, metadata !3097, metadata !DIExpression()), !dbg !3123
  br label %for.end, !dbg !3118

for.end:                                          ; preds = %for.end.loopexit, %for.cond5.for.end_crit_edge
  %false_i.0 = phi i64 [ 0, %for.cond5.for.end_crit_edge ], [ %indvars.iv.lcssa5, %for.end.loopexit ], !dbg !3123
  call void @llvm.dbg.value(metadata i32 0, metadata !3097, metadata !DIExpression()), !dbg !3123
  %conv23 = and i64 %false_i.0, 4294967295, !dbg !3118
  call void @llvm.dbg.value(metadata i64 %false_i.0, metadata !3101, metadata !DIExpression()), !dbg !3123
  br label %for.cond13, !dbg !3146

for.cond13:                                       ; preds = %for.inc42, %for.end
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc42 ], [ 0, %for.end ], !dbg !3147
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !3097, metadata !DIExpression()), !dbg !3123
  %call14 = call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %call1) #7, !dbg !3148
  %4 = zext i32 %call14 to i64, !dbg !3149
  %cmp15 = icmp ult i64 %indvars.iv3, %4, !dbg !3149
  br i1 %cmp15, label %for.body17, label %cleanup.loopexit, !dbg !3150

for.body17:                                       ; preds = %for.cond13
  %call19 = call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %call1, i64 %indvars.iv3) #7, !dbg !3151
  %cmp20 = icmp eq %struct.edge_def* %call19, %true_e, !dbg !3152
  br i1 %cmp20, label %if.then22, label %for.inc42, !dbg !3153

if.then22:                                        ; preds = %for.body17
  %call24 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call1, i64 %conv23) #7, !dbg !3154
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !3104, metadata !DIExpression()), !dbg !3118
  %call25 = call fastcc %union.tree_node* @get_rename(%struct.htab* %rename_map, %union.tree_node* %call24) #7, !dbg !3155
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !3109, metadata !DIExpression()), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3156
  %cmp26 = icmp eq %union.tree_node* %call24, %call25, !dbg !3157
  br i1 %cmp26, label %cond.true, label %cond.end, !dbg !3157

cond.true:                                        ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3157
  br label %cond.end, !dbg !3157

cond.end:                                         ; preds = %if.then22, %cond.true
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3158
  %bf.load = load i64, i64* %5, align 8, !dbg !3158
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3159
  %cmp28 = icmp eq i64 %bf.cast1, 141, !dbg !3159
  br i1 %cmp28, label %if.end39, label %land.lhs.true, !dbg !3160

land.lhs.true:                                    ; preds = %cond.end
  %call30 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call24) #6, !dbg !3161
  %tobool32 = icmp eq i8 %call30, 0, !dbg !3161
  br i1 %tobool32, label %if.end39, label %if.then33, !dbg !3162

if.then33:                                        ; preds = %land.lhs.true
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3163
  %6 = load %union.tree_node*, %union.tree_node** %type34, align 8, !dbg !3163
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3111, metadata !DIExpression()), !dbg !3164
  %call35 = call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3165
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !3114, metadata !DIExpression()), !dbg !3164
  %call36 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %6, %union.tree_node* %call35, %union.tree_node* %call25) #6, !dbg !3166
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !3109, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3110, metadata !DIExpression(DW_OP_deref)), !dbg !3118
  %call37 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call36, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !3167
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !3109, metadata !DIExpression()), !dbg !3118
  %7 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3168
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %7, metadata !3110, metadata !DIExpression()), !dbg !3118
  %call38 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %true_e, %struct.gimple_seq_d* %7) #6, !dbg !3169
  br label %if.end39, !dbg !3170

if.end39:                                         ; preds = %land.lhs.true, %cond.end, %if.then33
  %expr.0 = phi %union.tree_node* [ %call37, %if.then33 ], [ %call25, %land.lhs.true ], [ %call25, %cond.end ], !dbg !3118
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !3109, metadata !DIExpression()), !dbg !3118
  %8 = trunc i64 %indvars.iv3 to i32, !dbg !3171
  %call40 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call1, i32 %8) #7, !dbg !3171
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call40, %union.tree_node* %expr.0) #7, !dbg !3171
  call void @set_rename(%struct.htab* %rename_map, %union.tree_node* %call24, %union.tree_node* %call2) #7, !dbg !3172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !3173
  br label %for.inc42, !dbg !3174

for.inc42:                                        ; preds = %for.body17, %if.end39
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !3175
  br label %for.cond13, !dbg !3176, !llvm.loop !3177

cleanup.loopexit:                                 ; preds = %for.cond13
  br label %cleanup, !dbg !3179

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !3090, metadata !DIExpression(DW_OP_deref)), !dbg !3115
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !3179
  br label %for.cond, !dbg !3180, !llvm.loop !3181

for.end49:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3183
  ret void, !dbg !3183
}

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3184 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3188, metadata !DIExpression()), !dbg !3189
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3190
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3190
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3191
  %conv1 = zext i1 %cmp to i8, !dbg !3192
  ret i8 %conv1, !dbg !3193
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3194 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3198, metadata !DIExpression()), !dbg !3199
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3200
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3200
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3201
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3201
  ret %union.gimple_statement_d* %1, !dbg !3202
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3203 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3208, metadata !DIExpression()), !dbg !3209
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !3210
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !3210
  ret %union.tree_node* %0, !dbg !3211
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_adjust_vphi(%struct.sese_s* %region, %union.gimple_statement_d* %phi, %struct.edge_def* %true_e) unnamed_addr #5 !dbg !3212 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3216, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !3217, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %struct.edge_def* %true_e, metadata !3218, metadata !DIExpression()), !dbg !3238
  %call = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !3239
  %cmp = icmp eq i32 %call, 2, !dbg !3239
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3239

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 465, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3239
  br label %cond.end, !dbg !3239

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !3219, metadata !DIExpression()), !dbg !3238
  br label %for.cond, !dbg !3240

for.cond:                                         ; preds = %for.inc, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %cond.end ], !dbg !3241
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3219, metadata !DIExpression()), !dbg !3238
  %call1 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #7, !dbg !3242
  %0 = zext i32 %call1 to i64, !dbg !3243
  %cmp2 = icmp ult i64 %indvars.iv, %0, !dbg !3243
  br i1 %cmp2, label %for.body, label %cleanup.cont37, !dbg !3244

for.body:                                         ; preds = %for.cond
  %call3 = tail call fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !3245
  %cmp4 = icmp eq %struct.edge_def* %call3, %true_e, !dbg !3246
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !3247

if.then:                                          ; preds = %for.body
  %call7 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %indvars.iv) #7, !dbg !3248
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3220, metadata !DIExpression()), !dbg !3249
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3250
  %bf.load = load i64, i64* %1, align 8, !dbg !3250
  %bf.cast2 = and i64 %bf.load, 4294967296, !dbg !3250
  %tobool = icmp eq i64 %bf.cast2, 0, !dbg !3250
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3252

if.end:                                           ; preds = %if.then
  %cmp9 = icmp eq i64 %indvars.iv, 0, !dbg !3253
  %conv12 = zext i1 %cmp9 to i64, !dbg !3254
  %call13 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %phi, i64 %conv12) #7, !dbg !3255
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3225, metadata !DIExpression()), !dbg !3249
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3256
  %bf.load15 = load i64, i64* %2, align 8, !dbg !3256
  %bf.cast183 = and i64 %bf.load15, 4294967296, !dbg !3256
  %tobool19 = icmp eq i64 %bf.cast183, 0, !dbg !3256
  br i1 %tobool19, label %if.end21, label %cleanup, !dbg !3258

if.end21:                                         ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3259
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !3259
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3259
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 5, !dbg !3259
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !3259
  %call22 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %5) #6, !dbg !3260
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call22, metadata !3227, metadata !DIExpression()), !dbg !3249
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call22) #6, !dbg !3261
  %call23 = tail call fastcc %union.tree_node* @get_vdef_before_sese(%struct.sese_s* %region, %union.tree_node* %call13, %struct.simple_bitmap_def* %call22) #7, !dbg !3262
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !3226, metadata !DIExpression()), !dbg !3249
  %cmp24 = icmp eq %union.tree_node* %call23, null, !dbg !3263
  br i1 %cmp24, label %cond.true26, label %cond.end28, !dbg !3263

cond.true26:                                      ; preds = %if.end21
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 484, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3263
  br label %cond.end28, !dbg !3263

cond.end28:                                       ; preds = %if.end21, %cond.true26
  %6 = trunc i64 %indvars.iv to i32, !dbg !3264
  %call30 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %phi, i32 %6) #7, !dbg !3264
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call30, %union.tree_node* %call23) #7, !dbg !3264
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call22, i64 0, i32 0, !dbg !3265
  %7 = load i8*, i8** %popcount, align 8, !dbg !3265
  tail call void @free(i8* %7) #6, !dbg !3265
  %8 = bitcast %struct.simple_bitmap_def* %call22 to i8*, !dbg !3265
  tail call void @free(i8* %8) #6, !dbg !3265
  br label %cleanup, !dbg !3266

cleanup:                                          ; preds = %if.end, %if.then, %cond.end28
  %cleanup.dest.slot.0 = phi i1 [ true, %cond.end28 ], [ false, %if.then ], [ false, %if.end ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup.cont37

for.inc:                                          ; preds = %for.body, %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3267
  br label %for.cond, !dbg !3268, !llvm.loop !3269

cleanup.cont37:                                   ; preds = %cleanup, %for.cond
  ret void, !dbg !3271
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3272 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3276, metadata !DIExpression()), !dbg !3277
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !3278
  %0 = load i32, i32* %nargs, align 4, !dbg !3278
  ret i32 %0, !dbg !3279
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @gimple_phi_arg_edge(%union.gimple_statement_d* %gs, i64 %i) unnamed_addr #0 !dbg !3280 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3285, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.value(metadata i64 %i, metadata !3286, metadata !DIExpression()), !dbg !3287
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !3288
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 0, !dbg !3288
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !3288
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3288
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3288

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %gs) #7, !dbg !3288
  %preds2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call1, i64 0, i32 0, !dbg !3288
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds2, align 8, !dbg !3288
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %1, i64 0, i32 0, !dbg !3288
  br label %cond.end, !dbg !3288

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3288
  %conv = trunc i64 %i to i32, !dbg !3288
  %call3 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %conv) #7, !dbg !3288
  ret %struct.edge_def* %call3, !dbg !3289
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %gs, i64 %index) unnamed_addr #0 !dbg !3290 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3294, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata i64 %index, metadata !3295, metadata !DIExpression()), !dbg !3298
  %conv = trunc i64 %index to i32, !dbg !3299
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %conv) #7, !dbg !3300
  call void @llvm.dbg.value(metadata %struct.phi_arg_d* %call, metadata !3296, metadata !DIExpression()), !dbg !3298
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !3301
  %call1 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %imm_use) #7, !dbg !3302
  ret %union.tree_node* %call1, !dbg !3303
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_rename(%struct.htab* %map, %union.tree_node* %old_name) unnamed_addr #5 !dbg !3304 {
entry:
  %tmp = alloca %struct.rename_map_elt_s, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3306, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !3307, metadata !DIExpression()), !dbg !3310
  %0 = bitcast %struct.rename_map_elt_s* %tmp to i8*, !dbg !3311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3311
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %old_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3312
  %bf.load = load i64, i64* %1, align 8, !dbg !3312
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3312
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3312
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3312

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3312
  br label %cond.end, !dbg !3312

cond.end:                                         ; preds = %entry, %cond.true
  %old_name1 = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %tmp, i64 0, i32 0, !dbg !3313
  store %union.tree_node* %old_name, %union.tree_node** %old_name1, align 8, !dbg !3314
  %call = call i8** @htab_find_slot(%struct.htab* %map, i8* nonnull %0, i32 0) #6, !dbg !3315
  call void @llvm.dbg.value(metadata i8** %call, metadata !3309, metadata !DIExpression()), !dbg !3310
  %tobool = icmp eq i8** %call, null, !dbg !3316
  br i1 %tobool, label %cleanup, label %land.lhs.true, !dbg !3318

land.lhs.true:                                    ; preds = %cond.end
  %2 = load i8*, i8** %call, align 8, !dbg !3319
  %tobool2 = icmp eq i8* %2, null, !dbg !3319
  br i1 %tobool2, label %cleanup, label %if.then, !dbg !3320

if.then:                                          ; preds = %land.lhs.true
  %expr = getelementptr inbounds i8, i8* %2, i64 8, !dbg !3321
  %3 = bitcast i8* %expr to %union.tree_node**, !dbg !3321
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !3321
  br label %cleanup, !dbg !3322

cleanup:                                          ; preds = %land.lhs.true, %cond.end, %if.then
  %retval.0 = phi %union.tree_node* [ %4, %if.then ], [ %old_name, %land.lhs.true ], [ %old_name, %cond.end ], !dbg !3310
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3323
  ret %union.tree_node* %retval.0, !dbg !3323
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !3324 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !3328, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !3329, metadata !DIExpression()), !dbg !3330
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #7, !dbg !3331
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !3332
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !3332
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !3333
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #7, !dbg !3334
  ret void, !dbg !3335
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3336 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3340, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %i, metadata !3341, metadata !DIExpression()), !dbg !3342
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !3343
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !3344
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !3345
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3346 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3351, metadata !DIExpression()), !dbg !3352
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3353
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3353
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3354
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3354
  %2 = load i64, i64* %1, align 8, !dbg !3354
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3355
  store i64 %2, i64* %3, align 8, !dbg !3355
  ret void, !dbg !3356
}

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @get_true_edge_from_guard_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3357 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3361, metadata !DIExpression()), !dbg !3370
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3371
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3371
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3372
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3372
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3373
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3373
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3373
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3373
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3373
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3373
  store i32 %4, i32* %3, align 8, !dbg !3373
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3373
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3373
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !3373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3373
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3373
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3375
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3375
  br label %for.cond, !dbg !3373

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !3377
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3377
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3362, metadata !DIExpression(DW_OP_deref)), !dbg !3370
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3377
  %tobool = icmp eq i8 %call1, 0, !dbg !3373
  br i1 %tobool, label %for.end, label %for.body, !dbg !3373

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3378
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3362, metadata !DIExpression()), !dbg !3370
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !3380
  %12 = load i32, i32* %flags, align 8, !dbg !3380
  %and = and i32 %12, 1024, !dbg !3381
  %tobool2 = icmp eq i32 %and, 0, !dbg !3381
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !3382

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %11, %for.body ], !dbg !3378
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3362, metadata !DIExpression()), !dbg !3370
  br label %cleanup, !dbg !3383

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3363, metadata !DIExpression(DW_OP_deref)), !dbg !3370
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3377
  br label %for.cond, !dbg !3377, !llvm.loop !3384

for.end:                                          ; preds = %for.cond
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3386
  br label %cleanup, !dbg !3387

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi %struct.edge_def* [ %.lcssa, %if.then ], [ null, %for.end ], !dbg !3370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3388
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3388
  ret %struct.edge_def* %retval.0, !dbg !3388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !3389 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !3393, metadata !DIExpression()), !dbg !3395
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !3396
  store i32 0, i32* %index, align 8, !dbg !3397
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !3398
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !3399
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !3400
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !3400
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !3400
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !3401 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !3407, metadata !DIExpression()), !dbg !3408
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3409
  %tobool = icmp eq i8 %call, 0, !dbg !3409
  br i1 %tobool, label %if.then, label %if.else, !dbg !3411

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !3412
  br label %return, !dbg !3414

if.else:                                          ; preds = %entry
  br label %return, !dbg !3415

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !3417
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3417
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !3417
  ret i8 %retval.0, !dbg !3418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !3419 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !3424, metadata !DIExpression()), !dbg !3425
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !3426
  %0 = load i32, i32* %index, align 8, !dbg !3426
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !3426
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3426
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !3426
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !3426
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3426

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !3426
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !3426
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !3426
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !3426
  br label %cond.end, !dbg !3426

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3426
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !3426
  %cmp = icmp ult i32 %0, %call2, !dbg !3426
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !3426

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3426
  br label %cond.end5, !dbg !3426

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !3427
  %inc = add i32 %5, 1, !dbg !3427
  store i32 %inc, i32* %index, align 8, !dbg !3427
  ret void, !dbg !3428
}

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @get_false_edge_from_guard_bb(%struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3429 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3431, metadata !DIExpression()), !dbg !3434
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3435
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3435
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3436
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3436
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3437
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3437
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3437
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !3437
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !3437
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !3437
  store i32 %4, i32* %3, align 8, !dbg !3437
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !3437
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !3437
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !3437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !3437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !3437
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !3439
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !3439
  br label %for.cond, !dbg !3437

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !3441
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !3441
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3432, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !3441
  %tobool = icmp eq i8 %call1, 0, !dbg !3437
  br i1 %tobool, label %for.end, label %for.body, !dbg !3437

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3442
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !3432, metadata !DIExpression()), !dbg !3434
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !3444
  %12 = load i32, i32* %flags, align 8, !dbg !3444
  %and = and i32 %12, 1024, !dbg !3445
  %tobool2 = icmp eq i32 %and, 0, !dbg !3445
  br i1 %tobool2, label %if.then, label %for.inc, !dbg !3446

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.edge_def* [ %11, %for.body ], !dbg !3442
  call void @llvm.dbg.value(metadata %struct.edge_def* %.lcssa, metadata !3432, metadata !DIExpression()), !dbg !3434
  br label %cleanup, !dbg !3447

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3433, metadata !DIExpression(DW_OP_deref)), !dbg !3434
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !3441
  br label %for.cond, !dbg !3441, !llvm.loop !3448

for.end:                                          ; preds = %for.cond
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3450
  br label %cleanup, !dbg !3451

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi %struct.edge_def* [ %.lcssa, %if.then ], [ null, %for.end ], !dbg !3434
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3452
  ret %struct.edge_def* %retval.0, !dbg !3452
}

; Function Attrs: nounwind uwtable
define dso_local void @insert_loop_close_phis(%struct.htab* %map, %struct.loop* %loop) local_unnamed_addr #5 !dbg !3453 {
entry:
  %a = alloca %struct.alep, align 8
  %elt = alloca %struct.rename_map_elt_s*, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3457, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3458, metadata !DIExpression()), !dbg !3462
  %0 = bitcast %struct.alep* %a to i8*, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3463
  %1 = bitcast %struct.rename_map_elt_s** %elt to i8*, !dbg !3464
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3464
  %loop1 = getelementptr inbounds %struct.alep, %struct.alep* %a, i64 0, i32 0, !dbg !3465
  store %struct.loop* %loop, %struct.loop** %loop1, align 8, !dbg !3466
  %call = tail call fastcc %struct.VEC_rename_map_elt_heap* @VEC_rename_map_elt_heap_alloc(i32 3) #7, !dbg !3467
  %new_renames = getelementptr inbounds %struct.alep, %struct.alep* %a, i64 0, i32 1, !dbg !3468
  store %struct.VEC_rename_map_elt_heap* %call, %struct.VEC_rename_map_elt_heap** %new_renames, align 8, !dbg !3469
  tail call void @update_ssa(i32 2048) #6, !dbg !3470
  call void @htab_traverse(%struct.htab* %map, i32 (i8**, i8*)* nonnull @add_loop_exit_phis, i8* nonnull %0) #6, !dbg !3471
  call void @update_ssa(i32 2048) #6, !dbg !3472
  call void @llvm.dbg.value(metadata i32 0, metadata !3459, metadata !DIExpression()), !dbg !3462
  %2 = bitcast %struct.rename_map_elt_s** %elt to i8**, !dbg !3473
  br label %for.cond, !dbg !3477

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3478
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3459, metadata !DIExpression()), !dbg !3462
  %3 = load %struct.VEC_rename_map_elt_heap*, %struct.VEC_rename_map_elt_heap** %new_renames, align 8, !dbg !3479
  %base = getelementptr inbounds %struct.VEC_rename_map_elt_heap, %struct.VEC_rename_map_elt_heap* %3, i64 0, i32 0, !dbg !3479
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s** %elt, metadata !3461, metadata !DIExpression(DW_OP_deref)), !dbg !3462
  %call4 = call fastcc i32 @VEC_rename_map_elt_base_iterate(%struct.VEC_rename_map_elt_base* %base, i32 %i.0, %struct.rename_map_elt_s** nonnull %elt) #7, !dbg !3479
  %tobool5 = icmp eq i32 %call4, 0, !dbg !3480
  br i1 %tobool5, label %for.end, label %for.body, !dbg !3480

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rename_map_elt_s*, %struct.rename_map_elt_s** %elt, align 8, !dbg !3481
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %4, metadata !3461, metadata !DIExpression()), !dbg !3462
  %old_name = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %4, i64 0, i32 0, !dbg !3482
  %5 = load %union.tree_node*, %union.tree_node** %old_name, align 8, !dbg !3482
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %4, metadata !3461, metadata !DIExpression()), !dbg !3462
  %expr = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %4, i64 0, i32 1, !dbg !3483
  %6 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3483
  call void @set_rename(%struct.htab* %map, %union.tree_node* %5, %union.tree_node* %6) #7, !dbg !3484
  %7 = load i8*, i8** %2, align 8, !dbg !3485
  call void @free(i8* %7) #6, !dbg !3486
  %inc = add nuw nsw i32 %i.0, 1, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3459, metadata !DIExpression()), !dbg !3462
  br label %for.cond, !dbg !3488, !llvm.loop !3489

for.end:                                          ; preds = %for.cond
  call fastcc void @VEC_rename_map_elt_heap_free(%struct.VEC_rename_map_elt_heap** nonnull %new_renames) #7, !dbg !3491
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3492
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !3492
  ret void, !dbg !3492
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_rename_map_elt_heap* @VEC_rename_map_elt_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3493 {
entry:
  call void @llvm.dbg.value(metadata i32 3, metadata !3497, metadata !DIExpression()), !dbg !3498
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 3) #6, !dbg !3499
  %0 = bitcast i8* %call to %struct.VEC_rename_map_elt_heap*, !dbg !3499
  ret %struct.VEC_rename_map_elt_heap* %0, !dbg !3499
}

; Function Attrs: nounwind uwtable
define internal i32 @add_loop_exit_phis(i8** %slot, i8* %data) #5 !dbg !3500 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3502, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8* %data, metadata !3503, metadata !DIExpression()), !dbg !3519
  %tobool = icmp eq i8** %slot, null, !dbg !3520
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !3522

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %slot, align 8, !dbg !3523
  %tobool2 = icmp ne i8* %0, null, !dbg !3523
  %tobool4 = icmp ne i8* %data, null, !dbg !3524
  %or.cond = and i1 %tobool2, %tobool4, !dbg !3525
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !3525

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i8* %0, metadata !3504, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i8* %data, metadata !3505, metadata !DIExpression()), !dbg !3519
  %loop5 = bitcast i8* %data to %struct.loop**, !dbg !3526
  %1 = load %struct.loop*, %struct.loop** %loop5, align 8, !dbg !3526
  call void @llvm.dbg.value(metadata %struct.loop* %1, metadata !3506, metadata !DIExpression()), !dbg !3519
  %expr6 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !3527
  %2 = bitcast i8* %expr6 to %union.tree_node**, !dbg !3527
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3527
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3507, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3508, metadata !DIExpression()), !dbg !3519
  %old_name7 = bitcast i8* %0 to %union.tree_node**, !dbg !3528
  %4 = load %union.tree_node*, %union.tree_node** %old_name7, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3509, metadata !DIExpression()), !dbg !3519
  %call = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %3, %struct.loop* %1) #7, !dbg !3529
  call void @llvm.dbg.value(metadata i8 %call, metadata !3510, metadata !DIExpression()), !dbg !3519
  %tobool8 = icmp eq i8 %call, 0, !dbg !3530
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !3532

if.end10:                                         ; preds = %if.end
  %5 = load i8*, i8** %slot, align 8, !dbg !3533
  tail call void @free(i8* %5) #6, !dbg !3534
  store i8* null, i8** %slot, align 8, !dbg !3535
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3536
  %bf.load = load i64, i64* %6, align 8, !dbg !3536
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3538
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !3538
  br i1 %cmp, label %if.end12, label %cleanup, !dbg !3539

if.end12:                                         ; preds = %if.end10
  %call13 = tail call fastcc %union.gimple_statement_d* @alive_after_loop(%union.tree_node* %4) #7, !dbg !3540
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !3513, metadata !DIExpression()), !dbg !3519
  %cmp14 = icmp eq %union.gimple_statement_d* %call13, null, !dbg !3541
  call void @llvm.dbg.value(metadata i1 %cmp14, metadata !3511, metadata !DIExpression()), !dbg !3519
  br i1 %cmp14, label %land.end, label %land.rhs, !dbg !3542

land.rhs:                                         ; preds = %if.end12
  %call18 = tail call fastcc zeroext i8 @close_phi_not_yet_inserted_p(%struct.loop* %1, %union.tree_node* %3) #7, !dbg !3543
  %tobool20 = icmp ne i8 %call18, 0, !dbg !3542
  br label %land.end

land.end:                                         ; preds = %if.end12, %land.rhs
  %7 = phi i1 [ false, %if.end12 ], [ %tobool20, %land.rhs ]
  br i1 %7, label %if.then23, label %cleanup, !dbg !3544

if.then23:                                        ; preds = %land.end
  %call24 = tail call %struct.edge_def* @single_exit(%struct.loop* %1) #6, !dbg !3545
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call24, i64 0, i32 1, !dbg !3546
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3546
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !3514, metadata !DIExpression()), !dbg !3547
  %call25 = tail call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %3, %struct.basic_block_def* %8) #6, !dbg !3548
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !3517, metadata !DIExpression()), !dbg !3547
  %call26 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call25) #7, !dbg !3549
  %call27 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call25) #7, !dbg !3550
  %call28 = tail call %union.tree_node* @create_new_def_for(%union.tree_node* %call26, %union.gimple_statement_d* %call25, %union.tree_node** %call27) #6, !dbg !3551
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !3518, metadata !DIExpression()), !dbg !3547
  %call29 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %8) #7, !dbg !3552
  tail call void @add_phi_arg(%union.gimple_statement_d* %call25, %union.tree_node* %3, %struct.edge_def* %call29, i32 0) #6, !dbg !3553
  %new_renames = getelementptr inbounds i8, i8* %data, i64 8, !dbg !3554
  %9 = bitcast i8* %new_renames to %struct.VEC_rename_map_elt_heap**, !dbg !3554
  %call30 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call13) #7, !dbg !3554
  %call31 = tail call fastcc %struct.rename_map_elt_s* @new_rename_map_elt(%union.tree_node* %call30, %union.tree_node* %call28) #7, !dbg !3554
  %call32 = tail call fastcc %struct.rename_map_elt_s** @VEC_rename_map_elt_heap_safe_push(%struct.VEC_rename_map_elt_heap** nonnull %9, %struct.rename_map_elt_s* %call31) #7, !dbg !3554
  br label %cleanup, !dbg !3555

cleanup:                                          ; preds = %if.end10, %if.end, %entry, %land.end, %if.then23, %lor.lhs.false
  ret i32 1, !dbg !3556
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rename_map_elt_base_iterate(%struct.VEC_rename_map_elt_base* %vec_, i32 %ix_, %struct.rename_map_elt_s** %ptr) unnamed_addr #0 !dbg !3557 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_base* %vec_, metadata !3564, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3565, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s** %ptr, metadata !3566, metadata !DIExpression()), !dbg !3567
  %tobool = icmp eq %struct.VEC_rename_map_elt_base* %vec_, null, !dbg !3568
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3568

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 0, !dbg !3568
  %0 = load i32, i32* %num, align 8, !dbg !3568
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3568
  br i1 %cmp, label %if.then, label %if.else, !dbg !3570

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3571
  %arrayidx = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3571
  %1 = load %struct.rename_map_elt_s*, %struct.rename_map_elt_s** %arrayidx, align 8, !dbg !3571
  br label %return, !dbg !3571

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3573

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.rename_map_elt_s* [ null, %if.else ], [ %1, %if.then ], !dbg !3575
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3575
  store %struct.rename_map_elt_s* %storemerge, %struct.rename_map_elt_s** %ptr, align 8, !dbg !3575
  ret i32 %retval.0, !dbg !3570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rename_map_elt_heap_free(%struct.VEC_rename_map_elt_heap** %vec_) unnamed_addr #0 !dbg !3576 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_heap** %vec_, metadata !3581, metadata !DIExpression()), !dbg !3582
  %0 = load %struct.VEC_rename_map_elt_heap*, %struct.VEC_rename_map_elt_heap** %vec_, align 8, !dbg !3583
  %tobool = icmp eq %struct.VEC_rename_map_elt_heap* %0, null, !dbg !3583
  br i1 %tobool, label %if.end, label %if.then, !dbg !3585

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_rename_map_elt_heap* %0 to i8*, !dbg !3585
  tail call void @free(i8* nonnull %1) #6, !dbg !3583
  br label %if.end, !dbg !3583

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_rename_map_elt_heap* null, %struct.VEC_rename_map_elt_heap** %vec_, align 8, !dbg !3585
  ret void, !dbg !3585
}

; Function Attrs: nounwind uwtable
define dso_local void @insert_guard_phis(%struct.basic_block_def* %bb, %struct.edge_def* %true_edge, %struct.edge_def* %false_edge, %struct.htab* %before_guard, %struct.htab* %rename_map) local_unnamed_addr #5 !dbg !3586 {
entry:
  %i = alloca %struct.igp, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3590, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata %struct.edge_def* %true_edge, metadata !3591, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata %struct.edge_def* %false_edge, metadata !3592, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata %struct.htab* %before_guard, metadata !3593, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata %struct.htab* %rename_map, metadata !3594, metadata !DIExpression()), !dbg !3596
  %0 = bitcast %struct.igp* %i to i8*, !dbg !3597
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3597
  %bb1 = getelementptr inbounds %struct.igp, %struct.igp* %i, i64 0, i32 0, !dbg !3598
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb1, align 8, !dbg !3599
  %true_edge2 = getelementptr inbounds %struct.igp, %struct.igp* %i, i64 0, i32 1, !dbg !3600
  store %struct.edge_def* %true_edge, %struct.edge_def** %true_edge2, align 8, !dbg !3601
  %false_edge3 = getelementptr inbounds %struct.igp, %struct.igp* %i, i64 0, i32 2, !dbg !3602
  store %struct.edge_def* %false_edge, %struct.edge_def** %false_edge3, align 8, !dbg !3603
  %before_guard4 = getelementptr inbounds %struct.igp, %struct.igp* %i, i64 0, i32 3, !dbg !3604
  store %struct.htab* %before_guard, %struct.htab** %before_guard4, align 8, !dbg !3605
  tail call void @update_ssa(i32 2048) #6, !dbg !3606
  call void @htab_traverse(%struct.htab* %rename_map, i32 (i8**, i8*)* nonnull @add_guard_exit_phis, i8* nonnull %0) #6, !dbg !3607
  call void @update_ssa(i32 2048) #6, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !3609
  ret void, !dbg !3609
}

; Function Attrs: nounwind uwtable
define internal i32 @add_guard_exit_phis(i8** %slot, i8* %s) #5 !dbg !3610 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3612, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i8* %s, metadata !3613, metadata !DIExpression()), !dbg !3623
  %0 = bitcast i8** %slot to %struct.rename_map_elt_s**, !dbg !3624
  %1 = load %struct.rename_map_elt_s*, %struct.rename_map_elt_s** %0, align 8, !dbg !3624
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %1, metadata !3614, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.value(metadata i8* %s, metadata !3615, metadata !DIExpression()), !dbg !3623
  %bb2 = bitcast i8* %s to %struct.basic_block_def**, !dbg !3625
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2, align 8, !dbg !3625
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !3616, metadata !DIExpression()), !dbg !3623
  %true_edge3 = getelementptr inbounds i8, i8* %s, i64 8, !dbg !3626
  %3 = bitcast i8* %true_edge3 to %struct.edge_def**, !dbg !3626
  %4 = load %struct.edge_def*, %struct.edge_def** %3, align 8, !dbg !3626
  call void @llvm.dbg.value(metadata %struct.edge_def* %4, metadata !3617, metadata !DIExpression()), !dbg !3623
  %false_edge4 = getelementptr inbounds i8, i8* %s, i64 16, !dbg !3627
  %5 = bitcast i8* %false_edge4 to %struct.edge_def**, !dbg !3627
  %6 = load %struct.edge_def*, %struct.edge_def** %5, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %struct.edge_def* %6, metadata !3618, metadata !DIExpression()), !dbg !3623
  %old_name = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %1, i64 0, i32 0, !dbg !3628
  %7 = load %union.tree_node*, %union.tree_node** %old_name, align 8, !dbg !3628
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !3619, metadata !DIExpression()), !dbg !3623
  %expr = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %1, i64 0, i32 1, !dbg !3629
  %8 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3629
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3620, metadata !DIExpression()), !dbg !3623
  %before_guard = getelementptr inbounds i8, i8* %s, i64 24, !dbg !3630
  %9 = bitcast i8* %before_guard to %struct.htab**, !dbg !3630
  %10 = load %struct.htab*, %struct.htab** %9, align 8, !dbg !3630
  %call = tail call fastcc %union.tree_node* @default_before_guard(%struct.htab* %10, %union.tree_node* %7) #7, !dbg !3631
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3621, metadata !DIExpression()), !dbg !3623
  %cmp = icmp eq %union.tree_node* %8, %call, !dbg !3632
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3634

if.end:                                           ; preds = %entry
  %call5 = tail call fastcc %union.tree_node* @convert_for_phi_arg(%union.tree_node* %8, %union.tree_node* %7, %struct.edge_def* %4) #7, !dbg !3635
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3620, metadata !DIExpression()), !dbg !3623
  %call6 = tail call fastcc %union.tree_node* @convert_for_phi_arg(%union.tree_node* %call, %union.tree_node* %7, %struct.edge_def* %6) #7, !dbg !3636
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3621, metadata !DIExpression()), !dbg !3623
  %call7 = tail call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %7, %struct.basic_block_def* %2) #6, !dbg !3637
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call7, metadata !3622, metadata !DIExpression()), !dbg !3623
  %call8 = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %call7) #7, !dbg !3638
  %call9 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call7) #7, !dbg !3639
  %call10 = tail call %union.tree_node* @create_new_def_for(%union.tree_node* %call8, %union.gimple_statement_d* %call7, %union.tree_node** %call9) #6, !dbg !3640
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !3619, metadata !DIExpression()), !dbg !3623
  tail call void @add_phi_arg(%union.gimple_statement_d* %call7, %union.tree_node* %call5, %struct.edge_def* %4, i32 0) #6, !dbg !3641
  tail call void @add_phi_arg(%union.gimple_statement_d* %call7, %union.tree_node* %call6, %struct.edge_def* %6, i32 0) #6, !dbg !3642
  store %union.tree_node* %call10, %union.tree_node** %expr, align 8, !dbg !3643
  store %struct.rename_map_elt_s* %1, %struct.rename_map_elt_s** %0, align 8, !dbg !3644
  br label %cleanup, !dbg !3645

cleanup:                                          ; preds = %entry, %if.end
  ret i32 1, !dbg !3646
}

; Function Attrs: nounwind uwtable
define dso_local %struct.edge_def* @copy_bb_and_scalar_dependences(%struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.edge_def* %next_e, %struct.htab* %map) local_unnamed_addr #5 !dbg !3647 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3651, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3652, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata %struct.edge_def* %next_e, metadata !3653, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3654, metadata !DIExpression()), !dbg !3656
  %call = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %next_e) #6, !dbg !3657
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3655, metadata !DIExpression()), !dbg !3656
  %call1 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call) #7, !dbg !3658
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !3653, metadata !DIExpression()), !dbg !3656
  tail call fastcc void @graphite_copy_stmts_from_block(%struct.basic_block_def* %bb, %struct.basic_block_def* %call, %struct.htab* %map) #7, !dbg !3659
  tail call fastcc void @remove_condition(%struct.basic_block_def* %call) #7, !dbg !3660
  tail call void @remove_phi_nodes(%struct.basic_block_def* %call) #6, !dbg !3661
  tail call fastcc void @expand_scalar_variables(%struct.basic_block_def* %call, %struct.sese_s* %region, %struct.htab* %map) #7, !dbg !3662
  tail call fastcc void @rename_variables(%struct.basic_block_def* %call, %struct.htab* %map) #7, !dbg !3663
  ret %struct.edge_def* %call1, !dbg !3664
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3665 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3672, metadata !DIExpression()), !dbg !3673
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #7, !dbg !3674
  %tobool = icmp eq i8 %call, 0, !dbg !3674
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3674

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3674
  br label %cond.end, !dbg !3674

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !3675
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3675
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !3675
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !3675

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !3675
  br label %cond.end5, !dbg !3675

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !3675
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !3675
  ret %struct.edge_def* %call7, !dbg !3676
}

; Function Attrs: nounwind uwtable
define internal fastcc void @graphite_copy_stmts_from_block(%struct.basic_block_def* %bb, %struct.basic_block_def* %new_bb, %struct.htab* %map) unnamed_addr #5 !dbg !3677 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %gsi_tgt = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp1 = alloca %struct.gimple_stmt_iterator, align 8
  %op_iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3681, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %new_bb, metadata !3682, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3683, metadata !DIExpression()), !dbg !3710
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3711
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3711
  %1 = bitcast %struct.gimple_stmt_iterator* %gsi_tgt to i8*, !dbg !3711
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3711
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3712
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3712
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %new_bb) #7, !dbg !3712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !3712
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3712
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp1 to i8*, !dbg !3713
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3713
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp1, %struct.basic_block_def* %bb) #7, !dbg !3713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !3713
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3713
  %4 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %op_iter, i64 0, i32 0, !dbg !3714
  br label %for.cond, !dbg !3715

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3684, metadata !DIExpression(DW_OP_deref)), !dbg !3710
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3716
  %tobool = icmp eq i8 %call, 0, !dbg !3717
  br i1 %tobool, label %for.body, label %for.end22, !dbg !3718

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #8, !dbg !3719
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3684, metadata !DIExpression(DW_OP_deref)), !dbg !3710
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3720
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !3703, metadata !DIExpression()), !dbg !3714
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call2) #7, !dbg !3721
  %cmp = icmp eq i32 %call3, 4, !dbg !3723
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3724

if.end:                                           ; preds = %for.body
  %call4 = call %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d* %call2) #6, !dbg !3725
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !3704, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi_tgt, metadata !3685, metadata !DIExpression(DW_OP_deref)), !dbg !3710
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi_tgt, %union.gimple_statement_d* %call4, i32 0) #6, !dbg !3726
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3727
  %call5 = call fastcc %union.tree_node* @gimple_vop(%struct.function* %5) #7, !dbg !3728
  call void @mark_sym_for_renaming(%union.tree_node* %call5) #6, !dbg !3729
  %call6 = call zeroext i8 @maybe_duplicate_eh_stmt(%union.gimple_statement_d* %call4, %union.gimple_statement_d* %call2) #6, !dbg !3730
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3731
  call void @gimple_duplicate_stmt_histograms(%struct.function* %6, %union.gimple_statement_d* %call4, %struct.function* %6, %union.gimple_statement_d* %call2) #6, !dbg !3732
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3690, metadata !DIExpression(DW_OP_deref)), !dbg !3714
  %call9 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %op_iter, %union.gimple_statement_d* %call4, i32 10) #7, !dbg !3733
  call void @llvm.dbg.value(metadata %union.tree_node** %call9, metadata !3686, metadata !DIExpression()), !dbg !3714
  br label %for.cond10, !dbg !3733

for.cond10:                                       ; preds = %for.body14, %if.end
  %def_p.0 = phi %union.tree_node** [ %call9, %if.end ], [ %call17, %for.body14 ], !dbg !3734
  call void @llvm.dbg.value(metadata %union.tree_node** %def_p.0, metadata !3686, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3690, metadata !DIExpression(DW_OP_deref)), !dbg !3714
  %call11 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !3735
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3735
  br i1 %tobool12, label %for.body14, label %cleanup.loopexit, !dbg !3733

for.body14:                                       ; preds = %for.cond10
  %call15 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def_p.0) #7, !dbg !3736
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3705, metadata !DIExpression()), !dbg !3737
  %call16 = call %union.tree_node* @create_new_def_for(%union.tree_node* %call15, %union.gimple_statement_d* %call4, %union.tree_node** %def_p.0) #6, !dbg !3738
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !3709, metadata !DIExpression()), !dbg !3737
  call void @set_rename(%struct.htab* %map, %union.tree_node* %call15, %union.tree_node* %call16) #7, !dbg !3739
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %op_iter, metadata !3690, metadata !DIExpression(DW_OP_deref)), !dbg !3714
  %call17 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %op_iter) #7, !dbg !3735
  call void @llvm.dbg.value(metadata %union.tree_node** %call17, metadata !3686, metadata !DIExpression()), !dbg !3714
  br label %for.cond10, !dbg !3735, !llvm.loop !3740

cleanup.loopexit:                                 ; preds = %for.cond10
  br label %cleanup, !dbg !3742

cleanup:                                          ; preds = %cleanup.loopexit, %for.body
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #8, !dbg !3742
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3684, metadata !DIExpression(DW_OP_deref)), !dbg !3710
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3743
  br label %for.cond, !dbg !3744, !llvm.loop !3745

for.end22:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3747
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3747
  ret void, !dbg !3747
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_condition(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !3748 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3752, metadata !DIExpression()), !dbg !3757
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %bb) #6, !dbg !3758
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !3753, metadata !DIExpression()), !dbg !3757
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !3759
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3760

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !3761
  %cmp = icmp eq i32 %call1, 1, !dbg !3762
  br i1 %cmp, label %if.then, label %if.end, !dbg !3763

if.then:                                          ; preds = %land.lhs.true
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3764
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3764
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3754, metadata !DIExpression(DW_OP_deref)), !dbg !3765
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %bb) #7, !dbg !3766
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3754, metadata !DIExpression(DW_OP_deref)), !dbg !3765
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !3767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3768
  br label %if.end, !dbg !3769

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !3770
}

declare dso_local void @remove_phi_nodes(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_scalar_variables(%struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map) unnamed_addr #5 !dbg !3771 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3775, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3776, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3777, metadata !DIExpression()), !dbg !3783
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3784
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3784
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3785
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3785
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !3785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3785
  br label %for.cond, !dbg !3786

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3783
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3787
  %tobool = icmp eq i8 %call, 0, !dbg !3788
  br i1 %tobool, label %for.body, label %for.end, !dbg !3789

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3783
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3790
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !3779, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3783
  call fastcc void @expand_scalar_variables_stmt(%union.gimple_statement_d* %call1, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3792
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3778, metadata !DIExpression(DW_OP_deref)), !dbg !3783
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3793
  br label %for.cond, !dbg !3794, !llvm.loop !3795

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3797
  ret void, !dbg !3797
}

; Function Attrs: nounwind uwtable
define internal fastcc void @rename_variables(%struct.basic_block_def* %bb, %struct.htab* %map) unnamed_addr #5 !dbg !3798 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %insert_gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3802, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !3803, metadata !DIExpression()), !dbg !3806
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3807
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3807
  %1 = bitcast %struct.gimple_stmt_iterator* %insert_gsi to i8*, !dbg !3808
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3808
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %insert_gsi, metadata !3805, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %insert_gsi, %struct.basic_block_def* %bb) #7, !dbg !3809
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3810
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3810
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !3810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !3810
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3810
  br label %for.cond, !dbg !3812

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3804, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3813
  %tobool = icmp eq i8 %call, 0, !dbg !3815
  br i1 %tobool, label %for.body, label %for.end, !dbg !3816

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3804, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #7, !dbg !3817
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %insert_gsi, metadata !3805, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  call fastcc void @rename_variables_in_stmt(%union.gimple_statement_d* %call1, %struct.htab* %map, %struct.gimple_stmt_iterator* nonnull %insert_gsi) #7, !dbg !3818
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3804, metadata !DIExpression(DW_OP_deref)), !dbg !3806
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #7, !dbg !3819
  br label %for.cond, !dbg !3820, !llvm.loop !3821

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !3823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !3823
  ret void, !dbg !3823
}

; Function Attrs: nounwind uwtable
define dso_local %struct.loop* @outermost_loop_in_sese(%struct.sese_s* %region, %struct.basic_block_def* %bb) local_unnamed_addr #5 !dbg !3824 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3828, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3829, metadata !DIExpression()), !dbg !3831
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 3, !dbg !3832
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3832
  call void @llvm.dbg.value(metadata %struct.loop* %0, metadata !3830, metadata !DIExpression()), !dbg !3831
  br label %while.cond, !dbg !3833

while.cond:                                       ; preds = %while.body, %entry
  %nest.0 = phi %struct.loop* [ %0, %entry ], [ %call4, %while.body ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0, metadata !3830, metadata !DIExpression()), !dbg !3831
  %call = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %nest.0) #7, !dbg !3834
  %tobool = icmp eq %struct.loop* %call, null, !dbg !3834
  br i1 %tobool, label %while.end, label %land.rhs, !dbg !3835

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %nest.0) #7, !dbg !3836
  %call2 = tail call fastcc zeroext i8 @loop_in_sese_p(%struct.loop* %call1, %struct.sese_s* %region) #7, !dbg !3837
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3835
  br i1 %tobool3, label %while.end, label %while.body, !dbg !3833

while.body:                                       ; preds = %land.rhs
  %call4 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %nest.0) #7, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.loop* %call4, metadata !3830, metadata !DIExpression()), !dbg !3831
  br label %while.cond, !dbg !3833, !llvm.loop !3839

while.end:                                        ; preds = %land.rhs, %while.cond
  %nest.0.lcssa = phi %struct.loop* [ %nest.0, %land.rhs ], [ %nest.0, %while.cond ], !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata %struct.loop* %nest.0.lcssa, metadata !3830, metadata !DIExpression()), !dbg !3831
  ret %struct.loop* %nest.0.lcssa, !dbg !3841
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3842 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3848, metadata !DIExpression()), !dbg !3850
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3851
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3851
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3851
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3851

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3851
  br label %cond.end, !dbg !3851

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3851
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %call, metadata !3849, metadata !DIExpression()), !dbg !3850
  %cmp = icmp eq i32 %call, 0, !dbg !3852
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3854

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3855
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3855
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3855

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3855
  br label %cond.end8, !dbg !3855

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3855
  %sub = add i32 %call, -1, !dbg !3855
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #7, !dbg !3855
  br label %cleanup, !dbg !3856

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3850
  ret %struct.loop* %retval.0, !dbg !3857
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @loop_in_sese_p(%struct.loop* %loop, %struct.sese_s* %region) unnamed_addr #0 !dbg !3858 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3862, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3863, metadata !DIExpression()), !dbg !3864
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3865
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3865
  %call = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %0, %struct.sese_s* %region) #7, !dbg !3866
  %tobool = icmp eq i8 %call, 0, !dbg !3866
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3867

land.rhs:                                         ; preds = %entry
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3868
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3868
  %call1 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %1, %struct.sese_s* %region) #7, !dbg !3869
  %tobool3 = icmp ne i8 %call1, 0, !dbg !3867
  %phitmp = zext i1 %tobool3 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !3870
}

; Function Attrs: nounwind uwtable
define dso_local void @if_region_set_false_region(%struct.ifsese_s* %if_region, %struct.sese_s* %region) local_unnamed_addr #5 !dbg !3871 {
entry:
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %if_region, metadata !3876, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !3877, metadata !DIExpression()), !dbg !3889
  %call = tail call fastcc %struct.basic_block_def* @if_region_get_condition_block(%struct.ifsese_s* %if_region) #7, !dbg !3890
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3878, metadata !DIExpression()), !dbg !3889
  %call1 = tail call %struct.edge_def* @get_false_edge_from_guard_bb(%struct.basic_block_def* %call) #7, !dbg !3891
  call void @llvm.dbg.value(metadata %struct.edge_def* %call1, metadata !3879, metadata !DIExpression()), !dbg !3889
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 1, !dbg !3892
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3892
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !3880, metadata !DIExpression()), !dbg !3889
  %entry2 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 0, !dbg !3893
  %1 = load %struct.edge_def*, %struct.edge_def** %entry2, align 8, !dbg !3893
  call void @llvm.dbg.value(metadata %struct.edge_def* %1, metadata !3881, metadata !DIExpression()), !dbg !3889
  %exit = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 1, !dbg !3894
  %2 = load %struct.edge_def*, %struct.edge_def** %exit, align 8, !dbg !3894
  call void @llvm.dbg.value(metadata %struct.edge_def* %2, metadata !3882, metadata !DIExpression()), !dbg !3889
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %1, i64 0, i32 0, !dbg !3895
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !3883, metadata !DIExpression()), !dbg !3889
  %src3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %2, i64 0, i32 0, !dbg !3896
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src3, align 8, !dbg !3896
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !3884, metadata !DIExpression()), !dbg !3889
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3897
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 4, !dbg !3897
  %6 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3897
  %exits = getelementptr inbounds %struct.loops, %struct.loops* %6, i64 0, i32 2, !dbg !3898
  %7 = load %struct.htab*, %struct.htab** %exits, align 8, !dbg !3898
  %8 = bitcast %struct.edge_def* %2 to i8*, !dbg !3899
  %9 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3900
  %call4 = tail call i32 %9(i8* %8) #6, !dbg !3900
  %call5 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %7, i8* %8, i32 %call4, i32 0) #6, !dbg !3901
  call void @llvm.dbg.value(metadata i8** %call5, metadata !3885, metadata !DIExpression()), !dbg !3889
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 7, !dbg !3902
  %10 = load i32, i32* %flags, align 8, !dbg !3902
  %flags6 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %1, i64 0, i32 7, !dbg !3903
  store i32 %10, i32* %flags6, align 8, !dbg !3904
  %flags7 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %2, i64 0, i32 7, !dbg !3905
  %11 = load i32, i32* %flags7, align 8, !dbg !3905
  store i32 %11, i32* %flags, align 8, !dbg !3906
  tail call void @redirect_edge_pred(%struct.edge_def* %1, %struct.basic_block_def* %call) #6, !dbg !3907
  tail call void @redirect_edge_pred(%struct.edge_def* %2, %struct.basic_block_def* %3) #6, !dbg !3908
  tail call void @redirect_edge_pred(%struct.edge_def* %call1, %struct.basic_block_def* %4) #6, !dbg !3909
  %call9 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %0) #7, !dbg !3910
  tail call void @redirect_edge_succ(%struct.edge_def* %call1, %struct.basic_block_def* %call9) #6, !dbg !3911
  tail call void @delete_basic_block(%struct.basic_block_def* %0) #6, !dbg !3912
  store i32 1, i32* %flags7, align 8, !dbg !3913
  tail call fastcc void @recompute_all_dominators() #7, !dbg !3914
  store %struct.edge_def* %call1, %struct.edge_def** %exit, align 8, !dbg !3915
  %false_region = getelementptr inbounds %struct.ifsese_s, %struct.ifsese_s* %if_region, i64 0, i32 2, !dbg !3916
  %12 = load %struct.sese_s*, %struct.sese_s** %false_region, align 8, !dbg !3916
  %tobool = icmp eq %struct.sese_s* %12, null, !dbg !3918
  br i1 %tobool, label %if.end, label %if.then, !dbg !3919

if.then:                                          ; preds = %entry
  %13 = bitcast %struct.sese_s* %12 to i8*, !dbg !3919
  tail call void @free(i8* nonnull %13) #6, !dbg !3920
  br label %if.end, !dbg !3920

if.end:                                           ; preds = %entry, %if.then
  store %struct.sese_s* %region, %struct.sese_s** %false_region, align 8, !dbg !3921
  %tobool14 = icmp eq i8** %call5, null, !dbg !3922
  br i1 %tobool14, label %if.end28, label %if.then15, !dbg !3923

if.then15:                                        ; preds = %if.end
  %call16 = tail call i8* @ggc_alloc_cleared_stat(i64 32) #6, !dbg !3924
  call void @llvm.dbg.value(metadata i8* %call16, metadata !3886, metadata !DIExpression()), !dbg !3925
  %14 = load i8*, i8** %call5, align 8, !dbg !3926
  %call17 = tail call i8* @memcpy(i8* %call16, i8* %14, i64 32) #6, !dbg !3927
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3928
  %x_current_loops19 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 4, !dbg !3928
  %16 = load %struct.loops*, %struct.loops** %x_current_loops19, align 8, !dbg !3928
  %exits20 = getelementptr inbounds %struct.loops, %struct.loops* %16, i64 0, i32 2, !dbg !3929
  %17 = load %struct.htab*, %struct.htab** %exits20, align 8, !dbg !3929
  tail call void @htab_clear_slot(%struct.htab* %17, i8** nonnull %call5) #6, !dbg !3930
  %18 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3931
  %x_current_loops22 = getelementptr inbounds %struct.function, %struct.function* %18, i64 0, i32 4, !dbg !3931
  %19 = load %struct.loops*, %struct.loops** %x_current_loops22, align 8, !dbg !3931
  %exits23 = getelementptr inbounds %struct.loops, %struct.loops* %19, i64 0, i32 2, !dbg !3932
  %20 = load %struct.htab*, %struct.htab** %exits23, align 8, !dbg !3932
  %21 = bitcast %struct.edge_def* %call1 to i8*, !dbg !3933
  %22 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3934
  %call24 = tail call i32 %22(i8* %21) #6, !dbg !3934
  %call25 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %20, i8* %21, i32 %call24, i32 1) #6, !dbg !3935
  call void @llvm.dbg.value(metadata i8** %call25, metadata !3885, metadata !DIExpression()), !dbg !3889
  %e = bitcast i8* %call16 to %struct.edge_def**, !dbg !3936
  store %struct.edge_def* %call1, %struct.edge_def** %e, align 8, !dbg !3937
  store i8* %call16, i8** %call25, align 8, !dbg !3938
  %src26 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call1, i64 0, i32 0, !dbg !3939
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %src26, align 8, !dbg !3939
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 3, !dbg !3940
  %24 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !3940
  %exits27 = getelementptr inbounds %struct.loop, %struct.loop* %24, i64 0, i32 18, !dbg !3941
  %25 = load %struct.loop_exit*, %struct.loop_exit** %exits27, align 8, !dbg !3941
  %next = getelementptr inbounds %struct.loop_exit, %struct.loop_exit* %25, i64 0, i32 2, !dbg !3942
  %26 = bitcast %struct.loop_exit** %next to i8**, !dbg !3943
  store i8* %call16, i8** %26, align 8, !dbg !3943
  br label %if.end28, !dbg !3944

if.end28:                                         ; preds = %if.end, %if.then15
  ret void, !dbg !3945
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @if_region_get_condition_block(%struct.ifsese_s* %if_region) unnamed_addr #0 !dbg !3946 {
entry:
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %if_region, metadata !3950, metadata !DIExpression()), !dbg !3951
  %call = tail call fastcc %struct.edge_def* @if_region_entry(%struct.ifsese_s* %if_region) #7, !dbg !3952
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !3953
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3953
  ret %struct.basic_block_def* %0, !dbg !3954
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local void @redirect_edge_pred(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !3955 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3959, metadata !DIExpression()), !dbg !3960
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #7, !dbg !3961
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !3962
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3962
  ret %struct.basic_block_def* %0, !dbg !3963
}

declare dso_local void @delete_basic_block(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @recompute_all_dominators() unnamed_addr #0 !dbg !3964 {
entry:
  %call = tail call zeroext i8 @mark_irreducible_loops() #6, !dbg !3967
  tail call void @free_dominance_info(i32 1) #6, !dbg !3968
  tail call void @free_dominance_info(i32 2) #6, !dbg !3969
  tail call void @calculate_dominance_info(i32 1) #6, !dbg !3970
  tail call void @calculate_dominance_info(i32 2) #6, !dbg !3971
  ret void, !dbg !3972
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local void @htab_clear_slot(%struct.htab*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.ifsese_s* @create_if_region_on_edge(%struct.edge_def* %entry1, %union.tree_node* %condition) local_unnamed_addr #5 !dbg !3973 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !3977, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata %union.tree_node* %condition, metadata !3978, metadata !DIExpression()), !dbg !3986
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !3987
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3987
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3988
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !3988
  %call = tail call i8* @xmalloc(i64 48) #6, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %call, metadata !3981, metadata !DIExpression()), !dbg !3986
  %call2 = tail call i8* @xmalloc(i64 48) #6, !dbg !3990
  call void @llvm.dbg.value(metadata i8* %call2, metadata !3982, metadata !DIExpression()), !dbg !3986
  %call3 = tail call i8* @xmalloc(i64 48) #6, !dbg !3991
  call void @llvm.dbg.value(metadata i8* %call3, metadata !3983, metadata !DIExpression()), !dbg !3986
  %call4 = tail call i8* @xmalloc(i64 24) #6, !dbg !3992
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %26, metadata !3984, metadata !DIExpression()), !dbg !3986
  %call5 = tail call %struct.edge_def* @create_empty_if_region_on_edge(%struct.edge_def* %entry1, %union.tree_node* %condition) #6, !dbg !3993
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !3985, metadata !DIExpression()), !dbg !3986
  %2 = bitcast i8* %call4 to i8**, !dbg !3994
  store i8* %call, i8** %2, align 8, !dbg !3994
  %entry7 = bitcast i8* %call to %struct.edge_def**, !dbg !3995
  store %struct.edge_def* %entry1, %struct.edge_def** %entry7, align 8, !dbg !3996
  %region8 = bitcast i8* %call4 to %struct.sese_s**, !dbg !3997
  %3 = load %struct.sese_s*, %struct.sese_s** %region8, align 8, !dbg !3997
  %exit9 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %3, i64 0, i32 1, !dbg !3998
  store %struct.edge_def* %call5, %struct.edge_def** %exit9, align 8, !dbg !3999
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4000
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4000
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 1, !dbg !4000
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4000
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 1, !dbg !4000
  %call10 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4000
  %6 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4000
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 0, !dbg !4000
  store i32 %7, i32* %6, align 8, !dbg !4000
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4000
  %9 = extractvalue { i32, %struct.VEC_edge_gc** } %call10, 1, !dbg !4000
  store %struct.VEC_edge_gc** %9, %struct.VEC_edge_gc*** %8, align 8, !dbg !4000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !4000
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4000
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4002
  %11 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4002
  %entry13 = bitcast i8* %call2 to %struct.edge_def**, !dbg !4004
  %exit16 = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !4004
  %12 = bitcast i8* %exit16 to %struct.edge_def**, !dbg !4004
  %true_region17 = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !4004
  %13 = bitcast i8* %true_region17 to i8**, !dbg !4004
  %14 = bitcast i8* %call3 to i64*, !dbg !4008
  %exit25 = getelementptr inbounds i8, i8* %call3, i64 8, !dbg !4008
  %15 = bitcast i8* %exit25 to %struct.edge_def**, !dbg !4008
  %false_region26 = getelementptr inbounds i8, i8* %call4, i64 16, !dbg !4008
  %16 = bitcast i8* %false_region26 to i8**, !dbg !4008
  br label %for.cond, !dbg !4000

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %10, align 8, !dbg !4011
  %18 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !3979, metadata !DIExpression(DW_OP_deref)), !dbg !3986
  %call11 = call fastcc zeroext i8 @ei_cond(i32 %17, %struct.VEC_edge_gc** %18, %struct.edge_def** nonnull %e) #7, !dbg !4011
  %tobool = icmp eq i8 %call11, 0, !dbg !4000
  br i1 %tobool, label %for.end, label %for.body, !dbg !4000

for.body:                                         ; preds = %for.cond
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !3979, metadata !DIExpression()), !dbg !3986
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i64 0, i32 7, !dbg !4013
  %20 = load i32, i32* %flags, align 8, !dbg !4013
  %and = and i32 %20, 1024, !dbg !4014
  %tobool12 = icmp eq i32 %and, 0, !dbg !4014
  call void @llvm.dbg.value(metadata %struct.edge_def* %19, metadata !3979, metadata !DIExpression()), !dbg !3986
  %21 = ptrtoint %struct.edge_def* %19 to i64, !dbg !4015
  br i1 %tobool12, label %if.else, label %if.then, !dbg !4015

if.then:                                          ; preds = %for.body
  store %struct.edge_def* %19, %struct.edge_def** %entry13, align 8, !dbg !4016
  %22 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4017
  call void @llvm.dbg.value(metadata %struct.edge_def* %22, metadata !3979, metadata !DIExpression()), !dbg !3986
  %dest14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %22, i64 0, i32 1, !dbg !4018
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !4018
  %call15 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %23) #7, !dbg !4019
  store %struct.edge_def* %call15, %struct.edge_def** %12, align 8, !dbg !4020
  store i8* %call2, i8** %13, align 8, !dbg !4021
  br label %for.inc, !dbg !4022

if.else:                                          ; preds = %for.body
  %and19 = and i32 %20, 2048, !dbg !4023
  %tobool20 = icmp eq i32 %and19, 0, !dbg !4023
  br i1 %tobool20, label %for.inc, label %if.then21, !dbg !4024

if.then21:                                        ; preds = %if.else
  store i64 %21, i64* %14, align 8, !dbg !4025
  %24 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.edge_def* %24, metadata !3979, metadata !DIExpression()), !dbg !3986
  %dest23 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %24, i64 0, i32 1, !dbg !4027
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %dest23, align 8, !dbg !4027
  %call24 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %25) #7, !dbg !4028
  store %struct.edge_def* %call24, %struct.edge_def** %15, align 8, !dbg !4029
  store i8* %call3, i8** %16, align 8, !dbg !4030
  br label %for.inc, !dbg !4031

for.inc:                                          ; preds = %if.else, %if.then, %if.then21
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !3980, metadata !DIExpression(DW_OP_deref)), !dbg !3986
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4011
  br label %for.cond, !dbg !4011, !llvm.loop !4032

for.end:                                          ; preds = %for.cond
  %26 = bitcast i8* %call4 to %struct.ifsese_s*, !dbg !3992
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4034
  ret %struct.ifsese_s* %26, !dbg !4035
}

declare dso_local %struct.edge_def* @create_empty_if_region_on_edge(%struct.edge_def*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.ifsese_s* @move_sese_in_condition(%struct.sese_s* %region) local_unnamed_addr #5 !dbg !4036 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4040, metadata !DIExpression()), !dbg !4043
  %entry1 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 0, !dbg !4044
  %0 = load %struct.edge_def*, %struct.edge_def** %entry1, align 8, !dbg !4044
  %call = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %0) #6, !dbg !4045
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4041, metadata !DIExpression()), !dbg !4043
  %call2 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call) #7, !dbg !4046
  store %struct.edge_def* %call2, %struct.edge_def** %entry1, align 8, !dbg !4047
  %call4 = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %call) #7, !dbg !4048
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !4049
  %call5 = tail call %struct.ifsese_s* @create_if_region_on_edge(%struct.edge_def* %call4, %union.tree_node* %1) #7, !dbg !4050
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %call5, metadata !4042, metadata !DIExpression()), !dbg !4043
  tail call void @if_region_set_false_region(%struct.ifsese_s* %call5, %struct.sese_s* %region) #7, !dbg !4051
  ret %struct.ifsese_s* %call5, !dbg !4052
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4053 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4055, metadata !DIExpression()), !dbg !4056
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #7, !dbg !4057
  %tobool = icmp eq i8 %call, 0, !dbg !4057
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4057

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4057
  br label %cond.end, !dbg !4057

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !4058
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4058
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4058
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4058

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4058
  br label %cond.end5, !dbg !4058

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !4058
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #7, !dbg !4058
  ret %struct.edge_def* %call7, !dbg !4059
}

; Function Attrs: nounwind uwtable
define dso_local void @set_ifsese_condition(%struct.ifsese_s* %if_region, %union.tree_node* %condition) local_unnamed_addr #5 !dbg !4060 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp7 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %if_region, metadata !4064, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata %union.tree_node* %condition, metadata !4065, metadata !DIExpression()), !dbg !4072
  %region1 = getelementptr inbounds %struct.ifsese_s, %struct.ifsese_s* %if_region, i64 0, i32 0, !dbg !4073
  %0 = load %struct.sese_s*, %struct.sese_s** %region1, align 8, !dbg !4073
  call void @llvm.dbg.value(metadata %struct.sese_s* %0, metadata !4066, metadata !DIExpression()), !dbg !4072
  %entry3 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %0, i64 0, i32 0, !dbg !4074
  %1 = load %struct.edge_def*, %struct.edge_def** %entry3, align 8, !dbg !4074
  call void @llvm.dbg.value(metadata %struct.edge_def* %1, metadata !4067, metadata !DIExpression()), !dbg !4072
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %1, i64 0, i32 1, !dbg !4075
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4075
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !4068, metadata !DIExpression()), !dbg !4072
  %call = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %2) #6, !dbg !4076
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4069, metadata !DIExpression()), !dbg !4072
  %3 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4077
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4077
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4070, metadata !DIExpression(DW_OP_deref)), !dbg !4072
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %gsi, %struct.basic_block_def* %2) #7, !dbg !4078
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call) #7, !dbg !4079
  %cmp = icmp eq i32 %call4, 1, !dbg !4079
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4079

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1582, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4079
  br label %cond.end, !dbg !4079

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4070, metadata !DIExpression(DW_OP_deref)), !dbg !4072
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !4080
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4081
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4081
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #7, !dbg !4081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4081
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !4081
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4070, metadata !DIExpression(DW_OP_deref)), !dbg !4072
  %call5 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %condition, i8 zeroext 1, %union.tree_node* null, i8 zeroext 0, i32 0) #6, !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4065, metadata !DIExpression()), !dbg !4072
  %call6 = call %union.gimple_statement_d* @gimple_build_cond_from_tree(%union.tree_node* %call5, %union.tree_node* null, %union.tree_node* null) #6, !dbg !4083
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !4071, metadata !DIExpression()), !dbg !4072
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp7 to i8*, !dbg !4084
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !4084
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp7, %struct.basic_block_def* %2) #7, !dbg !4084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !4084
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !4084
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4070, metadata !DIExpression(DW_OP_deref)), !dbg !4072
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call6, i32 0) #6, !dbg !4085
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !4086
  ret void, !dbg !4086
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4087 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4091, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4092, metadata !DIExpression()), !dbg !4095
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4096
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4093, metadata !DIExpression()), !dbg !4094
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #7, !dbg !4097
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4098
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4099
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4100
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4101
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4102
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4103
  ret void, !dbg !4104
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4105 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4109, metadata !DIExpression()), !dbg !4110
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !4111
  %bf.load = load i32, i32* %0, align 8, !dbg !4111
  %bf.clear = and i32 %bf.load, 255, !dbg !4111
  ret i32 %bf.clear, !dbg !4112
}

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond_from_tree(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @scalar_evolution_in_region(%struct.sese_s* %region, %struct.loop* %loop, %union.tree_node* %t) local_unnamed_addr #5 !dbg !4113 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4117, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4118, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4119, metadata !DIExpression()), !dbg !4123
  %call = tail call fastcc %struct.basic_block_def* @block_before_sese(%struct.sese_s* %region) #7, !dbg !4124
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4122, metadata !DIExpression()), !dbg !4123
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4125
  %bf.load = load i64, i64* %0, align 8, !dbg !4125
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4127
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4127
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !4128

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @loop_in_sese_p(%struct.loop* %loop, %struct.sese_s* %region) #7, !dbg !4129
  %tobool = icmp eq i8 %call1, 0, !dbg !4129
  br i1 %tobool, label %if.end, label %if.then, !dbg !4130

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %loop, %union.tree_node* %t) #6, !dbg !4131
  %call3 = tail call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %call, %struct.loop* %loop, %union.tree_node* %call2) #6, !dbg !4132
  br label %cleanup, !dbg !4133

if.end:                                           ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @defined_in_sese_p(%union.tree_node* %t, %struct.sese_s* %region) #7, !dbg !4134
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4134
  br i1 %tobool5, label %cleanup, label %if.end7, !dbg !4136

if.end7:                                          ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4137
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4137
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !4137
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !4120, metadata !DIExpression()), !dbg !4123
  %call8 = tail call fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %2) #7, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.loop* %call8, metadata !4121, metadata !DIExpression()), !dbg !4123
  %call9 = tail call fastcc zeroext i8 @loop_in_sese_p(%struct.loop* %call8, %struct.sese_s* %region) #7, !dbg !4139
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4139
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !4141

if.then11:                                        ; preds = %if.end7
  %call12 = tail call %union.tree_node* @analyze_scalar_evolution(%struct.loop* %call8, %union.tree_node* %t) #6, !dbg !4142
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4119, metadata !DIExpression()), !dbg !4123
  %call13 = tail call fastcc i32 @loop_depth(%struct.loop* %loop) #7, !dbg !4144
  %add = add i32 %call13, 1, !dbg !4145
  %call14 = tail call %struct.loop* @superloop_at_depth(%struct.loop* %call8, i32 %add) #6, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.loop* %call14, metadata !4121, metadata !DIExpression()), !dbg !4123
  %call15 = tail call %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop* %call14, %union.tree_node* %call12) #6, !dbg !4147
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !4119, metadata !DIExpression()), !dbg !4123
  br label %cleanup, !dbg !4148

if.else:                                          ; preds = %if.end7
  %call16 = tail call %union.tree_node* @instantiate_scev(%struct.basic_block_def* %call, %struct.loop* %loop, %union.tree_node* %t) #6, !dbg !4149
  br label %cleanup, !dbg !4150

cleanup:                                          ; preds = %if.end, %if.else, %if.then11, %if.then
  %retval.0 = phi %union.tree_node* [ %call3, %if.then ], [ %call15, %if.then11 ], [ %call16, %if.else ], [ %t, %if.end ], !dbg !4123
  ret %union.tree_node* %retval.0, !dbg !4151
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @block_before_sese(%struct.sese_s* %sese) unnamed_addr #0 !dbg !4152 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %sese, metadata !4156, metadata !DIExpression()), !dbg !4157
  %entry1 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %sese, i64 0, i32 0, !dbg !4158
  %0 = load %struct.edge_def*, %struct.edge_def** %entry1, align 8, !dbg !4158
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i64 0, i32 0, !dbg !4159
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4159
  ret %struct.basic_block_def* %1, !dbg !4160
}

declare dso_local %union.tree_node* @instantiate_scev(%struct.basic_block_def*, %struct.loop*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @analyze_scalar_evolution(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @defined_in_sese_p(%union.tree_node* %name, %struct.sese_s* %region) unnamed_addr #0 !dbg !4161 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !4165, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4166, metadata !DIExpression()), !dbg !4169
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4170
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4170
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !4170
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !4167, metadata !DIExpression()), !dbg !4169
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !4171
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4168, metadata !DIExpression()), !dbg !4169
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !4172
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4173

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* nonnull %call, %struct.sese_s* %region) #7, !dbg !4174
  %tobool2 = icmp ne i8 %call1, 0, !dbg !4173
  %phitmp = zext i1 %tobool2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !4175
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_containing_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4176 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4180, metadata !DIExpression()), !dbg !4182
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %stmt) #7, !dbg !4183
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4181, metadata !DIExpression()), !dbg !4182
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !4184
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4186

if.end:                                           ; preds = %entry
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !4187
  %0 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !4187
  br label %cleanup, !dbg !4188

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.loop* [ %0, %if.end ], [ null, %entry ], !dbg !4182
  ret %struct.loop* %retval.0, !dbg !4189
}

declare dso_local %struct.loop* @superloop_at_depth(%struct.loop*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @loop_depth(%struct.loop* %loop) unnamed_addr #0 !dbg !4190 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4194, metadata !DIExpression()), !dbg !4195
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !4196
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !4196
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !4196
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4196

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !4196
  br label %cond.end, !dbg !4196

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4196
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4196
  ret i32 %call, !dbg !4197
}

declare dso_local %union.tree_node* @compute_overall_effect_of_inner_loop(%struct.loop*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @debug_rename_elt(%struct.rename_map_elt_s* %elt) unnamed_addr #5 !dbg !4198 {
entry:
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %elt, metadata !4202, metadata !DIExpression()), !dbg !4203
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4204
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !4205
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4206
  %old_name = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %elt, i64 0, i32 0, !dbg !4207
  %2 = load %union.tree_node*, %union.tree_node** %old_name, align 8, !dbg !4207
  tail call void @print_generic_expr(%struct._IO_FILE* %1, %union.tree_node* %2, i32 0) #6, !dbg !4208
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4209
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4210
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4211
  %expr = getelementptr inbounds %struct.rename_map_elt_s, %struct.rename_map_elt_s* %elt, i64 0, i32 1, !dbg !4212
  %5 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !4212
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %5, i32 0) #6, !dbg !4213
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4214
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4215
  ret void, !dbg !4216
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @debug_ivtype_elt(%struct.ivtype_map_elt_s* %elt) unnamed_addr #5 !dbg !4217 {
entry:
  call void @llvm.dbg.value(metadata %struct.ivtype_map_elt_s* %elt, metadata !4222, metadata !DIExpression()), !dbg !4223
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4224
  %cloog_iv = getelementptr inbounds %struct.ivtype_map_elt_s, %struct.ivtype_map_elt_s* %elt, i64 0, i32 1, !dbg !4225
  %1 = load i8*, i8** %cloog_iv, align 8, !dbg !4225
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* %1) #6, !dbg !4226
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4227
  %type = getelementptr inbounds %struct.ivtype_map_elt_s, %struct.ivtype_map_elt_s* %elt, i64 0, i32 0, !dbg !4228
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !4228
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %3, i32 0) #6, !dbg !4229
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4230
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !4231
  ret void, !dbg !4232
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bb_in_region(%struct.basic_block_def* %bb, %struct.basic_block_def* %entry1, %struct.basic_block_def* %exit) unnamed_addr #0 !dbg !4233 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4237, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %entry1, metadata !4238, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %exit, metadata !4239, metadata !DIExpression()), !dbg !4240
  %call = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %bb, %struct.basic_block_def* %entry1) #6, !dbg !4241
  %tobool = icmp eq i8 %call, 0, !dbg !4241
  br i1 %tobool, label %land.end9, label %land.rhs, !dbg !4242

land.rhs:                                         ; preds = %entry
  %call2 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %bb, %struct.basic_block_def* %exit) #6, !dbg !4243
  %tobool4 = icmp eq i8 %call2, 0, !dbg !4243
  br i1 %tobool4, label %land.end, label %land.rhs5, !dbg !4244

land.rhs5:                                        ; preds = %land.rhs
  %call6 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* %entry1, %struct.basic_block_def* %exit) #6, !dbg !4245
  %tobool7 = icmp ne i8 %call6, 0, !dbg !4246
  %phitmp2 = zext i1 %tobool7 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.rhs5
  %0 = phi i8 [ 1, %land.rhs ], [ %phitmp2, %land.rhs5 ]
  br label %land.end9

land.end9:                                        ; preds = %entry, %land.end
  %1 = phi i8 [ 0, %entry ], [ %0, %land.end ]
  ret i8 %1, !dbg !4247
}

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @sese_contains_loop(%struct.sese_s* %sese, %struct.loop* %loop) unnamed_addr #0 !dbg !4248 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %sese, metadata !4252, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4253, metadata !DIExpression()), !dbg !4254
  %loops = getelementptr inbounds %struct.sese_s, %struct.sese_s* %sese, i64 0, i32 3, !dbg !4255
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %loops, align 8, !dbg !4255
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !4256
  %1 = load i32, i32* %num, align 8, !dbg !4256
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %0, i32 %1) #6, !dbg !4257
  %conv = trunc i32 %call to i8, !dbg !4257
  ret i8 %conv, !dbg !4258
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_heap_safe_push(%struct.VEC_loop_p_heap** %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !4259 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !4263, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !4264, metadata !DIExpression()), !dbg !4265
  %call = tail call fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** %vec_, i32 1) #7, !dbg !4266
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !4266
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !4266
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4266

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !4266
  br label %cond.end, !dbg !4266

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4266
  %call1 = tail call fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %cond, %struct.loop* %obj_) #7, !dbg !4266
  ret %struct.loop** %call1, !dbg !4266
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_heap_reserve(%struct.VEC_loop_p_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4267 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_heap** %vec_, metadata !4271, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 1, metadata !4272, metadata !DIExpression()), !dbg !4274
  %0 = load %struct.VEC_loop_p_heap*, %struct.VEC_loop_p_heap** %vec_, align 8, !dbg !4275
  %tobool = icmp eq %struct.VEC_loop_p_heap* %0, null, !dbg !4275
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4275

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_heap, %struct.VEC_loop_p_heap* %0, i64 0, i32 0, !dbg !4275
  br label %cond.end, !dbg !4275

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4275
  %call = tail call fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %cond, i32 1) #7, !dbg !4275
  %tobool1 = icmp eq i32 %call, 0, !dbg !4275
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4273, metadata !DIExpression()), !dbg !4274
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4275

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_loop_p_heap** %vec_ to i8**, !dbg !4276
  %2 = load i8*, i8** %1, align 8, !dbg !4276
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !4276
  store i8* %call3, i8** %1, align 8, !dbg !4276
  br label %if.end, !dbg !4276

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4275
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop** @VEC_loop_p_base_quick_push(%struct.VEC_loop_p_base* %vec_, %struct.loop* %obj_) unnamed_addr #0 !dbg !4278 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4282, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata %struct.loop* %obj_, metadata !4283, metadata !DIExpression()), !dbg !4285
  %num1 = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !4286
  %0 = load i32, i32* %num1, align 8, !dbg !4286
  %inc = add i32 %0, 1, !dbg !4286
  store i32 %inc, i32* %num1, align 8, !dbg !4286
  %idxprom = zext i32 %0 to i64, !dbg !4286
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4286
  call void @llvm.dbg.value(metadata %struct.loop** %arrayidx, metadata !4284, metadata !DIExpression()), !dbg !4285
  store %struct.loop* %obj_, %struct.loop** %arrayidx, align 8, !dbg !4286
  ret %struct.loop** %arrayidx, !dbg !4286
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_space(%struct.VEC_loop_p_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4287 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !4291, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i32 1, metadata !4292, metadata !DIExpression()), !dbg !4293
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !4294
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4294

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 1, !dbg !4294
  %0 = load i32, i32* %alloc, align 4, !dbg !4294
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !4294
  %1 = load i32, i32* %num, align 8, !dbg !4294
  %cmp1 = icmp ne i32 %0, %1, !dbg !4294
  %phitmp = zext i1 %cmp1 to i32, !dbg !4294
  br label %cond.end, !dbg !4294

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4294

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4294
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_build_liveouts_bb(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4295 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp2 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp12 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4299, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %liveouts, metadata !4300, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4301, metadata !DIExpression()), !dbg !4311
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4312
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4312
  %1 = bitcast %struct.edge_def** %e to i8*, !dbg !4313
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4313
  %2 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4314
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4314
  %3 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4315
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #8, !dbg !4315
  %4 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4316
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4316
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4316
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !4316
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !4316
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4316
  store i32 %6, i32* %5, align 8, !dbg !4316
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !4316
  %8 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4316
  store %struct.VEC_edge_gc** %8, %struct.VEC_edge_gc*** %7, align 8, !dbg !4316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 16, i1 false), !dbg !4316
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8, !dbg !4316
  %9 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !4318
  %10 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !4318
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp2 to i8*, !dbg !4320
  br label %for.cond, !dbg !4316

for.cond:                                         ; preds = %for.inc10, %entry
  %12 = load i32, i32* %9, align 8, !dbg !4322
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %10, align 8, !dbg !4322
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !4303, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %13, %struct.edge_def** nonnull %e) #7, !dbg !4322
  %tobool = icmp eq i8 %call1, 0, !dbg !4316
  br i1 %tobool, label %for.end11, label %for.body, !dbg !4316

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !4323
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.edge_def* %14, metadata !4303, metadata !DIExpression()), !dbg !4311
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i64 0, i32 1, !dbg !4325
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4325
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp2, %struct.basic_block_def* %15) #6, !dbg !4323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !4323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !4323
  br label %for.cond3, !dbg !4326

for.cond3:                                        ; preds = %for.body6, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call4 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4327
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4329
  br i1 %tobool5, label %for.body6, label %for.inc10, !dbg !4330

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call7 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4331
  %16 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.edge_def* %16, metadata !4303, metadata !DIExpression()), !dbg !4311
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %16, i64 0, i32 6, !dbg !4331
  %17 = load i32, i32* %dest_idx, align 4, !dbg !4331
  %call8 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call7, i32 %17) #7, !dbg !4331
  %call9 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call8) #7, !dbg !4331
  call fastcc void @sese_build_liveouts_use(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb, %union.tree_node* %call9) #7, !dbg !4332
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4333
  br label %for.cond3, !dbg !4334, !llvm.loop !4335

for.inc10:                                        ; preds = %for.cond3
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !4304, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !4322
  br label %for.cond, !dbg !4322, !llvm.loop !4337

for.end11:                                        ; preds = %for.cond
  %18 = bitcast %struct.gimple_stmt_iterator* %tmp12 to i8*, !dbg !4339
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8, !dbg !4339
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp12, %struct.basic_block_def* %bb) #7, !dbg !4339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %18, i64 24, i1 false), !dbg !4339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8, !dbg !4339
  br label %for.cond13, !dbg !4340

for.cond13:                                       ; preds = %cleanup, %for.end11
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call14 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4341
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4342
  br i1 %tobool15, label %for.body17, label %for.end32, !dbg !4343

for.body17:                                       ; preds = %for.cond13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call18 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4344
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call18, metadata !4307, metadata !DIExpression()), !dbg !4345
  %call19 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call18) #7, !dbg !4346
  %tobool20 = icmp eq i8 %call19, 0, !dbg !4346
  br i1 %tobool20, label %if.end, label %cleanup, !dbg !4348

if.end:                                           ; preds = %for.body17
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4305, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call21 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call18, i32 5) #7, !dbg !4349
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call21, metadata !4306, metadata !DIExpression()), !dbg !4311
  br label %for.cond22, !dbg !4349

for.cond22:                                       ; preds = %for.body26, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call21, %if.end ], [ %call29, %for.body26 ], !dbg !4351
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4306, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4305, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call23 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4352
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4352
  br i1 %tobool24, label %for.body26, label %cleanup.loopexit, !dbg !4349

for.body26:                                       ; preds = %for.cond22
  %call27 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !4354
  call fastcc void @sese_build_liveouts_use(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb, %union.tree_node* %call27) #7, !dbg !4355
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4305, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  %call29 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4352
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call29, metadata !4306, metadata !DIExpression()), !dbg !4311
  br label %for.cond22, !dbg !4352, !llvm.loop !4356

cleanup.loopexit:                                 ; preds = %for.cond22
  br label %cleanup, !dbg !4358

cleanup:                                          ; preds = %cleanup.loopexit, %for.body17
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4302, metadata !DIExpression(DW_OP_deref)), !dbg !4311
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4358
  br label %for.cond13, !dbg !4359, !llvm.loop !4360

for.end32:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #8, !dbg !4362
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !4362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4362
  ret void, !dbg !4362
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_reset_debug_liveouts_bb(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4363 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4365, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %liveouts, metadata !4366, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4367, metadata !DIExpression()), !dbg !4375
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4376
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4376
  %1 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !4377
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1) #8, !dbg !4377
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4378
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4378
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !4378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4378
  br label %for.cond, !dbg !4379

for.cond:                                         ; preds = %cleanup, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4368, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  %call = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4380
  %tobool = icmp eq i8 %call, 0, !dbg !4381
  br i1 %tobool, label %for.body, label %for.end17, !dbg !4382

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4368, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  %call1 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4383
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !4371, metadata !DIExpression()), !dbg !4384
  %call2 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call1) #7, !dbg !4385
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4385
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !4387

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4369, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  %call4 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %call1, i32 5) #7, !dbg !4388
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call4, metadata !4370, metadata !DIExpression()), !dbg !4375
  br label %for.cond5, !dbg !4388

for.cond5:                                        ; preds = %for.inc, %if.end
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call4, %if.end ], [ %call15, %for.inc ], !dbg !4390
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !4370, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4369, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  %call6 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4391
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4391
  br i1 %tobool7, label %for.body9, label %cleanup.loopexit, !dbg !4388

for.body9:                                        ; preds = %for.cond5
  %call10 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !4393
  %call11 = call fastcc zeroext i8 @sese_bad_liveouts_use(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb, %union.tree_node* %call10) #7, !dbg !4395
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4395
  br i1 %tobool12, label %for.inc, label %if.then13, !dbg !4396

if.then13:                                        ; preds = %for.body9
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %call1) #7, !dbg !4397
  call fastcc void @update_stmt(%union.gimple_statement_d* %call1) #7, !dbg !4399
  br label %cleanup, !dbg !4400

for.inc:                                          ; preds = %for.body9
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !4369, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  %call15 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !4391
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call15, metadata !4370, metadata !DIExpression()), !dbg !4375
  br label %for.cond5, !dbg !4391, !llvm.loop !4401

cleanup.loopexit:                                 ; preds = %for.cond5
  br label %cleanup, !dbg !4403

cleanup:                                          ; preds = %cleanup.loopexit, %for.body, %if.then13
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4368, metadata !DIExpression(DW_OP_deref)), !dbg !4375
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4403
  br label %for.cond, !dbg !4404, !llvm.loop !4405

for.end17:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1) #8, !dbg !4407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4407
  ret void, !dbg !4407
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sese_build_liveouts_use(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb, %union.tree_node* %use) unnamed_addr #5 !dbg !4408 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4412, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %liveouts, metadata !4413, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4414, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !4415, metadata !DIExpression()), !dbg !4418
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4419
  %bf.load = load i64, i64* %0, align 8, !dbg !4419
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4421
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4421
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !4422

if.end:                                           ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4423
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !4423
  %2 = load i32, i32* %1, align 8, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %2, metadata !4416, metadata !DIExpression()), !dbg !4418
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4424
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4424
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !4424
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !4425
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4417, metadata !DIExpression()), !dbg !4418
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !4426
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !4428

lor.lhs.false:                                    ; preds = %if.end
  %call2 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* nonnull %call, %struct.sese_s* %region) #7, !dbg !4429
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4429
  br i1 %tobool3, label %cleanup.cont, label %lor.lhs.false4, !dbg !4430

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call5 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %bb, %struct.sese_s* %region) #7, !dbg !4431
  %tobool6 = icmp eq i8 %call5, 0, !dbg !4431
  br i1 %tobool6, label %if.end8, label %cleanup.cont, !dbg !4432

if.end8:                                          ; preds = %lor.lhs.false4
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %liveouts, i32 %2) #6, !dbg !4433
  br label %cleanup.cont, !dbg !4434

cleanup.cont:                                     ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end, %entry, %if.end8
  ret void, !dbg !4434
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !4435 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4439, metadata !DIExpression()), !dbg !4440
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4441
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4441
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4442
  ret %union.tree_node* %1, !dbg !4443
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4444 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4446, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4447, metadata !DIExpression()), !dbg !4450
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4451
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4448, metadata !DIExpression()), !dbg !4449
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !4452
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4453
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4454
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4455
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4456
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4457
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4458
  ret void, !dbg !4459
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4460 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4464, metadata !DIExpression()), !dbg !4465
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4466
  %cmp = icmp eq i32 %call, 2, !dbg !4467
  %conv1 = zext i1 %cmp to i8, !dbg !4466
  ret i8 %conv1, !dbg !4468
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4469 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4474, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4475, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata i32 5, metadata !4476, metadata !DIExpression()), !dbg !4477
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !4478
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !4479
  store i32 2, i32* %iter_type, align 4, !dbg !4480
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !4481
  ret %struct.ssa_use_operand_d* %call, !dbg !4482
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !4483 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4489, metadata !DIExpression()), !dbg !4490
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4491
  %0 = load i8, i8* %done, align 8, !dbg !4491
  ret i8 %0, !dbg !4492
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !4493 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4497, metadata !DIExpression()), !dbg !4499
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !4500
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !4500
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !4502
  br i1 %tobool, label %if.end, label %if.then, !dbg !4503

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !4504
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !4498, metadata !DIExpression()), !dbg !4499
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !4506
  %2 = load i64, i64* %1, align 8, !dbg !4506
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !4507
  store i64 %2, i64* %3, align 8, !dbg !4507
  br label %cleanup, !dbg !4508

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !4509
  %4 = load i32, i32* %phi_i, align 8, !dbg !4509
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !4511
  %5 = load i32, i32* %num_phi, align 4, !dbg !4511
  %cmp = icmp slt i32 %4, %5, !dbg !4512
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !4513

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !4514
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !4514
  %inc = add nsw i32 %4, 1, !dbg !4514
  store i32 %inc, i32* %phi_i, align 8, !dbg !4514
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #7, !dbg !4514
  br label %cleanup, !dbg !4516

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4517
  store i8 1, i8* %done, align 8, !dbg !4518
  br label %cleanup, !dbg !4519

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !4499
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !4520
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4521 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4525, metadata !DIExpression()), !dbg !4526
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !4527
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4527
  ret %struct.basic_block_def* %0, !dbg !4528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4529 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4533, metadata !DIExpression()), !dbg !4534
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4535
  %0 = load i32, i32* %flags, align 8, !dbg !4535
  %and = and i32 %0, 512, !dbg !4536
  %tobool = icmp eq i32 %and, 0, !dbg !4536
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4537

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4538
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4538
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4539
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4540

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4541
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4541
  br label %cond.end, !dbg !4540

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4540
  ret %struct.gimple_seq_d* %cond, !dbg !4542
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4543 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4550, metadata !DIExpression()), !dbg !4551
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4552
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4552

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4553
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4553
  br label %cond.end, !dbg !4552

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4552
  ret %struct.gimple_seq_node_d* %cond, !dbg !4554
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !4555 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !4559, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4560, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4561, metadata !DIExpression()), !dbg !4562
  %0 = and i32 %flags, 10, !dbg !4563
  %1 = icmp eq i32 %0, 8, !dbg !4563
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !4563

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !4563
  %3 = icmp eq i32 %2, 4, !dbg !4563
  br i1 %3, label %cond.true, label %cond.end, !dbg !4563

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4563
  br label %cond.end, !dbg !4563

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !4564
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !4565

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #7, !dbg !4566
  br label %cond.end12, !dbg !4565

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !4565
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !4567
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !4568
  %and14 = and i32 %flags, 8, !dbg !4569
  %tobool15 = icmp eq i32 %and14, 0, !dbg !4569
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !4571

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !4572
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !4573

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #7, !dbg !4574
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !4575
  br i1 %cmp, label %if.end, label %if.then, !dbg !4576

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !4577
  %6 = load i64*, i64** %5, align 8, !dbg !4577
  %7 = load i64, i64* %6, align 8, !dbg !4578
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !4579
  store i64 %7, i64* %8, align 8, !dbg !4579
  br label %if.end, !dbg !4580

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !4581
  %tobool24 = icmp eq i32 %and23, 0, !dbg !4581
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !4582

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !4583
  br label %cond.end28, !dbg !4582

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !4582
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !4584
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !4585
  %and30 = and i32 %flags, 4, !dbg !4586
  %tobool31 = icmp eq i32 %and30, 0, !dbg !4586
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !4588

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !4589
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !4590

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !4591
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !4592
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !4593

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !4594
  %11 = load i64*, i64** %10, align 8, !dbg !4594
  %12 = load i64, i64* %11, align 8, !dbg !4595
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !4596
  store i64 %12, i64* %13, align 8, !dbg !4596
  br label %if.end42, !dbg !4597

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !4598
  store i8 0, i8* %done, align 8, !dbg !4599
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !4600
  store i32 0, i32* %phi_i, align 8, !dbg !4601
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !4602
  store i32 0, i32* %num_phi, align 4, !dbg !4603
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !4604
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !4605
  ret void, !dbg !4606
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4607 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4611, metadata !DIExpression()), !dbg !4612
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !4613
  %tobool = icmp eq i8 %call, 0, !dbg !4613
  br i1 %tobool, label %return, label %if.end, !dbg !4615

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !4616
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !4616
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !4616
  br label %return, !dbg !4617

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !4612
  ret %struct.def_optype_d* %retval.0, !dbg !4618
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4619 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4621, metadata !DIExpression()), !dbg !4622
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !4623
  %tobool = icmp eq i8 %call, 0, !dbg !4623
  br i1 %tobool, label %return, label %if.end, !dbg !4625

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !4626
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !4626
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4626
  br label %return, !dbg !4627

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4622
  ret %union.tree_node* %retval.0, !dbg !4628
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4629 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4633, metadata !DIExpression()), !dbg !4634
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !4635
  %tobool = icmp eq i8 %call, 0, !dbg !4635
  br i1 %tobool, label %return, label %if.end, !dbg !4637

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !4638
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !4638
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !4638
  br label %return, !dbg !4639

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !4634
  ret %struct.use_optype_d* %retval.0, !dbg !4640
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4641 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4643, metadata !DIExpression()), !dbg !4644
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !4645
  %tobool = icmp eq i8 %call, 0, !dbg !4645
  br i1 %tobool, label %return, label %if.end, !dbg !4647

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4648
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4648
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !4648
  br label %return, !dbg !4649

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !4644
  ret %union.tree_node* %retval.0, !dbg !4650
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4651 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4653, metadata !DIExpression()), !dbg !4654
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4655
  %cmp = icmp eq i32 %call, 0, !dbg !4656
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4657

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4658
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4659
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4660
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4661 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4663, metadata !DIExpression()), !dbg !4664
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4665
  %cmp = icmp ugt i32 %call, 5, !dbg !4666
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4667

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4668
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4669
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4670
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @sese_bad_liveouts_use(%struct.sese_s* %region, %struct.bitmap_head_def* %liveouts, %struct.basic_block_def* %bb, %union.tree_node* %use) unnamed_addr #5 !dbg !4671 {
entry:
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4675, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %liveouts, metadata !4676, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4677, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.value(metadata %union.tree_node* %use, metadata !4678, metadata !DIExpression()), !dbg !4681
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4682
  %bf.load = load i64, i64* %0, align 8, !dbg !4682
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4684
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4684
  br i1 %cmp, label %if.end, label %cleanup, !dbg !4685

if.end:                                           ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4686
  %1 = bitcast %union.tree_node** %version to i32*, !dbg !4686
  %2 = load i32, i32* %1, align 8, !dbg !4686
  call void @llvm.dbg.value(metadata i32 %2, metadata !4679, metadata !DIExpression()), !dbg !4681
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %liveouts, i32 %2) #6, !dbg !4687
  %tobool = icmp eq i32 %call, 0, !dbg !4687
  br i1 %tobool, label %if.end2, label %cleanup, !dbg !4689

if.end2:                                          ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %use, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4690
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4690
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !4690
  %call4 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !4691
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call4, metadata !4680, metadata !DIExpression()), !dbg !4681
  %tobool5 = icmp eq %struct.basic_block_def* %call4, null, !dbg !4692
  br i1 %tobool5, label %cleanup, label %lor.lhs.false, !dbg !4694

lor.lhs.false:                                    ; preds = %if.end2
  %call6 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* nonnull %call4, %struct.sese_s* %region) #7, !dbg !4695
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4695
  br i1 %tobool7, label %cleanup, label %lor.lhs.false8, !dbg !4696

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %call9 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %bb, %struct.sese_s* %region) #7, !dbg !4697
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4697
  %spec.select = zext i1 %tobool10 to i8, !dbg !4698
  ret i8 %spec.select, !dbg !4698

cleanup:                                          ; preds = %lor.lhs.false, %if.end2, %if.end, %entry
  ret i8 0, !dbg !4699
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !4700 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !4704, metadata !DIExpression()), !dbg !4705
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #7, !dbg !4706
  ret void, !dbg !4707
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4708 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4710, metadata !DIExpression()), !dbg !4711
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !4712
  %tobool = icmp eq i8 %call, 0, !dbg !4712
  br i1 %tobool, label %if.end, label %if.then, !dbg !4714

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !4715
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !4717
  br label %if.end, !dbg !4718

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4719
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !4720 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4724, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata i32 %i, metadata !4725, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4726, metadata !DIExpression()), !dbg !4727
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4728
  %tobool = icmp eq i8 %call, 0, !dbg !4728
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4728

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !4728
  %cmp = icmp ugt i32 %call1, %i, !dbg !4728
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4728

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4728
  br label %cond.end, !dbg !4728

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4729
  %idxprom = zext i32 %i to i64, !dbg !4729
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !4729
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !4730
  ret void, !dbg !4731
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4732 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4734, metadata !DIExpression()), !dbg !4735
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4736
  %0 = load i32, i32* %num_ops, align 4, !dbg !4736
  ret i32 %0, !dbg !4737
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4738 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4742, metadata !DIExpression()), !dbg !4744
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4745
  %idxprom = zext i32 %call to i64, !dbg !4746
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4746
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata i64 %0, metadata !4743, metadata !DIExpression()), !dbg !4744
  %cmp = icmp eq i64 %0, 0, !dbg !4747
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4747

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4747
  br label %cond.end, !dbg !4747

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4748
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4749
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4750
  ret %union.tree_node** %2, !dbg !4751
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4752 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4756, metadata !DIExpression()), !dbg !4757
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4758
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4759
  ret i32 %call1, !dbg !4760
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4761 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4765, metadata !DIExpression()), !dbg !4766
  %idxprom = zext i32 %code to i64, !dbg !4767
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4767
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4767
  ret i32 %0, !dbg !4768
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_new_def_for(%union.tree_node*, %union.gimple_statement_d*, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4769 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4771, metadata !DIExpression()), !dbg !4772
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !4773
  ret %union.tree_node** %result, !dbg !4774
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4775 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4779, metadata !DIExpression()), !dbg !4780
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !4781
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !4781
  ret %struct.VEC_int_heap* %0, !dbg !4781
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !4782 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4785
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4785
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4785
  %tobool = icmp eq %struct.loops* %1, null, !dbg !4785
  br i1 %tobool, label %return, label %if.end, !dbg !4787

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !4788
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !4788
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !4788
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !4788

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !4788
  br label %cond.end, !dbg !4788

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !4788
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #7, !dbg !4788
  br label %return, !dbg !4789

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !4790
  ret i32 %retval.0, !dbg !4791
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !4792 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4798, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !4799, metadata !DIExpression()), !dbg !4801
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4802
  %0 = load i32, i32* %num1, align 4, !dbg !4802
  %inc = add i32 %0, 1, !dbg !4802
  store i32 %inc, i32* %num1, align 4, !dbg !4802
  %idxprom = zext i32 %0 to i64, !dbg !4802
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4802
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !4800, metadata !DIExpression()), !dbg !4801
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !4802
  ret i32* %arrayidx, !dbg !4802
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !4803 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !4809, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4810, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !4811, metadata !DIExpression()), !dbg !4812
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !4813
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4813

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !4813
  %0 = load i32, i32* %num, align 4, !dbg !4813
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4813
  br i1 %cmp, label %if.then, label %if.else, !dbg !4815

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4816
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4816
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4816
  br label %return, !dbg !4816

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4818

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !4820
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4820
  store i32 %storemerge, i32* %ptr, align 4, !dbg !4820
  ret i32 %retval.0, !dbg !4815
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !4821 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !4825, metadata !DIExpression()), !dbg !4826
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4827
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !4827
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !4827
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !4827
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !4827
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !4827
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4827

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !4827
  br label %cond.end, !dbg !4827

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4827
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #7, !dbg !4827
  ret %struct.loop* %call, !dbg !4828
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !4829 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !4834, metadata !DIExpression()), !dbg !4835
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !4836
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !4836
  br i1 %tobool, label %if.end, label %if.then, !dbg !4838

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !4838
  tail call void @free(i8* nonnull %1) #6, !dbg !4836
  br label %if.end, !dbg !4836

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !4838
  ret void, !dbg !4838
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @get_vdef_before_sese(%struct.sese_s* %region, %union.tree_node* %name, %struct.simple_bitmap_def* %visited) unnamed_addr #5 !dbg !4839 {
entry:
  br label %tailrecurse, !dbg !4858

tailrecurse:                                      ; preds = %if.end41, %entry
  %name.tr = phi %union.tree_node* [ %name, %entry ], [ %call31, %if.end41 ]
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !4843, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata %union.tree_node* %name.tr, metadata !4844, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %visited, metadata !4845, metadata !DIExpression()), !dbg !4859
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4860
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4860
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !4860
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !4847, metadata !DIExpression()), !dbg !4859
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4848, metadata !DIExpression()), !dbg !4859
  %tobool = icmp eq %struct.basic_block_def* %call, null, !dbg !4862
  br i1 %tobool, label %cleanup45.loopexit1, label %lor.lhs.false, !dbg !4864

lor.lhs.false:                                    ; preds = %tailrecurse
  %call1 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* nonnull %call, %struct.sese_s* %region) #7, !dbg !4865
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4865
  br i1 %tobool2, label %cleanup45.loopexit1, label %if.end, !dbg !4866

if.end:                                           ; preds = %lor.lhs.false
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !4867
  %2 = load i32, i32* %index, align 8, !dbg !4867
  %div = lshr i32 %2, 6, !dbg !4867
  %idxprom = zext i32 %div to i64, !dbg !4867
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %visited, i64 0, i32 3, i64 %idxprom, !dbg !4867
  %3 = load i64, i64* %arrayidx, align 8, !dbg !4867
  %rem = and i32 %2, 63, !dbg !4867
  %sh_prom = zext i32 %rem to i64, !dbg !4867
  %4 = shl i64 1, %sh_prom, !dbg !4867
  %5 = and i64 %3, %4, !dbg !4867
  %tobool4 = icmp eq i64 %5, 0, !dbg !4867
  br i1 %tobool4, label %if.end6, label %cleanup45.loopexit1, !dbg !4869

if.end6:                                          ; preds = %if.end
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %visited, i32 %2) #7, !dbg !4870
  %call8 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !4871
  switch i32 %call8, label %cleanup45.loopexit1 [
    i32 16, label %for.cond.preheader
    i32 6, label %sw.bb29
    i32 8, label %sw.bb29
  ], !dbg !4872

for.cond.preheader:                               ; preds = %if.end6
  %index.lcssa = phi i32* [ %index, %if.end6 ], !dbg !4867
  %.lcssa6 = phi %union.gimple_statement_d* [ %1, %if.end6 ], !dbg !4860
  br label %for.cond, !dbg !4873

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !4874
  %retval.0 = phi %union.tree_node* [ undef, %for.cond.preheader ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4846, metadata !DIExpression()), !dbg !4859
  %call9 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %.lcssa6) #7, !dbg !4875
  %6 = zext i32 %call9 to i64, !dbg !4876
  %cmp = icmp ult i64 %indvars.iv, %6, !dbg !4876
  br i1 %cmp, label %for.body, label %cleanup45.loopexit, !dbg !4873

for.body:                                         ; preds = %for.cond
  %call10 = tail call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %.lcssa6, i64 %indvars.iv) #7, !dbg !4877
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4849, metadata !DIExpression()), !dbg !4878
  %def_stmt12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4879
  %7 = bitcast %union.tree_node** %def_stmt12 to %union.gimple_statement_d**, !dbg !4879
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !4879
  %call13 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %8) #7, !dbg !4881
  %tobool14 = icmp eq %struct.basic_block_def* %call13, null, !dbg !4881
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !4882

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %index.lcssa, align 8, !dbg !4883
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %7, align 8, !dbg !4884
  %call18 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %10) #7, !dbg !4885
  %index19 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call18, i64 0, i32 9, !dbg !4886
  %11 = load i32, i32* %index19, align 8, !dbg !4886
  %cmp20 = icmp eq i32 %9, %11, !dbg !4887
  br i1 %cmp20, label %cleanup, label %if.end23, !dbg !4888

if.end23:                                         ; preds = %for.body, %land.lhs.true
  %call24 = tail call fastcc %union.tree_node* @get_vdef_before_sese(%struct.sese_s* %region, %union.tree_node* %call10, %struct.simple_bitmap_def* %visited) #7, !dbg !4889
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !4854, metadata !DIExpression()), !dbg !4878
  %tobool25 = icmp ne %union.tree_node* %call24, null, !dbg !4890
  %. = zext i1 %tobool25 to i32, !dbg !4892
  %call24.retval.0 = select i1 %tobool25, %union.tree_node* %call24, %union.tree_node* %retval.0, !dbg !4892
  br label %cleanup, !dbg !4892

cleanup:                                          ; preds = %if.end23, %land.lhs.true
  %cleanup.dest.slot.0 = phi i32 [ 5, %land.lhs.true ], [ %., %if.end23 ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %land.lhs.true ], [ %call24.retval.0, %if.end23 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup45.loopexit [
    i32 0, label %for.inc
    i32 5, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4893
  br label %for.cond, !dbg !4894, !llvm.loop !4895

sw.bb29:                                          ; preds = %if.end6, %if.end6
  %call30 = tail call fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %1) #7, !dbg !4897
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call30, metadata !4855, metadata !DIExpression()), !dbg !4898
  %call31 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call30) #7, !dbg !4899
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !4857, metadata !DIExpression()), !dbg !4898
  %12 = load i32, i32* %index, align 8, !dbg !4900
  %def_stmt34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4902
  %13 = bitcast %union.tree_node** %def_stmt34 to %union.gimple_statement_d**, !dbg !4902
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %13, align 8, !dbg !4902
  %call35 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %14) #7, !dbg !4903
  %index36 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call35, i64 0, i32 9, !dbg !4904
  %15 = load i32, i32* %index36, align 8, !dbg !4904
  %cmp37 = icmp eq i32 %12, %15, !dbg !4905
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !4906

if.then39:                                        ; preds = %sw.bb29
  %16 = load i32, i32* %index, align 8, !dbg !4907
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %visited, i32 %16) #7, !dbg !4908
  br label %if.end41, !dbg !4908

if.end41:                                         ; preds = %if.then39, %sw.bb29
  br label %tailrecurse, !dbg !4858

cleanup45.loopexit:                               ; preds = %cleanup, %for.cond
  %retval.2.ph = phi %union.tree_node* [ null, %for.cond ], [ %retval.1, %cleanup ]
  br label %cleanup45, !dbg !4909

cleanup45.loopexit1:                              ; preds = %if.end6, %tailrecurse, %lor.lhs.false, %if.end
  %retval.2.ph2 = phi %union.tree_node* [ null, %if.end6 ], [ null, %if.end ], [ %name.tr, %tailrecurse ], [ %name.tr, %lor.lhs.false ]
  br label %cleanup45, !dbg !4909

cleanup45:                                        ; preds = %cleanup45.loopexit1, %cleanup45.loopexit
  %retval.2 = phi %union.tree_node* [ %retval.2.ph, %cleanup45.loopexit ], [ %retval.2.ph2, %cleanup45.loopexit1 ]
  ret %union.tree_node* %retval.2, !dbg !4909
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4910 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4914, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4915, metadata !DIExpression()), !dbg !4919
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4920
  %0 = load i8*, i8** %popcount, align 8, !dbg !4920
  %tobool = icmp eq i8* %0, null, !dbg !4921
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4922

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4923
  %.pre2 = zext i32 %.pre to i64, !dbg !4924
  %.pre3 = shl i64 1, %.pre2, !dbg !4924
  %.pre4 = lshr i32 %bitno, 6, !dbg !4925
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4926
  br label %if.end7, !dbg !4922

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4927
  %idxprom = zext i32 %div to i64, !dbg !4927
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4927
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4927
  %rem = and i32 %bitno, 63, !dbg !4927
  %sh_prom = zext i32 %rem to i64, !dbg !4927
  %2 = shl i64 1, %sh_prom, !dbg !4928
  %3 = and i64 %1, %2, !dbg !4928
  %tobool1 = icmp eq i64 %3, 0, !dbg !4928
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !4930

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4931
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4932
  %inc = add i8 %4, 1, !dbg !4932
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !4932
  br label %if.end7, !dbg !4931

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4926
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4924
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4926
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4933
  %or = or i64 %5, %shl.pre-phi, !dbg !4933
  store i64 %or, i64* %arrayidx13, align 8, !dbg !4933
  ret void, !dbg !4934
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_vuse_op(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4935 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4939, metadata !DIExpression()), !dbg !4941
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !4942
  %tobool = icmp eq i8 %call, 0, !dbg !4942
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4944

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !4945
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !4945
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !4945
  call void @llvm.dbg.value(metadata %struct.use_optype_d* %1, metadata !4940, metadata !DIExpression()), !dbg !4941
  %tobool1 = icmp eq %struct.use_optype_d* %1, null, !dbg !4946
  br i1 %tobool1, label %cleanup, label %land.lhs.true, !dbg !4948

land.lhs.true:                                    ; preds = %if.end
  %use = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, i32 3, !dbg !4949
  %2 = load %union.tree_node**, %union.tree_node*** %use, align 8, !dbg !4949
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !4950
  %3 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !4950
  %cmp = icmp eq %union.tree_node** %2, %3, !dbg !4951
  %use_ptr3 = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %1, i64 0, i32 1, !dbg !4952
  %spec.select = select i1 %cmp, %struct.ssa_use_operand_d* %use_ptr3, %struct.ssa_use_operand_d* null, !dbg !4953
  ret %struct.ssa_use_operand_d* %spec.select, !dbg !4953

cleanup:                                          ; preds = %if.end, %entry
  ret %struct.ssa_use_operand_d* null, !dbg !4954
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !4955 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !4957, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !4958, metadata !DIExpression()), !dbg !4962
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !4963
  %0 = load i8*, i8** %popcount, align 8, !dbg !4963
  %tobool = icmp eq i8* %0, null, !dbg !4964
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !4965

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !4966
  %.pre2 = zext i32 %.pre to i64, !dbg !4967
  %.pre3 = shl i64 1, %.pre2, !dbg !4967
  %.pre4 = lshr i32 %bitno, 6, !dbg !4968
  %.pre5 = zext i32 %.pre4 to i64, !dbg !4969
  br label %if.end7, !dbg !4965

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !4970
  %idxprom = zext i32 %div to i64, !dbg !4970
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !4970
  %1 = load i64, i64* %arrayidx, align 8, !dbg !4970
  %rem = and i32 %bitno, 63, !dbg !4970
  %sh_prom = zext i32 %rem to i64, !dbg !4970
  %2 = shl i64 1, %sh_prom, !dbg !4971
  %3 = and i64 %1, %2, !dbg !4971
  %tobool1 = icmp eq i64 %3, 0, !dbg !4971
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !4973

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !4974
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4975
  %dec = add i8 %4, -1, !dbg !4975
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !4975
  br label %if.end7, !dbg !4974

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !4969
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !4967
  %neg = xor i64 %shl.pre-phi, -1, !dbg !4976
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !4969
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !4977
  %and14 = and i64 %5, %neg, !dbg !4977
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !4977
  ret void, !dbg !4978
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4979 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4985, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4986, metadata !DIExpression()), !dbg !4987
  br label %land.end, !dbg !4988

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4988
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4988
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4988
  ret %struct.edge_def* %0, !dbg !4988
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !4989 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4993, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i32 %index, metadata !4994, metadata !DIExpression()), !dbg !4995
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !4996
  %0 = load i32, i32* %capacity, align 8, !dbg !4996
  %cmp = icmp ult i32 %0, %index, !dbg !4996
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4996

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4996
  br label %cond.end, !dbg !4996

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !4997
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !4997
  ret %struct.phi_arg_d* %arrayidx, !dbg !4998
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !4999 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5003, metadata !DIExpression()), !dbg !5004
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5005
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5005
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !5007
  br i1 %cmp, label %return, label %if.end, !dbg !5008

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5009
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5009
  %2 = load i64, i64* %1, align 8, !dbg !5009
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5010
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !5011
  store i64 %2, i64* %3, align 8, !dbg !5011
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !5012
  %5 = load i64, i64* %4, align 8, !dbg !5012
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !5013
  %7 = load i64*, i64** %6, align 8, !dbg !5013
  store i64 %5, i64* %7, align 8, !dbg !5014
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5015
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !5016
  br label %return, !dbg !5017

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !5017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !5018 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5022, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !5023, metadata !DIExpression()), !dbg !5025
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !5026
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5028

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5029
  %bf.load = load i64, i64* %0, align 8, !dbg !5029
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5030
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5030
  br i1 %cmp, label %if.else, label %if.then, !dbg !5031

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5032
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5033
  br label %if.end, !dbg !5034

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5035
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !5035
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !5024, metadata !DIExpression()), !dbg !5025
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #7, !dbg !5037
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5038
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !5039 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !5043, metadata !DIExpression()), !dbg !5045
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !5044, metadata !DIExpression()), !dbg !5045
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !5046
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !5047
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !5048
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5048
  %1 = load i64, i64* %0, align 8, !dbg !5048
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !5049
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !5050
  store i64 %1, i64* %2, align 8, !dbg !5050
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !5051
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !5052
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !5053
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !5054
  ret void, !dbg !5055
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5056 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5061
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5061
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5061

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5061
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5061
  br label %cond.end, !dbg !5061

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5061
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5061
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !5062
  %conv3 = zext i1 %cmp to i8, !dbg !5063
  ret i8 %conv3, !dbg !5064
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5065 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5070
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !5070
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5070

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !5070
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !5070
  br label %cond.end, !dbg !5070

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5070
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !5070
  ret %struct.edge_def* %call2, !dbg !5071
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !5072 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !5076, metadata !DIExpression()), !dbg !5077
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !5078
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5078

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !5078
  %0 = load i32, i32* %num, align 8, !dbg !5078
  br label %cond.end, !dbg !5078

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5078
  ret i32 %cond, !dbg !5078
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !5079 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !5084
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5084

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5084
  br label %cond.end, !dbg !5084

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !5085
  ret %struct.VEC_edge_gc* %0, !dbg !5086
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %expr, %struct.loop* %loop) unnamed_addr #5 !dbg !5087 {
entry:
  br label %tailrecurse, !dbg !5093

tailrecurse:                                      ; preds = %sw.bb33, %entry
  %expr.tr = phi %union.tree_node* [ %expr, %entry ], [ %9, %sw.bb33 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5092, metadata !DIExpression()), !dbg !5095
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5096
  %bf.load = load i64, i64* %0, align 8, !dbg !5096
  %bf.cast = and i64 %bf.load, 65535, !dbg !5096
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !5096
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5096
  switch i8 %1, label %return.loopexit [
    i8 3, label %sw.bb
    i8 2, label %sw.bb16
    i8 1, label %sw.bb33
    i8 0, label %sw.bb38
  ], !dbg !5097

sw.bb:                                            ; preds = %tailrecurse
  %expr.tr.lcssa16 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa16, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa16, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa16, metadata !5091, metadata !DIExpression()), !dbg !5095
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5098
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5098
  %call = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %2, %struct.loop* %loop) #7, !dbg !5099
  %tobool = icmp eq i8 %call, 0, !dbg !5099
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !5100

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5101
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !5101
  %call6 = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %3, %struct.loop* %loop) #7, !dbg !5102
  %tobool8 = icmp eq i8 %call6, 0, !dbg !5102
  br i1 %tobool8, label %lor.rhs, label %lor.end, !dbg !5103

lor.rhs:                                          ; preds = %lor.lhs.false
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 2, !dbg !5104
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !5104
  %call12 = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %4, %struct.loop* %loop) #7, !dbg !5105
  %tobool14 = icmp ne i8 %call12, 0, !dbg !5103
  %phitmp3 = zext i1 %tobool14 to i8, !dbg !5103
  br label %lor.end, !dbg !5103

lor.end:                                          ; preds = %lor.lhs.false, %sw.bb, %lor.rhs
  %5 = phi i8 [ 1, %lor.lhs.false ], [ 1, %sw.bb ], [ %phitmp3, %lor.rhs ]
  br label %return, !dbg !5106

sw.bb16:                                          ; preds = %tailrecurse
  %expr.tr.lcssa17 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa17, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa17, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa17, metadata !5091, metadata !DIExpression()), !dbg !5095
  %operands18 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr.lcssa17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5107
  %6 = load %union.tree_node*, %union.tree_node** %operands18, align 8, !dbg !5107
  %call20 = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %6, %struct.loop* %loop) #7, !dbg !5108
  %tobool22 = icmp eq i8 %call20, 0, !dbg !5108
  br i1 %tobool22, label %lor.rhs23, label %lor.end30, !dbg !5109

lor.rhs23:                                        ; preds = %sw.bb16
  %arrayidx26 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands18, i64 1, !dbg !5110
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx26, align 8, !dbg !5110
  %call27 = tail call fastcc zeroext i8 @expr_defined_in_loop_p(%union.tree_node* %7, %struct.loop* %loop) #7, !dbg !5111
  %tobool29 = icmp ne i8 %call27, 0, !dbg !5109
  %phitmp2 = zext i1 %tobool29 to i8, !dbg !5109
  br label %lor.end30, !dbg !5109

lor.end30:                                        ; preds = %sw.bb16, %lor.rhs23
  %8 = phi i8 [ 1, %sw.bb16 ], [ %phitmp2, %lor.rhs23 ]
  br label %return, !dbg !5112

sw.bb33:                                          ; preds = %tailrecurse
  %operands35 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5113
  %9 = load %union.tree_node*, %union.tree_node** %operands35, align 8, !dbg !5113
  br label %tailrecurse, !dbg !5093

sw.bb38:                                          ; preds = %tailrecurse
  %expr.tr.lcssa18 = phi %union.tree_node* [ %expr.tr, %tailrecurse ]
  %bf.cast.lcssa15 = phi i64 [ %bf.cast, %tailrecurse ], !dbg !5096
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa18, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa18, metadata !5091, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.tr.lcssa18, metadata !5091, metadata !DIExpression()), !dbg !5095
  %cmp = icmp eq i64 %bf.cast.lcssa15, 141, !dbg !5114
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5115

land.rhs:                                         ; preds = %sw.bb38
  %call44 = tail call fastcc zeroext i8 @name_defined_in_loop_p(%union.tree_node* %expr.tr.lcssa18, %struct.loop* %loop) #7, !dbg !5116
  %tobool46 = icmp ne i8 %call44, 0, !dbg !5115
  %phitmp = zext i1 %tobool46 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb38
  %10 = phi i8 [ 0, %sw.bb38 ], [ %phitmp, %land.rhs ]
  br label %return, !dbg !5117

return.loopexit:                                  ; preds = %tailrecurse
  br label %return, !dbg !5118

return:                                           ; preds = %return.loopexit, %land.end, %lor.end30, %lor.end
  %retval.0 = phi i8 [ %10, %land.end ], [ %8, %lor.end30 ], [ %5, %lor.end ], [ 0, %return.loopexit ], !dbg !5119
  ret i8 %retval.0, !dbg !5118
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @alive_after_loop(%union.tree_node* %name) unnamed_addr #5 !dbg !5120 {
entry:
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5124, metadata !DIExpression()), !dbg !5139
  %0 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !5140
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5140
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5141
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5141
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5141
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !5142
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5143
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.loop* %3, metadata !5134, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5126, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  %call1 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %name) #7, !dbg !5144
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call1, metadata !5125, metadata !DIExpression()), !dbg !5139
  br label %for.cond, !dbg !5144

for.cond:                                         ; preds = %for.inc, %entry
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call1, %entry ], [ %call8, %for.inc ], !dbg !5145
  %retval.0 = phi %union.gimple_statement_d* [ undef, %entry ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5125, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5126, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  %call2 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !5146
  %tobool = icmp eq i8 %call2, 0, !dbg !5146
  br i1 %tobool, label %for.body, label %cleanup9, !dbg !5144

for.body:                                         ; preds = %for.cond
  %stmt3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !5147
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt3, align 8, !dbg !5147
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %4, metadata !5135, metadata !DIExpression()), !dbg !5148
  %call4 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %4) #7, !dbg !5149
  %cmp = icmp eq i32 %call4, 16, !dbg !5151
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5152

land.lhs.true:                                    ; preds = %for.body
  %call5 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #7, !dbg !5153
  %loop_father6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call5, i64 0, i32 3, !dbg !5154
  %5 = load %struct.loop*, %struct.loop** %loop_father6, align 8, !dbg !5154
  %cmp7 = icmp eq %struct.loop* %5, %3, !dbg !5155
  br i1 %cmp7, label %if.end, label %cleanup, !dbg !5156

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %cleanup, !dbg !5157

cleanup:                                          ; preds = %land.lhs.true, %if.end
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end ], [ false, %land.lhs.true ]
  %retval.1 = phi %union.gimple_statement_d* [ %retval.0, %if.end ], [ %4, %land.lhs.true ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %cleanup9

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !5126, metadata !DIExpression(DW_OP_deref)), !dbg !5139
  %call8 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #7, !dbg !5146
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call8, metadata !5125, metadata !DIExpression()), !dbg !5139
  br label %for.cond, !dbg !5146, !llvm.loop !5158

cleanup9:                                         ; preds = %for.cond, %cleanup
  %retval.2 = phi %union.gimple_statement_d* [ %retval.1, %cleanup ], [ null, %for.cond ], !dbg !5139
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !5160
  ret %union.gimple_statement_d* %retval.2, !dbg !5160
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @close_phi_not_yet_inserted_p(%struct.loop* %loop, %union.tree_node* %name) unnamed_addr #5 !dbg !5161 {
entry:
  %psi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5165, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5166, metadata !DIExpression()), !dbg !5169
  %0 = bitcast %struct.gimple_stmt_iterator* %psi to i8*, !dbg !5170
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5170
  %call = tail call %struct.edge_def* @single_exit(%struct.loop* %loop) #6, !dbg !5171
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !5172
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5172
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5168, metadata !DIExpression()), !dbg !5169
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5173
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %1) #6, !dbg !5173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5173
  br label %for.cond, !dbg !5175

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5167, metadata !DIExpression(DW_OP_deref)), !dbg !5169
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5176
  %tobool = icmp eq i8 %call1, 0, !dbg !5178
  br i1 %tobool, label %for.body, label %cleanup, !dbg !5179

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5167, metadata !DIExpression(DW_OP_deref)), !dbg !5169
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %psi) #7, !dbg !5180
  %call3 = call fastcc %union.tree_node* @gimple_phi_arg_def(%union.gimple_statement_d* %call2, i64 0) #7, !dbg !5182
  %cmp = icmp eq %union.tree_node* %call3, %name, !dbg !5183
  br i1 %cmp, label %cleanup, label %for.inc, !dbg !5184

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %psi, metadata !5167, metadata !DIExpression(DW_OP_deref)), !dbg !5169
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %psi) #7, !dbg !5185
  br label %for.cond, !dbg !5186, !llvm.loop !5187

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !5169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5189
  ret i8 %retval.0, !dbg !5189
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rename_map_elt_s** @VEC_rename_map_elt_heap_safe_push(%struct.VEC_rename_map_elt_heap** %vec_, %struct.rename_map_elt_s* %obj_) unnamed_addr #0 !dbg !5190 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_heap** %vec_, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %obj_, metadata !5195, metadata !DIExpression()), !dbg !5196
  %call = tail call fastcc i32 @VEC_rename_map_elt_heap_reserve(%struct.VEC_rename_map_elt_heap** %vec_, i32 1) #7, !dbg !5197
  %0 = load %struct.VEC_rename_map_elt_heap*, %struct.VEC_rename_map_elt_heap** %vec_, align 8, !dbg !5197
  %tobool = icmp eq %struct.VEC_rename_map_elt_heap* %0, null, !dbg !5197
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5197

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rename_map_elt_heap, %struct.VEC_rename_map_elt_heap* %0, i64 0, i32 0, !dbg !5197
  br label %cond.end, !dbg !5197

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rename_map_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5197
  %call1 = tail call fastcc %struct.rename_map_elt_s** @VEC_rename_map_elt_base_quick_push(%struct.VEC_rename_map_elt_base* %cond, %struct.rename_map_elt_s* %obj_) #7, !dbg !5197
  ret %struct.rename_map_elt_s** %call1, !dbg !5197
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @name_defined_in_loop_p(%union.tree_node* %name, %struct.loop* %loop) unnamed_addr #5 !dbg !5198 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5200, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !5201, metadata !DIExpression()), !dbg !5202
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5203
  %bf.load = load i64, i64* %0, align 8, !dbg !5203
  %bf.cast1 = and i64 %bf.load, 4294967296, !dbg !5203
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !5203
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5204

land.rhs:                                         ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5205
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5205
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %1, align 8, !dbg !5205
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %2) #7, !dbg !5206
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 3, !dbg !5207
  %3 = load %struct.loop*, %struct.loop** %loop_father, align 8, !dbg !5207
  %cmp = icmp eq %struct.loop* %3, %loop, !dbg !5208
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %4 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %4, !dbg !5209
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !5210 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5215, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5216, metadata !DIExpression()), !dbg !5217
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5218
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5219
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !5220
  store i40* %imm_uses, i40** %0, align 8, !dbg !5220
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !5221
  %1 = bitcast i40* %next to i64*, !dbg !5221
  %2 = load i64, i64* %1, align 8, !dbg !5221
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5222
  store i64 %2, i64* %3, align 8, !dbg !5222
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5223
  %tobool = icmp eq i8 %call, 0, !dbg !5223
  br i1 %tobool, label %if.end, label %return, !dbg !5225

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5226
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !5226
  br label %return, !dbg !5227

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !5217
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5228
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5229 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5235, metadata !DIExpression()), !dbg !5236
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5237
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5237
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !5238
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !5238
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !5239
  %conv1 = zext i1 %cmp to i8, !dbg !5240
  ret i8 %conv1, !dbg !5241
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !5242 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !5246, metadata !DIExpression()), !dbg !5248
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !5249
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5249
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !5247, metadata !DIExpression()), !dbg !5248
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !5250
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !5250
  %2 = load i64, i64* %1, align 8, !dbg !5250
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !5251
  store i64 %2, i64* %3, align 8, !dbg !5251
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #7, !dbg !5252
  %tobool = icmp eq i8 %call, 0, !dbg !5252
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5254

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !5255
  br label %cleanup, !dbg !5256

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !5248
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5257
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rename_map_elt_heap_reserve(%struct.VEC_rename_map_elt_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5258 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_heap** %vec_, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 1, metadata !5263, metadata !DIExpression()), !dbg !5265
  %0 = load %struct.VEC_rename_map_elt_heap*, %struct.VEC_rename_map_elt_heap** %vec_, align 8, !dbg !5266
  %tobool = icmp eq %struct.VEC_rename_map_elt_heap* %0, null, !dbg !5266
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5266

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rename_map_elt_heap, %struct.VEC_rename_map_elt_heap* %0, i64 0, i32 0, !dbg !5266
  br label %cond.end, !dbg !5266

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rename_map_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5266
  %call = tail call fastcc i32 @VEC_rename_map_elt_base_space(%struct.VEC_rename_map_elt_base* %cond, i32 1) #7, !dbg !5266
  %tobool1 = icmp eq i32 %call, 0, !dbg !5266
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5264, metadata !DIExpression()), !dbg !5265
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5266

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_rename_map_elt_heap** %vec_ to i8**, !dbg !5267
  %2 = load i8*, i8** %1, align 8, !dbg !5267
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !5267
  store i8* %call3, i8** %1, align 8, !dbg !5267
  br label %if.end, !dbg !5267

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5266
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rename_map_elt_s** @VEC_rename_map_elt_base_quick_push(%struct.VEC_rename_map_elt_base* %vec_, %struct.rename_map_elt_s* %obj_) unnamed_addr #0 !dbg !5269 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_base* %vec_, metadata !5274, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s* %obj_, metadata !5275, metadata !DIExpression()), !dbg !5277
  %num1 = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 0, !dbg !5278
  %0 = load i32, i32* %num1, align 8, !dbg !5278
  %inc = add i32 %0, 1, !dbg !5278
  store i32 %inc, i32* %num1, align 8, !dbg !5278
  %idxprom = zext i32 %0 to i64, !dbg !5278
  %arrayidx = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5278
  call void @llvm.dbg.value(metadata %struct.rename_map_elt_s** %arrayidx, metadata !5276, metadata !DIExpression()), !dbg !5277
  store %struct.rename_map_elt_s* %obj_, %struct.rename_map_elt_s** %arrayidx, align 8, !dbg !5278
  ret %struct.rename_map_elt_s** %arrayidx, !dbg !5278
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rename_map_elt_base_space(%struct.VEC_rename_map_elt_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5279 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rename_map_elt_base* %vec_, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 1, metadata !5284, metadata !DIExpression()), !dbg !5285
  %tobool = icmp eq %struct.VEC_rename_map_elt_base* %vec_, null, !dbg !5286
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5286

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 1, !dbg !5286
  %0 = load i32, i32* %alloc, align 4, !dbg !5286
  %num = getelementptr inbounds %struct.VEC_rename_map_elt_base, %struct.VEC_rename_map_elt_base* %vec_, i64 0, i32 0, !dbg !5286
  %1 = load i32, i32* %num, align 8, !dbg !5286
  %cmp1 = icmp ne i32 %0, %1, !dbg !5286
  %phitmp = zext i1 %cmp1 to i32, !dbg !5286
  br label %cond.end, !dbg !5286

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5286

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !5286
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @default_before_guard(%struct.htab* %before_guard, %union.tree_node* %old_name) unnamed_addr #5 !dbg !5287 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %before_guard, metadata !5289, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata %union.tree_node* %old_name, metadata !5290, metadata !DIExpression()), !dbg !5292
  %call = tail call fastcc %union.tree_node* @get_rename(%struct.htab* %before_guard, %union.tree_node* %old_name) #7, !dbg !5293
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5291, metadata !DIExpression()), !dbg !5292
  %cmp = icmp eq %union.tree_node* %call, %old_name, !dbg !5294
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5296

if.then:                                          ; preds = %entry
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %old_name) #6, !dbg !5297
  %tobool = icmp eq i8 %call1, 0, !dbg !5297
  br i1 %tobool, label %if.end, label %if.then2, !dbg !5300

if.then2:                                         ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %old_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5301
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5301
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5301
  %call3 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %1) #6, !dbg !5301
  br label %cleanup, !dbg !5302

if.end:                                           ; preds = %if.then
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5303
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %old_name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5304
  %3 = bitcast i32* %var to %union.tree_node**, !dbg !5304
  %4 = load %union.tree_node*, %union.tree_node** %3, align 8, !dbg !5304
  %call4 = tail call %union.tree_node* @gimple_default_def(%struct.function* %2, %union.tree_node* %4) #6, !dbg !5305
  br label %cleanup, !dbg !5306

cleanup:                                          ; preds = %entry, %if.end, %if.then2
  %retval.0 = phi %union.tree_node* [ %call3, %if.then2 ], [ %call4, %if.end ], [ %call, %entry ], !dbg !5292
  ret %union.tree_node* %retval.0, !dbg !5307
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @convert_for_phi_arg(%union.tree_node* %expr, %union.tree_node* %res, %struct.edge_def* %e) unnamed_addr #5 !dbg !5308 {
entry:
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5312, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata %union.tree_node* %res, metadata !5313, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5314, metadata !DIExpression()), !dbg !5320
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %res, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5321
  %0 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5321
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5315, metadata !DIExpression()), !dbg !5320
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5322
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !5322
  %cmp = icmp eq %union.tree_node* %1, %0, !dbg !5324
  br i1 %cmp, label %if.end, label %if.then, !dbg !5325

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %0, %union.tree_node* %expr) #6, !dbg !5326
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5312, metadata !DIExpression()), !dbg !5320
  br label %if.end, !dbg !5327

if.end:                                           ; preds = %entry, %if.then
  %expr.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %expr, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.0, metadata !5312, metadata !DIExpression()), !dbg !5320
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5328
  %bf.load = load i64, i64* %2, align 8, !dbg !5328
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5329
  %cmp4 = icmp eq i64 %bf.cast1, 141, !dbg !5329
  br i1 %cmp4, label %if.end11, label %land.lhs.true, !dbg !5330

land.lhs.true:                                    ; preds = %if.end
  %call5 = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %expr.addr.0) #6, !dbg !5331
  %tobool = icmp eq i8 %call5, 0, !dbg !5331
  br i1 %tobool, label %if.then6, label %if.end11, !dbg !5332

if.then6:                                         ; preds = %land.lhs.true
  %call7 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5333
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5316, metadata !DIExpression()), !dbg !5334
  %3 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !5335
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5335
  %call8 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %0, %union.tree_node* %call7, %union.tree_node* %expr.addr.0) #6, !dbg !5336
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5312, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !5319, metadata !DIExpression(DW_OP_deref)), !dbg !5334
  %call9 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call8, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !5337
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5312, metadata !DIExpression()), !dbg !5320
  %4 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !5338
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %4, metadata !5319, metadata !DIExpression()), !dbg !5334
  %call10 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %e, %struct.gimple_seq_d* %4) #6, !dbg !5339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8, !dbg !5340
  br label %if.end11, !dbg !5341

if.end11:                                         ; preds = %land.lhs.true, %if.end, %if.then6
  %expr.addr.1 = phi %union.tree_node* [ %expr.addr.0, %land.lhs.true ], [ %call9, %if.then6 ], [ %expr.addr.0, %if.end ], !dbg !5320
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.addr.1, metadata !5312, metadata !DIExpression()), !dbg !5320
  ret %union.tree_node* %expr.addr.1, !dbg !5342
}

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @gimple_default_def(%struct.function*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5343 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5347, metadata !DIExpression()), !dbg !5348
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !5349
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5349
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5349
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5349

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5349
  br label %cond.end, !dbg !5349

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5349
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !5349
  %cmp = icmp eq i32 %call, 1, !dbg !5350
  %conv2 = zext i1 %cmp to i8, !dbg !5349
  ret i8 %conv2, !dbg !5351
}

declare dso_local %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vop(%struct.function* %fun) unnamed_addr #0 !dbg !5352 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !5358, metadata !DIExpression()), !dbg !5359
  %tobool = icmp eq %struct.function* %fun, null, !dbg !5360
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !5360

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !5360
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5360
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !5360
  br i1 %tobool1, label %cond.true, label %cond.end, !dbg !5360

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5360
  %gimple_df2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !5359
  %.pre = load %struct.gimple_df*, %struct.gimple_df** %gimple_df2.phi.trans.insert, align 8, !dbg !5361
  br label %cond.end, !dbg !5360

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %1 = phi %struct.gimple_df* [ %0, %land.lhs.true ], [ %.pre, %cond.true ], !dbg !5361
  %vop = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 3, !dbg !5362
  %2 = load %union.tree_node*, %union.tree_node** %vop, align 8, !dbg !5362
  ret %union.tree_node* %2, !dbg !5363
}

declare dso_local zeroext i8 @maybe_duplicate_eh_stmt(%union.gimple_statement_d*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_duplicate_stmt_histograms(%struct.function*, %union.gimple_statement_d*, %struct.function*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5364 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5369, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 10, metadata !5370, metadata !DIExpression()), !dbg !5371
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 10) #7, !dbg !5372
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5373
  store i32 3, i32* %iter_type, align 4, !dbg !5374
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5375
  ret %union.tree_node** %call, !dbg !5376
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5377 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5381, metadata !DIExpression()), !dbg !5382
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5383
  ret %union.tree_node* %0, !dbg !5384
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5385 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5389, metadata !DIExpression()), !dbg !5391
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5392
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5392
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !5394
  br i1 %tobool, label %if.end, label %if.then, !dbg !5395

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !5396
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5396
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !5390, metadata !DIExpression()), !dbg !5391
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !5398
  %3 = load i64, i64* %2, align 8, !dbg !5398
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5399
  store i64 %3, i64* %4, align 8, !dbg !5399
  br label %cleanup, !dbg !5400

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5401
  store i8 1, i8* %done, align 8, !dbg !5402
  br label %cleanup, !dbg !5403

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !5391
  ret %union.tree_node** %retval.0, !dbg !5404
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5405 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5407, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5408, metadata !DIExpression()), !dbg !5410
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #7, !dbg !5411
  br label %while.cond, !dbg !5412

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !5413
  %tobool = icmp eq i8 %call, 0, !dbg !5413
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !5414

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #7, !dbg !5415
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #7, !dbg !5416
  %cmp = icmp eq i32 %call2, 4, !dbg !5417
  br i1 %cmp, label %while.body, label %while.end, !dbg !5412

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #7, !dbg !5418
  br label %while.cond, !dbg !5412, !llvm.loop !5419

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !5421
}

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_scalar_variables_stmt(%union.gimple_statement_d* %stmt, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5422 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5426, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5427, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !5428, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !5429, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5430, metadata !DIExpression()), !dbg !5443
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5444
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5444
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5431, metadata !DIExpression(DW_OP_deref)), !dbg !5443
  %call = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !5445
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !5432, metadata !DIExpression()), !dbg !5443
  br label %for.cond, !dbg !5445

for.cond:                                         ; preds = %for.inc, %entry
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call35, %for.inc ], !dbg !5446
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !5432, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5431, metadata !DIExpression(DW_OP_deref)), !dbg !5443
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5447
  %tobool = icmp eq i8 %call1, 0, !dbg !5447
  br i1 %tobool, label %for.body, label %for.end, !dbg !5445

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !5448
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5433, metadata !DIExpression()), !dbg !5449
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5450
  %1 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !5450
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5437, metadata !DIExpression()), !dbg !5449
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5451
  %bf.load = load i64, i64* %2, align 8, !dbg !5451
  %3 = trunc i64 %bf.load to i32, !dbg !5451
  %bf.cast = and i32 %3, 65535, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5438, metadata !DIExpression()), !dbg !5449
  %call4 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !5452
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5452
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !5454

if.end:                                           ; preds = %for.body
  %call6 = call fastcc %union.tree_node* @get_rename(%struct.htab* %map, %union.tree_node* %call2) #7, !dbg !5455
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !5439, metadata !DIExpression()), !dbg !5449
  %cmp = icmp eq %union.tree_node* %call6, %call2, !dbg !5456
  br i1 %cmp, label %if.end8, label %cleanup, !dbg !5458

if.end8:                                          ; preds = %if.end
  %call9 = call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %1, %union.tree_node* %call2, i32 %bf.cast, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5459
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5439, metadata !DIExpression()), !dbg !5449
  %call10 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %1, %union.tree_node* %call9) #6, !dbg !5460
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5439, metadata !DIExpression()), !dbg !5449
  %cmp11 = icmp eq %union.tree_node* %call10, %call2, !dbg !5461
  br i1 %cmp11, label %cleanup, label %if.end13, !dbg !5463

if.end13:                                         ; preds = %if.end8
  %call14 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !5464
  %tobool15 = icmp eq i8 %call14, 0, !dbg !5464
  br i1 %tobool15, label %if.end21, label %if.then16, !dbg !5466

if.then16:                                        ; preds = %if.end13
  %call17 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt) #7, !dbg !5467
  %tobool18 = icmp eq i8 %call17, 0, !dbg !5467
  br i1 %tobool18, label %if.else, label %if.then19, !dbg !5470

if.then19:                                        ; preds = %if.then16
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt) #7, !dbg !5471
  br label %cleanup, !dbg !5471

if.else:                                          ; preds = %if.then16
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 1006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5472
  br label %cleanup

if.end21:                                         ; preds = %if.end13
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5473
  %bf.load23 = load i64, i64* %4, align 8, !dbg !5473
  %bf.cast251 = and i64 %bf.load23, 65535, !dbg !5474
  %cmp26 = icmp eq i64 %bf.cast251, 141, !dbg !5474
  br i1 %cmp26, label %if.end31, label %if.then27, !dbg !5475

if.then27:                                        ; preds = %if.end21
  %call28 = call %union.tree_node* @create_tmp_var(%union.tree_node* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5476
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !5440, metadata !DIExpression()), !dbg !5477
  %call29 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %1, %union.tree_node* %call28, %union.tree_node* %call10) #6, !dbg !5478
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !5439, metadata !DIExpression()), !dbg !5449
  %call30 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call29, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !5479
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !5439, metadata !DIExpression()), !dbg !5449
  br label %if.end31, !dbg !5480

if.end31:                                         ; preds = %if.end21, %if.then27
  %use_expr.0 = phi %union.tree_node* [ %call30, %if.then27 ], [ %call10, %if.end21 ], !dbg !5449
  call void @llvm.dbg.value(metadata %union.tree_node* %use_expr.0, metadata !5439, metadata !DIExpression()), !dbg !5449
  call void @replace_exp(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %use_expr.0) #6, !dbg !5481
  br label %cleanup, !dbg !5482

cleanup:                                          ; preds = %if.end, %for.body, %if.then19, %if.else, %if.end8, %if.end31
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end31 ], [ false, %for.body ], [ false, %if.end ], [ false, %if.end8 ], [ true, %if.else ], [ true, %if.then19 ]
  br i1 %cleanup.dest.slot.0, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5431, metadata !DIExpression(DW_OP_deref)), !dbg !5443
  %call35 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5447
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call35, metadata !5432, metadata !DIExpression()), !dbg !5443
  br label %for.cond, !dbg !5447, !llvm.loop !5483

for.end:                                          ; preds = %cleanup, %for.cond
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !5485
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5486
  ret void, !dbg !5486
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %type, %union.tree_node* %op0, i32 %code, %union.tree_node* %op1, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5487 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5491, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !5492, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata i32 %code, metadata !5493, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %union.tree_node* %op1, metadata !5494, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5495, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !5496, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !5497, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5498, metadata !DIExpression()), !dbg !5538
  %idxprom = sext i32 %code to i64, !dbg !5539
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5539
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5539
  %cmp = icmp eq i32 %0, 1, !dbg !5541
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !5542

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %0, 3, !dbg !5543
  br i1 %cmp3, label %return, label %if.end, !dbg !5544

if.end:                                           ; preds = %lor.lhs.false
  %cmp6 = icmp eq i32 %0, 4, !dbg !5545
  br i1 %cmp6, label %if.then7, label %if.end59, !dbg !5546

if.then7:                                         ; preds = %if.end
  switch i32 %code, label %sw.default [
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 47, label %sw.bb10
    i32 45, label %sw.bb29
    i32 41, label %return
  ], !dbg !5547

sw.bb:                                            ; preds = %if.then7, %if.then7
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5548
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5548
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5499, metadata !DIExpression()), !dbg !5549
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5550
  %bf.load = load i64, i64* %2, align 8, !dbg !5550
  %3 = trunc i64 %bf.load to i32, !dbg !5550
  %bf.cast = and i32 %3, 65535, !dbg !5550
  %call = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %type, %union.tree_node* %1, i32 %bf.cast, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5551
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5504, metadata !DIExpression()), !dbg !5549
  %call9 = tail call %union.tree_node* @build1_stat(i32 %code, %union.tree_node* %type, %union.tree_node* %call) #6, !dbg !5552
  ret %union.tree_node* %call9, !dbg !5553

sw.bb10:                                          ; preds = %if.then7
  %operands12 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5554
  %4 = load %union.tree_node*, %union.tree_node** %operands12, align 8, !dbg !5554
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5505, metadata !DIExpression()), !dbg !5555
  %call14 = tail call fastcc %union.tree_node* @expand_scalar_variables_ssa_name(%union.tree_node* %type, %union.tree_node* %4, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5556
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5507, metadata !DIExpression()), !dbg !5555
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5557
  %bf.load16 = load i64, i64* %5, align 8, !dbg !5557
  %bf.cast182 = and i64 %bf.load16, 65535, !dbg !5558
  %cmp19 = icmp eq i64 %bf.cast182, 141, !dbg !5558
  br i1 %cmp19, label %if.end27, label %land.lhs.true, !dbg !5559

land.lhs.true:                                    ; preds = %sw.bb10
  %call20 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %4) #6, !dbg !5560
  %tobool = icmp eq i8 %call20, 0, !dbg !5560
  br i1 %tobool, label %if.end27, label %if.then21, !dbg !5561

if.then21:                                        ; preds = %land.lhs.true
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5562
  %6 = load %union.tree_node*, %union.tree_node** %type23, align 8, !dbg !5562
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !5508, metadata !DIExpression()), !dbg !5563
  %call24 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5564
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !5511, metadata !DIExpression()), !dbg !5563
  %call25 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %6, %union.tree_node* %call24, %union.tree_node* %call14) #6, !dbg !5565
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !5507, metadata !DIExpression()), !dbg !5555
  %call26 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call25, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !5566
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5507, metadata !DIExpression()), !dbg !5555
  br label %if.end27, !dbg !5567

if.end27:                                         ; preds = %land.lhs.true, %sw.bb10, %if.then21
  %expr.0 = phi %union.tree_node* [ %call26, %if.then21 ], [ %call14, %land.lhs.true ], [ %call14, %sw.bb10 ], !dbg !5555
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !5507, metadata !DIExpression()), !dbg !5555
  %call28 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %type, %union.tree_node* %expr.0) #6, !dbg !5568
  br label %return

sw.bb29:                                          ; preds = %if.then7
  %operands31 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5569
  %7 = load %union.tree_node*, %union.tree_node** %operands31, align 8, !dbg !5569
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5512, metadata !DIExpression()), !dbg !5570
  %arrayidx35 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands31, i64 1, !dbg !5571
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx35, align 8, !dbg !5571
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5514, metadata !DIExpression()), !dbg !5570
  %arrayidx38 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands31, i64 2, !dbg !5572
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx38, align 8, !dbg !5572
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5515, metadata !DIExpression()), !dbg !5570
  %arrayidx41 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands31, i64 3, !dbg !5573
  %10 = load %union.tree_node*, %union.tree_node** %arrayidx41, align 8, !dbg !5573
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5516, metadata !DIExpression()), !dbg !5570
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5574
  %11 = load %union.tree_node*, %union.tree_node** %type44, align 8, !dbg !5574
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5575
  %bf.load46 = load i64, i64* %12, align 8, !dbg !5575
  %13 = trunc i64 %bf.load46 to i32, !dbg !5575
  %bf.cast48 = and i32 %13, 65535, !dbg !5575
  %call49 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %11, %union.tree_node* %7, i32 %bf.cast48, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5576
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !5517, metadata !DIExpression()), !dbg !5570
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5577
  %14 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !5577
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5578
  %bf.load53 = load i64, i64* %15, align 8, !dbg !5578
  %16 = trunc i64 %bf.load53 to i32, !dbg !5578
  %bf.cast55 = and i32 %16, 65535, !dbg !5578
  %call56 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %14, %union.tree_node* %8, i32 %bf.cast55, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5579
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !5518, metadata !DIExpression()), !dbg !5570
  %call57 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %type, %union.tree_node* %call49, %union.tree_node* %call56, %union.tree_node* %9, %union.tree_node* %10) #6, !dbg !5580
  ret %union.tree_node* %call57, !dbg !5553

sw.default:                                       ; preds = %if.then7
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 912, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5581
  br label %if.end59, !dbg !5582

if.end59:                                         ; preds = %sw.default, %if.end
  %cmp62 = icmp eq i32 %0, 6, !dbg !5583
  br i1 %cmp62, label %if.then64, label %if.end73, !dbg !5584

if.then64:                                        ; preds = %if.end59
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5585
  %17 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !5585
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5519, metadata !DIExpression()), !dbg !5586
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5587
  %bf.load68 = load i64, i64* %18, align 8, !dbg !5587
  %19 = trunc i64 %bf.load68 to i32, !dbg !5587
  %bf.cast70 = and i32 %19, 65535, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %bf.cast70, metadata !5522, metadata !DIExpression()), !dbg !5586
  %call71 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %17, %union.tree_node* %op0, i32 %bf.cast70, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5588
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !5523, metadata !DIExpression()), !dbg !5586
  %call72 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 %code, %union.tree_node* %type, %union.tree_node* %call71) #6, !dbg !5589
  ret %union.tree_node* %call72, !dbg !5553

if.end73:                                         ; preds = %if.end59
  %cmp76 = icmp eq i32 %0, 7, !dbg !5590
  br i1 %cmp76, label %if.then83, label %lor.lhs.false78, !dbg !5591

lor.lhs.false78:                                  ; preds = %if.end73
  %cmp81 = icmp eq i32 %0, 5, !dbg !5592
  br i1 %cmp81, label %if.then83, label %if.end102, !dbg !5593

if.then83:                                        ; preds = %lor.lhs.false78, %if.end73
  %type86 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5594
  %20 = load %union.tree_node*, %union.tree_node** %type86, align 8, !dbg !5594
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5524, metadata !DIExpression()), !dbg !5595
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5596
  %bf.load89 = load i64, i64* %21, align 8, !dbg !5596
  %22 = trunc i64 %bf.load89 to i32, !dbg !5596
  %bf.cast91 = and i32 %22, 65535, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %bf.cast91, metadata !5527, metadata !DIExpression()), !dbg !5595
  %call93 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %20, %union.tree_node* %op0, i32 %bf.cast91, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5597
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !5528, metadata !DIExpression()), !dbg !5595
  %type95 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5598
  %23 = load %union.tree_node*, %union.tree_node** %type95, align 8, !dbg !5598
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !5529, metadata !DIExpression()), !dbg !5595
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %op1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5599
  %bf.load97 = load i64, i64* %24, align 8, !dbg !5599
  %25 = trunc i64 %bf.load97 to i32, !dbg !5599
  %bf.cast99 = and i32 %25, 65535, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %bf.cast99, metadata !5530, metadata !DIExpression()), !dbg !5595
  %call100 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %23, %union.tree_node* %op1, i32 %bf.cast99, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5600
  call void @llvm.dbg.value(metadata %union.tree_node* %call100, metadata !5531, metadata !DIExpression()), !dbg !5595
  %call101 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %code, %union.tree_node* %type, %union.tree_node* %call93, %union.tree_node* %call100) #6, !dbg !5601
  ret %union.tree_node* %call101, !dbg !5553

if.end102:                                        ; preds = %lor.lhs.false78
  switch i32 %code, label %if.end137 [
    i32 141, label %if.then105
    i32 121, label %if.then110
  ], !dbg !5602

if.then105:                                       ; preds = %if.end102
  %call106 = tail call fastcc %union.tree_node* @expand_scalar_variables_ssa_name(%union.tree_node* %type, %union.tree_node* %op0, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5603
  br label %return, !dbg !5605

if.then110:                                       ; preds = %if.end102
  %operands113 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5606
  %26 = load %union.tree_node*, %union.tree_node** %operands113, align 8, !dbg !5606
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5532, metadata !DIExpression()), !dbg !5607
  %call115 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %26) #7, !dbg !5608
  %tobool117 = icmp eq i8 %call115, 0, !dbg !5608
  br i1 %tobool117, label %return, label %land.lhs.true118, !dbg !5609

land.lhs.true118:                                 ; preds = %if.then110
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5610
  %bf.load120 = load i64, i64* %27, align 8, !dbg !5610
  %bf.cast1221 = and i64 %bf.load120, 65535, !dbg !5611
  %cmp123 = icmp eq i64 %bf.cast1221, 45, !dbg !5611
  br i1 %cmp123, label %if.then125, label %return, !dbg !5612

if.then125:                                       ; preds = %land.lhs.true118
  %type127 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5613
  %28 = load %union.tree_node*, %union.tree_node** %type127, align 8, !dbg !5613
  %29 = trunc i64 %bf.load120 to i32, !dbg !5614
  %bf.cast131 = and i32 %29, 65535, !dbg !5614
  %call132 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %28, %union.tree_node* %26, i32 %bf.cast131, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5615
  call void @llvm.dbg.value(metadata %union.tree_node* %call132, metadata !5535, metadata !DIExpression()), !dbg !5616
  %type134 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5617
  %30 = load %union.tree_node*, %union.tree_node** %type134, align 8, !dbg !5617
  %call135 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 121, %union.tree_node* %30, %union.tree_node* %call132) #6, !dbg !5617
  ret %union.tree_node* %call135, !dbg !5553

if.end137:                                        ; preds = %if.end102
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 960, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5618
  br label %return, !dbg !5619

return:                                           ; preds = %if.then110, %land.lhs.true118, %if.then7, %entry, %lor.lhs.false, %if.end137, %if.then105, %if.end27
  %retval.1 = phi %union.tree_node* [ %call106, %if.then105 ], [ null, %if.end137 ], [ %call28, %if.end27 ], [ %op0, %lor.lhs.false ], [ %op0, %entry ], [ %op0, %if.then7 ], [ %op0, %land.lhs.true118 ], [ %op0, %if.then110 ], !dbg !5538
  ret %union.tree_node* %retval.1, !dbg !5553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !5620 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !5622, metadata !DIExpression()), !dbg !5623
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #7, !dbg !5624
  %tobool = icmp eq i8 %call, 0, !dbg !5624
  br i1 %tobool, label %return, label %if.then, !dbg !5626

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !5627
  %bf.load = load i32, i32* %0, align 8, !dbg !5627
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !5628
  %conv1 = zext i1 %cmp to i8, !dbg !5629
  br label %return, !dbg !5630

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !5623
  ret i8 %retval.0, !dbg !5631
}

declare dso_local void @replace_exp(%struct.ssa_use_operand_d*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @expand_scalar_variables_ssa_name(%union.tree_node* %type, %union.tree_node* %op0, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5632 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5636, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %union.tree_node* %op0, metadata !5637, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5638, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !5639, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !5640, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5641, metadata !DIExpression()), !dbg !5652
  %call = tail call fastcc zeroext i8 @is_parameter(%struct.sese_s* %region, %union.tree_node* %op0) #7, !dbg !5653
  %tobool = icmp eq i8 %call, 0, !dbg !5653
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5655

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @is_iv(%union.tree_node* %op0) #7, !dbg !5656
  %tobool3 = icmp eq i8 %call1, 0, !dbg !5656
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5657

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call4 = tail call fastcc %union.tree_node* @get_rename(%struct.htab* %map, %union.tree_node* %op0) #7, !dbg !5658
  %call5 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %call4) #6, !dbg !5658
  br label %cleanup, !dbg !5659

if.end:                                           ; preds = %lor.lhs.false
  %def_stmt6 = getelementptr inbounds %union.tree_node, %union.tree_node* %op0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5660
  %0 = bitcast %union.tree_node** %def_stmt6 to %union.gimple_statement_d**, !dbg !5660
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5660
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5642, metadata !DIExpression()), !dbg !5652
  %call7 = tail call fastcc %union.tree_node* @get_rename(%struct.htab* %map, %union.tree_node* %op0) #7, !dbg !5661
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5643, metadata !DIExpression()), !dbg !5652
  %cmp = icmp eq %union.tree_node* %call7, %op0, !dbg !5662
  br i1 %cmp, label %if.end16, label %land.lhs.true, !dbg !5664

land.lhs.true:                                    ; preds = %if.end
  %def_stmt10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5665
  %2 = bitcast %union.tree_node** %def_stmt10 to %union.gimple_statement_d**, !dbg !5665
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !5665
  %call11 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %3) #7, !dbg !5666
  %cmp12 = icmp eq %struct.basic_block_def* %call11, %bb, !dbg !5667
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !5668

if.then14:                                        ; preds = %land.lhs.true
  %call15 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %call7) #6, !dbg !5669
  br label %cleanup, !dbg !5670

if.end16:                                         ; preds = %if.end, %land.lhs.true
  %call17 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5671
  %cmp18 = icmp eq %struct.basic_block_def* %call17, %bb, !dbg !5672
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !5673

if.then20:                                        ; preds = %if.end16
  tail call fastcc void @expand_scalar_variables_stmt(%union.gimple_statement_d* %1, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5674
  %call21 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %call7) #6, !dbg !5676
  br label %cleanup, !dbg !5677

if.else:                                          ; preds = %if.end16
  %call22 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5678
  %tobool23 = icmp eq %struct.basic_block_def* %call22, null, !dbg !5678
  br i1 %tobool23, label %if.then28, label %lor.lhs.false24, !dbg !5680

lor.lhs.false24:                                  ; preds = %if.else
  %call25 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5681
  %call26 = tail call fastcc zeroext i8 @bb_in_sese_p(%struct.basic_block_def* %call25, %struct.sese_s* %region) #7, !dbg !5682
  %tobool27 = icmp eq i8 %call26, 0, !dbg !5682
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !5683

if.then28:                                        ; preds = %lor.lhs.false24, %if.else
  %call29 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %call7) #6, !dbg !5684
  br label %cleanup, !dbg !5685

if.end30:                                         ; preds = %lor.lhs.false24
  %call31 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !5686
  switch i32 %call31, label %sw.default [
    i32 6, label %sw.bb
    i32 8, label %sw.bb38
  ], !dbg !5687

sw.bb:                                            ; preds = %if.end30
  %call32 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %1) #7, !dbg !5688
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !5644, metadata !DIExpression()), !dbg !5689
  %call33 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %1) #7, !dbg !5690
  call void @llvm.dbg.value(metadata i32 %call33, metadata !5649, metadata !DIExpression()), !dbg !5689
  %call34 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %1) #7, !dbg !5691
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !5650, metadata !DIExpression()), !dbg !5689
  %call36 = tail call fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %1) #7, !dbg !5692
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !5651, metadata !DIExpression()), !dbg !5689
  %call37 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %call36, %union.tree_node* %call32, i32 %call33, %union.tree_node* %call34, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5693
  br label %cleanup

sw.bb38:                                          ; preds = %if.end30
  %call39 = tail call fastcc %union.tree_node* @expand_scalar_variables_call(%union.gimple_statement_d* %1, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5694
  br label %cleanup, !dbg !5695

sw.default:                                       ; preds = %if.end30
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 833, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5696
  br label %cleanup, !dbg !5697

cleanup:                                          ; preds = %sw.default, %sw.bb38, %sw.bb, %if.then28, %if.then20, %if.then14, %if.then
  %retval.0 = phi %union.tree_node* [ %call5, %if.then ], [ %call15, %if.then14 ], [ %call21, %if.then20 ], [ %call7, %sw.default ], [ %call39, %sw.bb38 ], [ %call37, %sw.bb ], [ %call29, %if.then28 ], !dbg !5652
  ret %union.tree_node* %retval.0, !dbg !5698
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !5699 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5706, metadata !DIExpression()), !dbg !5707
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5708
  %bf.load = load i64, i64* %0, align 8, !dbg !5708
  %1 = trunc i64 %bf.load to i16, !dbg !5708
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5709

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5710

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5712
  ret i8 %retval.0, !dbg !5713
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_parameter(%struct.sese_s* %region, %union.tree_node* %name) unnamed_addr #5 !dbg !5714 {
entry:
  %p = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !5718, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5719, metadata !DIExpression()), !dbg !5722
  %0 = bitcast %union.tree_node** %p to i8*, !dbg !5723
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5723
  call void @llvm.dbg.value(metadata i32 0, metadata !5720, metadata !DIExpression()), !dbg !5722
  %params = getelementptr inbounds %struct.sese_s, %struct.sese_s* %region, i64 0, i32 2, !dbg !5724
  br label %for.cond, !dbg !5727

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5728
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5720, metadata !DIExpression()), !dbg !5722
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %params, align 8, !dbg !5729
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !5729
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5729

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !5729
  br label %cond.end, !dbg !5729

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5729
  call void @llvm.dbg.value(metadata %union.tree_node** %p, metadata !5721, metadata !DIExpression(DW_OP_deref)), !dbg !5722
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %p) #7, !dbg !5729
  %tobool2 = icmp eq i32 %call, 0, !dbg !5730
  br i1 %tobool2, label %cleanup, label %for.body, !dbg !5730

for.body:                                         ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** %p, align 8, !dbg !5731
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5721, metadata !DIExpression()), !dbg !5722
  %cmp = icmp eq %union.tree_node* %2, %name, !dbg !5733
  br i1 %cmp, label %cleanup, label %for.inc, !dbg !5734

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5735
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5720, metadata !DIExpression()), !dbg !5722
  br label %for.cond, !dbg !5736, !llvm.loop !5737

cleanup:                                          ; preds = %cond.end, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %cond.end ], !dbg !5722
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5739
  ret i8 %retval.0, !dbg !5739
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_iv(%union.tree_node* %name) unnamed_addr #5 !dbg !5740 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5744, metadata !DIExpression()), !dbg !5745
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5746
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5746
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5746
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %1) #7, !dbg !5747
  %cmp = icmp eq i32 %call, 16, !dbg !5748
  %conv1 = zext i1 %cmp to i8, !dbg !5747
  ret i8 %conv1, !dbg !5749
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5750 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5752, metadata !DIExpression()), !dbg !5753
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5754
  ret %union.tree_node* %call, !dbg !5755
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5756 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5760, metadata !DIExpression()), !dbg !5762
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %call, metadata !5761, metadata !DIExpression()), !dbg !5762
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !5764
  %cmp = icmp eq i32 %call1, 3, !dbg !5766
  br i1 %cmp, label %if.then, label %if.end, !dbg !5767

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !5768
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5768
  %bf.load = load i64, i64* %0, align 8, !dbg !5768
  %1 = trunc i64 %bf.load to i32, !dbg !5768
  %bf.cast = and i32 %1, 65535, !dbg !5768
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5761, metadata !DIExpression()), !dbg !5762
  br label %if.end, !dbg !5769

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5762
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5761, metadata !DIExpression()), !dbg !5762
  ret i32 %code.0, !dbg !5770
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5771 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5773, metadata !DIExpression()), !dbg !5774
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5775
  %cmp = icmp ugt i32 %call, 2, !dbg !5777
  br i1 %cmp, label %if.then, label %return, !dbg !5778

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5779
  br label %return, !dbg !5780

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5781
  ret %union.tree_node* %retval.0, !dbg !5782
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_expr_type(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5783 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5785, metadata !DIExpression()), !dbg !5790
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %call, metadata !5786, metadata !DIExpression()), !dbg !5790
  switch i32 %call, label %if.else14 [
    i32 8, label %if.then3
    i32 6, label %if.else
    i32 1, label %if.then13
  ], !dbg !5792

if.then3:                                         ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #7, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5787, metadata !DIExpression()), !dbg !5795
  br label %cleanup, !dbg !5796

if.else:                                          ; preds = %entry
  %call5 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %stmt) #7, !dbg !5797
  %cond = icmp eq i32 %call5, 66, !dbg !5798
  br i1 %cond, label %sw.bb, label %sw.default, !dbg !5798

sw.bb:                                            ; preds = %if.else
  %call6 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #7, !dbg !5799
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5799
  %0 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5799
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5787, metadata !DIExpression()), !dbg !5795
  br label %cleanup, !dbg !5801

sw.default:                                       ; preds = %if.else
  %call8 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %stmt) #6, !dbg !5802
  %type10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5802
  %1 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !5802
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5787, metadata !DIExpression()), !dbg !5795
  br label %cleanup, !dbg !5803

if.then13:                                        ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !5804
  br label %cleanup, !dbg !5806

if.else14:                                        ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !5807
  br label %cleanup, !dbg !5808

cleanup:                                          ; preds = %if.then3, %sw.default, %sw.bb, %if.else14, %if.then13
  %retval.0 = phi %union.tree_node* [ %2, %if.then13 ], [ %3, %if.else14 ], [ %call4, %if.then3 ], [ %1, %sw.default ], [ %0, %sw.bb ], !dbg !5809
  ret %union.tree_node* %retval.0, !dbg !5810
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @expand_scalar_variables_call(%union.gimple_statement_d* %stmt, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) unnamed_addr #5 !dbg !5811 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5815, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5816, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.sese_s* %region, metadata !5817, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !5818, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5819, metadata !DIExpression()), !dbg !5834
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #7, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %call, metadata !5821, metadata !DIExpression()), !dbg !5834
  %call1 = tail call fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %call) #7, !dbg !5836
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call1, metadata !5822, metadata !DIExpression()), !dbg !5834
  %call2 = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %stmt) #7, !dbg !5837
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5837
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5837
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5823, metadata !DIExpression()), !dbg !5834
  %call3 = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #7, !dbg !5838
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5824, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 0, metadata !5820, metadata !DIExpression()), !dbg !5834
  %base12 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call1, i64 0, i32 0, !dbg !5839
  br label %for.cond, !dbg !5840

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !5841
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5820, metadata !DIExpression()), !dbg !5834
  %cmp = icmp slt i32 %i.0, %call, !dbg !5842
  br i1 %cmp, label %for.body, label %for.end, !dbg !5843

for.body:                                         ; preds = %for.cond
  %call5 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %i.0) #7, !dbg !5844
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5829, metadata !DIExpression()), !dbg !5839
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5845
  %1 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5845
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5833, metadata !DIExpression()), !dbg !5839
  %call8 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5846
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5826, metadata !DIExpression()), !dbg !5834
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5847
  %bf.load = load i64, i64* %2, align 8, !dbg !5847
  %3 = trunc i64 %bf.load to i32, !dbg !5847
  %bf.cast = and i32 %3, 65535, !dbg !5847
  %call9 = tail call fastcc %union.tree_node* @expand_scalar_variables_expr(%union.tree_node* %1, %union.tree_node* %call5, i32 %bf.cast, %union.tree_node* null, %struct.basic_block_def* %bb, %struct.sese_s* %region, %struct.htab* %map, %struct.gimple_stmt_iterator* %gsi) #7, !dbg !5848
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5829, metadata !DIExpression()), !dbg !5839
  %call10 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %1, %union.tree_node* %call8, %union.tree_node* %call9) #6, !dbg !5849
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5829, metadata !DIExpression()), !dbg !5839
  %call11 = tail call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* %gsi, %union.tree_node* %call10, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 1) #6, !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5829, metadata !DIExpression()), !dbg !5839
  %call13 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base12, %union.tree_node* %call11) #7, !dbg !5851
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5820, metadata !DIExpression()), !dbg !5834
  br label %for.cond, !dbg !5853, !llvm.loop !5854

for.end:                                          ; preds = %for.cond
  %call14 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !5856
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5827, metadata !DIExpression()), !dbg !5834
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5857
  %4 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !5857
  %call17 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5858
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5826, metadata !DIExpression()), !dbg !5834
  %call18 = tail call %union.tree_node* @build_call_vec(%union.tree_node* %0, %union.tree_node* %call3, %struct.VEC_tree_gc* %call1) #6, !dbg !5859
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !5825, metadata !DIExpression()), !dbg !5834
  %call19 = tail call %union.gimple_statement_d* @gimple_build_call_from_tree(%union.tree_node* %call18) #6, !dbg !5860
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !5828, metadata !DIExpression()), !dbg !5834
  %call20 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call17, %union.gimple_statement_d* %call19) #7, !dbg !5861
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !5826, metadata !DIExpression()), !dbg !5834
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call19, %union.tree_node* %call20) #7, !dbg !5862
  tail call void @gsi_insert_before(%struct.gimple_stmt_iterator* %gsi, %union.gimple_statement_d* %call19, i32 1) #6, !dbg !5863
  ret %union.tree_node* %call20, !dbg !5864
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !5865 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5869, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32 %i, metadata !5870, metadata !DIExpression()), !dbg !5871
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !5872
  %tobool = icmp eq i8 %call, 0, !dbg !5872
  br i1 %tobool, label %return, label %if.then, !dbg !5874

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !5875
  %idxprom = zext i32 %i to i64, !dbg !5875
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !5875
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5875
  br label %return, !dbg !5877

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !5878
  ret %union.tree_node* %retval.0, !dbg !5879
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5880 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5882, metadata !DIExpression()), !dbg !5884
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %call, metadata !5883, metadata !DIExpression()), !dbg !5884
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5886

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5888
  %bf.load = load i32, i32* %0, align 8, !dbg !5888
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5888
  br label %cleanup, !dbg !5889

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5890
  br label %cleanup, !dbg !5892

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5884
  ret i32 %retval.0, !dbg !5893
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5894 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5898, metadata !DIExpression()), !dbg !5899
  %idxprom = sext i32 %code to i64, !dbg !5900
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5900
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5900
  %conv = zext i8 %0 to i32, !dbg !5901
  ret i32 %conv, !dbg !5902
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5903 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5905, metadata !DIExpression()), !dbg !5908
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5909
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5906, metadata !DIExpression()), !dbg !5908
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5910
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !5910
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !5910
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !5911
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5911
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !5911
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !5912
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5912
  ret %union.tree_node* %4, !dbg !5913
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5914 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5916, metadata !DIExpression()), !dbg !5917
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5918
  ret %union.tree_node* %call, !dbg !5919
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5920 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5922, metadata !DIExpression()), !dbg !5924
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %call, metadata !5923, metadata !DIExpression()), !dbg !5924
  %sub = add i32 %call, -3, !dbg !5926
  ret i32 %sub, !dbg !5927
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @VEC_tree_gc_alloc(i32 %alloc_) unnamed_addr #0 !dbg !5928 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5932, metadata !DIExpression()), !dbg !5933
  %call = tail call i8* @vec_gc_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !5934
  %0 = bitcast i8* %call to %struct.VEC_tree_gc*, !dbg !5934
  ret %struct.VEC_tree_gc* %0, !dbg !5934
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5935 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5937, metadata !DIExpression()), !dbg !5939
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !5940
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5938, metadata !DIExpression()), !dbg !5939
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5941
  %bf.load = load i64, i64* %0, align 8, !dbg !5941
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5943
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !5943
  br i1 %cmp, label %if.then, label %cleanup, !dbg !5944

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5945
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5945
  br label %cleanup, !dbg !5946

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !5939
  ret %union.tree_node* %retval.0, !dbg !5947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !5948 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5950, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i32 %index, metadata !5951, metadata !DIExpression()), !dbg !5952
  %add = add i32 %index, 3, !dbg !5953
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #7, !dbg !5954
  ret %union.tree_node* %call, !dbg !5955
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5956 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5960, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5961, metadata !DIExpression()), !dbg !5963
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5964
  %0 = load i32, i32* %num1, align 8, !dbg !5964
  %inc = add i32 %0, 1, !dbg !5964
  store i32 %inc, i32* %num1, align 8, !dbg !5964
  %idxprom = zext i32 %0 to i64, !dbg !5964
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5964
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5962, metadata !DIExpression()), !dbg !5963
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5964
  ret %union.tree_node** %arrayidx, !dbg !5964
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5965 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5967, metadata !DIExpression()), !dbg !5968
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5969
  ret %union.tree_node* %call, !dbg !5970
}

declare dso_local %union.tree_node* @build_call_vec(%union.tree_node*, %union.tree_node*, %struct.VEC_tree_gc*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_call_from_tree(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5971 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5975, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5976, metadata !DIExpression()), !dbg !5977
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5978
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !5979
  ret %union.tree_node* %call, !dbg !5980
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5981 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5986, metadata !DIExpression()), !dbg !5987
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !5988
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5989
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5991

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5992
  %bf.load = load i64, i64* %0, align 8, !dbg !5992
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5993
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5993
  br i1 %cmp, label %if.then, label %if.end, !dbg !5994

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5995
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5995
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5996
  br label %if.end, !dbg !5995

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5997
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @rename_variables_in_stmt(%union.gimple_statement_d* %stmt, %struct.htab* %map, %struct.gimple_stmt_iterator* %insert_gsi) unnamed_addr #5 !dbg !5998 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6002, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata %struct.htab* %map, metadata !6003, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %insert_gsi, metadata !6004, metadata !DIExpression()), !dbg !6018
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !6019
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6019
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6005, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 5) #7, !dbg !6020
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call, metadata !6006, metadata !DIExpression()), !dbg !6018
  %1 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !6021
  br label %for.cond, !dbg !6020

for.cond:                                         ; preds = %for.inc, %entry
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call, %entry ], [ %call42, %for.inc ], !dbg !6022
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !6006, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6005, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6023
  %tobool = icmp eq i8 %call1, 0, !dbg !6023
  br i1 %tobool, label %for.body, label %for.end, !dbg !6020

for.body:                                         ; preds = %for.cond
  %call2 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use_p.0) #7, !dbg !6024
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6007, metadata !DIExpression()), !dbg !6021
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6025
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6026
  %bf.load = load i64, i64* %2, align 8, !dbg !6026
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6028
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6028
  br i1 %cmp, label %if.end, label %cleanup35, !dbg !6029

if.end:                                           ; preds = %for.body
  %call3 = call fastcc %union.tree_node* @get_rename(%struct.htab* %map, %union.tree_node* %call2) #7, !dbg !6030
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6011, metadata !DIExpression()), !dbg !6021
  %cmp4 = icmp eq %union.tree_node* %call2, %call3, !dbg !6031
  br i1 %cmp4, label %cleanup35, label %if.end6, !dbg !6033

if.end6:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6034
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6034
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6012, metadata !DIExpression()), !dbg !6021
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6035
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !6035
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6013, metadata !DIExpression()), !dbg !6021
  %cmp9 = icmp eq %union.tree_node* %3, %4, !dbg !6036
  br i1 %cmp9, label %lor.lhs.false, label %if.then17, !dbg !6037

lor.lhs.false:                                    ; preds = %if.end6
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6038
  %bf.load11 = load i64, i64* %5, align 8, !dbg !6038
  %bf.cast132 = and i64 %bf.load11, 65535, !dbg !6039
  %cmp14 = icmp eq i64 %bf.cast132, 141, !dbg !6039
  br i1 %cmp14, label %if.end34, label %land.lhs.true, !dbg !6040

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call15 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !6041
  %tobool16 = icmp eq i8 %call15, 0, !dbg !6041
  br i1 %tobool16, label %if.end34, label %if.then17, !dbg !6042

if.then17:                                        ; preds = %land.lhs.true, %if.end6
  %call18 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !6043
  %tobool19 = icmp eq i8 %call18, 0, !dbg !6043
  br i1 %tobool19, label %if.end25, label %if.then20, !dbg !6045

if.then20:                                        ; preds = %if.then17
  %call21 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt) #7, !dbg !6046
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6046
  br i1 %tobool22, label %if.else, label %if.then23, !dbg !6049

if.then23:                                        ; preds = %if.then20
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt) #7, !dbg !6050
  br label %cleanup, !dbg !6050

if.else:                                          ; preds = %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6051
  br label %cleanup

if.end25:                                         ; preds = %if.then17
  %call26 = call %union.tree_node* @create_tmp_var(%union.tree_node* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6052
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !6015, metadata !DIExpression()), !dbg !6053
  br i1 %cmp9, label %if.end31, label %if.then29, !dbg !6054

if.then29:                                        ; preds = %if.end25
  %call30 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %3, %union.tree_node* %call3) #6, !dbg !6055
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !6011, metadata !DIExpression()), !dbg !6021
  br label %if.end31, !dbg !6057

if.end31:                                         ; preds = %if.end25, %if.then29
  %expr.0 = phi %union.tree_node* [ %call30, %if.then29 ], [ %call3, %if.end25 ], !dbg !6021
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !6011, metadata !DIExpression()), !dbg !6021
  %call32 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %3, %union.tree_node* %call26, %union.tree_node* %expr.0) #6, !dbg !6058
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !6011, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !6014, metadata !DIExpression(DW_OP_deref)), !dbg !6021
  %call33 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call32, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !6011, metadata !DIExpression()), !dbg !6021
  %6 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !6060
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %6, metadata !6014, metadata !DIExpression()), !dbg !6021
  call void @gsi_insert_seq_before(%struct.gimple_stmt_iterator* %insert_gsi, %struct.gimple_seq_d* %6, i32 1) #6, !dbg !6061
  br label %cleanup, !dbg !6062

cleanup:                                          ; preds = %if.then23, %if.else, %if.end31
  %expr.1 = phi %union.tree_node* [ %call33, %if.end31 ], [ %call3, %if.else ], [ %call3, %if.then23 ], !dbg !6021
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end31 ], [ 2, %if.else ], [ 2, %if.then23 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !6011, metadata !DIExpression()), !dbg !6021
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %if.end34, label %cleanup35

if.end34:                                         ; preds = %land.lhs.true, %lor.lhs.false, %cleanup
  %expr.2 = phi %union.tree_node* [ %call3, %land.lhs.true ], [ %call3, %lor.lhs.false ], [ %expr.1, %cleanup ], !dbg !6063
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.2, metadata !6011, metadata !DIExpression()), !dbg !6021
  call void @replace_exp(%struct.ssa_use_operand_d* %use_p.0, %union.tree_node* %expr.2) #6, !dbg !6064
  br label %cleanup35, !dbg !6065

cleanup35:                                        ; preds = %for.body, %if.end, %cleanup, %if.end34
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end34 ], [ 4, %for.body ], [ 4, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6065
  %switch = icmp eq i32 %cleanup.dest.slot.1, 2
  br i1 %switch, label %for.end, label %for.inc

for.inc:                                          ; preds = %cleanup35
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !6005, metadata !DIExpression(DW_OP_deref)), !dbg !6018
  %call42 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !6023
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call42, metadata !6006, metadata !DIExpression()), !dbg !6018
  br label %for.cond, !dbg !6023, !llvm.loop !6066

for.end:                                          ; preds = %cleanup35, %for.cond
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !6068
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !6069
  ret void, !dbg !6069
}

declare dso_local void @gsi_insert_seq_before(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @if_region_entry(%struct.ifsese_s* %if_region) unnamed_addr #0 !dbg !6070 {
entry:
  call void @llvm.dbg.value(metadata %struct.ifsese_s* %if_region, metadata !6074, metadata !DIExpression()), !dbg !6075
  %region = getelementptr inbounds %struct.ifsese_s, %struct.ifsese_s* %if_region, i64 0, i32 0, !dbg !6076
  %0 = load %struct.sese_s*, %struct.sese_s** %region, align 8, !dbg !6076
  %entry1 = getelementptr inbounds %struct.sese_s, %struct.sese_s* %0, i64 0, i32 0, !dbg !6076
  %1 = load %struct.edge_def*, %struct.edge_def** %entry1, align 8, !dbg !6076
  ret %struct.edge_def* %1, !dbg !6077
}

declare dso_local zeroext i8 @mark_irreducible_loops() local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @calculate_dominance_info(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !6078 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6080, metadata !DIExpression()), !dbg !6081
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !6082
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6082
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !6082
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6082

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !6082
  br label %cond.end, !dbg !6082

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6082
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !6082
  %cmp = icmp eq i32 %call, 1, !dbg !6083
  %conv2 = zext i1 %cmp to i8, !dbg !6082
  ret i8 %conv2, !dbg !6084
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6085 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6087, metadata !DIExpression()), !dbg !6088
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6089
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6089

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !6090
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !6090
  br label %cond.end, !dbg !6089

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6089
  ret %struct.gimple_seq_node_d* %cond, !dbg !6091
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1915, !1916, !1917}
!llvm.ident = !{!1918}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !466, nameTableKind: None)
!1 = !DIFile(filename: "sese.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2 = !{!3, !132, !327, !336, !340, !346, !351, !356, !374, !381, !388, !395, !422, !460}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !4, line: 7, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!7 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!131 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !133, line: 39, baseType: !5, size: 32, elements: !134)
!133 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326}
!135 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!141 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!142 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!143 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!144 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!145 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!146 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!147 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!148 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!149 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!150 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!151 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!152 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!153 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!154 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!155 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!156 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!157 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!158 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!159 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!160 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!161 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!162 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!163 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!164 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!165 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!166 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!167 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!168 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!169 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!170 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!171 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!172 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!173 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!174 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!175 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!176 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!177 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!178 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!179 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!180 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!181 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!182 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!183 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!184 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!185 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!186 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!187 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!188 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!189 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!190 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!191 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!192 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!193 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!194 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!195 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!196 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!197 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!198 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!199 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!200 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!201 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!202 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!203 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!204 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!205 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!206 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!207 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!208 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!209 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!210 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!211 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!212 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!213 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!214 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!215 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!216 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!217 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!218 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!219 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!220 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!221 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!222 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!223 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!226 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!227 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!232 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!233 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!234 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!235 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!236 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!237 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!238 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!239 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!240 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!241 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!242 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!243 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!244 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!245 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!246 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!247 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!248 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!249 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!250 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!251 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!252 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!253 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!254 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!255 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!256 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!257 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!258 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!259 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!260 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!261 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!262 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!263 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!264 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!265 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!266 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!267 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!268 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!269 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!270 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!271 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!272 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!273 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!274 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!275 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!276 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!277 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!278 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!279 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!280 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!281 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!282 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!283 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!284 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!285 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!286 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!287 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!288 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!289 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!299 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!300 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!302 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!303 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!304 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!305 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!306 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!320 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!321 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!322 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!323 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!324 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!325 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!326 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !328, line: 31, baseType: !5, size: 32, elements: !329)
!328 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!329 = !{!330, !331, !332, !333, !334, !335}
!330 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!334 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!335 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !328, line: 91, baseType: !5, size: 32, elements: !337)
!337 = !{!338, !339}
!338 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!339 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !341, line: 363, baseType: !5, size: 32, elements: !342)
!341 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!342 = !{!343, !344, !345}
!343 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!345 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !341, line: 355, baseType: !5, size: 32, elements: !347)
!347 = !{!348, !349, !350}
!348 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!350 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !352, line: 474, baseType: !5, size: 32, elements: !353)
!352 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!353 = !{!354, !355}
!354 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !133, line: 280, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!358 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!370 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!371 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!372 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !133, line: 1817, baseType: !5, size: 32, elements: !375)
!375 = !{!376, !377, !378, !379, !380}
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !133, line: 1805, baseType: !5, size: 32, elements: !382)
!382 = !{!383, !384, !385, !386, !387}
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!384 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !389, line: 119, baseType: !5, size: 32, elements: !390)
!389 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !396, line: 727, baseType: !5, size: 32, elements: !397)
!396 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!397 = !{!398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421}
!398 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!403 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!404 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!405 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!406 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!407 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!408 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!409 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!410 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!411 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!412 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!413 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!414 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!415 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!416 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!417 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!418 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!419 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!420 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!421 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !396, line: 51, baseType: !5, size: 32, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459}
!424 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!428 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!429 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!430 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!431 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!435 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!436 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!437 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!438 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!439 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!440 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!441 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!442 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!443 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!444 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!445 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!446 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!447 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!448 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!449 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!450 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!451 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!452 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!453 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!454 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!455 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!456 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!457 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!458 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!459 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !396, line: 80, baseType: !5, size: 32, elements: !461)
!461 = !{!462, !463, !464, !465}
!462 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!463 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!464 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!465 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!466 = !{!467, !468, !469, !470, !473, !474, !476, !1835, !1841, !1376, !132, !1067, !1860, !1861, !482, !1868, !1869, !1854, !5, !1048, !1847, !1870, !840, !471, !609, !1873, !536, !1886, !1887, !1899, !1905, !1912, !807, !1913, !460, !1353}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!469 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rename_map_elt_s", file: !479, line: 255, size: 128, elements: !480)
!479 = !DIFile(filename: "./sese.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!480 = !{!481, !1834}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "old_name", scope: !478, file: !479, line: 257, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !483, line: 56, baseType: !484)
!483 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !133, line: 3371, size: 1792, elements: !486)
!486 = !{!487, !520, !526, !539, !558, !569, !574, !583, !589, !602, !614, !652, !1162, !1190, !1207, !1208, !1213, !1222, !1228, !1233, !1237, !1241, !1485, !1532, !1538, !1544, !1551, !1564, !1578, !1595, !1607, !1629, !1644, !1816}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !485, file: !133, line: 3372, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !133, line: 360, size: 64, elements: !489)
!489 = !{!490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !488, file: !133, line: 361, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !488, file: !133, line: 363, baseType: !5, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !488, file: !133, line: 364, baseType: !5, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !488, file: !133, line: 365, baseType: !5, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !488, file: !133, line: 366, baseType: !5, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !488, file: !133, line: 367, baseType: !5, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !488, file: !133, line: 368, baseType: !5, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !488, file: !133, line: 369, baseType: !5, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !488, file: !133, line: 370, baseType: !5, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !488, file: !133, line: 372, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !488, file: !133, line: 373, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !488, file: !133, line: 374, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !488, file: !133, line: 375, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !488, file: !133, line: 376, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !488, file: !133, line: 377, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !488, file: !133, line: 378, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !488, file: !133, line: 379, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !488, file: !133, line: 381, baseType: !5, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !488, file: !133, line: 382, baseType: !5, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !488, file: !133, line: 383, baseType: !5, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !488, file: !133, line: 384, baseType: !5, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !488, file: !133, line: 385, baseType: !5, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !488, file: !133, line: 386, baseType: !5, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !488, file: !133, line: 387, baseType: !5, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !488, file: !133, line: 388, baseType: !5, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !488, file: !133, line: 390, baseType: !5, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !488, file: !133, line: 391, baseType: !5, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !488, file: !133, line: 392, baseType: !5, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !488, file: !133, line: 394, baseType: !5, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !488, file: !133, line: 399, baseType: !5, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !485, file: !133, line: 3373, baseType: !521, size: 192)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !133, line: 402, size: 192, elements: !522)
!522 = !{!523, !524, !525}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !521, file: !133, line: 403, baseType: !488, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !521, file: !133, line: 404, baseType: !482, size: 64, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !521, file: !133, line: 405, baseType: !482, size: 64, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !485, file: !133, line: 3374, baseType: !527, size: 320)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !133, line: 1384, size: 320, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !527, file: !133, line: 1385, baseType: !521, size: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !527, file: !133, line: 1386, baseType: !531, size: 128, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !532, line: 58, baseType: !533)
!532 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 54, size: 128, elements: !534)
!534 = !{!535, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !533, file: !532, line: 56, baseType: !536, size: 64)
!536 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !533, file: !532, line: 57, baseType: !538, size: 64, offset: 64)
!538 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !485, file: !133, line: 3375, baseType: !540, size: 256)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !133, line: 1397, size: 256, elements: !541)
!541 = !{!542, !543}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !540, file: !133, line: 1398, baseType: !521, size: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !540, file: !133, line: 1399, baseType: !544, size: 64, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !546, line: 52, size: 256, elements: !547)
!546 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!547 = !{!548, !549, !550, !551, !552, !553, !554}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !545, file: !546, line: 56, baseType: !5, size: 2, flags: DIFlagBitField, extraData: i64 0)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !545, file: !546, line: 57, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !545, file: !546, line: 58, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !545, file: !546, line: 59, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !545, file: !546, line: 60, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !545, file: !546, line: 61, baseType: !5, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !545, file: !546, line: 62, baseType: !555, size: 192, offset: 64)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 192, elements: !556)
!556 = !{!557}
!557 = !DISubrange(count: 3)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !485, file: !133, line: 3376, baseType: !559, size: 256)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !133, line: 1408, size: 256, elements: !560)
!560 = !{!561, !562}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !559, file: !133, line: 1409, baseType: !521, size: 192)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !559, file: !133, line: 1410, baseType: !563, size: 64, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !565, line: 27, size: 192, elements: !566)
!565 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!566 = !{!567, !568}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !564, file: !565, line: 29, baseType: !531, size: 128)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !564, file: !565, line: 30, baseType: !3, size: 32, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !485, file: !133, line: 3377, baseType: !570, size: 256)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !133, line: 1437, size: 256, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !570, file: !133, line: 1438, baseType: !521, size: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !570, file: !133, line: 1439, baseType: !482, size: 64, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !485, file: !133, line: 3378, baseType: !575, size: 256)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !133, line: 1418, size: 256, elements: !576)
!576 = !{!577, !578, !579}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !575, file: !133, line: 1419, baseType: !521, size: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !575, file: !133, line: 1420, baseType: !469, size: 32, offset: 192)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !575, file: !133, line: 1421, baseType: !580, size: 8, offset: 224)
!580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 8, elements: !581)
!581 = !{!582}
!582 = !DISubrange(count: 1)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !485, file: !133, line: 3379, baseType: !584, size: 320)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !133, line: 1428, size: 320, elements: !585)
!585 = !{!586, !587, !588}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !584, file: !133, line: 1429, baseType: !521, size: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !584, file: !133, line: 1430, baseType: !482, size: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !584, file: !133, line: 1431, baseType: !482, size: 64, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !485, file: !133, line: 3380, baseType: !590, size: 320)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !133, line: 1460, size: 320, elements: !591)
!591 = !{!592, !593}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !590, file: !133, line: 1461, baseType: !521, size: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !590, file: !133, line: 1462, baseType: !594, size: 128, offset: 192)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !595, line: 31, size: 128, elements: !596)
!595 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!596 = !{!597, !600, !601}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !594, file: !595, line: 32, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !594, file: !595, line: 33, baseType: !5, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !594, file: !595, line: 34, baseType: !5, size: 32, offset: 96)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !485, file: !133, line: 3381, baseType: !603, size: 384)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !133, line: 2507, size: 384, elements: !604)
!604 = !{!605, !606, !611, !612, !613}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !603, file: !133, line: 2508, baseType: !521, size: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !603, file: !133, line: 2509, baseType: !607, size: 32, offset: 192)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !608, line: 58, baseType: !609)
!608 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !610, line: 44, baseType: !5)
!610 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!611 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !603, file: !133, line: 2510, baseType: !5, size: 32, offset: 224)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !603, file: !133, line: 2511, baseType: !482, size: 64, offset: 256)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !603, file: !133, line: 2512, baseType: !482, size: 64, offset: 320)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !485, file: !133, line: 3382, baseType: !615, size: 896)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !133, line: 2652, size: 896, elements: !616)
!616 = !{!617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !615, file: !133, line: 2653, baseType: !603, size: 384)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !615, file: !133, line: 2654, baseType: !482, size: 64, offset: 384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !615, file: !133, line: 2656, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !615, file: !133, line: 2658, baseType: !5, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !615, file: !133, line: 2659, baseType: !5, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !615, file: !133, line: 2660, baseType: !5, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !615, file: !133, line: 2661, baseType: !5, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !615, file: !133, line: 2662, baseType: !5, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !615, file: !133, line: 2663, baseType: !5, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !615, file: !133, line: 2664, baseType: !5, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !615, file: !133, line: 2666, baseType: !5, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !615, file: !133, line: 2667, baseType: !5, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !615, file: !133, line: 2668, baseType: !5, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !615, file: !133, line: 2669, baseType: !5, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !615, file: !133, line: 2670, baseType: !5, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !615, file: !133, line: 2671, baseType: !5, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !615, file: !133, line: 2672, baseType: !5, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !615, file: !133, line: 2673, baseType: !5, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !615, file: !133, line: 2674, baseType: !5, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !615, file: !133, line: 2678, baseType: !5, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !615, file: !133, line: 2682, baseType: !5, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !615, file: !133, line: 2685, baseType: !5, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !615, file: !133, line: 2688, baseType: !5, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !615, file: !133, line: 2690, baseType: !5, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !615, file: !133, line: 2692, baseType: !5, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !615, file: !133, line: 2695, baseType: !5, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !615, file: !133, line: 2698, baseType: !5, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !615, file: !133, line: 2703, baseType: !5, size: 32, offset: 512)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !615, file: !133, line: 2705, baseType: !482, size: 64, offset: 576)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !615, file: !133, line: 2706, baseType: !482, size: 64, offset: 640)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !615, file: !133, line: 2707, baseType: !482, size: 64, offset: 704)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !615, file: !133, line: 2708, baseType: !482, size: 64, offset: 768)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !615, file: !133, line: 2711, baseType: !650, size: 64, offset: 832)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !133, line: 2711, flags: DIFlagFwdDecl)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !485, file: !133, line: 3383, baseType: !653, size: 960)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !133, line: 2756, size: 960, elements: !654)
!654 = !{!655, !656}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !653, file: !133, line: 2757, baseType: !615, size: 896)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !653, file: !133, line: 2758, baseType: !657, size: 64, offset: 896)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !483, line: 50, baseType: !658)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !660, line: 240, size: 384, elements: !661)
!660 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!661 = !{!662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !659, file: !660, line: 242, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !659, file: !660, line: 245, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !659, file: !660, line: 252, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !659, file: !660, line: 257, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !659, file: !660, line: 265, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !659, file: !660, line: 277, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !659, file: !660, line: 291, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !659, file: !660, line: 298, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !659, file: !660, line: 305, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !659, file: !660, line: 310, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !659, file: !660, line: 321, baseType: !673, size: 320, offset: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !660, line: 315, size: 320, elements: !674)
!674 = !{!675, !1129, !1131, !1160, !1161}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !673, file: !660, line: 316, baseType: !676, size: 64)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 64, elements: !581)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !660, line: 183, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !660, line: 166, size: 64, elements: !679)
!679 = !{!680, !681, !682, !683, !684, !692, !693, !705, !708, !768, !769, !1106, !1119, !1126}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !678, file: !660, line: 168, baseType: !469, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !678, file: !660, line: 169, baseType: !5, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !678, file: !660, line: 170, baseType: !474, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !678, file: !660, line: 171, baseType: !657, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !678, file: !660, line: 172, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !483, line: 53, baseType: !686)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !660, line: 359, size: 128, elements: !688)
!688 = !{!689, !690}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !687, file: !660, line: 360, baseType: !469, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !687, file: !660, line: 361, baseType: !691, size: 64, offset: 64)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 64, elements: !581)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !678, file: !660, line: 173, baseType: !3, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !678, file: !660, line: 174, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !660, line: 133, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !660, line: 115, size: 32, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !695, file: !660, line: 118, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !695, file: !660, line: 120, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !695, file: !660, line: 121, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !695, file: !660, line: 123, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !695, file: !660, line: 125, baseType: !5, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !695, file: !660, line: 127, baseType: !5, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !695, file: !660, line: 130, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !695, file: !660, line: 132, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !678, file: !660, line: 175, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !660, line: 175, flags: DIFlagFwdDecl)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !678, file: !660, line: 176, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !711, line: 75, size: 256, elements: !712)
!711 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!712 = !{!713, !727, !728, !729}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !710, file: !711, line: 76, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !711, line: 68, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !711, line: 63, size: 320, elements: !717)
!717 = !{!718, !720, !721, !722}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !716, file: !711, line: 64, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !716, file: !711, line: 65, baseType: !719, size: 64, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !716, file: !711, line: 66, baseType: !5, size: 32, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !716, file: !711, line: 67, baseType: !723, size: 128, offset: 192)
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 128, elements: !725)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !711, line: 29, baseType: !536)
!725 = !{!726}
!726 = !DISubrange(count: 2)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !710, file: !711, line: 77, baseType: !714, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !710, file: !711, line: 78, baseType: !5, size: 32, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !710, file: !711, line: 79, baseType: !730, size: 64, offset: 192)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !711, line: 49, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !711, line: 45, size: 832, elements: !733)
!733 = !{!734, !735, !736}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !732, file: !711, line: 46, baseType: !719, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !732, file: !711, line: 47, baseType: !709, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !732, file: !711, line: 48, baseType: !737, size: 704, offset: 128)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !738, line: 164, size: 704, elements: !739)
!738 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!739 = !{!740, !741, !751, !752, !753, !754, !755, !756, !760, !764, !765, !766, !767}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !737, file: !738, line: 166, baseType: !538, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !737, file: !738, line: 167, baseType: !742, size: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !738, line: 157, size: 192, elements: !744)
!744 = !{!745, !746, !747}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !743, file: !738, line: 159, baseType: !471, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !743, file: !738, line: 160, baseType: !742, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !743, file: !738, line: 161, baseType: !748, size: 32, offset: 128)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 32, elements: !749)
!749 = !{!750}
!750 = !DISubrange(count: 4)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !737, file: !738, line: 168, baseType: !471, size: 64, offset: 128)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !737, file: !738, line: 169, baseType: !471, size: 64, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !737, file: !738, line: 170, baseType: !471, size: 64, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !737, file: !738, line: 171, baseType: !538, size: 64, offset: 320)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !737, file: !738, line: 172, baseType: !469, size: 32, offset: 384)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !737, file: !738, line: 176, baseType: !757, size: 64, offset: 448)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!742, !473, !538}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !737, file: !738, line: 177, baseType: !761, size: 64, offset: 512)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{null, !473, !742}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !737, file: !738, line: 178, baseType: !473, size: 64, offset: 576)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !737, file: !738, line: 179, baseType: !5, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !737, file: !738, line: 180, baseType: !5, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !737, file: !738, line: 184, baseType: !5, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !678, file: !660, line: 177, baseType: !482, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !678, file: !660, line: 178, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !341, line: 217, size: 832, elements: !772)
!772 = !{!773, !1018, !1019, !1020, !1076, !1080, !1081, !1082, !1100, !1101, !1102, !1103, !1104, !1105}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !771, file: !341, line: 219, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !341, line: 151, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !341, line: 151, size: 128, elements: !777)
!777 = !{!778}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !776, file: !341, line: 151, baseType: !779, size: 128)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !341, line: 150, baseType: !780)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !341, line: 150, size: 128, elements: !781)
!781 = !{!782, !783, !784}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !780, file: !341, line: 150, baseType: !5, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !780, file: !341, line: 150, baseType: !5, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !780, file: !341, line: 150, baseType: !785, size: 64, offset: 64)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !786, size: 64, elements: !581)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !483, line: 108, baseType: !787)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !341, line: 122, size: 512, elements: !789)
!789 = !{!790, !791, !792, !1010, !1011, !1012, !1013, !1014, !1015, !1016}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !788, file: !341, line: 124, baseType: !770, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !788, file: !341, line: 125, baseType: !770, size: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !788, file: !341, line: 131, baseType: !793, size: 64, offset: 128)
!793 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !341, line: 128, size: 64, elements: !794)
!794 = !{!795, !1009}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !793, file: !341, line: 129, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !483, line: 66, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !396, line: 143, size: 192, elements: !799)
!799 = !{!800, !1007, !1008}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !798, file: !396, line: 145, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !483, line: 69, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !396, line: 136, size: 192, elements: !804)
!804 = !{!805, !1005, !1006}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !803, file: !396, line: 137, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !483, line: 58, baseType: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !396, line: 737, size: 768, elements: !809)
!809 = !{!810, !827, !860, !866, !871, !876, !883, !889, !895, !900, !914, !919, !925, !930, !940, !945, !963, !970, !977, !983, !988, !994, !1000}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !808, file: !396, line: 738, baseType: !811, size: 256)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !396, line: 271, size: 256, elements: !812)
!812 = !{!813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !811, file: !396, line: 274, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !811, file: !396, line: 277, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !811, file: !396, line: 281, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !811, file: !396, line: 284, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !811, file: !396, line: 291, baseType: !5, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !811, file: !396, line: 295, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !811, file: !396, line: 298, baseType: !5, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !811, file: !396, line: 301, baseType: !5, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !811, file: !396, line: 307, baseType: !5, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !811, file: !396, line: 312, baseType: !5, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !811, file: !396, line: 316, baseType: !607, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !811, file: !396, line: 319, baseType: !5, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !811, file: !396, line: 323, baseType: !770, size: 64, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !811, file: !396, line: 327, baseType: !482, size: 64, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !808, file: !396, line: 739, baseType: !828, size: 448)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !396, line: 350, size: 448, elements: !829)
!829 = !{!830, !858}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !828, file: !396, line: 353, baseType: !831, size: 384)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !396, line: 333, size: 384, elements: !832)
!832 = !{!833, !834, !841}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !831, file: !396, line: 336, baseType: !811, size: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !831, file: !396, line: 343, baseType: !835, size: 64, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !389, line: 37, size: 128, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !836, file: !389, line: 39, baseType: !835, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !836, file: !389, line: 40, baseType: !840, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !831, file: !396, line: 344, baseType: !842, size: 64, offset: 320)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !389, line: 45, size: 320, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !843, file: !389, line: 47, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !843, file: !389, line: 48, baseType: !847, size: 256, offset: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !133, line: 1883, size: 256, elements: !848)
!848 = !{!849, !851, !852, !857}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !847, file: !133, line: 1884, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !847, file: !133, line: 1885, baseType: !850, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !847, file: !133, line: 1891, baseType: !853, size: 64, offset: 128)
!853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !847, file: !133, line: 1891, size: 64, elements: !854)
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !853, file: !133, line: 1891, baseType: !806, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !853, file: !133, line: 1891, baseType: !482, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !847, file: !133, line: 1892, baseType: !840, size: 64, offset: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !828, file: !396, line: 359, baseType: !859, size: 64, offset: 384)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 64, elements: !581)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !808, file: !396, line: 740, baseType: !861, size: 512)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !396, line: 365, size: 512, elements: !862)
!862 = !{!863, !864, !865}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !861, file: !396, line: 368, baseType: !831, size: 384)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !861, file: !396, line: 373, baseType: !482, size: 64, offset: 384)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !861, file: !396, line: 374, baseType: !482, size: 64, offset: 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !808, file: !396, line: 741, baseType: !867, size: 576)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !396, line: 380, size: 576, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !867, file: !396, line: 383, baseType: !861, size: 512)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !867, file: !396, line: 389, baseType: !859, size: 64, offset: 512)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !808, file: !396, line: 742, baseType: !872, size: 320)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !396, line: 395, size: 320, elements: !873)
!873 = !{!874, !875}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !872, file: !396, line: 397, baseType: !811, size: 256)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !872, file: !396, line: 400, baseType: !796, size: 64, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !808, file: !396, line: 743, baseType: !877, size: 448)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !396, line: 406, size: 448, elements: !878)
!878 = !{!879, !880, !881, !882}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !877, file: !396, line: 408, baseType: !811, size: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !877, file: !396, line: 412, baseType: !482, size: 64, offset: 256)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !877, file: !396, line: 420, baseType: !482, size: 64, offset: 320)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !877, file: !396, line: 423, baseType: !796, size: 64, offset: 384)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !808, file: !396, line: 744, baseType: !884, size: 384)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !396, line: 429, size: 384, elements: !885)
!885 = !{!886, !887, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !884, file: !396, line: 431, baseType: !811, size: 256)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !884, file: !396, line: 434, baseType: !482, size: 64, offset: 256)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !884, file: !396, line: 437, baseType: !796, size: 64, offset: 320)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !808, file: !396, line: 745, baseType: !890, size: 384)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !396, line: 443, size: 384, elements: !891)
!891 = !{!892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !890, file: !396, line: 445, baseType: !811, size: 256)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !890, file: !396, line: 449, baseType: !482, size: 64, offset: 256)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !890, file: !396, line: 453, baseType: !796, size: 64, offset: 320)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !808, file: !396, line: 746, baseType: !896, size: 320)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !396, line: 459, size: 320, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !896, file: !396, line: 461, baseType: !811, size: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !896, file: !396, line: 464, baseType: !482, size: 64, offset: 256)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !808, file: !396, line: 747, baseType: !901, size: 768)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !396, line: 469, size: 768, elements: !902)
!902 = !{!903, !904, !905, !906, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !901, file: !396, line: 471, baseType: !811, size: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !901, file: !396, line: 474, baseType: !5, size: 32, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !901, file: !396, line: 475, baseType: !5, size: 32, offset: 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !901, file: !396, line: 478, baseType: !482, size: 64, offset: 320)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !901, file: !396, line: 481, baseType: !908, size: 384, offset: 384)
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 384, elements: !581)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !133, line: 1917, size: 384, elements: !910)
!910 = !{!911, !912, !913}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !909, file: !133, line: 1920, baseType: !847, size: 256)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !909, file: !133, line: 1921, baseType: !482, size: 64, offset: 256)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !909, file: !133, line: 1922, baseType: !607, size: 32, offset: 320)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !808, file: !396, line: 748, baseType: !915, size: 320)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !396, line: 487, size: 320, elements: !916)
!916 = !{!917, !918}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !915, file: !396, line: 490, baseType: !811, size: 256)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !915, file: !396, line: 494, baseType: !469, size: 32, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !808, file: !396, line: 749, baseType: !920, size: 384)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !396, line: 500, size: 384, elements: !921)
!921 = !{!922, !923, !924}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !920, file: !396, line: 502, baseType: !811, size: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !920, file: !396, line: 506, baseType: !796, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !920, file: !396, line: 510, baseType: !796, size: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !808, file: !396, line: 750, baseType: !926, size: 320)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !396, line: 529, size: 320, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !926, file: !396, line: 531, baseType: !811, size: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !926, file: !396, line: 540, baseType: !796, size: 64, offset: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !808, file: !396, line: 751, baseType: !931, size: 704)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !396, line: 546, size: 704, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938, !939}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !931, file: !396, line: 549, baseType: !861, size: 512)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !931, file: !396, line: 553, baseType: !474, size: 64, offset: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !931, file: !396, line: 557, baseType: !468, size: 8, offset: 576)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !931, file: !396, line: 558, baseType: !468, size: 8, offset: 584)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !931, file: !396, line: 559, baseType: !468, size: 8, offset: 592)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !931, file: !396, line: 560, baseType: !468, size: 8, offset: 600)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !931, file: !396, line: 566, baseType: !859, size: 64, offset: 640)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !808, file: !396, line: 752, baseType: !941, size: 384)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !396, line: 571, size: 384, elements: !942)
!942 = !{!943, !944}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !941, file: !396, line: 573, baseType: !872, size: 320)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !941, file: !396, line: 577, baseType: !482, size: 64, offset: 320)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !808, file: !396, line: 753, baseType: !946, size: 576)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !396, line: 600, size: 576, elements: !947)
!947 = !{!948, !949, !950, !953, !962}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !946, file: !396, line: 602, baseType: !872, size: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !946, file: !396, line: 605, baseType: !482, size: 64, offset: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !946, file: !396, line: 609, baseType: !951, size: 64, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !952, line: 46, baseType: !536)
!952 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!953 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !946, file: !396, line: 612, baseType: !954, size: 64, offset: 448)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !396, line: 581, size: 320, elements: !956)
!956 = !{!957, !958, !959, !960, !961}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !955, file: !396, line: 583, baseType: !132, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !955, file: !396, line: 586, baseType: !482, size: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !955, file: !396, line: 589, baseType: !482, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !955, file: !396, line: 592, baseType: !482, size: 64, offset: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !955, file: !396, line: 595, baseType: !482, size: 64, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !946, file: !396, line: 616, baseType: !796, size: 64, offset: 512)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !808, file: !396, line: 754, baseType: !964, size: 512)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !396, line: 622, size: 512, elements: !965)
!965 = !{!966, !967, !968, !969}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !964, file: !396, line: 624, baseType: !872, size: 320)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !964, file: !396, line: 628, baseType: !482, size: 64, offset: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !964, file: !396, line: 632, baseType: !482, size: 64, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !964, file: !396, line: 636, baseType: !482, size: 64, offset: 448)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !808, file: !396, line: 755, baseType: !971, size: 704)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !396, line: 642, size: 704, elements: !972)
!972 = !{!973, !974, !975, !976}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !971, file: !396, line: 644, baseType: !964, size: 512)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !971, file: !396, line: 648, baseType: !482, size: 64, offset: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !971, file: !396, line: 652, baseType: !482, size: 64, offset: 576)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !971, file: !396, line: 653, baseType: !482, size: 64, offset: 640)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !808, file: !396, line: 756, baseType: !978, size: 448)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !396, line: 663, size: 448, elements: !979)
!979 = !{!980, !981, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !978, file: !396, line: 665, baseType: !872, size: 320)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !978, file: !396, line: 668, baseType: !482, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !978, file: !396, line: 673, baseType: !482, size: 64, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !808, file: !396, line: 757, baseType: !984, size: 384)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !396, line: 694, size: 384, elements: !985)
!985 = !{!986, !987}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !984, file: !396, line: 696, baseType: !872, size: 320)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !984, file: !396, line: 699, baseType: !482, size: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !808, file: !396, line: 758, baseType: !989, size: 384)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !396, line: 681, size: 384, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !989, file: !396, line: 683, baseType: !811, size: 256)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !989, file: !396, line: 686, baseType: !482, size: 64, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !989, file: !396, line: 689, baseType: !482, size: 64, offset: 320)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !808, file: !396, line: 759, baseType: !995, size: 384)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !396, line: 707, size: 384, elements: !996)
!996 = !{!997, !998, !999}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !995, file: !396, line: 709, baseType: !811, size: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !995, file: !396, line: 712, baseType: !482, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !995, file: !396, line: 712, baseType: !482, size: 64, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !808, file: !396, line: 760, baseType: !1001, size: 320)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !396, line: 718, size: 320, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1001, file: !396, line: 720, baseType: !811, size: 256)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1001, file: !396, line: 723, baseType: !482, size: 64, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !803, file: !396, line: 138, baseType: !802, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !803, file: !396, line: 139, baseType: !802, size: 64, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !798, file: !396, line: 146, baseType: !801, size: 64, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !798, file: !396, line: 152, baseType: !796, size: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !793, file: !341, line: 130, baseType: !657, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !788, file: !341, line: 134, baseType: !473, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !788, file: !341, line: 137, baseType: !482, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !788, file: !341, line: 138, baseType: !607, size: 32, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !788, file: !341, line: 142, baseType: !5, size: 32, offset: 352)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !788, file: !341, line: 144, baseType: !469, size: 32, offset: 384)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !788, file: !341, line: 145, baseType: !469, size: 32, offset: 416)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !788, file: !341, line: 146, baseType: !1017, size: 64, offset: 448)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !341, line: 119, baseType: !538)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !771, file: !341, line: 220, baseType: !774, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !771, file: !341, line: 223, baseType: !473, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !771, file: !341, line: 226, baseType: !1021, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !328, line: 100, size: 1216, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027, !1028, !1033, !1034, !1035, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1066, !1074, !1075}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1022, file: !328, line: 102, baseType: !469, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1022, file: !328, line: 105, baseType: !5, size: 32, offset: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1022, file: !328, line: 108, baseType: !770, size: 64, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1022, file: !328, line: 111, baseType: !770, size: 64, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1022, file: !328, line: 114, baseType: !1029, size: 64, offset: 192)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !328, line: 41, size: 64, elements: !1030)
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1029, file: !328, line: 42, baseType: !327, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1029, file: !328, line: 43, baseType: !5, size: 32, offset: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1022, file: !328, line: 117, baseType: !5, size: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1022, file: !328, line: 120, baseType: !5, size: 32, offset: 288)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1022, file: !328, line: 123, baseType: !1036, size: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !328, line: 87, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !328, line: 87, size: 128, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1038, file: !328, line: 87, baseType: !1041, size: 128)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !328, line: 85, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !328, line: 85, size: 128, elements: !1043)
!1043 = !{!1044, !1045, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1042, file: !328, line: 85, baseType: !5, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1042, file: !328, line: 85, baseType: !5, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1042, file: !328, line: 85, baseType: !1047, size: 64, offset: 64)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1048, size: 64, elements: !581)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !328, line: 84, baseType: !1021)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1022, file: !328, line: 126, baseType: !1021, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1022, file: !328, line: 129, baseType: !1021, size: 64, offset: 448)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1022, file: !328, line: 132, baseType: !473, size: 64, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1022, file: !328, line: 139, baseType: !482, size: 64, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1022, file: !328, line: 143, baseType: !531, size: 128, offset: 640)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1022, file: !328, line: 146, baseType: !531, size: 128, offset: 768)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1022, file: !328, line: 148, baseType: !468, size: 8, offset: 896)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1022, file: !328, line: 149, baseType: !468, size: 8, offset: 904)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1022, file: !328, line: 153, baseType: !336, size: 32, offset: 928)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1022, file: !328, line: 156, baseType: !1059, size: 64, offset: 960)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !328, line: 48, size: 320, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1060, file: !328, line: 50, baseType: !806, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1060, file: !328, line: 59, baseType: !531, size: 128, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1060, file: !328, line: 64, baseType: !468, size: 8, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1060, file: !328, line: 67, baseType: !1059, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1022, file: !328, line: 159, baseType: !1067, size: 64, offset: 1024)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !328, line: 72, size: 256, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1068, file: !328, line: 74, baseType: !787, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1068, file: !328, line: 77, baseType: !1067, size: 64, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1068, file: !328, line: 78, baseType: !1067, size: 64, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1068, file: !328, line: 81, baseType: !1067, size: 64, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1022, file: !328, line: 162, baseType: !468, size: 8, offset: 1088)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1022, file: !328, line: 166, baseType: !482, size: 64, offset: 1152)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !771, file: !341, line: 229, baseType: !1077, size: 128, offset: 256)
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 128, elements: !725)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !341, line: 229, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !771, file: !341, line: 232, baseType: !770, size: 64, offset: 384)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !771, file: !341, line: 233, baseType: !770, size: 64, offset: 448)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !771, file: !341, line: 238, baseType: !1083, size: 64, offset: 512)
!1083 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !341, line: 235, size: 64, elements: !1084)
!1084 = !{!1085, !1091}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1083, file: !341, line: 236, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !341, line: 273, size: 128, elements: !1088)
!1088 = !{!1089, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1087, file: !341, line: 275, baseType: !796, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1087, file: !341, line: 278, baseType: !796, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1083, file: !341, line: 237, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !341, line: 259, size: 320, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1093, file: !341, line: 261, baseType: !657, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1093, file: !341, line: 262, baseType: !657, size: 64, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1093, file: !341, line: 266, baseType: !657, size: 64, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1093, file: !341, line: 267, baseType: !657, size: 64, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1093, file: !341, line: 270, baseType: !469, size: 32, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !771, file: !341, line: 241, baseType: !1017, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !771, file: !341, line: 244, baseType: !469, size: 32, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !771, file: !341, line: 247, baseType: !469, size: 32, offset: 672)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !771, file: !341, line: 250, baseType: !469, size: 32, offset: 704)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !771, file: !341, line: 253, baseType: !469, size: 32, offset: 736)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !771, file: !341, line: 256, baseType: !469, size: 32, offset: 768)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !678, file: !660, line: 179, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !660, line: 150, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !660, line: 142, size: 320, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1117, !1118}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1109, file: !660, line: 144, baseType: !482, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1109, file: !660, line: 145, baseType: !657, size: 64, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1109, file: !660, line: 146, baseType: !657, size: 64, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1109, file: !660, line: 147, baseType: !1115, size: 32, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1116, line: 31, baseType: !469)
!1116 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1109, file: !660, line: 148, baseType: !5, size: 32, offset: 224)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1109, file: !660, line: 149, baseType: !468, size: 8, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !678, file: !660, line: 180, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !660, line: 162, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !660, line: 159, size: 128, elements: !1123)
!1123 = !{!1124, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1122, file: !660, line: 160, baseType: !482, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1122, file: !660, line: 161, baseType: !538, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !678, file: !660, line: 181, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !660, line: 181, flags: DIFlagFwdDecl)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !673, file: !660, line: 317, baseType: !1130, size: 64)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 64, elements: !581)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !673, file: !660, line: 318, baseType: !1132, size: 320)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !660, line: 188, size: 320, elements: !1133)
!1133 = !{!1134, !1136, !1159}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1132, file: !660, line: 190, baseType: !1135, size: 192)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !556)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1132, file: !660, line: 193, baseType: !1137, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !660, line: 206, size: 320, elements: !1139)
!1139 = !{!1140, !1144, !1145, !1146, !1158}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1138, file: !660, line: 208, baseType: !1141, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !483, line: 62, baseType: !1143)
!1143 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !483, line: 61, flags: DIFlagFwdDecl)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1138, file: !660, line: 211, baseType: !5, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !660, line: 214, baseType: !538, size: 64, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1138, file: !660, line: 224, baseType: !1147, size: 64, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !660, line: 202, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !660, line: 202, size: 128, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1149, file: !660, line: 202, baseType: !1152, size: 128)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !660, line: 200, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !660, line: 200, size: 128, elements: !1154)
!1154 = !{!1155, !1156, !1157}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1153, file: !660, line: 200, baseType: !5, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1153, file: !660, line: 200, baseType: !5, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1153, file: !660, line: 200, baseType: !691, size: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1138, file: !660, line: 234, baseType: !1147, size: 64, offset: 256)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1132, file: !660, line: 197, baseType: !538, size: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !673, file: !660, line: 319, baseType: !545, size: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !673, file: !660, line: 320, baseType: !564, size: 192)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !485, file: !133, line: 3384, baseType: !1163, size: 1472)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !133, line: 3114, size: 1472, elements: !1164)
!1164 = !{!1165, !1186, !1187, !1188, !1189}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1163, file: !133, line: 3115, baseType: !1166, size: 1216)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !133, line: 2984, size: 1216, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1166, file: !133, line: 2985, baseType: !653, size: 960)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1166, file: !133, line: 2986, baseType: !482, size: 64, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1166, file: !133, line: 2987, baseType: !482, size: 64, offset: 1024)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1166, file: !133, line: 2988, baseType: !482, size: 64, offset: 1088)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1166, file: !133, line: 2991, baseType: !5, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1166, file: !133, line: 2992, baseType: !5, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1166, file: !133, line: 2993, baseType: !5, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1166, file: !133, line: 2994, baseType: !5, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1166, file: !133, line: 2995, baseType: !5, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1166, file: !133, line: 2996, baseType: !5, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1166, file: !133, line: 2998, baseType: !5, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1166, file: !133, line: 3000, baseType: !5, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1166, file: !133, line: 3002, baseType: !5, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1166, file: !133, line: 3003, baseType: !5, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1166, file: !133, line: 3004, baseType: !5, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1166, file: !133, line: 3005, baseType: !5, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1166, file: !133, line: 3007, baseType: !5, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1166, file: !133, line: 3010, baseType: !5, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1163, file: !133, line: 3117, baseType: !482, size: 64, offset: 1216)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1163, file: !133, line: 3119, baseType: !482, size: 64, offset: 1280)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1163, file: !133, line: 3121, baseType: !482, size: 64, offset: 1344)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1163, file: !133, line: 3123, baseType: !482, size: 64, offset: 1408)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !485, file: !133, line: 3385, baseType: !1191, size: 1088)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !133, line: 2874, size: 1088, elements: !1192)
!1192 = !{!1193, !1194, !1195}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1191, file: !133, line: 2875, baseType: !653, size: 960)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1191, file: !133, line: 2876, baseType: !657, size: 64, offset: 960)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1191, file: !133, line: 2877, baseType: !1196, size: 64, offset: 1024)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1198, line: 172, size: 128, elements: !1199)
!1198 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1197, file: !1198, line: 174, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1197, file: !1198, line: 178, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1197, file: !1198, line: 183, baseType: !5, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1197, file: !1198, line: 187, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1197, file: !1198, line: 192, baseType: !5, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1197, file: !1198, line: 195, baseType: !5, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1197, file: !1198, line: 199, baseType: !482, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !485, file: !133, line: 3386, baseType: !1166, size: 1216)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !485, file: !133, line: 3387, baseType: !1209, size: 1280)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !133, line: 3093, size: 1280, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1209, file: !133, line: 3094, baseType: !1166, size: 1216)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1209, file: !133, line: 3095, baseType: !1196, size: 64, offset: 1216)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !485, file: !133, line: 3388, baseType: !1214, size: 1216)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !133, line: 2824, size: 1216, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1214, file: !133, line: 2825, baseType: !615, size: 896)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1214, file: !133, line: 2827, baseType: !482, size: 64, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1214, file: !133, line: 2828, baseType: !482, size: 64, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1214, file: !133, line: 2829, baseType: !482, size: 64, offset: 1024)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1214, file: !133, line: 2830, baseType: !482, size: 64, offset: 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1214, file: !133, line: 2831, baseType: !482, size: 64, offset: 1152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !485, file: !133, line: 3389, baseType: !1223, size: 1024)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !133, line: 2850, size: 1024, elements: !1224)
!1224 = !{!1225, !1226, !1227}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1223, file: !133, line: 2851, baseType: !653, size: 960)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1223, file: !133, line: 2852, baseType: !469, size: 32, offset: 960)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1223, file: !133, line: 2853, baseType: !469, size: 32, offset: 992)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !485, file: !133, line: 3390, baseType: !1229, size: 1024)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !133, line: 2857, size: 1024, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1229, file: !133, line: 2858, baseType: !653, size: 960)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1229, file: !133, line: 2859, baseType: !1196, size: 64, offset: 960)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !485, file: !133, line: 3391, baseType: !1234, size: 960)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !133, line: 2862, size: 960, elements: !1235)
!1235 = !{!1236}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1234, file: !133, line: 2863, baseType: !653, size: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !485, file: !133, line: 3392, baseType: !1238, size: 1472)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !133, line: 3304, size: 1472, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1238, file: !133, line: 3305, baseType: !1163, size: 1472)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !485, file: !133, line: 3393, baseType: !1242, size: 1792)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !133, line: 3248, size: 1792, elements: !1243)
!1243 = !{!1244, !1245, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1242, file: !133, line: 3249, baseType: !1163, size: 1472)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1242, file: !133, line: 3251, baseType: !1246, size: 64, offset: 1472)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1248, line: 463, size: 1152, elements: !1249)
!1248 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1249 = !{!1250, !1253, !1284, !1285, !1400, !1408, !1409, !1410, !1411, !1412, !1413, !1437, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1247, file: !1248, line: 464, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1248, line: 464, flags: DIFlagFwdDecl)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1247, file: !1248, line: 467, baseType: !1254, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !341, line: 374, size: 640, elements: !1256)
!1256 = !{!1257, !1259, !1260, !1273, !1274, !1275, !1276, !1277, !1278, !1280, !1282, !1283}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1255, file: !341, line: 377, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !483, line: 111, baseType: !770)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1255, file: !341, line: 378, baseType: !1258, size: 64, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1255, file: !341, line: 381, baseType: !1261, size: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !341, line: 282, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !341, line: 282, size: 128, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1263, file: !341, line: 282, baseType: !1266, size: 128)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !341, line: 281, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !341, line: 281, size: 128, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1267, file: !341, line: 281, baseType: !5, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1267, file: !341, line: 281, baseType: !5, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1267, file: !341, line: 281, baseType: !1272, size: 64, offset: 64)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 64, elements: !581)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1255, file: !341, line: 384, baseType: !469, size: 32, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1255, file: !341, line: 387, baseType: !469, size: 32, offset: 224)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1255, file: !341, line: 390, baseType: !469, size: 32, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1255, file: !341, line: 394, baseType: !1261, size: 64, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1255, file: !341, line: 396, baseType: !340, size: 32, offset: 384)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1255, file: !341, line: 399, baseType: !1279, size: 64, offset: 416)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 64, elements: !725)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1255, file: !341, line: 402, baseType: !1281, size: 64, offset: 480)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !725)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1255, file: !341, line: 406, baseType: !469, size: 32, offset: 544)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1255, file: !341, line: 409, baseType: !469, size: 32, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1247, file: !1248, line: 470, baseType: !797, size: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1247, file: !1248, line: 473, baseType: !1286, size: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1198, line: 39, size: 1152, elements: !1288)
!1288 = !{!1289, !1339, !1352, !1364, !1365, !1377, !1378, !1382, !1383, !1384, !1385, !1386}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1287, file: !1198, line: 41, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1291, line: 144, baseType: !1292)
!1291 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1291, line: 100, size: 896, elements: !1294)
!1294 = !{!1295, !1303, !1308, !1313, !1315, !1316, !1317, !1318, !1319, !1320, !1325, !1327, !1328, !1333, !1338}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1293, file: !1291, line: 102, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1291, line: 52, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!1300, !1301}
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1291, line: 47, baseType: !5)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1293, file: !1291, line: 105, baseType: !1304, size: 64, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1291, line: 59, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!469, !1301, !1301}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1293, file: !1291, line: 108, baseType: !1309, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1291, line: 63, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !473}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1293, file: !1291, line: 111, baseType: !1314, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1293, file: !1291, line: 114, baseType: !951, size: 64, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1293, file: !1291, line: 117, baseType: !951, size: 64, offset: 320)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1293, file: !1291, line: 120, baseType: !951, size: 64, offset: 384)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1293, file: !1291, line: 124, baseType: !5, size: 32, offset: 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1293, file: !1291, line: 128, baseType: !5, size: 32, offset: 480)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1293, file: !1291, line: 131, baseType: !1321, size: 64, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1291, line: 75, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!473, !951, !951}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1293, file: !1291, line: 132, baseType: !1326, size: 64, offset: 576)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1291, line: 78, baseType: !1310)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1293, file: !1291, line: 135, baseType: !473, size: 64, offset: 640)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1293, file: !1291, line: 136, baseType: !1329, size: 64, offset: 704)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1291, line: 82, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!473, !473, !951, !951}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1293, file: !1291, line: 137, baseType: !1334, size: 64, offset: 768)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1291, line: 83, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{null, !473, !473}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1293, file: !1291, line: 141, baseType: !5, size: 32, offset: 832)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1287, file: !1198, line: 48, baseType: !1340, size: 64, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !396, line: 35, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !396, line: 35, size: 128, elements: !1343)
!1343 = !{!1344}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1342, file: !396, line: 35, baseType: !1345, size: 128)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !396, line: 33, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !396, line: 33, size: 128, elements: !1347)
!1347 = !{!1348, !1349, !1350}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1346, file: !396, line: 33, baseType: !5, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1346, file: !396, line: 33, baseType: !5, size: 32, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1346, file: !396, line: 33, baseType: !1351, size: 64, offset: 64)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 64, elements: !581)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1287, file: !1198, line: 51, baseType: !1353, size: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !133, line: 183, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !133, line: 183, size: 128, elements: !1356)
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1355, file: !133, line: 183, baseType: !1358, size: 128)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !133, line: 182, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !133, line: 182, size: 128, elements: !1360)
!1360 = !{!1361, !1362, !1363}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1359, file: !133, line: 182, baseType: !5, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1359, file: !133, line: 182, baseType: !5, size: 32, offset: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1359, file: !133, line: 182, baseType: !859, size: 64, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1287, file: !1198, line: 54, baseType: !482, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1287, file: !1198, line: 57, baseType: !1366, size: 128, offset: 256)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1367, line: 31, size: 128, elements: !1368)
!1367 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1366, file: !1367, line: 35, baseType: !5, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1366, file: !1367, line: 39, baseType: !5, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1366, file: !1367, line: 42, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1366, file: !1367, line: 46, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1366, file: !1367, line: 50, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1366, file: !1367, line: 53, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1366, file: !1367, line: 56, baseType: !1376, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !483, line: 47, baseType: !709)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1287, file: !1198, line: 60, baseType: !1366, size: 128, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1287, file: !1198, line: 64, baseType: !1379, size: 64, offset: 512)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1381, line: 33, flags: DIFlagFwdDecl)
!1381 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1287, file: !1198, line: 67, baseType: !482, size: 64, offset: 576)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1287, file: !1198, line: 73, baseType: !1290, size: 64, offset: 640)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1287, file: !1198, line: 77, baseType: !1376, size: 64, offset: 704)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1287, file: !1198, line: 80, baseType: !5, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1287, file: !1198, line: 82, baseType: !1387, size: 320, offset: 832)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !389, line: 62, size: 320, elements: !1388)
!1388 = !{!1389, !1395, !1396, !1397, !1398, !1399}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1387, file: !389, line: 63, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !389, line: 56, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !389, line: 57, baseType: !1390, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1391, file: !389, line: 58, baseType: !580, size: 8, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1387, file: !389, line: 64, baseType: !5, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1387, file: !389, line: 66, baseType: !5, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1387, file: !389, line: 68, baseType: !468, size: 8, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1387, file: !389, line: 70, baseType: !835, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1387, file: !389, line: 71, baseType: !842, size: 64, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1247, file: !1248, line: 476, baseType: !1401, size: 64, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !328, line: 187, size: 256, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1402, file: !328, line: 189, baseType: !469, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1402, file: !328, line: 192, baseType: !1036, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1402, file: !328, line: 197, baseType: !1290, size: 64, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1402, file: !328, line: 200, baseType: !1021, size: 64, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1247, file: !1248, line: 479, baseType: !1290, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1247, file: !1248, line: 484, baseType: !482, size: 64, offset: 384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1247, file: !1248, line: 488, baseType: !482, size: 64, offset: 448)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1247, file: !1248, line: 493, baseType: !482, size: 64, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1247, file: !1248, line: 496, baseType: !482, size: 64, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1247, file: !1248, line: 501, baseType: !1414, size: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !352, line: 2355, size: 576, elements: !1416)
!1416 = !{!1417, !1420, !1421, !1422, !1423, !1425, !1426, !1431, !1432, !1433, !1434, !1435, !1436}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1415, file: !352, line: 2356, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !352, line: 2356, flags: DIFlagFwdDecl)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1415, file: !352, line: 2357, baseType: !474, size: 64, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1415, file: !352, line: 2358, baseType: !469, size: 32, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1415, file: !352, line: 2359, baseType: !469, size: 32, offset: 160)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1415, file: !352, line: 2360, baseType: !1424, size: 128, offset: 192)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 128, elements: !749)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1415, file: !352, line: 2364, baseType: !469, size: 32, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1415, file: !352, line: 2367, baseType: !1427, size: 128, offset: 384)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !352, line: 2349, size: 128, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1427, file: !352, line: 2351, baseType: !657, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1427, file: !352, line: 2352, baseType: !538, size: 64, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1415, file: !352, line: 2371, baseType: !351, size: 32, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1415, file: !352, line: 2374, baseType: !5, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1415, file: !352, line: 2377, baseType: !5, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1415, file: !352, line: 2381, baseType: !5, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1415, file: !352, line: 2392, baseType: !5, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1415, file: !352, line: 2396, baseType: !5, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1247, file: !1248, line: 504, baseType: !1438, size: 64, offset: 704)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1248, line: 504, flags: DIFlagFwdDecl)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1247, file: !1248, line: 507, baseType: !1290, size: 64, offset: 768)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1247, file: !1248, line: 510, baseType: !469, size: 32, offset: 832)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1247, file: !1248, line: 513, baseType: !469, size: 32, offset: 864)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1247, file: !1248, line: 516, baseType: !607, size: 32, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1247, file: !1248, line: 519, baseType: !607, size: 32, offset: 928)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1247, file: !1248, line: 522, baseType: !5, size: 32, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1247, file: !1248, line: 523, baseType: !5, size: 32, offset: 992)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1247, file: !1248, line: 528, baseType: !474, size: 64, offset: 1024)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1247, file: !1248, line: 535, baseType: !5, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1247, file: !1248, line: 539, baseType: !5, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1247, file: !1248, line: 543, baseType: !5, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1247, file: !1248, line: 546, baseType: !5, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1247, file: !1248, line: 550, baseType: !5, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1247, file: !1248, line: 554, baseType: !5, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1247, file: !1248, line: 559, baseType: !5, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1247, file: !1248, line: 562, baseType: !5, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1247, file: !1248, line: 571, baseType: !5, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1247, file: !1248, line: 573, baseType: !5, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1247, file: !1248, line: 574, baseType: !5, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1247, file: !1248, line: 581, baseType: !5, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1247, file: !1248, line: 585, baseType: !5, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1247, file: !1248, line: 588, baseType: !5, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1247, file: !1248, line: 592, baseType: !5, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1247, file: !1248, line: 598, baseType: !5, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1242, file: !133, line: 3254, baseType: !482, size: 64, offset: 1536)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1242, file: !133, line: 3257, baseType: !482, size: 64, offset: 1600)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1242, file: !133, line: 3258, baseType: !482, size: 64, offset: 1664)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1242, file: !133, line: 3264, baseType: !5, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1242, file: !133, line: 3265, baseType: !5, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1242, file: !133, line: 3267, baseType: !5, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1242, file: !133, line: 3268, baseType: !5, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1242, file: !133, line: 3269, baseType: !5, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1242, file: !133, line: 3271, baseType: !5, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1242, file: !133, line: 3272, baseType: !5, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1242, file: !133, line: 3273, baseType: !5, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1242, file: !133, line: 3274, baseType: !5, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1242, file: !133, line: 3275, baseType: !5, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1242, file: !133, line: 3276, baseType: !5, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1242, file: !133, line: 3277, baseType: !5, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1242, file: !133, line: 3279, baseType: !5, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1242, file: !133, line: 3280, baseType: !5, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1242, file: !133, line: 3281, baseType: !5, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1242, file: !133, line: 3282, baseType: !5, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1242, file: !133, line: 3283, baseType: !5, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1242, file: !133, line: 3284, baseType: !5, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !485, file: !133, line: 3394, baseType: !1486, size: 1344)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !133, line: 2279, size: 1344, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1486, file: !133, line: 2280, baseType: !521, size: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1486, file: !133, line: 2281, baseType: !482, size: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1486, file: !133, line: 2282, baseType: !482, size: 64, offset: 256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1486, file: !133, line: 2283, baseType: !482, size: 64, offset: 320)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1486, file: !133, line: 2284, baseType: !482, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1486, file: !133, line: 2285, baseType: !5, size: 32, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1486, file: !133, line: 2287, baseType: !5, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1486, file: !133, line: 2288, baseType: !5, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1486, file: !133, line: 2289, baseType: !5, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1486, file: !133, line: 2290, baseType: !5, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1486, file: !133, line: 2291, baseType: !5, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1486, file: !133, line: 2292, baseType: !5, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1486, file: !133, line: 2294, baseType: !5, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1486, file: !133, line: 2296, baseType: !5, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1486, file: !133, line: 2297, baseType: !5, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1486, file: !133, line: 2298, baseType: !5, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1486, file: !133, line: 2299, baseType: !5, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1486, file: !133, line: 2300, baseType: !5, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1486, file: !133, line: 2301, baseType: !5, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1486, file: !133, line: 2302, baseType: !5, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1486, file: !133, line: 2303, baseType: !5, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1486, file: !133, line: 2305, baseType: !5, size: 32, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1486, file: !133, line: 2306, baseType: !1115, size: 32, offset: 544)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1486, file: !133, line: 2307, baseType: !482, size: 64, offset: 576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1486, file: !133, line: 2308, baseType: !482, size: 64, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1486, file: !133, line: 2314, baseType: !1514, size: 64, offset: 704)
!1514 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !133, line: 2309, size: 64, elements: !1515)
!1515 = !{!1516, !1517, !1518}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1514, file: !133, line: 2310, baseType: !469, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1514, file: !133, line: 2311, baseType: !474, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1514, file: !133, line: 2312, baseType: !1519, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !133, line: 2277, flags: DIFlagFwdDecl)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1486, file: !133, line: 2315, baseType: !482, size: 64, offset: 768)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1486, file: !133, line: 2316, baseType: !482, size: 64, offset: 832)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1486, file: !133, line: 2317, baseType: !482, size: 64, offset: 896)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1486, file: !133, line: 2318, baseType: !482, size: 64, offset: 960)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1486, file: !133, line: 2319, baseType: !482, size: 64, offset: 1024)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1486, file: !133, line: 2320, baseType: !482, size: 64, offset: 1088)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1486, file: !133, line: 2321, baseType: !482, size: 64, offset: 1152)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1486, file: !133, line: 2322, baseType: !482, size: 64, offset: 1216)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1486, file: !133, line: 2324, baseType: !1530, size: 64, offset: 1280)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !133, line: 2324, flags: DIFlagFwdDecl)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !485, file: !133, line: 3395, baseType: !1533, size: 320)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !133, line: 1469, size: 320, elements: !1534)
!1534 = !{!1535, !1536, !1537}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1533, file: !133, line: 1470, baseType: !521, size: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1533, file: !133, line: 1471, baseType: !482, size: 64, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1533, file: !133, line: 1472, baseType: !482, size: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !485, file: !133, line: 3396, baseType: !1539, size: 320)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !133, line: 1482, size: 320, elements: !1540)
!1540 = !{!1541, !1542, !1543}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1539, file: !133, line: 1483, baseType: !521, size: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1539, file: !133, line: 1484, baseType: !469, size: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1539, file: !133, line: 1485, baseType: !859, size: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !485, file: !133, line: 3397, baseType: !1545, size: 384)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !133, line: 1829, size: 384, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1545, file: !133, line: 1830, baseType: !521, size: 192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1545, file: !133, line: 1831, baseType: !607, size: 32, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1545, file: !133, line: 1832, baseType: !482, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1545, file: !133, line: 1835, baseType: !859, size: 64, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !485, file: !133, line: 3398, baseType: !1552, size: 704)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !133, line: 1898, size: 704, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1563}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1552, file: !133, line: 1899, baseType: !521, size: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1552, file: !133, line: 1902, baseType: !482, size: 64, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1552, file: !133, line: 1905, baseType: !806, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1552, file: !133, line: 1908, baseType: !5, size: 32, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1552, file: !133, line: 1911, baseType: !1559, size: 64, offset: 384)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1198, line: 117, size: 128, elements: !1561)
!1561 = !{!1562}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1560, file: !1198, line: 120, baseType: !1366, size: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1552, file: !133, line: 1914, baseType: !847, size: 256, offset: 448)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !485, file: !133, line: 3399, baseType: !1565, size: 704)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !133, line: 2008, size: 704, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !133, line: 2009, baseType: !521, size: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1565, file: !133, line: 2011, baseType: !5, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1565, file: !133, line: 2012, baseType: !5, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1565, file: !133, line: 2014, baseType: !607, size: 32, offset: 224)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1565, file: !133, line: 2016, baseType: !482, size: 64, offset: 256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1565, file: !133, line: 2017, baseType: !1353, size: 64, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1565, file: !133, line: 2019, baseType: !482, size: 64, offset: 384)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1565, file: !133, line: 2020, baseType: !482, size: 64, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1565, file: !133, line: 2021, baseType: !482, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1565, file: !133, line: 2022, baseType: !482, size: 64, offset: 576)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1565, file: !133, line: 2023, baseType: !482, size: 64, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !485, file: !133, line: 3400, baseType: !1579, size: 832)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !133, line: 2430, size: 832, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1579, file: !133, line: 2431, baseType: !521, size: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1579, file: !133, line: 2433, baseType: !482, size: 64, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1579, file: !133, line: 2434, baseType: !482, size: 64, offset: 256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1579, file: !133, line: 2435, baseType: !482, size: 64, offset: 320)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1579, file: !133, line: 2436, baseType: !482, size: 64, offset: 384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1579, file: !133, line: 2437, baseType: !1353, size: 64, offset: 448)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1579, file: !133, line: 2438, baseType: !482, size: 64, offset: 512)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1579, file: !133, line: 2440, baseType: !482, size: 64, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1579, file: !133, line: 2441, baseType: !482, size: 64, offset: 640)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1579, file: !133, line: 2443, baseType: !1591, size: 128, offset: 704)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !133, line: 182, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !133, line: 182, size: 128, elements: !1593)
!1593 = !{!1594}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1592, file: !133, line: 182, baseType: !1358, size: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !485, file: !133, line: 3401, baseType: !1596, size: 320)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !133, line: 3327, size: 320, elements: !1597)
!1597 = !{!1598, !1599, !1606}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1596, file: !133, line: 3329, baseType: !521, size: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1596, file: !133, line: 3330, baseType: !1600, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !133, line: 3320, size: 192, elements: !1602)
!1602 = !{!1603, !1604, !1605}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1601, file: !133, line: 3322, baseType: !1600, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1601, file: !133, line: 3323, baseType: !1600, size: 64, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1601, file: !133, line: 3324, baseType: !482, size: 64, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1596, file: !133, line: 3331, baseType: !1600, size: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !485, file: !133, line: 3402, baseType: !1608, size: 256)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !133, line: 1540, size: 256, elements: !1609)
!1609 = !{!1610, !1611}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1608, file: !133, line: 1541, baseType: !521, size: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1608, file: !133, line: 1542, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !133, line: 1538, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !133, line: 1538, size: 192, elements: !1615)
!1615 = !{!1616}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1614, file: !133, line: 1538, baseType: !1617, size: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !133, line: 1537, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !133, line: 1537, size: 192, elements: !1619)
!1619 = !{!1620, !1621, !1622}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1618, file: !133, line: 1537, baseType: !5, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1618, file: !133, line: 1537, baseType: !5, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1618, file: !133, line: 1537, baseType: !1623, size: 128, offset: 64)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1624, size: 128, elements: !581)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !133, line: 1535, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !133, line: 1532, size: 128, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1625, file: !133, line: 1533, baseType: !482, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1625, file: !133, line: 1534, baseType: !482, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !485, file: !133, line: 3403, baseType: !1630, size: 512)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !133, line: 1938, size: 512, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635, !1641, !1642, !1643}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1630, file: !133, line: 1939, baseType: !521, size: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1630, file: !133, line: 1940, baseType: !607, size: 32, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1630, file: !133, line: 1941, baseType: !356, size: 32, offset: 224)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1630, file: !133, line: 1946, baseType: !1636, size: 32, offset: 256)
!1636 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !133, line: 1942, size: 32, elements: !1637)
!1637 = !{!1638, !1639, !1640}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1636, file: !133, line: 1943, baseType: !374, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1636, file: !133, line: 1944, baseType: !381, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1636, file: !133, line: 1945, baseType: !132, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1630, file: !133, line: 1950, baseType: !796, size: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1630, file: !133, line: 1951, baseType: !796, size: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1630, file: !133, line: 1953, baseType: !859, size: 64, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !485, file: !133, line: 3404, baseType: !1645, size: 1664)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !133, line: 3337, size: 1664, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1645, file: !133, line: 3338, baseType: !521, size: 192)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1645, file: !133, line: 3341, baseType: !1649, size: 1472, offset: 192)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1650, line: 410, size: 1472, elements: !1651)
!1650 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1649, file: !1650, line: 412, baseType: !469, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1649, file: !1650, line: 413, baseType: !469, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1649, file: !1650, line: 414, baseType: !469, size: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1649, file: !1650, line: 415, baseType: !469, size: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1649, file: !1650, line: 416, baseType: !469, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1649, file: !1650, line: 417, baseType: !469, size: 32, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1649, file: !1650, line: 418, baseType: !468, size: 8, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1649, file: !1650, line: 419, baseType: !468, size: 8, offset: 200)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1649, file: !1650, line: 420, baseType: !1661, size: 8, offset: 208)
!1661 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1649, file: !1650, line: 421, baseType: !1661, size: 8, offset: 216)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1649, file: !1650, line: 422, baseType: !1661, size: 8, offset: 224)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1649, file: !1650, line: 423, baseType: !1661, size: 8, offset: 232)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1649, file: !1650, line: 424, baseType: !1661, size: 8, offset: 240)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1649, file: !1650, line: 425, baseType: !1661, size: 8, offset: 248)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1649, file: !1650, line: 426, baseType: !1661, size: 8, offset: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1649, file: !1650, line: 427, baseType: !1661, size: 8, offset: 264)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1649, file: !1650, line: 428, baseType: !1661, size: 8, offset: 272)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1649, file: !1650, line: 429, baseType: !1661, size: 8, offset: 280)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1649, file: !1650, line: 430, baseType: !1661, size: 8, offset: 288)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1649, file: !1650, line: 431, baseType: !1661, size: 8, offset: 296)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1649, file: !1650, line: 432, baseType: !1661, size: 8, offset: 304)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1649, file: !1650, line: 433, baseType: !1661, size: 8, offset: 312)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1649, file: !1650, line: 434, baseType: !1661, size: 8, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1649, file: !1650, line: 435, baseType: !1661, size: 8, offset: 328)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1649, file: !1650, line: 436, baseType: !1661, size: 8, offset: 336)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1649, file: !1650, line: 437, baseType: !1661, size: 8, offset: 344)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1649, file: !1650, line: 438, baseType: !1661, size: 8, offset: 352)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1649, file: !1650, line: 439, baseType: !1661, size: 8, offset: 360)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1649, file: !1650, line: 440, baseType: !1661, size: 8, offset: 368)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1649, file: !1650, line: 441, baseType: !1661, size: 8, offset: 376)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1649, file: !1650, line: 442, baseType: !1661, size: 8, offset: 384)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1649, file: !1650, line: 443, baseType: !1661, size: 8, offset: 392)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1649, file: !1650, line: 444, baseType: !1661, size: 8, offset: 400)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1649, file: !1650, line: 445, baseType: !1661, size: 8, offset: 408)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1649, file: !1650, line: 446, baseType: !1661, size: 8, offset: 416)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1649, file: !1650, line: 447, baseType: !1661, size: 8, offset: 424)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1649, file: !1650, line: 448, baseType: !1661, size: 8, offset: 432)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1649, file: !1650, line: 449, baseType: !1661, size: 8, offset: 440)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1649, file: !1650, line: 450, baseType: !1661, size: 8, offset: 448)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1649, file: !1650, line: 451, baseType: !1661, size: 8, offset: 456)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1649, file: !1650, line: 452, baseType: !1661, size: 8, offset: 464)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1649, file: !1650, line: 453, baseType: !1661, size: 8, offset: 472)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1649, file: !1650, line: 454, baseType: !1661, size: 8, offset: 480)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1649, file: !1650, line: 455, baseType: !1661, size: 8, offset: 488)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1649, file: !1650, line: 456, baseType: !1661, size: 8, offset: 496)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1649, file: !1650, line: 457, baseType: !1661, size: 8, offset: 504)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1649, file: !1650, line: 458, baseType: !1661, size: 8, offset: 512)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1649, file: !1650, line: 459, baseType: !1661, size: 8, offset: 520)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1649, file: !1650, line: 460, baseType: !1661, size: 8, offset: 528)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1649, file: !1650, line: 461, baseType: !1661, size: 8, offset: 536)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1649, file: !1650, line: 462, baseType: !1661, size: 8, offset: 544)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1649, file: !1650, line: 463, baseType: !1661, size: 8, offset: 552)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1649, file: !1650, line: 464, baseType: !1661, size: 8, offset: 560)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1649, file: !1650, line: 465, baseType: !1661, size: 8, offset: 568)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1649, file: !1650, line: 466, baseType: !1661, size: 8, offset: 576)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1649, file: !1650, line: 467, baseType: !1661, size: 8, offset: 584)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1649, file: !1650, line: 468, baseType: !1661, size: 8, offset: 592)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1649, file: !1650, line: 469, baseType: !1661, size: 8, offset: 600)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1649, file: !1650, line: 470, baseType: !1661, size: 8, offset: 608)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1649, file: !1650, line: 471, baseType: !1661, size: 8, offset: 616)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1649, file: !1650, line: 472, baseType: !1661, size: 8, offset: 624)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1649, file: !1650, line: 473, baseType: !1661, size: 8, offset: 632)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1649, file: !1650, line: 474, baseType: !1661, size: 8, offset: 640)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1649, file: !1650, line: 475, baseType: !1661, size: 8, offset: 648)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1649, file: !1650, line: 476, baseType: !1661, size: 8, offset: 656)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1649, file: !1650, line: 477, baseType: !1661, size: 8, offset: 664)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1649, file: !1650, line: 478, baseType: !1661, size: 8, offset: 672)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1649, file: !1650, line: 479, baseType: !1661, size: 8, offset: 680)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1649, file: !1650, line: 480, baseType: !1661, size: 8, offset: 688)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1649, file: !1650, line: 481, baseType: !1661, size: 8, offset: 696)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1649, file: !1650, line: 482, baseType: !1661, size: 8, offset: 704)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1649, file: !1650, line: 483, baseType: !1661, size: 8, offset: 712)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1649, file: !1650, line: 484, baseType: !1661, size: 8, offset: 720)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1649, file: !1650, line: 485, baseType: !1661, size: 8, offset: 728)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1649, file: !1650, line: 486, baseType: !1661, size: 8, offset: 736)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1649, file: !1650, line: 487, baseType: !1661, size: 8, offset: 744)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1649, file: !1650, line: 488, baseType: !1661, size: 8, offset: 752)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1649, file: !1650, line: 489, baseType: !1661, size: 8, offset: 760)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1649, file: !1650, line: 490, baseType: !1661, size: 8, offset: 768)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1649, file: !1650, line: 491, baseType: !1661, size: 8, offset: 776)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1649, file: !1650, line: 492, baseType: !1661, size: 8, offset: 784)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1649, file: !1650, line: 493, baseType: !1661, size: 8, offset: 792)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1649, file: !1650, line: 494, baseType: !1661, size: 8, offset: 800)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1649, file: !1650, line: 495, baseType: !1661, size: 8, offset: 808)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1649, file: !1650, line: 496, baseType: !1661, size: 8, offset: 816)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1649, file: !1650, line: 497, baseType: !1661, size: 8, offset: 824)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1649, file: !1650, line: 498, baseType: !1661, size: 8, offset: 832)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1649, file: !1650, line: 499, baseType: !1661, size: 8, offset: 840)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1649, file: !1650, line: 500, baseType: !1661, size: 8, offset: 848)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1649, file: !1650, line: 501, baseType: !1661, size: 8, offset: 856)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1649, file: !1650, line: 502, baseType: !1661, size: 8, offset: 864)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1649, file: !1650, line: 503, baseType: !1661, size: 8, offset: 872)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1649, file: !1650, line: 504, baseType: !1661, size: 8, offset: 880)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1649, file: !1650, line: 505, baseType: !1661, size: 8, offset: 888)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1649, file: !1650, line: 506, baseType: !1661, size: 8, offset: 896)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1649, file: !1650, line: 507, baseType: !1661, size: 8, offset: 904)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1649, file: !1650, line: 508, baseType: !1661, size: 8, offset: 912)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1649, file: !1650, line: 509, baseType: !1661, size: 8, offset: 920)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1649, file: !1650, line: 510, baseType: !1661, size: 8, offset: 928)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1649, file: !1650, line: 511, baseType: !1661, size: 8, offset: 936)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1649, file: !1650, line: 512, baseType: !1661, size: 8, offset: 944)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1649, file: !1650, line: 513, baseType: !1661, size: 8, offset: 952)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1649, file: !1650, line: 514, baseType: !1661, size: 8, offset: 960)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1649, file: !1650, line: 515, baseType: !1661, size: 8, offset: 968)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1649, file: !1650, line: 516, baseType: !1661, size: 8, offset: 976)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1649, file: !1650, line: 517, baseType: !1661, size: 8, offset: 984)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1649, file: !1650, line: 518, baseType: !1661, size: 8, offset: 992)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1649, file: !1650, line: 519, baseType: !1661, size: 8, offset: 1000)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1649, file: !1650, line: 520, baseType: !1661, size: 8, offset: 1008)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1649, file: !1650, line: 521, baseType: !1661, size: 8, offset: 1016)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1649, file: !1650, line: 522, baseType: !1661, size: 8, offset: 1024)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1649, file: !1650, line: 523, baseType: !1661, size: 8, offset: 1032)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1649, file: !1650, line: 524, baseType: !1661, size: 8, offset: 1040)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1649, file: !1650, line: 525, baseType: !1661, size: 8, offset: 1048)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1649, file: !1650, line: 526, baseType: !1661, size: 8, offset: 1056)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1649, file: !1650, line: 527, baseType: !1661, size: 8, offset: 1064)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1649, file: !1650, line: 528, baseType: !1661, size: 8, offset: 1072)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1649, file: !1650, line: 529, baseType: !1661, size: 8, offset: 1080)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1649, file: !1650, line: 530, baseType: !1661, size: 8, offset: 1088)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1649, file: !1650, line: 531, baseType: !1661, size: 8, offset: 1096)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1649, file: !1650, line: 532, baseType: !1661, size: 8, offset: 1104)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1649, file: !1650, line: 533, baseType: !1661, size: 8, offset: 1112)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1649, file: !1650, line: 534, baseType: !1661, size: 8, offset: 1120)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1649, file: !1650, line: 535, baseType: !1661, size: 8, offset: 1128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1649, file: !1650, line: 536, baseType: !1661, size: 8, offset: 1136)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1649, file: !1650, line: 537, baseType: !1661, size: 8, offset: 1144)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1649, file: !1650, line: 538, baseType: !1661, size: 8, offset: 1152)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1649, file: !1650, line: 539, baseType: !1661, size: 8, offset: 1160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1649, file: !1650, line: 540, baseType: !1661, size: 8, offset: 1168)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1649, file: !1650, line: 541, baseType: !1661, size: 8, offset: 1176)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1649, file: !1650, line: 542, baseType: !1661, size: 8, offset: 1184)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1649, file: !1650, line: 543, baseType: !1661, size: 8, offset: 1192)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1649, file: !1650, line: 544, baseType: !1661, size: 8, offset: 1200)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1649, file: !1650, line: 545, baseType: !1661, size: 8, offset: 1208)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1649, file: !1650, line: 546, baseType: !1661, size: 8, offset: 1216)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1649, file: !1650, line: 547, baseType: !1661, size: 8, offset: 1224)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1649, file: !1650, line: 548, baseType: !1661, size: 8, offset: 1232)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1649, file: !1650, line: 549, baseType: !1661, size: 8, offset: 1240)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1649, file: !1650, line: 550, baseType: !1661, size: 8, offset: 1248)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1649, file: !1650, line: 551, baseType: !1661, size: 8, offset: 1256)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1649, file: !1650, line: 552, baseType: !1661, size: 8, offset: 1264)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1649, file: !1650, line: 553, baseType: !1661, size: 8, offset: 1272)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1649, file: !1650, line: 554, baseType: !1661, size: 8, offset: 1280)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1649, file: !1650, line: 555, baseType: !1661, size: 8, offset: 1288)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1649, file: !1650, line: 556, baseType: !1661, size: 8, offset: 1296)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1649, file: !1650, line: 557, baseType: !1661, size: 8, offset: 1304)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1649, file: !1650, line: 558, baseType: !1661, size: 8, offset: 1312)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1649, file: !1650, line: 559, baseType: !1661, size: 8, offset: 1320)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1649, file: !1650, line: 560, baseType: !1661, size: 8, offset: 1328)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1649, file: !1650, line: 561, baseType: !1661, size: 8, offset: 1336)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1649, file: !1650, line: 562, baseType: !1661, size: 8, offset: 1344)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1649, file: !1650, line: 563, baseType: !1661, size: 8, offset: 1352)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1649, file: !1650, line: 564, baseType: !1661, size: 8, offset: 1360)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1649, file: !1650, line: 565, baseType: !1661, size: 8, offset: 1368)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1649, file: !1650, line: 566, baseType: !1661, size: 8, offset: 1376)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1649, file: !1650, line: 567, baseType: !1661, size: 8, offset: 1384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1649, file: !1650, line: 568, baseType: !1661, size: 8, offset: 1392)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1649, file: !1650, line: 569, baseType: !1661, size: 8, offset: 1400)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1649, file: !1650, line: 570, baseType: !1661, size: 8, offset: 1408)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1649, file: !1650, line: 571, baseType: !1661, size: 8, offset: 1416)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1649, file: !1650, line: 572, baseType: !1661, size: 8, offset: 1424)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1649, file: !1650, line: 573, baseType: !1661, size: 8, offset: 1432)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1649, file: !1650, line: 574, baseType: !1661, size: 8, offset: 1440)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !485, file: !133, line: 3405, baseType: !1817, size: 384)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !133, line: 3352, size: 384, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1817, file: !133, line: 3353, baseType: !521, size: 192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1817, file: !133, line: 3356, baseType: !1821, size: 192, offset: 192)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1650, line: 578, size: 192, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1821, file: !1650, line: 580, baseType: !469, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1821, file: !1650, line: 581, baseType: !469, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1821, file: !1650, line: 582, baseType: !469, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1821, file: !1650, line: 583, baseType: !469, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1821, file: !1650, line: 584, baseType: !468, size: 8, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1821, file: !1650, line: 585, baseType: !468, size: 8, offset: 136)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1821, file: !1650, line: 586, baseType: !468, size: 8, offset: 144)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1821, file: !1650, line: 587, baseType: !468, size: 8, offset: 152)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1821, file: !1650, line: 588, baseType: !468, size: 8, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1821, file: !1650, line: 589, baseType: !468, size: 8, offset: 168)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1821, file: !1650, line: 590, baseType: !468, size: 8, offset: 176)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !478, file: !479, line: 257, baseType: !482, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ivtype_map_elt_s", file: !479, line: 286, size: 128, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1837, file: !479, line: 288, baseType: !482, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "cloog_iv", scope: !1837, file: !479, line: 289, baseType: !474, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sese_s", file: !479, line: 28, size: 384, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1852, !1853, !1859}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1842, file: !479, line: 31, baseType: !786, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1842, file: !479, line: 31, baseType: !786, size: 64, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !1842, file: !479, line: 34, baseType: !1847, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !133, line: 184, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !133, line: 184, size: 128, elements: !1850)
!1850 = !{!1851}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1849, file: !133, line: 184, baseType: !1358, size: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "loops", scope: !1842, file: !479, line: 37, baseType: !1376, size: 64, offset: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1842, file: !479, line: 38, baseType: !1854, size: 64, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !328, line: 86, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !328, line: 86, size: 128, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1856, file: !328, line: 86, baseType: !1041, size: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "add_params", scope: !1842, file: !479, line: 43, baseType: !468, size: 8, offset: 320)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifsese_s", file: !479, line: 222, size: 192, elements: !1863)
!1863 = !{!1864, !1866, !1867}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1862, file: !479, line: 223, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "sese", file: !479, line: 44, baseType: !1841)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "true_region", scope: !1862, file: !479, line: 224, baseType: !1865, size: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "false_region", scope: !1862, file: !479, line: 225, baseType: !1865, size: 64, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !389, line: 30, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !133, line: 1893, baseType: !847)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1875, line: 32, baseType: !1876)
!1875 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1875, line: 32, size: 96, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1876, file: !1875, line: 32, baseType: !1879, size: 96)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1875, line: 31, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1875, line: 31, size: 96, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1880, file: !1875, line: 31, baseType: !5, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1880, file: !1875, line: 31, baseType: !5, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1880, file: !1875, line: 31, baseType: !1885, size: 32, offset: 64)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 32, elements: !581)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "rename_map_elt", file: !479, line: 258, baseType: !1868)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rename_map_elt_heap", file: !479, line: 261, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rename_map_elt_heap", file: !479, line: 261, size: 128, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1889, file: !479, line: 261, baseType: !1892, size: 128)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rename_map_elt_base", file: !479, line: 260, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rename_map_elt_base", file: !479, line: 260, size: 128, elements: !1894)
!1894 = !{!1895, !1896, !1897}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1893, file: !479, line: 260, baseType: !5, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1893, file: !479, line: 260, baseType: !5, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1893, file: !479, line: 260, baseType: !1898, size: 64, offset: 64)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 64, elements: !581)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "alep_p", file: !1, line: 1188, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alep", file: !1, line: 1185, size: 128, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !1901, file: !1, line: 1186, baseType: !1048, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "new_renames", scope: !1901, file: !1, line: 1187, baseType: !1887, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "igp", file: !1, line: 1274, size: 256, elements: !1907)
!1907 = !{!1908, !1909, !1910, !1911}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1906, file: !1, line: 1275, baseType: !1258, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "true_edge", scope: !1906, file: !1, line: 1276, baseType: !786, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "false_edge", scope: !1906, file: !1, line: 1276, baseType: !786, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "before_guard", scope: !1906, file: !1, line: 1277, baseType: !1290, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !389, line: 27, baseType: !840)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!1915 = !{i32 2, !"Dwarf Version", i32 4}
!1916 = !{i32 2, !"Debug Info Version", i32 3}
!1917 = !{i32 1, !"wchar_size", i32 4}
!1918 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!1919 = distinct !DISubprogram(name: "vprintf", scope: !1920, file: !1920, line: 39, type: !1921, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1931)
!1920 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!469, !1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !474)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, size: 192, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1925, file: !1, baseType: !5, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1925, file: !1, baseType: !5, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1925, file: !1, baseType: !473, size: 64, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1925, file: !1, baseType: !473, size: 64, offset: 128)
!1931 = !{!1932, !1933}
!1932 = !DILocalVariable(name: "__fmt", arg: 1, scope: !1919, file: !1920, line: 39, type: !1923)
!1933 = !DILocalVariable(name: "__arg", arg: 2, scope: !1919, file: !1920, line: 39, type: !1924)
!1934 = !DILocation(line: 0, scope: !1919)
!1935 = !DILocation(line: 41, column: 20, scope: !1919)
!1936 = !DILocation(line: 41, column: 10, scope: !1919)
!1937 = !DILocation(line: 41, column: 3, scope: !1919)
!1938 = distinct !DISubprogram(name: "getchar", scope: !1920, file: !1920, line: 47, type: !1939, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1941)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!469}
!1941 = !{}
!1942 = !DILocation(line: 49, column: 16, scope: !1938)
!1943 = !DILocation(line: 49, column: 10, scope: !1938)
!1944 = !DILocation(line: 49, column: 3, scope: !1938)
!1945 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !1920, file: !1920, line: 56, type: !1946, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1999)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!469, !1948}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1950, line: 7, baseType: !1951)
!1950 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1952, line: 49, size: 1728, elements: !1953)
!1952 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1969, !1971, !1972, !1973, !1976, !1978, !1979, !1980, !1983, !1985, !1988, !1991, !1992, !1993, !1994, !1995}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1951, file: !1952, line: 51, baseType: !469, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1951, file: !1952, line: 54, baseType: !471, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1951, file: !1952, line: 55, baseType: !471, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1951, file: !1952, line: 56, baseType: !471, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1951, file: !1952, line: 57, baseType: !471, size: 64, offset: 256)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1951, file: !1952, line: 58, baseType: !471, size: 64, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1951, file: !1952, line: 59, baseType: !471, size: 64, offset: 384)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1951, file: !1952, line: 60, baseType: !471, size: 64, offset: 448)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1951, file: !1952, line: 61, baseType: !471, size: 64, offset: 512)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1951, file: !1952, line: 64, baseType: !471, size: 64, offset: 576)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1951, file: !1952, line: 65, baseType: !471, size: 64, offset: 640)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1951, file: !1952, line: 66, baseType: !471, size: 64, offset: 704)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1951, file: !1952, line: 68, baseType: !1967, size: 64, offset: 768)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1952, line: 36, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1951, file: !1952, line: 70, baseType: !1970, size: 64, offset: 832)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1951, file: !1952, line: 72, baseType: !469, size: 32, offset: 896)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1951, file: !1952, line: 73, baseType: !469, size: 32, offset: 928)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1951, file: !1952, line: 74, baseType: !1974, size: 64, offset: 960)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1975, line: 152, baseType: !538)
!1975 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1951, file: !1952, line: 77, baseType: !1977, size: 16, offset: 1024)
!1977 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1951, file: !1952, line: 78, baseType: !1661, size: 8, offset: 1040)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1951, file: !1952, line: 79, baseType: !580, size: 8, offset: 1048)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1951, file: !1952, line: 81, baseType: !1981, size: 64, offset: 1088)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1952, line: 43, baseType: null)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1951, file: !1952, line: 89, baseType: !1984, size: 64, offset: 1152)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1975, line: 153, baseType: !538)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1951, file: !1952, line: 91, baseType: !1986, size: 64, offset: 1216)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1952, line: 37, flags: DIFlagFwdDecl)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1951, file: !1952, line: 92, baseType: !1989, size: 64, offset: 1280)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1952, line: 38, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1951, file: !1952, line: 93, baseType: !1970, size: 64, offset: 1344)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1951, file: !1952, line: 94, baseType: !473, size: 64, offset: 1408)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1951, file: !1952, line: 95, baseType: !951, size: 64, offset: 1472)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1951, file: !1952, line: 96, baseType: !469, size: 32, offset: 1536)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1951, file: !1952, line: 98, baseType: !1996, size: 160, offset: 1568)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 160, elements: !1997)
!1997 = !{!1998}
!1998 = !DISubrange(count: 20)
!1999 = !{!2000}
!2000 = !DILocalVariable(name: "__fp", arg: 1, scope: !1945, file: !1920, line: 56, type: !1948)
!2001 = !DILocation(line: 0, scope: !1945)
!2002 = !DILocation(line: 58, column: 10, scope: !1945)
!2003 = !DILocation(line: 58, column: 3, scope: !1945)
!2004 = distinct !DISubprogram(name: "getc_unlocked", scope: !1920, file: !1920, line: 66, type: !1946, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2005)
!2005 = !{!2006}
!2006 = !DILocalVariable(name: "__fp", arg: 1, scope: !2004, file: !1920, line: 66, type: !1948)
!2007 = !DILocation(line: 0, scope: !2004)
!2008 = !DILocation(line: 68, column: 10, scope: !2004)
!2009 = !DILocation(line: 68, column: 3, scope: !2004)
!2010 = distinct !DISubprogram(name: "getchar_unlocked", scope: !1920, file: !1920, line: 73, type: !1939, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1941)
!2011 = !DILocation(line: 75, column: 10, scope: !2010)
!2012 = !DILocation(line: 75, column: 3, scope: !2010)
!2013 = distinct !DISubprogram(name: "putchar", scope: !1920, file: !1920, line: 82, type: !2014, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2016)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!469, !469}
!2016 = !{!2017}
!2017 = !DILocalVariable(name: "__c", arg: 1, scope: !2013, file: !1920, line: 82, type: !469)
!2018 = !DILocation(line: 0, scope: !2013)
!2019 = !DILocation(line: 84, column: 21, scope: !2013)
!2020 = !DILocation(line: 84, column: 10, scope: !2013)
!2021 = !DILocation(line: 84, column: 3, scope: !2013)
!2022 = distinct !DISubprogram(name: "fputc_unlocked", scope: !1920, file: !1920, line: 91, type: !2023, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2025)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!469, !469, !1948}
!2025 = !{!2026, !2027}
!2026 = !DILocalVariable(name: "__c", arg: 1, scope: !2022, file: !1920, line: 91, type: !469)
!2027 = !DILocalVariable(name: "__stream", arg: 2, scope: !2022, file: !1920, line: 91, type: !1948)
!2028 = !DILocation(line: 0, scope: !2022)
!2029 = !DILocation(line: 93, column: 10, scope: !2022)
!2030 = !DILocation(line: 93, column: 3, scope: !2022)
!2031 = distinct !DISubprogram(name: "putc_unlocked", scope: !1920, file: !1920, line: 101, type: !2023, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2032)
!2032 = !{!2033, !2034}
!2033 = !DILocalVariable(name: "__c", arg: 1, scope: !2031, file: !1920, line: 101, type: !469)
!2034 = !DILocalVariable(name: "__stream", arg: 2, scope: !2031, file: !1920, line: 101, type: !1948)
!2035 = !DILocation(line: 0, scope: !2031)
!2036 = !DILocation(line: 103, column: 10, scope: !2031)
!2037 = !DILocation(line: 103, column: 3, scope: !2031)
!2038 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1920, file: !1920, line: 108, type: !2014, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2039)
!2039 = !{!2040}
!2040 = !DILocalVariable(name: "__c", arg: 1, scope: !2038, file: !1920, line: 108, type: !469)
!2041 = !DILocation(line: 0, scope: !2038)
!2042 = !DILocation(line: 110, column: 10, scope: !2038)
!2043 = !DILocation(line: 110, column: 3, scope: !2038)
!2044 = distinct !DISubprogram(name: "getline", scope: !1920, file: !1920, line: 118, type: !2045, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2049)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!2047, !470, !2048, !1948}
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !1975, line: 193, baseType: !538)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!2049 = !{!2050, !2051, !2052}
!2050 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2044, file: !1920, line: 118, type: !470)
!2051 = !DILocalVariable(name: "__n", arg: 2, scope: !2044, file: !1920, line: 118, type: !2048)
!2052 = !DILocalVariable(name: "__stream", arg: 3, scope: !2044, file: !1920, line: 118, type: !1948)
!2053 = !DILocation(line: 0, scope: !2044)
!2054 = !DILocation(line: 120, column: 10, scope: !2044)
!2055 = !DILocation(line: 120, column: 3, scope: !2044)
!2056 = distinct !DISubprogram(name: "feof_unlocked", scope: !1920, file: !1920, line: 128, type: !1946, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2057)
!2057 = !{!2058}
!2058 = !DILocalVariable(name: "__stream", arg: 1, scope: !2056, file: !1920, line: 128, type: !1948)
!2059 = !DILocation(line: 0, scope: !2056)
!2060 = !DILocation(line: 130, column: 10, scope: !2056)
!2061 = !DILocation(line: 130, column: 3, scope: !2056)
!2062 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1920, file: !1920, line: 135, type: !1946, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2063)
!2063 = !{!2064}
!2064 = !DILocalVariable(name: "__stream", arg: 1, scope: !2062, file: !1920, line: 135, type: !1948)
!2065 = !DILocation(line: 0, scope: !2062)
!2066 = !DILocation(line: 137, column: 10, scope: !2062)
!2067 = !DILocation(line: 137, column: 3, scope: !2062)
!2068 = distinct !DISubprogram(name: "tolower", scope: !2069, file: !2069, line: 207, type: !2014, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2070)
!2069 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2070 = !{!2071}
!2071 = !DILocalVariable(name: "__c", arg: 1, scope: !2068, file: !2069, line: 207, type: !469)
!2072 = !DILocation(line: 0, scope: !2068)
!2073 = !DILocation(line: 209, column: 22, scope: !2068)
!2074 = !DILocation(line: 209, column: 39, scope: !2068)
!2075 = !DILocation(line: 209, column: 38, scope: !2068)
!2076 = !DILocation(line: 209, column: 37, scope: !2068)
!2077 = !DILocation(line: 209, column: 10, scope: !2068)
!2078 = !DILocation(line: 209, column: 3, scope: !2068)
!2079 = distinct !DISubprogram(name: "toupper", scope: !2069, file: !2069, line: 213, type: !2014, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2080)
!2080 = !{!2081}
!2081 = !DILocalVariable(name: "__c", arg: 1, scope: !2079, file: !2069, line: 213, type: !469)
!2082 = !DILocation(line: 0, scope: !2079)
!2083 = !DILocation(line: 215, column: 22, scope: !2079)
!2084 = !DILocation(line: 215, column: 39, scope: !2079)
!2085 = !DILocation(line: 215, column: 38, scope: !2079)
!2086 = !DILocation(line: 215, column: 37, scope: !2079)
!2087 = !DILocation(line: 215, column: 10, scope: !2079)
!2088 = !DILocation(line: 215, column: 3, scope: !2079)
!2089 = distinct !DISubprogram(name: "atoi", scope: !2090, file: !2090, line: 361, type: !2091, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2093)
!2090 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!469, !474}
!2093 = !{!2094}
!2094 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2089, file: !2090, line: 361, type: !474)
!2095 = !DILocation(line: 0, scope: !2089)
!2096 = !DILocation(line: 363, column: 16, scope: !2089)
!2097 = !DILocation(line: 363, column: 10, scope: !2089)
!2098 = !DILocation(line: 363, column: 3, scope: !2089)
!2099 = distinct !DISubprogram(name: "atol", scope: !2090, file: !2090, line: 366, type: !2100, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2102)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!538, !474}
!2102 = !{!2103}
!2103 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2099, file: !2090, line: 366, type: !474)
!2104 = !DILocation(line: 0, scope: !2099)
!2105 = !DILocation(line: 368, column: 10, scope: !2099)
!2106 = !DILocation(line: 368, column: 3, scope: !2099)
!2107 = distinct !DISubprogram(name: "atoll", scope: !2090, file: !2090, line: 373, type: !2108, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2111)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!2110, !474}
!2110 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2111 = !{!2112}
!2112 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2107, file: !2090, line: 373, type: !474)
!2113 = !DILocation(line: 0, scope: !2107)
!2114 = !DILocation(line: 375, column: 10, scope: !2107)
!2115 = !DILocation(line: 375, column: 3, scope: !2107)
!2116 = distinct !DISubprogram(name: "bsearch", scope: !2117, file: !2117, line: 20, type: !2118, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2121)
!2117 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!473, !1301, !1301, !951, !951, !2120}
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2090, line: 808, baseType: !1305)
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2122 = !DILocalVariable(name: "__key", arg: 1, scope: !2116, file: !2117, line: 20, type: !1301)
!2123 = !DILocalVariable(name: "__base", arg: 2, scope: !2116, file: !2117, line: 20, type: !1301)
!2124 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2116, file: !2117, line: 20, type: !951)
!2125 = !DILocalVariable(name: "__size", arg: 4, scope: !2116, file: !2117, line: 20, type: !951)
!2126 = !DILocalVariable(name: "__compar", arg: 5, scope: !2116, file: !2117, line: 21, type: !2120)
!2127 = !DILocalVariable(name: "__l", scope: !2116, file: !2117, line: 23, type: !951)
!2128 = !DILocalVariable(name: "__u", scope: !2116, file: !2117, line: 23, type: !951)
!2129 = !DILocalVariable(name: "__idx", scope: !2116, file: !2117, line: 23, type: !951)
!2130 = !DILocalVariable(name: "__p", scope: !2116, file: !2117, line: 24, type: !1301)
!2131 = !DILocalVariable(name: "__comparison", scope: !2116, file: !2117, line: 25, type: !469)
!2132 = !DILocation(line: 0, scope: !2116)
!2133 = !DILocation(line: 29, column: 3, scope: !2116)
!2134 = !DILocation(line: 27, column: 7, scope: !2116)
!2135 = !DILocation(line: 29, column: 14, scope: !2116)
!2136 = !DILocation(line: 31, column: 20, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2116, file: !2117, line: 30, column: 5)
!2138 = !DILocation(line: 31, column: 27, scope: !2137)
!2139 = !DILocation(line: 32, column: 56, scope: !2137)
!2140 = !DILocation(line: 32, column: 47, scope: !2137)
!2141 = !DILocation(line: 33, column: 22, scope: !2137)
!2142 = !DILocation(line: 34, column: 24, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2137, file: !2117, line: 34, column: 11)
!2144 = !DILocation(line: 34, column: 11, scope: !2137)
!2145 = !DILocation(line: 36, column: 29, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2143, file: !2117, line: 36, column: 16)
!2147 = !DILocation(line: 36, column: 16, scope: !2143)
!2148 = !DILocation(line: 37, column: 14, scope: !2146)
!2149 = distinct !{!2149, !2133, !2150}
!2150 = !DILocation(line: 40, column: 5, scope: !2116)
!2151 = !DILocation(line: 43, column: 1, scope: !2116)
!2152 = distinct !DISubprogram(name: "atof", scope: !2153, file: !2153, line: 25, type: !2154, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2157)
!2153 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!2156, !474}
!2156 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2157 = !{!2158}
!2158 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2152, file: !2153, line: 25, type: !474)
!2159 = !DILocation(line: 0, scope: !2152)
!2160 = !DILocation(line: 27, column: 10, scope: !2152)
!2161 = !DILocation(line: 27, column: 3, scope: !2152)
!2162 = distinct !DISubprogram(name: "strtoimax", scope: !2163, file: !2163, line: 324, type: !2164, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2170)
!2163 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!2166, !1923, !2169, !469}
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2167, line: 101, baseType: !2168)
!2167 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1975, line: 72, baseType: !538)
!2169 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !470)
!2170 = !{!2171, !2172, !2173}
!2171 = !DILocalVariable(name: "nptr", arg: 1, scope: !2162, file: !2163, line: 324, type: !1923)
!2172 = !DILocalVariable(name: "endptr", arg: 2, scope: !2162, file: !2163, line: 324, type: !2169)
!2173 = !DILocalVariable(name: "base", arg: 3, scope: !2162, file: !2163, line: 324, type: !469)
!2174 = !DILocation(line: 0, scope: !2162)
!2175 = !DILocation(line: 327, column: 10, scope: !2162)
!2176 = !DILocation(line: 327, column: 3, scope: !2162)
!2177 = distinct !DISubprogram(name: "strtoumax", scope: !2163, file: !2163, line: 336, type: !2178, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2182)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!2180, !1923, !2169, !469}
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2167, line: 102, baseType: !2181)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1975, line: 73, baseType: !536)
!2182 = !{!2183, !2184, !2185}
!2183 = !DILocalVariable(name: "nptr", arg: 1, scope: !2177, file: !2163, line: 336, type: !1923)
!2184 = !DILocalVariable(name: "endptr", arg: 2, scope: !2177, file: !2163, line: 336, type: !2169)
!2185 = !DILocalVariable(name: "base", arg: 3, scope: !2177, file: !2163, line: 336, type: !469)
!2186 = !DILocation(line: 0, scope: !2177)
!2187 = !DILocation(line: 339, column: 10, scope: !2177)
!2188 = !DILocation(line: 339, column: 3, scope: !2177)
!2189 = distinct !DISubprogram(name: "wcstoimax", scope: !2163, file: !2163, line: 348, type: !2190, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2199)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!2166, !2192, !2196, !469}
!2192 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2193)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2163, line: 34, baseType: !469)
!2196 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2197)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2199 = !{!2200, !2201, !2202}
!2200 = !DILocalVariable(name: "nptr", arg: 1, scope: !2189, file: !2163, line: 348, type: !2192)
!2201 = !DILocalVariable(name: "endptr", arg: 2, scope: !2189, file: !2163, line: 348, type: !2196)
!2202 = !DILocalVariable(name: "base", arg: 3, scope: !2189, file: !2163, line: 348, type: !469)
!2203 = !DILocation(line: 0, scope: !2189)
!2204 = !DILocation(line: 351, column: 10, scope: !2189)
!2205 = !DILocation(line: 351, column: 3, scope: !2189)
!2206 = distinct !DISubprogram(name: "wcstoumax", scope: !2163, file: !2163, line: 362, type: !2207, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!2180, !2192, !2196, !469}
!2209 = !{!2210, !2211, !2212}
!2210 = !DILocalVariable(name: "nptr", arg: 1, scope: !2206, file: !2163, line: 362, type: !2192)
!2211 = !DILocalVariable(name: "endptr", arg: 2, scope: !2206, file: !2163, line: 362, type: !2196)
!2212 = !DILocalVariable(name: "base", arg: 3, scope: !2206, file: !2163, line: 362, type: !469)
!2213 = !DILocation(line: 0, scope: !2206)
!2214 = !DILocation(line: 365, column: 10, scope: !2206)
!2215 = !DILocation(line: 365, column: 3, scope: !2206)
!2216 = distinct !DISubprogram(name: "stat", scope: !2217, file: !2217, line: 453, type: !2218, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2255)
!2217 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!469, !474, !2220}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2222, line: 46, size: 1152, elements: !2223)
!2222 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2223 = !{!2224, !2226, !2228, !2230, !2232, !2234, !2236, !2237, !2238, !2239, !2241, !2243, !2251, !2252, !2253}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2221, file: !2222, line: 48, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1975, line: 145, baseType: !536)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2221, file: !2222, line: 53, baseType: !2227, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1975, line: 148, baseType: !536)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2221, file: !2222, line: 61, baseType: !2229, size: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1975, line: 151, baseType: !536)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2221, file: !2222, line: 62, baseType: !2231, size: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1975, line: 150, baseType: !5)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2221, file: !2222, line: 64, baseType: !2233, size: 32, offset: 224)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1975, line: 146, baseType: !5)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2221, file: !2222, line: 65, baseType: !2235, size: 32, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1975, line: 147, baseType: !5)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2221, file: !2222, line: 67, baseType: !469, size: 32, offset: 288)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2221, file: !2222, line: 69, baseType: !2225, size: 64, offset: 320)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2221, file: !2222, line: 74, baseType: !1974, size: 64, offset: 384)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2221, file: !2222, line: 78, baseType: !2240, size: 64, offset: 448)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1975, line: 174, baseType: !538)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2221, file: !2222, line: 80, baseType: !2242, size: 64, offset: 512)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1975, line: 179, baseType: !538)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2221, file: !2222, line: 91, baseType: !2244, size: 128, offset: 576)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2245, line: 10, size: 128, elements: !2246)
!2245 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2246 = !{!2247, !2249}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2244, file: !2245, line: 12, baseType: !2248, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1975, line: 160, baseType: !538)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2244, file: !2245, line: 16, baseType: !2250, size: 64, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !1975, line: 196, baseType: !538)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2221, file: !2222, line: 92, baseType: !2244, size: 128, offset: 704)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2221, file: !2222, line: 93, baseType: !2244, size: 128, offset: 832)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2221, file: !2222, line: 106, baseType: !2254, size: 192, offset: 960)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2250, size: 192, elements: !556)
!2255 = !{!2256, !2257}
!2256 = !DILocalVariable(name: "__path", arg: 1, scope: !2216, file: !2217, line: 453, type: !474)
!2257 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2216, file: !2217, line: 453, type: !2220)
!2258 = !DILocation(line: 0, scope: !2216)
!2259 = !DILocation(line: 455, column: 10, scope: !2216)
!2260 = !DILocation(line: 455, column: 3, scope: !2216)
!2261 = distinct !DISubprogram(name: "lstat", scope: !2217, file: !2217, line: 460, type: !2218, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2262)
!2262 = !{!2263, !2264}
!2263 = !DILocalVariable(name: "__path", arg: 1, scope: !2261, file: !2217, line: 460, type: !474)
!2264 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2261, file: !2217, line: 460, type: !2220)
!2265 = !DILocation(line: 0, scope: !2261)
!2266 = !DILocation(line: 462, column: 10, scope: !2261)
!2267 = !DILocation(line: 462, column: 3, scope: !2261)
!2268 = distinct !DISubprogram(name: "fstat", scope: !2217, file: !2217, line: 467, type: !2269, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2271)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!469, !469, !2220}
!2271 = !{!2272, !2273}
!2272 = !DILocalVariable(name: "__fd", arg: 1, scope: !2268, file: !2217, line: 467, type: !469)
!2273 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2268, file: !2217, line: 467, type: !2220)
!2274 = !DILocation(line: 0, scope: !2268)
!2275 = !DILocation(line: 469, column: 10, scope: !2268)
!2276 = !DILocation(line: 469, column: 3, scope: !2268)
!2277 = distinct !DISubprogram(name: "fstatat", scope: !2217, file: !2217, line: 474, type: !2278, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2280)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!469, !469, !474, !2220, !469}
!2280 = !{!2281, !2282, !2283, !2284}
!2281 = !DILocalVariable(name: "__fd", arg: 1, scope: !2277, file: !2217, line: 474, type: !469)
!2282 = !DILocalVariable(name: "__filename", arg: 2, scope: !2277, file: !2217, line: 474, type: !474)
!2283 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2277, file: !2217, line: 474, type: !2220)
!2284 = !DILocalVariable(name: "__flag", arg: 4, scope: !2277, file: !2217, line: 474, type: !469)
!2285 = !DILocation(line: 0, scope: !2277)
!2286 = !DILocation(line: 477, column: 10, scope: !2277)
!2287 = !DILocation(line: 477, column: 3, scope: !2277)
!2288 = distinct !DISubprogram(name: "mknod", scope: !2217, file: !2217, line: 483, type: !2289, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2291)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!469, !474, !2231, !2225}
!2291 = !{!2292, !2293, !2294}
!2292 = !DILocalVariable(name: "__path", arg: 1, scope: !2288, file: !2217, line: 483, type: !474)
!2293 = !DILocalVariable(name: "__mode", arg: 2, scope: !2288, file: !2217, line: 483, type: !2231)
!2294 = !DILocalVariable(name: "__dev", arg: 3, scope: !2288, file: !2217, line: 483, type: !2225)
!2295 = !DILocation(line: 0, scope: !2288)
!2296 = !DILocation(line: 485, column: 10, scope: !2288)
!2297 = !DILocation(line: 485, column: 3, scope: !2288)
!2298 = distinct !DISubprogram(name: "mknodat", scope: !2217, file: !2217, line: 491, type: !2299, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2301)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!469, !469, !474, !2231, !2225}
!2301 = !{!2302, !2303, !2304, !2305}
!2302 = !DILocalVariable(name: "__fd", arg: 1, scope: !2298, file: !2217, line: 491, type: !469)
!2303 = !DILocalVariable(name: "__path", arg: 2, scope: !2298, file: !2217, line: 491, type: !474)
!2304 = !DILocalVariable(name: "__mode", arg: 3, scope: !2298, file: !2217, line: 491, type: !2231)
!2305 = !DILocalVariable(name: "__dev", arg: 4, scope: !2298, file: !2217, line: 491, type: !2225)
!2306 = !DILocation(line: 0, scope: !2298)
!2307 = !DILocation(line: 494, column: 10, scope: !2298)
!2308 = !DILocation(line: 494, column: 3, scope: !2298)
!2309 = distinct !DISubprogram(name: "stat64", scope: !2217, file: !2217, line: 502, type: !2310, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2332)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!469, !474, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2222, line: 119, size: 1152, elements: !2314)
!2314 = !{!2315, !2316, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2328, !2329, !2330, !2331}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2313, file: !2222, line: 121, baseType: !2225, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2313, file: !2222, line: 123, baseType: !2317, size: 64, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !1975, line: 149, baseType: !536)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2313, file: !2222, line: 124, baseType: !2229, size: 64, offset: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2313, file: !2222, line: 125, baseType: !2231, size: 32, offset: 192)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2313, file: !2222, line: 132, baseType: !2233, size: 32, offset: 224)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2313, file: !2222, line: 133, baseType: !2235, size: 32, offset: 256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2313, file: !2222, line: 135, baseType: !469, size: 32, offset: 288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2313, file: !2222, line: 136, baseType: !2225, size: 64, offset: 320)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2313, file: !2222, line: 137, baseType: !1974, size: 64, offset: 384)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2313, file: !2222, line: 143, baseType: !2240, size: 64, offset: 448)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2313, file: !2222, line: 144, baseType: !2327, size: 64, offset: 512)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !1975, line: 180, baseType: !538)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2313, file: !2222, line: 152, baseType: !2244, size: 128, offset: 576)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2313, file: !2222, line: 153, baseType: !2244, size: 128, offset: 704)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2313, file: !2222, line: 154, baseType: !2244, size: 128, offset: 832)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2313, file: !2222, line: 164, baseType: !2254, size: 192, offset: 960)
!2332 = !{!2333, !2334}
!2333 = !DILocalVariable(name: "__path", arg: 1, scope: !2309, file: !2217, line: 502, type: !474)
!2334 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2309, file: !2217, line: 502, type: !2312)
!2335 = !DILocation(line: 0, scope: !2309)
!2336 = !DILocation(line: 504, column: 10, scope: !2309)
!2337 = !DILocation(line: 504, column: 3, scope: !2309)
!2338 = distinct !DISubprogram(name: "lstat64", scope: !2217, file: !2217, line: 509, type: !2310, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2339)
!2339 = !{!2340, !2341}
!2340 = !DILocalVariable(name: "__path", arg: 1, scope: !2338, file: !2217, line: 509, type: !474)
!2341 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2338, file: !2217, line: 509, type: !2312)
!2342 = !DILocation(line: 0, scope: !2338)
!2343 = !DILocation(line: 511, column: 10, scope: !2338)
!2344 = !DILocation(line: 511, column: 3, scope: !2338)
!2345 = distinct !DISubprogram(name: "fstat64", scope: !2217, file: !2217, line: 516, type: !2346, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2348)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!469, !469, !2312}
!2348 = !{!2349, !2350}
!2349 = !DILocalVariable(name: "__fd", arg: 1, scope: !2345, file: !2217, line: 516, type: !469)
!2350 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2345, file: !2217, line: 516, type: !2312)
!2351 = !DILocation(line: 0, scope: !2345)
!2352 = !DILocation(line: 518, column: 10, scope: !2345)
!2353 = !DILocation(line: 518, column: 3, scope: !2345)
!2354 = distinct !DISubprogram(name: "fstatat64", scope: !2217, file: !2217, line: 523, type: !2355, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2357)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!469, !469, !474, !2312, !469}
!2357 = !{!2358, !2359, !2360, !2361}
!2358 = !DILocalVariable(name: "__fd", arg: 1, scope: !2354, file: !2217, line: 523, type: !469)
!2359 = !DILocalVariable(name: "__filename", arg: 2, scope: !2354, file: !2217, line: 523, type: !474)
!2360 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2354, file: !2217, line: 523, type: !2312)
!2361 = !DILocalVariable(name: "__flag", arg: 4, scope: !2354, file: !2217, line: 523, type: !469)
!2362 = !DILocation(line: 0, scope: !2354)
!2363 = !DILocation(line: 526, column: 10, scope: !2354)
!2364 = !DILocation(line: 526, column: 3, scope: !2354)
!2365 = distinct !DISubprogram(name: "debug_rename_map", scope: !1, file: !1, line: 72, type: !2366, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2368)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{null, !1290}
!2368 = !{!2369}
!2369 = !DILocalVariable(name: "map", arg: 1, scope: !2365, file: !1, line: 72, type: !1290)
!2370 = !DILocation(line: 0, scope: !2365)
!2371 = !DILocation(line: 74, column: 3, scope: !2365)
!2372 = !DILocation(line: 75, column: 1, scope: !2365)
!2373 = distinct !DISubprogram(name: "debug_rename_map_1", scope: !1, file: !1, line: 62, type: !2374, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!469, !1314, !473}
!2376 = !{!2377, !2378, !2379}
!2377 = !DILocalVariable(name: "slot", arg: 1, scope: !2373, file: !1, line: 62, type: !1314)
!2378 = !DILocalVariable(name: "s", arg: 2, scope: !2373, file: !1, line: 62, type: !473)
!2379 = !DILocalVariable(name: "entry", scope: !2373, file: !1, line: 64, type: !1868)
!2380 = !DILocation(line: 0, scope: !2373)
!2381 = !DILocation(line: 64, column: 64, scope: !2373)
!2382 = !DILocation(line: 65, column: 3, scope: !2373)
!2383 = !DILocation(line: 66, column: 3, scope: !2373)
!2384 = distinct !DISubprogram(name: "rename_map_elt_info", scope: !1, file: !1, line: 80, type: !1298, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2385)
!2385 = !{!2386}
!2386 = !DILocalVariable(name: "elt", arg: 1, scope: !2384, file: !1, line: 80, type: !1301)
!2387 = !DILocation(line: 0, scope: !2384)
!2388 = !DILocation(line: 82, column: 10, scope: !2384)
!2389 = !DILocation(line: 82, column: 3, scope: !2384)
!2390 = distinct !DISubprogram(name: "eq_rename_map_elts", scope: !1, file: !1, line: 88, type: !1306, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2391)
!2391 = !{!2392, !2393, !2394, !2395}
!2392 = !DILocalVariable(name: "e1", arg: 1, scope: !2390, file: !1, line: 88, type: !1301)
!2393 = !DILocalVariable(name: "e2", arg: 2, scope: !2390, file: !1, line: 88, type: !1301)
!2394 = !DILocalVariable(name: "elt1", scope: !2390, file: !1, line: 90, type: !476)
!2395 = !DILocalVariable(name: "elt2", scope: !2390, file: !1, line: 91, type: !476)
!2396 = !DILocation(line: 0, scope: !2390)
!2397 = !DILocation(line: 93, column: 17, scope: !2390)
!2398 = !DILocation(line: 93, column: 35, scope: !2390)
!2399 = !DILocation(line: 93, column: 26, scope: !2390)
!2400 = !DILocation(line: 93, column: 3, scope: !2390)
!2401 = distinct !DISubprogram(name: "debug_ivtype_map", scope: !1, file: !1, line: 121, type: !2366, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2402)
!2402 = !{!2403}
!2403 = !DILocalVariable(name: "map", arg: 1, scope: !2401, file: !1, line: 121, type: !1290)
!2404 = !DILocation(line: 0, scope: !2401)
!2405 = !DILocation(line: 123, column: 3, scope: !2401)
!2406 = !DILocation(line: 124, column: 1, scope: !2401)
!2407 = distinct !DISubprogram(name: "debug_ivtype_map_1", scope: !1, file: !1, line: 111, type: !2374, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2408)
!2408 = !{!2409, !2410, !2411}
!2409 = !DILocalVariable(name: "slot", arg: 1, scope: !2407, file: !1, line: 111, type: !1314)
!2410 = !DILocalVariable(name: "s", arg: 2, scope: !2407, file: !1, line: 111, type: !473)
!2411 = !DILocalVariable(name: "entry", scope: !2407, file: !1, line: 113, type: !1869)
!2412 = !DILocation(line: 0, scope: !2407)
!2413 = !DILocation(line: 113, column: 64, scope: !2407)
!2414 = !DILocation(line: 114, column: 3, scope: !2407)
!2415 = !DILocation(line: 115, column: 3, scope: !2407)
!2416 = distinct !DISubprogram(name: "ivtype_map_elt_info", scope: !1, file: !1, line: 129, type: !1298, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2417)
!2417 = !{!2418}
!2418 = !DILocalVariable(name: "elt", arg: 1, scope: !2416, file: !1, line: 129, type: !1301)
!2419 = !DILocation(line: 0, scope: !2416)
!2420 = !DILocation(line: 131, column: 10, scope: !2416)
!2421 = !DILocation(line: 131, column: 70, scope: !2416)
!2422 = !DILocation(line: 131, column: 3, scope: !2416)
!2423 = distinct !DISubprogram(name: "eq_ivtype_map_elts", scope: !1, file: !1, line: 137, type: !1306, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2424)
!2424 = !{!2425, !2426, !2427, !2428}
!2425 = !DILocalVariable(name: "e1", arg: 1, scope: !2423, file: !1, line: 137, type: !1301)
!2426 = !DILocalVariable(name: "e2", arg: 2, scope: !2423, file: !1, line: 137, type: !1301)
!2427 = !DILocalVariable(name: "elt1", scope: !2423, file: !1, line: 139, type: !1835)
!2428 = !DILocalVariable(name: "elt2", scope: !2423, file: !1, line: 140, type: !1835)
!2429 = !DILocation(line: 0, scope: !2423)
!2430 = !DILocation(line: 142, column: 17, scope: !2423)
!2431 = !DILocation(line: 142, column: 35, scope: !2423)
!2432 = !DILocation(line: 142, column: 26, scope: !2423)
!2433 = !DILocation(line: 142, column: 3, scope: !2423)
!2434 = distinct !DISubprogram(name: "build_sese_loop_nests", scope: !1, file: !1, line: 163, type: !2435, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2437)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{null, !1865}
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2443}
!2438 = !DILocalVariable(name: "region", arg: 1, scope: !2434, file: !1, line: 163, type: !1865)
!2439 = !DILocalVariable(name: "i", scope: !2434, file: !1, line: 165, type: !5)
!2440 = !DILocalVariable(name: "bb", scope: !2434, file: !1, line: 166, type: !1258)
!2441 = !DILocalVariable(name: "loop0", scope: !2434, file: !1, line: 167, type: !1021)
!2442 = !DILocalVariable(name: "loop1", scope: !2434, file: !1, line: 167, type: !1021)
!2443 = !DILocalVariable(name: "loop", scope: !2444, file: !1, line: 172, type: !1021)
!2444 = distinct !DILexicalBlock(scope: !2445, file: !1, line: 171, column: 7)
!2445 = distinct !DILexicalBlock(scope: !2446, file: !1, line: 170, column: 9)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 169, column: 3)
!2447 = distinct !DILexicalBlock(scope: !2434, file: !1, line: 169, column: 3)
!2448 = !DILocation(line: 0, scope: !2434)
!2449 = !DILocation(line: 167, column: 3, scope: !2434)
!2450 = !DILocation(line: 169, column: 3, scope: !2447)
!2451 = !DILocation(line: 169, column: 3, scope: !2446)
!2452 = !DILocation(line: 0, scope: !2447)
!2453 = !DILocation(line: 0, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !1, line: 183, column: 3)
!2455 = distinct !DILexicalBlock(scope: !2434, file: !1, line: 183, column: 3)
!2456 = !DILocation(line: 183, column: 3, scope: !2455)
!2457 = !DILocation(line: 170, column: 9, scope: !2445)
!2458 = !DILocation(line: 170, column: 9, scope: !2446)
!2459 = !DILocation(line: 172, column: 26, scope: !2444)
!2460 = !DILocation(line: 0, scope: !2444)
!2461 = !DILocation(line: 175, column: 12, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2444, file: !1, line: 175, column: 6)
!2463 = !DILocation(line: 175, column: 19, scope: !2462)
!2464 = !DILocation(line: 176, column: 6, scope: !2462)
!2465 = !DILocation(line: 176, column: 29, scope: !2462)
!2466 = !DILocation(line: 176, column: 9, scope: !2462)
!2467 = !DILocation(line: 175, column: 6, scope: !2444)
!2468 = !DILocation(line: 177, column: 4, scope: !2462)
!2469 = !DILocation(line: 0, scope: !2446)
!2470 = distinct !{!2470, !2450, !2471}
!2471 = !DILocation(line: 178, column: 7, scope: !2447)
!2472 = !DILocation(line: 0, scope: !2455)
!2473 = !DILocation(line: 183, column: 15, scope: !2454)
!2474 = !DILocation(line: 185, column: 11, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !1, line: 185, column: 11)
!2476 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 184, column: 5)
!2477 = !DILocation(line: 185, column: 61, scope: !2475)
!2478 = !DILocation(line: 185, column: 56, scope: !2475)
!2479 = !DILocation(line: 185, column: 11, scope: !2476)
!2480 = !DILocation(line: 188, column: 15, scope: !2476)
!2481 = !DILocation(line: 189, column: 11, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2476, file: !1, line: 189, column: 11)
!2483 = !DILocation(line: 189, column: 18, scope: !2482)
!2484 = !DILocation(line: 189, column: 31, scope: !2482)
!2485 = !DILocation(line: 189, column: 22, scope: !2482)
!2486 = !DILocation(line: 189, column: 11, scope: !2476)
!2487 = !DILocation(line: 191, column: 4, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2482, file: !1, line: 190, column: 2)
!2489 = !DILocation(line: 192, column: 4, scope: !2488)
!2490 = !DILocation(line: 193, column: 2, scope: !2488)
!2491 = !DILocation(line: 183, column: 3, scope: !2454)
!2492 = distinct !{!2492, !2456, !2493}
!2493 = !DILocation(line: 194, column: 5, scope: !2455)
!2494 = !DILocation(line: 195, column: 1, scope: !2434)
!2495 = distinct !DISubprogram(name: "bb_in_sese_p", scope: !479, file: !479, line: 113, type: !2496, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2498)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{!468, !1258, !1865}
!2498 = !{!2499, !2500, !2501, !2502}
!2499 = !DILocalVariable(name: "bb", arg: 1, scope: !2495, file: !479, line: 113, type: !1258)
!2500 = !DILocalVariable(name: "region", arg: 2, scope: !2495, file: !479, line: 113, type: !1865)
!2501 = !DILocalVariable(name: "entry", scope: !2495, file: !479, line: 115, type: !1258)
!2502 = !DILocalVariable(name: "exit", scope: !2495, file: !479, line: 116, type: !1258)
!2503 = !DILocation(line: 0, scope: !2495)
!2504 = !DILocation(line: 115, column: 23, scope: !2495)
!2505 = !DILocation(line: 116, column: 22, scope: !2495)
!2506 = !DILocation(line: 118, column: 10, scope: !2495)
!2507 = !DILocation(line: 118, column: 3, scope: !2495)
!2508 = distinct !DISubprogram(name: "sese_record_loop", scope: !1, file: !1, line: 150, type: !2509, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2511)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{null, !1865, !1048}
!2511 = !{!2512, !2513}
!2512 = !DILocalVariable(name: "region", arg: 1, scope: !2508, file: !1, line: 150, type: !1865)
!2513 = !DILocalVariable(name: "loop", arg: 2, scope: !2508, file: !1, line: 150, type: !1048)
!2514 = !DILocation(line: 0, scope: !2508)
!2515 = !DILocation(line: 152, column: 7, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 152, column: 7)
!2517 = !DILocation(line: 152, column: 7, scope: !2508)
!2518 = !DILocation(line: 155, column: 19, scope: !2508)
!2519 = !DILocation(line: 155, column: 46, scope: !2508)
!2520 = !DILocation(line: 155, column: 3, scope: !2508)
!2521 = !DILocation(line: 156, column: 3, scope: !2508)
!2522 = !DILocation(line: 157, column: 1, scope: !2508)
!2523 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !328, file: !328, line: 85, type: !2524, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2529)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!469, !2526, !5, !2528}
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!2529 = !{!2530, !2531, !2532}
!2530 = !DILocalVariable(name: "vec_", arg: 1, scope: !2523, file: !328, line: 85, type: !2526)
!2531 = !DILocalVariable(name: "ix_", arg: 2, scope: !2523, file: !328, line: 85, type: !5)
!2532 = !DILocalVariable(name: "ptr", arg: 3, scope: !2523, file: !328, line: 85, type: !2528)
!2533 = !DILocation(line: 0, scope: !2523)
!2534 = !DILocation(line: 85, column: 1, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2523, file: !328, line: 85, column: 1)
!2536 = !DILocation(line: 85, column: 1, scope: !2523)
!2537 = !DILocation(line: 85, column: 1, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2535, file: !328, line: 85, column: 1)
!2539 = !DILocation(line: 85, column: 1, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2535, file: !328, line: 85, column: 1)
!2541 = !DILocation(line: 0, scope: !2535)
!2542 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !328, file: !328, line: 85, type: !2543, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!5, !2526}
!2545 = !{!2546}
!2546 = !DILocalVariable(name: "vec_", arg: 1, scope: !2542, file: !328, line: 85, type: !2526)
!2547 = !DILocation(line: 0, scope: !2542)
!2548 = !DILocation(line: 85, column: 1, scope: !2542)
!2549 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !328, file: !328, line: 85, type: !2550, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2552)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!1048, !2526, !5}
!2552 = !{!2553, !2554}
!2553 = !DILocalVariable(name: "vec_", arg: 1, scope: !2549, file: !328, line: 85, type: !2526)
!2554 = !DILocalVariable(name: "ix_", arg: 2, scope: !2549, file: !328, line: 85, type: !5)
!2555 = !DILocation(line: 0, scope: !2549)
!2556 = !DILocation(line: 85, column: 1, scope: !2549)
!2557 = distinct !DISubprogram(name: "VEC_loop_p_base_replace", scope: !328, file: !328, line: 85, type: !2558, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2561)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!1048, !2560, !5, !1048}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!2561 = !{!2562, !2563, !2564, !2565}
!2562 = !DILocalVariable(name: "vec_", arg: 1, scope: !2557, file: !328, line: 85, type: !2560)
!2563 = !DILocalVariable(name: "ix_", arg: 2, scope: !2557, file: !328, line: 85, type: !5)
!2564 = !DILocalVariable(name: "obj_", arg: 3, scope: !2557, file: !328, line: 85, type: !1048)
!2565 = !DILocalVariable(name: "old_obj_", scope: !2557, file: !328, line: 85, type: !1048)
!2566 = !DILocation(line: 0, scope: !2557)
!2567 = !DILocation(line: 85, column: 1, scope: !2557)
!2568 = distinct !DISubprogram(name: "new_sese", scope: !1, file: !1, line: 326, type: !2569, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2571)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!1865, !786, !786}
!2571 = !{!2572, !2573, !2574}
!2572 = !DILocalVariable(name: "entry", arg: 1, scope: !2568, file: !1, line: 326, type: !786)
!2573 = !DILocalVariable(name: "exit", arg: 2, scope: !2568, file: !1, line: 326, type: !786)
!2574 = !DILocalVariable(name: "region", scope: !2568, file: !1, line: 328, type: !1865)
!2575 = !DILocation(line: 0, scope: !2568)
!2576 = !DILocation(line: 328, column: 17, scope: !2568)
!2577 = !DILocation(line: 330, column: 3, scope: !2568)
!2578 = !DILocation(line: 330, column: 23, scope: !2568)
!2579 = !DILocation(line: 331, column: 3, scope: !2568)
!2580 = !DILocation(line: 331, column: 22, scope: !2568)
!2581 = !DILocation(line: 332, column: 25, scope: !2568)
!2582 = !DILocation(line: 332, column: 3, scope: !2568)
!2583 = !DILocation(line: 332, column: 23, scope: !2568)
!2584 = !DILocation(line: 333, column: 29, scope: !2568)
!2585 = !DILocation(line: 333, column: 3, scope: !2568)
!2586 = !DILocation(line: 333, column: 27, scope: !2568)
!2587 = !DILocation(line: 334, column: 3, scope: !2568)
!2588 = !DILocation(line: 334, column: 28, scope: !2568)
!2589 = !DILocation(line: 335, column: 26, scope: !2568)
!2590 = !DILocation(line: 335, column: 3, scope: !2568)
!2591 = !DILocation(line: 335, column: 24, scope: !2568)
!2592 = !DILocation(line: 337, column: 3, scope: !2568)
!2593 = distinct !DISubprogram(name: "VEC_loop_p_heap_alloc", scope: !328, file: !328, line: 86, type: !2594, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2596)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{!1854, !469}
!2596 = !{!2597}
!2597 = !DILocalVariable(name: "alloc_", arg: 1, scope: !2593, file: !328, line: 86, type: !469)
!2598 = !DILocation(line: 0, scope: !2593)
!2599 = !DILocation(line: 86, column: 1, scope: !2593)
!2600 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !133, file: !133, line: 184, type: !2601, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2603)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!1847, !469}
!2603 = !{!2604}
!2604 = !DILocalVariable(name: "alloc_", arg: 1, scope: !2600, file: !133, line: 184, type: !469)
!2605 = !DILocation(line: 0, scope: !2600)
!2606 = !DILocation(line: 184, column: 1, scope: !2600)
!2607 = distinct !DISubprogram(name: "free_sese", scope: !1, file: !1, line: 343, type: !2435, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2608)
!2608 = !{!2609}
!2609 = !DILocalVariable(name: "region", arg: 1, scope: !2607, file: !1, line: 343, type: !1865)
!2610 = !DILocation(line: 0, scope: !2607)
!2611 = !DILocation(line: 345, column: 7, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2607, file: !1, line: 345, column: 7)
!2613 = !DILocation(line: 345, column: 7, scope: !2607)
!2614 = !DILocation(line: 346, column: 27, scope: !2612)
!2615 = !DILocation(line: 346, column: 25, scope: !2612)
!2616 = !DILocation(line: 346, column: 5, scope: !2612)
!2617 = !DILocation(line: 348, column: 3, scope: !2607)
!2618 = !DILocation(line: 349, column: 3, scope: !2607)
!2619 = !DILocation(line: 351, column: 3, scope: !2607)
!2620 = !DILocation(line: 352, column: 1, scope: !2607)
!2621 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !133, file: !133, line: 184, type: !2622, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2625)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !2624}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!2625 = !{!2626}
!2626 = !DILocalVariable(name: "vec_", arg: 1, scope: !2621, file: !133, line: 184, type: !2624)
!2627 = !DILocation(line: 0, scope: !2621)
!2628 = !DILocation(line: 184, column: 1, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2621, file: !133, line: 184, column: 1)
!2630 = !DILocation(line: 184, column: 1, scope: !2621)
!2631 = distinct !DISubprogram(name: "VEC_loop_p_heap_free", scope: !328, file: !328, line: 86, type: !2632, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2635)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{null, !2634}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!2635 = !{!2636}
!2636 = !DILocalVariable(name: "vec_", arg: 1, scope: !2631, file: !328, line: 86, type: !2634)
!2637 = !DILocation(line: 0, scope: !2631)
!2638 = !DILocation(line: 86, column: 1, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !328, line: 86, column: 1)
!2640 = !DILocation(line: 86, column: 1, scope: !2631)
!2641 = distinct !DISubprogram(name: "sese_insert_phis_for_liveouts", scope: !1, file: !1, line: 379, type: !2642, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2644)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !1865, !1258, !786, !786}
!2644 = !{!2645, !2646, !2647, !2648, !2649, !2650, !2658}
!2645 = !DILocalVariable(name: "region", arg: 1, scope: !2641, file: !1, line: 379, type: !1865)
!2646 = !DILocalVariable(name: "bb", arg: 2, scope: !2641, file: !1, line: 379, type: !1258)
!2647 = !DILocalVariable(name: "false_e", arg: 3, scope: !2641, file: !1, line: 380, type: !786)
!2648 = !DILocalVariable(name: "true_e", arg: 4, scope: !2641, file: !1, line: 380, type: !786)
!2649 = !DILocalVariable(name: "i", scope: !2641, file: !1, line: 382, type: !5)
!2650 = !DILocalVariable(name: "bi", scope: !2641, file: !1, line: 383, type: !2651)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !711, line: 218, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !711, line: 203, size: 256, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !2652, file: !711, line: 206, baseType: !714, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !2652, file: !711, line: 209, baseType: !714, size: 64, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !2652, file: !711, line: 212, baseType: !5, size: 32, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2652, file: !711, line: 217, baseType: !724, size: 64, offset: 192)
!2658 = !DILocalVariable(name: "liveouts", scope: !2641, file: !1, line: 384, type: !1376)
!2659 = !DILocation(line: 0, scope: !2641)
!2660 = !DILocation(line: 382, column: 3, scope: !2641)
!2661 = !DILocation(line: 383, column: 3, scope: !2641)
!2662 = !DILocation(line: 384, column: 21, scope: !2641)
!2663 = !DILocation(line: 386, column: 3, scope: !2641)
!2664 = !DILocation(line: 388, column: 3, scope: !2641)
!2665 = !DILocation(line: 389, column: 3, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2641, file: !1, line: 389, column: 3)
!2667 = !DILocation(line: 389, column: 3, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2666, file: !1, line: 389, column: 3)
!2669 = !DILocation(line: 390, column: 34, scope: !2668)
!2670 = !DILocation(line: 390, column: 5, scope: !2668)
!2671 = distinct !{!2671, !2665, !2672}
!2672 = !DILocation(line: 390, column: 63, scope: !2666)
!2673 = !DILocation(line: 391, column: 3, scope: !2641)
!2674 = !DILocation(line: 393, column: 3, scope: !2641)
!2675 = !DILocation(line: 394, column: 1, scope: !2641)
!2676 = distinct !DISubprogram(name: "sese_build_liveouts", scope: !1, file: !1, line: 312, type: !2677, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2679)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{null, !1865, !1376}
!2679 = !{!2680, !2681, !2682}
!2680 = !DILocalVariable(name: "region", arg: 1, scope: !2676, file: !1, line: 312, type: !1865)
!2681 = !DILocalVariable(name: "liveouts", arg: 2, scope: !2676, file: !1, line: 312, type: !1376)
!2682 = !DILocalVariable(name: "bb", scope: !2676, file: !1, line: 314, type: !1258)
!2683 = !DILocation(line: 0, scope: !2676)
!2684 = !DILocation(line: 316, column: 3, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2676, file: !1, line: 316, column: 3)
!2686 = !DILocation(line: 316, column: 3, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2685, file: !1, line: 316, column: 3)
!2688 = !DILocation(line: 0, scope: !2685)
!2689 = !DILocation(line: 317, column: 5, scope: !2687)
!2690 = !DILocation(line: 0, scope: !2687)
!2691 = distinct !{!2691, !2684, !2692}
!2692 = !DILocation(line: 317, column: 49, scope: !2685)
!2693 = !DILocation(line: 318, column: 7, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2676, file: !1, line: 318, column: 7)
!2695 = !DILocation(line: 318, column: 7, scope: !2676)
!2696 = !DILocation(line: 319, column: 5, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 319, column: 5)
!2698 = !DILocation(line: 319, column: 5, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2697, file: !1, line: 319, column: 5)
!2700 = !DILocation(line: 0, scope: !2697)
!2701 = !DILocation(line: 320, column: 7, scope: !2699)
!2702 = !DILocation(line: 0, scope: !2699)
!2703 = distinct !{!2703, !2696, !2704}
!2704 = !DILocation(line: 320, column: 57, scope: !2697)
!2705 = !DILocation(line: 321, column: 1, scope: !2676)
!2706 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !711, file: !711, line: 224, type: !2707, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2714)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2709, !2710, !5, !2713}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !483, line: 48, baseType: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!2714 = !{!2715, !2716, !2717, !2718}
!2715 = !DILocalVariable(name: "bi", arg: 1, scope: !2706, file: !711, line: 224, type: !2709)
!2716 = !DILocalVariable(name: "map", arg: 2, scope: !2706, file: !711, line: 224, type: !2710)
!2717 = !DILocalVariable(name: "start_bit", arg: 3, scope: !2706, file: !711, line: 225, type: !5)
!2718 = !DILocalVariable(name: "bit_no", arg: 4, scope: !2706, file: !711, line: 225, type: !2713)
!2719 = !DILocation(line: 0, scope: !2706)
!2720 = !DILocation(line: 227, column: 19, scope: !2706)
!2721 = !DILocation(line: 227, column: 12, scope: !2706)
!2722 = !DILocation(line: 228, column: 7, scope: !2706)
!2723 = !DILocation(line: 228, column: 12, scope: !2706)
!2724 = !DILocation(line: 0, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2726, file: !711, line: 233, column: 11)
!2726 = distinct !DILexicalBlock(scope: !2706, file: !711, line: 232, column: 5)
!2727 = !DILocation(line: 231, column: 3, scope: !2706)
!2728 = !DILocation(line: 233, column: 12, scope: !2725)
!2729 = !DILocation(line: 233, column: 11, scope: !2726)
!2730 = !DILocation(line: 235, column: 13, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2725, file: !711, line: 234, column: 2)
!2732 = !DILocation(line: 236, column: 4, scope: !2731)
!2733 = !DILocation(line: 239, column: 11, scope: !2726)
!2734 = distinct !{!2734, !2727, !2735}
!2735 = !DILocation(line: 242, column: 5, scope: !2706)
!2736 = !DILocation(line: 245, column: 11, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2706, file: !711, line: 245, column: 7)
!2738 = !DILocation(line: 245, column: 17, scope: !2737)
!2739 = !DILocation(line: 245, column: 22, scope: !2737)
!2740 = !DILocation(line: 245, column: 7, scope: !2706)
!2741 = !DILocation(line: 246, column: 27, scope: !2737)
!2742 = !DILocation(line: 246, column: 32, scope: !2737)
!2743 = !DILocation(line: 246, column: 5, scope: !2737)
!2744 = !DILocation(line: 249, column: 7, scope: !2706)
!2745 = !DILocation(line: 249, column: 15, scope: !2706)
!2746 = !DILocation(line: 250, column: 14, scope: !2706)
!2747 = !DILocation(line: 251, column: 7, scope: !2706)
!2748 = !DILocation(line: 251, column: 12, scope: !2706)
!2749 = !DILocation(line: 257, column: 16, scope: !2706)
!2750 = !DILocation(line: 257, column: 13, scope: !2706)
!2751 = !DILocation(line: 259, column: 11, scope: !2706)
!2752 = !DILocation(line: 260, column: 1, scope: !2706)
!2753 = distinct !DISubprogram(name: "bmp_iter_set", scope: !711, file: !711, line: 393, type: !2754, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2756)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!468, !2709, !2713}
!2756 = !{!2757, !2758, !2759}
!2757 = !DILocalVariable(name: "bi", arg: 1, scope: !2753, file: !711, line: 393, type: !2709)
!2758 = !DILocalVariable(name: "bit_no", arg: 2, scope: !2753, file: !711, line: 393, type: !2713)
!2759 = !DILabel(scope: !2760, name: "next_bit", file: !711, line: 398)
!2760 = distinct !DILexicalBlock(scope: !2761, file: !711, line: 397, column: 5)
!2761 = distinct !DILexicalBlock(scope: !2753, file: !711, line: 396, column: 7)
!2762 = !DILocation(line: 0, scope: !2753)
!2763 = !DILocation(line: 396, column: 11, scope: !2761)
!2764 = !DILocation(line: 396, column: 7, scope: !2761)
!2765 = !DILocation(line: 396, column: 7, scope: !2753)
!2766 = !DILocation(line: 419, column: 15, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2768, file: !711, line: 418, column: 2)
!2768 = distinct !DILexicalBlock(scope: !2753, file: !711, line: 415, column: 5)
!2769 = !DILocation(line: 399, column: 7, scope: !2760)
!2770 = !DILocation(line: 398, column: 5, scope: !2760)
!2771 = !DILocation(line: 399, column: 20, scope: !2760)
!2772 = !DILocation(line: 399, column: 25, scope: !2760)
!2773 = !DILocation(line: 399, column: 14, scope: !2760)
!2774 = !DILocation(line: 401, column: 13, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2760, file: !711, line: 400, column: 2)
!2776 = !DILocation(line: 402, column: 12, scope: !2775)
!2777 = distinct !{!2777, !2769, !2778}
!2778 = !DILocation(line: 403, column: 2, scope: !2760)
!2779 = !DILocation(line: 410, column: 15, scope: !2753)
!2780 = !DILocation(line: 410, column: 42, scope: !2753)
!2781 = !DILocation(line: 411, column: 26, scope: !2753)
!2782 = !DILocation(line: 410, column: 11, scope: !2753)
!2783 = !DILocation(line: 412, column: 7, scope: !2753)
!2784 = !DILocation(line: 412, column: 14, scope: !2753)
!2785 = !DILocation(line: 0, scope: !2768)
!2786 = !DILocation(line: 414, column: 3, scope: !2753)
!2787 = !DILocation(line: 417, column: 7, scope: !2768)
!2788 = !DILocation(line: 417, column: 18, scope: !2768)
!2789 = !DILocation(line: 417, column: 26, scope: !2768)
!2790 = !DILocation(line: 419, column: 13, scope: !2767)
!2791 = !DILocation(line: 420, column: 8, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2767, file: !711, line: 420, column: 8)
!2793 = !DILocation(line: 420, column: 8, scope: !2767)
!2794 = !DILocation(line: 422, column: 12, scope: !2767)
!2795 = !DILocation(line: 423, column: 15, scope: !2767)
!2796 = distinct !{!2796, !2787, !2797}
!2797 = !DILocation(line: 424, column: 2, scope: !2768)
!2798 = !DILocation(line: 427, column: 28, scope: !2768)
!2799 = !DILocation(line: 427, column: 16, scope: !2768)
!2800 = !DILocation(line: 428, column: 12, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2768, file: !711, line: 428, column: 11)
!2802 = !DILocation(line: 428, column: 11, scope: !2768)
!2803 = !DILocation(line: 430, column: 27, scope: !2768)
!2804 = !DILocation(line: 430, column: 32, scope: !2768)
!2805 = !DILocation(line: 430, column: 15, scope: !2768)
!2806 = !DILocation(line: 431, column: 19, scope: !2768)
!2807 = distinct !{!2807, !2786, !2808}
!2808 = !DILocation(line: 432, column: 5, scope: !2753)
!2809 = !DILocation(line: 433, column: 1, scope: !2753)
!2810 = distinct !DISubprogram(name: "sese_add_exit_phis_edge", scope: !1, file: !1, line: 357, type: !2811, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2813)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{null, !1258, !482, !786, !786}
!2813 = !{!2814, !2815, !2816, !2817, !2818}
!2814 = !DILocalVariable(name: "exit", arg: 1, scope: !2810, file: !1, line: 357, type: !1258)
!2815 = !DILocalVariable(name: "use", arg: 2, scope: !2810, file: !1, line: 357, type: !482)
!2816 = !DILocalVariable(name: "false_e", arg: 3, scope: !2810, file: !1, line: 357, type: !786)
!2817 = !DILocalVariable(name: "true_e", arg: 4, scope: !2810, file: !1, line: 357, type: !786)
!2818 = !DILocalVariable(name: "phi", scope: !2810, file: !1, line: 359, type: !806)
!2819 = !DILocation(line: 0, scope: !2810)
!2820 = !DILocation(line: 359, column: 16, scope: !2810)
!2821 = !DILocation(line: 361, column: 23, scope: !2810)
!2822 = !DILocation(line: 362, column: 9, scope: !2810)
!2823 = !DILocation(line: 361, column: 3, scope: !2810)
!2824 = !DILocation(line: 363, column: 3, scope: !2810)
!2825 = !DILocation(line: 364, column: 3, scope: !2810)
!2826 = !DILocation(line: 365, column: 1, scope: !2810)
!2827 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !133, file: !133, line: 182, type: !2828, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2832)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{!482, !2830, !5}
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!2832 = !{!2833, !2834}
!2833 = !DILocalVariable(name: "vec_", arg: 1, scope: !2827, file: !133, line: 182, type: !2830)
!2834 = !DILocalVariable(name: "ix_", arg: 2, scope: !2827, file: !133, line: 182, type: !5)
!2835 = !DILocation(line: 0, scope: !2827)
!2836 = !DILocation(line: 182, column: 1, scope: !2827)
!2837 = distinct !DISubprogram(name: "bmp_iter_next", scope: !711, file: !711, line: 382, type: !2838, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2840)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{null, !2709, !2713}
!2840 = !{!2841, !2842}
!2841 = !DILocalVariable(name: "bi", arg: 1, scope: !2837, file: !711, line: 382, type: !2709)
!2842 = !DILocalVariable(name: "bit_no", arg: 2, scope: !2837, file: !711, line: 382, type: !2713)
!2843 = !DILocation(line: 0, scope: !2837)
!2844 = !DILocation(line: 384, column: 7, scope: !2837)
!2845 = !DILocation(line: 384, column: 12, scope: !2837)
!2846 = !DILocation(line: 385, column: 11, scope: !2837)
!2847 = !DILocation(line: 386, column: 1, scope: !2837)
!2848 = distinct !DISubprogram(name: "set_rename", scope: !1, file: !1, line: 511, type: !2849, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2851)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{null, !1290, !482, !482}
!2851 = !{!2852, !2853, !2854, !2855, !2856}
!2852 = !DILocalVariable(name: "map", arg: 1, scope: !2848, file: !1, line: 511, type: !1290)
!2853 = !DILocalVariable(name: "old_name", arg: 2, scope: !2848, file: !1, line: 511, type: !482)
!2854 = !DILocalVariable(name: "expr", arg: 3, scope: !2848, file: !1, line: 511, type: !482)
!2855 = !DILocalVariable(name: "tmp", scope: !2848, file: !1, line: 513, type: !478)
!2856 = !DILocalVariable(name: "slot", scope: !2848, file: !1, line: 514, type: !1314)
!2857 = !DILocation(line: 0, scope: !2848)
!2858 = !DILocation(line: 513, column: 3, scope: !2848)
!2859 = !DILocation(line: 516, column: 16, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2848, file: !1, line: 516, column: 7)
!2861 = !DILocation(line: 516, column: 7, scope: !2848)
!2862 = !DILocation(line: 519, column: 7, scope: !2848)
!2863 = !DILocation(line: 519, column: 16, scope: !2848)
!2864 = !DILocation(line: 520, column: 10, scope: !2848)
!2865 = !DILocation(line: 522, column: 8, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2848, file: !1, line: 522, column: 7)
!2867 = !DILocation(line: 522, column: 7, scope: !2848)
!2868 = !DILocation(line: 525, column: 7, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2848, file: !1, line: 525, column: 7)
!2870 = !DILocation(line: 525, column: 7, scope: !2848)
!2871 = !DILocation(line: 526, column: 5, scope: !2869)
!2872 = !DILocation(line: 528, column: 11, scope: !2848)
!2873 = !DILocation(line: 528, column: 9, scope: !2848)
!2874 = !DILocation(line: 529, column: 1, scope: !2848)
!2875 = distinct !DISubprogram(name: "new_rename_map_elt", scope: !479, file: !479, line: 273, type: !2876, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2878)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!1886, !482, !482}
!2878 = !{!2879, !2880, !2881}
!2879 = !DILocalVariable(name: "old_name", arg: 1, scope: !2875, file: !479, line: 273, type: !482)
!2880 = !DILocalVariable(name: "expr", arg: 2, scope: !2875, file: !479, line: 273, type: !482)
!2881 = !DILocalVariable(name: "res", scope: !2875, file: !479, line: 275, type: !1886)
!2882 = !DILocation(line: 0, scope: !2875)
!2883 = !DILocation(line: 277, column: 9, scope: !2875)
!2884 = !DILocation(line: 278, column: 8, scope: !2875)
!2885 = !DILocation(line: 278, column: 17, scope: !2875)
!2886 = !DILocation(line: 279, column: 8, scope: !2875)
!2887 = !DILocation(line: 279, column: 13, scope: !2875)
!2888 = !DILocation(line: 281, column: 3, scope: !2875)
!2889 = distinct !DISubprogram(name: "rename_nb_iterations", scope: !1, file: !1, line: 563, type: !2366, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2890)
!2890 = !{!2891, !2892, !2898}
!2891 = !DILocalVariable(name: "rename_map", arg: 1, scope: !2889, file: !1, line: 563, type: !1290)
!2892 = !DILocalVariable(name: "li", scope: !2889, file: !1, line: 565, type: !2893)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !328, line: 515, baseType: !2894)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !328, line: 508, size: 128, elements: !2895)
!2895 = !{!2896, !2897}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !2894, file: !328, line: 511, baseType: !1873, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !2894, file: !328, line: 514, baseType: !5, size: 32, offset: 64)
!2898 = !DILocalVariable(name: "loop", scope: !2889, file: !1, line: 566, type: !1021)
!2899 = !DILocation(line: 0, scope: !2889)
!2900 = !DILocation(line: 565, column: 3, scope: !2889)
!2901 = !DILocation(line: 566, column: 3, scope: !2889)
!2902 = !DILocation(line: 568, column: 3, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2889, file: !1, line: 568, column: 3)
!2904 = !DILocation(line: 568, column: 3, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 568, column: 3)
!2906 = !DILocation(line: 570, column: 17, scope: !2905)
!2907 = !DILocation(line: 569, column: 27, scope: !2905)
!2908 = !DILocation(line: 569, column: 5, scope: !2905)
!2909 = !DILocation(line: 569, column: 11, scope: !2905)
!2910 = !DILocation(line: 569, column: 25, scope: !2905)
!2911 = distinct !{!2911, !2902, !2912}
!2912 = !DILocation(line: 570, column: 30, scope: !2903)
!2913 = !DILocation(line: 571, column: 1, scope: !2889)
!2914 = distinct !DISubprogram(name: "fel_init", scope: !328, file: !328, line: 535, type: !2915, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2918)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{null, !2917, !2528, !5}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2918 = !{!2919, !2920, !2921, !2922, !2923, !2924}
!2919 = !DILocalVariable(name: "li", arg: 1, scope: !2914, file: !328, line: 535, type: !2917)
!2920 = !DILocalVariable(name: "loop", arg: 2, scope: !2914, file: !328, line: 535, type: !2528)
!2921 = !DILocalVariable(name: "flags", arg: 3, scope: !2914, file: !328, line: 535, type: !5)
!2922 = !DILocalVariable(name: "aloop", scope: !2914, file: !328, line: 537, type: !1021)
!2923 = !DILocalVariable(name: "i", scope: !2914, file: !328, line: 538, type: !5)
!2924 = !DILocalVariable(name: "mn", scope: !2914, file: !328, line: 539, type: !469)
!2925 = !DILocation(line: 0, scope: !2914)
!2926 = !DILocation(line: 541, column: 7, scope: !2914)
!2927 = !DILocation(line: 541, column: 11, scope: !2914)
!2928 = !DILocation(line: 542, column: 8, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2914, file: !328, line: 542, column: 7)
!2930 = !DILocation(line: 542, column: 7, scope: !2914)
!2931 = !DILocation(line: 544, column: 11, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2929, file: !328, line: 543, column: 5)
!2933 = !DILocation(line: 544, column: 20, scope: !2932)
!2934 = !DILocation(line: 545, column: 13, scope: !2932)
!2935 = !DILocation(line: 546, column: 7, scope: !2932)
!2936 = !DILocation(line: 549, column: 18, scope: !2914)
!2937 = !DILocation(line: 549, column: 7, scope: !2914)
!2938 = !DILocation(line: 549, column: 16, scope: !2914)
!2939 = !DILocation(line: 0, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2941, file: !328, line: 560, column: 12)
!2941 = distinct !DILexicalBlock(scope: !2914, file: !328, line: 552, column: 7)
!2942 = !DILocation(line: 590, column: 7, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !328, line: 587, column: 5)
!2944 = !DILocation(line: 592, column: 8, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !328, line: 592, column: 8)
!2946 = distinct !DILexicalBlock(scope: !2943, file: !328, line: 591, column: 2)
!2947 = !DILocation(line: 592, column: 15, scope: !2945)
!2948 = !DILocation(line: 592, column: 19, scope: !2945)
!2949 = !DILocation(line: 592, column: 8, scope: !2946)
!2950 = !DILocation(line: 593, column: 6, scope: !2945)
!2951 = !DILocation(line: 595, column: 15, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2946, file: !328, line: 595, column: 8)
!2953 = !DILocation(line: 595, column: 21, scope: !2952)
!2954 = !DILocation(line: 595, column: 8, scope: !2946)
!2955 = !DILocation(line: 599, column: 8, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2952, file: !328, line: 598, column: 6)
!2957 = !DILocation(line: 596, column: 21, scope: !2952)
!2958 = !DILocation(line: 596, column: 6, scope: !2952)
!2959 = !DILocation(line: 599, column: 15, scope: !2956)
!2960 = !DILocation(line: 599, column: 21, scope: !2956)
!2961 = !DILocation(line: 599, column: 29, scope: !2956)
!2962 = !DILocation(line: 599, column: 39, scope: !2956)
!2963 = !DILocation(line: 599, column: 44, scope: !2956)
!2964 = !DILocation(line: 0, scope: !2956)
!2965 = !DILocation(line: 600, column: 11, scope: !2956)
!2966 = distinct !{!2966, !2955, !2967}
!2967 = !DILocation(line: 600, column: 28, scope: !2956)
!2968 = !DILocation(line: 601, column: 18, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2956, file: !328, line: 601, column: 12)
!2970 = !DILocation(line: 601, column: 12, scope: !2956)
!2971 = !DILocation(line: 603, column: 23, scope: !2956)
!2972 = distinct !{!2972, !2942, !2973}
!2973 = !DILocation(line: 605, column: 2, scope: !2943)
!2974 = !DILocation(line: 608, column: 3, scope: !2914)
!2975 = !DILocation(line: 609, column: 1, scope: !2914)
!2976 = distinct !DISubprogram(name: "rename_variables_in_expr", scope: !1, file: !1, line: 535, type: !2977, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !2979)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!482, !1290, !482}
!2979 = !{!2980, !2981}
!2980 = !DILocalVariable(name: "m", arg: 1, scope: !2976, file: !1, line: 535, type: !1290)
!2981 = !DILocalVariable(name: "t", arg: 2, scope: !2976, file: !1, line: 535, type: !482)
!2982 = !DILocation(line: 0, scope: !2976)
!2983 = !DILocation(line: 537, column: 8, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 537, column: 7)
!2985 = !DILocation(line: 537, column: 7, scope: !2976)
!2986 = !DILocation(line: 540, column: 6, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 540, column: 6)
!2988 = !DILocation(line: 540, column: 20, scope: !2987)
!2989 = !DILocation(line: 540, column: 6, scope: !2976)
!2990 = !DILocation(line: 541, column: 11, scope: !2987)
!2991 = !DILocation(line: 541, column: 4, scope: !2987)
!2992 = !DILocation(line: 543, column: 11, scope: !2976)
!2993 = !DILocation(line: 543, column: 3, scope: !2976)
!2994 = !DILocation(line: 546, column: 58, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 544, column: 5)
!2996 = !DILocation(line: 546, column: 29, scope: !2995)
!2997 = !DILocation(line: 546, column: 27, scope: !2995)
!2998 = !DILocation(line: 546, column: 7, scope: !2995)
!2999 = !DILocation(line: 549, column: 58, scope: !2995)
!3000 = !DILocation(line: 549, column: 29, scope: !2995)
!3001 = !DILocation(line: 549, column: 27, scope: !2995)
!3002 = !DILocation(line: 549, column: 7, scope: !2995)
!3003 = !DILocation(line: 552, column: 58, scope: !2995)
!3004 = !DILocation(line: 552, column: 29, scope: !2995)
!3005 = !DILocation(line: 552, column: 27, scope: !2995)
!3006 = !DILocation(line: 557, column: 1, scope: !2976)
!3007 = distinct !DISubprogram(name: "fel_next", scope: !328, file: !328, line: 518, type: !3008, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3010)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{null, !2917, !2528}
!3010 = !{!3011, !3012, !3013}
!3011 = !DILocalVariable(name: "li", arg: 1, scope: !3007, file: !328, line: 518, type: !2917)
!3012 = !DILocalVariable(name: "loop", arg: 2, scope: !3007, file: !328, line: 518, type: !2528)
!3013 = !DILocalVariable(name: "anum", scope: !3007, file: !328, line: 520, type: !469)
!3014 = !DILocation(line: 0, scope: !3007)
!3015 = !DILocation(line: 520, column: 3, scope: !3007)
!3016 = !DILocation(line: 522, column: 3, scope: !3007)
!3017 = !DILocation(line: 522, column: 10, scope: !3007)
!3018 = !DILocation(line: 524, column: 14, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3007, file: !328, line: 523, column: 5)
!3020 = !DILocation(line: 525, column: 25, scope: !3019)
!3021 = !DILocation(line: 525, column: 15, scope: !3019)
!3022 = !DILocation(line: 525, column: 13, scope: !3019)
!3023 = !DILocation(line: 526, column: 11, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3019, file: !328, line: 526, column: 11)
!3025 = !DILocation(line: 526, column: 11, scope: !3019)
!3026 = distinct !{!3026, !3016, !3027}
!3027 = !DILocation(line: 528, column: 5, scope: !3007)
!3028 = !DILocation(line: 530, column: 3, scope: !3007)
!3029 = !DILocation(line: 531, column: 9, scope: !3007)
!3030 = !DILocation(line: 532, column: 1, scope: !3007)
!3031 = distinct !DISubprogram(name: "rename_sese_parameters", scope: !1, file: !1, line: 577, type: !3032, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3034)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{null, !1290, !1865}
!3034 = !{!3035, !3036, !3037, !3038}
!3035 = !DILocalVariable(name: "rename_map", arg: 1, scope: !3031, file: !1, line: 577, type: !1290)
!3036 = !DILocalVariable(name: "region", arg: 2, scope: !3031, file: !1, line: 577, type: !1865)
!3037 = !DILocalVariable(name: "i", scope: !3031, file: !1, line: 579, type: !469)
!3038 = !DILocalVariable(name: "p", scope: !3031, file: !1, line: 580, type: !482)
!3039 = !DILocation(line: 0, scope: !3031)
!3040 = !DILocation(line: 580, column: 3, scope: !3031)
!3041 = !DILocation(line: 0, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 582, column: 3)
!3043 = distinct !DILexicalBlock(scope: !3031, file: !1, line: 582, column: 3)
!3044 = !DILocation(line: 582, column: 8, scope: !3043)
!3045 = !DILocation(line: 0, scope: !3043)
!3046 = !DILocation(line: 582, column: 15, scope: !3042)
!3047 = !DILocation(line: 582, column: 3, scope: !3043)
!3048 = !DILocation(line: 583, column: 5, scope: !3042)
!3049 = !DILocation(line: 582, column: 64, scope: !3042)
!3050 = !DILocation(line: 582, column: 3, scope: !3042)
!3051 = distinct !{!3051, !3047, !3052}
!3052 = !DILocation(line: 583, column: 5, scope: !3043)
!3053 = !DILocation(line: 585, column: 1, scope: !3031)
!3054 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !133, file: !133, line: 182, type: !3055, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3057)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!469, !2830, !5, !840}
!3057 = !{!3058, !3059, !3060}
!3058 = !DILocalVariable(name: "vec_", arg: 1, scope: !3054, file: !133, line: 182, type: !2830)
!3059 = !DILocalVariable(name: "ix_", arg: 2, scope: !3054, file: !133, line: 182, type: !5)
!3060 = !DILocalVariable(name: "ptr", arg: 3, scope: !3054, file: !133, line: 182, type: !840)
!3061 = !DILocation(line: 0, scope: !3054)
!3062 = !DILocation(line: 182, column: 1, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3054, file: !133, line: 182, column: 1)
!3064 = !DILocation(line: 182, column: 1, scope: !3054)
!3065 = !DILocation(line: 182, column: 1, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3063, file: !133, line: 182, column: 1)
!3067 = !DILocation(line: 182, column: 1, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3063, file: !133, line: 182, column: 1)
!3069 = !DILocation(line: 0, scope: !3063)
!3070 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !133, file: !133, line: 182, type: !3071, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3074)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!482, !3073, !5, !482}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!3074 = !{!3075, !3076, !3077, !3078}
!3075 = !DILocalVariable(name: "vec_", arg: 1, scope: !3070, file: !133, line: 182, type: !3073)
!3076 = !DILocalVariable(name: "ix_", arg: 2, scope: !3070, file: !133, line: 182, type: !5)
!3077 = !DILocalVariable(name: "obj_", arg: 3, scope: !3070, file: !133, line: 182, type: !482)
!3078 = !DILocalVariable(name: "old_obj_", scope: !3070, file: !133, line: 182, type: !482)
!3079 = !DILocation(line: 0, scope: !3070)
!3080 = !DILocation(line: 182, column: 1, scope: !3070)
!3081 = distinct !DISubprogram(name: "sese_adjust_liveout_phis", scope: !1, file: !1, line: 601, type: !3082, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3084)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null, !1865, !1290, !1258, !786, !786}
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3090, !3097, !3101, !3102, !3103, !3104, !3109, !3110, !3111, !3114}
!3085 = !DILocalVariable(name: "region", arg: 1, scope: !3081, file: !1, line: 601, type: !1865)
!3086 = !DILocalVariable(name: "rename_map", arg: 2, scope: !3081, file: !1, line: 601, type: !1290)
!3087 = !DILocalVariable(name: "bb", arg: 3, scope: !3081, file: !1, line: 601, type: !1258)
!3088 = !DILocalVariable(name: "false_e", arg: 4, scope: !3081, file: !1, line: 602, type: !786)
!3089 = !DILocalVariable(name: "true_e", arg: 5, scope: !3081, file: !1, line: 602, type: !786)
!3090 = !DILocalVariable(name: "si", scope: !3081, file: !1, line: 604, type: !3091)
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !396, line: 265, baseType: !3092)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 254, size: 192, elements: !3093)
!3093 = !{!3094, !3095, !3096}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3092, file: !396, line: 257, baseType: !801, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3092, file: !396, line: 263, baseType: !796, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3092, file: !396, line: 264, baseType: !1258, size: 64, offset: 128)
!3097 = !DILocalVariable(name: "i", scope: !3098, file: !1, line: 608, type: !5)
!3098 = distinct !DILexicalBlock(scope: !3099, file: !1, line: 607, column: 5)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !1, line: 606, column: 3)
!3100 = distinct !DILexicalBlock(scope: !3081, file: !1, line: 606, column: 3)
!3101 = !DILocalVariable(name: "false_i", scope: !3098, file: !1, line: 609, type: !5)
!3102 = !DILocalVariable(name: "phi", scope: !3098, file: !1, line: 610, type: !806)
!3103 = !DILocalVariable(name: "res", scope: !3098, file: !1, line: 611, type: !482)
!3104 = !DILocalVariable(name: "old_name", scope: !3105, file: !1, line: 629, type: !482)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 628, column: 4)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 627, column: 6)
!3107 = distinct !DILexicalBlock(scope: !3108, file: !1, line: 626, column: 7)
!3108 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 626, column: 7)
!3109 = !DILocalVariable(name: "expr", scope: !3105, file: !1, line: 630, type: !482)
!3110 = !DILocalVariable(name: "stmts", scope: !3105, file: !1, line: 631, type: !796)
!3111 = !DILocalVariable(name: "type", scope: !3112, file: !1, line: 638, type: !482)
!3112 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 637, column: 8)
!3113 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 635, column: 10)
!3114 = !DILocalVariable(name: "var", scope: !3112, file: !1, line: 639, type: !482)
!3115 = !DILocation(line: 0, scope: !3081)
!3116 = !DILocation(line: 604, column: 3, scope: !3081)
!3117 = !DILocation(line: 606, column: 13, scope: !3100)
!3118 = !DILocation(line: 0, scope: !3105)
!3119 = !DILocation(line: 606, column: 8, scope: !3100)
!3120 = !DILocation(line: 606, column: 35, scope: !3099)
!3121 = !DILocation(line: 606, column: 34, scope: !3099)
!3122 = !DILocation(line: 606, column: 3, scope: !3100)
!3123 = !DILocation(line: 0, scope: !3098)
!3124 = !DILocation(line: 610, column: 20, scope: !3098)
!3125 = !DILocation(line: 611, column: 18, scope: !3098)
!3126 = !DILocation(line: 613, column: 12, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 613, column: 11)
!3128 = !DILocation(line: 613, column: 11, scope: !3098)
!3129 = !DILocation(line: 619, column: 7, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3098, file: !1, line: 619, column: 7)
!3131 = !DILocation(line: 615, column: 4, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 614, column: 2)
!3133 = !DILocation(line: 616, column: 4, scope: !3132)
!3134 = !DILocation(line: 0, scope: !3130)
!3135 = !DILocation(line: 619, column: 23, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 619, column: 7)
!3137 = !DILocation(line: 619, column: 21, scope: !3136)
!3138 = !DILocation(line: 620, column: 6, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !1, line: 620, column: 6)
!3140 = !DILocation(line: 620, column: 35, scope: !3139)
!3141 = !DILocation(line: 620, column: 6, scope: !3136)
!3142 = !DILocation(line: 619, column: 51, scope: !3136)
!3143 = !DILocation(line: 619, column: 7, scope: !3136)
!3144 = distinct !{!3144, !3129, !3145}
!3145 = !DILocation(line: 624, column: 4, scope: !3130)
!3146 = !DILocation(line: 626, column: 12, scope: !3108)
!3147 = !DILocation(line: 0, scope: !3108)
!3148 = !DILocation(line: 626, column: 23, scope: !3107)
!3149 = !DILocation(line: 626, column: 21, scope: !3107)
!3150 = !DILocation(line: 626, column: 7, scope: !3108)
!3151 = !DILocation(line: 627, column: 6, scope: !3106)
!3152 = !DILocation(line: 627, column: 35, scope: !3106)
!3153 = !DILocation(line: 627, column: 6, scope: !3107)
!3154 = !DILocation(line: 629, column: 22, scope: !3105)
!3155 = !DILocation(line: 630, column: 18, scope: !3105)
!3156 = !DILocation(line: 631, column: 6, scope: !3105)
!3157 = !DILocation(line: 633, column: 6, scope: !3105)
!3158 = !DILocation(line: 635, column: 10, scope: !3113)
!3159 = !DILocation(line: 635, column: 27, scope: !3113)
!3160 = !DILocation(line: 636, column: 3, scope: !3113)
!3161 = !DILocation(line: 636, column: 6, scope: !3113)
!3162 = !DILocation(line: 635, column: 10, scope: !3105)
!3163 = !DILocation(line: 638, column: 15, scope: !3112)
!3164 = !DILocation(line: 0, scope: !3112)
!3165 = !DILocation(line: 639, column: 14, scope: !3112)
!3166 = !DILocation(line: 641, column: 10, scope: !3112)
!3167 = !DILocation(line: 642, column: 10, scope: !3112)
!3168 = !DILocation(line: 643, column: 45, scope: !3112)
!3169 = !DILocation(line: 643, column: 3, scope: !3112)
!3170 = !DILocation(line: 644, column: 8, scope: !3112)
!3171 = !DILocation(line: 646, column: 6, scope: !3105)
!3172 = !DILocation(line: 647, column: 6, scope: !3105)
!3173 = !DILocation(line: 648, column: 4, scope: !3106)
!3174 = !DILocation(line: 648, column: 4, scope: !3105)
!3175 = !DILocation(line: 626, column: 51, scope: !3107)
!3176 = !DILocation(line: 626, column: 7, scope: !3107)
!3177 = distinct !{!3177, !3150, !3178}
!3178 = !DILocation(line: 648, column: 4, scope: !3108)
!3179 = !DILocation(line: 606, column: 51, scope: !3099)
!3180 = !DILocation(line: 606, column: 3, scope: !3099)
!3181 = distinct !{!3181, !3122, !3182}
!3182 = !DILocation(line: 649, column: 5, scope: !3100)
!3183 = !DILocation(line: 650, column: 1, scope: !3081)
!3184 = distinct !DISubprogram(name: "gsi_end_p", scope: !396, file: !396, line: 4467, type: !3185, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!468, !3091}
!3187 = !{!3188}
!3188 = !DILocalVariable(name: "i", arg: 1, scope: !3184, file: !396, line: 4467, type: !3091)
!3189 = !DILocation(line: 4467, column: 33, scope: !3184)
!3190 = !DILocation(line: 4469, column: 12, scope: !3184)
!3191 = !DILocation(line: 4469, column: 16, scope: !3184)
!3192 = !DILocation(line: 4469, column: 10, scope: !3184)
!3193 = !DILocation(line: 4469, column: 3, scope: !3184)
!3194 = distinct !DISubprogram(name: "gsi_stmt", scope: !396, file: !396, line: 4501, type: !3195, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!806, !3091}
!3197 = !{!3198}
!3198 = !DILocalVariable(name: "i", arg: 1, scope: !3194, file: !396, line: 4501, type: !3091)
!3199 = !DILocation(line: 4501, column: 32, scope: !3194)
!3200 = !DILocation(line: 4503, column: 12, scope: !3194)
!3201 = !DILocation(line: 4503, column: 17, scope: !3194)
!3202 = !DILocation(line: 4503, column: 3, scope: !3194)
!3203 = distinct !DISubprogram(name: "gimple_phi_result", scope: !396, file: !396, line: 3071, type: !3204, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3207)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!482, !3206}
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !483, line: 60, baseType: !1913)
!3207 = !{!3208}
!3208 = !DILocalVariable(name: "gs", arg: 1, scope: !3203, file: !396, line: 3071, type: !3206)
!3209 = !DILocation(line: 0, scope: !3203)
!3210 = !DILocation(line: 3074, column: 25, scope: !3203)
!3211 = !DILocation(line: 3074, column: 3, scope: !3203)
!3212 = distinct !DISubprogram(name: "sese_adjust_vphi", scope: !1, file: !1, line: 461, type: !3213, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3215)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{null, !1865, !806, !786}
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3225, !3226, !3227}
!3216 = !DILocalVariable(name: "region", arg: 1, scope: !3212, file: !1, line: 461, type: !1865)
!3217 = !DILocalVariable(name: "phi", arg: 2, scope: !3212, file: !1, line: 461, type: !806)
!3218 = !DILocalVariable(name: "true_e", arg: 3, scope: !3212, file: !1, line: 461, type: !786)
!3219 = !DILocalVariable(name: "i", scope: !3212, file: !1, line: 463, type: !5)
!3220 = !DILocalVariable(name: "true_arg", scope: !3221, file: !1, line: 470, type: !482)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 469, column: 7)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 468, column: 9)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 467, column: 3)
!3224 = distinct !DILexicalBlock(scope: !3212, file: !1, line: 467, column: 3)
!3225 = !DILocalVariable(name: "false_arg", scope: !3221, file: !1, line: 470, type: !482)
!3226 = !DILocalVariable(name: "before_scop_arg", scope: !3221, file: !1, line: 470, type: !482)
!3227 = !DILocalVariable(name: "visited", scope: !3221, file: !1, line: 471, type: !3228)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3229, line: 45, baseType: !3230)
!3229 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3229, line: 39, size: 192, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3231, file: !3229, line: 41, baseType: !467, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3231, file: !3229, line: 42, baseType: !5, size: 32, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3231, file: !3229, line: 43, baseType: !5, size: 32, offset: 96)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3231, file: !3229, line: 44, baseType: !3237, size: 64, offset: 128)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 64, elements: !581)
!3238 = !DILocation(line: 0, scope: !3212)
!3239 = !DILocation(line: 465, column: 3, scope: !3212)
!3240 = !DILocation(line: 467, column: 8, scope: !3224)
!3241 = !DILocation(line: 0, scope: !3224)
!3242 = !DILocation(line: 467, column: 19, scope: !3223)
!3243 = !DILocation(line: 467, column: 17, scope: !3223)
!3244 = !DILocation(line: 467, column: 3, scope: !3224)
!3245 = !DILocation(line: 468, column: 9, scope: !3222)
!3246 = !DILocation(line: 468, column: 38, scope: !3222)
!3247 = !DILocation(line: 468, column: 9, scope: !3223)
!3248 = !DILocation(line: 473, column: 13, scope: !3221)
!3249 = !DILocation(line: 0, scope: !3221)
!3250 = !DILocation(line: 474, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 474, column: 6)
!3252 = !DILocation(line: 474, column: 6, scope: !3221)
!3253 = !DILocation(line: 477, column: 41, scope: !3221)
!3254 = !DILocation(line: 477, column: 39, scope: !3221)
!3255 = !DILocation(line: 477, column: 14, scope: !3221)
!3256 = !DILocation(line: 478, column: 6, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 478, column: 6)
!3258 = !DILocation(line: 478, column: 6, scope: !3221)
!3259 = !DILocation(line: 481, column: 27, scope: !3221)
!3260 = !DILocation(line: 481, column: 12, scope: !3221)
!3261 = !DILocation(line: 482, column: 2, scope: !3221)
!3262 = !DILocation(line: 483, column: 20, scope: !3221)
!3263 = !DILocation(line: 484, column: 2, scope: !3221)
!3264 = !DILocation(line: 485, column: 2, scope: !3221)
!3265 = !DILocation(line: 486, column: 2, scope: !3221)
!3266 = !DILocation(line: 487, column: 7, scope: !3222)
!3267 = !DILocation(line: 467, column: 47, scope: !3223)
!3268 = !DILocation(line: 467, column: 3, scope: !3223)
!3269 = distinct !{!3269, !3244, !3270}
!3270 = !DILocation(line: 487, column: 7, scope: !3224)
!3271 = !DILocation(line: 488, column: 1, scope: !3212)
!3272 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !396, file: !396, line: 3061, type: !3273, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3275)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!5, !3206}
!3275 = !{!3276}
!3276 = !DILocalVariable(name: "gs", arg: 1, scope: !3272, file: !396, line: 3061, type: !3206)
!3277 = !DILocation(line: 0, scope: !3272)
!3278 = !DILocation(line: 3064, column: 25, scope: !3272)
!3279 = !DILocation(line: 3064, column: 3, scope: !3272)
!3280 = distinct !DISubprogram(name: "gimple_phi_arg_edge", scope: !3281, file: !3281, line: 467, type: !3282, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3284)
!3281 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!786, !806, !951}
!3284 = !{!3285, !3286}
!3285 = !DILocalVariable(name: "gs", arg: 1, scope: !3280, file: !3281, line: 467, type: !806)
!3286 = !DILocalVariable(name: "i", arg: 2, scope: !3280, file: !3281, line: 467, type: !951)
!3287 = !DILocation(line: 0, scope: !3280)
!3288 = !DILocation(line: 469, column: 10, scope: !3280)
!3289 = !DILocation(line: 469, column: 3, scope: !3280)
!3290 = distinct !DISubprogram(name: "gimple_phi_arg_def", scope: !3281, file: !3281, line: 450, type: !3291, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3293)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!482, !806, !951}
!3293 = !{!3294, !3295, !3296}
!3294 = !DILocalVariable(name: "gs", arg: 1, scope: !3290, file: !3281, line: 450, type: !806)
!3295 = !DILocalVariable(name: "index", arg: 2, scope: !3290, file: !3281, line: 450, type: !951)
!3296 = !DILocalVariable(name: "pd", scope: !3290, file: !3281, line: 452, type: !3297)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!3298 = !DILocation(line: 0, scope: !3290)
!3299 = !DILocation(line: 452, column: 46, scope: !3290)
!3300 = !DILocation(line: 452, column: 26, scope: !3290)
!3301 = !DILocation(line: 453, column: 33, scope: !3290)
!3302 = !DILocation(line: 453, column: 10, scope: !3290)
!3303 = !DILocation(line: 453, column: 3, scope: !3290)
!3304 = distinct !DISubprogram(name: "get_rename", scope: !1, file: !1, line: 493, type: !2977, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3305)
!3305 = !{!3306, !3307, !3308, !3309}
!3306 = !DILocalVariable(name: "map", arg: 1, scope: !3304, file: !1, line: 493, type: !1290)
!3307 = !DILocalVariable(name: "old_name", arg: 2, scope: !3304, file: !1, line: 493, type: !482)
!3308 = !DILocalVariable(name: "tmp", scope: !3304, file: !1, line: 495, type: !478)
!3309 = !DILocalVariable(name: "slot", scope: !3304, file: !1, line: 496, type: !1314)
!3310 = !DILocation(line: 0, scope: !3304)
!3311 = !DILocation(line: 495, column: 3, scope: !3304)
!3312 = !DILocation(line: 498, column: 3, scope: !3304)
!3313 = !DILocation(line: 499, column: 7, scope: !3304)
!3314 = !DILocation(line: 499, column: 16, scope: !3304)
!3315 = !DILocation(line: 500, column: 10, scope: !3304)
!3316 = !DILocation(line: 502, column: 7, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 502, column: 7)
!3318 = !DILocation(line: 502, column: 12, scope: !3317)
!3319 = !DILocation(line: 502, column: 15, scope: !3317)
!3320 = !DILocation(line: 502, column: 7, scope: !3304)
!3321 = !DILocation(line: 503, column: 38, scope: !3317)
!3322 = !DILocation(line: 503, column: 5, scope: !3317)
!3323 = !DILocation(line: 506, column: 1, scope: !3304)
!3324 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !3281, file: !3281, line: 233, type: !3325, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3327)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{null, !1870, !482}
!3327 = !{!3328, !3329}
!3328 = !DILocalVariable(name: "use", arg: 1, scope: !3324, file: !3281, line: 233, type: !1870)
!3329 = !DILocalVariable(name: "val", arg: 2, scope: !3324, file: !3281, line: 233, type: !482)
!3330 = !DILocation(line: 0, scope: !3324)
!3331 = !DILocation(line: 235, column: 3, scope: !3324)
!3332 = !DILocation(line: 236, column: 10, scope: !3324)
!3333 = !DILocation(line: 236, column: 15, scope: !3324)
!3334 = !DILocation(line: 237, column: 3, scope: !3324)
!3335 = !DILocation(line: 238, column: 1, scope: !3324)
!3336 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !3281, file: !3281, line: 442, type: !3337, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3339)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{!1870, !806, !469}
!3339 = !{!3340, !3341}
!3340 = !DILocalVariable(name: "gs", arg: 1, scope: !3336, file: !3281, line: 442, type: !806)
!3341 = !DILocalVariable(name: "i", arg: 2, scope: !3336, file: !3281, line: 442, type: !469)
!3342 = !DILocation(line: 0, scope: !3336)
!3343 = !DILocation(line: 444, column: 11, scope: !3336)
!3344 = !DILocation(line: 444, column: 35, scope: !3336)
!3345 = !DILocation(line: 444, column: 3, scope: !3336)
!3346 = distinct !DISubprogram(name: "gsi_next", scope: !396, file: !396, line: 4485, type: !3347, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3350)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{null, !3349}
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3350 = !{!3351}
!3351 = !DILocalVariable(name: "i", arg: 1, scope: !3346, file: !396, line: 4485, type: !3349)
!3352 = !DILocation(line: 0, scope: !3346)
!3353 = !DILocation(line: 4487, column: 15, scope: !3346)
!3354 = !DILocation(line: 4487, column: 20, scope: !3346)
!3355 = !DILocation(line: 4487, column: 10, scope: !3346)
!3356 = !DILocation(line: 4488, column: 1, scope: !3346)
!3357 = distinct !DISubprogram(name: "get_true_edge_from_guard_bb", scope: !1, file: !1, line: 1076, type: !3358, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3360)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!786, !1258}
!3360 = !{!3361, !3362, !3363}
!3361 = !DILocalVariable(name: "bb", arg: 1, scope: !3357, file: !1, line: 1076, type: !1258)
!3362 = !DILocalVariable(name: "e", scope: !3357, file: !1, line: 1078, type: !786)
!3363 = !DILocalVariable(name: "ei", scope: !3357, file: !1, line: 1079, type: !3364)
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !341, line: 682, baseType: !3365)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 679, size: 128, elements: !3366)
!3366 = !{!3367, !3368}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3365, file: !341, line: 680, baseType: !5, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3365, file: !341, line: 681, baseType: !3369, size: 64, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!3370 = !DILocation(line: 0, scope: !3357)
!3371 = !DILocation(line: 1078, column: 3, scope: !3357)
!3372 = !DILocation(line: 1079, column: 3, scope: !3357)
!3373 = !DILocation(line: 1081, column: 3, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3357, file: !1, line: 1081, column: 3)
!3375 = !DILocation(line: 0, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3374, file: !1, line: 1081, column: 3)
!3377 = !DILocation(line: 1081, column: 3, scope: !3376)
!3378 = !DILocation(line: 1082, column: 9, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1082, column: 9)
!3380 = !DILocation(line: 1082, column: 12, scope: !3379)
!3381 = !DILocation(line: 1082, column: 18, scope: !3379)
!3382 = !DILocation(line: 1082, column: 9, scope: !3376)
!3383 = !DILocation(line: 1083, column: 7, scope: !3379)
!3384 = distinct !{!3384, !3373, !3385}
!3385 = !DILocation(line: 1083, column: 14, scope: !3374)
!3386 = !DILocation(line: 1085, column: 3, scope: !3357)
!3387 = !DILocation(line: 1086, column: 3, scope: !3357)
!3388 = !DILocation(line: 1087, column: 1, scope: !3357)
!3389 = distinct !DISubprogram(name: "ei_start_1", scope: !341, file: !341, line: 696, type: !3390, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3392)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!3364, !3369}
!3392 = !{!3393, !3394}
!3393 = !DILocalVariable(name: "ev", arg: 1, scope: !3389, file: !341, line: 696, type: !3369)
!3394 = !DILocalVariable(name: "i", scope: !3389, file: !341, line: 698, type: !3364)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 700, column: 5, scope: !3389)
!3397 = !DILocation(line: 700, column: 11, scope: !3389)
!3398 = !DILocation(line: 701, column: 5, scope: !3389)
!3399 = !DILocation(line: 701, column: 15, scope: !3389)
!3400 = !DILocation(line: 703, column: 3, scope: !3389)
!3401 = distinct !DISubprogram(name: "ei_cond", scope: !341, file: !341, line: 771, type: !3402, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3405)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!468, !3364, !3404}
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!3405 = !{!3406, !3407}
!3406 = !DILocalVariable(name: "ei", arg: 1, scope: !3401, file: !341, line: 771, type: !3364)
!3407 = !DILocalVariable(name: "p", arg: 2, scope: !3401, file: !341, line: 771, type: !3404)
!3408 = !DILocation(line: 0, scope: !3401)
!3409 = !DILocation(line: 773, column: 8, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3401, file: !341, line: 773, column: 7)
!3411 = !DILocation(line: 773, column: 7, scope: !3401)
!3412 = !DILocation(line: 775, column: 12, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3410, file: !341, line: 774, column: 5)
!3414 = !DILocation(line: 776, column: 7, scope: !3413)
!3415 = !DILocation(line: 781, column: 7, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3410, file: !341, line: 779, column: 5)
!3417 = !DILocation(line: 0, scope: !3410)
!3418 = !DILocation(line: 783, column: 1, scope: !3401)
!3419 = distinct !DISubprogram(name: "ei_next", scope: !341, file: !341, line: 736, type: !3420, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3423)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{null, !3422}
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3423 = !{!3424}
!3424 = !DILocalVariable(name: "i", arg: 1, scope: !3419, file: !341, line: 736, type: !3422)
!3425 = !DILocation(line: 0, scope: !3419)
!3426 = !DILocation(line: 738, column: 3, scope: !3419)
!3427 = !DILocation(line: 739, column: 11, scope: !3419)
!3428 = !DILocation(line: 740, column: 1, scope: !3419)
!3429 = distinct !DISubprogram(name: "get_false_edge_from_guard_bb", scope: !1, file: !1, line: 1092, type: !3358, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3430)
!3430 = !{!3431, !3432, !3433}
!3431 = !DILocalVariable(name: "bb", arg: 1, scope: !3429, file: !1, line: 1092, type: !1258)
!3432 = !DILocalVariable(name: "e", scope: !3429, file: !1, line: 1094, type: !786)
!3433 = !DILocalVariable(name: "ei", scope: !3429, file: !1, line: 1095, type: !3364)
!3434 = !DILocation(line: 0, scope: !3429)
!3435 = !DILocation(line: 1094, column: 3, scope: !3429)
!3436 = !DILocation(line: 1095, column: 3, scope: !3429)
!3437 = !DILocation(line: 1097, column: 3, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3429, file: !1, line: 1097, column: 3)
!3439 = !DILocation(line: 0, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 1097, column: 3)
!3441 = !DILocation(line: 1097, column: 3, scope: !3440)
!3442 = !DILocation(line: 1098, column: 11, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !1, line: 1098, column: 9)
!3444 = !DILocation(line: 1098, column: 14, scope: !3443)
!3445 = !DILocation(line: 1098, column: 20, scope: !3443)
!3446 = !DILocation(line: 1098, column: 9, scope: !3440)
!3447 = !DILocation(line: 1099, column: 7, scope: !3443)
!3448 = distinct !{!3448, !3437, !3449}
!3449 = !DILocation(line: 1099, column: 14, scope: !3438)
!3450 = !DILocation(line: 1101, column: 3, scope: !3429)
!3451 = !DILocation(line: 1102, column: 3, scope: !3429)
!3452 = !DILocation(line: 1103, column: 1, scope: !3429)
!3453 = distinct !DISubprogram(name: "insert_loop_close_phis", scope: !1, file: !1, line: 1251, type: !3454, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{null, !1290, !1048}
!3456 = !{!3457, !3458, !3459, !3460, !3461}
!3457 = !DILocalVariable(name: "map", arg: 1, scope: !3453, file: !1, line: 1251, type: !1290)
!3458 = !DILocalVariable(name: "loop", arg: 2, scope: !3453, file: !1, line: 1251, type: !1048)
!3459 = !DILocalVariable(name: "i", scope: !3453, file: !1, line: 1253, type: !469)
!3460 = !DILocalVariable(name: "a", scope: !3453, file: !1, line: 1254, type: !1901)
!3461 = !DILocalVariable(name: "elt", scope: !3453, file: !1, line: 1255, type: !1886)
!3462 = !DILocation(line: 0, scope: !3453)
!3463 = !DILocation(line: 1254, column: 3, scope: !3453)
!3464 = !DILocation(line: 1255, column: 3, scope: !3453)
!3465 = !DILocation(line: 1257, column: 5, scope: !3453)
!3466 = !DILocation(line: 1257, column: 10, scope: !3453)
!3467 = !DILocation(line: 1258, column: 19, scope: !3453)
!3468 = !DILocation(line: 1258, column: 5, scope: !3453)
!3469 = !DILocation(line: 1258, column: 17, scope: !3453)
!3470 = !DILocation(line: 1259, column: 3, scope: !3453)
!3471 = !DILocation(line: 1260, column: 3, scope: !3453)
!3472 = !DILocation(line: 1261, column: 3, scope: !3453)
!3473 = !DILocation(line: 0, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !1, line: 1264, column: 5)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !1, line: 1263, column: 3)
!3476 = distinct !DILexicalBlock(scope: !3453, file: !1, line: 1263, column: 3)
!3477 = !DILocation(line: 1263, column: 8, scope: !3476)
!3478 = !DILocation(line: 0, scope: !3476)
!3479 = !DILocation(line: 1263, column: 15, scope: !3475)
!3480 = !DILocation(line: 1263, column: 3, scope: !3476)
!3481 = !DILocation(line: 1265, column: 24, scope: !3474)
!3482 = !DILocation(line: 1265, column: 29, scope: !3474)
!3483 = !DILocation(line: 1265, column: 44, scope: !3474)
!3484 = !DILocation(line: 1265, column: 7, scope: !3474)
!3485 = !DILocation(line: 1266, column: 13, scope: !3474)
!3486 = !DILocation(line: 1266, column: 7, scope: !3474)
!3487 = !DILocation(line: 1263, column: 69, scope: !3475)
!3488 = !DILocation(line: 1263, column: 3, scope: !3475)
!3489 = distinct !{!3489, !3480, !3490}
!3490 = !DILocation(line: 1267, column: 5, scope: !3476)
!3491 = !DILocation(line: 1269, column: 3, scope: !3453)
!3492 = !DILocation(line: 1270, column: 1, scope: !3453)
!3493 = distinct !DISubprogram(name: "VEC_rename_map_elt_heap_alloc", scope: !479, file: !479, line: 261, type: !3494, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3496)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!1887, !469}
!3496 = !{!3497}
!3497 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3493, file: !479, line: 261, type: !469)
!3498 = !DILocation(line: 0, scope: !3493)
!3499 = !DILocation(line: 261, column: 1, scope: !3493)
!3500 = distinct !DISubprogram(name: "add_loop_exit_phis", scope: !1, file: !1, line: 1193, type: !2374, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3501)
!3501 = !{!3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3517, !3518}
!3502 = !DILocalVariable(name: "slot", arg: 1, scope: !3500, file: !1, line: 1193, type: !1314)
!3503 = !DILocalVariable(name: "data", arg: 2, scope: !3500, file: !1, line: 1193, type: !473)
!3504 = !DILocalVariable(name: "entry", scope: !3500, file: !1, line: 1195, type: !1868)
!3505 = !DILocalVariable(name: "a", scope: !3500, file: !1, line: 1196, type: !1899)
!3506 = !DILocalVariable(name: "loop", scope: !3500, file: !1, line: 1197, type: !1048)
!3507 = !DILocalVariable(name: "expr", scope: !3500, file: !1, line: 1198, type: !482)
!3508 = !DILocalVariable(name: "new_name", scope: !3500, file: !1, line: 1198, type: !482)
!3509 = !DILocalVariable(name: "old_name", scope: !3500, file: !1, line: 1198, type: !482)
!3510 = !DILocalVariable(name: "def_in_loop_p", scope: !3500, file: !1, line: 1199, type: !468)
!3511 = !DILocalVariable(name: "used_outside_p", scope: !3500, file: !1, line: 1199, type: !468)
!3512 = !DILocalVariable(name: "need_close_phi_p", scope: !3500, file: !1, line: 1199, type: !468)
!3513 = !DILocalVariable(name: "old_close_phi", scope: !3500, file: !1, line: 1200, type: !806)
!3514 = !DILocalVariable(name: "bb", scope: !3515, file: !1, line: 1231, type: !1258)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !1, line: 1230, column: 5)
!3516 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1229, column: 7)
!3517 = !DILocalVariable(name: "phi", scope: !3515, file: !1, line: 1232, type: !806)
!3518 = !DILocalVariable(name: "new_res", scope: !3515, file: !1, line: 1233, type: !482)
!3519 = !DILocation(line: 0, scope: !3500)
!3520 = !DILocation(line: 1202, column: 8, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1202, column: 7)
!3522 = !DILocation(line: 1202, column: 13, scope: !3521)
!3523 = !DILocation(line: 1202, column: 17, scope: !3521)
!3524 = !DILocation(line: 1202, column: 27, scope: !3521)
!3525 = !DILocation(line: 1202, column: 23, scope: !3521)
!3526 = !DILocation(line: 1207, column: 13, scope: !3500)
!3527 = !DILocation(line: 1208, column: 28, scope: !3500)
!3528 = !DILocation(line: 1209, column: 21, scope: !3500)
!3529 = !DILocation(line: 1211, column: 19, scope: !3500)
!3530 = !DILocation(line: 1212, column: 8, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1212, column: 7)
!3532 = !DILocation(line: 1212, column: 7, scope: !3500)
!3533 = !DILocation(line: 1217, column: 9, scope: !3500)
!3534 = !DILocation(line: 1217, column: 3, scope: !3500)
!3535 = !DILocation(line: 1218, column: 9, scope: !3500)
!3536 = !DILocation(line: 1220, column: 7, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1220, column: 7)
!3538 = !DILocation(line: 1220, column: 24, scope: !3537)
!3539 = !DILocation(line: 1220, column: 7, scope: !3500)
!3540 = !DILocation(line: 1223, column: 19, scope: !3500)
!3541 = !DILocation(line: 1224, column: 35, scope: !3500)
!3542 = !DILocation(line: 1226, column: 9, scope: !3500)
!3543 = !DILocation(line: 1226, column: 12, scope: !3500)
!3544 = !DILocation(line: 1229, column: 7, scope: !3500)
!3545 = !DILocation(line: 1231, column: 24, scope: !3515)
!3546 = !DILocation(line: 1231, column: 44, scope: !3515)
!3547 = !DILocation(line: 0, scope: !3515)
!3548 = !DILocation(line: 1232, column: 20, scope: !3515)
!3549 = !DILocation(line: 1233, column: 42, scope: !3515)
!3550 = !DILocation(line: 1234, column: 7, scope: !3515)
!3551 = !DILocation(line: 1233, column: 22, scope: !3515)
!3552 = !DILocation(line: 1236, column: 35, scope: !3515)
!3553 = !DILocation(line: 1236, column: 7, scope: !3515)
!3554 = !DILocation(line: 1237, column: 7, scope: !3515)
!3555 = !DILocation(line: 1240, column: 5, scope: !3515)
!3556 = !DILocation(line: 1243, column: 1, scope: !3500)
!3557 = distinct !DISubprogram(name: "VEC_rename_map_elt_base_iterate", scope: !479, file: !479, line: 260, type: !3558, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3563)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!469, !3560, !5, !3562}
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!3563 = !{!3564, !3565, !3566}
!3564 = !DILocalVariable(name: "vec_", arg: 1, scope: !3557, file: !479, line: 260, type: !3560)
!3565 = !DILocalVariable(name: "ix_", arg: 2, scope: !3557, file: !479, line: 260, type: !5)
!3566 = !DILocalVariable(name: "ptr", arg: 3, scope: !3557, file: !479, line: 260, type: !3562)
!3567 = !DILocation(line: 0, scope: !3557)
!3568 = !DILocation(line: 260, column: 1, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3557, file: !479, line: 260, column: 1)
!3570 = !DILocation(line: 260, column: 1, scope: !3557)
!3571 = !DILocation(line: 260, column: 1, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3569, file: !479, line: 260, column: 1)
!3573 = !DILocation(line: 260, column: 1, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3569, file: !479, line: 260, column: 1)
!3575 = !DILocation(line: 0, scope: !3569)
!3576 = distinct !DISubprogram(name: "VEC_rename_map_elt_heap_free", scope: !479, file: !479, line: 261, type: !3577, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3580)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{null, !3579}
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!3580 = !{!3581}
!3581 = !DILocalVariable(name: "vec_", arg: 1, scope: !3576, file: !479, line: 261, type: !3579)
!3582 = !DILocation(line: 0, scope: !3576)
!3583 = !DILocation(line: 261, column: 1, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3576, file: !479, line: 261, column: 1)
!3585 = !DILocation(line: 261, column: 1, scope: !3576)
!3586 = distinct !DISubprogram(name: "insert_guard_phis", scope: !1, file: !1, line: 1371, type: !3587, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{null, !1258, !786, !786, !1290, !1290}
!3589 = !{!3590, !3591, !3592, !3593, !3594, !3595}
!3590 = !DILocalVariable(name: "bb", arg: 1, scope: !3586, file: !1, line: 1371, type: !1258)
!3591 = !DILocalVariable(name: "true_edge", arg: 2, scope: !3586, file: !1, line: 1371, type: !786)
!3592 = !DILocalVariable(name: "false_edge", arg: 3, scope: !3586, file: !1, line: 1371, type: !786)
!3593 = !DILocalVariable(name: "before_guard", arg: 4, scope: !3586, file: !1, line: 1372, type: !1290)
!3594 = !DILocalVariable(name: "rename_map", arg: 5, scope: !3586, file: !1, line: 1372, type: !1290)
!3595 = !DILocalVariable(name: "i", scope: !3586, file: !1, line: 1374, type: !1906)
!3596 = !DILocation(line: 0, scope: !3586)
!3597 = !DILocation(line: 1374, column: 3, scope: !3586)
!3598 = !DILocation(line: 1375, column: 5, scope: !3586)
!3599 = !DILocation(line: 1375, column: 8, scope: !3586)
!3600 = !DILocation(line: 1376, column: 5, scope: !3586)
!3601 = !DILocation(line: 1376, column: 15, scope: !3586)
!3602 = !DILocation(line: 1377, column: 5, scope: !3586)
!3603 = !DILocation(line: 1377, column: 16, scope: !3586)
!3604 = !DILocation(line: 1378, column: 5, scope: !3586)
!3605 = !DILocation(line: 1378, column: 18, scope: !3586)
!3606 = !DILocation(line: 1380, column: 3, scope: !3586)
!3607 = !DILocation(line: 1381, column: 3, scope: !3586)
!3608 = !DILocation(line: 1382, column: 3, scope: !3586)
!3609 = !DILocation(line: 1383, column: 1, scope: !3586)
!3610 = distinct !DISubprogram(name: "add_guard_exit_phis", scope: !1, file: !1, line: 1325, type: !2374, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3611)
!3611 = !{!3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622}
!3612 = !DILocalVariable(name: "slot", arg: 1, scope: !3610, file: !1, line: 1325, type: !1314)
!3613 = !DILocalVariable(name: "s", arg: 2, scope: !3610, file: !1, line: 1325, type: !473)
!3614 = !DILocalVariable(name: "entry", scope: !3610, file: !1, line: 1327, type: !1868)
!3615 = !DILocalVariable(name: "i", scope: !3610, file: !1, line: 1328, type: !1905)
!3616 = !DILocalVariable(name: "bb", scope: !3610, file: !1, line: 1329, type: !1258)
!3617 = !DILocalVariable(name: "true_edge", scope: !3610, file: !1, line: 1330, type: !786)
!3618 = !DILocalVariable(name: "false_edge", scope: !3610, file: !1, line: 1331, type: !786)
!3619 = !DILocalVariable(name: "res", scope: !3610, file: !1, line: 1332, type: !482)
!3620 = !DILocalVariable(name: "name1", scope: !3610, file: !1, line: 1333, type: !482)
!3621 = !DILocalVariable(name: "name2", scope: !3610, file: !1, line: 1334, type: !482)
!3622 = !DILocalVariable(name: "phi", scope: !3610, file: !1, line: 1335, type: !806)
!3623 = !DILocation(line: 0, scope: !3610)
!3624 = !DILocation(line: 1327, column: 64, scope: !3610)
!3625 = !DILocation(line: 1329, column: 23, scope: !3610)
!3626 = !DILocation(line: 1330, column: 23, scope: !3610)
!3627 = !DILocation(line: 1331, column: 24, scope: !3610)
!3628 = !DILocation(line: 1332, column: 21, scope: !3610)
!3629 = !DILocation(line: 1333, column: 23, scope: !3610)
!3630 = !DILocation(line: 1334, column: 41, scope: !3610)
!3631 = !DILocation(line: 1334, column: 16, scope: !3610)
!3632 = !DILocation(line: 1339, column: 13, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3610, file: !1, line: 1339, column: 7)
!3634 = !DILocation(line: 1339, column: 7, scope: !3610)
!3635 = !DILocation(line: 1342, column: 11, scope: !3610)
!3636 = !DILocation(line: 1343, column: 11, scope: !3610)
!3637 = !DILocation(line: 1345, column: 9, scope: !3610)
!3638 = !DILocation(line: 1346, column: 29, scope: !3610)
!3639 = !DILocation(line: 1347, column: 8, scope: !3610)
!3640 = !DILocation(line: 1346, column: 9, scope: !3610)
!3641 = !DILocation(line: 1349, column: 3, scope: !3610)
!3642 = !DILocation(line: 1350, column: 3, scope: !3610)
!3643 = !DILocation(line: 1352, column: 15, scope: !3610)
!3644 = !DILocation(line: 1353, column: 9, scope: !3610)
!3645 = !DILocation(line: 1354, column: 3, scope: !3610)
!3646 = !DILocation(line: 1355, column: 1, scope: !3610)
!3647 = distinct !DISubprogram(name: "copy_bb_and_scalar_dependences", scope: !1, file: !1, line: 1429, type: !3648, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3650)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!786, !1258, !1865, !786, !1290}
!3650 = !{!3651, !3652, !3653, !3654, !3655}
!3651 = !DILocalVariable(name: "bb", arg: 1, scope: !3647, file: !1, line: 1429, type: !1258)
!3652 = !DILocalVariable(name: "region", arg: 2, scope: !3647, file: !1, line: 1429, type: !1865)
!3653 = !DILocalVariable(name: "next_e", arg: 3, scope: !3647, file: !1, line: 1430, type: !786)
!3654 = !DILocalVariable(name: "map", arg: 4, scope: !3647, file: !1, line: 1430, type: !1290)
!3655 = !DILocalVariable(name: "new_bb", scope: !3647, file: !1, line: 1432, type: !1258)
!3656 = !DILocation(line: 0, scope: !3647)
!3657 = !DILocation(line: 1432, column: 24, scope: !3647)
!3658 = !DILocation(line: 1434, column: 12, scope: !3647)
!3659 = !DILocation(line: 1435, column: 3, scope: !3647)
!3660 = !DILocation(line: 1436, column: 3, scope: !3647)
!3661 = !DILocation(line: 1437, column: 3, scope: !3647)
!3662 = !DILocation(line: 1438, column: 3, scope: !3647)
!3663 = !DILocation(line: 1439, column: 3, scope: !3647)
!3664 = !DILocation(line: 1441, column: 3, scope: !3647)
!3665 = distinct !DISubprogram(name: "single_succ_edge", scope: !341, file: !341, line: 643, type: !3666, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3671)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!786, !3668}
!3668 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !483, line: 112, baseType: !3669)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!3671 = !{!3672}
!3672 = !DILocalVariable(name: "bb", arg: 1, scope: !3665, file: !341, line: 643, type: !3668)
!3673 = !DILocation(line: 0, scope: !3665)
!3674 = !DILocation(line: 645, column: 3, scope: !3665)
!3675 = !DILocation(line: 646, column: 10, scope: !3665)
!3676 = !DILocation(line: 646, column: 3, scope: !3665)
!3677 = distinct !DISubprogram(name: "graphite_copy_stmts_from_block", scope: !1, file: !1, line: 1389, type: !3678, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3680)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !1258, !1258, !1290}
!3680 = !{!3681, !3682, !3683, !3684, !3685, !3686, !3690, !3703, !3704, !3705, !3709}
!3681 = !DILocalVariable(name: "bb", arg: 1, scope: !3677, file: !1, line: 1389, type: !1258)
!3682 = !DILocalVariable(name: "new_bb", arg: 2, scope: !3677, file: !1, line: 1389, type: !1258)
!3683 = !DILocalVariable(name: "map", arg: 3, scope: !3677, file: !1, line: 1389, type: !1290)
!3684 = !DILocalVariable(name: "gsi", scope: !3677, file: !1, line: 1391, type: !3091)
!3685 = !DILocalVariable(name: "gsi_tgt", scope: !3677, file: !1, line: 1391, type: !3091)
!3686 = !DILocalVariable(name: "def_p", scope: !3687, file: !1, line: 1396, type: !1912)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !1, line: 1395, column: 5)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !1, line: 1394, column: 3)
!3689 = distinct !DILexicalBlock(scope: !3677, file: !1, line: 1394, column: 3)
!3690 = !DILocalVariable(name: "op_iter", scope: !3687, file: !1, line: 1397, type: !3691)
!3691 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !389, line: 140, baseType: !3692)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !389, line: 131, size: 320, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3698, !3700, !3701, !3702}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3692, file: !389, line: 133, baseType: !468, size: 8)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !3692, file: !389, line: 134, baseType: !388, size: 32, offset: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !3692, file: !389, line: 135, baseType: !3697, size: 64, offset: 64)
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !389, line: 42, baseType: !835)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !3692, file: !389, line: 136, baseType: !3699, size: 64, offset: 128)
!3699 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !389, line: 50, baseType: !842)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !3692, file: !389, line: 137, baseType: !469, size: 32, offset: 192)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !3692, file: !389, line: 138, baseType: !469, size: 32, offset: 224)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !3692, file: !389, line: 139, baseType: !806, size: 64, offset: 256)
!3703 = !DILocalVariable(name: "stmt", scope: !3687, file: !1, line: 1398, type: !806)
!3704 = !DILocalVariable(name: "copy", scope: !3687, file: !1, line: 1399, type: !806)
!3705 = !DILocalVariable(name: "old_name", scope: !3706, file: !1, line: 1417, type: !482)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !1, line: 1416, column: 2)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 1415, column: 7)
!3708 = distinct !DILexicalBlock(scope: !3687, file: !1, line: 1415, column: 7)
!3709 = !DILocalVariable(name: "new_name", scope: !3706, file: !1, line: 1418, type: !482)
!3710 = !DILocation(line: 0, scope: !3677)
!3711 = !DILocation(line: 1391, column: 3, scope: !3677)
!3712 = !DILocation(line: 1393, column: 13, scope: !3677)
!3713 = !DILocation(line: 1394, column: 14, scope: !3689)
!3714 = !DILocation(line: 0, scope: !3687)
!3715 = !DILocation(line: 1394, column: 8, scope: !3689)
!3716 = !DILocation(line: 1394, column: 34, scope: !3688)
!3717 = !DILocation(line: 1394, column: 33, scope: !3688)
!3718 = !DILocation(line: 1394, column: 3, scope: !3689)
!3719 = !DILocation(line: 1397, column: 7, scope: !3687)
!3720 = !DILocation(line: 1398, column: 21, scope: !3687)
!3721 = !DILocation(line: 1401, column: 11, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3687, file: !1, line: 1401, column: 11)
!3723 = !DILocation(line: 1401, column: 30, scope: !3722)
!3724 = !DILocation(line: 1401, column: 11, scope: !3687)
!3725 = !DILocation(line: 1406, column: 14, scope: !3687)
!3726 = !DILocation(line: 1407, column: 7, scope: !3687)
!3727 = !DILocation(line: 1408, column: 42, scope: !3687)
!3728 = !DILocation(line: 1408, column: 30, scope: !3687)
!3729 = !DILocation(line: 1408, column: 7, scope: !3687)
!3730 = !DILocation(line: 1410, column: 7, scope: !3687)
!3731 = !DILocation(line: 1411, column: 41, scope: !3687)
!3732 = !DILocation(line: 1411, column: 7, scope: !3687)
!3733 = !DILocation(line: 1415, column: 7, scope: !3708)
!3734 = !DILocation(line: 0, scope: !3708)
!3735 = !DILocation(line: 1415, column: 7, scope: !3707)
!3736 = !DILocation(line: 1417, column: 20, scope: !3706)
!3737 = !DILocation(line: 0, scope: !3706)
!3738 = !DILocation(line: 1418, column: 20, scope: !3706)
!3739 = !DILocation(line: 1419, column: 4, scope: !3706)
!3740 = distinct !{!3740, !3733, !3741}
!3741 = !DILocation(line: 1420, column: 2, scope: !3708)
!3742 = !DILocation(line: 1421, column: 5, scope: !3688)
!3743 = !DILocation(line: 1394, column: 51, scope: !3688)
!3744 = !DILocation(line: 1394, column: 3, scope: !3688)
!3745 = distinct !{!3745, !3718, !3746}
!3746 = !DILocation(line: 1421, column: 5, scope: !3689)
!3747 = !DILocation(line: 1422, column: 1, scope: !3677)
!3748 = distinct !DISubprogram(name: "remove_condition", scope: !1, file: !1, line: 1062, type: !3749, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3751)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{null, !1258}
!3751 = !{!3752, !3753, !3754}
!3752 = !DILocalVariable(name: "bb", arg: 1, scope: !3748, file: !1, line: 1062, type: !1258)
!3753 = !DILocalVariable(name: "last", scope: !3748, file: !1, line: 1064, type: !806)
!3754 = !DILocalVariable(name: "gsi", scope: !3755, file: !1, line: 1068, type: !3091)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !1, line: 1067, column: 5)
!3756 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 1066, column: 7)
!3757 = !DILocation(line: 0, scope: !3748)
!3758 = !DILocation(line: 1064, column: 17, scope: !3748)
!3759 = !DILocation(line: 1066, column: 7, scope: !3756)
!3760 = !DILocation(line: 1066, column: 12, scope: !3756)
!3761 = !DILocation(line: 1066, column: 15, scope: !3756)
!3762 = !DILocation(line: 1066, column: 34, scope: !3756)
!3763 = !DILocation(line: 1066, column: 7, scope: !3748)
!3764 = !DILocation(line: 1068, column: 7, scope: !3755)
!3765 = !DILocation(line: 0, scope: !3755)
!3766 = !DILocation(line: 1068, column: 34, scope: !3755)
!3767 = !DILocation(line: 1069, column: 7, scope: !3755)
!3768 = !DILocation(line: 1070, column: 5, scope: !3756)
!3769 = !DILocation(line: 1070, column: 5, scope: !3755)
!3770 = !DILocation(line: 1071, column: 1, scope: !3748)
!3771 = distinct !DISubprogram(name: "expand_scalar_variables", scope: !1, file: !1, line: 1035, type: !3772, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3774)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{null, !1258, !1865, !1290}
!3774 = !{!3775, !3776, !3777, !3778, !3779}
!3775 = !DILocalVariable(name: "bb", arg: 1, scope: !3771, file: !1, line: 1035, type: !1258)
!3776 = !DILocalVariable(name: "region", arg: 2, scope: !3771, file: !1, line: 1035, type: !1865)
!3777 = !DILocalVariable(name: "map", arg: 3, scope: !3771, file: !1, line: 1035, type: !1290)
!3778 = !DILocalVariable(name: "gsi", scope: !3771, file: !1, line: 1037, type: !3091)
!3779 = !DILocalVariable(name: "stmt", scope: !3780, file: !1, line: 1041, type: !806)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 1040, column: 5)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !1, line: 1039, column: 3)
!3782 = distinct !DILexicalBlock(scope: !3771, file: !1, line: 1039, column: 3)
!3783 = !DILocation(line: 0, scope: !3771)
!3784 = !DILocation(line: 1037, column: 3, scope: !3771)
!3785 = !DILocation(line: 1039, column: 14, scope: !3782)
!3786 = !DILocation(line: 1039, column: 8, scope: !3782)
!3787 = !DILocation(line: 1039, column: 38, scope: !3781)
!3788 = !DILocation(line: 1039, column: 37, scope: !3781)
!3789 = !DILocation(line: 1039, column: 3, scope: !3782)
!3790 = !DILocation(line: 1041, column: 21, scope: !3780)
!3791 = !DILocation(line: 0, scope: !3780)
!3792 = !DILocation(line: 1042, column: 7, scope: !3780)
!3793 = !DILocation(line: 1043, column: 7, scope: !3780)
!3794 = !DILocation(line: 1039, column: 3, scope: !3781)
!3795 = distinct !{!3795, !3789, !3796}
!3796 = !DILocation(line: 1044, column: 5, scope: !3782)
!3797 = !DILocation(line: 1045, column: 1, scope: !3771)
!3798 = distinct !DISubprogram(name: "rename_variables", scope: !1, file: !1, line: 1050, type: !3799, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{null, !1258, !1290}
!3801 = !{!3802, !3803, !3804, !3805}
!3802 = !DILocalVariable(name: "bb", arg: 1, scope: !3798, file: !1, line: 1050, type: !1258)
!3803 = !DILocalVariable(name: "map", arg: 2, scope: !3798, file: !1, line: 1050, type: !1290)
!3804 = !DILocalVariable(name: "gsi", scope: !3798, file: !1, line: 1052, type: !3091)
!3805 = !DILocalVariable(name: "insert_gsi", scope: !3798, file: !1, line: 1053, type: !3091)
!3806 = !DILocation(line: 0, scope: !3798)
!3807 = !DILocation(line: 1052, column: 3, scope: !3798)
!3808 = !DILocation(line: 1053, column: 3, scope: !3798)
!3809 = !DILocation(line: 1053, column: 37, scope: !3798)
!3810 = !DILocation(line: 1055, column: 14, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3798, file: !1, line: 1055, column: 3)
!3812 = !DILocation(line: 1055, column: 8, scope: !3811)
!3813 = !DILocation(line: 1055, column: 38, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !1, line: 1055, column: 3)
!3815 = !DILocation(line: 1055, column: 37, scope: !3814)
!3816 = !DILocation(line: 1055, column: 3, scope: !3811)
!3817 = !DILocation(line: 1056, column: 31, scope: !3814)
!3818 = !DILocation(line: 1056, column: 5, scope: !3814)
!3819 = !DILocation(line: 1055, column: 55, scope: !3814)
!3820 = !DILocation(line: 1055, column: 3, scope: !3814)
!3821 = distinct !{!3821, !3816, !3822}
!3822 = !DILocation(line: 1056, column: 63, scope: !3811)
!3823 = !DILocation(line: 1057, column: 1, scope: !3798)
!3824 = distinct !DISubprogram(name: "outermost_loop_in_sese", scope: !1, file: !1, line: 1447, type: !3825, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!1021, !1865, !1258}
!3827 = !{!3828, !3829, !3830}
!3828 = !DILocalVariable(name: "region", arg: 1, scope: !3824, file: !1, line: 1447, type: !1865)
!3829 = !DILocalVariable(name: "bb", arg: 2, scope: !3824, file: !1, line: 1447, type: !1258)
!3830 = !DILocalVariable(name: "nest", scope: !3824, file: !1, line: 1449, type: !1021)
!3831 = !DILocation(line: 0, scope: !3824)
!3832 = !DILocation(line: 1451, column: 14, scope: !3824)
!3833 = !DILocation(line: 1452, column: 3, scope: !3824)
!3834 = !DILocation(line: 1452, column: 10, scope: !3824)
!3835 = !DILocation(line: 1453, column: 3, scope: !3824)
!3836 = !DILocation(line: 1453, column: 22, scope: !3824)
!3837 = !DILocation(line: 1453, column: 6, scope: !3824)
!3838 = !DILocation(line: 1454, column: 12, scope: !3824)
!3839 = distinct !{!3839, !3833, !3840}
!3840 = !DILocation(line: 1454, column: 28, scope: !3824)
!3841 = !DILocation(line: 1456, column: 3, scope: !3824)
!3842 = distinct !DISubprogram(name: "loop_outer", scope: !328, file: !328, line: 434, type: !3843, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3847)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!1021, !3845}
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!3847 = !{!3848, !3849}
!3848 = !DILocalVariable(name: "loop", arg: 1, scope: !3842, file: !328, line: 434, type: !3845)
!3849 = !DILocalVariable(name: "n", scope: !3842, file: !328, line: 436, type: !5)
!3850 = !DILocation(line: 0, scope: !3842)
!3851 = !DILocation(line: 436, column: 16, scope: !3842)
!3852 = !DILocation(line: 438, column: 9, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3842, file: !328, line: 438, column: 7)
!3854 = !DILocation(line: 438, column: 7, scope: !3842)
!3855 = !DILocation(line: 441, column: 10, scope: !3842)
!3856 = !DILocation(line: 441, column: 3, scope: !3842)
!3857 = !DILocation(line: 442, column: 1, scope: !3842)
!3858 = distinct !DISubprogram(name: "loop_in_sese_p", scope: !479, file: !479, line: 135, type: !3859, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3861)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!468, !1021, !1865}
!3861 = !{!3862, !3863}
!3862 = !DILocalVariable(name: "loop", arg: 1, scope: !3858, file: !479, line: 135, type: !1021)
!3863 = !DILocalVariable(name: "region", arg: 2, scope: !3858, file: !479, line: 135, type: !1865)
!3864 = !DILocation(line: 0, scope: !3858)
!3865 = !DILocation(line: 137, column: 31, scope: !3858)
!3866 = !DILocation(line: 137, column: 11, scope: !3858)
!3867 = !DILocation(line: 138, column: 4, scope: !3858)
!3868 = !DILocation(line: 138, column: 27, scope: !3858)
!3869 = !DILocation(line: 138, column: 7, scope: !3858)
!3870 = !DILocation(line: 137, column: 3, scope: !3858)
!3871 = distinct !DISubprogram(name: "if_region_set_false_region", scope: !1, file: !1, line: 1462, type: !3872, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3875)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !3874, !1865}
!3874 = !DIDerivedType(tag: DW_TAG_typedef, name: "ifsese", file: !479, line: 226, baseType: !1861)
!3875 = !{!3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886}
!3876 = !DILocalVariable(name: "if_region", arg: 1, scope: !3871, file: !1, line: 1462, type: !3874)
!3877 = !DILocalVariable(name: "region", arg: 2, scope: !3871, file: !1, line: 1462, type: !1865)
!3878 = !DILocalVariable(name: "condition", scope: !3871, file: !1, line: 1464, type: !1258)
!3879 = !DILocalVariable(name: "false_edge", scope: !3871, file: !1, line: 1465, type: !786)
!3880 = !DILocalVariable(name: "dummy", scope: !3871, file: !1, line: 1466, type: !1258)
!3881 = !DILocalVariable(name: "entry_region", scope: !3871, file: !1, line: 1467, type: !786)
!3882 = !DILocalVariable(name: "exit_region", scope: !3871, file: !1, line: 1468, type: !786)
!3883 = !DILocalVariable(name: "before_region", scope: !3871, file: !1, line: 1469, type: !1258)
!3884 = !DILocalVariable(name: "last_in_region", scope: !3871, file: !1, line: 1470, type: !1258)
!3885 = !DILocalVariable(name: "slot", scope: !3871, file: !1, line: 1471, type: !1314)
!3886 = !DILocalVariable(name: "loop_exit", scope: !3887, file: !1, line: 1495, type: !1067)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !1, line: 1494, column: 5)
!3888 = distinct !DILexicalBlock(scope: !3871, file: !1, line: 1493, column: 7)
!3889 = !DILocation(line: 0, scope: !3871)
!3890 = !DILocation(line: 1464, column: 27, scope: !3871)
!3891 = !DILocation(line: 1465, column: 21, scope: !3871)
!3892 = !DILocation(line: 1466, column: 35, scope: !3871)
!3893 = !DILocation(line: 1467, column: 23, scope: !3871)
!3894 = !DILocation(line: 1468, column: 22, scope: !3871)
!3895 = !DILocation(line: 1469, column: 45, scope: !3871)
!3896 = !DILocation(line: 1470, column: 45, scope: !3871)
!3897 = !DILocation(line: 1471, column: 43, scope: !3871)
!3898 = !DILocation(line: 1471, column: 58, scope: !3871)
!3899 = !DILocation(line: 1471, column: 65, scope: !3871)
!3900 = !DILocation(line: 1472, column: 8, scope: !3871)
!3901 = !DILocation(line: 1471, column: 17, scope: !3871)
!3902 = !DILocation(line: 1475, column: 37, scope: !3871)
!3903 = !DILocation(line: 1475, column: 17, scope: !3871)
!3904 = !DILocation(line: 1475, column: 23, scope: !3871)
!3905 = !DILocation(line: 1476, column: 36, scope: !3871)
!3906 = !DILocation(line: 1476, column: 21, scope: !3871)
!3907 = !DILocation(line: 1478, column: 3, scope: !3871)
!3908 = !DILocation(line: 1479, column: 3, scope: !3871)
!3909 = !DILocation(line: 1480, column: 3, scope: !3871)
!3910 = !DILocation(line: 1481, column: 35, scope: !3871)
!3911 = !DILocation(line: 1481, column: 3, scope: !3871)
!3912 = !DILocation(line: 1482, column: 3, scope: !3871)
!3913 = !DILocation(line: 1484, column: 22, scope: !3871)
!3914 = !DILocation(line: 1485, column: 3, scope: !3871)
!3915 = !DILocation(line: 1487, column: 22, scope: !3871)
!3916 = !DILocation(line: 1489, column: 18, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3871, file: !1, line: 1489, column: 7)
!3918 = !DILocation(line: 1489, column: 7, scope: !3917)
!3919 = !DILocation(line: 1489, column: 7, scope: !3871)
!3920 = !DILocation(line: 1490, column: 5, scope: !3917)
!3921 = !DILocation(line: 1491, column: 27, scope: !3871)
!3922 = !DILocation(line: 1493, column: 7, scope: !3888)
!3923 = !DILocation(line: 1493, column: 7, scope: !3871)
!3924 = !DILocation(line: 1495, column: 37, scope: !3887)
!3925 = !DILocation(line: 0, scope: !3887)
!3926 = !DILocation(line: 1497, column: 26, scope: !3887)
!3927 = !DILocation(line: 1497, column: 7, scope: !3887)
!3928 = !DILocation(line: 1498, column: 24, scope: !3887)
!3929 = !DILocation(line: 1498, column: 39, scope: !3887)
!3930 = !DILocation(line: 1498, column: 7, scope: !3887)
!3931 = !DILocation(line: 1500, column: 40, scope: !3887)
!3932 = !DILocation(line: 1500, column: 55, scope: !3887)
!3933 = !DILocation(line: 1500, column: 62, scope: !3887)
!3934 = !DILocation(line: 1501, column: 12, scope: !3887)
!3935 = !DILocation(line: 1500, column: 14, scope: !3887)
!3936 = !DILocation(line: 1503, column: 18, scope: !3887)
!3937 = !DILocation(line: 1503, column: 20, scope: !3887)
!3938 = !DILocation(line: 1504, column: 13, scope: !3887)
!3939 = !DILocation(line: 1505, column: 19, scope: !3887)
!3940 = !DILocation(line: 1505, column: 24, scope: !3887)
!3941 = !DILocation(line: 1505, column: 37, scope: !3887)
!3942 = !DILocation(line: 1505, column: 44, scope: !3887)
!3943 = !DILocation(line: 1505, column: 49, scope: !3887)
!3944 = !DILocation(line: 1506, column: 5, scope: !3887)
!3945 = !DILocation(line: 1507, column: 1, scope: !3871)
!3946 = distinct !DISubprogram(name: "if_region_get_condition_block", scope: !479, file: !479, line: 248, type: !3947, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3949)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!1258, !3874}
!3949 = !{!3950}
!3950 = !DILocalVariable(name: "if_region", arg: 1, scope: !3946, file: !479, line: 248, type: !3874)
!3951 = !DILocation(line: 0, scope: !3946)
!3952 = !DILocation(line: 250, column: 10, scope: !3946)
!3953 = !DILocation(line: 250, column: 39, scope: !3946)
!3954 = !DILocation(line: 250, column: 3, scope: !3946)
!3955 = distinct !DISubprogram(name: "single_succ", scope: !341, file: !341, line: 663, type: !3956, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3958)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!1258, !3668}
!3958 = !{!3959}
!3959 = !DILocalVariable(name: "bb", arg: 1, scope: !3955, file: !341, line: 663, type: !3668)
!3960 = !DILocation(line: 0, scope: !3955)
!3961 = !DILocation(line: 665, column: 10, scope: !3955)
!3962 = !DILocation(line: 665, column: 33, scope: !3955)
!3963 = !DILocation(line: 665, column: 3, scope: !3955)
!3964 = distinct !DISubprogram(name: "recompute_all_dominators", scope: !479, file: !479, line: 313, type: !3965, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1941)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{null}
!3967 = !DILocation(line: 315, column: 3, scope: !3964)
!3968 = !DILocation(line: 316, column: 3, scope: !3964)
!3969 = !DILocation(line: 317, column: 3, scope: !3964)
!3970 = !DILocation(line: 318, column: 3, scope: !3964)
!3971 = !DILocation(line: 319, column: 3, scope: !3964)
!3972 = !DILocation(line: 320, column: 1, scope: !3964)
!3973 = distinct !DISubprogram(name: "create_if_region_on_edge", scope: !1, file: !1, line: 1512, type: !3974, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !3976)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!3874, !786, !482}
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985}
!3977 = !DILocalVariable(name: "entry", arg: 1, scope: !3973, file: !1, line: 1512, type: !786)
!3978 = !DILocalVariable(name: "condition", arg: 2, scope: !3973, file: !1, line: 1512, type: !482)
!3979 = !DILocalVariable(name: "e", scope: !3973, file: !1, line: 1514, type: !786)
!3980 = !DILocalVariable(name: "ei", scope: !3973, file: !1, line: 1515, type: !3364)
!3981 = !DILocalVariable(name: "sese_region", scope: !3973, file: !1, line: 1516, type: !1865)
!3982 = !DILocalVariable(name: "true_region", scope: !3973, file: !1, line: 1517, type: !1865)
!3983 = !DILocalVariable(name: "false_region", scope: !3973, file: !1, line: 1518, type: !1865)
!3984 = !DILocalVariable(name: "if_region", scope: !3973, file: !1, line: 1519, type: !3874)
!3985 = !DILocalVariable(name: "exit", scope: !3973, file: !1, line: 1520, type: !786)
!3986 = !DILocation(line: 0, scope: !3973)
!3987 = !DILocation(line: 1514, column: 3, scope: !3973)
!3988 = !DILocation(line: 1515, column: 3, scope: !3973)
!3989 = !DILocation(line: 1516, column: 22, scope: !3973)
!3990 = !DILocation(line: 1517, column: 22, scope: !3973)
!3991 = !DILocation(line: 1518, column: 23, scope: !3973)
!3992 = !DILocation(line: 1519, column: 22, scope: !3973)
!3993 = !DILocation(line: 1520, column: 15, scope: !3973)
!3994 = !DILocation(line: 1522, column: 21, scope: !3973)
!3995 = !DILocation(line: 1523, column: 22, scope: !3973)
!3996 = !DILocation(line: 1523, column: 28, scope: !3973)
!3997 = !DILocation(line: 1524, column: 14, scope: !3973)
!3998 = !DILocation(line: 1524, column: 22, scope: !3973)
!3999 = !DILocation(line: 1524, column: 27, scope: !3973)
!4000 = !DILocation(line: 1526, column: 3, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 1526, column: 3)
!4002 = !DILocation(line: 0, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4001, file: !1, line: 1526, column: 3)
!4004 = !DILocation(line: 0, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1529, column: 2)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !1, line: 1528, column: 11)
!4007 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 1527, column: 5)
!4008 = !DILocation(line: 0, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !1, line: 1535, column: 2)
!4010 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1534, column: 16)
!4011 = !DILocation(line: 1526, column: 3, scope: !4003)
!4012 = !DILocation(line: 1528, column: 11, scope: !4006)
!4013 = !DILocation(line: 1528, column: 14, scope: !4006)
!4014 = !DILocation(line: 1528, column: 20, scope: !4006)
!4015 = !DILocation(line: 1528, column: 11, scope: !4007)
!4016 = !DILocation(line: 1530, column: 23, scope: !4005)
!4017 = !DILocation(line: 1531, column: 42, scope: !4005)
!4018 = !DILocation(line: 1531, column: 45, scope: !4005)
!4019 = !DILocation(line: 1531, column: 24, scope: !4005)
!4020 = !DILocation(line: 1531, column: 22, scope: !4005)
!4021 = !DILocation(line: 1532, column: 27, scope: !4005)
!4022 = !DILocation(line: 1533, column: 2, scope: !4005)
!4023 = !DILocation(line: 1534, column: 25, scope: !4010)
!4024 = !DILocation(line: 1534, column: 16, scope: !4006)
!4025 = !DILocation(line: 1536, column: 24, scope: !4009)
!4026 = !DILocation(line: 1537, column: 43, scope: !4009)
!4027 = !DILocation(line: 1537, column: 46, scope: !4009)
!4028 = !DILocation(line: 1537, column: 25, scope: !4009)
!4029 = !DILocation(line: 1537, column: 23, scope: !4009)
!4030 = !DILocation(line: 1538, column: 28, scope: !4009)
!4031 = !DILocation(line: 1539, column: 2, scope: !4009)
!4032 = distinct !{!4032, !4000, !4033}
!4033 = !DILocation(line: 1540, column: 5, scope: !4001)
!4034 = !DILocation(line: 1543, column: 1, scope: !3973)
!4035 = !DILocation(line: 1542, column: 3, scope: !3973)
!4036 = distinct !DISubprogram(name: "move_sese_in_condition", scope: !1, file: !1, line: 1553, type: !4037, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4039)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!3874, !1865}
!4039 = !{!4040, !4041, !4042}
!4040 = !DILocalVariable(name: "region", arg: 1, scope: !4036, file: !1, line: 1553, type: !1865)
!4041 = !DILocalVariable(name: "pred_block", scope: !4036, file: !1, line: 1555, type: !1258)
!4042 = !DILocalVariable(name: "if_region", scope: !4036, file: !1, line: 1556, type: !3874)
!4043 = !DILocation(line: 0, scope: !4036)
!4044 = !DILocation(line: 1555, column: 40, scope: !4036)
!4045 = !DILocation(line: 1555, column: 28, scope: !4036)
!4046 = !DILocation(line: 1558, column: 25, scope: !4036)
!4047 = !DILocation(line: 1558, column: 23, scope: !4036)
!4048 = !DILocation(line: 1559, column: 41, scope: !4036)
!4049 = !DILocation(line: 1559, column: 72, scope: !4036)
!4050 = !DILocation(line: 1559, column: 15, scope: !4036)
!4051 = !DILocation(line: 1560, column: 3, scope: !4036)
!4052 = !DILocation(line: 1562, column: 3, scope: !4036)
!4053 = distinct !DISubprogram(name: "single_pred_edge", scope: !341, file: !341, line: 653, type: !3666, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4054)
!4054 = !{!4055}
!4055 = !DILocalVariable(name: "bb", arg: 1, scope: !4053, file: !341, line: 653, type: !3668)
!4056 = !DILocation(line: 0, scope: !4053)
!4057 = !DILocation(line: 655, column: 3, scope: !4053)
!4058 = !DILocation(line: 656, column: 10, scope: !4053)
!4059 = !DILocation(line: 656, column: 3, scope: !4053)
!4060 = distinct !DISubprogram(name: "set_ifsese_condition", scope: !1, file: !1, line: 1573, type: !4061, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{null, !3874, !482}
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071}
!4064 = !DILocalVariable(name: "if_region", arg: 1, scope: !4060, file: !1, line: 1573, type: !3874)
!4065 = !DILocalVariable(name: "condition", arg: 2, scope: !4060, file: !1, line: 1573, type: !482)
!4066 = !DILocalVariable(name: "region", scope: !4060, file: !1, line: 1575, type: !1865)
!4067 = !DILocalVariable(name: "entry", scope: !4060, file: !1, line: 1576, type: !786)
!4068 = !DILocalVariable(name: "bb", scope: !4060, file: !1, line: 1577, type: !1258)
!4069 = !DILocalVariable(name: "last", scope: !4060, file: !1, line: 1578, type: !806)
!4070 = !DILocalVariable(name: "gsi", scope: !4060, file: !1, line: 1579, type: !3091)
!4071 = !DILocalVariable(name: "cond_stmt", scope: !4060, file: !1, line: 1580, type: !806)
!4072 = !DILocation(line: 0, scope: !4060)
!4073 = !DILocation(line: 1575, column: 28, scope: !4060)
!4074 = !DILocation(line: 1576, column: 24, scope: !4060)
!4075 = !DILocation(line: 1577, column: 27, scope: !4060)
!4076 = !DILocation(line: 1578, column: 17, scope: !4060)
!4077 = !DILocation(line: 1579, column: 3, scope: !4060)
!4078 = !DILocation(line: 1579, column: 30, scope: !4060)
!4079 = !DILocation(line: 1582, column: 3, scope: !4060)
!4080 = !DILocation(line: 1584, column: 3, scope: !4060)
!4081 = !DILocation(line: 1585, column: 9, scope: !4060)
!4082 = !DILocation(line: 1586, column: 15, scope: !4060)
!4083 = !DILocation(line: 1588, column: 15, scope: !4060)
!4084 = !DILocation(line: 1589, column: 9, scope: !4060)
!4085 = !DILocation(line: 1590, column: 3, scope: !4060)
!4086 = !DILocation(line: 1591, column: 1, scope: !4060)
!4087 = distinct !DISubprogram(name: "gsi_last_bb", scope: !396, file: !396, line: 4450, type: !4088, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4090)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!3091, !1258}
!4090 = !{!4091, !4092, !4093}
!4091 = !DILocalVariable(name: "bb", arg: 1, scope: !4087, file: !396, line: 4450, type: !1258)
!4092 = !DILocalVariable(name: "i", scope: !4087, file: !396, line: 4452, type: !3091)
!4093 = !DILocalVariable(name: "seq", scope: !4087, file: !396, line: 4453, type: !796)
!4094 = !DILocation(line: 0, scope: !4087)
!4095 = !DILocation(line: 4452, column: 24, scope: !4087)
!4096 = !DILocation(line: 4455, column: 9, scope: !4087)
!4097 = !DILocation(line: 4456, column: 11, scope: !4087)
!4098 = !DILocation(line: 4456, column: 5, scope: !4087)
!4099 = !DILocation(line: 4456, column: 9, scope: !4087)
!4100 = !DILocation(line: 4457, column: 5, scope: !4087)
!4101 = !DILocation(line: 4457, column: 9, scope: !4087)
!4102 = !DILocation(line: 4458, column: 5, scope: !4087)
!4103 = !DILocation(line: 4458, column: 8, scope: !4087)
!4104 = !DILocation(line: 4461, column: 1, scope: !4087)
!4105 = distinct !DISubprogram(name: "gimple_code", scope: !396, file: !396, line: 1052, type: !4106, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!422, !3206}
!4108 = !{!4109}
!4109 = !DILocalVariable(name: "g", arg: 1, scope: !4105, file: !396, line: 1052, type: !3206)
!4110 = !DILocation(line: 0, scope: !4105)
!4111 = !DILocation(line: 1054, column: 20, scope: !4105)
!4112 = !DILocation(line: 1054, column: 3, scope: !4105)
!4113 = distinct !DISubprogram(name: "scalar_evolution_in_region", scope: !1, file: !1, line: 1597, type: !4114, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4116)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!482, !1865, !1048, !482}
!4116 = !{!4117, !4118, !4119, !4120, !4121, !4122}
!4117 = !DILocalVariable(name: "region", arg: 1, scope: !4113, file: !1, line: 1597, type: !1865)
!4118 = !DILocalVariable(name: "loop", arg: 2, scope: !4113, file: !1, line: 1597, type: !1048)
!4119 = !DILocalVariable(name: "t", arg: 3, scope: !4113, file: !1, line: 1597, type: !482)
!4120 = !DILocalVariable(name: "def", scope: !4113, file: !1, line: 1599, type: !806)
!4121 = !DILocalVariable(name: "def_loop", scope: !4113, file: !1, line: 1600, type: !1021)
!4122 = !DILocalVariable(name: "before", scope: !4113, file: !1, line: 1601, type: !1258)
!4123 = !DILocation(line: 0, scope: !4113)
!4124 = !DILocation(line: 1601, column: 24, scope: !4113)
!4125 = !DILocation(line: 1603, column: 7, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 1603, column: 7)
!4127 = !DILocation(line: 1603, column: 21, scope: !4126)
!4128 = !DILocation(line: 1604, column: 7, scope: !4126)
!4129 = !DILocation(line: 1604, column: 10, scope: !4126)
!4130 = !DILocation(line: 1603, column: 7, scope: !4113)
!4131 = !DILocation(line: 1606, column: 9, scope: !4126)
!4132 = !DILocation(line: 1605, column: 12, scope: !4126)
!4133 = !DILocation(line: 1605, column: 5, scope: !4126)
!4134 = !DILocation(line: 1608, column: 8, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 1608, column: 7)
!4136 = !DILocation(line: 1608, column: 7, scope: !4113)
!4137 = !DILocation(line: 1611, column: 9, scope: !4113)
!4138 = !DILocation(line: 1612, column: 14, scope: !4113)
!4139 = !DILocation(line: 1614, column: 7, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 1614, column: 7)
!4141 = !DILocation(line: 1614, column: 7, scope: !4113)
!4142 = !DILocation(line: 1616, column: 11, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4140, file: !1, line: 1615, column: 5)
!4144 = !DILocation(line: 1617, column: 48, scope: !4143)
!4145 = !DILocation(line: 1617, column: 66, scope: !4143)
!4146 = !DILocation(line: 1617, column: 18, scope: !4143)
!4147 = !DILocation(line: 1618, column: 11, scope: !4143)
!4148 = !DILocation(line: 1619, column: 7, scope: !4143)
!4149 = !DILocation(line: 1622, column: 12, scope: !4140)
!4150 = !DILocation(line: 1622, column: 5, scope: !4140)
!4151 = !DILocation(line: 1623, column: 1, scope: !4113)
!4152 = distinct !DISubprogram(name: "block_before_sese", scope: !479, file: !479, line: 213, type: !4153, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!1258, !1865}
!4155 = !{!4156}
!4156 = !DILocalVariable(name: "sese", arg: 1, scope: !4152, file: !479, line: 213, type: !1865)
!4157 = !DILocation(line: 0, scope: !4152)
!4158 = !DILocation(line: 215, column: 10, scope: !4152)
!4159 = !DILocation(line: 215, column: 29, scope: !4152)
!4160 = !DILocation(line: 215, column: 3, scope: !4152)
!4161 = distinct !DISubprogram(name: "defined_in_sese_p", scope: !479, file: !479, line: 124, type: !4162, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4164)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!468, !482, !1865}
!4164 = !{!4165, !4166, !4167, !4168}
!4165 = !DILocalVariable(name: "name", arg: 1, scope: !4161, file: !479, line: 124, type: !482)
!4166 = !DILocalVariable(name: "region", arg: 2, scope: !4161, file: !479, line: 124, type: !1865)
!4167 = !DILocalVariable(name: "stmt", scope: !4161, file: !479, line: 126, type: !806)
!4168 = !DILocalVariable(name: "bb", scope: !4161, file: !479, line: 127, type: !1258)
!4169 = !DILocation(line: 0, scope: !4161)
!4170 = !DILocation(line: 126, column: 17, scope: !4161)
!4171 = !DILocation(line: 127, column: 20, scope: !4161)
!4172 = !DILocation(line: 129, column: 10, scope: !4161)
!4173 = !DILocation(line: 129, column: 13, scope: !4161)
!4174 = !DILocation(line: 129, column: 16, scope: !4161)
!4175 = !DILocation(line: 129, column: 3, scope: !4161)
!4176 = distinct !DISubprogram(name: "loop_containing_stmt", scope: !3281, file: !3281, line: 617, type: !4177, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4179)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!1021, !806}
!4179 = !{!4180, !4181}
!4180 = !DILocalVariable(name: "stmt", arg: 1, scope: !4176, file: !3281, line: 617, type: !806)
!4181 = !DILocalVariable(name: "bb", scope: !4176, file: !3281, line: 619, type: !1258)
!4182 = !DILocation(line: 0, scope: !4176)
!4183 = !DILocation(line: 619, column: 20, scope: !4176)
!4184 = !DILocation(line: 620, column: 8, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4176, file: !3281, line: 620, column: 7)
!4186 = !DILocation(line: 620, column: 7, scope: !4176)
!4187 = !DILocation(line: 623, column: 14, scope: !4176)
!4188 = !DILocation(line: 623, column: 3, scope: !4176)
!4189 = !DILocation(line: 624, column: 1, scope: !4176)
!4190 = distinct !DISubprogram(name: "loop_depth", scope: !328, file: !328, line: 425, type: !4191, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4193)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!5, !3845}
!4193 = !{!4194}
!4194 = !DILocalVariable(name: "loop", arg: 1, scope: !4190, file: !328, line: 425, type: !3845)
!4195 = !DILocation(line: 0, scope: !4190)
!4196 = !DILocation(line: 427, column: 10, scope: !4190)
!4197 = !DILocation(line: 427, column: 3, scope: !4190)
!4198 = distinct !DISubprogram(name: "debug_rename_elt", scope: !1, file: !1, line: 50, type: !4199, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4201)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !1886}
!4201 = !{!4202}
!4202 = !DILocalVariable(name: "elt", arg: 1, scope: !4198, file: !1, line: 50, type: !1886)
!4203 = !DILocation(line: 0, scope: !4198)
!4204 = !DILocation(line: 52, column: 12, scope: !4198)
!4205 = !DILocation(line: 52, column: 3, scope: !4198)
!4206 = !DILocation(line: 53, column: 23, scope: !4198)
!4207 = !DILocation(line: 53, column: 36, scope: !4198)
!4208 = !DILocation(line: 53, column: 3, scope: !4198)
!4209 = !DILocation(line: 54, column: 12, scope: !4198)
!4210 = !DILocation(line: 54, column: 3, scope: !4198)
!4211 = !DILocation(line: 55, column: 23, scope: !4198)
!4212 = !DILocation(line: 55, column: 36, scope: !4198)
!4213 = !DILocation(line: 55, column: 3, scope: !4198)
!4214 = !DILocation(line: 56, column: 12, scope: !4198)
!4215 = !DILocation(line: 56, column: 3, scope: !4198)
!4216 = !DILocation(line: 57, column: 1, scope: !4198)
!4217 = distinct !DISubprogram(name: "debug_ivtype_elt", scope: !1, file: !1, line: 101, type: !4218, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4221)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{null, !4220}
!4220 = !DIDerivedType(tag: DW_TAG_typedef, name: "ivtype_map_elt", file: !479, line: 290, baseType: !1869)
!4221 = !{!4222}
!4222 = !DILocalVariable(name: "elt", arg: 1, scope: !4217, file: !1, line: 101, type: !4220)
!4223 = !DILocation(line: 0, scope: !4217)
!4224 = !DILocation(line: 103, column: 12, scope: !4217)
!4225 = !DILocation(line: 103, column: 34, scope: !4217)
!4226 = !DILocation(line: 103, column: 3, scope: !4217)
!4227 = !DILocation(line: 104, column: 23, scope: !4217)
!4228 = !DILocation(line: 104, column: 36, scope: !4217)
!4229 = !DILocation(line: 104, column: 3, scope: !4217)
!4230 = !DILocation(line: 105, column: 12, scope: !4217)
!4231 = !DILocation(line: 105, column: 3, scope: !4217)
!4232 = !DILocation(line: 106, column: 1, scope: !4217)
!4233 = distinct !DISubprogram(name: "bb_in_region", scope: !479, file: !479, line: 86, type: !4234, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4236)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{!468, !1258, !1258, !1258}
!4236 = !{!4237, !4238, !4239}
!4237 = !DILocalVariable(name: "bb", arg: 1, scope: !4233, file: !479, line: 86, type: !1258)
!4238 = !DILocalVariable(name: "entry", arg: 2, scope: !4233, file: !479, line: 86, type: !1258)
!4239 = !DILocalVariable(name: "exit", arg: 3, scope: !4233, file: !479, line: 86, type: !1258)
!4240 = !DILocation(line: 0, scope: !4233)
!4241 = !DILocation(line: 104, column: 10, scope: !4233)
!4242 = !DILocation(line: 105, column: 3, scope: !4233)
!4243 = !DILocation(line: 105, column: 8, scope: !4233)
!4244 = !DILocation(line: 106, column: 8, scope: !4233)
!4245 = !DILocation(line: 106, column: 12, scope: !4233)
!4246 = !DILocation(line: 106, column: 11, scope: !4233)
!4247 = !DILocation(line: 104, column: 3, scope: !4233)
!4248 = distinct !DISubprogram(name: "sese_contains_loop", scope: !479, file: !479, line: 69, type: !4249, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4251)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!468, !1865, !1021}
!4251 = !{!4252, !4253}
!4252 = !DILocalVariable(name: "sese", arg: 1, scope: !4248, file: !479, line: 69, type: !1865)
!4253 = !DILocalVariable(name: "loop", arg: 2, scope: !4248, file: !479, line: 69, type: !1021)
!4254 = !DILocation(line: 0, scope: !4248)
!4255 = !DILocation(line: 71, column: 24, scope: !4248)
!4256 = !DILocation(line: 71, column: 49, scope: !4248)
!4257 = !DILocation(line: 71, column: 10, scope: !4248)
!4258 = !DILocation(line: 71, column: 3, scope: !4248)
!4259 = distinct !DISubprogram(name: "VEC_loop_p_heap_safe_push", scope: !328, file: !328, line: 86, type: !4260, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!2528, !2634, !1048}
!4262 = !{!4263, !4264}
!4263 = !DILocalVariable(name: "vec_", arg: 1, scope: !4259, file: !328, line: 86, type: !2634)
!4264 = !DILocalVariable(name: "obj_", arg: 2, scope: !4259, file: !328, line: 86, type: !1048)
!4265 = !DILocation(line: 0, scope: !4259)
!4266 = !DILocation(line: 86, column: 1, scope: !4259)
!4267 = distinct !DISubprogram(name: "VEC_loop_p_heap_reserve", scope: !328, file: !328, line: 86, type: !4268, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4270)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!469, !2634, !469}
!4270 = !{!4271, !4272, !4273}
!4271 = !DILocalVariable(name: "vec_", arg: 1, scope: !4267, file: !328, line: 86, type: !2634)
!4272 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4267, file: !328, line: 86, type: !469)
!4273 = !DILocalVariable(name: "extend", scope: !4267, file: !328, line: 86, type: !469)
!4274 = !DILocation(line: 0, scope: !4267)
!4275 = !DILocation(line: 86, column: 1, scope: !4267)
!4276 = !DILocation(line: 86, column: 1, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4267, file: !328, line: 86, column: 1)
!4278 = distinct !DISubprogram(name: "VEC_loop_p_base_quick_push", scope: !328, file: !328, line: 85, type: !4279, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4281)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!2528, !2560, !1048}
!4281 = !{!4282, !4283, !4284}
!4282 = !DILocalVariable(name: "vec_", arg: 1, scope: !4278, file: !328, line: 85, type: !2560)
!4283 = !DILocalVariable(name: "obj_", arg: 2, scope: !4278, file: !328, line: 85, type: !1048)
!4284 = !DILocalVariable(name: "slot_", scope: !4278, file: !328, line: 85, type: !2528)
!4285 = !DILocation(line: 0, scope: !4278)
!4286 = !DILocation(line: 85, column: 1, scope: !4278)
!4287 = distinct !DISubprogram(name: "VEC_loop_p_base_space", scope: !328, file: !328, line: 85, type: !4288, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!469, !2560, !469}
!4290 = !{!4291, !4292}
!4291 = !DILocalVariable(name: "vec_", arg: 1, scope: !4287, file: !328, line: 85, type: !2560)
!4292 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4287, file: !328, line: 85, type: !469)
!4293 = !DILocation(line: 0, scope: !4287)
!4294 = !DILocation(line: 85, column: 1, scope: !4287)
!4295 = distinct !DISubprogram(name: "sese_build_liveouts_bb", scope: !1, file: !1, line: 225, type: !4296, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4298)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{null, !1865, !1376, !1258}
!4298 = !{!4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307}
!4299 = !DILocalVariable(name: "region", arg: 1, scope: !4295, file: !1, line: 225, type: !1865)
!4300 = !DILocalVariable(name: "liveouts", arg: 2, scope: !4295, file: !1, line: 225, type: !1376)
!4301 = !DILocalVariable(name: "bb", arg: 3, scope: !4295, file: !1, line: 225, type: !1258)
!4302 = !DILocalVariable(name: "bsi", scope: !4295, file: !1, line: 227, type: !3091)
!4303 = !DILocalVariable(name: "e", scope: !4295, file: !1, line: 228, type: !786)
!4304 = !DILocalVariable(name: "ei", scope: !4295, file: !1, line: 229, type: !3364)
!4305 = !DILocalVariable(name: "iter", scope: !4295, file: !1, line: 230, type: !3691)
!4306 = !DILocalVariable(name: "use_p", scope: !4295, file: !1, line: 231, type: !1870)
!4307 = !DILocalVariable(name: "stmt", scope: !4308, file: !1, line: 240, type: !806)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !1, line: 239, column: 5)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !1, line: 238, column: 3)
!4310 = distinct !DILexicalBlock(scope: !4295, file: !1, line: 238, column: 3)
!4311 = !DILocation(line: 0, scope: !4295)
!4312 = !DILocation(line: 227, column: 3, scope: !4295)
!4313 = !DILocation(line: 228, column: 3, scope: !4295)
!4314 = !DILocation(line: 229, column: 3, scope: !4295)
!4315 = !DILocation(line: 230, column: 3, scope: !4295)
!4316 = !DILocation(line: 233, column: 3, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4295, file: !1, line: 233, column: 3)
!4318 = !DILocation(line: 0, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4317, file: !1, line: 233, column: 3)
!4320 = !DILocation(line: 0, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4319, file: !1, line: 234, column: 5)
!4322 = !DILocation(line: 233, column: 3, scope: !4319)
!4323 = !DILocation(line: 234, column: 16, scope: !4321)
!4324 = !DILocation(line: 234, column: 32, scope: !4321)
!4325 = !DILocation(line: 234, column: 35, scope: !4321)
!4326 = !DILocation(line: 234, column: 10, scope: !4321)
!4327 = !DILocation(line: 234, column: 43, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4321, file: !1, line: 234, column: 5)
!4329 = !DILocation(line: 234, column: 42, scope: !4328)
!4330 = !DILocation(line: 234, column: 5, scope: !4321)
!4331 = !DILocation(line: 236, column: 11, scope: !4328)
!4332 = !DILocation(line: 235, column: 7, scope: !4328)
!4333 = !DILocation(line: 234, column: 60, scope: !4328)
!4334 = !DILocation(line: 234, column: 5, scope: !4328)
!4335 = distinct !{!4335, !4330, !4336}
!4336 = !DILocation(line: 236, column: 52, scope: !4321)
!4337 = distinct !{!4337, !4316, !4338}
!4338 = !DILocation(line: 236, column: 52, scope: !4317)
!4339 = !DILocation(line: 238, column: 14, scope: !4310)
!4340 = !DILocation(line: 238, column: 8, scope: !4310)
!4341 = !DILocation(line: 238, column: 34, scope: !4309)
!4342 = !DILocation(line: 238, column: 33, scope: !4309)
!4343 = !DILocation(line: 238, column: 3, scope: !4310)
!4344 = !DILocation(line: 240, column: 21, scope: !4308)
!4345 = !DILocation(line: 0, scope: !4308)
!4346 = !DILocation(line: 242, column: 11, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 242, column: 11)
!4348 = !DILocation(line: 242, column: 11, scope: !4308)
!4349 = !DILocation(line: 245, column: 7, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 245, column: 7)
!4351 = !DILocation(line: 0, scope: !4350)
!4352 = !DILocation(line: 245, column: 7, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4350, file: !1, line: 245, column: 7)
!4354 = !DILocation(line: 246, column: 49, scope: !4353)
!4355 = !DILocation(line: 246, column: 2, scope: !4353)
!4356 = distinct !{!4356, !4349, !4357}
!4357 = !DILocation(line: 246, column: 69, scope: !4350)
!4358 = !DILocation(line: 238, column: 51, scope: !4309)
!4359 = !DILocation(line: 238, column: 3, scope: !4309)
!4360 = distinct !{!4360, !4343, !4361}
!4361 = !DILocation(line: 247, column: 5, scope: !4310)
!4362 = !DILocation(line: 248, column: 1, scope: !4295)
!4363 = distinct !DISubprogram(name: "sese_reset_debug_liveouts_bb", scope: !1, file: !1, line: 284, type: !4296, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4364)
!4364 = !{!4365, !4366, !4367, !4368, !4369, !4370, !4371}
!4365 = !DILocalVariable(name: "region", arg: 1, scope: !4363, file: !1, line: 284, type: !1865)
!4366 = !DILocalVariable(name: "liveouts", arg: 2, scope: !4363, file: !1, line: 284, type: !1376)
!4367 = !DILocalVariable(name: "bb", arg: 3, scope: !4363, file: !1, line: 284, type: !1258)
!4368 = !DILocalVariable(name: "bsi", scope: !4363, file: !1, line: 286, type: !3091)
!4369 = !DILocalVariable(name: "iter", scope: !4363, file: !1, line: 287, type: !3691)
!4370 = !DILocalVariable(name: "use_p", scope: !4363, file: !1, line: 288, type: !1870)
!4371 = !DILocalVariable(name: "stmt", scope: !4372, file: !1, line: 292, type: !806)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 291, column: 5)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 290, column: 3)
!4374 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 290, column: 3)
!4375 = !DILocation(line: 0, scope: !4363)
!4376 = !DILocation(line: 286, column: 3, scope: !4363)
!4377 = !DILocation(line: 287, column: 3, scope: !4363)
!4378 = !DILocation(line: 290, column: 14, scope: !4374)
!4379 = !DILocation(line: 290, column: 8, scope: !4374)
!4380 = !DILocation(line: 290, column: 34, scope: !4373)
!4381 = !DILocation(line: 290, column: 33, scope: !4373)
!4382 = !DILocation(line: 290, column: 3, scope: !4374)
!4383 = !DILocation(line: 292, column: 21, scope: !4372)
!4384 = !DILocation(line: 0, scope: !4372)
!4385 = !DILocation(line: 294, column: 12, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4372, file: !1, line: 294, column: 11)
!4387 = !DILocation(line: 294, column: 11, scope: !4372)
!4388 = !DILocation(line: 297, column: 7, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4372, file: !1, line: 297, column: 7)
!4390 = !DILocation(line: 0, scope: !4389)
!4391 = !DILocation(line: 297, column: 7, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 297, column: 7)
!4393 = !DILocation(line: 299, column: 8, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 298, column: 6)
!4395 = !DILocation(line: 298, column: 6, scope: !4394)
!4396 = !DILocation(line: 298, column: 6, scope: !4392)
!4397 = !DILocation(line: 301, column: 6, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4394, file: !1, line: 300, column: 4)
!4399 = !DILocation(line: 302, column: 6, scope: !4398)
!4400 = !DILocation(line: 303, column: 6, scope: !4398)
!4401 = distinct !{!4401, !4388, !4402}
!4402 = !DILocation(line: 304, column: 4, scope: !4389)
!4403 = !DILocation(line: 290, column: 51, scope: !4373)
!4404 = !DILocation(line: 290, column: 3, scope: !4373)
!4405 = distinct !{!4405, !4382, !4406}
!4406 = !DILocation(line: 305, column: 5, scope: !4374)
!4407 = !DILocation(line: 306, column: 1, scope: !4363)
!4408 = distinct !DISubprogram(name: "sese_build_liveouts_use", scope: !1, file: !1, line: 201, type: !4409, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4411)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{null, !1865, !1376, !1258, !482}
!4411 = !{!4412, !4413, !4414, !4415, !4416, !4417}
!4412 = !DILocalVariable(name: "region", arg: 1, scope: !4408, file: !1, line: 201, type: !1865)
!4413 = !DILocalVariable(name: "liveouts", arg: 2, scope: !4408, file: !1, line: 201, type: !1376)
!4414 = !DILocalVariable(name: "bb", arg: 3, scope: !4408, file: !1, line: 201, type: !1258)
!4415 = !DILocalVariable(name: "use", arg: 4, scope: !4408, file: !1, line: 202, type: !482)
!4416 = !DILocalVariable(name: "ver", scope: !4408, file: !1, line: 204, type: !5)
!4417 = !DILocalVariable(name: "def_bb", scope: !4408, file: !1, line: 205, type: !1258)
!4418 = !DILocation(line: 0, scope: !4408)
!4419 = !DILocation(line: 207, column: 7, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4408, file: !1, line: 207, column: 7)
!4421 = !DILocation(line: 207, column: 23, scope: !4420)
!4422 = !DILocation(line: 207, column: 7, scope: !4408)
!4423 = !DILocation(line: 210, column: 9, scope: !4408)
!4424 = !DILocation(line: 211, column: 23, scope: !4408)
!4425 = !DILocation(line: 211, column: 12, scope: !4408)
!4426 = !DILocation(line: 213, column: 8, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4408, file: !1, line: 213, column: 7)
!4428 = !DILocation(line: 214, column: 7, scope: !4427)
!4429 = !DILocation(line: 214, column: 11, scope: !4427)
!4430 = !DILocation(line: 215, column: 7, scope: !4427)
!4431 = !DILocation(line: 215, column: 10, scope: !4427)
!4432 = !DILocation(line: 213, column: 7, scope: !4408)
!4433 = !DILocation(line: 218, column: 3, scope: !4408)
!4434 = !DILocation(line: 219, column: 1, scope: !4408)
!4435 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !3281, file: !3281, line: 427, type: !4436, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4438)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!482, !1870}
!4438 = !{!4439}
!4439 = !DILocalVariable(name: "use", arg: 1, scope: !4435, file: !3281, line: 427, type: !1870)
!4440 = !DILocation(line: 0, scope: !4435)
!4441 = !DILocation(line: 429, column: 17, scope: !4435)
!4442 = !DILocation(line: 429, column: 10, scope: !4435)
!4443 = !DILocation(line: 429, column: 3, scope: !4435)
!4444 = distinct !DISubprogram(name: "gsi_start_bb", scope: !396, file: !396, line: 4418, type: !4088, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4445)
!4445 = !{!4446, !4447, !4448}
!4446 = !DILocalVariable(name: "bb", arg: 1, scope: !4444, file: !396, line: 4418, type: !1258)
!4447 = !DILocalVariable(name: "i", scope: !4444, file: !396, line: 4420, type: !3091)
!4448 = !DILocalVariable(name: "seq", scope: !4444, file: !396, line: 4421, type: !796)
!4449 = !DILocation(line: 0, scope: !4444)
!4450 = !DILocation(line: 4420, column: 24, scope: !4444)
!4451 = !DILocation(line: 4423, column: 9, scope: !4444)
!4452 = !DILocation(line: 4424, column: 11, scope: !4444)
!4453 = !DILocation(line: 4424, column: 5, scope: !4444)
!4454 = !DILocation(line: 4424, column: 9, scope: !4444)
!4455 = !DILocation(line: 4425, column: 5, scope: !4444)
!4456 = !DILocation(line: 4425, column: 9, scope: !4444)
!4457 = !DILocation(line: 4426, column: 5, scope: !4444)
!4458 = !DILocation(line: 4426, column: 8, scope: !4444)
!4459 = !DILocation(line: 4429, column: 1, scope: !4444)
!4460 = distinct !DISubprogram(name: "is_gimple_debug", scope: !396, file: !396, line: 3249, type: !4461, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4463)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!468, !3206}
!4463 = !{!4464}
!4464 = !DILocalVariable(name: "gs", arg: 1, scope: !4460, file: !396, line: 3249, type: !3206)
!4465 = !DILocation(line: 0, scope: !4460)
!4466 = !DILocation(line: 3251, column: 10, scope: !4460)
!4467 = !DILocation(line: 3251, column: 27, scope: !4460)
!4468 = !DILocation(line: 3251, column: 3, scope: !4460)
!4469 = distinct !DISubprogram(name: "op_iter_init_use", scope: !3281, file: !3281, line: 768, type: !4470, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4473)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!1870, !4472, !806, !469}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!4473 = !{!4474, !4475, !4476}
!4474 = !DILocalVariable(name: "ptr", arg: 1, scope: !4469, file: !3281, line: 768, type: !4472)
!4475 = !DILocalVariable(name: "stmt", arg: 2, scope: !4469, file: !3281, line: 768, type: !806)
!4476 = !DILocalVariable(name: "flags", arg: 3, scope: !4469, file: !3281, line: 768, type: !469)
!4477 = !DILocation(line: 0, scope: !4469)
!4478 = !DILocation(line: 772, column: 3, scope: !4469)
!4479 = !DILocation(line: 773, column: 8, scope: !4469)
!4480 = !DILocation(line: 773, column: 18, scope: !4469)
!4481 = !DILocation(line: 774, column: 10, scope: !4469)
!4482 = !DILocation(line: 774, column: 3, scope: !4469)
!4483 = distinct !DISubprogram(name: "op_iter_done", scope: !3281, file: !3281, line: 652, type: !4484, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4488)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!468, !4486}
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3691)
!4488 = !{!4489}
!4489 = !DILocalVariable(name: "ptr", arg: 1, scope: !4483, file: !3281, line: 652, type: !4486)
!4490 = !DILocation(line: 0, scope: !4483)
!4491 = !DILocation(line: 654, column: 15, scope: !4483)
!4492 = !DILocation(line: 654, column: 3, scope: !4483)
!4493 = distinct !DISubprogram(name: "op_iter_next_use", scope: !3281, file: !3281, line: 659, type: !4494, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4496)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!1870, !4472}
!4496 = !{!4497, !4498}
!4497 = !DILocalVariable(name: "ptr", arg: 1, scope: !4493, file: !3281, line: 659, type: !4472)
!4498 = !DILocalVariable(name: "use_p", scope: !4493, file: !3281, line: 661, type: !1870)
!4499 = !DILocation(line: 0, scope: !4493)
!4500 = !DILocation(line: 665, column: 12, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4493, file: !3281, line: 665, column: 7)
!4502 = !DILocation(line: 665, column: 7, scope: !4501)
!4503 = !DILocation(line: 665, column: 7, scope: !4493)
!4504 = !DILocation(line: 667, column: 15, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4501, file: !3281, line: 666, column: 5)
!4506 = !DILocation(line: 668, column: 30, scope: !4505)
!4507 = !DILocation(line: 668, column: 17, scope: !4505)
!4508 = !DILocation(line: 669, column: 7, scope: !4505)
!4509 = !DILocation(line: 671, column: 12, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4493, file: !3281, line: 671, column: 7)
!4511 = !DILocation(line: 671, column: 25, scope: !4510)
!4512 = !DILocation(line: 671, column: 18, scope: !4510)
!4513 = !DILocation(line: 671, column: 7, scope: !4493)
!4514 = !DILocation(line: 673, column: 14, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4510, file: !3281, line: 672, column: 5)
!4516 = !DILocation(line: 673, column: 7, scope: !4515)
!4517 = !DILocation(line: 675, column: 8, scope: !4493)
!4518 = !DILocation(line: 675, column: 13, scope: !4493)
!4519 = !DILocation(line: 676, column: 3, scope: !4493)
!4520 = !DILocation(line: 677, column: 1, scope: !4493)
!4521 = distinct !DISubprogram(name: "gimple_bb", scope: !396, file: !396, line: 1112, type: !4522, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4524)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!770, !3206}
!4524 = !{!4525}
!4525 = !DILocalVariable(name: "g", arg: 1, scope: !4521, file: !396, line: 1112, type: !3206)
!4526 = !DILocation(line: 0, scope: !4521)
!4527 = !DILocation(line: 1114, column: 20, scope: !4521)
!4528 = !DILocation(line: 1114, column: 3, scope: !4521)
!4529 = distinct !DISubprogram(name: "bb_seq", scope: !396, file: !396, line: 237, type: !4530, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4532)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!796, !3668}
!4532 = !{!4533}
!4533 = !DILocalVariable(name: "bb", arg: 1, scope: !4529, file: !396, line: 237, type: !3668)
!4534 = !DILocation(line: 0, scope: !4529)
!4535 = !DILocation(line: 239, column: 17, scope: !4529)
!4536 = !DILocation(line: 239, column: 23, scope: !4529)
!4537 = !DILocation(line: 239, column: 33, scope: !4529)
!4538 = !DILocation(line: 239, column: 43, scope: !4529)
!4539 = !DILocation(line: 239, column: 36, scope: !4529)
!4540 = !DILocation(line: 239, column: 10, scope: !4529)
!4541 = !DILocation(line: 239, column: 68, scope: !4529)
!4542 = !DILocation(line: 239, column: 3, scope: !4529)
!4543 = distinct !DISubprogram(name: "gimple_seq_first", scope: !396, file: !396, line: 159, type: !4544, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4549)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!801, !4546}
!4546 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !483, line: 67, baseType: !4547)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!4549 = !{!4550}
!4550 = !DILocalVariable(name: "s", arg: 1, scope: !4543, file: !396, line: 159, type: !4546)
!4551 = !DILocation(line: 0, scope: !4543)
!4552 = !DILocation(line: 161, column: 10, scope: !4543)
!4553 = !DILocation(line: 161, column: 17, scope: !4543)
!4554 = !DILocation(line: 161, column: 3, scope: !4543)
!4555 = distinct !DISubprogram(name: "op_iter_init", scope: !3281, file: !3281, line: 742, type: !4556, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4558)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !4472, !806, !469}
!4558 = !{!4559, !4560, !4561}
!4559 = !DILocalVariable(name: "ptr", arg: 1, scope: !4555, file: !3281, line: 742, type: !4472)
!4560 = !DILocalVariable(name: "stmt", arg: 2, scope: !4555, file: !3281, line: 742, type: !806)
!4561 = !DILocalVariable(name: "flags", arg: 3, scope: !4555, file: !3281, line: 742, type: !469)
!4562 = !DILocation(line: 0, scope: !4555)
!4563 = !DILocation(line: 746, column: 3, scope: !4555)
!4564 = !DILocation(line: 748, column: 22, scope: !4555)
!4565 = !DILocation(line: 748, column: 15, scope: !4555)
!4566 = !DILocation(line: 748, column: 52, scope: !4555)
!4567 = !DILocation(line: 748, column: 8, scope: !4555)
!4568 = !DILocation(line: 748, column: 13, scope: !4555)
!4569 = !DILocation(line: 749, column: 15, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4555, file: !3281, line: 749, column: 7)
!4571 = !DILocation(line: 750, column: 7, scope: !4570)
!4572 = !DILocation(line: 750, column: 10, scope: !4570)
!4573 = !DILocation(line: 751, column: 7, scope: !4570)
!4574 = !DILocation(line: 751, column: 10, scope: !4570)
!4575 = !DILocation(line: 751, column: 29, scope: !4570)
!4576 = !DILocation(line: 749, column: 7, scope: !4555)
!4577 = !DILocation(line: 752, column: 22, scope: !4570)
!4578 = !DILocation(line: 752, column: 28, scope: !4570)
!4579 = !DILocation(line: 752, column: 15, scope: !4570)
!4580 = !DILocation(line: 752, column: 5, scope: !4570)
!4581 = !DILocation(line: 753, column: 22, scope: !4555)
!4582 = !DILocation(line: 753, column: 15, scope: !4555)
!4583 = !DILocation(line: 753, column: 52, scope: !4555)
!4584 = !DILocation(line: 753, column: 8, scope: !4555)
!4585 = !DILocation(line: 753, column: 13, scope: !4555)
!4586 = !DILocation(line: 754, column: 15, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4555, file: !3281, line: 754, column: 7)
!4588 = !DILocation(line: 755, column: 7, scope: !4587)
!4589 = !DILocation(line: 755, column: 10, scope: !4587)
!4590 = !DILocation(line: 756, column: 7, scope: !4587)
!4591 = !DILocation(line: 756, column: 10, scope: !4587)
!4592 = !DILocation(line: 756, column: 29, scope: !4587)
!4593 = !DILocation(line: 754, column: 7, scope: !4555)
!4594 = !DILocation(line: 757, column: 22, scope: !4587)
!4595 = !DILocation(line: 757, column: 28, scope: !4587)
!4596 = !DILocation(line: 757, column: 15, scope: !4587)
!4597 = !DILocation(line: 757, column: 5, scope: !4587)
!4598 = !DILocation(line: 758, column: 8, scope: !4555)
!4599 = !DILocation(line: 758, column: 13, scope: !4555)
!4600 = !DILocation(line: 760, column: 8, scope: !4555)
!4601 = !DILocation(line: 760, column: 14, scope: !4555)
!4602 = !DILocation(line: 761, column: 8, scope: !4555)
!4603 = !DILocation(line: 761, column: 16, scope: !4555)
!4604 = !DILocation(line: 762, column: 8, scope: !4555)
!4605 = !DILocation(line: 762, column: 17, scope: !4555)
!4606 = !DILocation(line: 763, column: 1, scope: !4555)
!4607 = distinct !DISubprogram(name: "gimple_def_ops", scope: !396, file: !396, line: 1292, type: !4608, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4610)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!835, !3206}
!4610 = !{!4611}
!4611 = !DILocalVariable(name: "g", arg: 1, scope: !4607, file: !396, line: 1292, type: !3206)
!4612 = !DILocation(line: 0, scope: !4607)
!4613 = !DILocation(line: 1294, column: 8, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4607, file: !396, line: 1294, column: 7)
!4615 = !DILocation(line: 1294, column: 7, scope: !4607)
!4616 = !DILocation(line: 1296, column: 26, scope: !4607)
!4617 = !DILocation(line: 1296, column: 3, scope: !4607)
!4618 = !DILocation(line: 1297, column: 1, scope: !4607)
!4619 = distinct !DISubprogram(name: "gimple_vdef", scope: !396, file: !396, line: 1375, type: !3204, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4620)
!4620 = !{!4621}
!4621 = !DILocalVariable(name: "g", arg: 1, scope: !4619, file: !396, line: 1375, type: !3206)
!4622 = !DILocation(line: 0, scope: !4619)
!4623 = !DILocation(line: 1377, column: 8, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 1377, column: 7)
!4625 = !DILocation(line: 1377, column: 7, scope: !4619)
!4626 = !DILocation(line: 1379, column: 23, scope: !4619)
!4627 = !DILocation(line: 1379, column: 3, scope: !4619)
!4628 = !DILocation(line: 1380, column: 1, scope: !4619)
!4629 = distinct !DISubprogram(name: "gimple_use_ops", scope: !396, file: !396, line: 1313, type: !4630, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4632)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!842, !3206}
!4632 = !{!4633}
!4633 = !DILocalVariable(name: "g", arg: 1, scope: !4629, file: !396, line: 1313, type: !3206)
!4634 = !DILocation(line: 0, scope: !4629)
!4635 = !DILocation(line: 1315, column: 8, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4629, file: !396, line: 1315, column: 7)
!4637 = !DILocation(line: 1315, column: 7, scope: !4629)
!4638 = !DILocation(line: 1317, column: 26, scope: !4629)
!4639 = !DILocation(line: 1317, column: 3, scope: !4629)
!4640 = !DILocation(line: 1318, column: 1, scope: !4629)
!4641 = distinct !DISubprogram(name: "gimple_vuse", scope: !396, file: !396, line: 1365, type: !3204, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4642)
!4642 = !{!4643}
!4643 = !DILocalVariable(name: "g", arg: 1, scope: !4641, file: !396, line: 1365, type: !3206)
!4644 = !DILocation(line: 0, scope: !4641)
!4645 = !DILocation(line: 1367, column: 8, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4641, file: !396, line: 1367, column: 7)
!4647 = !DILocation(line: 1367, column: 7, scope: !4641)
!4648 = !DILocation(line: 1369, column: 23, scope: !4641)
!4649 = !DILocation(line: 1369, column: 3, scope: !4641)
!4650 = !DILocation(line: 1370, column: 1, scope: !4641)
!4651 = distinct !DISubprogram(name: "gimple_has_ops", scope: !396, file: !396, line: 1274, type: !4461, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4652)
!4652 = !{!4653}
!4653 = !DILocalVariable(name: "g", arg: 1, scope: !4651, file: !396, line: 1274, type: !3206)
!4654 = !DILocation(line: 0, scope: !4651)
!4655 = !DILocation(line: 1276, column: 10, scope: !4651)
!4656 = !DILocation(line: 1276, column: 26, scope: !4651)
!4657 = !DILocation(line: 1276, column: 41, scope: !4651)
!4658 = !DILocation(line: 1276, column: 44, scope: !4651)
!4659 = !DILocation(line: 1276, column: 60, scope: !4651)
!4660 = !DILocation(line: 1276, column: 3, scope: !4651)
!4661 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !396, file: !396, line: 1283, type: !4461, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4662)
!4662 = !{!4663}
!4663 = !DILocalVariable(name: "g", arg: 1, scope: !4661, file: !396, line: 1283, type: !3206)
!4664 = !DILocation(line: 0, scope: !4661)
!4665 = !DILocation(line: 1285, column: 10, scope: !4661)
!4666 = !DILocation(line: 1285, column: 26, scope: !4661)
!4667 = !DILocation(line: 1285, column: 43, scope: !4661)
!4668 = !DILocation(line: 1285, column: 46, scope: !4661)
!4669 = !DILocation(line: 1285, column: 62, scope: !4661)
!4670 = !DILocation(line: 1285, column: 3, scope: !4661)
!4671 = distinct !DISubprogram(name: "sese_bad_liveouts_use", scope: !1, file: !1, line: 254, type: !4672, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4674)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!468, !1865, !1376, !1258, !482}
!4674 = !{!4675, !4676, !4677, !4678, !4679, !4680}
!4675 = !DILocalVariable(name: "region", arg: 1, scope: !4671, file: !1, line: 254, type: !1865)
!4676 = !DILocalVariable(name: "liveouts", arg: 2, scope: !4671, file: !1, line: 254, type: !1376)
!4677 = !DILocalVariable(name: "bb", arg: 3, scope: !4671, file: !1, line: 254, type: !1258)
!4678 = !DILocalVariable(name: "use", arg: 4, scope: !4671, file: !1, line: 255, type: !482)
!4679 = !DILocalVariable(name: "ver", scope: !4671, file: !1, line: 257, type: !5)
!4680 = !DILocalVariable(name: "def_bb", scope: !4671, file: !1, line: 258, type: !1258)
!4681 = !DILocation(line: 0, scope: !4671)
!4682 = !DILocation(line: 260, column: 7, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 260, column: 7)
!4684 = !DILocation(line: 260, column: 23, scope: !4683)
!4685 = !DILocation(line: 260, column: 7, scope: !4671)
!4686 = !DILocation(line: 263, column: 9, scope: !4671)
!4687 = !DILocation(line: 267, column: 7, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 267, column: 7)
!4689 = !DILocation(line: 267, column: 7, scope: !4671)
!4690 = !DILocation(line: 270, column: 23, scope: !4671)
!4691 = !DILocation(line: 270, column: 12, scope: !4671)
!4692 = !DILocation(line: 272, column: 8, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 272, column: 7)
!4694 = !DILocation(line: 273, column: 7, scope: !4693)
!4695 = !DILocation(line: 273, column: 11, scope: !4693)
!4696 = !DILocation(line: 274, column: 7, scope: !4693)
!4697 = !DILocation(line: 274, column: 10, scope: !4693)
!4698 = !DILocation(line: 272, column: 7, scope: !4671)
!4699 = !DILocation(line: 278, column: 1, scope: !4671)
!4700 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !396, file: !396, line: 3336, type: !4701, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4703)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{null, !806}
!4703 = !{!4704}
!4704 = !DILocalVariable(name: "dbg", arg: 1, scope: !4700, file: !396, line: 3336, type: !806)
!4705 = !DILocation(line: 0, scope: !4700)
!4706 = !DILocation(line: 3342, column: 3, scope: !4700)
!4707 = !DILocation(line: 3343, column: 1, scope: !4700)
!4708 = distinct !DISubprogram(name: "update_stmt", scope: !396, file: !396, line: 1456, type: !4701, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4709)
!4709 = !{!4710}
!4710 = !DILocalVariable(name: "s", arg: 1, scope: !4708, file: !396, line: 1456, type: !806)
!4711 = !DILocation(line: 0, scope: !4708)
!4712 = !DILocation(line: 1458, column: 7, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4708, file: !396, line: 1458, column: 7)
!4714 = !DILocation(line: 1458, column: 7, scope: !4708)
!4715 = !DILocation(line: 1460, column: 7, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !396, line: 1459, column: 5)
!4717 = !DILocation(line: 1461, column: 7, scope: !4716)
!4718 = !DILocation(line: 1462, column: 5, scope: !4716)
!4719 = !DILocation(line: 1463, column: 1, scope: !4708)
!4720 = distinct !DISubprogram(name: "gimple_set_op", scope: !396, file: !396, line: 1663, type: !4721, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4723)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{null, !806, !5, !482}
!4723 = !{!4724, !4725, !4726}
!4724 = !DILocalVariable(name: "gs", arg: 1, scope: !4720, file: !396, line: 1663, type: !806)
!4725 = !DILocalVariable(name: "i", arg: 2, scope: !4720, file: !396, line: 1663, type: !5)
!4726 = !DILocalVariable(name: "op", arg: 3, scope: !4720, file: !396, line: 1663, type: !482)
!4727 = !DILocation(line: 0, scope: !4720)
!4728 = !DILocation(line: 1665, column: 3, scope: !4720)
!4729 = !DILocation(line: 1671, column: 3, scope: !4720)
!4730 = !DILocation(line: 1671, column: 22, scope: !4720)
!4731 = !DILocation(line: 1672, column: 1, scope: !4720)
!4732 = distinct !DISubprogram(name: "gimple_num_ops", scope: !396, file: !396, line: 1596, type: !3273, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4733)
!4733 = !{!4734}
!4734 = !DILocalVariable(name: "gs", arg: 1, scope: !4732, file: !396, line: 1596, type: !3206)
!4735 = !DILocation(line: 0, scope: !4732)
!4736 = !DILocation(line: 1598, column: 21, scope: !4732)
!4737 = !DILocation(line: 1598, column: 3, scope: !4732)
!4738 = distinct !DISubprogram(name: "gimple_ops", scope: !396, file: !396, line: 1614, type: !4739, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4741)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!840, !806}
!4741 = !{!4742, !4743}
!4742 = !DILocalVariable(name: "gs", arg: 1, scope: !4738, file: !396, line: 1614, type: !806)
!4743 = !DILocalVariable(name: "off", scope: !4738, file: !396, line: 1616, type: !951)
!4744 = !DILocation(line: 0, scope: !4738)
!4745 = !DILocation(line: 1621, column: 28, scope: !4738)
!4746 = !DILocation(line: 1621, column: 9, scope: !4738)
!4747 = !DILocation(line: 1622, column: 3, scope: !4738)
!4748 = !DILocation(line: 1624, column: 20, scope: !4738)
!4749 = !DILocation(line: 1624, column: 32, scope: !4738)
!4750 = !DILocation(line: 1624, column: 10, scope: !4738)
!4751 = !DILocation(line: 1624, column: 3, scope: !4738)
!4752 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !396, file: !396, line: 1073, type: !4753, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4755)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!395, !806}
!4755 = !{!4756}
!4756 = !DILocalVariable(name: "gs", arg: 1, scope: !4752, file: !396, line: 1073, type: !806)
!4757 = !DILocation(line: 0, scope: !4752)
!4758 = !DILocation(line: 1075, column: 24, scope: !4752)
!4759 = !DILocation(line: 1075, column: 10, scope: !4752)
!4760 = !DILocation(line: 1075, column: 3, scope: !4752)
!4761 = distinct !DISubprogram(name: "gss_for_code", scope: !396, file: !396, line: 1061, type: !4762, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4764)
!4762 = !DISubroutineType(types: !4763)
!4763 = !{!395, !422}
!4764 = !{!4765}
!4765 = !DILocalVariable(name: "code", arg: 1, scope: !4761, file: !396, line: 1061, type: !422)
!4766 = !DILocation(line: 0, scope: !4761)
!4767 = !DILocation(line: 1066, column: 10, scope: !4761)
!4768 = !DILocation(line: 1066, column: 3, scope: !4761)
!4769 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !396, file: !396, line: 3080, type: !4739, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4770)
!4770 = !{!4771}
!4771 = !DILocalVariable(name: "gs", arg: 1, scope: !4769, file: !396, line: 3080, type: !806)
!4772 = !DILocation(line: 0, scope: !4769)
!4773 = !DILocation(line: 3083, column: 26, scope: !4769)
!4774 = !DILocation(line: 3083, column: 3, scope: !4769)
!4775 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1875, file: !1875, line: 32, type: !4776, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4778)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!1873, !469}
!4778 = !{!4779}
!4779 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4775, file: !1875, line: 32, type: !469)
!4780 = !DILocation(line: 0, scope: !4775)
!4781 = !DILocation(line: 32, column: 1, scope: !4775)
!4782 = distinct !DISubprogram(name: "number_of_loops", scope: !328, file: !328, line: 459, type: !4783, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !1941)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!5}
!4785 = !DILocation(line: 461, column: 8, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !328, line: 461, column: 7)
!4787 = !DILocation(line: 461, column: 7, scope: !4782)
!4788 = !DILocation(line: 464, column: 10, scope: !4782)
!4789 = !DILocation(line: 464, column: 3, scope: !4782)
!4790 = !DILocation(line: 0, scope: !4782)
!4791 = !DILocation(line: 465, column: 1, scope: !4782)
!4792 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1875, file: !1875, line: 31, type: !4793, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4797)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!4795, !4796, !469}
!4795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!4797 = !{!4798, !4799, !4800}
!4798 = !DILocalVariable(name: "vec_", arg: 1, scope: !4792, file: !1875, line: 31, type: !4796)
!4799 = !DILocalVariable(name: "obj_", arg: 2, scope: !4792, file: !1875, line: 31, type: !469)
!4800 = !DILocalVariable(name: "slot_", scope: !4792, file: !1875, line: 31, type: !4795)
!4801 = !DILocation(line: 0, scope: !4792)
!4802 = !DILocation(line: 31, column: 1, scope: !4792)
!4803 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1875, file: !1875, line: 31, type: !4804, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4808)
!4804 = !DISubroutineType(types: !4805)
!4805 = !{!469, !4806, !5, !4795}
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1879)
!4808 = !{!4809, !4810, !4811}
!4809 = !DILocalVariable(name: "vec_", arg: 1, scope: !4803, file: !1875, line: 31, type: !4806)
!4810 = !DILocalVariable(name: "ix_", arg: 2, scope: !4803, file: !1875, line: 31, type: !5)
!4811 = !DILocalVariable(name: "ptr", arg: 3, scope: !4803, file: !1875, line: 31, type: !4795)
!4812 = !DILocation(line: 0, scope: !4803)
!4813 = !DILocation(line: 31, column: 1, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4803, file: !1875, line: 31, column: 1)
!4815 = !DILocation(line: 31, column: 1, scope: !4803)
!4816 = !DILocation(line: 31, column: 1, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4814, file: !1875, line: 31, column: 1)
!4818 = !DILocation(line: 31, column: 1, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4814, file: !1875, line: 31, column: 1)
!4820 = !DILocation(line: 0, scope: !4814)
!4821 = distinct !DISubprogram(name: "get_loop", scope: !328, file: !328, line: 417, type: !4822, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4824)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!1021, !5}
!4824 = !{!4825}
!4825 = !DILocalVariable(name: "num", arg: 1, scope: !4821, file: !328, line: 417, type: !5)
!4826 = !DILocation(line: 0, scope: !4821)
!4827 = !DILocation(line: 419, column: 10, scope: !4821)
!4828 = !DILocation(line: 419, column: 3, scope: !4821)
!4829 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1875, file: !1875, line: 32, type: !4830, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4833)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{null, !4832}
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!4833 = !{!4834}
!4834 = !DILocalVariable(name: "vec_", arg: 1, scope: !4829, file: !1875, line: 32, type: !4832)
!4835 = !DILocation(line: 0, scope: !4829)
!4836 = !DILocation(line: 32, column: 1, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4829, file: !1875, line: 32, column: 1)
!4838 = !DILocation(line: 32, column: 1, scope: !4829)
!4839 = distinct !DISubprogram(name: "get_vdef_before_sese", scope: !1, file: !1, line: 400, type: !4840, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4842)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{!482, !1865, !482, !3228}
!4842 = !{!4843, !4844, !4845, !4846, !4847, !4848, !4849, !4854, !4855, !4857}
!4843 = !DILocalVariable(name: "region", arg: 1, scope: !4839, file: !1, line: 400, type: !1865)
!4844 = !DILocalVariable(name: "name", arg: 2, scope: !4839, file: !1, line: 400, type: !482)
!4845 = !DILocalVariable(name: "visited", arg: 3, scope: !4839, file: !1, line: 400, type: !3228)
!4846 = !DILocalVariable(name: "i", scope: !4839, file: !1, line: 402, type: !5)
!4847 = !DILocalVariable(name: "stmt", scope: !4839, file: !1, line: 403, type: !806)
!4848 = !DILocalVariable(name: "def_bb", scope: !4839, file: !1, line: 404, type: !1258)
!4849 = !DILocalVariable(name: "arg", scope: !4850, file: !1, line: 419, type: !482)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !1, line: 418, column: 2)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !1, line: 417, column: 7)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !1, line: 417, column: 7)
!4853 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 415, column: 5)
!4854 = !DILocalVariable(name: "res", scope: !4850, file: !1, line: 420, type: !482)
!4855 = !DILocalVariable(name: "use_p", scope: !4856, file: !1, line: 435, type: !1870)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !1, line: 434, column: 7)
!4857 = !DILocalVariable(name: "use", scope: !4856, file: !1, line: 436, type: !482)
!4858 = !DILocation(line: 441, column: 9, scope: !4856)
!4859 = !DILocation(line: 0, scope: !4839)
!4860 = !DILocation(line: 403, column: 17, scope: !4839)
!4861 = !DILocation(line: 404, column: 24, scope: !4839)
!4862 = !DILocation(line: 406, column: 8, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 406, column: 7)
!4864 = !DILocation(line: 406, column: 15, scope: !4863)
!4865 = !DILocation(line: 406, column: 19, scope: !4863)
!4866 = !DILocation(line: 406, column: 7, scope: !4839)
!4867 = !DILocation(line: 409, column: 7, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 409, column: 7)
!4869 = !DILocation(line: 409, column: 7, scope: !4839)
!4870 = !DILocation(line: 412, column: 3, scope: !4839)
!4871 = !DILocation(line: 414, column: 11, scope: !4839)
!4872 = !DILocation(line: 414, column: 3, scope: !4839)
!4873 = !DILocation(line: 417, column: 7, scope: !4852)
!4874 = !DILocation(line: 0, scope: !4852)
!4875 = !DILocation(line: 417, column: 23, scope: !4851)
!4876 = !DILocation(line: 417, column: 21, scope: !4851)
!4877 = !DILocation(line: 419, column: 15, scope: !4850)
!4878 = !DILocation(line: 0, scope: !4850)
!4879 = !DILocation(line: 422, column: 19, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4850, file: !1, line: 422, column: 8)
!4881 = !DILocation(line: 422, column: 8, scope: !4880)
!4882 = !DILocation(line: 423, column: 8, scope: !4880)
!4883 = !DILocation(line: 423, column: 19, scope: !4880)
!4884 = !DILocation(line: 423, column: 39, scope: !4880)
!4885 = !DILocation(line: 423, column: 28, scope: !4880)
!4886 = !DILocation(line: 423, column: 65, scope: !4880)
!4887 = !DILocation(line: 423, column: 25, scope: !4880)
!4888 = !DILocation(line: 422, column: 8, scope: !4850)
!4889 = !DILocation(line: 426, column: 10, scope: !4850)
!4890 = !DILocation(line: 427, column: 8, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4850, file: !1, line: 427, column: 8)
!4892 = !DILocation(line: 0, scope: !4851)
!4893 = !DILocation(line: 417, column: 52, scope: !4851)
!4894 = !DILocation(line: 417, column: 7, scope: !4851)
!4895 = distinct !{!4895, !4873, !4896}
!4896 = !DILocation(line: 429, column: 2, scope: !4852)
!4897 = !DILocation(line: 435, column: 24, scope: !4856)
!4898 = !DILocation(line: 0, scope: !4856)
!4899 = !DILocation(line: 436, column: 13, scope: !4856)
!4900 = !DILocation(line: 438, column: 14, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4856, file: !1, line: 438, column: 6)
!4902 = !DILocation(line: 438, column: 34, scope: !4901)
!4903 = !DILocation(line: 438, column: 23, scope: !4901)
!4904 = !DILocation(line: 438, column: 60, scope: !4901)
!4905 = !DILocation(line: 438, column: 20, scope: !4901)
!4906 = !DILocation(line: 438, column: 6, scope: !4856)
!4907 = !DILocation(line: 439, column: 32, scope: !4901)
!4908 = !DILocation(line: 439, column: 4, scope: !4901)
!4909 = !DILocation(line: 447, column: 1, scope: !4839)
!4910 = distinct !DISubprogram(name: "SET_BIT", scope: !3229, file: !3229, line: 63, type: !4911, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4913)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{null, !3228, !5}
!4913 = !{!4914, !4915, !4916}
!4914 = !DILocalVariable(name: "map", arg: 1, scope: !4910, file: !3229, line: 63, type: !3228)
!4915 = !DILocalVariable(name: "bitno", arg: 2, scope: !4910, file: !3229, line: 63, type: !5)
!4916 = !DILocalVariable(name: "oldbit", scope: !4917, file: !3229, line: 67, type: !468)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3229, line: 66, column: 5)
!4918 = distinct !DILexicalBlock(scope: !4910, file: !3229, line: 65, column: 7)
!4919 = !DILocation(line: 0, scope: !4910)
!4920 = !DILocation(line: 65, column: 12, scope: !4918)
!4921 = !DILocation(line: 65, column: 7, scope: !4918)
!4922 = !DILocation(line: 65, column: 7, scope: !4910)
!4923 = !DILocation(line: 73, column: 40, scope: !4910)
!4924 = !DILocation(line: 73, column: 29, scope: !4910)
!4925 = !DILocation(line: 72, column: 19, scope: !4910)
!4926 = !DILocation(line: 72, column: 3, scope: !4910)
!4927 = !DILocation(line: 68, column: 16, scope: !4917)
!4928 = !DILocation(line: 69, column: 12, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4917, file: !3229, line: 69, column: 11)
!4930 = !DILocation(line: 69, column: 11, scope: !4917)
!4931 = !DILocation(line: 70, column: 2, scope: !4929)
!4932 = !DILocation(line: 70, column: 41, scope: !4929)
!4933 = !DILocation(line: 73, column: 5, scope: !4910)
!4934 = !DILocation(line: 74, column: 1, scope: !4910)
!4935 = distinct !DISubprogram(name: "gimple_vuse_op", scope: !396, file: !396, line: 1334, type: !4936, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4938)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!1870, !3206}
!4938 = !{!4939, !4940}
!4939 = !DILocalVariable(name: "g", arg: 1, scope: !4935, file: !396, line: 1334, type: !3206)
!4940 = !DILocalVariable(name: "ops", scope: !4935, file: !396, line: 1336, type: !842)
!4941 = !DILocation(line: 0, scope: !4935)
!4942 = !DILocation(line: 1337, column: 8, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4935, file: !396, line: 1337, column: 7)
!4944 = !DILocation(line: 1337, column: 7, scope: !4935)
!4945 = !DILocation(line: 1339, column: 25, scope: !4935)
!4946 = !DILocation(line: 1340, column: 7, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4935, file: !396, line: 1340, column: 7)
!4948 = !DILocation(line: 1341, column: 7, scope: !4947)
!4949 = !DILocation(line: 1341, column: 28, scope: !4947)
!4950 = !DILocation(line: 1341, column: 49, scope: !4947)
!4951 = !DILocation(line: 1341, column: 32, scope: !4947)
!4952 = !DILocation(line: 1342, column: 12, scope: !4947)
!4953 = !DILocation(line: 1340, column: 7, scope: !4935)
!4954 = !DILocation(line: 1344, column: 1, scope: !4935)
!4955 = distinct !DISubprogram(name: "RESET_BIT", scope: !3229, file: !3229, line: 82, type: !4911, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4956)
!4956 = !{!4957, !4958, !4959}
!4957 = !DILocalVariable(name: "map", arg: 1, scope: !4955, file: !3229, line: 82, type: !3228)
!4958 = !DILocalVariable(name: "bitno", arg: 2, scope: !4955, file: !3229, line: 82, type: !5)
!4959 = !DILocalVariable(name: "oldbit", scope: !4960, file: !3229, line: 86, type: !468)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3229, line: 85, column: 5)
!4961 = distinct !DILexicalBlock(scope: !4955, file: !3229, line: 84, column: 7)
!4962 = !DILocation(line: 0, scope: !4955)
!4963 = !DILocation(line: 84, column: 12, scope: !4961)
!4964 = !DILocation(line: 84, column: 7, scope: !4961)
!4965 = !DILocation(line: 84, column: 7, scope: !4955)
!4966 = !DILocation(line: 92, column: 42, scope: !4955)
!4967 = !DILocation(line: 92, column: 31, scope: !4955)
!4968 = !DILocation(line: 91, column: 19, scope: !4955)
!4969 = !DILocation(line: 91, column: 3, scope: !4955)
!4970 = !DILocation(line: 87, column: 16, scope: !4960)
!4971 = !DILocation(line: 88, column: 11, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4960, file: !3229, line: 88, column: 11)
!4973 = !DILocation(line: 88, column: 11, scope: !4960)
!4974 = !DILocation(line: 89, column: 2, scope: !4972)
!4975 = !DILocation(line: 89, column: 41, scope: !4972)
!4976 = !DILocation(line: 92, column: 8, scope: !4955)
!4977 = !DILocation(line: 92, column: 5, scope: !4955)
!4978 = !DILocation(line: 93, column: 1, scope: !4955)
!4979 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !341, file: !341, line: 150, type: !4980, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4984)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{!786, !4982, !5}
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!4984 = !{!4985, !4986}
!4985 = !DILocalVariable(name: "vec_", arg: 1, scope: !4979, file: !341, line: 150, type: !4982)
!4986 = !DILocalVariable(name: "ix_", arg: 2, scope: !4979, file: !341, line: 150, type: !5)
!4987 = !DILocation(line: 0, scope: !4979)
!4988 = !DILocation(line: 150, column: 1, scope: !4979)
!4989 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !396, file: !396, line: 3100, type: !4990, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!3297, !806, !5}
!4992 = !{!4993, !4994}
!4993 = !DILocalVariable(name: "gs", arg: 1, scope: !4989, file: !396, line: 3100, type: !806)
!4994 = !DILocalVariable(name: "index", arg: 2, scope: !4989, file: !396, line: 3100, type: !5)
!4995 = !DILocation(line: 0, scope: !4989)
!4996 = !DILocation(line: 3103, column: 3, scope: !4989)
!4997 = !DILocation(line: 3104, column: 12, scope: !4989)
!4998 = !DILocation(line: 3104, column: 3, scope: !4989)
!4999 = distinct !DISubprogram(name: "delink_imm_use", scope: !3281, file: !3281, line: 188, type: !5000, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !1871}
!5002 = !{!5003}
!5003 = !DILocalVariable(name: "linknode", arg: 1, scope: !4999, file: !3281, line: 188, type: !1871)
!5004 = !DILocation(line: 0, scope: !4999)
!5005 = !DILocation(line: 191, column: 17, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4999, file: !3281, line: 191, column: 7)
!5007 = !DILocation(line: 191, column: 22, scope: !5006)
!5008 = !DILocation(line: 191, column: 7, scope: !4999)
!5009 = !DILocation(line: 194, column: 36, scope: !4999)
!5010 = !DILocation(line: 194, column: 19, scope: !4999)
!5011 = !DILocation(line: 194, column: 24, scope: !4999)
!5012 = !DILocation(line: 195, column: 36, scope: !4999)
!5013 = !DILocation(line: 195, column: 13, scope: !4999)
!5014 = !DILocation(line: 195, column: 24, scope: !4999)
!5015 = !DILocation(line: 196, column: 18, scope: !4999)
!5016 = !DILocation(line: 197, column: 18, scope: !4999)
!5017 = !DILocation(line: 198, column: 1, scope: !4999)
!5018 = distinct !DISubprogram(name: "link_imm_use", scope: !3281, file: !3281, line: 214, type: !5019, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5021)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{null, !1871, !482}
!5021 = !{!5022, !5023, !5024}
!5022 = !DILocalVariable(name: "linknode", arg: 1, scope: !5018, file: !3281, line: 214, type: !1871)
!5023 = !DILocalVariable(name: "def", arg: 2, scope: !5018, file: !3281, line: 214, type: !482)
!5024 = !DILocalVariable(name: "root", scope: !5018, file: !3281, line: 216, type: !1871)
!5025 = !DILocation(line: 0, scope: !5018)
!5026 = !DILocation(line: 218, column: 8, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5018, file: !3281, line: 218, column: 7)
!5028 = !DILocation(line: 218, column: 12, scope: !5027)
!5029 = !DILocation(line: 218, column: 15, scope: !5027)
!5030 = !DILocation(line: 218, column: 31, scope: !5027)
!5031 = !DILocation(line: 218, column: 7, scope: !5018)
!5032 = !DILocation(line: 219, column: 15, scope: !5027)
!5033 = !DILocation(line: 219, column: 20, scope: !5027)
!5034 = !DILocation(line: 219, column: 5, scope: !5027)
!5035 = !DILocation(line: 222, column: 16, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5027, file: !3281, line: 221, column: 5)
!5037 = !DILocation(line: 227, column: 7, scope: !5036)
!5038 = !DILocation(line: 229, column: 1, scope: !5018)
!5039 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !3281, file: !3281, line: 202, type: !5040, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5042)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{null, !1871, !1871}
!5042 = !{!5043, !5044}
!5043 = !DILocalVariable(name: "linknode", arg: 1, scope: !5039, file: !3281, line: 202, type: !1871)
!5044 = !DILocalVariable(name: "list", arg: 2, scope: !5039, file: !3281, line: 202, type: !1871)
!5045 = !DILocation(line: 0, scope: !5039)
!5046 = !DILocation(line: 206, column: 13, scope: !5039)
!5047 = !DILocation(line: 206, column: 18, scope: !5039)
!5048 = !DILocation(line: 207, column: 26, scope: !5039)
!5049 = !DILocation(line: 207, column: 13, scope: !5039)
!5050 = !DILocation(line: 207, column: 18, scope: !5039)
!5051 = !DILocation(line: 208, column: 9, scope: !5039)
!5052 = !DILocation(line: 208, column: 15, scope: !5039)
!5053 = !DILocation(line: 208, column: 20, scope: !5039)
!5054 = !DILocation(line: 209, column: 14, scope: !5039)
!5055 = !DILocation(line: 210, column: 1, scope: !5039)
!5056 = distinct !DISubprogram(name: "ei_end_p", scope: !341, file: !341, line: 721, type: !5057, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5059)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!468, !3364}
!5059 = !{!5060}
!5060 = !DILocalVariable(name: "i", arg: 1, scope: !5056, file: !341, line: 721, type: !3364)
!5061 = !DILocation(line: 723, column: 22, scope: !5056)
!5062 = !DILocation(line: 723, column: 19, scope: !5056)
!5063 = !DILocation(line: 723, column: 10, scope: !5056)
!5064 = !DILocation(line: 723, column: 3, scope: !5056)
!5065 = distinct !DISubprogram(name: "ei_edge", scope: !341, file: !341, line: 752, type: !5066, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5068)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!786, !3364}
!5068 = !{!5069}
!5069 = !DILocalVariable(name: "i", arg: 1, scope: !5065, file: !341, line: 752, type: !3364)
!5070 = !DILocation(line: 754, column: 10, scope: !5065)
!5071 = !DILocation(line: 754, column: 3, scope: !5065)
!5072 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !341, file: !341, line: 150, type: !5073, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!5, !4982}
!5075 = !{!5076}
!5076 = !DILocalVariable(name: "vec_", arg: 1, scope: !5072, file: !341, line: 150, type: !4982)
!5077 = !DILocation(line: 0, scope: !5072)
!5078 = !DILocation(line: 150, column: 1, scope: !5072)
!5079 = distinct !DISubprogram(name: "ei_container", scope: !341, file: !341, line: 685, type: !5080, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5082)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!774, !3364}
!5082 = !{!5083}
!5083 = !DILocalVariable(name: "i", arg: 1, scope: !5079, file: !341, line: 685, type: !3364)
!5084 = !DILocation(line: 687, column: 3, scope: !5079)
!5085 = !DILocation(line: 688, column: 10, scope: !5079)
!5086 = !DILocation(line: 688, column: 3, scope: !5079)
!5087 = distinct !DISubprogram(name: "expr_defined_in_loop_p", scope: !1, file: !1, line: 1117, type: !5088, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5090)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!468, !482, !1048}
!5090 = !{!5091, !5092}
!5091 = !DILocalVariable(name: "expr", arg: 1, scope: !5087, file: !1, line: 1117, type: !482)
!5092 = !DILocalVariable(name: "loop", arg: 2, scope: !5087, file: !1, line: 1117, type: !1048)
!5093 = !DILocation(line: 1131, column: 14, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 1120, column: 5)
!5095 = !DILocation(line: 0, scope: !5087)
!5096 = !DILocation(line: 1119, column: 11, scope: !5087)
!5097 = !DILocation(line: 1119, column: 3, scope: !5087)
!5098 = !DILocation(line: 1122, column: 38, scope: !5094)
!5099 = !DILocation(line: 1122, column: 14, scope: !5094)
!5100 = !DILocation(line: 1123, column: 2, scope: !5094)
!5101 = !DILocation(line: 1123, column: 29, scope: !5094)
!5102 = !DILocation(line: 1123, column: 5, scope: !5094)
!5103 = !DILocation(line: 1124, column: 2, scope: !5094)
!5104 = !DILocation(line: 1124, column: 29, scope: !5094)
!5105 = !DILocation(line: 1124, column: 5, scope: !5094)
!5106 = !DILocation(line: 1122, column: 7, scope: !5094)
!5107 = !DILocation(line: 1127, column: 38, scope: !5094)
!5108 = !DILocation(line: 1127, column: 14, scope: !5094)
!5109 = !DILocation(line: 1128, column: 2, scope: !5094)
!5110 = !DILocation(line: 1128, column: 29, scope: !5094)
!5111 = !DILocation(line: 1128, column: 5, scope: !5094)
!5112 = !DILocation(line: 1127, column: 7, scope: !5094)
!5113 = !DILocation(line: 1131, column: 38, scope: !5094)
!5114 = !DILocation(line: 1134, column: 31, scope: !5094)
!5115 = !DILocation(line: 1135, column: 2, scope: !5094)
!5116 = !DILocation(line: 1135, column: 5, scope: !5094)
!5117 = !DILocation(line: 1134, column: 7, scope: !5094)
!5118 = !DILocation(line: 1140, column: 1, scope: !5087)
!5119 = !DILocation(line: 0, scope: !5094)
!5120 = distinct !DISubprogram(name: "alive_after_loop", scope: !1, file: !1, line: 1149, type: !5121, scopeLine: 1150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5123)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!806, !482}
!5123 = !{!5124, !5125, !5126, !5134, !5135}
!5124 = !DILocalVariable(name: "name", arg: 1, scope: !5120, file: !1, line: 1149, type: !482)
!5125 = !DILocalVariable(name: "use_p", scope: !5120, file: !1, line: 1151, type: !1870)
!5126 = !DILocalVariable(name: "imm_iter", scope: !5120, file: !1, line: 1152, type: !5127)
!5127 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !1198, line: 249, baseType: !5128)
!5128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !1198, line: 238, size: 448, elements: !5129)
!5129 = !{!5130, !5131, !5132, !5133}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !5128, file: !1198, line: 241, baseType: !1871, size: 64)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !5128, file: !1198, line: 243, baseType: !1871, size: 64, offset: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !5128, file: !1198, line: 245, baseType: !1872, size: 256, offset: 128)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !5128, file: !1198, line: 248, baseType: !1871, size: 64, offset: 384)
!5134 = !DILocalVariable(name: "loop", scope: !5120, file: !1, line: 1153, type: !1048)
!5135 = !DILocalVariable(name: "stmt", scope: !5136, file: !1, line: 1157, type: !806)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !1, line: 1156, column: 5)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1155, column: 3)
!5138 = distinct !DILexicalBlock(scope: !5120, file: !1, line: 1155, column: 3)
!5139 = !DILocation(line: 0, scope: !5120)
!5140 = !DILocation(line: 1152, column: 3, scope: !5120)
!5141 = !DILocation(line: 1153, column: 28, scope: !5120)
!5142 = !DILocation(line: 1153, column: 17, scope: !5120)
!5143 = !DILocation(line: 1153, column: 55, scope: !5120)
!5144 = !DILocation(line: 1155, column: 3, scope: !5138)
!5145 = !DILocation(line: 0, scope: !5138)
!5146 = !DILocation(line: 1155, column: 3, scope: !5137)
!5147 = !DILocation(line: 1157, column: 21, scope: !5136)
!5148 = !DILocation(line: 0, scope: !5136)
!5149 = !DILocation(line: 1159, column: 11, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5136, file: !1, line: 1159, column: 11)
!5151 = !DILocation(line: 1159, column: 30, scope: !5150)
!5152 = !DILocation(line: 1160, column: 4, scope: !5150)
!5153 = !DILocation(line: 1160, column: 7, scope: !5150)
!5154 = !DILocation(line: 1160, column: 25, scope: !5150)
!5155 = !DILocation(line: 1160, column: 37, scope: !5150)
!5156 = !DILocation(line: 1159, column: 11, scope: !5136)
!5157 = !DILocation(line: 1162, column: 5, scope: !5137)
!5158 = distinct !{!5158, !5144, !5159}
!5159 = !DILocation(line: 1162, column: 5, scope: !5138)
!5160 = !DILocation(line: 1165, column: 1, scope: !5120)
!5161 = distinct !DISubprogram(name: "close_phi_not_yet_inserted_p", scope: !1, file: !1, line: 1171, type: !5162, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5164)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!468, !1048, !482}
!5164 = !{!5165, !5166, !5167, !5168}
!5165 = !DILocalVariable(name: "loop", arg: 1, scope: !5161, file: !1, line: 1171, type: !1048)
!5166 = !DILocalVariable(name: "name", arg: 2, scope: !5161, file: !1, line: 1171, type: !482)
!5167 = !DILocalVariable(name: "psi", scope: !5161, file: !1, line: 1173, type: !3091)
!5168 = !DILocalVariable(name: "bb", scope: !5161, file: !1, line: 1174, type: !1258)
!5169 = !DILocation(line: 0, scope: !5161)
!5170 = !DILocation(line: 1173, column: 3, scope: !5161)
!5171 = !DILocation(line: 1174, column: 20, scope: !5161)
!5172 = !DILocation(line: 1174, column: 40, scope: !5161)
!5173 = !DILocation(line: 1176, column: 14, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 1176, column: 3)
!5175 = !DILocation(line: 1176, column: 8, scope: !5174)
!5176 = !DILocation(line: 1176, column: 36, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !1, line: 1176, column: 3)
!5178 = !DILocation(line: 1176, column: 35, scope: !5177)
!5179 = !DILocation(line: 1176, column: 3, scope: !5174)
!5180 = !DILocation(line: 1177, column: 29, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1177, column: 9)
!5182 = !DILocation(line: 1177, column: 9, scope: !5181)
!5183 = !DILocation(line: 1177, column: 48, scope: !5181)
!5184 = !DILocation(line: 1177, column: 9, scope: !5177)
!5185 = !DILocation(line: 1176, column: 53, scope: !5177)
!5186 = !DILocation(line: 1176, column: 3, scope: !5177)
!5187 = distinct !{!5187, !5179, !5188}
!5188 = !DILocation(line: 1178, column: 14, scope: !5174)
!5189 = !DILocation(line: 1181, column: 1, scope: !5161)
!5190 = distinct !DISubprogram(name: "VEC_rename_map_elt_heap_safe_push", scope: !479, file: !479, line: 261, type: !5191, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!3562, !3579, !1886}
!5193 = !{!5194, !5195}
!5194 = !DILocalVariable(name: "vec_", arg: 1, scope: !5190, file: !479, line: 261, type: !3579)
!5195 = !DILocalVariable(name: "obj_", arg: 2, scope: !5190, file: !479, line: 261, type: !1886)
!5196 = !DILocation(line: 0, scope: !5190)
!5197 = !DILocation(line: 261, column: 1, scope: !5190)
!5198 = distinct !DISubprogram(name: "name_defined_in_loop_p", scope: !1, file: !1, line: 1108, type: !5088, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5199)
!5199 = !{!5200, !5201}
!5200 = !DILocalVariable(name: "name", arg: 1, scope: !5198, file: !1, line: 1108, type: !482)
!5201 = !DILocalVariable(name: "loop", arg: 2, scope: !5198, file: !1, line: 1108, type: !1048)
!5202 = !DILocation(line: 0, scope: !5198)
!5203 = !DILocation(line: 1110, column: 11, scope: !5198)
!5204 = !DILocation(line: 1111, column: 5, scope: !5198)
!5205 = !DILocation(line: 1111, column: 19, scope: !5198)
!5206 = !DILocation(line: 1111, column: 8, scope: !5198)
!5207 = !DILocation(line: 1111, column: 46, scope: !5198)
!5208 = !DILocation(line: 1111, column: 58, scope: !5198)
!5209 = !DILocation(line: 1110, column: 3, scope: !5198)
!5210 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !3281, file: !3281, line: 292, type: !5211, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5214)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!1870, !5213, !482}
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5214 = !{!5215, !5216}
!5215 = !DILocalVariable(name: "imm", arg: 1, scope: !5210, file: !3281, line: 292, type: !5213)
!5216 = !DILocalVariable(name: "var", arg: 2, scope: !5210, file: !3281, line: 292, type: !482)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 294, column: 18, scope: !5210)
!5219 = !DILocation(line: 294, column: 8, scope: !5210)
!5220 = !DILocation(line: 294, column: 14, scope: !5210)
!5221 = !DILocation(line: 295, column: 30, scope: !5210)
!5222 = !DILocation(line: 295, column: 16, scope: !5210)
!5223 = !DILocation(line: 299, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5210, file: !3281, line: 299, column: 7)
!5225 = !DILocation(line: 299, column: 7, scope: !5210)
!5226 = !DILocation(line: 301, column: 15, scope: !5210)
!5227 = !DILocation(line: 301, column: 3, scope: !5210)
!5228 = !DILocation(line: 302, column: 1, scope: !5210)
!5229 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !3281, file: !3281, line: 285, type: !5230, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5234)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!468, !5232}
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5233, size: 64)
!5233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5127)
!5234 = !{!5235}
!5235 = !DILocalVariable(name: "imm", arg: 1, scope: !5229, file: !3281, line: 285, type: !5232)
!5236 = !DILocation(line: 0, scope: !5229)
!5237 = !DILocation(line: 287, column: 16, scope: !5229)
!5238 = !DILocation(line: 287, column: 32, scope: !5229)
!5239 = !DILocation(line: 287, column: 24, scope: !5229)
!5240 = !DILocation(line: 287, column: 10, scope: !5229)
!5241 = !DILocation(line: 287, column: 3, scope: !5229)
!5242 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !3281, file: !3281, line: 306, type: !5243, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5245)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!1870, !5213}
!5245 = !{!5246, !5247}
!5246 = !DILocalVariable(name: "imm", arg: 1, scope: !5242, file: !3281, line: 306, type: !5213)
!5247 = !DILocalVariable(name: "old", scope: !5242, file: !3281, line: 308, type: !1870)
!5248 = !DILocation(line: 0, scope: !5242)
!5249 = !DILocation(line: 308, column: 28, scope: !5242)
!5250 = !DILocation(line: 319, column: 23, scope: !5242)
!5251 = !DILocation(line: 319, column: 16, scope: !5242)
!5252 = !DILocation(line: 320, column: 7, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5242, file: !3281, line: 320, column: 7)
!5254 = !DILocation(line: 320, column: 7, scope: !5242)
!5255 = !DILocation(line: 322, column: 15, scope: !5242)
!5256 = !DILocation(line: 322, column: 3, scope: !5242)
!5257 = !DILocation(line: 323, column: 1, scope: !5242)
!5258 = distinct !DISubprogram(name: "VEC_rename_map_elt_heap_reserve", scope: !479, file: !479, line: 261, type: !5259, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!469, !3579, !469}
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "vec_", arg: 1, scope: !5258, file: !479, line: 261, type: !3579)
!5263 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5258, file: !479, line: 261, type: !469)
!5264 = !DILocalVariable(name: "extend", scope: !5258, file: !479, line: 261, type: !469)
!5265 = !DILocation(line: 0, scope: !5258)
!5266 = !DILocation(line: 261, column: 1, scope: !5258)
!5267 = !DILocation(line: 261, column: 1, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5258, file: !479, line: 261, column: 1)
!5269 = distinct !DISubprogram(name: "VEC_rename_map_elt_base_quick_push", scope: !479, file: !479, line: 260, type: !5270, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5273)
!5270 = !DISubroutineType(types: !5271)
!5271 = !{!3562, !5272, !1886}
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!5273 = !{!5274, !5275, !5276}
!5274 = !DILocalVariable(name: "vec_", arg: 1, scope: !5269, file: !479, line: 260, type: !5272)
!5275 = !DILocalVariable(name: "obj_", arg: 2, scope: !5269, file: !479, line: 260, type: !1886)
!5276 = !DILocalVariable(name: "slot_", scope: !5269, file: !479, line: 260, type: !3562)
!5277 = !DILocation(line: 0, scope: !5269)
!5278 = !DILocation(line: 260, column: 1, scope: !5269)
!5279 = distinct !DISubprogram(name: "VEC_rename_map_elt_base_space", scope: !479, file: !479, line: 260, type: !5280, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5282)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{!469, !5272, !469}
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "vec_", arg: 1, scope: !5279, file: !479, line: 260, type: !5272)
!5284 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5279, file: !479, line: 260, type: !469)
!5285 = !DILocation(line: 0, scope: !5279)
!5286 = !DILocation(line: 260, column: 1, scope: !5279)
!5287 = distinct !DISubprogram(name: "default_before_guard", scope: !1, file: !1, line: 1283, type: !2977, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5288)
!5288 = !{!5289, !5290, !5291}
!5289 = !DILocalVariable(name: "before_guard", arg: 1, scope: !5287, file: !1, line: 1283, type: !1290)
!5290 = !DILocalVariable(name: "old_name", arg: 2, scope: !5287, file: !1, line: 1283, type: !482)
!5291 = !DILocalVariable(name: "res", scope: !5287, file: !1, line: 1285, type: !482)
!5292 = !DILocation(line: 0, scope: !5287)
!5293 = !DILocation(line: 1285, column: 14, scope: !5287)
!5294 = !DILocation(line: 1287, column: 11, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 1287, column: 7)
!5296 = !DILocation(line: 1287, column: 7, scope: !5287)
!5297 = !DILocation(line: 1289, column: 11, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 1289, column: 11)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !1, line: 1288, column: 5)
!5300 = !DILocation(line: 1289, column: 11, scope: !5299)
!5301 = !DILocation(line: 1290, column: 9, scope: !5298)
!5302 = !DILocation(line: 1290, column: 2, scope: !5298)
!5303 = !DILocation(line: 1291, column: 34, scope: !5299)
!5304 = !DILocation(line: 1291, column: 40, scope: !5299)
!5305 = !DILocation(line: 1291, column: 14, scope: !5299)
!5306 = !DILocation(line: 1291, column: 7, scope: !5299)
!5307 = !DILocation(line: 1295, column: 1, scope: !5287)
!5308 = distinct !DISubprogram(name: "convert_for_phi_arg", scope: !1, file: !1, line: 1301, type: !5309, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5311)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!482, !482, !482, !786}
!5311 = !{!5312, !5313, !5314, !5315, !5316, !5319}
!5312 = !DILocalVariable(name: "expr", arg: 1, scope: !5308, file: !1, line: 1301, type: !482)
!5313 = !DILocalVariable(name: "res", arg: 2, scope: !5308, file: !1, line: 1301, type: !482)
!5314 = !DILocalVariable(name: "e", arg: 3, scope: !5308, file: !1, line: 1301, type: !786)
!5315 = !DILocalVariable(name: "type", scope: !5308, file: !1, line: 1303, type: !482)
!5316 = !DILocalVariable(name: "var", scope: !5317, file: !1, line: 1311, type: !482)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !1, line: 1310, column: 5)
!5318 = distinct !DILexicalBlock(scope: !5308, file: !1, line: 1308, column: 7)
!5319 = !DILocalVariable(name: "stmts", scope: !5317, file: !1, line: 1312, type: !796)
!5320 = !DILocation(line: 0, scope: !5308)
!5321 = !DILocation(line: 1303, column: 15, scope: !5308)
!5322 = !DILocation(line: 1305, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5308, file: !1, line: 1305, column: 7)
!5324 = !DILocation(line: 1305, column: 24, scope: !5323)
!5325 = !DILocation(line: 1305, column: 7, scope: !5308)
!5326 = !DILocation(line: 1306, column: 12, scope: !5323)
!5327 = !DILocation(line: 1306, column: 5, scope: !5323)
!5328 = !DILocation(line: 1308, column: 7, scope: !5318)
!5329 = !DILocation(line: 1308, column: 24, scope: !5318)
!5330 = !DILocation(line: 1309, column: 7, scope: !5318)
!5331 = !DILocation(line: 1309, column: 11, scope: !5318)
!5332 = !DILocation(line: 1308, column: 7, scope: !5308)
!5333 = !DILocation(line: 1311, column: 18, scope: !5317)
!5334 = !DILocation(line: 0, scope: !5317)
!5335 = !DILocation(line: 1312, column: 7, scope: !5317)
!5336 = !DILocation(line: 1314, column: 14, scope: !5317)
!5337 = !DILocation(line: 1315, column: 14, scope: !5317)
!5338 = !DILocation(line: 1316, column: 44, scope: !5317)
!5339 = !DILocation(line: 1316, column: 7, scope: !5317)
!5340 = !DILocation(line: 1317, column: 5, scope: !5318)
!5341 = !DILocation(line: 1317, column: 5, scope: !5317)
!5342 = !DILocation(line: 1319, column: 3, scope: !5308)
!5343 = distinct !DISubprogram(name: "single_succ_p", scope: !341, file: !341, line: 626, type: !5344, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5346)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{!468, !3668}
!5346 = !{!5347}
!5347 = !DILocalVariable(name: "bb", arg: 1, scope: !5343, file: !341, line: 626, type: !3668)
!5348 = !DILocation(line: 0, scope: !5343)
!5349 = !DILocation(line: 628, column: 10, scope: !5343)
!5350 = !DILocation(line: 628, column: 33, scope: !5343)
!5351 = !DILocation(line: 628, column: 3, scope: !5343)
!5352 = distinct !DISubprogram(name: "gimple_vop", scope: !3281, file: !3281, line: 49, type: !5353, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5357)
!5353 = !DISubroutineType(types: !5354)
!5354 = !{!482, !5355}
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 64)
!5356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!5357 = !{!5358}
!5358 = !DILocalVariable(name: "fun", arg: 1, scope: !5352, file: !3281, line: 49, type: !5355)
!5359 = !DILocation(line: 0, scope: !5352)
!5360 = !DILocation(line: 51, column: 3, scope: !5352)
!5361 = !DILocation(line: 52, column: 15, scope: !5352)
!5362 = !DILocation(line: 52, column: 26, scope: !5352)
!5363 = !DILocation(line: 52, column: 3, scope: !5352)
!5364 = distinct !DISubprogram(name: "op_iter_init_def", scope: !3281, file: !3281, line: 780, type: !5365, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5367)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{!1912, !4472, !806, !469}
!5367 = !{!5368, !5369, !5370}
!5368 = !DILocalVariable(name: "ptr", arg: 1, scope: !5364, file: !3281, line: 780, type: !4472)
!5369 = !DILocalVariable(name: "stmt", arg: 2, scope: !5364, file: !3281, line: 780, type: !806)
!5370 = !DILocalVariable(name: "flags", arg: 3, scope: !5364, file: !3281, line: 780, type: !469)
!5371 = !DILocation(line: 0, scope: !5364)
!5372 = !DILocation(line: 784, column: 3, scope: !5364)
!5373 = !DILocation(line: 785, column: 8, scope: !5364)
!5374 = !DILocation(line: 785, column: 18, scope: !5364)
!5375 = !DILocation(line: 786, column: 10, scope: !5364)
!5376 = !DILocation(line: 786, column: 3, scope: !5364)
!5377 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !3281, file: !3281, line: 434, type: !5378, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5380)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!482, !1912}
!5380 = !{!5381}
!5381 = !DILocalVariable(name: "def", arg: 1, scope: !5377, file: !3281, line: 434, type: !1912)
!5382 = !DILocation(line: 0, scope: !5377)
!5383 = !DILocation(line: 436, column: 10, scope: !5377)
!5384 = !DILocation(line: 436, column: 3, scope: !5377)
!5385 = distinct !DISubprogram(name: "op_iter_next_def", scope: !3281, file: !3281, line: 681, type: !5386, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5388)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!1912, !4472}
!5388 = !{!5389, !5390}
!5389 = !DILocalVariable(name: "ptr", arg: 1, scope: !5385, file: !3281, line: 681, type: !4472)
!5390 = !DILocalVariable(name: "def_p", scope: !5385, file: !3281, line: 683, type: !1912)
!5391 = !DILocation(line: 0, scope: !5385)
!5392 = !DILocation(line: 687, column: 12, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5385, file: !3281, line: 687, column: 7)
!5394 = !DILocation(line: 687, column: 7, scope: !5393)
!5395 = !DILocation(line: 687, column: 7, scope: !5385)
!5396 = !DILocation(line: 689, column: 15, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5393, file: !3281, line: 688, column: 5)
!5398 = !DILocation(line: 690, column: 30, scope: !5397)
!5399 = !DILocation(line: 690, column: 17, scope: !5397)
!5400 = !DILocation(line: 691, column: 7, scope: !5397)
!5401 = !DILocation(line: 693, column: 8, scope: !5385)
!5402 = !DILocation(line: 693, column: 13, scope: !5385)
!5403 = !DILocation(line: 694, column: 3, scope: !5385)
!5404 = !DILocation(line: 695, column: 1, scope: !5385)
!5405 = distinct !DISubprogram(name: "gsi_after_labels", scope: !396, file: !396, line: 4510, type: !4088, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5406)
!5406 = !{!5407, !5408}
!5407 = !DILocalVariable(name: "bb", arg: 1, scope: !5405, file: !396, line: 4510, type: !1258)
!5408 = !DILocalVariable(name: "gsi", scope: !5405, file: !396, line: 4512, type: !3091)
!5409 = !DILocation(line: 0, scope: !5405)
!5410 = !DILocation(line: 4512, column: 24, scope: !5405)
!5411 = !DILocation(line: 4512, column: 30, scope: !5405)
!5412 = !DILocation(line: 4514, column: 3, scope: !5405)
!5413 = !DILocation(line: 4514, column: 11, scope: !5405)
!5414 = !DILocation(line: 4514, column: 27, scope: !5405)
!5415 = !DILocation(line: 4514, column: 43, scope: !5405)
!5416 = !DILocation(line: 4514, column: 30, scope: !5405)
!5417 = !DILocation(line: 4514, column: 59, scope: !5405)
!5418 = !DILocation(line: 4515, column: 5, scope: !5405)
!5419 = distinct !{!5419, !5412, !5420}
!5420 = !DILocation(line: 4515, column: 19, scope: !5405)
!5421 = !DILocation(line: 4517, column: 3, scope: !5405)
!5422 = distinct !DISubprogram(name: "expand_scalar_variables_stmt", scope: !1, file: !1, line: 973, type: !5423, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5425)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !806, !1258, !1865, !1290, !3349}
!5425 = !{!5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5437, !5438, !5439, !5440}
!5426 = !DILocalVariable(name: "stmt", arg: 1, scope: !5422, file: !1, line: 973, type: !806)
!5427 = !DILocalVariable(name: "bb", arg: 2, scope: !5422, file: !1, line: 973, type: !1258)
!5428 = !DILocalVariable(name: "region", arg: 3, scope: !5422, file: !1, line: 973, type: !1865)
!5429 = !DILocalVariable(name: "map", arg: 4, scope: !5422, file: !1, line: 974, type: !1290)
!5430 = !DILocalVariable(name: "gsi", arg: 5, scope: !5422, file: !1, line: 974, type: !3349)
!5431 = !DILocalVariable(name: "iter", scope: !5422, file: !1, line: 976, type: !3691)
!5432 = !DILocalVariable(name: "use_p", scope: !5422, file: !1, line: 977, type: !1870)
!5433 = !DILocalVariable(name: "use", scope: !5434, file: !1, line: 981, type: !482)
!5434 = distinct !DILexicalBlock(scope: !5435, file: !1, line: 980, column: 5)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !1, line: 979, column: 3)
!5436 = distinct !DILexicalBlock(scope: !5422, file: !1, line: 979, column: 3)
!5437 = !DILocalVariable(name: "type", scope: !5434, file: !1, line: 982, type: !482)
!5438 = !DILocalVariable(name: "code", scope: !5434, file: !1, line: 983, type: !132)
!5439 = !DILocalVariable(name: "use_expr", scope: !5434, file: !1, line: 984, type: !482)
!5440 = !DILocalVariable(name: "var", scope: !5441, file: !1, line: 1013, type: !482)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !1, line: 1012, column: 2)
!5442 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 1011, column: 11)
!5443 = !DILocation(line: 0, scope: !5422)
!5444 = !DILocation(line: 976, column: 3, scope: !5422)
!5445 = !DILocation(line: 979, column: 3, scope: !5436)
!5446 = !DILocation(line: 0, scope: !5436)
!5447 = !DILocation(line: 979, column: 3, scope: !5435)
!5448 = !DILocation(line: 981, column: 18, scope: !5434)
!5449 = !DILocation(line: 0, scope: !5434)
!5450 = !DILocation(line: 982, column: 19, scope: !5434)
!5451 = !DILocation(line: 983, column: 29, scope: !5434)
!5452 = !DILocation(line: 986, column: 12, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 986, column: 11)
!5454 = !DILocation(line: 986, column: 11, scope: !5434)
!5455 = !DILocation(line: 990, column: 18, scope: !5434)
!5456 = !DILocation(line: 991, column: 20, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 991, column: 11)
!5458 = !DILocation(line: 991, column: 11, scope: !5434)
!5459 = !DILocation(line: 994, column: 18, scope: !5434)
!5460 = !DILocation(line: 996, column: 18, scope: !5434)
!5461 = !DILocation(line: 998, column: 20, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 998, column: 11)
!5463 = !DILocation(line: 998, column: 11, scope: !5434)
!5464 = !DILocation(line: 1001, column: 11, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5434, file: !1, line: 1001, column: 11)
!5466 = !DILocation(line: 1001, column: 11, scope: !5434)
!5467 = !DILocation(line: 1003, column: 8, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !1, line: 1003, column: 8)
!5469 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 1002, column: 2)
!5470 = !DILocation(line: 1003, column: 8, scope: !5469)
!5471 = !DILocation(line: 1004, column: 6, scope: !5468)
!5472 = !DILocation(line: 1006, column: 6, scope: !5468)
!5473 = !DILocation(line: 1011, column: 11, scope: !5442)
!5474 = !DILocation(line: 1011, column: 32, scope: !5442)
!5475 = !DILocation(line: 1011, column: 11, scope: !5434)
!5476 = !DILocation(line: 1013, column: 15, scope: !5441)
!5477 = !DILocation(line: 0, scope: !5441)
!5478 = !DILocation(line: 1015, column: 15, scope: !5441)
!5479 = !DILocation(line: 1016, column: 15, scope: !5441)
!5480 = !DILocation(line: 1018, column: 2, scope: !5441)
!5481 = !DILocation(line: 1020, column: 7, scope: !5434)
!5482 = !DILocation(line: 1021, column: 5, scope: !5435)
!5483 = distinct !{!5483, !5445, !5484}
!5484 = !DILocation(line: 1021, column: 5, scope: !5436)
!5485 = !DILocation(line: 1023, column: 3, scope: !5422)
!5486 = !DILocation(line: 1024, column: 1, scope: !5422)
!5487 = distinct !DISubprogram(name: "expand_scalar_variables_expr", scope: !1, file: !1, line: 848, type: !5488, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!482, !482, !482, !132, !482, !1258, !1865, !1290, !3349}
!5490 = !{!5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5504, !5505, !5507, !5508, !5511, !5512, !5514, !5515, !5516, !5517, !5518, !5519, !5522, !5523, !5524, !5527, !5528, !5529, !5530, !5531, !5532, !5535}
!5491 = !DILocalVariable(name: "type", arg: 1, scope: !5487, file: !1, line: 848, type: !482)
!5492 = !DILocalVariable(name: "op0", arg: 2, scope: !5487, file: !1, line: 848, type: !482)
!5493 = !DILocalVariable(name: "code", arg: 3, scope: !5487, file: !1, line: 848, type: !132)
!5494 = !DILocalVariable(name: "op1", arg: 4, scope: !5487, file: !1, line: 849, type: !482)
!5495 = !DILocalVariable(name: "bb", arg: 5, scope: !5487, file: !1, line: 849, type: !1258)
!5496 = !DILocalVariable(name: "region", arg: 6, scope: !5487, file: !1, line: 849, type: !1865)
!5497 = !DILocalVariable(name: "map", arg: 7, scope: !5487, file: !1, line: 850, type: !1290)
!5498 = !DILocalVariable(name: "gsi", arg: 8, scope: !5487, file: !1, line: 850, type: !3349)
!5499 = !DILocalVariable(name: "op", scope: !5500, file: !1, line: 865, type: !482)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !1, line: 864, column: 4)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !1, line: 861, column: 2)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !1, line: 859, column: 5)
!5503 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 858, column: 7)
!5504 = !DILocalVariable(name: "res", scope: !5500, file: !1, line: 866, type: !482)
!5505 = !DILocalVariable(name: "old_name", scope: !5506, file: !1, line: 873, type: !482)
!5506 = distinct !DILexicalBlock(scope: !5501, file: !1, line: 872, column: 4)
!5507 = !DILocalVariable(name: "expr", scope: !5506, file: !1, line: 874, type: !482)
!5508 = !DILocalVariable(name: "type", scope: !5509, file: !1, line: 880, type: !482)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !1, line: 879, column: 8)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !1, line: 877, column: 10)
!5511 = !DILocalVariable(name: "var", scope: !5509, file: !1, line: 881, type: !482)
!5512 = !DILocalVariable(name: "op00", scope: !5513, file: !1, line: 893, type: !482)
!5513 = distinct !DILexicalBlock(scope: !5501, file: !1, line: 892, column: 4)
!5514 = !DILocalVariable(name: "op01", scope: !5513, file: !1, line: 894, type: !482)
!5515 = !DILocalVariable(name: "op02", scope: !5513, file: !1, line: 895, type: !482)
!5516 = !DILocalVariable(name: "op03", scope: !5513, file: !1, line: 896, type: !482)
!5517 = !DILocalVariable(name: "base", scope: !5513, file: !1, line: 897, type: !482)
!5518 = !DILocalVariable(name: "subscript", scope: !5513, file: !1, line: 900, type: !482)
!5519 = !DILocalVariable(name: "op0_type", scope: !5520, file: !1, line: 918, type: !482)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 917, column: 5)
!5521 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 916, column: 7)
!5522 = !DILocalVariable(name: "op0_code", scope: !5520, file: !1, line: 919, type: !132)
!5523 = !DILocalVariable(name: "op0_expr", scope: !5520, file: !1, line: 920, type: !482)
!5524 = !DILocalVariable(name: "op0_type", scope: !5525, file: !1, line: 929, type: !482)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !1, line: 928, column: 5)
!5526 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 926, column: 7)
!5527 = !DILocalVariable(name: "op0_code", scope: !5525, file: !1, line: 930, type: !132)
!5528 = !DILocalVariable(name: "op0_expr", scope: !5525, file: !1, line: 931, type: !482)
!5529 = !DILocalVariable(name: "op1_type", scope: !5525, file: !1, line: 933, type: !482)
!5530 = !DILocalVariable(name: "op1_code", scope: !5525, file: !1, line: 934, type: !132)
!5531 = !DILocalVariable(name: "op1_expr", scope: !5525, file: !1, line: 935, type: !482)
!5532 = !DILocalVariable(name: "op00", scope: !5533, file: !1, line: 946, type: !482)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !1, line: 945, column: 5)
!5534 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 944, column: 7)
!5535 = !DILocalVariable(name: "e", scope: !5536, file: !1, line: 951, type: !482)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !1, line: 950, column: 2)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !1, line: 948, column: 11)
!5538 = !DILocation(line: 0, scope: !5487)
!5539 = !DILocation(line: 852, column: 7, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 852, column: 7)
!5541 = !DILocation(line: 852, column: 30, scope: !5540)
!5542 = !DILocation(line: 853, column: 7, scope: !5540)
!5543 = !DILocation(line: 853, column: 33, scope: !5540)
!5544 = !DILocation(line: 852, column: 7, scope: !5487)
!5545 = !DILocation(line: 858, column: 30, scope: !5503)
!5546 = !DILocation(line: 858, column: 7, scope: !5487)
!5547 = !DILocation(line: 860, column: 7, scope: !5502)
!5548 = !DILocation(line: 865, column: 16, scope: !5500)
!5549 = !DILocation(line: 0, scope: !5500)
!5550 = !DILocation(line: 867, column: 19, scope: !5500)
!5551 = !DILocation(line: 866, column: 17, scope: !5500)
!5552 = !DILocation(line: 868, column: 13, scope: !5500)
!5553 = !DILocation(line: 962, column: 1, scope: !5487)
!5554 = !DILocation(line: 873, column: 22, scope: !5506)
!5555 = !DILocation(line: 0, scope: !5506)
!5556 = !DILocation(line: 874, column: 18, scope: !5506)
!5557 = !DILocation(line: 877, column: 10, scope: !5510)
!5558 = !DILocation(line: 877, column: 27, scope: !5510)
!5559 = !DILocation(line: 878, column: 3, scope: !5510)
!5560 = !DILocation(line: 878, column: 6, scope: !5510)
!5561 = !DILocation(line: 877, column: 10, scope: !5506)
!5562 = !DILocation(line: 880, column: 15, scope: !5509)
!5563 = !DILocation(line: 0, scope: !5509)
!5564 = !DILocation(line: 881, column: 14, scope: !5509)
!5565 = !DILocation(line: 883, column: 10, scope: !5509)
!5566 = !DILocation(line: 884, column: 10, scope: !5509)
!5567 = !DILocation(line: 886, column: 8, scope: !5509)
!5568 = !DILocation(line: 888, column: 13, scope: !5506)
!5569 = !DILocation(line: 893, column: 18, scope: !5513)
!5570 = !DILocation(line: 0, scope: !5513)
!5571 = !DILocation(line: 894, column: 18, scope: !5513)
!5572 = !DILocation(line: 895, column: 18, scope: !5513)
!5573 = !DILocation(line: 896, column: 18, scope: !5513)
!5574 = !DILocation(line: 898, column: 9, scope: !5513)
!5575 = !DILocation(line: 898, column: 33, scope: !5513)
!5576 = !DILocation(line: 897, column: 18, scope: !5513)
!5577 = !DILocation(line: 901, column: 9, scope: !5513)
!5578 = !DILocation(line: 901, column: 33, scope: !5513)
!5579 = !DILocation(line: 900, column: 23, scope: !5513)
!5580 = !DILocation(line: 904, column: 13, scope: !5513)
!5581 = !DILocation(line: 912, column: 4, scope: !5501)
!5582 = !DILocation(line: 914, column: 5, scope: !5502)
!5583 = !DILocation(line: 916, column: 30, scope: !5521)
!5584 = !DILocation(line: 916, column: 7, scope: !5487)
!5585 = !DILocation(line: 918, column: 23, scope: !5520)
!5586 = !DILocation(line: 0, scope: !5520)
!5587 = !DILocation(line: 919, column: 33, scope: !5520)
!5588 = !DILocation(line: 920, column: 23, scope: !5520)
!5589 = !DILocation(line: 923, column: 14, scope: !5520)
!5590 = !DILocation(line: 926, column: 30, scope: !5526)
!5591 = !DILocation(line: 927, column: 7, scope: !5526)
!5592 = !DILocation(line: 927, column: 33, scope: !5526)
!5593 = !DILocation(line: 926, column: 7, scope: !5487)
!5594 = !DILocation(line: 929, column: 23, scope: !5525)
!5595 = !DILocation(line: 0, scope: !5525)
!5596 = !DILocation(line: 930, column: 33, scope: !5525)
!5597 = !DILocation(line: 931, column: 23, scope: !5525)
!5598 = !DILocation(line: 933, column: 23, scope: !5525)
!5599 = !DILocation(line: 934, column: 33, scope: !5525)
!5600 = !DILocation(line: 935, column: 23, scope: !5525)
!5601 = !DILocation(line: 938, column: 14, scope: !5525)
!5602 = !DILocation(line: 941, column: 7, scope: !5487)
!5603 = !DILocation(line: 942, column: 12, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 941, column: 7)
!5605 = !DILocation(line: 942, column: 5, scope: !5604)
!5606 = !DILocation(line: 946, column: 19, scope: !5533)
!5607 = !DILocation(line: 0, scope: !5533)
!5608 = !DILocation(line: 948, column: 11, scope: !5537)
!5609 = !DILocation(line: 949, column: 4, scope: !5537)
!5610 = !DILocation(line: 949, column: 7, scope: !5537)
!5611 = !DILocation(line: 949, column: 24, scope: !5537)
!5612 = !DILocation(line: 948, column: 11, scope: !5533)
!5613 = !DILocation(line: 951, column: 43, scope: !5536)
!5614 = !DILocation(line: 952, column: 8, scope: !5536)
!5615 = !DILocation(line: 951, column: 13, scope: !5536)
!5616 = !DILocation(line: 0, scope: !5536)
!5617 = !DILocation(line: 954, column: 11, scope: !5536)
!5618 = !DILocation(line: 960, column: 3, scope: !5487)
!5619 = !DILocation(line: 961, column: 3, scope: !5487)
!5620 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !396, file: !396, line: 3257, type: !4461, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5621)
!5621 = !{!5622}
!5622 = !DILocalVariable(name: "s", arg: 1, scope: !5620, file: !396, line: 3257, type: !3206)
!5623 = !DILocation(line: 0, scope: !5620)
!5624 = !DILocation(line: 3259, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5620, file: !396, line: 3259, column: 7)
!5626 = !DILocation(line: 3259, column: 7, scope: !5620)
!5627 = !DILocation(line: 3260, column: 22, scope: !5625)
!5628 = !DILocation(line: 3260, column: 30, scope: !5625)
!5629 = !DILocation(line: 3260, column: 12, scope: !5625)
!5630 = !DILocation(line: 3260, column: 5, scope: !5625)
!5631 = !DILocation(line: 3263, column: 1, scope: !5620)
!5632 = distinct !DISubprogram(name: "expand_scalar_variables_ssa_name", scope: !1, file: !1, line: 782, type: !5633, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!482, !482, !482, !1258, !1865, !1290, !3349}
!5635 = !{!5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5649, !5650, !5651}
!5636 = !DILocalVariable(name: "type", arg: 1, scope: !5632, file: !1, line: 782, type: !482)
!5637 = !DILocalVariable(name: "op0", arg: 2, scope: !5632, file: !1, line: 782, type: !482)
!5638 = !DILocalVariable(name: "bb", arg: 3, scope: !5632, file: !1, line: 782, type: !1258)
!5639 = !DILocalVariable(name: "region", arg: 4, scope: !5632, file: !1, line: 783, type: !1865)
!5640 = !DILocalVariable(name: "map", arg: 5, scope: !5632, file: !1, line: 783, type: !1290)
!5641 = !DILocalVariable(name: "gsi", arg: 6, scope: !5632, file: !1, line: 784, type: !3349)
!5642 = !DILocalVariable(name: "def_stmt", scope: !5632, file: !1, line: 786, type: !806)
!5643 = !DILocalVariable(name: "new_op", scope: !5632, file: !1, line: 787, type: !482)
!5644 = !DILocalVariable(name: "var0", scope: !5645, file: !1, line: 820, type: !482)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !1, line: 819, column: 4)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !1, line: 817, column: 2)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 811, column: 5)
!5648 = distinct !DILexicalBlock(scope: !5632, file: !1, line: 802, column: 7)
!5649 = !DILocalVariable(name: "subcode", scope: !5645, file: !1, line: 821, type: !132)
!5650 = !DILocalVariable(name: "var1", scope: !5645, file: !1, line: 822, type: !482)
!5651 = !DILocalVariable(name: "type", scope: !5645, file: !1, line: 823, type: !482)
!5652 = !DILocation(line: 0, scope: !5632)
!5653 = !DILocation(line: 789, column: 7, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5632, file: !1, line: 789, column: 7)
!5655 = !DILocation(line: 790, column: 7, scope: !5654)
!5656 = !DILocation(line: 790, column: 10, scope: !5654)
!5657 = !DILocation(line: 789, column: 7, scope: !5632)
!5658 = !DILocation(line: 791, column: 12, scope: !5654)
!5659 = !DILocation(line: 791, column: 5, scope: !5654)
!5660 = !DILocation(line: 793, column: 14, scope: !5632)
!5661 = !DILocation(line: 796, column: 12, scope: !5632)
!5662 = !DILocation(line: 798, column: 14, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5632, file: !1, line: 798, column: 7)
!5664 = !DILocation(line: 799, column: 7, scope: !5663)
!5665 = !DILocation(line: 799, column: 21, scope: !5663)
!5666 = !DILocation(line: 799, column: 10, scope: !5663)
!5667 = !DILocation(line: 799, column: 49, scope: !5663)
!5668 = !DILocation(line: 798, column: 7, scope: !5632)
!5669 = !DILocation(line: 800, column: 12, scope: !5663)
!5670 = !DILocation(line: 800, column: 5, scope: !5663)
!5671 = !DILocation(line: 802, column: 7, scope: !5648)
!5672 = !DILocation(line: 802, column: 28, scope: !5648)
!5673 = !DILocation(line: 802, column: 7, scope: !5632)
!5674 = !DILocation(line: 807, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 803, column: 5)
!5676 = !DILocation(line: 808, column: 14, scope: !5675)
!5677 = !DILocation(line: 808, column: 7, scope: !5675)
!5678 = !DILocation(line: 812, column: 12, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5647, file: !1, line: 812, column: 11)
!5680 = !DILocation(line: 813, column: 4, scope: !5679)
!5681 = !DILocation(line: 813, column: 22, scope: !5679)
!5682 = !DILocation(line: 813, column: 8, scope: !5679)
!5683 = !DILocation(line: 812, column: 11, scope: !5647)
!5684 = !DILocation(line: 814, column: 9, scope: !5679)
!5685 = !DILocation(line: 814, column: 2, scope: !5679)
!5686 = !DILocation(line: 816, column: 15, scope: !5647)
!5687 = !DILocation(line: 816, column: 7, scope: !5647)
!5688 = !DILocation(line: 820, column: 18, scope: !5645)
!5689 = !DILocation(line: 0, scope: !5645)
!5690 = !DILocation(line: 821, column: 31, scope: !5645)
!5691 = !DILocation(line: 822, column: 18, scope: !5645)
!5692 = !DILocation(line: 823, column: 18, scope: !5645)
!5693 = !DILocation(line: 825, column: 13, scope: !5645)
!5694 = !DILocation(line: 830, column: 11, scope: !5646)
!5695 = !DILocation(line: 830, column: 4, scope: !5646)
!5696 = !DILocation(line: 833, column: 4, scope: !5646)
!5697 = !DILocation(line: 834, column: 4, scope: !5646)
!5698 = !DILocation(line: 837, column: 1, scope: !5632)
!5699 = distinct !DISubprogram(name: "handled_component_p", scope: !133, file: !133, line: 4551, type: !5700, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5705)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!468, !5702}
!5702 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !483, line: 59, baseType: !5703)
!5703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5704, size: 64)
!5704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!5705 = !{!5706}
!5706 = !DILocalVariable(name: "t", arg: 1, scope: !5699, file: !133, line: 4551, type: !5702)
!5707 = !DILocation(line: 0, scope: !5699)
!5708 = !DILocation(line: 4553, column: 11, scope: !5699)
!5709 = !DILocation(line: 4553, column: 3, scope: !5699)
!5710 = !DILocation(line: 4565, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5699, file: !133, line: 4554, column: 5)
!5712 = !DILocation(line: 0, scope: !5711)
!5713 = !DILocation(line: 4567, column: 1, scope: !5699)
!5714 = distinct !DISubprogram(name: "is_parameter", scope: !1, file: !1, line: 711, type: !5715, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!468, !1865, !482}
!5717 = !{!5718, !5719, !5720, !5721}
!5718 = !DILocalVariable(name: "region", arg: 1, scope: !5714, file: !1, line: 711, type: !1865)
!5719 = !DILocalVariable(name: "name", arg: 2, scope: !5714, file: !1, line: 711, type: !482)
!5720 = !DILocalVariable(name: "i", scope: !5714, file: !1, line: 713, type: !469)
!5721 = !DILocalVariable(name: "p", scope: !5714, file: !1, line: 714, type: !482)
!5722 = !DILocation(line: 0, scope: !5714)
!5723 = !DILocation(line: 714, column: 3, scope: !5714)
!5724 = !DILocation(line: 0, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 716, column: 3)
!5726 = distinct !DILexicalBlock(scope: !5714, file: !1, line: 716, column: 3)
!5727 = !DILocation(line: 716, column: 8, scope: !5726)
!5728 = !DILocation(line: 0, scope: !5726)
!5729 = !DILocation(line: 716, column: 15, scope: !5725)
!5730 = !DILocation(line: 716, column: 3, scope: !5726)
!5731 = !DILocation(line: 717, column: 9, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !1, line: 717, column: 9)
!5733 = !DILocation(line: 717, column: 11, scope: !5732)
!5734 = !DILocation(line: 717, column: 9, scope: !5725)
!5735 = !DILocation(line: 716, column: 64, scope: !5725)
!5736 = !DILocation(line: 716, column: 3, scope: !5725)
!5737 = distinct !{!5737, !5730, !5738}
!5738 = !DILocation(line: 718, column: 14, scope: !5726)
!5739 = !DILocation(line: 721, column: 1, scope: !5714)
!5740 = distinct !DISubprogram(name: "is_iv", scope: !1, file: !1, line: 726, type: !5741, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5743)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!468, !482}
!5743 = !{!5744}
!5744 = !DILocalVariable(name: "name", arg: 1, scope: !5740, file: !1, line: 726, type: !482)
!5745 = !DILocation(line: 0, scope: !5740)
!5746 = !DILocation(line: 728, column: 23, scope: !5740)
!5747 = !DILocation(line: 728, column: 10, scope: !5740)
!5748 = !DILocation(line: 728, column: 49, scope: !5740)
!5749 = !DILocation(line: 728, column: 3, scope: !5740)
!5750 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !396, file: !396, line: 1727, type: !3204, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5751)
!5751 = !{!5752}
!5752 = !DILocalVariable(name: "gs", arg: 1, scope: !5750, file: !396, line: 1727, type: !3206)
!5753 = !DILocation(line: 0, scope: !5750)
!5754 = !DILocation(line: 1730, column: 10, scope: !5750)
!5755 = !DILocation(line: 1730, column: 3, scope: !5750)
!5756 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !396, file: !396, line: 1815, type: !5757, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5759)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!132, !3206}
!5759 = !{!5760, !5761}
!5760 = !DILocalVariable(name: "gs", arg: 1, scope: !5756, file: !396, line: 1815, type: !3206)
!5761 = !DILocalVariable(name: "code", scope: !5756, file: !396, line: 1817, type: !132)
!5762 = !DILocation(line: 0, scope: !5756)
!5763 = !DILocation(line: 1820, column: 10, scope: !5756)
!5764 = !DILocation(line: 1821, column: 7, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5756, file: !396, line: 1821, column: 7)
!5766 = !DILocation(line: 1821, column: 35, scope: !5765)
!5767 = !DILocation(line: 1821, column: 7, scope: !5756)
!5768 = !DILocation(line: 1822, column: 12, scope: !5765)
!5769 = !DILocation(line: 1822, column: 5, scope: !5765)
!5770 = !DILocation(line: 1824, column: 3, scope: !5756)
!5771 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !396, file: !396, line: 1759, type: !3204, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5772)
!5772 = !{!5773}
!5773 = !DILocalVariable(name: "gs", arg: 1, scope: !5771, file: !396, line: 1759, type: !3206)
!5774 = !DILocation(line: 0, scope: !5771)
!5775 = !DILocation(line: 1763, column: 7, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5771, file: !396, line: 1763, column: 7)
!5777 = !DILocation(line: 1763, column: 27, scope: !5776)
!5778 = !DILocation(line: 1763, column: 7, scope: !5771)
!5779 = !DILocation(line: 1764, column: 12, scope: !5776)
!5780 = !DILocation(line: 1764, column: 5, scope: !5776)
!5781 = !DILocation(line: 0, scope: !5776)
!5782 = !DILocation(line: 1767, column: 1, scope: !5771)
!5783 = distinct !DISubprogram(name: "gimple_expr_type", scope: !396, file: !396, line: 4366, type: !3204, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5784)
!5784 = !{!5785, !5786, !5787}
!5785 = !DILocalVariable(name: "stmt", arg: 1, scope: !5783, file: !396, line: 4366, type: !3206)
!5786 = !DILocalVariable(name: "code", scope: !5783, file: !396, line: 4368, type: !422)
!5787 = !DILocalVariable(name: "type", scope: !5788, file: !396, line: 4372, type: !482)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !396, line: 4371, column: 5)
!5789 = distinct !DILexicalBlock(scope: !5783, file: !396, line: 4370, column: 7)
!5790 = !DILocation(line: 0, scope: !5783)
!5791 = !DILocation(line: 4368, column: 27, scope: !5783)
!5792 = !DILocation(line: 4370, column: 29, scope: !5789)
!5793 = !DILocation(line: 4378, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5788, file: !396, line: 4377, column: 11)
!5795 = !DILocation(line: 0, scope: !5788)
!5796 = !DILocation(line: 4378, column: 2, scope: !5794)
!5797 = !DILocation(line: 4380, column: 10, scope: !5794)
!5798 = !DILocation(line: 4380, column: 2, scope: !5794)
!5799 = !DILocation(line: 4383, column: 13, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5794, file: !396, line: 4381, column: 4)
!5801 = !DILocation(line: 4384, column: 6, scope: !5800)
!5802 = !DILocation(line: 4388, column: 13, scope: !5800)
!5803 = !DILocation(line: 4389, column: 6, scope: !5800)
!5804 = !DILocation(line: 4394, column: 12, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5789, file: !396, line: 4393, column: 12)
!5806 = !DILocation(line: 4394, column: 5, scope: !5805)
!5807 = !DILocation(line: 4396, column: 12, scope: !5805)
!5808 = !DILocation(line: 4396, column: 5, scope: !5805)
!5809 = !DILocation(line: 0, scope: !5789)
!5810 = !DILocation(line: 4397, column: 1, scope: !5783)
!5811 = distinct !DISubprogram(name: "expand_scalar_variables_call", scope: !1, file: !1, line: 738, type: !5812, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5814)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{!482, !806, !1258, !1865, !1290, !3349}
!5814 = !{!5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5833}
!5815 = !DILocalVariable(name: "stmt", arg: 1, scope: !5811, file: !1, line: 738, type: !806)
!5816 = !DILocalVariable(name: "bb", arg: 2, scope: !5811, file: !1, line: 738, type: !1258)
!5817 = !DILocalVariable(name: "region", arg: 3, scope: !5811, file: !1, line: 738, type: !1865)
!5818 = !DILocalVariable(name: "map", arg: 4, scope: !5811, file: !1, line: 739, type: !1290)
!5819 = !DILocalVariable(name: "gsi", arg: 5, scope: !5811, file: !1, line: 739, type: !3349)
!5820 = !DILocalVariable(name: "i", scope: !5811, file: !1, line: 741, type: !469)
!5821 = !DILocalVariable(name: "nargs", scope: !5811, file: !1, line: 741, type: !469)
!5822 = !DILocalVariable(name: "args", scope: !5811, file: !1, line: 742, type: !1353)
!5823 = !DILocalVariable(name: "fn_type", scope: !5811, file: !1, line: 743, type: !482)
!5824 = !DILocalVariable(name: "fn", scope: !5811, file: !1, line: 744, type: !482)
!5825 = !DILocalVariable(name: "call_expr", scope: !5811, file: !1, line: 745, type: !482)
!5826 = !DILocalVariable(name: "var", scope: !5811, file: !1, line: 745, type: !482)
!5827 = !DILocalVariable(name: "lhs", scope: !5811, file: !1, line: 745, type: !482)
!5828 = !DILocalVariable(name: "call", scope: !5811, file: !1, line: 746, type: !806)
!5829 = !DILocalVariable(name: "arg", scope: !5830, file: !1, line: 750, type: !482)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !1, line: 749, column: 5)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !1, line: 748, column: 3)
!5832 = distinct !DILexicalBlock(scope: !5811, file: !1, line: 748, column: 3)
!5833 = !DILocalVariable(name: "t", scope: !5830, file: !1, line: 751, type: !482)
!5834 = !DILocation(line: 0, scope: !5811)
!5835 = !DILocation(line: 741, column: 18, scope: !5811)
!5836 = !DILocation(line: 742, column: 26, scope: !5811)
!5837 = !DILocation(line: 743, column: 18, scope: !5811)
!5838 = !DILocation(line: 744, column: 13, scope: !5811)
!5839 = !DILocation(line: 0, scope: !5830)
!5840 = !DILocation(line: 748, column: 8, scope: !5832)
!5841 = !DILocation(line: 0, scope: !5832)
!5842 = !DILocation(line: 748, column: 17, scope: !5831)
!5843 = !DILocation(line: 748, column: 3, scope: !5832)
!5844 = !DILocation(line: 750, column: 18, scope: !5830)
!5845 = !DILocation(line: 751, column: 16, scope: !5830)
!5846 = !DILocation(line: 753, column: 13, scope: !5830)
!5847 = !DILocation(line: 754, column: 51, scope: !5830)
!5848 = !DILocation(line: 754, column: 13, scope: !5830)
!5849 = !DILocation(line: 756, column: 13, scope: !5830)
!5850 = !DILocation(line: 757, column: 13, scope: !5830)
!5851 = !DILocation(line: 759, column: 7, scope: !5830)
!5852 = !DILocation(line: 748, column: 27, scope: !5831)
!5853 = !DILocation(line: 748, column: 3, scope: !5831)
!5854 = distinct !{!5854, !5843, !5855}
!5855 = !DILocation(line: 760, column: 5, scope: !5832)
!5856 = !DILocation(line: 762, column: 9, scope: !5811)
!5857 = !DILocation(line: 763, column: 25, scope: !5811)
!5858 = !DILocation(line: 763, column: 9, scope: !5811)
!5859 = !DILocation(line: 764, column: 15, scope: !5811)
!5860 = !DILocation(line: 765, column: 10, scope: !5811)
!5861 = !DILocation(line: 766, column: 9, scope: !5811)
!5862 = !DILocation(line: 767, column: 3, scope: !5811)
!5863 = !DILocation(line: 768, column: 3, scope: !5811)
!5864 = !DILocation(line: 770, column: 3, scope: !5811)
!5865 = distinct !DISubprogram(name: "gimple_op", scope: !396, file: !396, line: 1631, type: !5866, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5868)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!482, !3206, !5}
!5868 = !{!5869, !5870}
!5869 = !DILocalVariable(name: "gs", arg: 1, scope: !5865, file: !396, line: 1631, type: !3206)
!5870 = !DILocalVariable(name: "i", arg: 2, scope: !5865, file: !396, line: 1631, type: !5)
!5871 = !DILocation(line: 0, scope: !5865)
!5872 = !DILocation(line: 1633, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5865, file: !396, line: 1633, column: 7)
!5874 = !DILocation(line: 1633, column: 7, scope: !5865)
!5875 = !DILocation(line: 1638, column: 14, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !396, line: 1634, column: 5)
!5877 = !DILocation(line: 1638, column: 7, scope: !5876)
!5878 = !DILocation(line: 0, scope: !5873)
!5879 = !DILocation(line: 1642, column: 1, scope: !5865)
!5880 = distinct !DISubprogram(name: "gimple_expr_code", scope: !396, file: !396, line: 1438, type: !5757, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5881)
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "stmt", arg: 1, scope: !5880, file: !396, line: 1438, type: !3206)
!5883 = !DILocalVariable(name: "code", scope: !5880, file: !396, line: 1440, type: !422)
!5884 = !DILocation(line: 0, scope: !5880)
!5885 = !DILocation(line: 1440, column: 27, scope: !5880)
!5886 = !DILocation(line: 1441, column: 29, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5880, file: !396, line: 1441, column: 7)
!5888 = !DILocation(line: 1442, column: 42, scope: !5887)
!5889 = !DILocation(line: 1442, column: 5, scope: !5887)
!5890 = !DILocation(line: 1446, column: 5, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 1443, column: 12)
!5892 = !DILocation(line: 1448, column: 5, scope: !5880)
!5893 = !DILocation(line: 1450, column: 1, scope: !5880)
!5894 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !396, file: !396, line: 1686, type: !5895, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{!460, !132}
!5897 = !{!5898}
!5898 = !DILocalVariable(name: "code", arg: 1, scope: !5894, file: !396, line: 1686, type: !132)
!5899 = !DILocation(line: 0, scope: !5894)
!5900 = !DILocation(line: 1688, column: 34, scope: !5894)
!5901 = !DILocation(line: 1688, column: 10, scope: !5894)
!5902 = !DILocation(line: 1688, column: 3, scope: !5894)
!5903 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !396, file: !396, line: 1966, type: !3204, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5904)
!5904 = !{!5905, !5906, !5907}
!5905 = !DILocalVariable(name: "gs", arg: 1, scope: !5903, file: !396, line: 1966, type: !3206)
!5906 = !DILocalVariable(name: "fn", scope: !5903, file: !396, line: 1968, type: !482)
!5907 = !DILocalVariable(name: "type", scope: !5903, file: !396, line: 1969, type: !482)
!5908 = !DILocation(line: 0, scope: !5903)
!5909 = !DILocation(line: 1968, column: 13, scope: !5903)
!5910 = !DILocation(line: 1969, column: 15, scope: !5903)
!5911 = !DILocation(line: 1972, column: 10, scope: !5903)
!5912 = !DILocation(line: 1976, column: 10, scope: !5903)
!5913 = !DILocation(line: 1976, column: 3, scope: !5903)
!5914 = distinct !DISubprogram(name: "gimple_call_fn", scope: !396, file: !396, line: 1911, type: !3204, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5915)
!5915 = !{!5916}
!5916 = !DILocalVariable(name: "gs", arg: 1, scope: !5914, file: !396, line: 1911, type: !3206)
!5917 = !DILocation(line: 0, scope: !5914)
!5918 = !DILocation(line: 1914, column: 10, scope: !5914)
!5919 = !DILocation(line: 1914, column: 3, scope: !5914)
!5920 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !396, file: !396, line: 2013, type: !3273, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5921)
!5921 = !{!5922, !5923}
!5922 = !DILocalVariable(name: "gs", arg: 1, scope: !5920, file: !396, line: 2013, type: !3206)
!5923 = !DILocalVariable(name: "num_ops", scope: !5920, file: !396, line: 2015, type: !5)
!5924 = !DILocation(line: 0, scope: !5920)
!5925 = !DILocation(line: 2017, column: 13, scope: !5920)
!5926 = !DILocation(line: 2018, column: 18, scope: !5920)
!5927 = !DILocation(line: 2018, column: 3, scope: !5920)
!5928 = distinct !DISubprogram(name: "VEC_tree_gc_alloc", scope: !133, file: !133, line: 183, type: !5929, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!1353, !469}
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "alloc_", arg: 1, scope: !5928, file: !133, line: 183, type: !469)
!5933 = !DILocation(line: 0, scope: !5928)
!5934 = !DILocation(line: 183, column: 1, scope: !5928)
!5935 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !396, file: !396, line: 1954, type: !3204, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5936)
!5936 = !{!5937, !5938}
!5937 = !DILocalVariable(name: "gs", arg: 1, scope: !5935, file: !396, line: 1954, type: !3206)
!5938 = !DILocalVariable(name: "addr", scope: !5935, file: !396, line: 1956, type: !482)
!5939 = !DILocation(line: 0, scope: !5935)
!5940 = !DILocation(line: 1956, column: 15, scope: !5935)
!5941 = !DILocation(line: 1957, column: 7, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5935, file: !396, line: 1957, column: 7)
!5943 = !DILocation(line: 1957, column: 24, scope: !5942)
!5944 = !DILocation(line: 1957, column: 7, scope: !5935)
!5945 = !DILocation(line: 1958, column: 12, scope: !5942)
!5946 = !DILocation(line: 1958, column: 5, scope: !5942)
!5947 = !DILocation(line: 1960, column: 1, scope: !5935)
!5948 = distinct !DISubprogram(name: "gimple_call_arg", scope: !396, file: !396, line: 2025, type: !5866, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5949)
!5949 = !{!5950, !5951}
!5950 = !DILocalVariable(name: "gs", arg: 1, scope: !5948, file: !396, line: 2025, type: !3206)
!5951 = !DILocalVariable(name: "index", arg: 2, scope: !5948, file: !396, line: 2025, type: !5)
!5952 = !DILocation(line: 0, scope: !5948)
!5953 = !DILocation(line: 2028, column: 31, scope: !5948)
!5954 = !DILocation(line: 2028, column: 10, scope: !5948)
!5955 = !DILocation(line: 2028, column: 3, scope: !5948)
!5956 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !133, file: !133, line: 182, type: !5957, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5959)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{!840, !3073, !482}
!5959 = !{!5960, !5961, !5962}
!5960 = !DILocalVariable(name: "vec_", arg: 1, scope: !5956, file: !133, line: 182, type: !3073)
!5961 = !DILocalVariable(name: "obj_", arg: 2, scope: !5956, file: !133, line: 182, type: !482)
!5962 = !DILocalVariable(name: "slot_", scope: !5956, file: !133, line: 182, type: !840)
!5963 = !DILocation(line: 0, scope: !5956)
!5964 = !DILocation(line: 182, column: 1, scope: !5956)
!5965 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !396, file: !396, line: 1878, type: !3204, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5966)
!5966 = !{!5967}
!5967 = !DILocalVariable(name: "gs", arg: 1, scope: !5965, file: !396, line: 1878, type: !3206)
!5968 = !DILocation(line: 0, scope: !5965)
!5969 = !DILocation(line: 1881, column: 10, scope: !5965)
!5970 = !DILocation(line: 1881, column: 3, scope: !5965)
!5971 = distinct !DISubprogram(name: "make_ssa_name", scope: !3281, file: !3281, line: 1245, type: !5972, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5974)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!482, !482, !806}
!5974 = !{!5975, !5976}
!5975 = !DILocalVariable(name: "var", arg: 1, scope: !5971, file: !3281, line: 1245, type: !482)
!5976 = !DILocalVariable(name: "stmt", arg: 2, scope: !5971, file: !3281, line: 1245, type: !806)
!5977 = !DILocation(line: 0, scope: !5971)
!5978 = !DILocation(line: 1247, column: 28, scope: !5971)
!5979 = !DILocation(line: 1247, column: 10, scope: !5971)
!5980 = !DILocation(line: 1247, column: 3, scope: !5971)
!5981 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !396, file: !396, line: 1898, type: !5982, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !5984)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{null, !806, !482}
!5984 = !{!5985, !5986}
!5985 = !DILocalVariable(name: "gs", arg: 1, scope: !5981, file: !396, line: 1898, type: !806)
!5986 = !DILocalVariable(name: "lhs", arg: 2, scope: !5981, file: !396, line: 1898, type: !482)
!5987 = !DILocation(line: 0, scope: !5981)
!5988 = !DILocation(line: 1901, column: 3, scope: !5981)
!5989 = !DILocation(line: 1902, column: 7, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5981, file: !396, line: 1902, column: 7)
!5991 = !DILocation(line: 1902, column: 11, scope: !5990)
!5992 = !DILocation(line: 1902, column: 14, scope: !5990)
!5993 = !DILocation(line: 1902, column: 30, scope: !5990)
!5994 = !DILocation(line: 1902, column: 7, scope: !5981)
!5995 = !DILocation(line: 1903, column: 5, scope: !5990)
!5996 = !DILocation(line: 1903, column: 29, scope: !5990)
!5997 = !DILocation(line: 1904, column: 1, scope: !5981)
!5998 = distinct !DISubprogram(name: "rename_variables_in_stmt", scope: !1, file: !1, line: 655, type: !5999, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6001)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{null, !806, !1290, !3349}
!6001 = !{!6002, !6003, !6004, !6005, !6006, !6007, !6011, !6012, !6013, !6014, !6015}
!6002 = !DILocalVariable(name: "stmt", arg: 1, scope: !5998, file: !1, line: 655, type: !806)
!6003 = !DILocalVariable(name: "map", arg: 2, scope: !5998, file: !1, line: 655, type: !1290)
!6004 = !DILocalVariable(name: "insert_gsi", arg: 3, scope: !5998, file: !1, line: 655, type: !3349)
!6005 = !DILocalVariable(name: "iter", scope: !5998, file: !1, line: 657, type: !3691)
!6006 = !DILocalVariable(name: "use_p", scope: !5998, file: !1, line: 658, type: !1870)
!6007 = !DILocalVariable(name: "use", scope: !6008, file: !1, line: 662, type: !482)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !1, line: 661, column: 5)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 660, column: 3)
!6010 = distinct !DILexicalBlock(scope: !5998, file: !1, line: 660, column: 3)
!6011 = !DILocalVariable(name: "expr", scope: !6008, file: !1, line: 663, type: !482)
!6012 = !DILocalVariable(name: "type_use", scope: !6008, file: !1, line: 663, type: !482)
!6013 = !DILocalVariable(name: "type_expr", scope: !6008, file: !1, line: 663, type: !482)
!6014 = !DILocalVariable(name: "stmts", scope: !6008, file: !1, line: 664, type: !796)
!6015 = !DILocalVariable(name: "var", scope: !6016, file: !1, line: 680, type: !482)
!6016 = distinct !DILexicalBlock(scope: !6017, file: !1, line: 679, column: 2)
!6017 = distinct !DILexicalBlock(scope: !6008, file: !1, line: 676, column: 11)
!6018 = !DILocation(line: 0, scope: !5998)
!6019 = !DILocation(line: 657, column: 3, scope: !5998)
!6020 = !DILocation(line: 660, column: 3, scope: !6010)
!6021 = !DILocation(line: 0, scope: !6008)
!6022 = !DILocation(line: 0, scope: !6010)
!6023 = !DILocation(line: 660, column: 3, scope: !6009)
!6024 = !DILocation(line: 662, column: 18, scope: !6008)
!6025 = !DILocation(line: 664, column: 7, scope: !6008)
!6026 = !DILocation(line: 666, column: 11, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6008, file: !1, line: 666, column: 11)
!6028 = !DILocation(line: 666, column: 27, scope: !6027)
!6029 = !DILocation(line: 666, column: 11, scope: !6008)
!6030 = !DILocation(line: 669, column: 14, scope: !6008)
!6031 = !DILocation(line: 670, column: 15, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6008, file: !1, line: 670, column: 11)
!6033 = !DILocation(line: 670, column: 11, scope: !6008)
!6034 = !DILocation(line: 673, column: 18, scope: !6008)
!6035 = !DILocation(line: 674, column: 19, scope: !6008)
!6036 = !DILocation(line: 676, column: 20, scope: !6017)
!6037 = !DILocation(line: 677, column: 4, scope: !6017)
!6038 = !DILocation(line: 677, column: 8, scope: !6017)
!6039 = !DILocation(line: 677, column: 25, scope: !6017)
!6040 = !DILocation(line: 678, column: 8, scope: !6017)
!6041 = !DILocation(line: 678, column: 11, scope: !6017)
!6042 = !DILocation(line: 676, column: 11, scope: !6008)
!6043 = !DILocation(line: 682, column: 8, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6016, file: !1, line: 682, column: 8)
!6045 = !DILocation(line: 682, column: 8, scope: !6016)
!6046 = !DILocation(line: 684, column: 12, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !1, line: 684, column: 12)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !1, line: 683, column: 6)
!6049 = !DILocation(line: 684, column: 12, scope: !6048)
!6050 = !DILocation(line: 685, column: 3, scope: !6047)
!6051 = !DILocation(line: 687, column: 3, scope: !6047)
!6052 = !DILocation(line: 692, column: 10, scope: !6016)
!6053 = !DILocation(line: 0, scope: !6016)
!6054 = !DILocation(line: 694, column: 8, scope: !6016)
!6055 = !DILocation(line: 695, column: 13, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6016, file: !1, line: 694, column: 8)
!6057 = !DILocation(line: 695, column: 6, scope: !6056)
!6058 = !DILocation(line: 697, column: 11, scope: !6016)
!6059 = !DILocation(line: 698, column: 11, scope: !6016)
!6060 = !DILocation(line: 699, column: 39, scope: !6016)
!6061 = !DILocation(line: 699, column: 4, scope: !6016)
!6062 = !DILocation(line: 700, column: 2, scope: !6017)
!6063 = !DILocation(line: 669, column: 12, scope: !6008)
!6064 = !DILocation(line: 702, column: 7, scope: !6008)
!6065 = !DILocation(line: 703, column: 5, scope: !6009)
!6066 = distinct !{!6066, !6020, !6067}
!6067 = !DILocation(line: 703, column: 5, scope: !6010)
!6068 = !DILocation(line: 705, column: 3, scope: !5998)
!6069 = !DILocation(line: 706, column: 1, scope: !5998)
!6070 = distinct !DISubprogram(name: "if_region_entry", scope: !479, file: !479, line: 236, type: !6071, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6073)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!786, !3874}
!6073 = !{!6074}
!6074 = !DILocalVariable(name: "if_region", arg: 1, scope: !6070, file: !479, line: 236, type: !3874)
!6075 = !DILocation(line: 0, scope: !6070)
!6076 = !DILocation(line: 238, column: 10, scope: !6070)
!6077 = !DILocation(line: 238, column: 3, scope: !6070)
!6078 = distinct !DISubprogram(name: "single_pred_p", scope: !341, file: !341, line: 634, type: !5344, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6079)
!6079 = !{!6080}
!6080 = !DILocalVariable(name: "bb", arg: 1, scope: !6078, file: !341, line: 634, type: !3668)
!6081 = !DILocation(line: 0, scope: !6078)
!6082 = !DILocation(line: 636, column: 10, scope: !6078)
!6083 = !DILocation(line: 636, column: 33, scope: !6078)
!6084 = !DILocation(line: 636, column: 3, scope: !6078)
!6085 = distinct !DISubprogram(name: "gimple_seq_last", scope: !396, file: !396, line: 178, type: !4544, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6086)
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "s", arg: 1, scope: !6085, file: !396, line: 178, type: !4546)
!6088 = !DILocation(line: 0, scope: !6085)
!6089 = !DILocation(line: 180, column: 10, scope: !6085)
!6090 = !DILocation(line: 180, column: 17, scope: !6085)
!6091 = !DILocation(line: 180, column: 3, scope: !6085)
