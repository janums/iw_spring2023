; ModuleID = 'ipa-struct-reorg.bc'
source_filename = "ipa-struct-reorg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.simple_ipa_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.VEC_structure_heap = type { %struct.VEC_structure_base }
%struct.VEC_structure_base = type { i32, i32, [1 x %struct.data_structure] }
%struct.data_structure = type { %union.tree_node*, i32, i64, %struct.field_entry*, %struct.htab*, %struct.field_cluster*, %struct.VEC_tree_heap* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.field_entry = type { i32, i64, %union.tree_node*, %union.tree_node*, %struct.htab* }
%struct.field_cluster = type { %struct.simple_bitmap_def*, %struct.field_cluster* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.lto_file_decl_data = type opaque
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.alloc_site = type { %union.gimple_statement_d*, %struct.data_structure* }
%struct.func_alloc_sites = type { %union.tree_node*, %struct.VEC_alloc_site_t_heap* }
%struct.VEC_alloc_site_t_heap = type { %struct.VEC_alloc_site_t_base }
%struct.VEC_alloc_site_t_base = type { i32, i32, [1 x %struct.alloc_site] }
%struct.access_site = type { %union.gimple_statement_d*, %struct.VEC_tree_heap* }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.field_access_site = type { %union.gimple_statement_d*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.gimple_statement_d*, %union.gimple_statement_d* }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.exclude_data = type { %union.tree_node*, %struct.data_structure* }
%struct.find_stmt_data = type { i8, %union.gimple_statement_d* }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.new_var_data = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_type_wrapper_t_heap = type { %struct.VEC_type_wrapper_t_base }
%struct.VEC_type_wrapper_t_base = type { i32, i32, [1 x %struct.type_wrapper] }
%struct.type_wrapper = type { i8, %union.tree_node* }
%struct.referenced_var_iterator = type { %struct.htab_iterator }
%struct.htab_iterator = type { %struct.htab*, i8**, i8** }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.create_acc_data = type { %struct.basic_block_def*, %struct.data_structure*, i32 }
%struct.ref_pos = type { %union.tree_node**, %union.tree_node*, %union.tree_node* }
%struct.tree_constructor = type { %struct.tree_common, %struct.VEC_constructor_elt_gc* }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@alloc_sites = dso_local local_unnamed_addr global %struct.htab* null, align 8, !dbg !0
@.str = private unnamed_addr constant [17 x i8] c"ipa_struct_reorg\00", align 1
@pass_ipa_struct_reorg = dso_local local_unnamed_addr global %struct.simple_ipa_opt_pass { %struct.opt_pass { i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), i8 ()* @struct_reorg_gate, i32 ()* @reorg_structs_drive, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 47, i32 0, i32 0, i32 0, i32 4, i32 5 } }, align 8, !dbg !2153
@new_global_vars = common dso_local local_unnamed_addr global %struct.htab* null, align 8, !dbg !2181
@new_local_vars = common dso_local local_unnamed_addr global %struct.htab* null, align 8, !dbg !2183
@structures = common dso_local global %struct.VEC_structure_heap* null, align 8, !dbg !2185
@flag_ipa_struct_reorg = external dso_local local_unnamed_addr global i32, align 4
@flag_whole_program = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@cgraph_nodes = external dso_local local_unnamed_addr global %struct.cgraph_node*, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"__builtin_offsetof\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@varpool_nodes_queue = external dso_local local_unnamed_addr global %struct.varpool_node*, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"ipa-struct-reorg.c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"The type \00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c" is initialized...Excluded.\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.7 = private unnamed_addr constant [25 x i8] c"\0AAdding data structure \22\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"\22 to data_struct_list.\00", align 1
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"\0AType \00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c" is a field in the structure \00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c". Escaping...\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"\0APointer to type \22\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"\22 is passed to local function...Excluded.\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"\0AThe type \22\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"\22 is return type of function...Excluded.\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"\0AEscaping type is \00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"\0Aescapes due to bitfield \00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"\0ARemoving data structure \22\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"\22 from data_struct_list.\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"\0AUnsupported allocation function \00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.21 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.22 = private unnamed_addr constant [14 x i8] c"\0AAdding stmt \00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c" to list of mallocs.\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"\0AThe type \00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c" has bitfield.\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c" has complicate access in statement \00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"\0AUnsafe conditional statement \00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"\0AAccess sites of struct \00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"\0AAccess site of field \00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"\0AGeneral access sites\0A\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c", \00", align 1
@compiler_params = external dso_local local_unnamed_addr global %struct.param_info*, align 8
@.str.36 = private unnamed_addr constant [16 x i8] c"\0AThe structure \00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c" is cold.\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"\0ACounter of field \22\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"\22 is %ld\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"\0ACounter of struct \22\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c"\0ANo structures to transform. Exiting...\00", align 1
@.str.42 = private unnamed_addr constant [41 x i8] c"\0ANumber of structures to transform is %d\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"_sub\00", align 1
@.str.46 = private unnamed_addr constant [66 x i8] c"\0AThe following are the new types generated by this optimization:\0A\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"\0AFor type \00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"\0Athe number of new types is %d\0A\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"\0AOrig var: \00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c" of type \00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.58 = private unnamed_addr constant [31 x i8] c"\0AFunction to do reorg is %s: \0A\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2191 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2204, metadata !DIExpression()), !dbg !2206
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2205, metadata !DIExpression()), !dbg !2206
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2207
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2208
  ret i32 %call, !dbg !2209
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2210 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2214
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2215
  ret i32 %call, !dbg !2216
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2217 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2272, metadata !DIExpression()), !dbg !2273
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2274
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2274
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2274
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2274
  %cmp = icmp uge i8* %0, %1, !dbg !2274
  %conv1 = zext i1 %cmp to i64, !dbg !2274
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2274
  %tobool = icmp eq i64 %expval, 0, !dbg !2274
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2274

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2274
  br label %cond.end, !dbg !2274

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2274
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2274
  %2 = load i8, i8* %0, align 1, !dbg !2274
  %conv3 = zext i8 %2 to i32, !dbg !2274
  br label %cond.end, !dbg !2274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2274
  ret i32 %cond, !dbg !2275
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2278, metadata !DIExpression()), !dbg !2279
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2280
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2280
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2280
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2280
  %cmp = icmp uge i8* %0, %1, !dbg !2280
  %conv1 = zext i1 %cmp to i64, !dbg !2280
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2280
  %tobool = icmp eq i64 %expval, 0, !dbg !2280
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2280

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2280
  br label %cond.end, !dbg !2280

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2280
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2280
  %2 = load i8, i8* %0, align 1, !dbg !2280
  %conv3 = zext i8 %2 to i32, !dbg !2280
  br label %cond.end, !dbg !2280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2280
  ret i32 %cond, !dbg !2281
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2282 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2283
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2283
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2283
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2283
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2283
  %cmp = icmp uge i8* %1, %2, !dbg !2283
  %conv1 = zext i1 %cmp to i64, !dbg !2283
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2283
  %tobool = icmp eq i64 %expval, 0, !dbg !2283
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2283

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2283
  br label %cond.end, !dbg !2283

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2283
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2283
  %3 = load i8, i8* %1, align 1, !dbg !2283
  %conv3 = zext i8 %3 to i32, !dbg !2283
  br label %cond.end, !dbg !2283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2283
  ret i32 %cond, !dbg !2284
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2285 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2289, metadata !DIExpression()), !dbg !2290
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2291
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2292
  ret i32 %call, !dbg !2293
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2294 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2298, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2299, metadata !DIExpression()), !dbg !2300
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2301
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2301
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2301
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2301
  %cmp = icmp uge i8* %0, %1, !dbg !2301
  %conv1 = zext i1 %cmp to i64, !dbg !2301
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2301
  %tobool = icmp eq i64 %expval, 0, !dbg !2301
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2301

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2301
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2301
  br label %cond.end, !dbg !2301

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2301
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2301
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2301
  store i8 %conv2, i8* %0, align 1, !dbg !2301
  %conv6 = and i32 %__c, 255, !dbg !2301
  br label %cond.end, !dbg !2301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2301
  ret i32 %cond, !dbg !2302
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2303 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2305, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2306, metadata !DIExpression()), !dbg !2307
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2308
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2308
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2308
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2308
  %cmp = icmp uge i8* %0, %1, !dbg !2308
  %conv1 = zext i1 %cmp to i64, !dbg !2308
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2308
  %tobool = icmp eq i64 %expval, 0, !dbg !2308
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2308

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2308
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2308
  br label %cond.end, !dbg !2308

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2308
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2308
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2308
  store i8 %conv2, i8* %0, align 1, !dbg !2308
  %conv6 = and i32 %__c, 255, !dbg !2308
  br label %cond.end, !dbg !2308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2308
  ret i32 %cond, !dbg !2309
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2310 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2312, metadata !DIExpression()), !dbg !2313
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2314
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2314
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2314
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2314
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2314
  %cmp = icmp uge i8* %1, %2, !dbg !2314
  %conv1 = zext i1 %cmp to i64, !dbg !2314
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2314
  %tobool = icmp eq i64 %expval, 0, !dbg !2314
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2314

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2314
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2314
  br label %cond.end, !dbg !2314

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2314
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2314
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2314
  store i8 %conv4, i8* %1, align 1, !dbg !2314
  %conv6 = and i32 %__c, 255, !dbg !2314
  br label %cond.end, !dbg !2314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2314
  ret i32 %cond, !dbg !2315
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2316 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2322, metadata !DIExpression()), !dbg !2325
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2323, metadata !DIExpression()), !dbg !2325
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2324, metadata !DIExpression()), !dbg !2325
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2326
  ret i64 %call, !dbg !2327
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2328 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2330, metadata !DIExpression()), !dbg !2331
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2332
  %0 = load i32, i32* %_flags, align 8, !dbg !2332
  %and = lshr i32 %0, 4, !dbg !2332
  %and.lobit = and i32 %and, 1, !dbg !2332
  ret i32 %and.lobit, !dbg !2333
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2334 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2336, metadata !DIExpression()), !dbg !2337
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2338
  %0 = load i32, i32* %_flags, align 8, !dbg !2338
  %and = lshr i32 %0, 5, !dbg !2338
  %and.lobit = and i32 %and, 1, !dbg !2338
  ret i32 %and.lobit, !dbg !2339
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2340 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2343, metadata !DIExpression()), !dbg !2344
  %__c.off = add i32 %__c, 128, !dbg !2345
  %0 = icmp ult i32 %__c.off, 384, !dbg !2345
  br i1 %0, label %cond.true, label %cond.end, !dbg !2345

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2346
  %1 = load i32*, i32** %call, align 8, !dbg !2347
  %idxprom = sext i32 %__c to i64, !dbg !2348
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2348
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2348
  br label %cond.end, !dbg !2349

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2349
  ret i32 %cond, !dbg !2350
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2351 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2353, metadata !DIExpression()), !dbg !2354
  %__c.off = add i32 %__c, 128, !dbg !2355
  %0 = icmp ult i32 %__c.off, 384, !dbg !2355
  br i1 %0, label %cond.true, label %cond.end, !dbg !2355

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2356
  %1 = load i32*, i32** %call, align 8, !dbg !2357
  %idxprom = sext i32 %__c to i64, !dbg !2358
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2358
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2358
  br label %cond.end, !dbg !2359

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2359
  ret i32 %cond, !dbg !2360
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2361 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2366, metadata !DIExpression()), !dbg !2367
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2368
  %conv = trunc i64 %call to i32, !dbg !2369
  ret i32 %conv, !dbg !2370
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2371 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2375, metadata !DIExpression()), !dbg !2376
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2377
  ret i64 %call, !dbg !2378
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2379 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2384, metadata !DIExpression()), !dbg !2385
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2386
  ret i64 %call, !dbg !2387
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2388 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2394, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2395, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2396, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2397, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2398, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 0, metadata !2399, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2400, metadata !DIExpression()), !dbg !2404
  br label %while.cond, !dbg !2405

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2406
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2400, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2399, metadata !DIExpression()), !dbg !2404
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2407
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2405

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2408
  %div = lshr i64 %add, 1, !dbg !2410
  call void @llvm.dbg.value(metadata i64 %div, metadata !2401, metadata !DIExpression()), !dbg !2404
  %mul = mul i64 %div, %__size, !dbg !2411
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2412
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2402, metadata !DIExpression()), !dbg !2404
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2413
  call void @llvm.dbg.value(metadata i32 %call, metadata !2403, metadata !DIExpression()), !dbg !2404
  %cmp1 = icmp slt i32 %call, 0, !dbg !2414
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2416

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2417
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2419

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2420
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2399, metadata !DIExpression()), !dbg !2404
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2404
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2400, metadata !DIExpression()), !dbg !2404
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2399, metadata !DIExpression()), !dbg !2404
  br label %while.cond, !dbg !2405, !llvm.loop !2421

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2404
  ret i8* %retval.0, !dbg !2423
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2424 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2430, metadata !DIExpression()), !dbg !2431
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2432
  ret double %call, !dbg !2433
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2434 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2443, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2444, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.value(metadata i32 %base, metadata !2445, metadata !DIExpression()), !dbg !2446
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2447
  ret i64 %call, !dbg !2448
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2449 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2455, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2456, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.value(metadata i32 %base, metadata !2457, metadata !DIExpression()), !dbg !2458
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2459
  ret i64 %call, !dbg !2460
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2461 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2472, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2473, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 %base, metadata !2474, metadata !DIExpression()), !dbg !2475
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2476
  ret i64 %call, !dbg !2477
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2478 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2482, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2483, metadata !DIExpression()), !dbg !2485
  call void @llvm.dbg.value(metadata i32 %base, metadata !2484, metadata !DIExpression()), !dbg !2485
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2486
  ret i64 %call, !dbg !2487
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2488 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2528, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2529, metadata !DIExpression()), !dbg !2530
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2531
  ret i32 %call, !dbg !2532
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2533 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2535, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2536, metadata !DIExpression()), !dbg !2537
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2538
  ret i32 %call, !dbg !2539
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2540 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2544, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2545, metadata !DIExpression()), !dbg !2546
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2547
  ret i32 %call, !dbg !2548
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2549 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2553, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2554, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2555, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2556, metadata !DIExpression()), !dbg !2557
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2558
  ret i32 %call, !dbg !2559
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2560 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2564, metadata !DIExpression()), !dbg !2567
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2565, metadata !DIExpression()), !dbg !2567
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2566, metadata !DIExpression()), !dbg !2567
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2566, metadata !DIExpression(DW_OP_deref)), !dbg !2567
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2568
  ret i32 %call, !dbg !2569
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2570 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2574, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2575, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2576, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2577, metadata !DIExpression()), !dbg !2578
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2577, metadata !DIExpression(DW_OP_deref)), !dbg !2578
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2579
  ret i32 %call, !dbg !2580
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2581 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2605, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2606, metadata !DIExpression()), !dbg !2607
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2608
  ret i32 %call, !dbg !2609
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2610 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2612, metadata !DIExpression()), !dbg !2614
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2613, metadata !DIExpression()), !dbg !2614
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2615
  ret i32 %call, !dbg !2616
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2617 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2621, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2622, metadata !DIExpression()), !dbg !2623
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2624
  ret i32 %call, !dbg !2625
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2626 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2630, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2631, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2632, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2633, metadata !DIExpression()), !dbg !2634
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2635
  ret i32 %call, !dbg !2636
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @struct_reorg_gate() #5 !dbg !2637 {
entry:
  %0 = load i32, i32* @flag_ipa_struct_reorg, align 4, !dbg !2638
  %tobool = icmp ne i32 %0, 0, !dbg !2638
  %1 = load i32, i32* @flag_whole_program, align 4, !dbg !2639
  %tobool1 = icmp ne i32 %1, 0, !dbg !2639
  %or.cond = and i1 %tobool, %tobool1, !dbg !2640
  br i1 %or.cond, label %land.rhs, label %land.end, !dbg !2640

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* @optimize, align 4, !dbg !2641
  %cmp = icmp sgt i32 %2, 0, !dbg !2642
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %3, !dbg !2643
}

; Function Attrs: nounwind uwtable
define internal i32 @reorg_structs_drive() #5 !dbg !2644 {
entry:
  tail call fastcc void @reorg_structs() #7, !dbg !2645
  ret i32 0, !dbg !2646
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reorg_structs() unnamed_addr #5 !dbg !2647 {
entry:
  tail call fastcc void @collect_structures() #7, !dbg !2650
  tail call fastcc void @collect_allocation_sites() #7, !dbg !2651
  tail call fastcc void @collect_data_accesses() #7, !dbg !2652
  tail call fastcc void @exclude_cold_structs() #7, !dbg !2653
  tail call fastcc void @peel_structs() #7, !dbg !2654
  tail call fastcc void @do_reorg() #7, !dbg !2655
  tail call fastcc void @free_data_structs() #7, !dbg !2656
  ret void, !dbg !2657
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_structures() unnamed_addr #5 !dbg !2658 {
entry:
  %unsuitable_types = alloca %struct.VEC_tree_heap*, align 8
  %0 = bitcast %struct.VEC_tree_heap** %unsuitable_types to i8*, !dbg !2661
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2661
  %call = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 32) #7, !dbg !2662
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %call, metadata !2660, metadata !DIExpression()), !dbg !2663
  store %struct.VEC_tree_heap* %call, %struct.VEC_tree_heap** %unsuitable_types, align 8, !dbg !2664
  %call1 = tail call fastcc %struct.VEC_structure_heap* @VEC_structure_heap_alloc(i32 32) #7, !dbg !2665
  store %struct.VEC_structure_heap* %call1, %struct.VEC_structure_heap** @structures, align 8, !dbg !2666
  %call2 = tail call fastcc zeroext i8 @program_redefines_malloc_p() #7, !dbg !2667
  %tobool = icmp eq i8 %call2, 0, !dbg !2667
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2669

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !2660, metadata !DIExpression(DW_OP_deref)), !dbg !2663
  call fastcc void @build_data_structure(%struct.VEC_tree_heap** nonnull %unsuitable_types) #7, !dbg !2670
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !2660, metadata !DIExpression(DW_OP_deref)), !dbg !2663
  call fastcc void @analyze_struct_form(%struct.VEC_tree_heap** nonnull %unsuitable_types) #7, !dbg !2671
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !2660, metadata !DIExpression(DW_OP_deref)), !dbg !2663
  call fastcc void @exclude_escaping_types(%struct.VEC_tree_heap** nonnull %unsuitable_types) #7, !dbg !2672
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !2660, metadata !DIExpression(DW_OP_deref)), !dbg !2663
  call fastcc void @exclude_types_with_bit_fields(%struct.VEC_tree_heap** nonnull %unsuitable_types) #7, !dbg !2673
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %unsuitable_types, align 8, !dbg !2674
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %1, metadata !2660, metadata !DIExpression()), !dbg !2663
  call fastcc void @remove_unsuitable_types(%struct.VEC_tree_heap* %1) #7, !dbg !2675
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !2660, metadata !DIExpression(DW_OP_deref)), !dbg !2663
  call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %unsuitable_types) #7, !dbg !2676
  br label %cleanup, !dbg !2677

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2677
  ret void, !dbg !2677
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_allocation_sites() unnamed_addr #5 !dbg !2678 {
entry:
  %call = tail call %struct.htab* @htab_create(i64 32, i32 (i8*)* nonnull @malloc_hash, i32 (i8*, i8*)* nonnull @malloc_eq, void (i8*)* null) #6, !dbg !2679
  store %struct.htab* %call, %struct.htab** @alloc_sites, align 8, !dbg !2680
  tail call fastcc void @collect_alloc_sites() #7, !dbg !2681
  ret void, !dbg !2682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_data_accesses() unnamed_addr #5 !dbg !2683 {
entry:
  br label %for.cond, !dbg !2896

for.cond:                                         ; preds = %for.inc, %entry
  %c_node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %c_node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %c_node.0.in, align 8, !dbg !2897
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %c_node.0, metadata !2685, metadata !DIExpression()), !dbg !2898
  %tobool = icmp eq %struct.cgraph_node* %c_node.0, null, !dbg !2899
  br i1 %tobool, label %for.end, label %for.body, !dbg !2899

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @cgraph_function_body_availability(%struct.cgraph_node* nonnull %c_node.0) #6, !dbg !2900
  call void @llvm.dbg.value(metadata i32 %call, metadata !2889, metadata !DIExpression()), !dbg !2901
  %call.off = add i32 %call, -3, !dbg !2902
  %switch = icmp ult i32 %call.off, 2, !dbg !2902
  br i1 %switch, label %if.then, label %for.inc, !dbg !2902

if.then:                                          ; preds = %for.body
  %0 = bitcast %struct.cgraph_node* %c_node.0 to %struct.tree_function_decl**, !dbg !2903
  %1 = load %struct.tree_function_decl*, %struct.tree_function_decl** %0, align 8, !dbg !2903
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %1, i64 0, i32 1, !dbg !2903
  %2 = load %struct.function*, %struct.function** %f, align 8, !dbg !2903
  call void @llvm.dbg.value(metadata %struct.function* %2, metadata !2893, metadata !DIExpression()), !dbg !2904
  tail call fastcc void @collect_accesses_in_func(%struct.function* %2) #7, !dbg !2905
  tail call fastcc void @exclude_alloc_and_field_accs(%struct.cgraph_node* nonnull %c_node.0) #7, !dbg !2906
  br label %for.inc, !dbg !2907

for.inc:                                          ; preds = %for.body, %if.then
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 3, !dbg !2908
  br label %for.cond, !dbg !2909, !llvm.loop !2910

for.end:                                          ; preds = %for.cond
  tail call fastcc void @check_cond_exprs() #7, !dbg !2912
  tail call fastcc void @dump_accesses() #7, !dbg !2913
  ret void, !dbg !2914
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_cold_structs() unnamed_addr #5 !dbg !2915 {
entry:
  %hottest = alloca i64, align 8
  %str = alloca %struct.data_structure*, align 8
  %0 = bitcast i64* %hottest to i8*, !dbg !2920
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2920
  call void @llvm.dbg.value(metadata i64 0, metadata !2917, metadata !DIExpression()), !dbg !2921
  store i64 0, i64* %hottest, align 8, !dbg !2922
  %1 = bitcast %struct.data_structure** %str to i8*, !dbg !2923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2923
  call void @llvm.dbg.value(metadata i32 0, metadata !2918, metadata !DIExpression()), !dbg !2921
  br label %for.cond, !dbg !2924

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2926
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2918, metadata !DIExpression()), !dbg !2921
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !2927
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !2927
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2921
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !2927
  %tobool1 = icmp eq i32 %call, 0, !dbg !2929
  br i1 %tobool1, label %while.cond.preheader, label %for.body, !dbg !2929

while.cond.preheader:                             ; preds = %for.cond
  br label %while.cond, !dbg !2930

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !2931
  call void @llvm.dbg.value(metadata %struct.data_structure* %3, metadata !2919, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.value(metadata i64* %hottest, metadata !2917, metadata !DIExpression(DW_OP_deref)), !dbg !2921
  call fastcc void @sum_counts(%struct.data_structure* %3, i64* nonnull %hottest) #7, !dbg !2932
  %inc = add i32 %i.0, 1, !dbg !2933
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2918, metadata !DIExpression()), !dbg !2921
  br label %for.cond, !dbg !2934, !llvm.loop !2935

while.cond:                                       ; preds = %while.cond.preheader, %if.end17
  %i.1 = phi i32 [ %i.2, %if.end17 ], [ 0, %while.cond.preheader ], !dbg !2937
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !2918, metadata !DIExpression()), !dbg !2921
  %4 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !2938
  %base4 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %4, i64 0, i32 0, !dbg !2938
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !2919, metadata !DIExpression(DW_OP_deref)), !dbg !2921
  %call8 = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base4, i32 %i.1, %struct.data_structure** nonnull %str) #7, !dbg !2938
  %tobool9 = icmp eq i32 %call8, 0, !dbg !2930
  br i1 %tobool9, label %while.end, label %while.body, !dbg !2930

while.body:                                       ; preds = %while.cond
  %5 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !2939
  call void @llvm.dbg.value(metadata %struct.data_structure* %5, metadata !2919, metadata !DIExpression()), !dbg !2921
  %count = getelementptr inbounds %struct.data_structure, %struct.data_structure* %5, i64 0, i32 2, !dbg !2941
  %6 = load i64, i64* %count, align 8, !dbg !2941
  %mul = mul nsw i64 %6, 100, !dbg !2942
  %7 = load i64, i64* %hottest, align 8, !dbg !2943
  call void @llvm.dbg.value(metadata i64 %7, metadata !2917, metadata !DIExpression()), !dbg !2921
  %8 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !2944
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %8, i64 0, i32 1, !dbg !2944
  %9 = load i32, i32* %value, align 8, !dbg !2944
  %conv = sext i32 %9 to i64, !dbg !2944
  %mul10 = mul nsw i64 %7, %conv, !dbg !2945
  %cmp = icmp slt i64 %mul, %mul10, !dbg !2946
  br i1 %cmp, label %if.then, label %if.else, !dbg !2947

if.then:                                          ; preds = %while.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2948
  %tobool12 = icmp eq %struct._IO_FILE* %10, null, !dbg !2948
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !2951

if.then13:                                        ; preds = %if.then
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !2952
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2954
  %12 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !2955
  call void @llvm.dbg.value(metadata %struct.data_structure* %12, metadata !2919, metadata !DIExpression()), !dbg !2921
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %12, i64 0, i32 0, !dbg !2956
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2956
  call void @print_generic_expr(%struct._IO_FILE* %11, %union.tree_node* %13, i32 0) #6, !dbg !2957
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2958
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !2959
  br label %if.end, !dbg !2960

if.end:                                           ; preds = %if.then, %if.then13
  call fastcc void @remove_structure(i32 %i.1) #7, !dbg !2961
  br label %if.end17, !dbg !2962

if.else:                                          ; preds = %while.body
  %inc16 = add i32 %i.1, 1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %inc16, metadata !2918, metadata !DIExpression()), !dbg !2921
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  %i.2 = phi i32 [ %i.1, %if.end ], [ %inc16, %if.else ], !dbg !2921
  call void @llvm.dbg.value(metadata i32 %i.2, metadata !2918, metadata !DIExpression()), !dbg !2921
  br label %while.cond, !dbg !2930, !llvm.loop !2964

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !2966
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2966
  ret void, !dbg !2966
}

; Function Attrs: nounwind uwtable
define internal fastcc void @peel_structs() unnamed_addr #5 !dbg !2967 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !2971
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2971
  call void @llvm.dbg.value(metadata i32 0, metadata !2970, metadata !DIExpression()), !dbg !2972
  br label %for.cond, !dbg !2973

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !2975
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2970, metadata !DIExpression()), !dbg !2972
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !2976
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !2976
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !2969, metadata !DIExpression(DW_OP_deref)), !dbg !2972
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !2976
  %tobool1 = icmp eq i32 %call, 0, !dbg !2978
  br i1 %tobool1, label %for.end, label %for.body, !dbg !2978

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !2979
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !2969, metadata !DIExpression()), !dbg !2972
  call fastcc void @peel_hot_fields(%struct.data_structure* %2) #7, !dbg !2980
  %inc = add i32 %i.0, 1, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2970, metadata !DIExpression()), !dbg !2972
  br label %for.cond, !dbg !2982, !llvm.loop !2983

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2985
  ret void, !dbg !2985
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_reorg() unnamed_addr #5 !dbg !2986 {
entry:
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !2987
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %0, i64 0, i32 0, !dbg !2987
  %call = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !2987
  %tobool1 = icmp eq i32 %call, 0, !dbg !2987
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2989
  %tobool5 = icmp ne %struct._IO_FILE* %1, null, !dbg !2989
  br i1 %tobool1, label %if.then, label %if.else, !dbg !2990

if.then:                                          ; preds = %entry
  br i1 %tobool5, label %if.then3, label %return, !dbg !2991

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !2993
  br label %return, !dbg !2993

if.else:                                          ; preds = %entry
  br i1 %tobool5, label %if.then6, label %if.end16, !dbg !2995

if.then6:                                         ; preds = %if.else
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !2997
  %base9 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !2997
  %call13 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base9) #7, !dbg !2997
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i64 0, i64 0), i32 %call13) #6, !dbg !3000
  br label %if.end16, !dbg !3001

if.end16:                                         ; preds = %if.else, %if.then6
  tail call fastcc void @create_new_types() #7, !dbg !3002
  tail call fastcc void @dump_new_types() #7, !dbg !3003
  tail call fastcc void @create_new_global_vars() #7, !dbg !3004
  %3 = load %struct.htab*, %struct.htab** @new_global_vars, align 8, !dbg !3005
  tail call fastcc void @dump_new_vars(%struct.htab* %3) #7, !dbg !3006
  tail call fastcc void @do_reorg_1() #7, !dbg !3007
  %4 = load %struct.htab*, %struct.htab** @new_global_vars, align 8, !dbg !3008
  tail call fastcc void @free_new_vars_htab(%struct.htab* %4) #7, !dbg !3009
  br label %return, !dbg !3010

return:                                           ; preds = %if.then, %if.then3, %if.end16
  ret void, !dbg !3010
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_data_structs() unnamed_addr #5 !dbg !3011 {
entry:
  tail call fastcc void @free_structures() #7, !dbg !3012
  tail call fastcc void @free_alloc_sites() #7, !dbg !3013
  ret void, !dbg !3014
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3015 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3019, metadata !DIExpression()), !dbg !3020
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 %alloc_) #6, !dbg !3021
  %0 = bitcast i8* %call to %struct.VEC_tree_heap*, !dbg !3021
  ret %struct.VEC_tree_heap* %0, !dbg !3021
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_structure_heap* @VEC_structure_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3022 {
entry:
  call void @llvm.dbg.value(metadata i32 32, metadata !3026, metadata !DIExpression()), !dbg !3027
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 32, i64 8, i64 56) #6, !dbg !3028
  %0 = bitcast i8* %call to %struct.VEC_structure_heap*, !dbg !3028
  ret %struct.VEC_structure_heap* %0, !dbg !3028
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @program_redefines_malloc_p() unnamed_addr #5 !dbg !3029 {
entry:
  br label %for.cond, !dbg !3044

for.cond:                                         ; preds = %for.inc35, %entry
  %c_node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc35 ]
  %c_node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %c_node.0.in, align 8, !dbg !3045
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %c_node.0, metadata !3031, metadata !DIExpression()), !dbg !3046
  %tobool = icmp eq %struct.cgraph_node* %c_node.0, null, !dbg !3047
  br i1 %tobool, label %cleanup37.loopexit2, label %for.body, !dbg !3047

for.body:                                         ; preds = %for.cond
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 1, !dbg !3048
  br label %for.cond1, !dbg !3049

for.cond1:                                        ; preds = %for.inc, %for.body
  %c_edge.0.in = phi %struct.cgraph_edge** [ %callees, %for.body ], [ %next_callee, %for.inc ]
  %c_edge.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %c_edge.0.in, align 8, !dbg !3050
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %c_edge.0, metadata !3033, metadata !DIExpression()), !dbg !3046
  %tobool2 = icmp eq %struct.cgraph_edge* %c_edge.0, null, !dbg !3051
  br i1 %tobool2, label %for.inc35, label %for.body3, !dbg !3051

for.body3:                                        ; preds = %for.cond1
  %callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %c_edge.0, i64 0, i32 2, !dbg !3052
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %callee, align 8, !dbg !3052
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %0, metadata !3032, metadata !DIExpression()), !dbg !3046
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %0, i64 0, i32 0, !dbg !3053
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3053
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3034, metadata !DIExpression()), !dbg !3046
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %c_edge.0, i64 0, i32 7, !dbg !3054
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !3054
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %2) #7, !dbg !3055
  %tobool4 = icmp eq i8 %call, 0, !dbg !3055
  br i1 %tobool4, label %for.inc, label %if.then, !dbg !3056

if.then:                                          ; preds = %for.body3
  %call5 = tail call i8* @get_name(%union.tree_node* %1) #6, !dbg !3057
  call void @llvm.dbg.value(metadata i8* %call5, metadata !3035, metadata !DIExpression()), !dbg !3058
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !3059
  %call7 = tail call i32 @gimple_call_flags(%union.gimple_statement_d* %3) #6, !dbg !3061
  %and = and i32 %call7, 16, !dbg !3062
  %tobool8 = icmp eq i32 %and, 0, !dbg !3062
  br i1 %tobool8, label %if.then.if.end_crit_edge, label %land.lhs.true, !dbg !3063

if.then.if.end_crit_edge:                         ; preds = %if.then
  %function_code23.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 5, !dbg !3064
  %bf.load24.pre = load i32, i32* %function_code23.phi.trans.insert, align 8, !dbg !3066
  %.pre = and i32 %bf.load24.pre, 2047, !dbg !3066
  br label %if.end, !dbg !3063

land.lhs.true:                                    ; preds = %if.then
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 5, !dbg !3067
  %bf.load = load i32, i32* %function_code, align 8, !dbg !3067
  %bf.clear = and i32 %bf.load, 2047, !dbg !3067
  %cmp = icmp eq i32 %bf.clear, 491, !dbg !3068
  br i1 %cmp, label %if.end, label %land.lhs.true9, !dbg !3069

land.lhs.true9:                                   ; preds = %land.lhs.true
  %cmp14 = icmp eq i32 %bf.clear, 422, !dbg !3070
  br i1 %cmp14, label %if.end, label %land.lhs.true15, !dbg !3071

land.lhs.true15:                                  ; preds = %land.lhs.true9
  %cmp20 = icmp eq i32 %bf.clear, 415, !dbg !3072
  br i1 %cmp20, label %if.end, label %cleanup, !dbg !3073

if.end:                                           ; preds = %if.then.if.end_crit_edge, %land.lhs.true15, %land.lhs.true9, %land.lhs.true
  %bf.clear25.pre-phi = phi i32 [ %.pre, %if.then.if.end_crit_edge ], [ %bf.clear, %land.lhs.true15 ], [ %bf.clear, %land.lhs.true9 ], [ %bf.clear, %land.lhs.true ], !dbg !3066
  %cmp26 = icmp eq i32 %bf.clear25.pre-phi, 528, !dbg !3074
  br i1 %cmp26, label %cleanup, label %lor.lhs.false, !dbg !3075

lor.lhs.false:                                    ; preds = %if.end
  %call27 = tail call i32 @strcmp(i8* %call5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3076
  %tobool28 = icmp eq i32 %call27, 0, !dbg !3076
  br i1 %tobool28, label %cleanup, label %lor.lhs.false29, !dbg !3077

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %call30 = tail call i32 @strcmp(i8* %call5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3078
  %tobool31 = icmp eq i32 %call30, 0, !dbg !3078
  %spec.select = zext i1 %tobool31 to i32, !dbg !3079
  br label %cleanup, !dbg !3079

cleanup:                                          ; preds = %land.lhs.true15, %lor.lhs.false, %lor.lhs.false29, %if.end
  %cleanup.dest.slot.0 = phi i32 [ 1, %land.lhs.true15 ], [ 1, %lor.lhs.false ], [ 1, %if.end ], [ %spec.select, %lor.lhs.false29 ]
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %for.inc, label %cleanup37.loopexit

for.inc:                                          ; preds = %for.body3, %cleanup
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %c_edge.0, i64 0, i32 6, !dbg !3080
  br label %for.cond1, !dbg !3081, !llvm.loop !3082

for.inc35:                                        ; preds = %for.cond1
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 3, !dbg !3084
  br label %for.cond, !dbg !3085, !llvm.loop !3086

cleanup37.loopexit:                               ; preds = %cleanup
  br label %cleanup37, !dbg !3088

cleanup37.loopexit2:                              ; preds = %for.cond
  br label %cleanup37, !dbg !3088

cleanup37:                                        ; preds = %cleanup37.loopexit2, %cleanup37.loopexit
  %retval.4 = phi i8 [ 1, %cleanup37.loopexit ], [ 0, %cleanup37.loopexit2 ], !dbg !3046
  ret i8 %retval.4, !dbg !3088
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_data_structure(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3089 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3094, metadata !DIExpression()), !dbg !3107
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !3108
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3108
  br label %for.cond, !dbg !3109

for.cond:                                         ; preds = %for.inc, %entry
  %current_varpool.0.in = phi %struct.varpool_node** [ @varpool_nodes_queue, %entry ], [ %next_needed, %for.inc ]
  %current_varpool.0 = load %struct.varpool_node*, %struct.varpool_node** %current_varpool.0.in, align 8, !dbg !3111
  call void @llvm.dbg.value(metadata %struct.varpool_node* %current_varpool.0, metadata !3098, metadata !DIExpression()), !dbg !3107
  %tobool = icmp eq %struct.varpool_node* %current_varpool.0, null, !dbg !3109
  br i1 %tobool, label %for.end, label %for.body, !dbg !3109

for.body:                                         ; preds = %for.cond
  %decl = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0, i64 0, i32 0, !dbg !3112
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3112
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3095, metadata !DIExpression()), !dbg !3107
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !3096, metadata !DIExpression(DW_OP_deref)), !dbg !3107
  %call = call fastcc zeroext i8 @is_candidate(%union.tree_node* %1, %union.tree_node** nonnull %type, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3115
  %tobool1 = icmp eq i8 %call, 0, !dbg !3115
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !3117

if.then:                                          ; preds = %for.body
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3118
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3096, metadata !DIExpression()), !dbg !3107
  call fastcc void @add_structure(%union.tree_node* %2) #7, !dbg !3119
  br label %for.inc, !dbg !3119

for.inc:                                          ; preds = %for.body, %if.then
  %next_needed = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0, i64 0, i32 2, !dbg !3120
  br label %for.cond, !dbg !3120, !llvm.loop !3121

for.end:                                          ; preds = %for.cond
  br label %for.cond2, !dbg !3123

for.cond2:                                        ; preds = %cleanup39, %for.end
  %c_node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %for.end ], [ %next, %cleanup39 ]
  %c_node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %c_node.0.in, align 8, !dbg !3124
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %c_node.0, metadata !3099, metadata !DIExpression()), !dbg !3107
  %tobool3 = icmp eq %struct.cgraph_node* %c_node.0, null, !dbg !3125
  br i1 %tobool3, label %for.end43, label %for.body4, !dbg !3125

for.body4:                                        ; preds = %for.cond2
  %call5 = call i32 @cgraph_function_body_availability(%struct.cgraph_node* nonnull %c_node.0) #6, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3100, metadata !DIExpression()), !dbg !3127
  %call5.off = add i32 %call5, -3, !dbg !3128
  %switch2 = icmp ult i32 %call5.off, 2, !dbg !3128
  br i1 %switch2, label %if.then7, label %if.end38, !dbg !3128

if.then7:                                         ; preds = %for.body4
  %3 = bitcast %struct.cgraph_node* %c_node.0 to %struct.tree_function_decl**, !dbg !3129
  %4 = load %struct.tree_function_decl*, %struct.tree_function_decl** %3, align 8, !dbg !3129
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %4, i64 0, i32 1, !dbg !3129
  %5 = load %struct.function*, %struct.function** %f, align 8, !dbg !3129
  call void @llvm.dbg.value(metadata %struct.function* %5, metadata !3104, metadata !DIExpression()), !dbg !3130
  %arguments = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %4, i64 0, i32 0, i32 2, !dbg !3131
  br label %for.cond10, !dbg !3133

for.cond10:                                       ; preds = %for.inc17, %if.then7
  %var.0.in = phi %union.tree_node** [ %arguments, %if.then7 ], [ %chain, %for.inc17 ]
  %var.0 = load %union.tree_node*, %union.tree_node** %var.0.in, align 8, !dbg !3134
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !3095, metadata !DIExpression()), !dbg !3107
  %tobool11 = icmp eq %union.tree_node* %var.0, null, !dbg !3135
  br i1 %tobool11, label %for.end18, label %for.body12, !dbg !3135

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !3096, metadata !DIExpression(DW_OP_deref)), !dbg !3107
  %call13 = call fastcc zeroext i8 @is_candidate(%union.tree_node* nonnull %var.0, %union.tree_node** nonnull %type, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3136
  %tobool14 = icmp eq i8 %call13, 0, !dbg !3136
  br i1 %tobool14, label %for.inc17, label %if.then15, !dbg !3139

if.then15:                                        ; preds = %for.body12
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3140
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !3096, metadata !DIExpression()), !dbg !3107
  call fastcc void @add_structure(%union.tree_node* %6) #7, !dbg !3141
  br label %for.inc17, !dbg !3141

for.inc17:                                        ; preds = %for.body12, %if.then15
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3142
  br label %for.cond10, !dbg !3143, !llvm.loop !3144

for.end18:                                        ; preds = %for.cond10
  %cmp19 = icmp eq %struct.function* %5, null, !dbg !3146
  br i1 %cmp19, label %if.then20, label %if.end26, !dbg !3148

if.then20:                                        ; preds = %for.end18
  %clone_of = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 12, !dbg !3149
  %7 = load %struct.cgraph_node*, %struct.cgraph_node** %clone_of, align 8, !dbg !3149
  %tobool21 = icmp eq %struct.cgraph_node* %7, null, !dbg !3149
  br i1 %tobool21, label %cond.true, label %land.lhs.true, !dbg !3149

land.lhs.true:                                    ; preds = %if.then20
  %decl23 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %7, i64 0, i32 0, !dbg !3149
  %8 = load %union.tree_node*, %union.tree_node** %decl23, align 8, !dbg !3149
  %decl24 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 0, !dbg !3149
  %9 = load %union.tree_node*, %union.tree_node** %decl24, align 8, !dbg !3149
  %cmp25 = icmp eq %union.tree_node* %8, %9, !dbg !3149
  br i1 %cmp25, label %cond.true, label %cleanup, !dbg !3149

cond.true:                                        ; preds = %land.lhs.true, %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 3449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3149
  br label %cleanup, !dbg !3149

if.end26:                                         ; preds = %for.end18
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 9, !dbg !3151
  br label %for.cond27, !dbg !3153

for.cond27:                                       ; preds = %for.inc34, %if.end26
  %var_list.0.in = phi %union.tree_node** [ %local_decls, %if.end26 ], [ %chain36, %for.inc34 ]
  %var_list.0 = load %union.tree_node*, %union.tree_node** %var_list.0.in, align 8, !dbg !3154
  call void @llvm.dbg.value(metadata %union.tree_node* %var_list.0, metadata !3097, metadata !DIExpression()), !dbg !3107
  %tobool28 = icmp eq %union.tree_node* %var_list.0, null, !dbg !3155
  br i1 %tobool28, label %cleanup.loopexit, label %for.body29, !dbg !3155

for.body29:                                       ; preds = %for.cond27
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3156
  %11 = load %union.tree_node*, %union.tree_node** %10, align 8, !dbg !3156
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3095, metadata !DIExpression()), !dbg !3107
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !3096, metadata !DIExpression(DW_OP_deref)), !dbg !3107
  %call30 = call fastcc zeroext i8 @is_candidate(%union.tree_node* %11, %union.tree_node** nonnull %type, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3159
  %tobool31 = icmp eq i8 %call30, 0, !dbg !3159
  br i1 %tobool31, label %for.inc34, label %if.then32, !dbg !3161

if.then32:                                        ; preds = %for.body29
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3162
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !3096, metadata !DIExpression()), !dbg !3107
  call fastcc void @add_structure(%union.tree_node* %12) #7, !dbg !3163
  br label %for.inc34, !dbg !3163

for.inc34:                                        ; preds = %for.body29, %if.then32
  %chain36 = getelementptr inbounds %union.tree_node, %union.tree_node* %var_list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3164
  br label %for.cond27, !dbg !3165, !llvm.loop !3166

cleanup.loopexit:                                 ; preds = %for.cond27
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true, %cond.true
  %cleanup.dest.slot.0 = phi i1 [ false, %land.lhs.true ], [ false, %cond.true ], [ true, %cleanup.loopexit ]
  br i1 %cleanup.dest.slot.0, label %if.end38, label %cleanup39

if.end38:                                         ; preds = %for.body4, %cleanup
  br label %cleanup39, !dbg !3168

cleanup39:                                        ; preds = %cleanup, %if.end38
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 3, !dbg !3169
  br label %for.cond2, !dbg !3170, !llvm.loop !3171

for.end43:                                        ; preds = %for.cond2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3173
  ret void, !dbg !3173
}

; Function Attrs: nounwind uwtable
define internal fastcc void @analyze_struct_form(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3174 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3176, metadata !DIExpression()), !dbg !3179
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !3180
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3180
  call void @llvm.dbg.value(metadata i32 0, metadata !3178, metadata !DIExpression()), !dbg !3179
  br label %for.cond, !dbg !3181

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3183
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3178, metadata !DIExpression()), !dbg !3179
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3184
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !3184
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !3177, metadata !DIExpression(DW_OP_deref)), !dbg !3179
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !3184
  %tobool1 = icmp eq i32 %call, 0, !dbg !3186
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3186

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !3187
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !3177, metadata !DIExpression()), !dbg !3179
  call fastcc void @check_struct_form(%struct.data_structure* %2, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3188
  %inc = add i32 %i.0, 1, !dbg !3189
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3178, metadata !DIExpression()), !dbg !3179
  br label %for.cond, !dbg !3190, !llvm.loop !3191

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3193
  ret void, !dbg !3193
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_escaping_types(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3194 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3196, metadata !DIExpression()), !dbg !3197
  tail call fastcc void @exclude_types_passed_to_local_func(%struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3198
  tail call fastcc void @exclude_returned_types(%struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3199
  tail call fastcc void @exclude_escaping_types_1(%struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3200
  ret void, !dbg !3201
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_types_with_bit_fields(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3202 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3204, metadata !DIExpression()), !dbg !3207
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !3208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3208
  call void @llvm.dbg.value(metadata i32 0, metadata !3206, metadata !DIExpression()), !dbg !3207
  br label %for.cond, !dbg !3209

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !3211
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3206, metadata !DIExpression()), !dbg !3207
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3212
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !3212
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !3205, metadata !DIExpression(DW_OP_deref)), !dbg !3207
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !3212
  %tobool1 = icmp eq i32 %call, 0, !dbg !3214
  br i1 %tobool1, label %for.end, label %for.body, !dbg !3214

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !3215
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !3205, metadata !DIExpression()), !dbg !3207
  call fastcc void @check_bitfields(%struct.data_structure* %2, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !3216
  %inc = add i32 %i.0, 1, !dbg !3217
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3206, metadata !DIExpression()), !dbg !3207
  br label %for.cond, !dbg !3218, !llvm.loop !3219

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3221
  ret void, !dbg !3221
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_unsuitable_types(%struct.VEC_tree_heap* %unsuitable_types) unnamed_addr #5 !dbg !3222 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap* %unsuitable_types, metadata !3226, metadata !DIExpression()), !dbg !3231
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !3232
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3232
  %1 = bitcast %union.tree_node** %type to i8*, !dbg !3233
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3233
  call void @llvm.dbg.value(metadata i32 0, metadata !3230, metadata !DIExpression()), !dbg !3231
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %unsuitable_types, i64 0, i32 0, !dbg !3234
  br label %for.cond, !dbg !3237

for.cond:                                         ; preds = %for.inc14, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc15, %for.inc14 ], !dbg !3238
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !3228, metadata !DIExpression(DW_OP_deref)), !dbg !3231
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %base, i32 %j.0, %union.tree_node** nonnull %type) #7, !dbg !3239
  %tobool1 = icmp eq i32 %call, 0, !dbg !3240
  br i1 %tobool1, label %for.end16, label %for.cond2.preheader, !dbg !3240

for.cond2.preheader:                              ; preds = %for.cond
  br label %for.cond2, !dbg !3241

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond2.preheader ], !dbg !3243
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3229, metadata !DIExpression()), !dbg !3231
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3244
  %base5 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !3244
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !3227, metadata !DIExpression(DW_OP_deref)), !dbg !3231
  %call9 = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base5, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !3244
  %tobool10 = icmp eq i32 %call9, 0, !dbg !3241
  br i1 %tobool10, label %for.inc14.loopexit, label %for.body11, !dbg !3241

for.body11:                                       ; preds = %for.cond2
  %3 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !3246
  call void @llvm.dbg.value(metadata %struct.data_structure* %3, metadata !3227, metadata !DIExpression()), !dbg !3231
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %3, i64 0, i32 0, !dbg !3248
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3248
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3249
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3228, metadata !DIExpression()), !dbg !3231
  %call12 = call fastcc zeroext i8 @is_equal_types(%union.tree_node* %4, %union.tree_node* %5) #7, !dbg !3250
  %tobool13 = icmp eq i8 %call12, 0, !dbg !3250
  br i1 %tobool13, label %for.inc, label %if.then, !dbg !3251

if.then:                                          ; preds = %for.body11
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body11 ], !dbg !3243
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3229, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3229, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3229, metadata !DIExpression()), !dbg !3231
  call fastcc void @remove_structure(i32 %i.0.lcssa3) #7, !dbg !3252
  br label %for.inc14, !dbg !3254

for.inc:                                          ; preds = %for.body11
  %inc = add i32 %i.0, 1, !dbg !3255
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3229, metadata !DIExpression()), !dbg !3231
  br label %for.cond2, !dbg !3256, !llvm.loop !3257

for.inc14.loopexit:                               ; preds = %for.cond2
  br label %for.inc14, !dbg !3259

for.inc14:                                        ; preds = %for.inc14.loopexit, %if.then
  %inc15 = add i32 %j.0, 1, !dbg !3259
  call void @llvm.dbg.value(metadata i32 %inc15, metadata !3230, metadata !DIExpression()), !dbg !3231
  br label %for.cond, !dbg !3260, !llvm.loop !3261

for.end16:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !3263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3263
  ret void, !dbg !3263
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** %vec_) unnamed_addr #0 !dbg !3264 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !3266, metadata !DIExpression()), !dbg !3267
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3268
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3268
  br i1 %tobool, label %if.end, label %if.then, !dbg !3270

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_tree_heap* %0 to i8*, !dbg !3270
  tail call void @free(i8* nonnull %1) #6, !dbg !3268
  br label %if.end, !dbg !3268

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3270
  ret void, !dbg !3270
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3271 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3275, metadata !DIExpression()), !dbg !3276
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !3277
  %cmp = icmp eq i32 %call, 8, !dbg !3278
  %conv1 = zext i1 %cmp to i8, !dbg !3277
  ret i8 %conv1, !dbg !3279
}

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @gimple_call_flags(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3280 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3284, metadata !DIExpression()), !dbg !3285
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3286
  %bf.load = load i32, i32* %0, align 8, !dbg !3286
  %bf.clear = and i32 %bf.load, 255, !dbg !3286
  ret i32 %bf.clear, !dbg !3287
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_candidate(%union.tree_node* %var, %union.tree_node** %type_p, %struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3288 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3292, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata %union.tree_node** %type_p, metadata !3293, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3294, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.value(metadata i8 0, metadata !3296, metadata !DIExpression()), !dbg !3297
  store %union.tree_node* null, %union.tree_node** %type_p, align 8, !dbg !3298
  %tobool = icmp eq %union.tree_node* %var, null, !dbg !3299
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3301

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3302
  %bf.load = load i64, i64* %0, align 8, !dbg !3302
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3304
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3304
  br i1 %cmp, label %land.lhs.true, label %if.end3, !dbg !3305

land.lhs.true:                                    ; preds = %if.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3306
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3306
  %cmp1 = icmp ne %union.tree_node* %1, null, !dbg !3307
  %phitmp = zext i1 %cmp1 to i32, !dbg !3308
  br label %if.end3, !dbg !3308

if.end3:                                          ; preds = %land.lhs.true, %if.end
  %initialized.0 = phi i32 [ 0, %if.end ], [ %phitmp, %land.lhs.true ]
  %call = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* nonnull %var) #7, !dbg !3309
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3295, metadata !DIExpression()), !dbg !3297
  %tobool4 = icmp eq %union.tree_node* %call, null, !dbg !3310
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !3312

if.then5:                                         ; preds = %if.end3
  %call6 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* nonnull %call) #7, !dbg !3313
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3313
  %3 = load %union.tree_node*, %union.tree_node** %2, align 8, !dbg !3313
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3295, metadata !DIExpression()), !dbg !3297
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3315
  %bf.load9 = load i64, i64* %4, align 8, !dbg !3315
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !3317
  %cmp12 = icmp eq i64 %bf.cast112, 16, !dbg !3317
  br i1 %cmp12, label %if.else, label %cleanup, !dbg !3318

if.else:                                          ; preds = %if.then5
  %tobool14 = icmp ne i32 %initialized.0, 0, !dbg !3319
  %tobool16 = icmp ne %struct.VEC_tree_heap** %unsuitable_types, null, !dbg !3322
  %or.cond = and i1 %tobool14, %tobool16, !dbg !3323
  br i1 %or.cond, label %land.lhs.true17, label %if.end25, !dbg !3323

land.lhs.true17:                                  ; preds = %if.else
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %unsuitable_types, align 8, !dbg !3324
  %tobool18 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !3324
  br i1 %tobool18, label %if.end25, label %if.then19, !dbg !3325

if.then19:                                        ; preds = %land.lhs.true17
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3326
  %tobool20 = icmp eq %struct._IO_FILE* %6, null, !dbg !3326
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !3329

if.then21:                                        ; preds = %if.then19
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !3330
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3332
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %3, i32 0) #6, !dbg !3333
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3334
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3335
  br label %if.end24, !dbg !3336

if.end24:                                         ; preds = %if.then19, %if.then21
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** nonnull %unsuitable_types, %union.tree_node* %3) #7, !dbg !3337
  br label %if.end25, !dbg !3338

if.end25:                                         ; preds = %land.lhs.true17, %if.end24, %if.else
  store %union.tree_node* %3, %union.tree_node** %type_p, align 8, !dbg !3339
  br label %cleanup, !dbg !3340

cleanup:                                          ; preds = %if.then5, %if.end3, %entry, %if.end25
  %retval.0 = phi i8 [ 1, %if.end25 ], [ 0, %entry ], [ 0, %if.then5 ], [ 0, %if.end3 ], !dbg !3297
  ret i8 %retval.0, !dbg !3341
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_structure(%union.tree_node* %type) unnamed_addr #5 !dbg !3342 {
entry:
  %node = alloca %struct.data_structure, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3346, metadata !DIExpression()), !dbg !3350
  %0 = bitcast %struct.data_structure* %node to i8*, !dbg !3351
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3351
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3352
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3352
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3346, metadata !DIExpression()), !dbg !3350
  %call = tail call fastcc i32 @find_structure(%union.tree_node* %2) #7, !dbg !3353
  call void @llvm.dbg.value(metadata i32 %call, metadata !3348, metadata !DIExpression()), !dbg !3350
  %3 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3354
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %3, i64 0, i32 0, !dbg !3354
  %call2 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !3354
  %cmp = icmp eq i32 %call, %call2, !dbg !3356
  br i1 %cmp, label %if.end, label %cleanup, !dbg !3357

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @fields_length(%union.tree_node* %2) #6, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %call3, metadata !3349, metadata !DIExpression()), !dbg !3350
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 0, !dbg !3359
  store %union.tree_node* %2, %union.tree_node** %decl, align 8, !dbg !3360
  %num_fields4 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 1, !dbg !3361
  store i32 %call3, i32* %num_fields4, align 8, !dbg !3362
  %call5 = tail call fastcc %struct.field_entry* @get_fields(%union.tree_node* %2, i32 %call3) #7, !dbg !3363
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 3, !dbg !3364
  store %struct.field_entry* %call5, %struct.field_entry** %fields, align 8, !dbg !3365
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 5, !dbg !3366
  store %struct.field_cluster* null, %struct.field_cluster** %struct_clustering, align 8, !dbg !3367
  %call6 = tail call %struct.htab* @htab_create(i64 32, i32 (i8*)* nonnull @acc_hash, i32 (i8*, i8*)* nonnull @acc_eq, void (i8*)* null) #6, !dbg !3368
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 4, !dbg !3369
  store %struct.htab* %call6, %struct.htab** %accs, align 8, !dbg !3370
  %call7 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %call3) #7, !dbg !3371
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 6, !dbg !3372
  store %struct.VEC_tree_heap* %call7, %struct.VEC_tree_heap** %new_types, align 8, !dbg !3373
  %count = getelementptr inbounds %struct.data_structure, %struct.data_structure* %node, i64 0, i32 2, !dbg !3374
  store i64 0, i64* %count, align 8, !dbg !3375
  call void @llvm.dbg.value(metadata %struct.data_structure* %node, metadata !3347, metadata !DIExpression(DW_OP_deref)), !dbg !3350
  %call8 = call fastcc %struct.data_structure* @VEC_structure_heap_safe_push(%struct.VEC_structure_heap** nonnull @structures, %struct.data_structure* nonnull %node) #7, !dbg !3376
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3377
  %tobool9 = icmp eq %struct._IO_FILE* %4, null, !dbg !3377
  br i1 %tobool9, label %cleanup, label %if.then10, !dbg !3379

if.then10:                                        ; preds = %if.end
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #6, !dbg !3380
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3382
  call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %2, i32 0) #6, !dbg !3383
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3384
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0)) #6, !dbg !3385
  br label %cleanup, !dbg !3386

cleanup:                                          ; preds = %if.end, %entry, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !3387
  ret void, !dbg !3387
}

declare dso_local i32 @cgraph_function_body_availability(%struct.cgraph_node*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %var) unnamed_addr #0 !dbg !3388 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3392, metadata !DIExpression()), !dbg !3393
  %tobool = icmp eq %union.tree_node* %var, null, !dbg !3394
  br i1 %tobool, label %return, label %if.end, !dbg !3396

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3397
  %bf.load = load i64, i64* %0, align 8, !dbg !3397
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3399
  %cmp = icmp eq i64 %bf.cast1, 34, !dbg !3399
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3400

if.then1:                                         ; preds = %if.end
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !3401
  %1 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !3401
  br label %return, !dbg !3402

if.else:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3403
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3403
  br label %return, !dbg !3404

return:                                           ; preds = %entry, %if.else, %if.then1
  %retval.0 = phi %union.tree_node* [ %1, %if.then1 ], [ %2, %if.else ], [ null, %entry ], !dbg !3393
  ret %union.tree_node* %retval.0, !dbg !3405
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @strip_type(%union.tree_node* %type) unnamed_addr #0 !dbg !3406 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3408, metadata !DIExpression()), !dbg !3409
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3410
  %bf.load = load i64, i64* %0, align 8, !dbg !3410
  %bf.cast = and i64 %bf.load, 65535, !dbg !3410
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !3410
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3410
  %cmp = icmp eq i32 %1, 2, !dbg !3410
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3410

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3410
  br label %cond.end, !dbg !3410

cond.end:                                         ; preds = %entry, %cond.true
  br label %while.cond, !dbg !3411

while.cond:                                       ; preds = %while.body, %cond.end
  %type.addr.0 = phi %union.tree_node* [ %type, %cond.end ], [ %3, %while.body ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !3408, metadata !DIExpression()), !dbg !3409
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3412
  %bf.load2 = load i64, i64* %2, align 8, !dbg !3412
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !3412
  %cmp5 = icmp eq i64 %bf.cast42, 10, !dbg !3412
  br i1 %cmp5, label %while.body, label %lor.lhs.false, !dbg !3412

lor.lhs.false:                                    ; preds = %while.cond
  %cmp10 = icmp eq i64 %bf.cast42, 12, !dbg !3412
  %cmp15 = icmp eq i64 %bf.cast42, 15, !dbg !3413
  %or.cond = or i1 %cmp10, %cmp15, !dbg !3414
  br i1 %or.cond, label %while.body, label %while.end, !dbg !3414

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3415
  %3 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !3415
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3408, metadata !DIExpression()), !dbg !3409
  br label %while.cond, !dbg !3411, !llvm.loop !3416

while.end:                                        ; preds = %lor.lhs.false
  %type.addr.0.lcssa = phi %union.tree_node* [ %type.addr.0, %lor.lhs.false ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3408, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3408, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0.lcssa, metadata !3408, metadata !DIExpression()), !dbg !3409
  ret %union.tree_node* %type.addr.0.lcssa, !dbg !3417
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %type) unnamed_addr #5 !dbg !3418 {
entry:
  %t = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3422, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3423, metadata !DIExpression()), !dbg !3426
  %0 = bitcast %union.tree_node** %t to i8*, !dbg !3427
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3427
  %tobool = icmp eq %union.tree_node* %type, null, !dbg !3428
  br i1 %tobool, label %cleanup, label %if.end, !dbg !3430

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3431
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3431
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3423, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 0, metadata !3424, metadata !DIExpression()), !dbg !3426
  br label %for.cond, !dbg !3432

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !3434
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3424, metadata !DIExpression()), !dbg !3426
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %unsuitable_types, align 8, !dbg !3435
  %tobool2 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !3435
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !3435

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !3435
  br label %cond.end, !dbg !3435

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !3435
  call void @llvm.dbg.value(metadata %union.tree_node** %t, metadata !3425, metadata !DIExpression(DW_OP_deref)), !dbg !3426
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %t) #7, !dbg !3435
  %tobool3 = icmp eq i32 %call, 0, !dbg !3437
  br i1 %tobool3, label %for.end, label %for.body, !dbg !3437

for.body:                                         ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** %t, align 8, !dbg !3438
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3425, metadata !DIExpression()), !dbg !3426
  %call4 = call fastcc zeroext i8 @is_equal_types(%union.tree_node* %4, %union.tree_node* %2) #7, !dbg !3440
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3440
  br i1 %tobool5, label %for.inc, label %for.end, !dbg !3441

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3424, metadata !DIExpression()), !dbg !3426
  br label %for.cond, !dbg !3443, !llvm.loop !3444

for.end:                                          ; preds = %for.body, %cond.end
  %i.0.lcssa = phi i32 [ %i.0, %for.body ], [ %i.0, %cond.end ], !dbg !3434
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !3424, metadata !DIExpression()), !dbg !3426
  %5 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %unsuitable_types, align 8, !dbg !3446
  %tobool8 = icmp eq %struct.VEC_tree_heap* %5, null, !dbg !3446
  br i1 %tobool8, label %cond.end12, label %cond.true9, !dbg !3446

cond.true9:                                       ; preds = %for.end
  %base10 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %5, i64 0, i32 0, !dbg !3446
  br label %cond.end12, !dbg !3446

cond.end12:                                       ; preds = %for.end, %cond.true9
  %cond13 = phi %struct.VEC_tree_base* [ %base10, %cond.true9 ], [ null, %for.end ], !dbg !3446
  %call14 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond13) #7, !dbg !3446
  %cmp = icmp eq i32 %i.0.lcssa, %call14, !dbg !3448
  br i1 %cmp, label %if.then15, label %cleanup, !dbg !3449

if.then15:                                        ; preds = %cond.end12
  %call16 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %2) #7, !dbg !3450
  br label %cleanup, !dbg !3450

cleanup:                                          ; preds = %entry, %cond.end12, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3451
  ret void, !dbg !3451
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node** %ptr) unnamed_addr #0 !dbg !3452 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3458, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3459, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.value(metadata %union.tree_node** %ptr, metadata !3460, metadata !DIExpression()), !dbg !3461
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3462
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3462

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3462
  %0 = load i32, i32* %num, align 8, !dbg !3462
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3462
  br i1 %cmp, label %if.then, label %if.else, !dbg !3464

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3465
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3465
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3465
  br label %return, !dbg !3465

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3467

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %union.tree_node* [ null, %if.else ], [ %1, %if.then ], !dbg !3469
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3469
  store %union.tree_node* %storemerge, %union.tree_node** %ptr, align 8, !dbg !3469
  ret i32 %retval.0, !dbg !3464
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_equal_types(%union.tree_node* %type1, %union.tree_node* %type2) unnamed_addr #5 !dbg !3470 {
entry:
  br label %tailrecurse, !dbg !3489

tailrecurse:                                      ; preds = %sw.bb, %entry
  %type1.tr = phi %union.tree_node* [ %type1, %entry ], [ %9, %sw.bb ]
  %type2.tr = phi %union.tree_node* [ %type2, %entry ], [ %10, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr, metadata !3475, metadata !DIExpression()), !dbg !3491
  %tobool = icmp eq %union.tree_node* %type1.tr, null, !dbg !3492
  %tobool1 = icmp ne %union.tree_node* %type2.tr, null, !dbg !3494
  %or.cond = and i1 %tobool, %tobool1, !dbg !3495
  br i1 %or.cond, label %cleanup164.loopexit13, label %lor.lhs.false, !dbg !3495

lor.lhs.false:                                    ; preds = %tailrecurse
  %tobool2 = icmp eq %union.tree_node* %type2.tr, null, !dbg !3496
  %tobool4 = icmp ne %union.tree_node* %type1.tr, null, !dbg !3497
  %or.cond1 = and i1 %tobool2, %tobool4, !dbg !3498
  br i1 %or.cond1, label %cleanup164.loopexit13, label %if.end, !dbg !3498

if.end:                                           ; preds = %lor.lhs.false
  %or.cond2 = or i1 %tobool4, %tobool1, !dbg !3499
  br i1 %or.cond2, label %if.end9, label %cleanup164.loopexit13, !dbg !3499

if.end9:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3501
  %bf.load = load i64, i64* %0, align 8, !dbg !3501
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3503
  %bf.load11 = load i64, i64* %1, align 8, !dbg !3503
  %2 = xor i64 %bf.load, %bf.load11, !dbg !3504
  %3 = and i64 %2, 65535, !dbg !3504
  %cmp = icmp eq i64 %3, 0, !dbg !3504
  br i1 %cmp, label %if.end15, label %cleanup164.loopexit13, !dbg !3505

if.end15:                                         ; preds = %if.end9
  %cmp16 = icmp eq %union.tree_node* %type1.tr, %type2.tr, !dbg !3506
  br i1 %cmp16, label %cleanup164.loopexit13, label %if.end18, !dbg !3508

if.end18:                                         ; preds = %if.end15
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3509
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3509
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3511
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3511
  %cmp21 = icmp eq %union.tree_node* %5, %7, !dbg !3512
  br i1 %cmp21, label %cleanup164.loopexit13, label %if.end23, !dbg !3513

if.end23:                                         ; preds = %if.end18
  %call = tail call fastcc i8* @get_type_name(%union.tree_node* %type1.tr) #7, !dbg !3514
  call void @llvm.dbg.value(metadata i8* %call, metadata !3476, metadata !DIExpression()), !dbg !3491
  %call24 = tail call fastcc i8* @get_type_name(%union.tree_node* %type2.tr) #7, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %call24, metadata !3477, metadata !DIExpression()), !dbg !3491
  %tobool25 = icmp ne i8* %call, null, !dbg !3516
  %tobool27 = icmp ne i8* %call24, null, !dbg !3518
  %or.cond3 = and i1 %tobool25, %tobool27, !dbg !3519
  br i1 %or.cond3, label %if.then28, label %if.end32, !dbg !3519

if.then28:                                        ; preds = %if.end23
  %call.lcssa = phi i8* [ %call, %if.end23 ], !dbg !3514
  %call24.lcssa = phi i8* [ %call24, %if.end23 ], !dbg !3515
  %call29 = tail call i32 @strcmp(i8* nonnull %call.lcssa, i8* nonnull %call24.lcssa) #6, !dbg !3520
  %cmp30 = icmp eq i32 %call29, 0, !dbg !3521
  %conv31 = zext i1 %cmp30 to i8, !dbg !3520
  br label %cleanup164, !dbg !3522

if.end32:                                         ; preds = %if.end23
  %bf.load34 = load i64, i64* %0, align 8, !dbg !3523
  %8 = trunc i64 %bf.load34 to i16, !dbg !3523
  switch i16 %8, label %sw.default [
    i16 10, label %sw.bb
    i16 12, label %sw.bb
    i16 16, label %sw.bb41
    i16 17, label %sw.bb41
    i16 18, label %sw.bb41
    i16 6, label %sw.bb41
    i16 8, label %sw.bb59
    i16 15, label %sw.bb83
  ], !dbg !3524

sw.bb:                                            ; preds = %if.end32, %if.end32
  %type37 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3525
  %9 = load %union.tree_node*, %union.tree_node** %type37, align 8, !dbg !3525
  %type39 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3526
  %10 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !3526
  br label %tailrecurse, !dbg !3489

sw.bb41:                                          ; preds = %if.end32, %if.end32, %if.end32, %if.end32
  %type1.tr.lcssa71 = phi %union.tree_node* [ %type1.tr, %if.end32 ], [ %type1.tr, %if.end32 ], [ %type1.tr, %if.end32 ], [ %type1.tr, %if.end32 ]
  %type2.tr.lcssa66 = phi %union.tree_node* [ %type2.tr, %if.end32 ], [ %type2.tr, %if.end32 ], [ %type2.tr, %if.end32 ], [ %type2.tr, %if.end32 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa71, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa66, metadata !3475, metadata !DIExpression()), !dbg !3491
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr.lcssa71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3527
  %11 = bitcast i32* %values to %union.tree_node**, !dbg !3527
  %values44 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr.lcssa66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3529
  %12 = bitcast i32* %values44 to %union.tree_node**, !dbg !3529
  br label %for.cond, !dbg !3530

for.cond:                                         ; preds = %for.inc, %sw.bb41
  %field1.0.in = phi %union.tree_node** [ %11, %sw.bb41 ], [ %chain, %for.inc ]
  %field2.0.in = phi %union.tree_node** [ %12, %sw.bb41 ], [ %chain53, %for.inc ]
  %field2.0 = load %union.tree_node*, %union.tree_node** %field2.0.in, align 8, !dbg !3531
  %field1.0 = load %union.tree_node*, %union.tree_node** %field1.0.in, align 8, !dbg !3531
  call void @llvm.dbg.value(metadata %union.tree_node* %field2.0, metadata !3481, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %union.tree_node* %field1.0, metadata !3478, metadata !DIExpression()), !dbg !3532
  %tobool45 = icmp ne %union.tree_node* %field1.0, null, !dbg !3533
  %tobool46 = icmp ne %union.tree_node* %field2.0, null, !dbg !3535
  %spec.select = and i1 %tobool46, %tobool45, !dbg !3535
  br i1 %spec.select, label %for.body, label %for.end, !dbg !3536

for.body:                                         ; preds = %for.cond
  %call47 = tail call fastcc zeroext i8 @compare_fields(%union.tree_node* nonnull %field1.0, %union.tree_node* nonnull %field2.0) #7, !dbg !3537
  %tobool48 = icmp eq i8 %call47, 0, !dbg !3537
  br i1 %tobool48, label %cleanup164.loopexit, label %for.inc, !dbg !3540

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field1.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3541
  %chain53 = getelementptr inbounds %union.tree_node, %union.tree_node* %field2.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3542
  br label %for.cond, !dbg !3543, !llvm.loop !3544

for.end:                                          ; preds = %for.cond
  %field2.0.lcssa = phi %union.tree_node* [ %field2.0, %for.cond ], !dbg !3531
  %field1.0.lcssa = phi %union.tree_node* [ %field1.0, %for.cond ], !dbg !3531
  %tobool54 = icmp eq %union.tree_node* %field1.0.lcssa, null, !dbg !3546
  %tobool56 = icmp eq %union.tree_node* %field2.0.lcssa, null, !dbg !3548
  %not.or.cond4 = and i1 %tobool56, %tobool54, !dbg !3549
  %spec.select9 = zext i1 %not.or.cond4 to i8, !dbg !3549
  ret i8 %spec.select9, !dbg !3549

sw.bb59:                                          ; preds = %if.end32
  %bf.load34.lcssa87 = phi i64 [ %bf.load34, %if.end32 ], !dbg !3523
  %.lcssa76 = phi i64* [ %1, %if.end32 ], !dbg !3503
  %type1.tr.lcssa72 = phi %union.tree_node* [ %type1.tr, %if.end32 ]
  %type2.tr.lcssa67 = phi %union.tree_node* [ %type2.tr, %if.end32 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa72, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa67, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa72, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa67, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa72, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa67, metadata !3475, metadata !DIExpression()), !dbg !3491
  %bf.load65 = load i64, i64* %.lcssa76, align 8, !dbg !3550
  %bf.lshr12 = xor i64 %bf.load34.lcssa87, %bf.load65, !dbg !3553
  %13 = and i64 %bf.lshr12, 2097152, !dbg !3553
  %cmp69 = icmp eq i64 %13, 0, !dbg !3553
  br i1 %cmp69, label %land.lhs.true71, label %sw.epilog, !dbg !3554

land.lhs.true71:                                  ; preds = %sw.bb59
  %type72 = bitcast %union.tree_node* %type1.tr.lcssa72 to %struct.tree_type*, !dbg !3555
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type72, i64 0, i32 6, !dbg !3555
  %bf.load73 = load i32, i32* %precision, align 4, !dbg !3555
  %type75 = bitcast %union.tree_node* %type2.tr.lcssa67 to %struct.tree_type*, !dbg !3556
  %precision76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i64 0, i32 6, !dbg !3556
  %bf.load77 = load i32, i32* %precision76, align 4, !dbg !3556
  %14 = xor i32 %bf.load73, %bf.load77, !dbg !3557
  %15 = and i32 %14, 1023, !dbg !3557
  %cmp79 = icmp eq i32 %15, 0, !dbg !3557
  br i1 %cmp79, label %cleanup164, label %sw.epilog, !dbg !3558

sw.bb83:                                          ; preds = %if.end32
  %type1.tr.lcssa73 = phi %union.tree_node* [ %type1.tr, %if.end32 ]
  %type2.tr.lcssa68 = phi %union.tree_node* [ %type2.tr, %if.end32 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa73, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa68, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa73, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa68, metadata !3475, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type1.tr.lcssa73, metadata !3474, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.value(metadata %union.tree_node* %type2.tr.lcssa68, metadata !3475, metadata !DIExpression()), !dbg !3491
  %type85 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr.lcssa73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3559
  %16 = load %union.tree_node*, %union.tree_node** %type85, align 8, !dbg !3559
  %type87 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr.lcssa68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3561
  %17 = load %union.tree_node*, %union.tree_node** %type87, align 8, !dbg !3561
  %call88 = tail call fastcc zeroext i8 @is_equal_types(%union.tree_node* %16, %union.tree_node* %17) #7, !dbg !3562
  %tobool89 = icmp eq i8 %call88, 0, !dbg !3562
  br i1 %tobool89, label %cleanup158, label %if.end91, !dbg !3563

if.end91:                                         ; preds = %sw.bb83
  %values93 = getelementptr inbounds %union.tree_node, %union.tree_node* %type1.tr.lcssa73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3564
  %18 = bitcast i32* %values93 to %union.tree_node**, !dbg !3564
  %19 = load %union.tree_node*, %union.tree_node** %18, align 8, !dbg !3564
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !3482, metadata !DIExpression()), !dbg !3565
  %values95 = getelementptr inbounds %union.tree_node, %union.tree_node* %type2.tr.lcssa68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3566
  %20 = bitcast i32* %values95 to %union.tree_node**, !dbg !3566
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !3566
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !3484, metadata !DIExpression()), !dbg !3565
  %tobool96 = icmp ne %union.tree_node* %19, null, !dbg !3567
  %tobool98 = icmp ne %union.tree_node* %21, null, !dbg !3569
  %or.cond5 = and i1 %tobool96, %tobool98, !dbg !3570
  br i1 %or.cond5, label %if.end100, label %cleanup158, !dbg !3570

if.end100:                                        ; preds = %if.end91
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3571
  %22 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !3571
  %23 = load %union.tree_node*, %union.tree_node** %22, align 8, !dbg !3571
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3485, metadata !DIExpression()), !dbg !3565
  %maxval103 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3572
  %24 = bitcast %struct.rtx_def** %maxval103 to %union.tree_node**, !dbg !3572
  %25 = load %union.tree_node*, %union.tree_node** %24, align 8, !dbg !3572
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !3487, metadata !DIExpression()), !dbg !3565
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3573
  %26 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !3573
  %27 = load %union.tree_node*, %union.tree_node** %26, align 8, !dbg !3573
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3486, metadata !DIExpression()), !dbg !3565
  %minval106 = getelementptr inbounds %union.tree_node, %union.tree_node* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !3574
  %28 = bitcast %struct.lang_decl** %minval106 to %union.tree_node**, !dbg !3574
  %29 = load %union.tree_node*, %union.tree_node** %28, align 8, !dbg !3574
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !3488, metadata !DIExpression()), !dbg !3565
  %tobool107 = icmp ne %union.tree_node* %23, null, !dbg !3575
  %tobool109 = icmp ne %union.tree_node* %25, null, !dbg !3577
  %or.cond6 = and i1 %tobool107, %tobool109, !dbg !3578
  %tobool111 = icmp ne %union.tree_node* %27, null, !dbg !3579
  %or.cond7 = and i1 %or.cond6, %tobool111, !dbg !3578
  %tobool113 = icmp ne %union.tree_node* %29, null, !dbg !3580
  %or.cond8 = and i1 %or.cond7, %tobool113, !dbg !3578
  br i1 %or.cond8, label %land.lhs.true114, label %if.end157, !dbg !3578

land.lhs.true114:                                 ; preds = %if.end100
  %30 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3581
  %bf.load116 = load i64, i64* %30, align 8, !dbg !3581
  %31 = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3582
  %bf.load120 = load i64, i64* %31, align 8, !dbg !3582
  %32 = xor i64 %bf.load116, %bf.load120, !dbg !3583
  %33 = and i64 %32, 65535, !dbg !3583
  %cmp123 = icmp eq i64 %33, 0, !dbg !3583
  br i1 %cmp123, label %land.lhs.true125, label %if.end157, !dbg !3584

land.lhs.true125:                                 ; preds = %land.lhs.true114
  %bf.cast12910 = and i64 %bf.load116, 65535, !dbg !3585
  %cmp130 = icmp eq i64 %bf.cast12910, 23, !dbg !3585
  br i1 %cmp130, label %land.lhs.true132, label %if.end157, !dbg !3586

land.lhs.true132:                                 ; preds = %land.lhs.true125
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3587
  %bf.load134 = load i64, i64* %34, align 8, !dbg !3587
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3588
  %bf.load138 = load i64, i64* %35, align 8, !dbg !3588
  %36 = xor i64 %bf.load134, %bf.load138, !dbg !3589
  %37 = and i64 %36, 65535, !dbg !3589
  %cmp141 = icmp eq i64 %37, 0, !dbg !3589
  br i1 %cmp141, label %land.lhs.true143, label %if.end157, !dbg !3590

land.lhs.true143:                                 ; preds = %land.lhs.true132
  %bf.cast14711 = and i64 %bf.load134, 65535, !dbg !3591
  %cmp148 = icmp eq i64 %bf.cast14711, 23, !dbg !3591
  br i1 %cmp148, label %land.lhs.true150, label %if.end157, !dbg !3592

land.lhs.true150:                                 ; preds = %land.lhs.true143
  %call151 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %23, %union.tree_node* nonnull %25) #6, !dbg !3593
  %tobool152 = icmp eq i32 %call151, 0, !dbg !3593
  br i1 %tobool152, label %if.end157, label %land.lhs.true153, !dbg !3594

land.lhs.true153:                                 ; preds = %land.lhs.true150
  %call154 = tail call i32 @tree_int_cst_equal(%union.tree_node* nonnull %27, %union.tree_node* nonnull %29) #6, !dbg !3595
  %tobool155 = icmp eq i32 %call154, 0, !dbg !3595
  br i1 %tobool155, label %if.end157, label %cleanup158, !dbg !3596

if.end157:                                        ; preds = %land.lhs.true153, %land.lhs.true150, %land.lhs.true143, %land.lhs.true132, %land.lhs.true125, %land.lhs.true114, %if.end100
  br label %cleanup158, !dbg !3597

cleanup158:                                       ; preds = %land.lhs.true153, %sw.bb83, %if.end91, %if.end157
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end157 ], [ false, %sw.bb83 ], [ false, %if.end91 ], [ false, %land.lhs.true153 ]
  %retval.1 = phi i8 [ undef, %if.end157 ], [ 0, %sw.bb83 ], [ 0, %if.end91 ], [ 1, %land.lhs.true153 ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup164

sw.default:                                       ; preds = %if.end32
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1695, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3598
  br label %sw.epilog, !dbg !3599

sw.epilog:                                        ; preds = %cleanup158, %sw.bb59, %land.lhs.true71, %sw.default
  br label %cleanup164, !dbg !3600

cleanup164.loopexit:                              ; preds = %for.body
  br label %cleanup164, !dbg !3601

cleanup164.loopexit13:                            ; preds = %lor.lhs.false, %tailrecurse, %if.end, %if.end15, %if.end18, %if.end9
  %retval.2.ph = phi i8 [ 1, %if.end18 ], [ 1, %if.end15 ], [ 0, %if.end9 ], [ 1, %if.end ], [ 0, %tailrecurse ], [ 0, %lor.lhs.false ]
  br label %cleanup164, !dbg !3601

cleanup164:                                       ; preds = %cleanup164.loopexit13, %cleanup164.loopexit, %land.lhs.true71, %cleanup158, %sw.epilog, %if.then28
  %retval.2 = phi i8 [ %conv31, %if.then28 ], [ 0, %sw.epilog ], [ %retval.1, %cleanup158 ], [ 1, %land.lhs.true71 ], [ 0, %cleanup164.loopexit ], [ %retval.2.ph, %cleanup164.loopexit13 ], !dbg !3491
  ret i8 %retval.2, !dbg !3601
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !3602 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3606, metadata !DIExpression()), !dbg !3607
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3608
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3608

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3608
  %0 = load i32, i32* %num, align 8, !dbg !3608
  br label %cond.end, !dbg !3608

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3608
  ret i32 %cond, !dbg !3608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !3609 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !3613, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !3614, metadata !DIExpression()), !dbg !3615
  %call = tail call fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 1) #7, !dbg !3616
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3616
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3616
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3616

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !3616
  br label %cond.end, !dbg !3616

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3616
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !3616
  ret %union.tree_node** %call1, !dbg !3616
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @get_type_name(%union.tree_node* %type) unnamed_addr #5 !dbg !3617 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3621, metadata !DIExpression()), !dbg !3622
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !3623
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3623
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !3623
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3625
  br i1 %tobool, label %return, label %if.end, !dbg !3625

if.end:                                           ; preds = %entry
  %bf.load = load i64, i64* %2, align 8, !dbg !3626
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3628
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !3628
  br i1 %cmp, label %if.then4, label %if.else, !dbg !3629

if.then4:                                         ; preds = %if.end
  %id = getelementptr inbounds i64, i64* %2, i64 3, !dbg !3630
  %str = bitcast i64* %id to i8**, !dbg !3630
  %3 = load i8*, i8** %str, align 8, !dbg !3630
  br label %return, !dbg !3631

if.else:                                          ; preds = %if.end
  %cmp13 = icmp eq i64 %bf.cast1, 35, !dbg !3632
  br i1 %cmp13, label %land.lhs.true, label %return, !dbg !3634

land.lhs.true:                                    ; preds = %if.else
  %name16 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3635
  %4 = load %union.tree_node*, %union.tree_node** %name16, align 8, !dbg !3635
  %tobool17 = icmp eq %union.tree_node* %4, null, !dbg !3635
  br i1 %tobool17, label %return, label %if.then18, !dbg !3636

if.then18:                                        ; preds = %land.lhs.true
  %str25 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3637
  %5 = bitcast i32* %str25 to i8**, !dbg !3637
  %6 = load i8*, i8** %5, align 8, !dbg !3637
  br label %return, !dbg !3638

return:                                           ; preds = %land.lhs.true, %entry, %if.else, %if.then18, %if.then4
  %retval.0 = phi i8* [ %3, %if.then4 ], [ %6, %if.then18 ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.else ], !dbg !3622
  ret i8* %retval.0, !dbg !3639
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @compare_fields(%union.tree_node* %field1, %union.tree_node* %field2) unnamed_addr #5 !dbg !3640 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %field1, metadata !3642, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata %union.tree_node* %field2, metadata !3643, metadata !DIExpression()), !dbg !3648
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %field1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3649
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !3649
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !3649
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3650

land.lhs.true:                                    ; preds = %entry
  %name2 = getelementptr inbounds %union.tree_node, %union.tree_node* %field2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3651
  %1 = load %union.tree_node*, %union.tree_node** %name2, align 8, !dbg !3651
  %tobool3 = icmp eq %union.tree_node* %1, null, !dbg !3651
  br i1 %tobool3, label %if.else, label %if.then, !dbg !3652

if.then:                                          ; preds = %land.lhs.true
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3653
  %2 = bitcast i32* %str to i8**, !dbg !3653
  %3 = load i8*, i8** %2, align 8, !dbg !3653
  call void @llvm.dbg.value(metadata i8* %3, metadata !3644, metadata !DIExpression()), !dbg !3654
  %str11 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3655
  %4 = bitcast i32* %str11 to i8**, !dbg !3655
  %5 = load i8*, i8** %4, align 8, !dbg !3655
  call void @llvm.dbg.value(metadata i8* %5, metadata !3647, metadata !DIExpression()), !dbg !3654
  %tobool12 = icmp ne i8* %3, null, !dbg !3656
  %tobool14 = icmp ne i8* %5, null, !dbg !3656
  %or.cond = and i1 %tobool12, %tobool14, !dbg !3656
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !3656

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !3656
  br label %cond.end, !dbg !3656

cond.end:                                         ; preds = %if.then, %cond.true
  %call = tail call i32 @strcmp(i8* %3, i8* %5) #6, !dbg !3657
  %tobool15 = icmp eq i32 %call, 0, !dbg !3657
  br i1 %tobool15, label %if.end26, label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  br i1 %tobool, label %lor.lhs.false, label %return, !dbg !3659

lor.lhs.false:                                    ; preds = %if.else
  %name22 = getelementptr inbounds %union.tree_node, %union.tree_node* %field2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3661
  %6 = load %union.tree_node*, %union.tree_node** %name22, align 8, !dbg !3661
  %tobool23 = icmp eq %union.tree_node* %6, null, !dbg !3661
  br i1 %tobool23, label %if.end26, label %return, !dbg !3662

if.end26:                                         ; preds = %cond.end, %lor.lhs.false
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %field1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3663
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3663
  %type28 = getelementptr inbounds %union.tree_node, %union.tree_node* %field2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3665
  %8 = load %union.tree_node*, %union.tree_node** %type28, align 8, !dbg !3665
  %call29 = tail call fastcc zeroext i8 @is_equal_types(%union.tree_node* %7, %union.tree_node* %8) #7, !dbg !3666
  %tobool30 = icmp ne i8 %call29, 0, !dbg !3666
  %.1 = zext i1 %tobool30 to i8, !dbg !3648
  br label %return, !dbg !3648

return:                                           ; preds = %cond.end, %lor.lhs.false, %if.else, %if.end26
  %retval.1 = phi i8 [ 0, %cond.end ], [ 0, %lor.lhs.false ], [ 0, %if.else ], [ %.1, %if.end26 ], !dbg !3648
  ret i8 %retval.1, !dbg !3667
}

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_heap_reserve(%struct.VEC_tree_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3668 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %vec_, metadata !3672, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 1, metadata !3673, metadata !DIExpression()), !dbg !3675
  %0 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vec_, align 8, !dbg !3676
  %tobool = icmp eq %struct.VEC_tree_heap* %0, null, !dbg !3676
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3676

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %0, i64 0, i32 0, !dbg !3676
  br label %cond.end, !dbg !3676

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3676
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !3676
  %tobool1 = icmp eq i32 %call, 0, !dbg !3676
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3674, metadata !DIExpression()), !dbg !3675
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3676

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_heap** %vec_ to i8**, !dbg !3677
  %2 = load i8*, i8** %1, align 8, !dbg !3677
  %call3 = tail call i8* @vec_heap_p_reserve(i8* %2, i32 1) #6, !dbg !3677
  store i8* %call3, i8** %1, align 8, !dbg !3677
  br label %if.end, !dbg !3677

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !3679 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3684, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !3685, metadata !DIExpression()), !dbg !3687
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3688
  %0 = load i32, i32* %num1, align 8, !dbg !3688
  %inc = add i32 %0, 1, !dbg !3688
  store i32 %inc, i32* %num1, align 8, !dbg !3688
  %idxprom = zext i32 %0 to i64, !dbg !3688
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3688
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !3686, metadata !DIExpression()), !dbg !3687
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !3688
  ret %union.tree_node** %arrayidx, !dbg !3688
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3689 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !3693, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata i32 1, metadata !3694, metadata !DIExpression()), !dbg !3695
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !3696
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3696

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !3696
  %0 = load i32, i32* %alloc, align 4, !dbg !3696
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !3696
  %1 = load i32, i32* %num, align 8, !dbg !3696
  %cmp1 = icmp ne i32 %0, %1, !dbg !3696
  %phitmp = zext i1 %cmp1 to i32, !dbg !3696
  br label %cond.end, !dbg !3696

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3696

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !3696
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_structure(%union.tree_node* %type) unnamed_addr #5 !dbg !3697 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !3701, metadata !DIExpression()), !dbg !3704
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !3705
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3705
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3706
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !3706
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3701, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 0, metadata !3703, metadata !DIExpression()), !dbg !3704
  br label %for.cond, !dbg !3707

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !3709
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3703, metadata !DIExpression()), !dbg !3704
  %3 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3710
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %3, i64 0, i32 0, !dbg !3710
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !3702, metadata !DIExpression(DW_OP_deref)), !dbg !3704
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !3710
  %tobool2 = icmp eq i32 %call, 0, !dbg !3712
  br i1 %tobool2, label %for.end, label %for.body, !dbg !3712

for.body:                                         ; preds = %for.cond
  %4 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !3713
  call void @llvm.dbg.value(metadata %struct.data_structure* %4, metadata !3702, metadata !DIExpression()), !dbg !3704
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %4, i64 0, i32 0, !dbg !3715
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3715
  %call3 = call fastcc zeroext i8 @is_equal_types(%union.tree_node* %5, %union.tree_node* %2) #7, !dbg !3716
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3716
  br i1 %tobool4, label %for.inc, label %cleanup.loopexit, !dbg !3717

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3703, metadata !DIExpression()), !dbg !3704
  br label %for.cond, !dbg !3719, !llvm.loop !3720

for.end:                                          ; preds = %for.cond
  %6 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3722
  %base7 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %6, i64 0, i32 0, !dbg !3722
  %call11 = call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base7) #7, !dbg !3722
  br label %cleanup, !dbg !3723

cleanup.loopexit:                                 ; preds = %for.body
  %i.0.lcssa3 = phi i32 [ %i.0, %for.body ], !dbg !3709
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa3, metadata !3703, metadata !DIExpression()), !dbg !3704
  br label %cleanup, !dbg !3724

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %retval.0 = phi i32 [ %call11, %for.end ], [ %i.0.lcssa3, %cleanup.loopexit ], !dbg !3704
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !3724
  ret i32 %retval.0, !dbg !3724
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %vec_) unnamed_addr #0 !dbg !3725 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !3731, metadata !DIExpression()), !dbg !3732
  %tobool = icmp eq %struct.VEC_structure_base* %vec_, null, !dbg !3733
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3733

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 0, !dbg !3733
  %0 = load i32, i32* %num, align 8, !dbg !3733
  br label %cond.end, !dbg !3733

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3733
  ret i32 %cond, !dbg !3733
}

declare dso_local i32 @fields_length(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.field_entry* @get_fields(%union.tree_node* %struct_decl, i32 %num_fields) unnamed_addr #5 !dbg !3734 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %struct_decl, metadata !3738, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 %num_fields, metadata !3739, metadata !DIExpression()), !dbg !3743
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %struct_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3744
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !3744
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3744
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3741, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 0, metadata !3742, metadata !DIExpression()), !dbg !3743
  %conv = sext i32 %num_fields to i64, !dbg !3745
  %mul = mul nsw i64 %conv, 40, !dbg !3745
  %call = tail call i8* @xmalloc(i64 %mul) #6, !dbg !3745
  %2 = bitcast i8* %call to %struct.field_entry*, !dbg !3745
  call void @llvm.dbg.value(metadata %struct.field_entry* %2, metadata !3740, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 0, metadata !3742, metadata !DIExpression()), !dbg !3743
  br label %for.cond, !dbg !3746

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3743
  %t.0 = phi %union.tree_node* [ %5, %for.inc ], [ %1, %entry ], !dbg !3743
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !3741, metadata !DIExpression()), !dbg !3743
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !3748
  br i1 %tobool, label %for.end, label %for.body, !dbg !3748

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3749
  %bf.load = load i64, i64* %3, align 8, !dbg !3749
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3752
  %cmp = icmp eq i64 %bf.cast1, 31, !dbg !3752
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3753

if.then:                                          ; preds = %for.body
  %index = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 0, !dbg !3754
  %4 = trunc i64 %indvars.iv to i32, !dbg !3756
  store i32 %4, i32* %index, align 8, !dbg !3756
  %decl = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 2, !dbg !3757
  store %union.tree_node* %t.0, %union.tree_node** %decl, align 8, !dbg !3758
  %call4 = tail call %struct.htab* @htab_create(i64 32, i32 (i8*)* nonnull @field_acc_hash, i32 (i8*, i8*)* nonnull @field_acc_eq, void (i8*)* null) #6, !dbg !3759
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 4, !dbg !3760
  store %struct.htab* %call4, %struct.htab** %acc_sites, align 8, !dbg !3761
  %count = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 1, !dbg !3762
  store i64 0, i64* %count, align 8, !dbg !3763
  %field_mapping = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 3, !dbg !3764
  store %union.tree_node* null, %union.tree_node** %field_mapping, align 8, !dbg !3765
  br label %for.inc, !dbg !3766

for.inc:                                          ; preds = %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3767
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !3767
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !3741, metadata !DIExpression()), !dbg !3743
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !3768
  call void @llvm.dbg.value(metadata i32 undef, metadata !3742, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3743
  br label %for.cond, !dbg !3769, !llvm.loop !3770

for.end:                                          ; preds = %for.cond
  ret %struct.field_entry* %2, !dbg !3772
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @acc_hash(i8* %x) #5 !dbg !3773 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3775, metadata !DIExpression()), !dbg !3776
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3777
  %1 = bitcast i8* %x to i8**, !dbg !3778
  %2 = load i8*, i8** %1, align 8, !dbg !3778
  %call = tail call i32 %0(i8* %2) #6, !dbg !3777
  ret i32 %call, !dbg !3779
}

; Function Attrs: nounwind uwtable
define internal i32 @acc_eq(i8* %x, i8* %y) #5 !dbg !3780 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3782, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i8* %y, metadata !3783, metadata !DIExpression()), !dbg !3784
  %stmt = bitcast i8* %x to %union.gimple_statement_d**, !dbg !3785
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3785
  %1 = bitcast i8* %y to %union.gimple_statement_d*, !dbg !3786
  %cmp = icmp eq %union.gimple_statement_d* %0, %1, !dbg !3787
  %conv = zext i1 %cmp to i32, !dbg !3787
  ret i32 %conv, !dbg !3788
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_structure* @VEC_structure_heap_safe_push(%struct.VEC_structure_heap** %vec_, %struct.data_structure* %obj_) unnamed_addr #0 !dbg !3789 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_heap** @structures, metadata !3797, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata %struct.data_structure* %obj_, metadata !3798, metadata !DIExpression()), !dbg !3799
  %call = tail call fastcc i32 @VEC_structure_heap_reserve(%struct.VEC_structure_heap** nonnull @structures, i32 1) #7, !dbg !3800
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3800
  %tobool = icmp eq %struct.VEC_structure_heap* %0, null, !dbg !3800
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3800

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %0, i64 0, i32 0, !dbg !3800
  br label %cond.end, !dbg !3800

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_structure_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3800
  %call1 = tail call fastcc %struct.data_structure* @VEC_structure_base_quick_push(%struct.VEC_structure_base* %cond, %struct.data_structure* %obj_) #7, !dbg !3800
  ret %struct.data_structure* %call1, !dbg !3800
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %vec_, i32 %ix_, %struct.data_structure** %ptr) unnamed_addr #0 !dbg !3801 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !3807, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3808, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata %struct.data_structure** %ptr, metadata !3809, metadata !DIExpression()), !dbg !3810
  %tobool = icmp eq %struct.VEC_structure_base* %vec_, null, !dbg !3811
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !3811

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 0, !dbg !3811
  %0 = load i32, i32* %num, align 8, !dbg !3811
  %cmp = icmp ugt i32 %0, %ix_, !dbg !3811
  br i1 %cmp, label %if.then, label %if.else, !dbg !3813

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !3814
  %arrayidx = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3814
  br label %return, !dbg !3814

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !3816

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.data_structure* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !3818
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !3818
  store %struct.data_structure* %storemerge, %struct.data_structure** %ptr, align 8, !dbg !3818
  ret i32 %retval.0, !dbg !3813
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @field_acc_hash(i8* %x) #5 !dbg !3819 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3821, metadata !DIExpression()), !dbg !3822
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !3823
  %1 = bitcast i8* %x to i8**, !dbg !3824
  %2 = load i8*, i8** %1, align 8, !dbg !3824
  %call = tail call i32 %0(i8* %2) #6, !dbg !3823
  ret i32 %call, !dbg !3825
}

; Function Attrs: nounwind uwtable
define internal i32 @field_acc_eq(i8* %x, i8* %y) #5 !dbg !3826 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8* %y, metadata !3829, metadata !DIExpression()), !dbg !3830
  %stmt = bitcast i8* %x to %union.gimple_statement_d**, !dbg !3831
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3831
  %1 = bitcast i8* %y to %union.gimple_statement_d*, !dbg !3832
  %cmp = icmp eq %union.gimple_statement_d* %0, %1, !dbg !3833
  %conv = zext i1 %cmp to i32, !dbg !3833
  ret i32 %conv, !dbg !3834
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_structure_heap_reserve(%struct.VEC_structure_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3835 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_heap** @structures, metadata !3839, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 1, metadata !3840, metadata !DIExpression()), !dbg !3842
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !3843
  %tobool = icmp eq %struct.VEC_structure_heap* %0, null, !dbg !3843
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3843

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %0, i64 0, i32 0, !dbg !3843
  br label %cond.end, !dbg !3843

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_structure_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3843
  %call = tail call fastcc i32 @VEC_structure_base_space(%struct.VEC_structure_base* %cond, i32 1) #7, !dbg !3843
  %tobool1 = icmp eq i32 %call, 0, !dbg !3843
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !3841, metadata !DIExpression()), !dbg !3842
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3843

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_structure_heap** @structures to i8**), align 8, !dbg !3844
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %1, i32 1, i64 8, i64 56) #6, !dbg !3844
  store i8* %call3, i8** bitcast (%struct.VEC_structure_heap** @structures to i8**), align 8, !dbg !3844
  br label %if.end, !dbg !3844

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !3843
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_structure* @VEC_structure_base_quick_push(%struct.VEC_structure_base* %vec_, %struct.data_structure* %obj_) unnamed_addr #0 !dbg !3846 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !3850, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.value(metadata %struct.data_structure* %obj_, metadata !3851, metadata !DIExpression()), !dbg !3853
  %num1 = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 0, !dbg !3854
  %0 = load i32, i32* %num1, align 8, !dbg !3854
  %inc = add i32 %0, 1, !dbg !3854
  store i32 %inc, i32* %num1, align 8, !dbg !3854
  %idxprom = zext i32 %0 to i64, !dbg !3854
  %arrayidx = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3854
  call void @llvm.dbg.value(metadata %struct.data_structure* %arrayidx, metadata !3852, metadata !DIExpression()), !dbg !3853
  %tobool = icmp eq %struct.data_structure* %obj_, null, !dbg !3855
  br i1 %tobool, label %if.end, label %if.then, !dbg !3854

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.data_structure* %arrayidx to i8*, !dbg !3855
  %2 = bitcast %struct.data_structure* %obj_ to i8*, !dbg !3855
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 56, i1 false), !dbg !3855
  br label %if.end, !dbg !3855

if.end:                                           ; preds = %entry, %if.then
  ret %struct.data_structure* %arrayidx, !dbg !3854
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_structure_base_space(%struct.VEC_structure_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !3857 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !3861, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 1, metadata !3862, metadata !DIExpression()), !dbg !3863
  %tobool = icmp eq %struct.VEC_structure_base* %vec_, null, !dbg !3864
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3864

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 1, !dbg !3864
  %0 = load i32, i32* %alloc, align 4, !dbg !3864
  %num = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 0, !dbg !3864
  %1 = load i32, i32* %num, align 8, !dbg !3864
  %cmp1 = icmp ne i32 %0, %1, !dbg !3864
  %phitmp = zext i1 %cmp1 to i32, !dbg !3864
  br label %cond.end, !dbg !3864

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !3864
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal fastcc void @check_struct_form(%struct.data_structure* %str, %struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3865 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !3869, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3870, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 0, metadata !3871, metadata !DIExpression()), !dbg !3876
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !3877
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !3878
  %decl3 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !3879
  br label %for.cond, !dbg !3882

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !3883
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3871, metadata !DIExpression()), !dbg !3876
  %0 = load i32, i32* %num_fields, align 8, !dbg !3884
  %1 = sext i32 %0 to i64, !dbg !3885
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !3885
  br i1 %cmp, label %for.body, label %for.end, !dbg !3886

for.body:                                         ; preds = %for.cond
  %2 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !3887
  %decl = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 2, !dbg !3887
  %3 = bitcast %union.tree_node** %decl to %struct.tree_common**, !dbg !3887
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !3887
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !3887
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3887
  %call = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %5) #7, !dbg !3888
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3872, metadata !DIExpression()), !dbg !3878
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3889
  %bf.load = load i64, i64* %6, align 8, !dbg !3889
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3890
  %cmp1 = icmp eq i64 %bf.cast1, 16, !dbg !3890
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !3891

if.then:                                          ; preds = %for.body
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3892
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3892
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %8) #7, !dbg !3893
  %9 = load %union.tree_node*, %union.tree_node** %decl3, align 8, !dbg !3894
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %9) #7, !dbg !3895
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3896
  %tobool = icmp eq %struct._IO_FILE* %10, null, !dbg !3896
  br i1 %tobool, label %for.inc, label %if.then4, !dbg !3898

if.then4:                                         ; preds = %if.then
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3899
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3901
  tail call void @print_generic_expr(%struct._IO_FILE* %11, %union.tree_node* %call, i32 0) #6, !dbg !3902
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3903
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3904
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3905
  %14 = load %union.tree_node*, %union.tree_node** %decl3, align 8, !dbg !3906
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %14, i32 0) #6, !dbg !3907
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3908
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3909
  br label %for.inc, !dbg !3910

for.inc:                                          ; preds = %if.then, %for.body, %if.then4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 undef, metadata !3871, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3876
  br label %for.cond, !dbg !3912, !llvm.loop !3913

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3915
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_types_passed_to_local_func(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3916 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3918, metadata !DIExpression()), !dbg !3930
  br label %for.cond, !dbg !3931

for.cond:                                         ; preds = %for.inc16, %entry
  %c_node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc16 ]
  %c_node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %c_node.0.in, align 8, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %c_node.0, metadata !3919, metadata !DIExpression()), !dbg !3930
  %tobool = icmp eq %struct.cgraph_node* %c_node.0, null, !dbg !3933
  br i1 %tobool, label %for.end17, label %for.body, !dbg !3933

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @cgraph_function_body_availability(%struct.cgraph_node* nonnull %c_node.0) #6, !dbg !3934
  %cmp = icmp eq i32 %call, 4, !dbg !3935
  br i1 %cmp, label %if.then, label %for.inc16, !dbg !3936

if.then:                                          ; preds = %for.body
  %0 = bitcast %struct.cgraph_node* %c_node.0 to %struct.tree_decl_non_common**, !dbg !3937
  %1 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** %0, align 8, !dbg !3937
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %1, i64 0, i32 2, !dbg !3938
  br label %for.cond1, !dbg !3939

for.cond1:                                        ; preds = %for.inc, %if.then
  %arg.0.in = phi %union.tree_node** [ %arguments, %if.then ], [ %chain, %for.inc ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !3940
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !3925, metadata !DIExpression()), !dbg !3941
  %tobool2 = icmp eq %union.tree_node* %arg.0, null, !dbg !3942
  br i1 %tobool2, label %for.inc16.loopexit, label %for.body3, !dbg !3942

for.body3:                                        ; preds = %for.cond1
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3943
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !3943
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3926, metadata !DIExpression()), !dbg !3944
  %call5 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %2) #7, !dbg !3945
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3926, metadata !DIExpression()), !dbg !3944
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3946
  %bf.load = load i64, i64* %3, align 8, !dbg !3946
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3948
  %cmp6 = icmp eq i64 %bf.cast1, 16, !dbg !3948
  br i1 %cmp6, label %if.then7, label %for.inc, !dbg !3949

if.then7:                                         ; preds = %for.body3
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3950
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !3950
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %5) #7, !dbg !3952
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3953
  %tobool9 = icmp eq %struct._IO_FILE* %6, null, !dbg !3953
  br i1 %tobool9, label %for.inc, label %if.then10, !dbg !3955

if.then10:                                        ; preds = %if.then7
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !3956
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3958
  tail call void @print_generic_expr(%struct._IO_FILE* %7, %union.tree_node* %call5, i32 0) #6, !dbg !3959
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3960
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !3961
  br label %for.inc, !dbg !3962

for.inc:                                          ; preds = %if.then7, %for.body3, %if.then10
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3963
  br label %for.cond1, !dbg !3964, !llvm.loop !3965

for.inc16.loopexit:                               ; preds = %for.cond1
  br label %for.inc16, !dbg !3967

for.inc16:                                        ; preds = %for.inc16.loopexit, %for.body
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 3, !dbg !3967
  br label %for.cond, !dbg !3968, !llvm.loop !3969

for.end17:                                        ; preds = %for.cond
  ret void, !dbg !3971
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_returned_types(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !3972 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !3974, metadata !DIExpression()), !dbg !3980
  br label %for.cond, !dbg !3981

for.cond:                                         ; preds = %for.inc, %entry
  %c_node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %c_node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %c_node.0.in, align 8, !dbg !3982
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %c_node.0, metadata !3975, metadata !DIExpression()), !dbg !3980
  %tobool = icmp eq %struct.cgraph_node* %c_node.0, null, !dbg !3983
  br i1 %tobool, label %for.end, label %for.body, !dbg !3983

for.body:                                         ; preds = %for.cond
  %0 = bitcast %struct.cgraph_node* %c_node.0 to %struct.tree_common**, !dbg !3984
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !3984
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !3984
  %2 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !3984
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !3984
  %type2 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !3984
  %4 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !3984
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3976, metadata !DIExpression()), !dbg !3985
  %tobool3 = icmp eq %union.tree_node* %4, null, !dbg !3986
  br i1 %tobool3, label %for.inc, label %if.then, !dbg !3988

if.then:                                          ; preds = %for.body
  %call = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* nonnull %4) #7, !dbg !3989
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3976, metadata !DIExpression()), !dbg !3985
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3991
  %bf.load = load i64, i64* %5, align 8, !dbg !3991
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3993
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !3993
  br i1 %cmp, label %if.then4, label %for.inc, !dbg !3994

if.then4:                                         ; preds = %if.then
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3995
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !3995
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %7) #7, !dbg !3997
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3998
  %tobool6 = icmp eq %struct._IO_FILE* %8, null, !dbg !3998
  br i1 %tobool6, label %for.inc, label %if.then7, !dbg !4000

if.then7:                                         ; preds = %if.then4
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4001
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4003
  tail call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* %call, i32 0) #6, !dbg !4004
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4005
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4006
  br label %for.inc, !dbg !4007

for.inc:                                          ; preds = %if.then4, %for.body, %if.then7, %if.then
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %c_node.0, i64 0, i32 3, !dbg !4008
  br label %for.cond, !dbg !4009, !llvm.loop !4010

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4012
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_escaping_types_1(%struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !4013 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !4015, metadata !DIExpression()), !dbg !4018
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !4017, metadata !DIExpression()), !dbg !4018
  br label %for.cond, !dbg !4020

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4022
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4017, metadata !DIExpression()), !dbg !4018
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4023
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !4023
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4018
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !4023
  %tobool1 = icmp eq i32 %call, 0, !dbg !4025
  br i1 %tobool1, label %for.end, label %for.body, !dbg !4025

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !4016, metadata !DIExpression()), !dbg !4018
  call fastcc void @check_type_escape(%struct.data_structure* %2, %struct.VEC_tree_heap** %unsuitable_types) #7, !dbg !4027
  %inc = add i32 %i.0, 1, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4017, metadata !DIExpression()), !dbg !4018
  br label %for.cond, !dbg !4029, !llvm.loop !4030

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4032
  ret void, !dbg !4032
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_type_escape(%struct.data_structure* %str, %struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !4033 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !4035, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !4036, metadata !DIExpression()), !dbg !4038
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !4039
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4039
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4037, metadata !DIExpression()), !dbg !4038
  %call = tail call zeroext i8 @ipa_type_escape_type_contained_p(%union.tree_node* %0) #6, !dbg !4040
  %tobool = icmp eq i8 %call, 0, !dbg !4040
  br i1 %tobool, label %if.then, label %if.end4, !dbg !4042

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4043
  %tobool1 = icmp eq %struct._IO_FILE* %1, null, !dbg !4043
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !4046

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4047
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4049
  tail call void @print_generic_expr(%struct._IO_FILE* %2, %union.tree_node* %0, i32 0) #6, !dbg !4050
  br label %if.end, !dbg !4051

if.end:                                           ; preds = %if.then, %if.then2
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %0) #7, !dbg !4052
  br label %if.end4, !dbg !4053

if.end4:                                          ; preds = %entry, %if.end
  ret void, !dbg !4054
}

declare dso_local zeroext i8 @ipa_type_escape_type_contained_p(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_bitfields(%struct.data_structure* %str, %struct.VEC_tree_heap** %unsuitable_types) unnamed_addr #5 !dbg !4055 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !4057, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata %struct.VEC_tree_heap** %unsuitable_types, metadata !4058, metadata !DIExpression()), !dbg !4061
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !4062
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4062
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4059, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 0, metadata !4060, metadata !DIExpression()), !dbg !4061
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !4063
  %1 = load i32, i32* %num_fields, align 8, !dbg !4063
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !4066
  %2 = sext i32 %1 to i64, !dbg !4068
  br label %for.cond, !dbg !4068

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !4069
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4060, metadata !DIExpression()), !dbg !4061
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !4070
  br i1 %cmp, label %for.body, label %for.end.loopexit, !dbg !4071

for.body:                                         ; preds = %for.cond
  %3 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !4072
  %decl1 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %3, i64 %indvars.iv, i32 2, !dbg !4072
  %4 = bitcast %union.tree_node** %decl1 to %struct.tree_decl_common**, !dbg !4072
  %5 = load %struct.tree_decl_common*, %struct.tree_decl_common** %4, align 8, !dbg !4072
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %5, i64 0, i32 2, !dbg !4072
  %6 = bitcast i40* %decl_flag_1 to i64*, !dbg !4072
  %bf.load = load i64, i64* %6, align 8, !dbg !4072
  %bf.cast1 = and i64 %bf.load, 33554432, !dbg !4072
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !4072
  br i1 %tobool, label %for.inc, label %if.then, !dbg !4073

if.then:                                          ; preds = %for.body
  %indvars.iv.lcssa3 = phi i64 [ %indvars.iv, %for.body ], !dbg !4069
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !4060, metadata !DIExpression()), !dbg !4061
  tail call fastcc void @add_unsuitable_type(%struct.VEC_tree_heap** %unsuitable_types, %union.tree_node* %0) #7, !dbg !4074
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4076
  %tobool2 = icmp eq %struct._IO_FILE* %7, null, !dbg !4076
  br i1 %tobool2, label %for.end, label %if.then3, !dbg !4078

if.then3:                                         ; preds = %if.then
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4079
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4081
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %0, i32 0) #6, !dbg !4082
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4083
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4084
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4085
  %11 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !4086
  %decl8 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %11, i64 %indvars.iv.lcssa3, i32 2, !dbg !4087
  %12 = load %union.tree_node*, %union.tree_node** %decl8, align 8, !dbg !4087
  tail call void @print_generic_expr(%struct._IO_FILE* %10, %union.tree_node* %12, i32 0) #6, !dbg !4088
  br label %for.end, !dbg !4089

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4090
  call void @llvm.dbg.value(metadata i32 undef, metadata !4060, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4061
  br label %for.cond, !dbg !4091, !llvm.loop !4092

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !4094

for.end:                                          ; preds = %for.end.loopexit, %if.then, %if.then3
  ret void, !dbg !4094
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_structure(i32 %i) unnamed_addr #5 !dbg !4095 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !4099, metadata !DIExpression()), !dbg !4101
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4102
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %0, i64 0, i32 0, !dbg !4102
  %call = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !4102
  %cmp = icmp ugt i32 %call, %i, !dbg !4104
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !4105

if.end:                                           ; preds = %entry
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4106
  %base3 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !4106
  %call7 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base3, i32 %i) #7, !dbg !4106
  call void @llvm.dbg.value(metadata %struct.data_structure* %call7, metadata !4100, metadata !DIExpression()), !dbg !4101
  tail call fastcc void @remove_str_allocs(%struct.data_structure* %call7) #7, !dbg !4107
  tail call fastcc void @free_data_struct(%struct.data_structure* %call7) #7, !dbg !4108
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4109
  %base10 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !4109
  tail call fastcc void @VEC_structure_base_ordered_remove(%struct.VEC_structure_base* %base10, i32 %i) #7, !dbg !4109
  br label %cleanup.cont, !dbg !4110

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !4110
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4111 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !4115, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4116, metadata !DIExpression()), !dbg !4117
  br label %land.end, !dbg !4118

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4118
  %arrayidx = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4118
  ret %struct.data_structure* %arrayidx, !dbg !4118
}

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_str_allocs(%struct.data_structure* %str) unnamed_addr #5 !dbg !4119 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !4123, metadata !DIExpression()), !dbg !4124
  %tobool = icmp ne %struct.data_structure* %str, null, !dbg !4125
  %0 = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !4127
  %tobool1 = icmp ne %struct.htab* %0, null, !dbg !4127
  %or.cond = and i1 %tobool, %tobool1, !dbg !4129
  br i1 %or.cond, label %if.then2, label %if.end3, !dbg !4129

if.then2:                                         ; preds = %entry
  %1 = bitcast %struct.data_structure* %str to i8*, !dbg !4130
  tail call void @htab_traverse(%struct.htab* nonnull %0, i32 (i8**, i8*)* nonnull @remove_str_allocs_in_func, i8* nonnull %1) #6, !dbg !4131
  br label %if.end3, !dbg !4131

if.end3:                                          ; preds = %entry, %if.then2
  ret void, !dbg !4132
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_data_struct(%struct.data_structure* %d_node) unnamed_addr #5 !dbg !4133 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %d_node, metadata !4135, metadata !DIExpression()), !dbg !4137
  %tobool = icmp eq %struct.data_structure* %d_node, null, !dbg !4138
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4140

if.end:                                           ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4141
  %tobool1 = icmp eq %struct._IO_FILE* %0, null, !dbg !4141
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !4143

if.then2:                                         ; preds = %if.end
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !4144
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4146
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 0, !dbg !4147
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4147
  tail call void @print_generic_expr(%struct._IO_FILE* %1, %union.tree_node* %2, i32 0) #6, !dbg !4148
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4149
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !4150
  br label %if.end4, !dbg !4151

if.end4:                                          ; preds = %if.end, %if.then2
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 3, !dbg !4152
  %4 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !4152
  %tobool5 = icmp eq %struct.field_entry* %4, null, !dbg !4154
  br i1 %tobool5, label %if.end9, label %for.cond.preheader, !dbg !4155

for.cond.preheader:                               ; preds = %if.end4
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 1, !dbg !4156
  br label %for.cond, !dbg !4160

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ], !dbg !4161
  %5 = phi %struct.field_entry* [ %4, %for.cond.preheader ], [ %.pre, %for.body ], !dbg !4161
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4136, metadata !DIExpression()), !dbg !4137
  %6 = load i32, i32* %num_fields, align 8, !dbg !4162
  %7 = sext i32 %6 to i64, !dbg !4163
  %cmp = icmp slt i64 %indvars.iv, %7, !dbg !4163
  br i1 %cmp, label %for.body, label %for.end, !dbg !4160

for.body:                                         ; preds = %for.cond
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %5, i64 %indvars.iv, i32 4, !dbg !4164
  %8 = load %struct.htab*, %struct.htab** %acc_sites, align 8, !dbg !4164
  tail call fastcc void @free_field_accesses(%struct.htab* %8) #7, !dbg !4165
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4166
  call void @llvm.dbg.value(metadata i32 undef, metadata !4136, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4137
  %.pre = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !4161
  br label %for.cond, !dbg !4167, !llvm.loop !4168

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.field_entry* [ %5, %for.cond ], !dbg !4161
  %9 = bitcast %struct.field_entry* %.lcssa to i8*, !dbg !4170
  tail call void @free(i8* %9) #6, !dbg !4171
  br label %if.end9, !dbg !4172

if.end9:                                          ; preds = %if.end4, %for.end
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 4, !dbg !4173
  %10 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !4173
  %tobool10 = icmp eq %struct.htab* %10, null, !dbg !4175
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !4176

if.then11:                                        ; preds = %if.end9
  tail call fastcc void @free_accesses(%struct.htab* nonnull %10) #7, !dbg !4177
  br label %if.end13, !dbg !4177

if.end13:                                         ; preds = %if.end9, %if.then11
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 5, !dbg !4178
  %11 = load %struct.field_cluster*, %struct.field_cluster** %struct_clustering, align 8, !dbg !4178
  %tobool14 = icmp eq %struct.field_cluster* %11, null, !dbg !4180
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !4181

if.then15:                                        ; preds = %if.end13
  tail call fastcc void @free_struct_cluster(%struct.field_cluster* nonnull %11) #7, !dbg !4182
  br label %if.end17, !dbg !4182

if.end17:                                         ; preds = %if.end13, %if.then15
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %d_node, i64 0, i32 6, !dbg !4183
  %12 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !4183
  %tobool18 = icmp eq %struct.VEC_tree_heap* %12, null, !dbg !4185
  br i1 %tobool18, label %cleanup.cont, label %if.then19, !dbg !4186

if.then19:                                        ; preds = %if.end17
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %new_types) #7, !dbg !4187
  br label %cleanup.cont, !dbg !4187

cleanup.cont:                                     ; preds = %if.end17, %entry, %if.then19
  ret void, !dbg !4188
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_structure_base_ordered_remove(%struct.VEC_structure_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4189 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_base* %vec_, metadata !4193, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4194, metadata !DIExpression()), !dbg !4196
  %idxprom = zext i32 %ix_ to i64, !dbg !4197
  %arrayidx = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4197
  call void @llvm.dbg.value(metadata %struct.data_structure* %arrayidx, metadata !4195, metadata !DIExpression()), !dbg !4196
  %0 = bitcast %struct.data_structure* %arrayidx to i8*, !dbg !4197
  %add.ptr = getelementptr inbounds %struct.data_structure, %struct.data_structure* %arrayidx, i64 1, !dbg !4197
  %1 = bitcast %struct.data_structure* %add.ptr to i8*, !dbg !4197
  %num1 = getelementptr inbounds %struct.VEC_structure_base, %struct.VEC_structure_base* %vec_, i64 0, i32 0, !dbg !4197
  %2 = load i32, i32* %num1, align 8, !dbg !4197
  %dec = add i32 %2, -1, !dbg !4197
  store i32 %dec, i32* %num1, align 8, !dbg !4197
  %sub = sub i32 %dec, %ix_, !dbg !4197
  %conv2 = zext i32 %sub to i64, !dbg !4197
  %mul = mul nuw nsw i64 %conv2, 56, !dbg !4197
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !4197
  ret void, !dbg !4197
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @remove_str_allocs_in_func(i8** %slot, i8* %data) #5 !dbg !4198 {
entry:
  %call = alloca %struct.alloc_site*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !4202, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %data, metadata !4203, metadata !DIExpression()), !dbg !4208
  %0 = bitcast i8** %slot to %struct.func_alloc_sites**, !dbg !4209
  %1 = load %struct.func_alloc_sites*, %struct.func_alloc_sites** %0, align 8, !dbg !4209
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* %1, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 0, metadata !4205, metadata !DIExpression()), !dbg !4208
  %2 = bitcast %struct.alloc_site** %call to i8*, !dbg !4210
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4210
  %allocs = getelementptr inbounds %struct.func_alloc_sites, %struct.func_alloc_sites* %1, i64 0, i32 1, !dbg !4208
  %3 = bitcast i8* %data to %struct.data_structure*, !dbg !4211
  br label %while.cond, !dbg !4214

while.cond:                                       ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %i.1, %if.end ], !dbg !4215
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4205, metadata !DIExpression()), !dbg !4208
  %4 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %allocs, align 8, !dbg !4216
  %tobool = icmp eq %struct.VEC_alloc_site_t_heap* %4, null, !dbg !4216
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4216

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %4, i64 0, i32 0, !dbg !4216
  br label %cond.end, !dbg !4216

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_alloc_site_t_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !4216
  call void @llvm.dbg.value(metadata %struct.alloc_site** %call, metadata !4206, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  %call2 = call fastcc i32 @VEC_alloc_site_t_base_iterate(%struct.VEC_alloc_site_t_base* %cond, i32 %i.0, %struct.alloc_site** nonnull %call) #7, !dbg !4216
  %tobool3 = icmp eq i32 %call2, 0, !dbg !4214
  br i1 %tobool3, label %while.end, label %while.body, !dbg !4214

while.body:                                       ; preds = %cond.end
  %5 = load %struct.alloc_site*, %struct.alloc_site** %call, align 8, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.alloc_site* %5, metadata !4206, metadata !DIExpression()), !dbg !4208
  %str = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %5, i64 0, i32 1, !dbg !4218
  %6 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4218
  %cmp = icmp eq %struct.data_structure* %6, %3, !dbg !4219
  br i1 %cmp, label %if.then, label %if.else, !dbg !4220

if.then:                                          ; preds = %while.body
  %7 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %allocs, align 8, !dbg !4221
  %tobool5 = icmp eq %struct.VEC_alloc_site_t_heap* %7, null, !dbg !4221
  br i1 %tobool5, label %cond.end10, label %cond.true6, !dbg !4221

cond.true6:                                       ; preds = %if.then
  %base8 = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %7, i64 0, i32 0, !dbg !4221
  br label %cond.end10, !dbg !4221

cond.end10:                                       ; preds = %if.then, %cond.true6
  %cond11 = phi %struct.VEC_alloc_site_t_base* [ %base8, %cond.true6 ], [ null, %if.then ], !dbg !4221
  call fastcc void @VEC_alloc_site_t_base_ordered_remove(%struct.VEC_alloc_site_t_base* %cond11, i32 %i.0) #7, !dbg !4221
  br label %if.end, !dbg !4221

if.else:                                          ; preds = %while.body
  %inc = add i32 %i.0, 1, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4205, metadata !DIExpression()), !dbg !4208
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end10
  %i.1 = phi i32 [ %i.0, %cond.end10 ], [ %inc, %if.else ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4205, metadata !DIExpression()), !dbg !4208
  br label %while.cond, !dbg !4214, !llvm.loop !4223

while.end:                                        ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !4225
  ret i32 1, !dbg !4226
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alloc_site_t_base_iterate(%struct.VEC_alloc_site_t_base* %vec_, i32 %ix_, %struct.alloc_site** %ptr) unnamed_addr #0 !dbg !4227 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_base* %vec_, metadata !4233, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4234, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata %struct.alloc_site** %ptr, metadata !4235, metadata !DIExpression()), !dbg !4236
  %tobool = icmp eq %struct.VEC_alloc_site_t_base* %vec_, null, !dbg !4237
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4237

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 0, !dbg !4237
  %0 = load i32, i32* %num, align 8, !dbg !4237
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4237
  br i1 %cmp, label %if.then, label %if.else, !dbg !4239

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4240
  %arrayidx = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4240
  br label %return, !dbg !4240

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4242

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.alloc_site* [ null, %if.else ], [ %arrayidx, %if.then ], !dbg !4244
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4244
  store %struct.alloc_site* %storemerge, %struct.alloc_site** %ptr, align 8, !dbg !4244
  ret i32 %retval.0, !dbg !4239
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_alloc_site_t_base_ordered_remove(%struct.VEC_alloc_site_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4245 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_base* %vec_, metadata !4249, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4250, metadata !DIExpression()), !dbg !4252
  %idxprom = zext i32 %ix_ to i64, !dbg !4253
  %arrayidx = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4253
  call void @llvm.dbg.value(metadata %struct.alloc_site* %arrayidx, metadata !4251, metadata !DIExpression()), !dbg !4252
  %0 = bitcast %struct.alloc_site* %arrayidx to i8*, !dbg !4253
  %add.ptr = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %arrayidx, i64 1, !dbg !4253
  %1 = bitcast %struct.alloc_site* %add.ptr to i8*, !dbg !4253
  %num1 = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 0, !dbg !4253
  %2 = load i32, i32* %num1, align 8, !dbg !4253
  %dec = add i32 %2, -1, !dbg !4253
  store i32 %dec, i32* %num1, align 8, !dbg !4253
  %sub = sub i32 %dec, %ix_, !dbg !4253
  %conv2 = zext i32 %sub to i64, !dbg !4253
  %mul = shl nuw nsw i64 %conv2, 4, !dbg !4253
  %call = tail call i8* @memmove(i8* nonnull %0, i8* nonnull %1, i64 %mul) #6, !dbg !4253
  ret void, !dbg !4253
}

declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_field_accesses(%struct.htab* %f_accs) unnamed_addr #5 !dbg !4254 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %f_accs, metadata !4258, metadata !DIExpression()), !dbg !4259
  %tobool = icmp eq %struct.htab* %f_accs, null, !dbg !4260
  br i1 %tobool, label %if.end, label %if.then, !dbg !4262

if.then:                                          ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %f_accs, i32 (i8**, i8*)* nonnull @free_field_accs, i8* null) #6, !dbg !4263
  br label %if.end, !dbg !4263

if.end:                                           ; preds = %entry, %if.then
  tail call void @htab_delete(%struct.htab* %f_accs) #6, !dbg !4264
  ret void, !dbg !4265
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @free_accesses(%struct.htab* %accs) unnamed_addr #5 !dbg !4266 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %accs, metadata !4268, metadata !DIExpression()), !dbg !4269
  %tobool = icmp eq %struct.htab* %accs, null, !dbg !4270
  br i1 %tobool, label %if.end, label %if.then, !dbg !4272

if.then:                                          ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %accs, i32 (i8**, i8*)* nonnull @free_accs, i8* null) #6, !dbg !4273
  br label %if.end, !dbg !4273

if.end:                                           ; preds = %entry, %if.then
  tail call void @htab_delete(%struct.htab* %accs) #6, !dbg !4274
  ret void, !dbg !4275
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_struct_cluster(%struct.field_cluster* %cluster) unnamed_addr #5 !dbg !4276 {
entry:
  call void @llvm.dbg.value(metadata %struct.field_cluster* %cluster, metadata !4280, metadata !DIExpression()), !dbg !4281
  %tobool = icmp eq %struct.field_cluster* %cluster, null, !dbg !4282
  br i1 %tobool, label %if.end9, label %if.then, !dbg !4284

if.then:                                          ; preds = %entry
  %fields_in_cluster = getelementptr inbounds %struct.field_cluster, %struct.field_cluster* %cluster, i64 0, i32 0, !dbg !4285
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !4285
  %tobool1 = icmp eq %struct.simple_bitmap_def* %0, null, !dbg !4288
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !4289

if.then2:                                         ; preds = %if.then
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i64 0, i32 0, !dbg !4290
  %1 = load i8*, i8** %popcount, align 8, !dbg !4290
  tail call void @free(i8* %1) #6, !dbg !4290
  %2 = bitcast %struct.field_cluster* %cluster to i8**, !dbg !4290
  %3 = load i8*, i8** %2, align 8, !dbg !4290
  tail call void @free(i8* %3) #6, !dbg !4290
  br label %if.end, !dbg !4290

if.end:                                           ; preds = %if.then, %if.then2
  %sibling = getelementptr inbounds %struct.field_cluster, %struct.field_cluster* %cluster, i64 0, i32 1, !dbg !4291
  %4 = load %struct.field_cluster*, %struct.field_cluster** %sibling, align 8, !dbg !4291
  %tobool5 = icmp eq %struct.field_cluster* %4, null, !dbg !4293
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !4294

if.then6:                                         ; preds = %if.end
  tail call fastcc void @free_struct_cluster(%struct.field_cluster* nonnull %4) #7, !dbg !4295
  br label %if.end8, !dbg !4295

if.end8:                                          ; preds = %if.end, %if.then6
  %5 = bitcast %struct.field_cluster* %cluster to i8*, !dbg !4296
  tail call void @free(i8* nonnull %5) #6, !dbg !4297
  br label %if.end9, !dbg !4298

if.end9:                                          ; preds = %entry, %if.end8
  ret void, !dbg !4299
}

; Function Attrs: nounwind uwtable
define internal i32 @free_field_accs(i8** %slot, i8* %data) #5 !dbg !4300 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !4302, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i8* %data, metadata !4303, metadata !DIExpression()), !dbg !4305
  %0 = load i8*, i8** %slot, align 8, !dbg !4306
  tail call void @free(i8* %0) #6, !dbg !4307
  ret i32 1, !dbg !4308
}

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @free_accs(i8** %slot, i8* %data) #5 !dbg !4309 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !4311, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8* %data, metadata !4312, metadata !DIExpression()), !dbg !4314
  %0 = bitcast i8** %slot to %struct.access_site**, !dbg !4315
  %1 = load %struct.access_site*, %struct.access_site** %0, align 8, !dbg !4315
  call void @llvm.dbg.value(metadata %struct.access_site* %1, metadata !4313, metadata !DIExpression()), !dbg !4314
  %vars = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 1, !dbg !4316
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vars) #7, !dbg !4316
  %2 = bitcast %struct.access_site* %1 to i8*, !dbg !4317
  tail call void @free(i8* %2) #6, !dbg !4318
  ret i32 1, !dbg !4319
}

; Function Attrs: nounwind uwtable
define internal i32 @malloc_hash(i8* %x) #5 !dbg !4320 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !4322, metadata !DIExpression()), !dbg !4323
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4324
  %1 = bitcast i8* %x to i8**, !dbg !4325
  %2 = load i8*, i8** %1, align 8, !dbg !4325
  %call = tail call i32 %0(i8* %2) #6, !dbg !4324
  ret i32 %call, !dbg !4326
}

; Function Attrs: nounwind uwtable
define internal i32 @malloc_eq(i8* %x, i8* %y) #5 !dbg !4327 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !4329, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %y, metadata !4330, metadata !DIExpression()), !dbg !4331
  %func = bitcast i8* %x to %union.tree_node**, !dbg !4332
  %0 = load %union.tree_node*, %union.tree_node** %func, align 8, !dbg !4332
  %1 = bitcast i8* %y to %union.tree_node*, !dbg !4333
  %cmp = icmp eq %union.tree_node* %0, %1, !dbg !4334
  %conv = zext i1 %cmp to i32, !dbg !4334
  ret i32 %conv, !dbg !4335
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_alloc_sites() unnamed_addr #5 !dbg !4336 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*, !dbg !4359
  br label %for.cond, !dbg !4360

for.cond:                                         ; preds = %for.inc35, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc35 ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !4361
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !4338, metadata !DIExpression()), !dbg !4362
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !4363
  br i1 %tobool, label %for.end36, label %for.body, !dbg !4363

for.body:                                         ; preds = %for.cond
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 27, !dbg !4364
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !4364
  %bf.clear = and i16 %bf.load, 32, !dbg !4364
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !4365
  br i1 %tobool1, label %for.inc35, label %land.lhs.true, !dbg !4366

land.lhs.true:                                    ; preds = %for.body
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 0, !dbg !4367
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4367
  %tobool2 = icmp eq %union.tree_node* %1, null, !dbg !4368
  br i1 %tobool2, label %for.inc35, label %if.then, !dbg !4369

if.then:                                          ; preds = %land.lhs.true
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 1, !dbg !4370
  br label %for.cond3, !dbg !4371

for.cond3:                                        ; preds = %for.inc, %if.then
  %cs.0.in = phi %struct.cgraph_edge** [ %callees, %if.then ], [ %next_callee, %for.inc ]
  %cs.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cs.0.in, align 8, !dbg !4372
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cs.0, metadata !4339, metadata !DIExpression()), !dbg !4362
  %tobool4 = icmp eq %struct.cgraph_edge* %cs.0, null, !dbg !4373
  br i1 %tobool4, label %for.inc35.loopexit, label %for.body5, !dbg !4373

for.body5:                                        ; preds = %for.cond3
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 7, !dbg !4374
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %call_stmt, align 8, !dbg !4374
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %2, metadata !4340, metadata !DIExpression()), !dbg !4375
  %tobool6 = icmp eq %union.gimple_statement_d* %2, null, !dbg !4376
  br i1 %tobool6, label %for.inc, label %if.then7, !dbg !4377

if.then7:                                         ; preds = %for.body5
  %call = call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* nonnull %2) #7, !dbg !4378
  %tobool9 = icmp eq i8 %call, 0, !dbg !4378
  br i1 %tobool9, label %for.inc, label %land.lhs.true10, !dbg !4379

land.lhs.true10:                                  ; preds = %if.then7
  %call11 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* nonnull %2) #7, !dbg !4380
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !4348, metadata !DIExpression()), !dbg !4381
  %tobool12 = icmp eq %union.tree_node* %call11, null, !dbg !4382
  br i1 %tobool12, label %for.inc, label %land.lhs.true13, !dbg !4383

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %call14 = call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* nonnull %2) #7, !dbg !4384
  %tobool15 = icmp eq %union.tree_node* %call14, null, !dbg !4384
  br i1 %tobool15, label %for.inc, label %if.then16, !dbg !4385

if.then16:                                        ; preds = %land.lhs.true13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4386
  call void @llvm.dbg.value(metadata i32* %i, metadata !4351, metadata !DIExpression(DW_OP_deref)), !dbg !4359
  %call17 = call fastcc zeroext i8 @is_alloc_of_struct(%union.gimple_statement_d* nonnull %2, i32* nonnull %i) #7, !dbg !4387
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4387
  br i1 %tobool18, label %if.end31, label %if.then19, !dbg !4388

if.then19:                                        ; preds = %if.then16
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 5, !dbg !4389
  %bf.load20 = load i32, i32* %function_code, align 8, !dbg !4389
  %bf.clear21 = and i32 %bf.load20, 2047, !dbg !4389
  %cmp = icmp eq i32 %bf.clear21, 491, !dbg !4390
  br i1 %cmp, label %if.then23, label %if.else, !dbg !4391

if.then23:                                        ; preds = %if.then19
  %3 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4392
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %3, i64 0, i32 0, !dbg !4392
  %4 = load i32, i32* %i, align 4, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %4, metadata !4351, metadata !DIExpression()), !dbg !4359
  %call25 = call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base, i32 %4) #7, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.data_structure* %call25, metadata !4354, metadata !DIExpression()), !dbg !4393
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4394
  call fastcc void @add_alloc_site(%union.tree_node* %5, %union.gimple_statement_d* nonnull %2, %struct.data_structure* %call25) #7, !dbg !4395
  br label %if.end31, !dbg !4396

if.else:                                          ; preds = %if.then19
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4397
  %tobool27 = icmp eq %struct._IO_FILE* %6, null, !dbg !4397
  br i1 %tobool27, label %if.end, label %if.then28, !dbg !4400

if.then28:                                        ; preds = %if.else
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4401
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4403
  call void @print_gimple_stmt(%struct._IO_FILE* %7, %union.gimple_statement_d* nonnull %2, i32 0, i32 0) #6, !dbg !4404
  br label %if.end, !dbg !4405

if.end:                                           ; preds = %if.else, %if.then28
  %8 = load i32, i32* %i, align 4, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %8, metadata !4351, metadata !DIExpression()), !dbg !4359
  call fastcc void @remove_structure(i32 %8) #7, !dbg !4407
  br label %if.end31

if.end31:                                         ; preds = %if.then16, %if.then23, %if.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4408
  br label %for.inc, !dbg !4409

for.inc:                                          ; preds = %land.lhs.true13, %land.lhs.true10, %if.then7, %for.body5, %if.end31
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cs.0, i64 0, i32 6, !dbg !4410
  br label %for.cond3, !dbg !4411, !llvm.loop !4412

for.inc35.loopexit:                               ; preds = %for.cond3
  br label %for.inc35, !dbg !4414

for.inc35:                                        ; preds = %for.inc35.loopexit, %land.lhs.true, %for.body
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !4414
  br label %for.cond, !dbg !4415, !llvm.loop !4416

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !4418
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4419 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4423, metadata !DIExpression()), !dbg !4425
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #7, !dbg !4426
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4424, metadata !DIExpression()), !dbg !4425
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4427
  %bf.load = load i64, i64* %0, align 8, !dbg !4427
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4429
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !4429
  br i1 %cmp, label %if.then, label %cleanup, !dbg !4430

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4431
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4431
  br label %cleanup, !dbg !4432

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !4425
  ret %union.tree_node* %retval.0, !dbg !4433
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4434 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4436, metadata !DIExpression()), !dbg !4437
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4438
  ret %union.tree_node* %call, !dbg !4439
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_alloc_of_struct(%union.gimple_statement_d* %stmt, i32* %i_p) unnamed_addr #5 !dbg !4440 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4445, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i32* %i_p, metadata !4446, metadata !DIExpression()), !dbg !4450
  %call = tail call fastcc %union.gimple_statement_d* @get_final_alloc_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !4451
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !4449, metadata !DIExpression()), !dbg !4450
  %tobool = icmp eq %union.gimple_statement_d* %call, null, !dbg !4452
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4454

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* nonnull %call) #7, !dbg !4455
  %cmp = icmp eq i32 %call1, 6, !dbg !4457
  br i1 %cmp, label %if.end3, label %cleanup, !dbg !4458

if.end3:                                          ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* nonnull %call) #7, !dbg !4459
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4447, metadata !DIExpression()), !dbg !4450
  %call5 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call4) #7, !dbg !4460
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !4448, metadata !DIExpression()), !dbg !4450
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !4461
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !4463

if.end8:                                          ; preds = %if.end3
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4464
  %bf.load = load i64, i64* %0, align 8, !dbg !4464
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4464
  %cmp9 = icmp eq i64 %bf.cast1, 10, !dbg !4464
  br i1 %cmp9, label %lor.lhs.false15, label %lor.lhs.false, !dbg !4464

lor.lhs.false:                                    ; preds = %if.end8
  %cmp14 = icmp eq i64 %bf.cast1, 12, !dbg !4464
  br i1 %cmp14, label %lor.lhs.false15, label %cleanup, !dbg !4466

lor.lhs.false15:                                  ; preds = %lor.lhs.false, %if.end8
  %call16 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* nonnull %call5) #7, !dbg !4467
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4467
  %bf.load18 = load i64, i64* %1, align 8, !dbg !4467
  %bf.cast203 = and i64 %bf.load18, 65535, !dbg !4468
  %cmp21 = icmp eq i64 %bf.cast203, 16, !dbg !4468
  br i1 %cmp21, label %if.end23, label %cleanup, !dbg !4469

if.end23:                                         ; preds = %lor.lhs.false15
  %call24 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* nonnull %call5) #7, !dbg !4470
  %call25 = tail call fastcc i32 @find_structure(%union.tree_node* %call24) #7, !dbg !4471
  store i32 %call25, i32* %i_p, align 4, !dbg !4472
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4473
  %base27 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !4473
  %call28 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base27) #7, !dbg !4473
  %cmp29 = icmp ne i32 %call25, %call28, !dbg !4475
  %. = zext i1 %cmp29 to i8, !dbg !4450
  br label %cleanup, !dbg !4450

cleanup:                                          ; preds = %lor.lhs.false15, %if.end3, %if.end, %entry, %if.end23, %lor.lhs.false
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ 0, %if.end3 ], [ 0, %lor.lhs.false15 ], [ 0, %lor.lhs.false ], [ %., %if.end23 ], !dbg !4450
  ret i8 %retval.0, !dbg !4476
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_alloc_site(%union.tree_node* %fn_decl, %union.gimple_statement_d* %stmt, %struct.data_structure* %str) unnamed_addr #5 !dbg !4477 {
entry:
  %m_call = alloca %struct.alloc_site, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !4481, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4482, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !4483, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* null, metadata !4484, metadata !DIExpression()), !dbg !4489
  %0 = bitcast %struct.alloc_site* %m_call to i8*, !dbg !4490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4490
  %stmt1 = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %m_call, i64 0, i32 0, !dbg !4491
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt1, align 8, !dbg !4492
  %str2 = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %m_call, i64 0, i32 1, !dbg !4493
  store %struct.data_structure* %str, %struct.data_structure** %str2, align 8, !dbg !4494
  %1 = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !4495
  %2 = bitcast %union.tree_node* %fn_decl to i8*, !dbg !4496
  %3 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4497
  %call = tail call i32 %3(i8* %2) #6, !dbg !4497
  %call3 = tail call i8* @htab_find_with_hash(%struct.htab* %1, i8* %2, i32 %call) #6, !dbg !4498
  call void @llvm.dbg.value(metadata i8* %call3, metadata !4484, metadata !DIExpression()), !dbg !4489
  %tobool = icmp eq i8* %call3, null, !dbg !4499
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge, !dbg !4500

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !4500

if.then:                                          ; preds = %entry
  %call4 = tail call i8* @xmalloc(i64 16) #6, !dbg !4501
  call void @llvm.dbg.value(metadata i8* %call4, metadata !4484, metadata !DIExpression()), !dbg !4489
  %func = bitcast i8* %call4 to %union.tree_node**, !dbg !4502
  store %union.tree_node* %fn_decl, %union.tree_node** %func, align 8, !dbg !4503
  %call5 = tail call fastcc %struct.VEC_alloc_site_t_heap* @VEC_alloc_site_t_heap_alloc(i32 1) #7, !dbg !4504
  %allocs = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !4505
  %4 = bitcast i8* %allocs to %struct.VEC_alloc_site_t_heap**, !dbg !4505
  store %struct.VEC_alloc_site_t_heap* %call5, %struct.VEC_alloc_site_t_heap** %4, align 8, !dbg !4506
  %5 = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !4507
  %6 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !4508
  %call6 = tail call i32 %6(i8* %2) #6, !dbg !4508
  %call7 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %5, i8* %2, i32 %call6, i32 1) #6, !dbg !4509
  call void @llvm.dbg.value(metadata i8** %call7, metadata !4486, metadata !DIExpression()), !dbg !4510
  store i8* %call4, i8** %call7, align 8, !dbg !4511
  br label %if.end, !dbg !4512

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %fallocs.0.in = phi i8* [ %call3, %entry.if.end_crit_edge ], [ %call4, %if.then ]
  call void @llvm.dbg.value(metadata i8* %fallocs.0.in, metadata !4484, metadata !DIExpression()), !dbg !4489
  %allocs8 = getelementptr inbounds i8, i8* %fallocs.0.in, i64 8, !dbg !4513
  %7 = bitcast i8* %allocs8 to %struct.VEC_alloc_site_t_heap**, !dbg !4513
  call void @llvm.dbg.value(metadata %struct.alloc_site* %m_call, metadata !4485, metadata !DIExpression(DW_OP_deref)), !dbg !4489
  %call9 = call fastcc %struct.alloc_site* @VEC_alloc_site_t_heap_safe_push(%struct.VEC_alloc_site_t_heap** nonnull %7, %struct.alloc_site* nonnull %m_call) #7, !dbg !4513
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4514
  %tobool10 = icmp eq %struct._IO_FILE* %8, null, !dbg !4514
  br i1 %tobool10, label %if.end14, label %if.then11, !dbg !4516

if.then11:                                        ; preds = %if.end
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !4517
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4519
  call void @print_gimple_stmt(%struct._IO_FILE* %9, %union.gimple_statement_d* %stmt, i32 0, i32 0) #6, !dbg !4520
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4521
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !4522
  br label %if.end14, !dbg !4523

if.end14:                                         ; preds = %if.end, %if.then11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !4524
  ret void, !dbg !4524
}

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4525 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4527, metadata !DIExpression()), !dbg !4528
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !4529
  ret %union.tree_node* %call, !dbg !4530
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4531 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4535, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i32 %i, metadata !4536, metadata !DIExpression()), !dbg !4537
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !4538
  %tobool = icmp eq i8 %call, 0, !dbg !4538
  br i1 %tobool, label %return, label %if.then, !dbg !4540

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !4541
  %idxprom = zext i32 %i to i64, !dbg !4541
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !4541
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4541
  br label %return, !dbg !4543

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !4544
  ret %union.tree_node* %retval.0, !dbg !4545
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4546 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4548, metadata !DIExpression()), !dbg !4549
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4550
  %cmp = icmp eq i32 %call, 0, !dbg !4551
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !4552

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !4553
  %cmp2 = icmp ult i32 %call1, 10, !dbg !4554
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !4555
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4556 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4560, metadata !DIExpression()), !dbg !4562
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #7, !dbg !4563
  %idxprom = zext i32 %call to i64, !dbg !4564
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !4564
  %0 = load i64, i64* %arrayidx, align 8, !dbg !4564
  call void @llvm.dbg.value(metadata i64 %0, metadata !4561, metadata !DIExpression()), !dbg !4562
  %cmp = icmp eq i64 %0, 0, !dbg !4565
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4565

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !4565
  br label %cond.end, !dbg !4565

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !4566
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !4567
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !4568
  ret %union.tree_node** %2, !dbg !4569
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4570 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4574, metadata !DIExpression()), !dbg !4575
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4576
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #7, !dbg !4577
  ret i32 %call1, !dbg !4578
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !4579 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4583, metadata !DIExpression()), !dbg !4584
  %idxprom = zext i32 %code to i64, !dbg !4585
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !4585
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4585
  ret i32 %0, !dbg !4586
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @get_final_alloc_stmt(%union.gimple_statement_d* %alloc_stmt) unnamed_addr #5 !dbg !4587 {
entry:
  %final_stmt = alloca %union.gimple_statement_d*, align 8
  %use_p = alloca %struct.ssa_use_operand_d*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %alloc_stmt, metadata !4591, metadata !DIExpression()), !dbg !4595
  %0 = bitcast %union.gimple_statement_d** %final_stmt to i8*, !dbg !4596
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4596
  %1 = bitcast %struct.ssa_use_operand_d** %use_p to i8*, !dbg !4597
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4597
  %tobool = icmp eq %union.gimple_statement_d* %alloc_stmt, null, !dbg !4598
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4600

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* nonnull %alloc_stmt) #7, !dbg !4601
  %tobool1 = icmp eq i8 %call, 0, !dbg !4601
  br i1 %tobool1, label %cleanup, label %if.end3, !dbg !4603

if.end3:                                          ; preds = %if.end
  %call4 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* nonnull %alloc_stmt) #6, !dbg !4604
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !4594, metadata !DIExpression()), !dbg !4595
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4605
  %bf.load = load i64, i64* %2, align 8, !dbg !4605
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4607
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4607
  br i1 %cmp, label %if.end6, label %cleanup, !dbg !4608

if.end6:                                          ; preds = %if.end3
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %final_stmt, metadata !4592, metadata !DIExpression(DW_OP_deref)), !dbg !4595
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !4593, metadata !DIExpression(DW_OP_deref)), !dbg !4595
  %call7 = call fastcc zeroext i8 @single_imm_use(%union.tree_node* %call4, %struct.ssa_use_operand_d** nonnull %use_p, %union.gimple_statement_d** nonnull %final_stmt) #7, !dbg !4609
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4609
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %final_stmt, align 8, !dbg !4611
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !4592, metadata !DIExpression()), !dbg !4595
  %spec.select = select i1 %tobool8, %union.gimple_statement_d* null, %union.gimple_statement_d* %3, !dbg !4612
  br label %cleanup, !dbg !4612

cleanup:                                          ; preds = %if.end3, %if.end, %entry, %if.end6
  %retval.0 = phi %union.gimple_statement_d* [ null, %entry ], [ null, %if.end ], [ null, %if.end3 ], [ %spec.select, %if.end6 ], !dbg !4595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !4613
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4613
  ret %union.gimple_statement_d* %retval.0, !dbg !4613
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4614 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4616, metadata !DIExpression()), !dbg !4617
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !4618
  ret %union.tree_node* %call, !dbg !4619
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_imm_use(%union.tree_node* %var, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) unnamed_addr #0 !dbg !4620 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4626, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d** %use_p, metadata !4627, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmt, metadata !4628, metadata !DIExpression()), !dbg !4636
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4637
  %0 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !4637
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !4629, metadata !DIExpression()), !dbg !4636
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !4638
  %1 = bitcast i40* %next to %struct.ssa_use_operand_d**, !dbg !4638
  %2 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !4638
  %cmp = icmp eq %struct.ssa_use_operand_d* %2, %0, !dbg !4639
  br i1 %cmp, label %return_false, label %if.end, !dbg !4640

return_false:                                     ; preds = %if.then4, %if.end12, %entry
  call void @llvm.dbg.label(metadata !4633), !dbg !4641
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %use_p, align 8, !dbg !4642
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %stmt, align 8, !dbg !4643
  br label %cleanup, !dbg !4644

if.end:                                           ; preds = %entry
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 1, !dbg !4645
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next2, align 8, !dbg !4645
  %cmp3 = icmp eq %struct.ssa_use_operand_d* %3, %0, !dbg !4647
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !4648

if.then4:                                         ; preds = %if.end
  %stmt6 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %2, i64 0, i32 2, i32 0, !dbg !4649
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt6, align 8, !dbg !4649
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %4) #7, !dbg !4652
  %tobool = icmp eq i8 %call, 0, !dbg !4652
  br i1 %tobool, label %if.then7, label %return_false, !dbg !4653

if.then7:                                         ; preds = %if.then4
  %5 = bitcast i40* %next to i64*, !dbg !4654
  %6 = load i64, i64* %5, align 8, !dbg !4654
  %7 = bitcast %struct.ssa_use_operand_d** %use_p to i64*, !dbg !4656
  store i64 %6, i64* %7, align 8, !dbg !4656
  %8 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %1, align 8, !dbg !4657
  %stmt11 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %8, i64 0, i32 2, i32 0, !dbg !4658
  %9 = bitcast %union.gimple_statement_d** %stmt11 to i64*, !dbg !4658
  %10 = load i64, i64* %9, align 8, !dbg !4658
  %11 = bitcast %union.gimple_statement_d** %stmt to i64*, !dbg !4659
  store i64 %10, i64* %11, align 8, !dbg !4659
  br label %cleanup, !dbg !4660

if.end12:                                         ; preds = %if.end
  %12 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4661
  %tobool13 = icmp eq i32 %12, 0, !dbg !4661
  br i1 %tobool13, label %return_false, label %if.end15, !dbg !4663

if.end15:                                         ; preds = %if.end12
  %call16 = tail call zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d* nonnull %0, %struct.ssa_use_operand_d** %use_p, %union.gimple_statement_d** %stmt) #6, !dbg !4664
  br label %cleanup, !dbg !4665

cleanup:                                          ; preds = %if.end15, %if.then7, %return_false
  %retval.0 = phi i8 [ 0, %return_false ], [ 1, %if.then7 ], [ %call16, %if.end15 ], !dbg !4636
  ret i8 %retval.0, !dbg !4666
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4667 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4669, metadata !DIExpression()), !dbg !4670
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !4671
  %cmp = icmp eq i32 %call, 2, !dbg !4672
  %conv1 = zext i1 %cmp to i8, !dbg !4671
  ret i8 %conv1, !dbg !4673
}

declare dso_local zeroext i8 @single_imm_use_1(%struct.ssa_use_operand_d*, %struct.ssa_use_operand_d**, %union.gimple_statement_d**) local_unnamed_addr #2

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_alloc_site_t_heap* @VEC_alloc_site_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4674 {
entry:
  call void @llvm.dbg.value(metadata i32 1, metadata !4678, metadata !DIExpression()), !dbg !4679
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 1, i64 8, i64 16) #6, !dbg !4680
  %0 = bitcast i8* %call to %struct.VEC_alloc_site_t_heap*, !dbg !4680
  ret %struct.VEC_alloc_site_t_heap* %0, !dbg !4680
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alloc_site* @VEC_alloc_site_t_heap_safe_push(%struct.VEC_alloc_site_t_heap** %vec_, %struct.alloc_site* %obj_) unnamed_addr #0 !dbg !4681 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_heap** %vec_, metadata !4688, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.value(metadata %struct.alloc_site* %obj_, metadata !4689, metadata !DIExpression()), !dbg !4690
  %call = tail call fastcc i32 @VEC_alloc_site_t_heap_reserve(%struct.VEC_alloc_site_t_heap** %vec_, i32 1) #7, !dbg !4691
  %0 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %vec_, align 8, !dbg !4691
  %tobool = icmp eq %struct.VEC_alloc_site_t_heap* %0, null, !dbg !4691
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4691

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %0, i64 0, i32 0, !dbg !4691
  br label %cond.end, !dbg !4691

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alloc_site_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4691
  %call1 = tail call fastcc %struct.alloc_site* @VEC_alloc_site_t_base_quick_push(%struct.VEC_alloc_site_t_base* %cond, %struct.alloc_site* %obj_) #7, !dbg !4691
  ret %struct.alloc_site* %call1, !dbg !4691
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alloc_site_t_heap_reserve(%struct.VEC_alloc_site_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4692 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_heap** %vec_, metadata !4696, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32 1, metadata !4697, metadata !DIExpression()), !dbg !4699
  %0 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %vec_, align 8, !dbg !4700
  %tobool = icmp eq %struct.VEC_alloc_site_t_heap* %0, null, !dbg !4700
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4700

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %0, i64 0, i32 0, !dbg !4700
  br label %cond.end, !dbg !4700

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alloc_site_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4700
  %call = tail call fastcc i32 @VEC_alloc_site_t_base_space(%struct.VEC_alloc_site_t_base* %cond, i32 1) #7, !dbg !4700
  %tobool1 = icmp eq i32 %call, 0, !dbg !4700
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4698, metadata !DIExpression()), !dbg !4699
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4700

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_alloc_site_t_heap** %vec_ to i8**, !dbg !4701
  %2 = load i8*, i8** %1, align 8, !dbg !4701
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 16) #6, !dbg !4701
  store i8* %call3, i8** %1, align 8, !dbg !4701
  br label %if.end, !dbg !4701

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4700
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alloc_site* @VEC_alloc_site_t_base_quick_push(%struct.VEC_alloc_site_t_base* %vec_, %struct.alloc_site* %obj_) unnamed_addr #0 !dbg !4703 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_base* %vec_, metadata !4707, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata %struct.alloc_site* %obj_, metadata !4708, metadata !DIExpression()), !dbg !4710
  %num1 = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 0, !dbg !4711
  %0 = load i32, i32* %num1, align 8, !dbg !4711
  %inc = add i32 %0, 1, !dbg !4711
  store i32 %inc, i32* %num1, align 8, !dbg !4711
  %idxprom = zext i32 %0 to i64, !dbg !4711
  %arrayidx = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4711
  call void @llvm.dbg.value(metadata %struct.alloc_site* %arrayidx, metadata !4709, metadata !DIExpression()), !dbg !4710
  %tobool = icmp eq %struct.alloc_site* %obj_, null, !dbg !4712
  br i1 %tobool, label %if.end, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.alloc_site* %arrayidx to i8*, !dbg !4712
  %2 = bitcast %struct.alloc_site* %obj_ to i8*, !dbg !4712
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !4712
  br label %if.end, !dbg !4712

if.end:                                           ; preds = %entry, %if.then
  ret %struct.alloc_site* %arrayidx, !dbg !4711
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alloc_site_t_base_space(%struct.VEC_alloc_site_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4714 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_base* %vec_, metadata !4718, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.value(metadata i32 1, metadata !4719, metadata !DIExpression()), !dbg !4720
  %tobool = icmp eq %struct.VEC_alloc_site_t_base* %vec_, null, !dbg !4721
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4721

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 1, !dbg !4721
  %0 = load i32, i32* %alloc, align 4, !dbg !4721
  %num = getelementptr inbounds %struct.VEC_alloc_site_t_base, %struct.VEC_alloc_site_t_base* %vec_, i64 0, i32 0, !dbg !4721
  %1 = load i32, i32* %num, align 8, !dbg !4721
  %cmp1 = icmp ne i32 %0, %1, !dbg !4721
  %phitmp = zext i1 %cmp1 to i32, !dbg !4721
  br label %cond.end, !dbg !4721

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4721

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !4721
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_accesses_in_func(%struct.function* %fn) unnamed_addr #5 !dbg !4722 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4726, metadata !DIExpression()), !dbg !4728
  %tobool = icmp eq %struct.function* %fn, null, !dbg !4729
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4731

if.end:                                           ; preds = %entry
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !4732
  %0 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4732
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %0, i64 0, i32 0, !dbg !4732
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4732
  br label %for.cond, !dbg !4732

for.cond:                                         ; preds = %for.body, %if.end
  %2 = phi %struct.control_flow_graph* [ %0, %if.end ], [ %.pre, %for.body ], !dbg !4734
  %.pn = phi %struct.basic_block_def* [ %1, %if.end ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4736
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4736
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4727, metadata !DIExpression()), !dbg !4728
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !4734
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4734
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %3, !dbg !4734
  br i1 %cmp, label %cleanup.cont.loopexit, label %for.body, !dbg !4732

for.body:                                         ; preds = %for.cond
  tail call fastcc void @collect_accesses_in_bb(%struct.basic_block_def* %bb.0) #7, !dbg !4737
  %.pre = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4734
  br label %for.cond, !dbg !4734, !llvm.loop !4738

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !4740

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !4740
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_alloc_and_field_accs(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !4741 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !4743, metadata !DIExpression()), !dbg !4746
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !4747
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4747
  call void @llvm.dbg.value(metadata i32 0, metadata !4745, metadata !DIExpression()), !dbg !4746
  br label %for.cond, !dbg !4748

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4750
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4745, metadata !DIExpression()), !dbg !4746
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4751
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !4751
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !4744, metadata !DIExpression(DW_OP_deref)), !dbg !4746
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !4751
  %tobool1 = icmp eq i32 %call, 0, !dbg !4753
  br i1 %tobool1, label %for.end, label %for.body, !dbg !4753

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4754
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !4744, metadata !DIExpression()), !dbg !4746
  call fastcc void @exclude_alloc_and_field_accs_1(%struct.data_structure* %2, %struct.cgraph_node* %node) #7, !dbg !4755
  %inc = add i32 %i.0, 1, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4745, metadata !DIExpression()), !dbg !4746
  br label %for.cond, !dbg !4757, !llvm.loop !4758

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4760
  ret void, !dbg !4760
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_cond_exprs() unnamed_addr #5 !dbg !4761 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %safe_p = alloca i8, align 1
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !4767
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4767
  call void @llvm.dbg.value(metadata i32 0, metadata !4764, metadata !DIExpression()), !dbg !4768
  br label %while.cond, !dbg !4769

while.cond:                                       ; preds = %if.end6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %i.1, %if.end6 ], !dbg !4768
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4764, metadata !DIExpression()), !dbg !4768
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4770
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !4770
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !4763, metadata !DIExpression(DW_OP_deref)), !dbg !4768
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !4770
  %tobool1 = icmp eq i32 %call, 0, !dbg !4769
  br i1 %tobool1, label %while.end, label %while.body, !dbg !4769

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8* %safe_p, metadata !4765, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %safe_p) #8, !dbg !4772
  call void @llvm.dbg.value(metadata i8 1, metadata !4765, metadata !DIExpression()), !dbg !4771
  store i8 1, i8* %safe_p, align 1, !dbg !4773
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4774
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !4763, metadata !DIExpression()), !dbg !4768
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %2, i64 0, i32 4, !dbg !4776
  %3 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !4776
  %tobool2 = icmp eq %struct.htab* %3, null, !dbg !4774
  br i1 %tobool2, label %if.end, label %if.then, !dbg !4777

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !4763, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i8* %safe_p, metadata !4765, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call void @htab_traverse(%struct.htab* nonnull %3, i32 (i8**, i8*)* nonnull @safe_cond_expr_check, i8* nonnull %safe_p) #6, !dbg !4778
  %.pre = load i8, i8* %safe_p, align 1, !dbg !4779
  br label %if.end, !dbg !4778

if.end:                                           ; preds = %while.body, %if.then
  %4 = phi i8 [ 1, %while.body ], [ %.pre, %if.then ], !dbg !4779
  call void @llvm.dbg.value(metadata i8 %4, metadata !4765, metadata !DIExpression()), !dbg !4771
  %tobool4 = icmp eq i8 %4, 0, !dbg !4779
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4781

if.then5:                                         ; preds = %if.end
  call fastcc void @remove_structure(i32 %i.0) #7, !dbg !4782
  br label %if.end6, !dbg !4782

if.else:                                          ; preds = %if.end
  %inc = add i32 %i.0, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4764, metadata !DIExpression()), !dbg !4768
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %i.1 = phi i32 [ %inc, %if.else ], [ %i.0, %if.then5 ], !dbg !4768
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4764, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i8* %safe_p, metadata !4765, metadata !DIExpression(DW_OP_deref)), !dbg !4771
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %safe_p) #8, !dbg !4784
  br label %while.cond, !dbg !4769, !llvm.loop !4785

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4786
  ret void, !dbg !4786
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_accesses() unnamed_addr #5 !dbg !4787 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4791
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4792
  %tobool = icmp eq %struct._IO_FILE* %1, null, !dbg !4792
  br i1 %tobool, label %cleanup, label %for.cond.preheader, !dbg !4794

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !4795

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %i.0 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], !dbg !4797
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4790, metadata !DIExpression()), !dbg !4798
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4799
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !4799
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !4789, metadata !DIExpression(DW_OP_deref)), !dbg !4798
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !4799
  %tobool2 = icmp eq i32 %call, 0, !dbg !4795
  br i1 %tobool2, label %cleanup.loopexit, label %for.body, !dbg !4795

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4801
  call void @llvm.dbg.value(metadata %struct.data_structure* %3, metadata !4789, metadata !DIExpression()), !dbg !4798
  call fastcc void @dump_accs(%struct.data_structure* %3) #7, !dbg !4802
  %inc = add i32 %i.0, 1, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4790, metadata !DIExpression()), !dbg !4798
  br label %for.cond, !dbg !4804, !llvm.loop !4805

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !4807

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4807
  ret void, !dbg !4807
}

; Function Attrs: nounwind uwtable
define internal fastcc void @collect_accesses_in_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !4808 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %wi = alloca %struct.walk_stmt_info, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4812, metadata !DIExpression()), !dbg !4819
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4820
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4820
  %1 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !4821
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #8, !dbg !4821
  %call = call i8* @memset(i8* nonnull %1, i32 0, i64 56) #6, !dbg !4822
  %2 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4823
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4823
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %bb) #7, !dbg !4823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !4823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !4823
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !4824
  %3 = bitcast i8** %info to %union.gimple_statement_d**, !dbg !4824
  br label %for.cond, !dbg !4825

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4813, metadata !DIExpression(DW_OP_deref)), !dbg !4819
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4826
  %tobool = icmp eq i8 %call1, 0, !dbg !4827
  br i1 %tobool, label %for.body, label %for.end, !dbg !4828

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4813, metadata !DIExpression(DW_OP_deref)), !dbg !4819
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #7, !dbg !4829
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !4815, metadata !DIExpression()), !dbg !4824
  %call3 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %call2) #7, !dbg !4830
  %cmp = icmp eq i32 %call3, 7, !dbg !4832
  br i1 %cmp, label %if.then, label %if.end, !dbg !4833

if.then:                                          ; preds = %for.body
  call fastcc void @free_structures() #7, !dbg !4834
  br label %cleanup, !dbg !4836

if.end:                                           ; preds = %for.body
  store %union.gimple_statement_d* %call2, %union.gimple_statement_d** %3, align 8, !dbg !4837
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !4814, metadata !DIExpression(DW_OP_deref)), !dbg !4819
  %call4 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %call2, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @get_stmt_accesses, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !4838
  br label %cleanup, !dbg !4839

cleanup:                                          ; preds = %if.end, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.end ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %for.end

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4813, metadata !DIExpression(DW_OP_deref)), !dbg !4819
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #7, !dbg !4840
  br label %for.cond, !dbg !4841, !llvm.loop !4842

for.end:                                          ; preds = %cleanup, %for.cond
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #8, !dbg !4844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !4844
  ret void, !dbg !4844
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4845 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4849, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4850, metadata !DIExpression()), !dbg !4853
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #7, !dbg !4854
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4851, metadata !DIExpression()), !dbg !4852
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #7, !dbg !4855
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4856
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4857
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4858
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4859
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4860
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4861
  ret void, !dbg !4862
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4863 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4867, metadata !DIExpression()), !dbg !4868
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4869
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4869
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4870
  %conv1 = zext i1 %cmp to i8, !dbg !4871
  ret i8 %conv1, !dbg !4872
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4873 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4877, metadata !DIExpression()), !dbg !4878
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4879
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4879
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4880
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4880
  ret %union.gimple_statement_d* %1, !dbg !4881
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_structures() unnamed_addr #5 !dbg !4882 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4886
  call void @llvm.dbg.value(metadata i32 0, metadata !4885, metadata !DIExpression()), !dbg !4887
  br label %for.cond, !dbg !4888

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !4890
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4885, metadata !DIExpression()), !dbg !4887
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4891
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !4891
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !4884, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !4891
  %tobool1 = icmp eq i32 %call, 0, !dbg !4893
  br i1 %tobool1, label %for.end, label %for.body, !dbg !4893

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !4884, metadata !DIExpression()), !dbg !4887
  call fastcc void @free_data_struct(%struct.data_structure* %2) #7, !dbg !4895
  %inc = add i32 %i.0, 1, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4885, metadata !DIExpression()), !dbg !4887
  br label %for.cond, !dbg !4897, !llvm.loop !4898

for.end:                                          ; preds = %for.cond
  call fastcc void @VEC_structure_heap_free(%struct.VEC_structure_heap** nonnull @structures) #7, !dbg !4900
  store %struct.VEC_structure_heap* null, %struct.VEC_structure_heap** @structures, align 8, !dbg !4901
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !4902
  ret void, !dbg !4902
}

declare dso_local %union.tree_node* @walk_gimple_op(%union.gimple_statement_d*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @get_stmt_accesses(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !4903 {
entry:
  %t135 = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !4908, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !4909, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %data, metadata !4910, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %data, metadata !4911, metadata !DIExpression()), !dbg !4953
  %info = getelementptr inbounds i8, i8* %data, i64 24, !dbg !4954
  %0 = bitcast i8* %info to %union.gimple_statement_d**, !dbg !4954
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !4954
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !4912, metadata !DIExpression()), !dbg !4953
  %2 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !4955
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4913, metadata !DIExpression()), !dbg !4953
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !4956
  br i1 %tobool, label %cleanup175, label %if.end, !dbg !4958

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4959
  %bf.load = load i64, i64* %3, align 8, !dbg !4959
  %4 = trunc i64 %bf.load to i16, !dbg !4959
  switch i16 %4, label %cleanup175 [
    i16 42, label %sw.bb
    i16 41, label %sw.bb27
    i16 56, label %sw.bb122
    i16 32, label %sw.bb141
    i16 141, label %sw.bb141
  ], !dbg !4960

sw.bb:                                            ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4961
  %5 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4961
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4914, metadata !DIExpression()), !dbg !4962
  %call = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %5) #7, !dbg !4963
  %call1 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call) #7, !dbg !4963
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !4963
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !4963
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4917, metadata !DIExpression()), !dbg !4962
  %call3 = tail call fastcc i32 @find_structure(%union.tree_node* %7) #7, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %call3, metadata !4918, metadata !DIExpression()), !dbg !4962
  %8 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4965
  %base5 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %8, i64 0, i32 0, !dbg !4965
  %call6 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base5) #7, !dbg !4965
  %cmp = icmp eq i32 %call3, %call6, !dbg !4966
  br i1 %cmp, label %cleanup175, label %if.then7, !dbg !4967

if.then7:                                         ; preds = %sw.bb
  %call8 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %1) #7, !dbg !4968
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4968
  br i1 %tobool9, label %if.end18, label %if.then10, !dbg !4969

if.then10:                                        ; preds = %if.then7
  %9 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !4970
  %base13 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %9, i64 0, i32 0, !dbg !4970
  %call17 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base13, i32 %call3) #7, !dbg !4970
  call void @llvm.dbg.value(metadata %struct.data_structure* %call17, metadata !4919, metadata !DIExpression()), !dbg !4971
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %call17, i64 0, i32 4, !dbg !4972
  %10 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !4972
  tail call fastcc void @add_access_to_acc_sites(%union.gimple_statement_d* %1, %union.tree_node* null, %struct.htab* %10) #7, !dbg !4973
  store i32 0, i32* %walk_subtrees, align 4, !dbg !4974
  br label %cleanup175

if.end18:                                         ; preds = %if.then7
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4975
  %tobool19 = icmp eq %struct._IO_FILE* %11, null, !dbg !4975
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !4977

if.then20:                                        ; preds = %if.end18
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !4978
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4980
  tail call void @print_generic_expr(%struct._IO_FILE* %12, %union.tree_node* %7, i32 0) #6, !dbg !4981
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4982
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !4983
  br label %if.end23, !dbg !4984

if.end23:                                         ; preds = %if.end18, %if.then20
  tail call fastcc void @remove_structure(i32 %call3) #7, !dbg !4985
  br label %cleanup175, !dbg !4986

sw.bb27:                                          ; preds = %if.end
  %operands29 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4987
  %14 = load %union.tree_node*, %union.tree_node** %operands29, align 8, !dbg !4987
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !4924, metadata !DIExpression()), !dbg !4988
  %arrayidx33 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands29, i64 1, !dbg !4989
  %15 = load %union.tree_node*, %union.tree_node** %arrayidx33, align 8, !dbg !4989
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4926, metadata !DIExpression()), !dbg !4988
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4990
  %bf.load35 = load i64, i64* %16, align 8, !dbg !4990
  %bf.cast375 = and i64 %bf.load35, 65535, !dbg !4991
  %cmp38 = icmp eq i64 %bf.cast375, 47, !dbg !4991
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false, !dbg !4992

lor.lhs.false:                                    ; preds = %sw.bb27
  %cmp43 = icmp eq i64 %bf.cast375, 45, !dbg !4993
  br i1 %cmp43, label %land.lhs.true, label %lor.lhs.false44, !dbg !4994

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %cmp49 = icmp eq i64 %bf.cast375, 32, !dbg !4995
  br i1 %cmp49, label %land.lhs.true, label %cleanup118, !dbg !4996

land.lhs.true:                                    ; preds = %lor.lhs.false44, %lor.lhs.false, %sw.bb27
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4997
  %bf.load51 = load i64, i64* %17, align 8, !dbg !4997
  %bf.cast538 = and i64 %bf.load51, 65535, !dbg !4998
  %cmp54 = icmp eq i64 %bf.cast538, 31, !dbg !4998
  br i1 %cmp54, label %if.then55, label %cleanup118, !dbg !4999

if.then55:                                        ; preds = %land.lhs.true
  %type57 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5000
  %18 = bitcast %union.tree_node** %type57 to %struct.tree_type**, !dbg !5000
  %19 = load %struct.tree_type*, %struct.tree_type** %18, align 8, !dbg !5000
  %main_variant59 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %19, i64 0, i32 16, !dbg !5000
  %20 = load %union.tree_node*, %union.tree_node** %main_variant59, align 8, !dbg !5000
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !4927, metadata !DIExpression()), !dbg !5001
  %call61 = tail call fastcc i32 @find_structure(%union.tree_node* %20) #7, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %call61, metadata !4930, metadata !DIExpression()), !dbg !5001
  %21 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5003
  %base64 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %21, i64 0, i32 0, !dbg !5003
  %call68 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base64) #7, !dbg !5003
  %cmp69 = icmp eq i32 %call61, %call68, !dbg !5004
  br i1 %cmp69, label %cleanup113, label %if.then70, !dbg !5005

if.then70:                                        ; preds = %if.then55
  %22 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5006
  %base74 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %22, i64 0, i32 0, !dbg !5006
  %call78 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base74, i32 %call61) #7, !dbg !5006
  call void @llvm.dbg.value(metadata %struct.data_structure* %call78, metadata !4931, metadata !DIExpression()), !dbg !5007
  %call79 = tail call fastcc %struct.field_entry* @find_field_in_struct(%struct.data_structure* %call78, %union.tree_node* %15) #7, !dbg !5008
  call void @llvm.dbg.value(metadata %struct.field_entry* %call79, metadata !4934, metadata !DIExpression()), !dbg !5007
  %call80 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %1) #7, !dbg !5009
  %tobool81 = icmp eq i8 %call80, 0, !dbg !5009
  br i1 %tobool81, label %if.end84, label %if.then82, !dbg !5011

if.then82:                                        ; preds = %if.then70
  %accs83 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %call78, i64 0, i32 4, !dbg !5012
  %23 = load %struct.htab*, %struct.htab** %accs83, align 8, !dbg !5012
  tail call fastcc void @add_access_to_acc_sites(%union.gimple_statement_d* %1, %union.tree_node* null, %struct.htab* %23) #7, !dbg !5014
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5015
  br label %cleanup108, !dbg !5016

if.end84:                                         ; preds = %if.then70
  %tobool85 = icmp eq %struct.field_entry* %call79, null, !dbg !5017
  br i1 %tobool85, label %cleanup108, label %if.then86, !dbg !5018

if.then86:                                        ; preds = %if.end84
  %call87 = tail call fastcc %struct.field_access_site* @make_field_acc_node() #7, !dbg !5019
  call void @llvm.dbg.value(metadata %struct.field_access_site* %call87, metadata !4935, metadata !DIExpression()), !dbg !5020
  %tobool88 = icmp eq %struct.field_access_site* %call87, null, !dbg !5021
  br i1 %tobool88, label %cond.true89, label %cond.end91, !dbg !5021

cond.true89:                                      ; preds = %if.then86
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 2556, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5021
  br label %cond.end91, !dbg !5021

cond.end91:                                       ; preds = %if.then86, %cond.true89
  %stmt93 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %call87, i64 0, i32 0, !dbg !5022
  store %union.gimple_statement_d* %1, %union.gimple_statement_d** %stmt93, align 8, !dbg !5023
  %comp_ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %call87, i64 0, i32 1, !dbg !5024
  store %union.tree_node* %2, %union.tree_node** %comp_ref, align 8, !dbg !5025
  %ref94 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %call87, i64 0, i32 3, !dbg !5026
  store %union.tree_node* %14, %union.tree_node** %ref94, align 8, !dbg !5027
  %field_decl95 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %call87, i64 0, i32 2, !dbg !5028
  store %union.tree_node* %15, %union.tree_node** %field_decl95, align 8, !dbg !5029
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %call78, i64 0, i32 0, !dbg !5030
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5030
  %call96 = tail call fastcc zeroext i8 @decompose_access(%union.tree_node* %24, %struct.field_access_site* %call87) #7, !dbg !5031
  %tobool97 = icmp eq i8 %call96, 0, !dbg !5031
  br i1 %tobool97, label %if.then98, label %if.else, !dbg !5032

if.then98:                                        ; preds = %cond.end91
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5033
  %tobool99 = icmp eq %struct._IO_FILE* %25, null, !dbg !5033
  br i1 %tobool99, label %if.end103, label %if.then100, !dbg !5036

if.then100:                                       ; preds = %if.then98
  %call101 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5037
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5039
  tail call void @print_generic_expr(%struct._IO_FILE* %26, %union.tree_node* %20, i32 0) #6, !dbg !5040
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5041
  %call102 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5042
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5043
  tail call void @print_gimple_stmt(%struct._IO_FILE* %28, %union.gimple_statement_d* %1, i32 0, i32 0) #6, !dbg !5044
  br label %if.end103, !dbg !5045

if.end103:                                        ; preds = %if.then98, %if.then100
  tail call fastcc void @remove_structure(i32 %call61) #7, !dbg !5046
  %29 = bitcast %struct.field_access_site* %call87 to i8*, !dbg !5047
  tail call void @free(i8* %29) #6, !dbg !5048
  br label %if.end106, !dbg !5049

if.else:                                          ; preds = %cond.end91
  %call104 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %1) #7, !dbg !5050
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call104, metadata !4938, metadata !DIExpression()), !dbg !5051
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call104, i64 0, i32 8, !dbg !5052
  %30 = load i64, i64* %count, align 8, !dbg !5052
  %count105 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %call79, i64 0, i32 1, !dbg !5053
  %31 = load i64, i64* %count105, align 8, !dbg !5054
  %add = add nsw i64 %31, %30, !dbg !5054
  store i64 %add, i64* %count105, align 8, !dbg !5054
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %call79, i64 0, i32 4, !dbg !5055
  %32 = load %struct.htab*, %struct.htab** %acc_sites, align 8, !dbg !5055
  tail call fastcc void @add_field_acc_to_acc_sites(%struct.field_access_site* %call87, %struct.htab* %32) #7, !dbg !5056
  br label %if.end106

if.end106:                                        ; preds = %if.else, %if.end103
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5057
  br label %cleanup108, !dbg !5058

cleanup108:                                       ; preds = %if.end84, %if.end106, %if.then82
  ret %union.tree_node* null

cleanup113:                                       ; preds = %if.then55
  ret %union.tree_node* null

cleanup118:                                       ; preds = %lor.lhs.false44, %land.lhs.true
  ret %union.tree_node* null

sw.bb122:                                         ; preds = %if.end
  %operands125 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5059
  %33 = load %union.tree_node*, %union.tree_node** %operands125, align 8, !dbg !5059
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !4941, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i32 0, metadata !4943, metadata !DIExpression()), !dbg !5060
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5061
  %35 = bitcast %union.tree_node** %t135 to i8*, !dbg !5062
  %operands137 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5062
  %36 = bitcast %union.tree_node** %t135 to i64*, !dbg !5062
  br label %for.cond, !dbg !5063

for.cond:                                         ; preds = %for.body, %sw.bb122
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %sw.bb122 ], !dbg !5064
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4943, metadata !DIExpression()), !dbg !5060
  %bf.load129 = load i64, i64* %34, align 8, !dbg !5065
  %bf.cast131 = and i64 %bf.load129, 65535, !dbg !5065
  %arrayidx132 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast131, !dbg !5065
  %37 = load i8, i8* %arrayidx132, align 1, !dbg !5065
  %38 = zext i8 %37 to i64, !dbg !5066
  %cmp133 = icmp ult i64 %indvars.iv, %38, !dbg !5066
  br i1 %cmp133, label %for.body, label %for.end, !dbg !5067

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8, !dbg !5068
  %arrayidx139 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands137, i64 %indvars.iv, !dbg !5069
  %39 = bitcast %union.tree_node** %arrayidx139 to i64*, !dbg !5069
  %40 = load i64, i64* %39, align 8, !dbg !5069
  store i64 %40, i64* %36, align 8, !dbg !5070
  store i32 1, i32* %walk_subtrees, align 4, !dbg !5071
  call void @llvm.dbg.value(metadata %union.tree_node** %t135, metadata !4944, metadata !DIExpression(DW_OP_deref)), !dbg !5062
  %call140 = call %union.tree_node* @walk_tree_1(%union.tree_node** nonnull %t135, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @get_stmt_accesses, i8* %data, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !5072
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8, !dbg !5073
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5074
  call void @llvm.dbg.value(metadata i32 undef, metadata !4943, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5060
  br label %for.cond, !dbg !5075, !llvm.loop !5076

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5078
  br label %cleanup175, !dbg !5079

sw.bb141:                                         ; preds = %if.end, %if.end
  %bf.cast1464 = and i64 %bf.load, 65535, !dbg !5080
  %cmp147 = icmp eq i64 %bf.cast1464, 141, !dbg !5080
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !5082

if.then149:                                       ; preds = %sw.bb141
  %var150 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5083
  %41 = bitcast i32* %var150 to %union.tree_node**, !dbg !5083
  %42 = load %union.tree_node*, %union.tree_node** %41, align 8, !dbg !5083
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !4913, metadata !DIExpression()), !dbg !4953
  br label %if.end151, !dbg !5084

if.end151:                                        ; preds = %if.then149, %sw.bb141
  %t.0 = phi %union.tree_node* [ %42, %if.then149 ], [ %2, %sw.bb141 ], !dbg !4953
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !4913, metadata !DIExpression()), !dbg !4953
  %call152 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %t.0) #7, !dbg !5085
  %call153 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call152) #7, !dbg !5086
  %call154 = tail call fastcc i32 @find_structure(%union.tree_node* %call153) #7, !dbg !5087
  call void @llvm.dbg.value(metadata i32 %call154, metadata !4948, metadata !DIExpression()), !dbg !5088
  %43 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5089
  %base157 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %43, i64 0, i32 0, !dbg !5089
  %call161 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base157) #7, !dbg !5089
  %cmp162 = icmp eq i32 %call154, %call161, !dbg !5090
  br i1 %cmp162, label %if.end174, label %if.then164, !dbg !5091

if.then164:                                       ; preds = %if.end151
  %44 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5092
  %base168 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %44, i64 0, i32 0, !dbg !5092
  %call172 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base168, i32 %call154) #7, !dbg !5092
  call void @llvm.dbg.value(metadata %struct.data_structure* %call172, metadata !4950, metadata !DIExpression()), !dbg !5093
  %accs173 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %call172, i64 0, i32 4, !dbg !5094
  %45 = load %struct.htab*, %struct.htab** %accs173, align 8, !dbg !5094
  tail call fastcc void @add_access_to_acc_sites(%union.gimple_statement_d* %1, %union.tree_node* %t.0, %struct.htab* %45) #7, !dbg !5095
  br label %if.end174, !dbg !5096

if.end174:                                        ; preds = %if.end151, %if.then164
  store i32 0, i32* %walk_subtrees, align 4, !dbg !5097
  br label %cleanup175, !dbg !5098

cleanup175:                                       ; preds = %sw.bb, %entry, %if.then10, %if.end23, %for.end, %if.end174, %if.end
  ret %union.tree_node* null, !dbg !5099
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !5100 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !5105, metadata !DIExpression()), !dbg !5106
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !5107
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5107
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !5108
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !5108
  %2 = load i64, i64* %1, align 8, !dbg !5108
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !5109
  store i64 %2, i64* %3, align 8, !dbg !5109
  ret void, !dbg !5110
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5111 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5118, metadata !DIExpression()), !dbg !5119
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !5120
  %0 = load i32, i32* %flags, align 8, !dbg !5120
  %and = and i32 %0, 512, !dbg !5121
  %tobool = icmp eq i32 %and, 0, !dbg !5121
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !5122

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !5123
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !5123
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !5124
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !5125

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !5126
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !5126
  br label %cond.end, !dbg !5125

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !5125
  ret %struct.gimple_seq_d* %cond, !dbg !5127
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5128 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5135, metadata !DIExpression()), !dbg !5136
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5137
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5137

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5138
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5138
  br label %cond.end, !dbg !5137

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5137
  ret %struct.gimple_seq_node_d* %cond, !dbg !5139
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_structure_heap_free(%struct.VEC_structure_heap** %vec_) unnamed_addr #0 !dbg !5140 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_structure_heap** @structures, metadata !5144, metadata !DIExpression()), !dbg !5145
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5146
  %tobool = icmp eq %struct.VEC_structure_heap* %0, null, !dbg !5146
  br i1 %tobool, label %if.end, label %if.then, !dbg !5148

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_structure_heap* %0 to i8*, !dbg !5148
  tail call void @free(i8* nonnull %1) #6, !dbg !5146
  br label %if.end, !dbg !5146

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_structure_heap* null, %struct.VEC_structure_heap** @structures, align 8, !dbg !5148
  ret void, !dbg !5148
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_access_to_acc_sites(%union.gimple_statement_d* %stmt, %union.tree_node* %var, %struct.htab* %accs) unnamed_addr #5 !dbg !5149 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5153, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5154, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata %struct.htab* %accs, metadata !5155, metadata !DIExpression()), !dbg !5160
  %0 = bitcast %union.gimple_statement_d* %stmt to i8*, !dbg !5161
  %1 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5162
  %call = tail call i32 %1(i8* %0) #6, !dbg !5162
  %call1 = tail call i8* @htab_find_with_hash(%struct.htab* %accs, i8* %0, i32 %call) #6, !dbg !5163
  call void @llvm.dbg.value(metadata i8* %call1, metadata !5156, metadata !DIExpression()), !dbg !5160
  %tobool = icmp eq i8* %call1, null, !dbg !5164
  br i1 %tobool, label %if.then, label %if.end11, !dbg !5165

if.then:                                          ; preds = %entry
  %call2 = tail call i8* @xmalloc(i64 16) #6, !dbg !5166
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5156, metadata !DIExpression()), !dbg !5160
  %stmt3 = bitcast i8* %call2 to %union.gimple_statement_d**, !dbg !5167
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt3, align 8, !dbg !5168
  %call4 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !5169
  %tobool5 = icmp eq i8 %call4, 0, !dbg !5169
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !5171

if.then6:                                         ; preds = %if.then
  %call7 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 10) #7, !dbg !5172
  %vars = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !5173
  %2 = bitcast i8* %vars to %struct.VEC_tree_heap**, !dbg !5173
  store %struct.VEC_tree_heap* %call7, %struct.VEC_tree_heap** %2, align 8, !dbg !5174
  br label %if.end, !dbg !5175

if.else:                                          ; preds = %if.then
  %vars8 = getelementptr inbounds i8, i8* %call2, i64 8, !dbg !5176
  %3 = bitcast i8* %vars8 to %struct.VEC_tree_heap**, !dbg !5176
  store %struct.VEC_tree_heap* null, %struct.VEC_tree_heap** %3, align 8, !dbg !5177
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %4 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5178
  %call9 = tail call i32 %4(i8* %0) #6, !dbg !5178
  %call10 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %accs, i8* %0, i32 %call9, i32 1) #6, !dbg !5179
  call void @llvm.dbg.value(metadata i8** %call10, metadata !5157, metadata !DIExpression()), !dbg !5180
  store i8* %call2, i8** %call10, align 8, !dbg !5181
  br label %if.end11, !dbg !5182

if.end11:                                         ; preds = %entry, %if.end
  %acc.0.in = phi i8* [ %call1, %entry ], [ %call2, %if.end ]
  call void @llvm.dbg.value(metadata i8* %acc.0.in, metadata !5156, metadata !DIExpression()), !dbg !5160
  %call12 = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %stmt) #7, !dbg !5183
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5183
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !5185

if.then14:                                        ; preds = %if.end11
  call void @llvm.dbg.value(metadata i8* %acc.0.in, metadata !5156, metadata !DIExpression()), !dbg !5160
  %vars15 = getelementptr inbounds i8, i8* %acc.0.in, i64 8, !dbg !5186
  %5 = bitcast i8* %vars15 to %struct.VEC_tree_heap**, !dbg !5186
  %call16 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %5, %union.tree_node* %var) #7, !dbg !5186
  br label %if.end17, !dbg !5186

if.end17:                                         ; preds = %if.end11, %if.then14
  ret void, !dbg !5187
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.field_entry* @find_field_in_struct(%struct.data_structure* %str, %union.tree_node* %field_decl) unnamed_addr #5 !dbg !5188 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !5192, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata %union.tree_node* %field_decl, metadata !5193, metadata !DIExpression()), !dbg !5196
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !5197
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5197
  %call = tail call fastcc %union.tree_node* @find_field_in_struct_1(%union.tree_node* %0, %union.tree_node* %field_decl) #7, !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5196
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !5199
  %1 = load i32, i32* %num_fields, align 8, !dbg !5199
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !5202
  %2 = sext i32 %1 to i64, !dbg !5204
  br label %for.cond, !dbg !5204

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5205
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5194, metadata !DIExpression()), !dbg !5196
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !5206
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !5207

for.body:                                         ; preds = %for.cond
  %3 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !5208
  %decl1 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %3, i64 %indvars.iv, i32 2, !dbg !5209
  %4 = load %union.tree_node*, %union.tree_node** %decl1, align 8, !dbg !5209
  %cmp2 = icmp eq %union.tree_node* %4, %call, !dbg !5210
  br i1 %cmp2, label %if.then, label %for.inc, !dbg !5211

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.field_entry* [ %3, %for.body ], !dbg !5208
  %indvars.iv.lcssa2 = phi i64 [ %indvars.iv, %for.body ], !dbg !5205
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa2, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa2, metadata !5194, metadata !DIExpression()), !dbg !5196
  %arrayidx5 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %.lcssa, i64 %indvars.iv.lcssa2, !dbg !5212
  br label %cleanup, !dbg !5213

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5214
  call void @llvm.dbg.value(metadata i32 undef, metadata !5194, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5196
  br label %for.cond, !dbg !5215, !llvm.loop !5216

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5218

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi %struct.field_entry* [ %arrayidx5, %if.then ], [ null, %cleanup.loopexit ], !dbg !5196
  ret %struct.field_entry* %retval.0, !dbg !5218
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.field_access_site* @make_field_acc_node() unnamed_addr #0 !dbg !5219 {
entry:
  %call = tail call i8* @xcalloc(i64 1, i64 72) #6, !dbg !5222
  %0 = bitcast i8* %call to %struct.field_access_site*, !dbg !5222
  ret %struct.field_access_site* %0, !dbg !5223
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @decompose_access(%union.tree_node* %str_decl, %struct.field_access_site* %acc) unnamed_addr #5 !dbg !5224 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %str_decl, metadata !5228, metadata !DIExpression()), !dbg !5230
  call void @llvm.dbg.value(metadata %struct.field_access_site* %acc, metadata !5229, metadata !DIExpression()), !dbg !5230
  %ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 3, !dbg !5231
  %0 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !5231
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5231
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5231
  br i1 %tobool, label %cond.true, label %entry.cond.end_crit_edge, !dbg !5231

entry.cond.end_crit_edge:                         ; preds = %entry
  br label %cond.end, !dbg !5231

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 433, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5231
  %.phi.trans.insert = bitcast %union.tree_node** %ref to i64**, !dbg !5232
  %.pre = load i64*, i64** %.phi.trans.insert, align 8, !dbg !5234
  br label %cond.end, !dbg !5231

cond.end:                                         ; preds = %entry.cond.end_crit_edge, %cond.true
  %2 = phi i64* [ %1, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ]
  %3 = phi i64* [ %1, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ]
  %4 = phi i64* [ %1, %entry.cond.end_crit_edge ], [ %.pre, %cond.true ], !dbg !5234
  %bf.load = load i64, i64* %4, align 8, !dbg !5234
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5235
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !5235
  br i1 %cmp, label %if.then, label %if.else, !dbg !5236

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc zeroext i8 @decompose_indirect_ref_acc(%union.tree_node* %str_decl, %struct.field_access_site* %acc) #7, !dbg !5237
  br label %return, !dbg !5238

if.else:                                          ; preds = %cond.end
  %bf.load4 = load i64, i64* %3, align 8, !dbg !5239
  %bf.cast62 = and i64 %bf.load4, 65535, !dbg !5241
  %cmp7 = icmp eq i64 %bf.cast62, 45, !dbg !5241
  br i1 %cmp7, label %return, label %if.else9, !dbg !5242

if.else9:                                         ; preds = %if.else
  %bf.load12 = load i64, i64* %2, align 8, !dbg !5243
  %bf.cast143 = and i64 %bf.load12, 65535, !dbg !5245
  %cmp15 = icmp eq i64 %bf.cast143, 32, !dbg !5245
  %spec.select = zext i1 %cmp15 to i8, !dbg !5246
  ret i8 %spec.select, !dbg !5246

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ 1, %if.else ], !dbg !5230
  ret i8 %retval.0, !dbg !5247
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5248 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5252, metadata !DIExpression()), !dbg !5253
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !5254
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5254
  ret %struct.basic_block_def* %0, !dbg !5255
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_field_acc_to_acc_sites(%struct.field_access_site* %acc, %struct.htab* %f_accs) unnamed_addr #5 !dbg !5256 {
entry:
  call void @llvm.dbg.value(metadata %struct.field_access_site* %acc, metadata !5260, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata %struct.htab* %f_accs, metadata !5261, metadata !DIExpression()), !dbg !5263
  %stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 0, !dbg !5264
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5264
  %call = tail call fastcc %struct.field_access_site* @is_in_field_accs(%union.gimple_statement_d* %0, %struct.htab* %f_accs) #7, !dbg !5264
  %tobool = icmp eq %struct.field_access_site* %call, null, !dbg !5264
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5264

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 472, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5264
  br label %cond.end, !dbg !5264

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %struct.field_access_site* %acc to i8**, !dbg !5265
  %2 = load i8*, i8** %1, align 8, !dbg !5265
  %3 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5266
  %call3 = tail call i32 %3(i8* %2) #6, !dbg !5266
  %call4 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %f_accs, i8* %2, i32 %call3, i32 1) #6, !dbg !5267
  call void @llvm.dbg.value(metadata i8** %call4, metadata !5262, metadata !DIExpression()), !dbg !5263
  %4 = bitcast i8** %call4 to %struct.field_access_site**, !dbg !5268
  store %struct.field_access_site* %acc, %struct.field_access_site** %4, align 8, !dbg !5268
  ret void, !dbg !5269
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_field_in_struct_1(%union.tree_node* %str_type, %union.tree_node* %field) unnamed_addr #5 !dbg !5270 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %str_type, metadata !5274, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata %union.tree_node* %field, metadata !5275, metadata !DIExpression()), !dbg !5277
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %field, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5278
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5278
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !5278
  br i1 %tobool, label %cleanup, label %if.end, !dbg !5280

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %str_type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5281
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !5281
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.inc, %if.end
  %str_field.0.in = phi %union.tree_node** [ %1, %if.end ], [ %chain, %for.inc ]
  %str_field.0 = load %union.tree_node*, %union.tree_node** %str_field.0.in, align 8, !dbg !5284
  call void @llvm.dbg.value(metadata %union.tree_node* %str_field.0, metadata !5276, metadata !DIExpression()), !dbg !5277
  %tobool1 = icmp eq %union.tree_node* %str_field.0, null, !dbg !5285
  br i1 %tobool1, label %cleanup.loopexit, label %for.body, !dbg !5285

for.body:                                         ; preds = %for.cond
  %name3 = getelementptr inbounds %union.tree_node, %union.tree_node* %str_field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5286
  %2 = load %union.tree_node*, %union.tree_node** %name3, align 8, !dbg !5286
  %tobool4 = icmp eq %union.tree_node* %2, null, !dbg !5286
  br i1 %tobool4, label %for.inc, label %if.end6, !dbg !5290

if.end6:                                          ; preds = %for.body
  %call = tail call fastcc zeroext i8 @compare_fields(%union.tree_node* %field, %union.tree_node* nonnull %str_field.0) #7, !dbg !5291
  %tobool7 = icmp eq i8 %call, 0, !dbg !5291
  br i1 %tobool7, label %for.inc, label %cleanup.loopexit, !dbg !5293

for.inc:                                          ; preds = %if.end6, %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %str_field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5294
  br label %for.cond, !dbg !5295, !llvm.loop !5296

cleanup.loopexit:                                 ; preds = %for.cond, %if.end6
  %retval.0.ph = phi %union.tree_node* [ null, %for.cond ], [ %str_field.0, %if.end6 ]
  br label %cleanup, !dbg !5298

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !5277
  ret %union.tree_node* %retval.0, !dbg !5298
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @decompose_indirect_ref_acc(%union.tree_node* %str_decl, %struct.field_access_site* %acc) unnamed_addr #5 !dbg !5299 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %str_decl, metadata !5301, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata %struct.field_access_site* %acc, metadata !5302, metadata !DIExpression()), !dbg !5309
  %ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 3, !dbg !5310
  %0 = bitcast %union.tree_node** %ref to %struct.tree_exp**, !dbg !5310
  %1 = load %struct.tree_exp*, %struct.tree_exp** %0, align 8, !dbg !5310
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %1, i64 0, i32 3, i64 0, !dbg !5310
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5310
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5303, metadata !DIExpression()), !dbg !5309
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5311
  %bf.load = load i64, i64* %3, align 8, !dbg !5311
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5313
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5313
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5314

if.end:                                           ; preds = %entry
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5315
  %4 = bitcast %union.tree_node** %def_stmt to i64*, !dbg !5315
  %5 = load i64, i64* %4, align 8, !dbg !5315
  %ref_def_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 7, !dbg !5316
  %6 = bitcast %union.gimple_statement_d** %ref_def_stmt to i64*, !dbg !5317
  store i64 %5, i64* %6, align 8, !dbg !5317
  %tobool = icmp eq i64 %5, 0, !dbg !5318
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !5320

lor.lhs.false:                                    ; preds = %if.end
  %7 = inttoptr i64 %5 to %union.gimple_statement_d*, !dbg !5320
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %7) #7, !dbg !5321
  %cmp3 = icmp eq i32 %call, 6, !dbg !5322
  br i1 %cmp3, label %if.end5, label %cleanup, !dbg !5323

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !5324
  %call7 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %8) #7, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %call7, metadata !5308, metadata !DIExpression()), !dbg !5309
  switch i32 %call7, label %cleanup [
    i32 63, label %if.end13
    i32 64, label %if.end13
    i32 66, label %if.end13
  ], !dbg !5326

if.end13:                                         ; preds = %if.end5, %if.end5, %if.end5
  %9 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !5328
  %call15 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %9) #7, !dbg !5329
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5305, metadata !DIExpression()), !dbg !5309
  %10 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !5330
  %call17 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %10) #7, !dbg !5331
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5306, metadata !DIExpression()), !dbg !5309
  %base18 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 6, !dbg !5332
  %offset = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 5, !dbg !5334
  %cast_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 8, !dbg !5335
  %call19 = tail call zeroext i8 @is_array_access_through_pointer_and_index(i32 %call7, %union.tree_node* %call15, %union.tree_node* %call17, %union.tree_node** nonnull %base18, %union.tree_node** nonnull %offset, %union.gimple_statement_d** nonnull %cast_stmt) #6, !dbg !5336
  %tobool20 = icmp eq i8 %call19, 0, !dbg !5336
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !5337

if.end22:                                         ; preds = %if.end13
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cast_stmt, align 8, !dbg !5338
  %tobool24 = icmp eq %union.gimple_statement_d* %11, null, !dbg !5340
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !5341

if.then25:                                        ; preds = %if.end22
  %call27 = tail call fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* nonnull %11, i32 1) #7, !dbg !5342
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !5307, metadata !DIExpression()), !dbg !5309
  br label %if.end29, !dbg !5343

if.else:                                          ; preds = %if.end22
  %12 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !5344
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5307, metadata !DIExpression()), !dbg !5309
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then25
  %before_cast.0 = phi %union.tree_node* [ %call27, %if.then25 ], [ %12, %if.else ], !dbg !5345
  call void @llvm.dbg.value(metadata %union.tree_node* %before_cast.0, metadata !5307, metadata !DIExpression()), !dbg !5309
  %tobool30 = icmp eq %union.tree_node* %before_cast.0, null, !dbg !5346
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !5348

if.end32:                                         ; preds = %if.end29
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %before_cast.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5349
  %bf.load34 = load i64, i64* %13, align 8, !dbg !5349
  %bf.cast362 = and i64 %bf.load34, 4294967296, !dbg !5349
  %tobool37 = icmp eq i64 %bf.cast362, 0, !dbg !5349
  br i1 %tobool37, label %if.end39, label %cleanup, !dbg !5351

if.end39:                                         ; preds = %if.end32
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %str_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5352
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !5352
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !5304, metadata !DIExpression()), !dbg !5309
  %num = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 4, !dbg !5353
  %call40 = tail call fastcc zeroext i8 @is_result_of_mult(%union.tree_node* nonnull %before_cast.0, %union.tree_node** nonnull %num, %union.tree_node* %15) #7, !dbg !5355
  %tobool41 = icmp ne i8 %call40, 0, !dbg !5355
  %. = zext i1 %tobool41 to i8, !dbg !5309
  br label %cleanup, !dbg !5309

cleanup:                                          ; preds = %if.end32, %if.end29, %if.end13, %lor.lhs.false, %if.end, %entry, %if.end39, %if.end5
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %lor.lhs.false ], [ 0, %if.end ], [ 0, %if.end5 ], [ 0, %if.end13 ], [ 0, %if.end29 ], [ 0, %if.end32 ], [ %., %if.end39 ], !dbg !5309
  ret i8 %retval.0, !dbg !5356
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5357 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5361, metadata !DIExpression()), !dbg !5363
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #7, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %call, metadata !5362, metadata !DIExpression()), !dbg !5363
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #7, !dbg !5365
  %cmp = icmp eq i32 %call1, 3, !dbg !5367
  br i1 %cmp, label %if.then, label %if.end, !dbg !5368

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #7, !dbg !5369
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5369
  %bf.load = load i64, i64* %0, align 8, !dbg !5369
  %1 = trunc i64 %bf.load to i32, !dbg !5369
  %bf.cast = and i32 %1, 65535, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !5362, metadata !DIExpression()), !dbg !5363
  br label %if.end, !dbg !5370

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !5363
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5362, metadata !DIExpression()), !dbg !5363
  ret i32 %code.0, !dbg !5371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5372 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5374, metadata !DIExpression()), !dbg !5375
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5376
  ret %union.tree_node* %call, !dbg !5377
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5378 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5380, metadata !DIExpression()), !dbg !5381
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !5382
  %cmp = icmp ugt i32 %call, 2, !dbg !5384
  br i1 %cmp, label %if.then, label %return, !dbg !5385

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 2) #7, !dbg !5386
  br label %return, !dbg !5387

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !5388
  ret %union.tree_node* %retval.0, !dbg !5389
}

declare dso_local zeroext i8 @is_array_access_through_pointer_and_index(i32, %union.tree_node*, %union.tree_node*, %union.tree_node**, %union.tree_node**, %union.gimple_statement_d**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @single_ssa_tree_operand(%union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5390 {
entry:
  %iter = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5394, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 1, metadata !5395, metadata !DIExpression()), !dbg !5410
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %iter, i64 0, i32 0, !dbg !5411
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5411
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call = call fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* nonnull %iter, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5412
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5396, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call1 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5413
  %tobool = icmp eq i8 %call1, 0, !dbg !5413
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5415

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call2 = call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5416
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %iter, metadata !5397, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %call3 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %iter) #7, !dbg !5417
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5417
  %call. = select i1 %tobool4, %union.tree_node* null, %union.tree_node* %call, !dbg !5410
  br label %cleanup, !dbg !5410

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call., %if.end ], !dbg !5410
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #8, !dbg !5419
  ret %union.tree_node* %retval.0, !dbg !5419
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_result_of_mult(%union.tree_node* %arg, %union.tree_node** %num, %union.tree_node* %struct_size) unnamed_addr #5 !dbg !5420 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !5424, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node** %num, metadata !5425, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %union.tree_node* %struct_size, metadata !5426, metadata !DIExpression()), !dbg !5435
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5436
  %0 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5436
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !5436
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !5427, metadata !DIExpression()), !dbg !5435
  %tobool = icmp eq %union.gimple_statement_d* %1, null, !dbg !5437
  br i1 %tobool, label %if.end24, label %land.lhs.true, !dbg !5438

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* nonnull %1) #7, !dbg !5439
  %tobool1 = icmp eq i8 %call, 0, !dbg !5439
  br i1 %tobool1, label %if.end24, label %if.then, !dbg !5440

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* nonnull %1) #7, !dbg !5441
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5428, metadata !DIExpression()), !dbg !5442
  %call3 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call2) #6, !dbg !5443
  %tobool4 = icmp eq i8 %call3, 0, !dbg !5443
  br i1 %tobool4, label %cleanup21, label %if.end, !dbg !5445

if.end:                                           ; preds = %if.then
  %call6 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* nonnull %1) #7, !dbg !5446
  %cmp = icmp eq i32 %call6, 65, !dbg !5447
  br i1 %cmp, label %if.then8, label %if.end20, !dbg !5448

if.then8:                                         ; preds = %if.end
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* nonnull %1) #7, !dbg !5449
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5431, metadata !DIExpression()), !dbg !5450
  %call10 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* nonnull %1) #7, !dbg !5451
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5434, metadata !DIExpression()), !dbg !5450
  %call11 = tail call i32 @operand_equal_p(%union.tree_node* %call9, %union.tree_node* %struct_size, i32 1) #6, !dbg !5452
  %tobool12 = icmp eq i32 %call11, 0, !dbg !5452
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !5454

if.then13:                                        ; preds = %if.then8
  store %union.tree_node* %call10, %union.tree_node** %num, align 8, !dbg !5455
  br label %cleanup, !dbg !5457

if.end14:                                         ; preds = %if.then8
  %call15 = tail call i32 @operand_equal_p(%union.tree_node* %call10, %union.tree_node* %struct_size, i32 1) #6, !dbg !5458
  %tobool16 = icmp eq i32 %call15, 0, !dbg !5458
  br i1 %tobool16, label %cleanup, label %if.then17, !dbg !5460

if.then17:                                        ; preds = %if.end14
  store %union.tree_node* %call9, %union.tree_node** %num, align 8, !dbg !5461
  br label %cleanup, !dbg !5463

cleanup:                                          ; preds = %if.end14, %if.then17, %if.then13
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then13 ], [ 1, %if.then17 ], [ 0, %if.end14 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end20, label %cleanup21

if.end20:                                         ; preds = %cleanup, %if.end
  br label %cleanup21, !dbg !5464

cleanup21:                                        ; preds = %if.then, %cleanup, %if.end20
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end20 ], [ 1, %if.then ]
  %retval.2 = phi i8 [ 1, %cleanup ], [ 1, %if.end20 ], [ 0, %if.then ], !dbg !5442
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end24, label %cleanup25

if.end24:                                         ; preds = %land.lhs.true, %entry, %cleanup21
  store %union.tree_node* null, %union.tree_node** %num, align 8, !dbg !5465
  br label %cleanup25, !dbg !5466

cleanup25:                                        ; preds = %cleanup21, %if.end24
  %retval.3 = phi i8 [ %retval.2, %cleanup21 ], [ 0, %if.end24 ], !dbg !5435
  ret i8 %retval.3, !dbg !5467
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !5468 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5470, metadata !DIExpression()), !dbg !5472
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #7, !dbg !5473
  call void @llvm.dbg.value(metadata i32 %call, metadata !5471, metadata !DIExpression()), !dbg !5472
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !5474

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !5476
  %bf.load = load i32, i32* %0, align 8, !dbg !5476
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5476
  br label %cleanup, !dbg !5477

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !5478
  br label %cleanup, !dbg !5480

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !5472
  ret i32 %retval.0, !dbg !5481
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !5482 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !5486, metadata !DIExpression()), !dbg !5487
  %idxprom = sext i32 %code to i64, !dbg !5488
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !5488
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5488
  %conv = zext i8 %0 to i32, !dbg !5489
  ret i32 %conv, !dbg !5490
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5491 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5495, metadata !DIExpression()), !dbg !5496
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !5497
  %0 = load i32, i32* %num_ops, align 4, !dbg !5497
  ret i32 %0, !dbg !5498
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_init_tree(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5499 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5504, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 1, metadata !5506, metadata !DIExpression()), !dbg !5507
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #7, !dbg !5508
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5509
  store i32 1, i32* %iter_type, align 4, !dbg !5510
  %call = tail call fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) #7, !dbg !5511
  ret %union.tree_node* %call, !dbg !5512
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5513 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5519, metadata !DIExpression()), !dbg !5520
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5521
  %0 = load i8, i8* %done, align 8, !dbg !5521
  ret i8 %0, !dbg !5522
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @op_iter_next_tree(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5523 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5527, metadata !DIExpression()), !dbg !5529
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5530
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5530
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5532
  br i1 %tobool, label %if.end, label %if.then, !dbg !5533

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5534
  %call = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* nonnull %use_ptr) #7, !dbg !5534
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5528, metadata !DIExpression()), !dbg !5529
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5536
  %2 = load i64*, i64** %1, align 8, !dbg !5536
  %3 = load i64, i64* %2, align 8, !dbg !5537
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5538
  store i64 %3, i64* %4, align 8, !dbg !5538
  br label %cleanup, !dbg !5539

if.end:                                           ; preds = %entry
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5540
  %5 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5540
  %tobool4 = icmp eq %struct.def_optype_d* %5, null, !dbg !5542
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5543

if.then5:                                         ; preds = %if.end
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %5, i64 0, i32 1, !dbg !5544
  %6 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5544
  %call7 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %6) #7, !dbg !5544
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5528, metadata !DIExpression()), !dbg !5529
  %7 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5546
  %8 = load i64*, i64** %7, align 8, !dbg !5546
  %9 = load i64, i64* %8, align 8, !dbg !5547
  %10 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5548
  store i64 %9, i64* %10, align 8, !dbg !5548
  br label %cleanup, !dbg !5549

if.end11:                                         ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5550
  store i8 1, i8* %done, align 8, !dbg !5551
  br label %cleanup, !dbg !5552

cleanup:                                          ; preds = %if.end11, %if.then5, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call7, %if.then5 ], [ null, %if.end11 ], !dbg !5529
  ret %union.tree_node* %retval.0, !dbg !5553
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5554 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5558, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i32 1, metadata !5560, metadata !DIExpression()), !dbg !5561
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5562
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5563
  br i1 true, label %land.lhs.true16, label %entry.if.end_crit_edge, !dbg !5564

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end, !dbg !5564

land.lhs.true16:                                  ; preds = %entry
  br i1 true, label %if.end, label %land.lhs.true19, !dbg !5566

land.lhs.true19:                                  ; preds = %land.lhs.true16
  br i1 undef, label %land.lhs.true19.if.end_crit_edge, label %if.then, !dbg !5567

land.lhs.true19.if.end_crit_edge:                 ; preds = %land.lhs.true19
  br label %if.end, !dbg !5567

if.then:                                          ; preds = %land.lhs.true19
  br label %if.end, !dbg !5568

if.end:                                           ; preds = %land.lhs.true19.if.end_crit_edge, %entry.if.end_crit_edge, %land.lhs.true16, %if.then
  br i1 false, label %if.end.cond.end28_crit_edge, label %cond.true25, !dbg !5569

if.end.cond.end28_crit_edge:                      ; preds = %if.end
  br label %cond.end28, !dbg !5569

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #7, !dbg !5570
  br label %cond.end28, !dbg !5569

cond.end28:                                       ; preds = %if.end.cond.end28_crit_edge, %cond.true25
  %0 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ undef, %if.end.cond.end28_crit_edge ], !dbg !5569
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5571
  store %struct.use_optype_d* %0, %struct.use_optype_d** %uses, align 8, !dbg !5572
  br i1 true, label %land.lhs.true32, label %cond.end28.if.end42_crit_edge, !dbg !5573

cond.end28.if.end42_crit_edge:                    ; preds = %cond.end28
  br label %if.end42, !dbg !5573

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %0, null, !dbg !5575
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5576

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #7, !dbg !5577
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5578
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5579

if.then38:                                        ; preds = %land.lhs.true35
  %1 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5580
  %2 = load i64*, i64** %1, align 8, !dbg !5580
  %3 = load i64, i64* %2, align 8, !dbg !5581
  %4 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5582
  store i64 %3, i64* %4, align 8, !dbg !5582
  br label %if.end42, !dbg !5583

if.end42:                                         ; preds = %cond.end28.if.end42_crit_edge, %land.lhs.true35, %land.lhs.true32, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5584
  store i8 0, i8* %done, align 8, !dbg !5585
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5586
  store i32 0, i32* %phi_i, align 8, !dbg !5587
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5588
  store i32 0, i32* %num_phi, align 4, !dbg !5589
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5590
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5591
  ret void, !dbg !5592
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5593 {
entry:
  unreachable, !dbg !5598
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5599 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5601, metadata !DIExpression()), !dbg !5602
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5603
  %tobool = icmp eq i8 %call, 0, !dbg !5603
  br i1 %tobool, label %return, label %if.end, !dbg !5605

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5606
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5606
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5606
  br label %return, !dbg !5607

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5602
  ret %union.tree_node* %retval.0, !dbg !5608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5609 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5613, metadata !DIExpression()), !dbg !5614
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #7, !dbg !5615
  %tobool = icmp eq i8 %call, 0, !dbg !5615
  br i1 %tobool, label %return, label %if.end, !dbg !5617

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5618
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5618
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5618
  br label %return, !dbg !5619

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5614
  ret %struct.use_optype_d* %retval.0, !dbg !5620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5621 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5623, metadata !DIExpression()), !dbg !5624
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !5625
  %tobool = icmp eq i8 %call, 0, !dbg !5625
  br i1 %tobool, label %return, label %if.end, !dbg !5627

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5628
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5628
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5628
  br label %return, !dbg !5629

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5624
  ret %union.tree_node* %retval.0, !dbg !5630
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5631 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5633, metadata !DIExpression()), !dbg !5634
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5635
  %cmp = icmp ugt i32 %call, 5, !dbg !5636
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5637

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #7, !dbg !5638
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5639
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5640
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !5641 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !5645, metadata !DIExpression()), !dbg !5646
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !5647
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !5647
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5648
  ret %union.tree_node* %1, !dbg !5649
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !5650 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !5655, metadata !DIExpression()), !dbg !5656
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !5657
  ret %union.tree_node* %0, !dbg !5658
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5659 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5661, metadata !DIExpression()), !dbg !5662
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #7, !dbg !5663
  %cmp = icmp eq i32 %call, 6, !dbg !5664
  %conv1 = zext i1 %cmp to i8, !dbg !5663
  ret i8 %conv1, !dbg !5665
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.field_access_site* @is_in_field_accs(%union.gimple_statement_d* %stmt, %struct.htab* %f_accs) unnamed_addr #5 !dbg !5666 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5670, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata %struct.htab* %f_accs, metadata !5671, metadata !DIExpression()), !dbg !5672
  %0 = bitcast %union.gimple_statement_d* %stmt to i8*, !dbg !5673
  %1 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5674
  %call = tail call i32 %1(i8* %0) #6, !dbg !5674
  %call1 = tail call i8* @htab_find_with_hash(%struct.htab* %f_accs, i8* %0, i32 %call) #6, !dbg !5675
  %2 = bitcast i8* %call1 to %struct.field_access_site*, !dbg !5676
  ret %struct.field_access_site* %2, !dbg !5677
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exclude_alloc_and_field_accs_1(%struct.data_structure* %str, %struct.cgraph_node* %node) unnamed_addr #5 !dbg !5678 {
entry:
  %dt = alloca %struct.exclude_data, align 8
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !5682, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !5683, metadata !DIExpression()), !dbg !5685
  %0 = bitcast %struct.exclude_data* %dt to i8*, !dbg !5686
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5686
  %str1 = getelementptr inbounds %struct.exclude_data, %struct.exclude_data* %dt, i64 0, i32 1, !dbg !5687
  store %struct.data_structure* %str, %struct.data_structure** %str1, align 8, !dbg !5688
  %1 = bitcast %struct.cgraph_node* %node to i64*, !dbg !5689
  %2 = load i64, i64* %1, align 8, !dbg !5689
  %3 = bitcast %struct.exclude_data* %dt to i64*, !dbg !5690
  store i64 %2, i64* %3, align 8, !dbg !5690
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 4, !dbg !5691
  %4 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !5691
  %tobool = icmp eq %struct.htab* %4, null, !dbg !5693
  br i1 %tobool, label %if.end, label %if.then, !dbg !5694

if.then:                                          ; preds = %entry
  call void @htab_traverse(%struct.htab* nonnull %4, i32 (i8**, i8*)* nonnull @exclude_from_accs, i8* nonnull %0) #6, !dbg !5695
  br label %if.end, !dbg !5695

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5696
  ret void, !dbg !5696
}

; Function Attrs: nounwind uwtable
define internal i32 @exclude_from_accs(i8** %slot, i8* %data) #5 !dbg !5697 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5699, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata i8* %data, metadata !5700, metadata !DIExpression()), !dbg !5704
  %0 = bitcast i8** %slot to %struct.access_site**, !dbg !5705
  %1 = load %struct.access_site*, %struct.access_site** %0, align 8, !dbg !5705
  call void @llvm.dbg.value(metadata %struct.access_site* %1, metadata !5701, metadata !DIExpression()), !dbg !5704
  %fn_decl1 = bitcast i8* %data to %union.tree_node**, !dbg !5706
  %2 = load %union.tree_node*, %union.tree_node** %fn_decl1, align 8, !dbg !5706
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5702, metadata !DIExpression()), !dbg !5704
  %str2 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5707
  %3 = bitcast i8* %str2 to %struct.data_structure**, !dbg !5707
  %4 = load %struct.data_structure*, %struct.data_structure** %3, align 8, !dbg !5707
  call void @llvm.dbg.value(metadata %struct.data_structure* %4, metadata !5703, metadata !DIExpression()), !dbg !5704
  %stmt = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 0, !dbg !5708
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5708
  %call = tail call fastcc zeroext i8 @is_part_of_malloc(%union.gimple_statement_d* %5, %union.tree_node* %2) #7, !dbg !5710
  %tobool = icmp eq i8 %call, 0, !dbg !5710
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5711

lor.lhs.false:                                    ; preds = %entry
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5712
  %call4 = tail call fastcc zeroext i8 @is_part_of_field_access(%union.gimple_statement_d* %6, %struct.data_structure* %4) #7, !dbg !5713
  %tobool6 = icmp eq i8 %call4, 0, !dbg !5713
  br i1 %tobool6, label %if.end, label %if.then, !dbg !5714

if.then:                                          ; preds = %lor.lhs.false, %entry
  %vars = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 1, !dbg !5715
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %vars) #7, !dbg !5715
  %7 = bitcast %struct.access_site* %1 to i8*, !dbg !5717
  tail call void @free(i8* %7) #6, !dbg !5718
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %4, i64 0, i32 4, !dbg !5719
  %8 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !5719
  tail call void @htab_clear_slot(%struct.htab* %8, i8** %slot) #6, !dbg !5720
  br label %if.end, !dbg !5721

if.end:                                           ; preds = %lor.lhs.false, %if.then
  ret i32 1, !dbg !5722
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_part_of_malloc(%union.gimple_statement_d* %stmt, %union.tree_node* %fn_decl) unnamed_addr #5 !dbg !5723 {
entry:
  %call1 = alloca %struct.alloc_site*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5727, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !5728, metadata !DIExpression()), !dbg !5734
  %call = tail call fastcc %struct.func_alloc_sites* @get_fallocs(%union.tree_node* %fn_decl) #7, !dbg !5735
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* %call, metadata !5729, metadata !DIExpression()), !dbg !5734
  %tobool = icmp eq %struct.func_alloc_sites* %call, null, !dbg !5736
  br i1 %tobool, label %if.end12, label %if.then, !dbg !5737

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.alloc_site** %call1 to i8*, !dbg !5738
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5738
  call void @llvm.dbg.value(metadata i32 0, metadata !5733, metadata !DIExpression()), !dbg !5739
  %allocs = getelementptr inbounds %struct.func_alloc_sites, %struct.func_alloc_sites* %call, i64 0, i32 1, !dbg !5740
  br label %for.cond, !dbg !5743

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ], !dbg !5744
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5733, metadata !DIExpression()), !dbg !5739
  %1 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %allocs, align 8, !dbg !5745
  %tobool2 = icmp eq %struct.VEC_alloc_site_t_heap* %1, null, !dbg !5745
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !5745

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %1, i64 0, i32 0, !dbg !5745
  br label %cond.end, !dbg !5745

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_alloc_site_t_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !5745
  call void @llvm.dbg.value(metadata %struct.alloc_site** %call1, metadata !5730, metadata !DIExpression(DW_OP_deref)), !dbg !5739
  %call4 = call fastcc i32 @VEC_alloc_site_t_base_iterate(%struct.VEC_alloc_site_t_base* %cond, i32 %i.0, %struct.alloc_site** nonnull %call1) #7, !dbg !5745
  %tobool5 = icmp eq i32 %call4, 0, !dbg !5746
  br i1 %tobool5, label %cleanup, label %for.body, !dbg !5746

for.body:                                         ; preds = %cond.end
  %2 = load %struct.alloc_site*, %struct.alloc_site** %call1, align 8, !dbg !5747
  call void @llvm.dbg.value(metadata %struct.alloc_site* %2, metadata !5730, metadata !DIExpression()), !dbg !5739
  %stmt6 = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %2, i64 0, i32 0, !dbg !5749
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt6, align 8, !dbg !5749
  %cmp = icmp eq %union.gimple_statement_d* %3, %stmt, !dbg !5750
  br i1 %cmp, label %cleanup, label %lor.lhs.false, !dbg !5751

lor.lhs.false:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.alloc_site* %2, metadata !5730, metadata !DIExpression()), !dbg !5739
  %call8 = call fastcc %union.gimple_statement_d* @get_final_alloc_stmt(%union.gimple_statement_d* %3) #7, !dbg !5752
  %cmp9 = icmp eq %union.gimple_statement_d* %call8, %stmt, !dbg !5753
  br i1 %cmp9, label %cleanup, label %for.inc, !dbg !5754

for.inc:                                          ; preds = %lor.lhs.false
  %inc = add i32 %i.0, 1, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5733, metadata !DIExpression()), !dbg !5739
  br label %for.cond, !dbg !5756, !llvm.loop !5757

cleanup:                                          ; preds = %cond.end, %for.body, %lor.lhs.false
  %cleanup.dest.slot.0 = phi i1 [ false, %lor.lhs.false ], [ false, %for.body ], [ true, %cond.end ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5759
  br i1 %cleanup.dest.slot.0, label %if.end12, label %cleanup13

if.end12:                                         ; preds = %entry, %cleanup
  br label %cleanup13, !dbg !5760

cleanup13:                                        ; preds = %cleanup, %if.end12
  %retval.1 = phi i8 [ 1, %cleanup ], [ 0, %if.end12 ], !dbg !5734
  ret i8 %retval.1, !dbg !5761
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_part_of_field_access(%union.gimple_statement_d* %stmt, %struct.data_structure* %str) unnamed_addr #5 !dbg !5762 {
entry:
  %data = alloca %struct.find_stmt_data, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5766, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !5767, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression()), !dbg !5773
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !5774
  %0 = getelementptr inbounds %struct.find_stmt_data, %struct.find_stmt_data* %data, i64 0, i32 0, !dbg !5775
  %stmt1 = getelementptr inbounds %struct.find_stmt_data, %struct.find_stmt_data* %data, i64 0, i32 1, !dbg !5775
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !5776
  br label %for.cond, !dbg !5778

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5779
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5768, metadata !DIExpression()), !dbg !5773
  %1 = load i32, i32* %num_fields, align 8, !dbg !5780
  %2 = sext i32 %1 to i64, !dbg !5781
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !5781
  br i1 %cmp, label %for.body, label %cleanup10, !dbg !5782

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5783
  store i8 0, i8* %0, align 8, !dbg !5784
  store %union.gimple_statement_d* %stmt, %union.gimple_statement_d** %stmt1, align 8, !dbg !5785
  %3 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !5786
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %3, i64 %indvars.iv, i32 4, !dbg !5787
  %4 = load %struct.htab*, %struct.htab** %acc_sites, align 8, !dbg !5787
  %tobool = icmp eq %struct.htab* %4, null, !dbg !5788
  br i1 %tobool, label %if.end, label %if.then, !dbg !5789

if.then:                                          ; preds = %for.body
  call void @htab_traverse(%struct.htab* nonnull %4, i32 (i8**, i8*)* nonnull @find_in_field_accs, i8* nonnull %0) #6, !dbg !5790
  %.pre = load i8, i8* %0, align 8, !dbg !5791
  br label %if.end, !dbg !5790

if.end:                                           ; preds = %for.body, %if.then
  %5 = phi i8 [ 0, %for.body ], [ %.pre, %if.then ], !dbg !5791
  %tobool7 = icmp eq i8 %5, 0, !dbg !5793
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8, !dbg !5794
  br i1 %tobool7, label %for.inc, label %cleanup10

for.inc:                                          ; preds = %if.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5795
  call void @llvm.dbg.value(metadata i32 undef, metadata !5768, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5773
  br label %for.cond, !dbg !5796, !llvm.loop !5797

cleanup10:                                        ; preds = %if.end, %for.cond
  %retval.2 = phi i8 [ 1, %if.end ], [ 0, %for.cond ], !dbg !5773
  ret i8 %retval.2, !dbg !5799
}

declare dso_local void @htab_clear_slot(%struct.htab*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.func_alloc_sites* @get_fallocs(%union.tree_node* %fn_decl) unnamed_addr #5 !dbg !5800 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !5804, metadata !DIExpression()), !dbg !5805
  %0 = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !5806
  %1 = bitcast %union.tree_node* %fn_decl to i8*, !dbg !5807
  %2 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !5808
  %call = tail call i32 %2(i8* %1) #6, !dbg !5808
  %call1 = tail call i8* @htab_find_with_hash(%struct.htab* %0, i8* %1, i32 %call) #6, !dbg !5809
  %3 = bitcast i8* %call1 to %struct.func_alloc_sites*, !dbg !5810
  ret %struct.func_alloc_sites* %3, !dbg !5811
}

; Function Attrs: nounwind uwtable
define internal i32 @find_in_field_accs(i8** %slot, i8* %data) #5 !dbg !5812 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5814, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %data, metadata !5815, metadata !DIExpression()), !dbg !5818
  %0 = bitcast i8** %slot to %struct.field_access_site**, !dbg !5819
  %1 = load %struct.field_access_site*, %struct.field_access_site** %0, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata %struct.field_access_site* %1, metadata !5816, metadata !DIExpression()), !dbg !5818
  %stmt1 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5820
  %2 = bitcast i8* %stmt1 to %union.gimple_statement_d**, !dbg !5820
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !5820
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %3, metadata !5817, metadata !DIExpression()), !dbg !5818
  %stmt2 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 0, !dbg !5821
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt2, align 8, !dbg !5821
  %cmp = icmp eq %union.gimple_statement_d* %4, %3, !dbg !5823
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5824

lor.lhs.false:                                    ; preds = %entry
  %ref_def_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 7, !dbg !5825
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !5825
  %cmp3 = icmp eq %union.gimple_statement_d* %5, %3, !dbg !5826
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5827

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cast_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 8, !dbg !5828
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cast_stmt, align 8, !dbg !5828
  %cmp5 = icmp eq %union.gimple_statement_d* %6, %3, !dbg !5829
  br i1 %cmp5, label %if.then, label %cleanup, !dbg !5830

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  store i8 1, i8* %data, align 8, !dbg !5831
  br label %cleanup, !dbg !5833

cleanup:                                          ; preds = %lor.lhs.false4, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %lor.lhs.false4 ], !dbg !5834
  ret i32 %retval.0, !dbg !5835
}

; Function Attrs: nounwind uwtable
define internal i32 @safe_cond_expr_check(i8** %slot, i8* %data) #5 !dbg !5836 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5838, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.value(metadata i8* %data, metadata !5839, metadata !DIExpression()), !dbg !5841
  %0 = bitcast i8** %slot to %struct.access_site**, !dbg !5842
  %1 = load %struct.access_site*, %struct.access_site** %0, align 8, !dbg !5842
  call void @llvm.dbg.value(metadata %struct.access_site* %1, metadata !5840, metadata !DIExpression()), !dbg !5841
  %stmt = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 0, !dbg !5843
  %2 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5843
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %2) #7, !dbg !5845
  %cmp = icmp eq i32 %call, 1, !dbg !5846
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !5847

land.lhs.true:                                    ; preds = %entry
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5848
  %call2 = tail call fastcc zeroext i8 @is_safe_cond_expr(%union.gimple_statement_d* %3) #7, !dbg !5849
  %tobool = icmp eq i8 %call2, 0, !dbg !5849
  br i1 %tobool, label %if.then, label %cleanup, !dbg !5850

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5851
  %tobool3 = icmp eq %struct._IO_FILE* %4, null, !dbg !5851
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !5854

if.then4:                                         ; preds = %if.then
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !5855
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5857
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5858
  tail call void @print_gimple_stmt(%struct._IO_FILE* %5, %union.gimple_statement_d* %6, i32 0, i32 0) #6, !dbg !5859
  br label %if.end, !dbg !5860

if.end:                                           ; preds = %if.then, %if.then4
  store i8 0, i8* %data, align 1, !dbg !5861
  br label %cleanup, !dbg !5862

cleanup:                                          ; preds = %land.lhs.true, %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true ], [ 1, %entry ], !dbg !5841
  ret i32 %retval.0, !dbg !5863
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @is_safe_cond_expr(%union.gimple_statement_d* %cond_stmt) unnamed_addr #5 !dbg !5864 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %cond_stmt, metadata !5868, metadata !DIExpression()), !dbg !5876
  %0 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !5877
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %0, i64 0, i32 0, !dbg !5877
  %call = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %call, metadata !5875, metadata !DIExpression()), !dbg !5876
  %call1 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %cond_stmt) #7, !dbg !5878
  %cmp = icmp eq i32 %call1, 101, !dbg !5880
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5881

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %cond_stmt) #7, !dbg !5882
  %cmp3 = icmp eq i32 %call2, 102, !dbg !5883
  br i1 %cmp3, label %if.end, label %cleanup, !dbg !5884

if.end:                                           ; preds = %land.lhs.true, %entry
  %call4 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %cond_stmt) #7, !dbg !5885
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5869, metadata !DIExpression()), !dbg !5876
  %call5 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %cond_stmt) #7, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5870, metadata !DIExpression()), !dbg !5876
  %call6 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call4) #7, !dbg !5887
  %call7 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call6) #7, !dbg !5888
  %call8 = tail call fastcc i32 @find_structure(%union.tree_node* %call7) #7, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %call8, metadata !5871, metadata !DIExpression()), !dbg !5876
  %call9 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call5) #7, !dbg !5890
  %call10 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call9) #7, !dbg !5891
  %call11 = tail call fastcc i32 @find_structure(%union.tree_node* %call10) #7, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %call11, metadata !5872, metadata !DIExpression()), !dbg !5876
  %cmp12 = icmp ne i32 %call8, %call, !dbg !5893
  call void @llvm.dbg.value(metadata i1 %cmp12, metadata !5873, metadata !DIExpression()), !dbg !5876
  %cmp14 = icmp ne i32 %call11, %call, !dbg !5894
  call void @llvm.dbg.value(metadata i1 %cmp14, metadata !5874, metadata !DIExpression()), !dbg !5876
  %or.cond = or i1 %cmp12, %cmp14, !dbg !5895
  br i1 %or.cond, label %if.end22, label %cleanup, !dbg !5895

if.end22:                                         ; preds = %if.end
  %call23 = tail call i32 @integer_zerop(%union.tree_node* %call4) #6, !dbg !5897
  %tobool24 = icmp eq i32 %call23, 0, !dbg !5897
  br i1 %tobool24, label %land.lhs.true25, label %if.end29, !dbg !5899

land.lhs.true25:                                  ; preds = %if.end22
  %call26 = tail call i32 @integer_zerop(%union.tree_node* %call5) #6, !dbg !5900
  %tobool27 = icmp eq i32 %call26, 0, !dbg !5900
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !5901

if.end29:                                         ; preds = %land.lhs.true25, %if.end22
  br label %cleanup, !dbg !5902

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true25, %if.end, %if.end29
  %retval.0 = phi i8 [ 1, %if.end29 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %land.lhs.true25 ], !dbg !5876
  ret i8 %retval.0, !dbg !5903
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5904 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5908
  %bf.load = load i32, i32* %0, align 8, !dbg !5908
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5908
  ret i32 %bf.lshr, !dbg !5909
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5910 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5912, metadata !DIExpression()), !dbg !5913
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #7, !dbg !5914
  ret %union.tree_node* %call, !dbg !5915
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5916 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5918, metadata !DIExpression()), !dbg !5919
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #7, !dbg !5920
  ret %union.tree_node* %call, !dbg !5921
}

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_accs(%struct.data_structure* %str) unnamed_addr #5 !dbg !5922 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !5924, metadata !DIExpression()), !dbg !5926
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5927
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !5928
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5929
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !5930
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5930
  tail call void @print_generic_expr(%struct._IO_FILE* %1, %union.tree_node* %2, i32 0) #6, !dbg !5931
  call void @llvm.dbg.value(metadata i32 0, metadata !5925, metadata !DIExpression()), !dbg !5926
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !5932
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !5935
  br label %for.cond, !dbg !5937

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !5938
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5925, metadata !DIExpression()), !dbg !5926
  %3 = load i32, i32* %num_fields, align 8, !dbg !5939
  %4 = sext i32 %3 to i64, !dbg !5940
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !5940
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5926
  br i1 %cmp, label %for.body, label %for.end, !dbg !5941

for.body:                                         ; preds = %for.cond
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5942
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5943
  %7 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !5944
  %decl2 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %7, i64 %indvars.iv, i32 2, !dbg !5945
  %8 = load %union.tree_node*, %union.tree_node** %decl2, align 8, !dbg !5945
  tail call void @print_generic_expr(%struct._IO_FILE* %6, %union.tree_node* %8, i32 0) #6, !dbg !5946
  %9 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !5947
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %9, i64 %indvars.iv, i32 4, !dbg !5948
  %10 = load %struct.htab*, %struct.htab** %acc_sites, align 8, !dbg !5948
  tail call fastcc void @dump_field_acc_sites(%struct.htab* %10) #7, !dbg !5949
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5950
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5951
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5952
  call void @llvm.dbg.value(metadata i32 undef, metadata !5925, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5926
  br label %for.cond, !dbg !5953, !llvm.loop !5954

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct._IO_FILE* [ %5, %for.cond ], !dbg !5926
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %.lcssa, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5956
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 4, !dbg !5957
  %12 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !5957
  tail call fastcc void @dump_access_sites(%struct.htab* %12) #7, !dbg !5958
  ret void, !dbg !5959
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_field_acc_sites(%struct.htab* %f_accs) unnamed_addr #5 !dbg !5960 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %f_accs, metadata !5962, metadata !DIExpression()), !dbg !5963
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5964
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !5964
  %tobool1 = icmp ne %struct.htab* %f_accs, null, !dbg !5966
  %or.cond = and i1 %tobool, %tobool1, !dbg !5968
  br i1 %or.cond, label %if.then2, label %if.end3, !dbg !5968

if.then2:                                         ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %f_accs, i32 (i8**, i8*)* nonnull @dump_field_acc, i8* null) #6, !dbg !5969
  br label %if.end3, !dbg !5969

if.end3:                                          ; preds = %entry, %if.then2
  ret void, !dbg !5970
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_access_sites(%struct.htab* %accs) unnamed_addr #5 !dbg !5971 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %accs, metadata !5973, metadata !DIExpression()), !dbg !5974
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5975
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !5975
  %tobool1 = icmp ne %struct.htab* %accs, null, !dbg !5977
  %or.cond = and i1 %tobool, %tobool1, !dbg !5979
  br i1 %or.cond, label %if.then2, label %if.end3, !dbg !5979

if.then2:                                         ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %accs, i32 (i8**, i8*)* nonnull @dump_acc, i8* null) #6, !dbg !5980
  br label %if.end3, !dbg !5980

if.end3:                                          ; preds = %entry, %if.then2
  ret void, !dbg !5981
}

; Function Attrs: nounwind uwtable
define internal i32 @dump_field_acc(i8** %slot, i8* %data) #5 !dbg !5982 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5984, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i8* %data, metadata !5985, metadata !DIExpression()), !dbg !5987
  %0 = bitcast i8** %slot to %struct.field_access_site**, !dbg !5988
  %1 = load %struct.field_access_site*, %struct.field_access_site** %0, align 8, !dbg !5988
  call void @llvm.dbg.value(metadata %struct.field_access_site* %1, metadata !5986, metadata !DIExpression()), !dbg !5987
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5989
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !5990
  %stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 0, !dbg !5991
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !5991
  %tobool = icmp eq %union.gimple_statement_d* %3, null, !dbg !5993
  br i1 %tobool, label %if.end, label %if.then, !dbg !5994

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !5995
  tail call void @print_gimple_stmt(%struct._IO_FILE* %4, %union.gimple_statement_d* nonnull %3, i32 0, i32 0) #6, !dbg !5996
  br label %if.end, !dbg !5996

if.end:                                           ; preds = %entry, %if.then
  %ref_def_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 7, !dbg !5997
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !5997
  %tobool2 = icmp eq %union.gimple_statement_d* %5, null, !dbg !5999
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6000

if.then3:                                         ; preds = %if.end
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6001
  tail call void @print_gimple_stmt(%struct._IO_FILE* %6, %union.gimple_statement_d* nonnull %5, i32 0, i32 0) #6, !dbg !6002
  br label %if.end5, !dbg !6002

if.end5:                                          ; preds = %if.end, %if.then3
  %cast_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 8, !dbg !6003
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cast_stmt, align 8, !dbg !6003
  %tobool6 = icmp eq %union.gimple_statement_d* %7, null, !dbg !6005
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !6006

if.then7:                                         ; preds = %if.end5
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6007
  tail call void @print_gimple_stmt(%struct._IO_FILE* %8, %union.gimple_statement_d* nonnull %7, i32 0, i32 0) #6, !dbg !6008
  br label %if.end9, !dbg !6008

if.end9:                                          ; preds = %if.end5, %if.then7
  ret i32 1, !dbg !6009
}

; Function Attrs: nounwind uwtable
define internal i32 @dump_acc(i8** %slot, i8* %data) #5 !dbg !6010 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !6012, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.value(metadata i8* %data, metadata !6013, metadata !DIExpression()), !dbg !6017
  %0 = bitcast i8** %slot to %struct.access_site**, !dbg !6018
  %1 = load %struct.access_site*, %struct.access_site** %0, align 8, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.access_site* %1, metadata !6014, metadata !DIExpression()), !dbg !6017
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !6019
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6019
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6020
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !6021
  %stmt = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 0, !dbg !6022
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !6022
  %tobool = icmp eq %union.gimple_statement_d* %4, null, !dbg !6024
  br i1 %tobool, label %if.end, label %if.then, !dbg !6025

if.then:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6026
  tail call void @print_gimple_stmt(%struct._IO_FILE* %5, %union.gimple_statement_d* nonnull %4, i32 0, i32 0) #6, !dbg !6027
  br label %if.end, !dbg !6027

if.end:                                           ; preds = %entry, %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6028
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6029
  call void @llvm.dbg.value(metadata i32 0, metadata !6016, metadata !DIExpression()), !dbg !6017
  %vars = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 1, !dbg !6030
  br label %for.cond, !dbg !6033

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ], !dbg !6034
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6016, metadata !DIExpression()), !dbg !6017
  %7 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !6035
  %tobool3 = icmp eq %struct.VEC_tree_heap* %7, null, !dbg !6035
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !6035

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %7, i64 0, i32 0, !dbg !6035
  br label %cond.end, !dbg !6035

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6035
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6015, metadata !DIExpression(DW_OP_deref)), !dbg !6017
  %call5 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !6035
  %tobool6 = icmp eq i32 %call5, 0, !dbg !6036
  br i1 %tobool6, label %for.end, label %for.body, !dbg !6036

for.body:                                         ; preds = %cond.end
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6037
  %9 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6039
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6015, metadata !DIExpression()), !dbg !6017
  call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %9, i32 0) #6, !dbg !6040
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6041
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6042
  %inc = add i32 %i.0, 1, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6016, metadata !DIExpression()), !dbg !6017
  br label %for.cond, !dbg !6044, !llvm.loop !6045

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6047
  ret i32 1, !dbg !6048
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sum_counts(%struct.data_structure* %str, i64* %hottest) unnamed_addr #5 !dbg !6049 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i64* %hottest, metadata !6055, metadata !DIExpression()), !dbg !6057
  %count = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 2, !dbg !6058
  store i64 0, i64* %count, align 8, !dbg !6059
  call void @llvm.dbg.value(metadata i32 0, metadata !6056, metadata !DIExpression()), !dbg !6057
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !6060
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !6063
  br label %for.cond, !dbg !6067

for.cond:                                         ; preds = %if.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %entry ]
  %0 = phi i64 [ %add, %if.end ], [ 0, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6056, metadata !DIExpression()), !dbg !6057
  %1 = load i32, i32* %num_fields, align 8, !dbg !6068
  %2 = sext i32 %1 to i64, !dbg !6069
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !6069
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6057
  %tobool = icmp ne %struct._IO_FILE* %3, null, !dbg !6057
  br i1 %cmp, label %for.body, label %for.end, !dbg !6070

for.body:                                         ; preds = %for.cond
  br i1 %tobool, label %if.then, label %for.body.if.end_crit_edge, !dbg !6071

for.body.if.end_crit_edge:                        ; preds = %for.body
  br label %if.end, !dbg !6071

if.then:                                          ; preds = %for.body
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !6072
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6073
  %5 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !6074
  %decl = getelementptr inbounds %struct.field_entry, %struct.field_entry* %5, i64 %indvars.iv, i32 2, !dbg !6075
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6075
  tail call void @print_generic_expr(%struct._IO_FILE* %4, %union.tree_node* %6, i32 0) #6, !dbg !6076
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6077
  %8 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !6078
  %count4 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %8, i64 %indvars.iv, i32 1, !dbg !6079
  %9 = load i64, i64* %count4, align 8, !dbg !6079
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i64 %9) #6, !dbg !6080
  %.pre1 = load i64, i64* %count, align 8, !dbg !6081
  br label %if.end, !dbg !6082

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then
  %10 = phi i64 [ %.pre1, %if.then ], [ %0, %for.body.if.end_crit_edge ], !dbg !6081
  %11 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !6083
  %count9 = getelementptr inbounds %struct.field_entry, %struct.field_entry* %11, i64 %indvars.iv, i32 1, !dbg !6084
  %12 = load i64, i64* %count9, align 8, !dbg !6084
  %add = add nsw i64 %10, %12, !dbg !6081
  store i64 %add, i64* %count, align 8, !dbg !6081
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6085
  call void @llvm.dbg.value(metadata i32 undef, metadata !6056, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6057
  br label %for.cond, !dbg !6086, !llvm.loop !6087

for.end:                                          ; preds = %for.cond
  %.lcssa4 = phi i64 [ %0, %for.cond ]
  %.lcssa = phi %struct._IO_FILE* [ %3, %for.cond ], !dbg !6057
  %tobool.lcssa = phi i1 [ %tobool, %for.cond ], !dbg !6057
  br i1 %tobool.lcssa, label %if.then12, label %if.end17, !dbg !6089

if.then12:                                        ; preds = %for.end
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %.lcssa, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !6090
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6093
  %decl14 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !6094
  %14 = load %union.tree_node*, %union.tree_node** %decl14, align 8, !dbg !6094
  tail call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %14, i32 0) #6, !dbg !6095
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6096
  %16 = load i64, i64* %count, align 8, !dbg !6097
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i64 %16) #6, !dbg !6098
  %.pre = load i64, i64* %count, align 8, !dbg !6099
  br label %if.end17, !dbg !6101

if.end17:                                         ; preds = %if.then12, %for.end
  %17 = phi i64 [ %.pre, %if.then12 ], [ %.lcssa4, %for.end ], !dbg !6099
  %18 = load i64, i64* %hottest, align 8, !dbg !6102
  %cmp19 = icmp sgt i64 %17, %18, !dbg !6103
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !6104

if.then20:                                        ; preds = %if.end17
  store i64 %17, i64* %hottest, align 8, !dbg !6105
  br label %if.end22, !dbg !6106

if.end22:                                         ; preds = %if.then20, %if.end17
  ret void, !dbg !6107
}

; Function Attrs: nounwind uwtable
define internal fastcc void @peel_hot_fields(%struct.data_structure* %str) unnamed_addr #5 !dbg !6108 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6110, metadata !DIExpression()), !dbg !6114
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !6115
  %0 = load i32, i32* %num_fields, align 8, !dbg !6115
  %call = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %0) #6, !dbg !6116
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %call, metadata !6112, metadata !DIExpression()), !dbg !6114
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %call) #6, !dbg !6117
  %call1 = tail call fastcc i64 @get_max_field_count(%struct.data_structure* %str) #7, !dbg !6118
  %div = sdiv i64 %call1, 100, !dbg !6119
  %mul = mul nsw i64 %div, 90, !dbg !6120
  call void @llvm.dbg.value(metadata i64 %mul, metadata !6111, metadata !DIExpression()), !dbg !6114
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 5, !dbg !6121
  store %struct.field_cluster* null, %struct.field_cluster** %struct_clustering, align 8, !dbg !6122
  call void @llvm.dbg.value(metadata i32 0, metadata !6113, metadata !DIExpression()), !dbg !6114
  %count = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 2, !dbg !6123
  br label %for.cond, !dbg !6128

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !6129
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6113, metadata !DIExpression()), !dbg !6114
  %1 = load i32, i32* %num_fields, align 8, !dbg !6130
  %cmp = icmp slt i32 %i.0, %1, !dbg !6131
  br i1 %cmp, label %for.body, label %for.end, !dbg !6132

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %count, align 8, !dbg !6133
  %cmp3 = icmp slt i64 %2, %mul, !dbg !6134
  br i1 %cmp3, label %for.inc, label %if.then, !dbg !6135

if.then:                                          ; preds = %for.body
  tail call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %call, i32 %i.0) #7, !dbg !6136
  tail call fastcc void @peel_field(i32 %i.0, %struct.data_structure* %str) #7, !dbg !6138
  br label %for.inc, !dbg !6139

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add nuw nsw i32 %i.0, 1, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6113, metadata !DIExpression()), !dbg !6114
  br label %for.cond, !dbg !6141, !llvm.loop !6142

for.end:                                          ; preds = %for.cond
  %call4 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* %call) #6, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %call4, metadata !6113, metadata !DIExpression()), !dbg !6114
  %cmp5 = icmp eq i32 %call4, -1, !dbg !6145
  br i1 %cmp5, label %if.else, label %if.then6, !dbg !6147

if.then6:                                         ; preds = %for.end
  tail call fastcc void @gen_cluster(%struct.simple_bitmap_def* %call, %struct.data_structure* %str) #7, !dbg !6148
  br label %if.end7, !dbg !6148

if.else:                                          ; preds = %for.end
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %call, i64 0, i32 0, !dbg !6149
  %3 = load i8*, i8** %popcount, align 8, !dbg !6149
  tail call void @free(i8* %3) #6, !dbg !6149
  %4 = bitcast %struct.simple_bitmap_def* %call to i8*, !dbg !6149
  tail call void @free(i8* %4) #6, !dbg !6149
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  ret void, !dbg !6150
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @get_max_field_count(%struct.data_structure* %str) unnamed_addr #5 !dbg !6151 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6155, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i64 0, metadata !6156, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i32 0, metadata !6157, metadata !DIExpression()), !dbg !6158
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !6159
  %0 = load i32, i32* %num_fields, align 8, !dbg !6159
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !6162
  %1 = sext i32 %0 to i64, !dbg !6164
  br label %for.cond, !dbg !6164

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6158
  %max.0 = phi i64 [ %max.1, %for.inc ], [ 0, %entry ], !dbg !6158
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6157, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i64 %max.0, metadata !6156, metadata !DIExpression()), !dbg !6158
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !6165
  br i1 %cmp, label %for.body, label %for.end, !dbg !6166

for.body:                                         ; preds = %for.cond
  %2 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !6167
  %count = getelementptr inbounds %struct.field_entry, %struct.field_entry* %2, i64 %indvars.iv, i32 1, !dbg !6168
  %3 = load i64, i64* %count, align 8, !dbg !6168
  %cmp1 = icmp sgt i64 %3, %max.0, !dbg !6169
  br i1 %cmp1, label %if.then, label %for.inc, !dbg !6170

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i64 %3, metadata !6156, metadata !DIExpression()), !dbg !6158
  br label %for.inc, !dbg !6171

for.inc:                                          ; preds = %for.body, %if.then
  %max.1 = phi i64 [ %3, %if.then ], [ %max.0, %for.body ], !dbg !6158
  call void @llvm.dbg.value(metadata i64 %max.1, metadata !6156, metadata !DIExpression()), !dbg !6158
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6172
  call void @llvm.dbg.value(metadata i32 undef, metadata !6157, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6158
  br label %for.cond, !dbg !6173, !llvm.loop !6174

for.end:                                          ; preds = %for.cond
  %max.0.lcssa = phi i64 [ %max.0, %for.cond ], !dbg !6158
  call void @llvm.dbg.value(metadata i64 %max.0.lcssa, metadata !6156, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i64 %max.0.lcssa, metadata !6156, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i64 %max.0.lcssa, metadata !6156, metadata !DIExpression()), !dbg !6158
  ret i64 %max.0.lcssa, !dbg !6176
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6177 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6181, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6182, metadata !DIExpression()), !dbg !6186
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6187
  %0 = load i8*, i8** %popcount, align 8, !dbg !6187
  %tobool = icmp eq i8* %0, null, !dbg !6188
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6189

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6190
  %.pre2 = zext i32 %.pre to i64, !dbg !6191
  %.pre3 = shl i64 1, %.pre2, !dbg !6191
  %.pre4 = lshr i32 %bitno, 6, !dbg !6192
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6193
  br label %if.end7, !dbg !6189

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6194
  %idxprom = zext i32 %div to i64, !dbg !6194
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6194
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6194
  %rem = and i32 %bitno, 63, !dbg !6194
  %sh_prom = zext i32 %rem to i64, !dbg !6194
  %2 = shl i64 1, %sh_prom, !dbg !6195
  %3 = and i64 %1, %2, !dbg !6195
  %tobool1 = icmp eq i64 %3, 0, !dbg !6195
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6197

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6198
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6199
  %dec = add i8 %4, -1, !dbg !6199
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !6199
  br label %if.end7, !dbg !6198

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6193
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6191
  %neg = xor i64 %shl.pre-phi, -1, !dbg !6200
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6193
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6201
  %and14 = and i64 %5, %neg, !dbg !6201
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !6201
  ret void, !dbg !6202
}

; Function Attrs: nounwind uwtable
define internal fastcc void @peel_field(i32 %i, %struct.data_structure* %ds) unnamed_addr #5 !dbg !6203 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !6207, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata %struct.data_structure* %ds, metadata !6208, metadata !DIExpression()), !dbg !6210
  %call = tail call i8* @xcalloc(i64 1, i64 16) #6, !dbg !6211
  call void @llvm.dbg.value(metadata i8* %call, metadata !6209, metadata !DIExpression()), !dbg !6210
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %ds, i64 0, i32 5, !dbg !6212
  %0 = bitcast %struct.field_cluster** %struct_clustering to i64*, !dbg !6212
  %1 = load i64, i64* %0, align 8, !dbg !6212
  %sibling = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6213
  %2 = bitcast i8* %sibling to i64*, !dbg !6214
  store i64 %1, i64* %2, align 8, !dbg !6214
  %3 = bitcast %struct.field_cluster** %struct_clustering to i8**, !dbg !6215
  store i8* %call, i8** %3, align 8, !dbg !6215
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %ds, i64 0, i32 1, !dbg !6216
  %4 = load i32, i32* %num_fields, align 8, !dbg !6216
  %call2 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %4) #6, !dbg !6217
  %fields_in_cluster = bitcast i8* %call to %struct.simple_bitmap_def**, !dbg !6218
  store %struct.simple_bitmap_def* %call2, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !6219
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call2) #6, !dbg !6220
  %5 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !6221
  tail call fastcc void @SET_BIT(%struct.simple_bitmap_def* %5, i32 %i) #7, !dbg !6222
  ret void, !dbg !6223
}

declare dso_local i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_cluster(%struct.simple_bitmap_def* %fields, %struct.data_structure* %str) unnamed_addr #5 !dbg !6224 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %fields, metadata !6228, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6229, metadata !DIExpression()), !dbg !6231
  %call = tail call i8* @xcalloc(i64 1, i64 16) #6, !dbg !6232
  call void @llvm.dbg.value(metadata i8* %call, metadata !6230, metadata !DIExpression()), !dbg !6231
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 5, !dbg !6233
  %0 = bitcast %struct.field_cluster** %struct_clustering to i64*, !dbg !6233
  %1 = load i64, i64* %0, align 8, !dbg !6233
  %sibling = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6234
  %2 = bitcast i8* %sibling to i64*, !dbg !6235
  store i64 %1, i64* %2, align 8, !dbg !6235
  %3 = bitcast %struct.field_cluster** %struct_clustering to i8**, !dbg !6236
  store i8* %call, i8** %3, align 8, !dbg !6236
  %fields_in_cluster = bitcast i8* %call to %struct.simple_bitmap_def**, !dbg !6237
  store %struct.simple_bitmap_def* %fields, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !6238
  ret void, !dbg !6239
}

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !6240 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !6242, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !6243, metadata !DIExpression()), !dbg !6247
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !6248
  %0 = load i8*, i8** %popcount, align 8, !dbg !6248
  %tobool = icmp eq i8* %0, null, !dbg !6249
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !6250

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !6251
  %.pre2 = zext i32 %.pre to i64, !dbg !6252
  %.pre3 = shl i64 1, %.pre2, !dbg !6252
  %.pre4 = lshr i32 %bitno, 6, !dbg !6253
  %.pre5 = zext i32 %.pre4 to i64, !dbg !6254
  br label %if.end7, !dbg !6250

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !6255
  %idxprom = zext i32 %div to i64, !dbg !6255
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !6255
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6255
  %rem = and i32 %bitno, 63, !dbg !6255
  %sh_prom = zext i32 %rem to i64, !dbg !6255
  %2 = shl i64 1, %sh_prom, !dbg !6256
  %3 = and i64 %1, %2, !dbg !6256
  %tobool1 = icmp eq i64 %3, 0, !dbg !6256
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !6258

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !6259
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !6260
  %inc = add i8 %4, 1, !dbg !6260
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !6260
  br label %if.end7, !dbg !6259

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !6254
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !6252
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !6254
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !6261
  %or = or i64 %5, %shl.pre-phi, !dbg !6261
  store i64 %or, i64* %arrayidx13, align 8, !dbg !6261
  ret void, !dbg !6262
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_types() unnamed_addr #5 !dbg !6263 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %str_num = alloca i32, align 4
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !6268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6268
  %1 = bitcast i32* %str_num to i8*, !dbg !6269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6269
  call void @llvm.dbg.value(metadata i32 0, metadata !6267, metadata !DIExpression()), !dbg !6270
  store i32 0, i32* %str_num, align 4, !dbg !6271
  call void @llvm.dbg.value(metadata i32 0, metadata !6266, metadata !DIExpression()), !dbg !6270
  br label %for.cond, !dbg !6272

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !6274
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6266, metadata !DIExpression()), !dbg !6270
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !6275
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !6275
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !6265, metadata !DIExpression(DW_OP_deref)), !dbg !6270
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !6275
  %tobool1 = icmp eq i32 %call, 0, !dbg !6277
  br i1 %tobool1, label %for.end, label %for.body, !dbg !6277

for.body:                                         ; preds = %for.cond
  %3 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !6278
  call void @llvm.dbg.value(metadata %struct.data_structure* %3, metadata !6265, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32* %str_num, metadata !6267, metadata !DIExpression(DW_OP_deref)), !dbg !6270
  call fastcc void @create_new_type(%struct.data_structure* %3, i32* nonnull %str_num) #7, !dbg !6279
  %inc = add i32 %i.0, 1, !dbg !6280
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6266, metadata !DIExpression()), !dbg !6270
  br label %for.cond, !dbg !6281, !llvm.loop !6282

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6284
  ret void, !dbg !6284
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_new_types() unnamed_addr #5 !dbg !6285 {
entry:
  %str = alloca %struct.data_structure*, align 8
  %type = alloca %union.tree_node*, align 8
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !6291
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6291
  %1 = bitcast %union.tree_node** %type to i8*, !dbg !6292
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6292
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6293
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !6293
  br i1 %tobool, label %cleanup, label %if.end, !dbg !6295

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !6296
  call void @llvm.dbg.value(metadata i32 0, metadata !6289, metadata !DIExpression()), !dbg !6297
  br label %for.cond, !dbg !6298

for.cond:                                         ; preds = %for.inc29, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc30, %for.inc29 ], !dbg !6300
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6289, metadata !DIExpression()), !dbg !6297
  %3 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !6301
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %3, i64 0, i32 0, !dbg !6301
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !6287, metadata !DIExpression(DW_OP_deref)), !dbg !6297
  %call2 = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !6301
  %tobool3 = icmp eq i32 %call2, 0, !dbg !6303
  br i1 %tobool3, label %cleanup.loopexit, label %for.body, !dbg !6303

for.body:                                         ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6304
  %tobool4 = icmp eq %struct._IO_FILE* %4, null, !dbg !6304
  br i1 %tobool4, label %if.end16, label %if.then5, !dbg !6307

if.then5:                                         ; preds = %for.body
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i64 0, i64 0)) #6, !dbg !6308
  %5 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !6310
  call void @llvm.dbg.value(metadata %struct.data_structure* %5, metadata !6287, metadata !DIExpression()), !dbg !6297
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %5, i64 0, i32 0, !dbg !6311
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6311
  call fastcc void @dump_struct_type(%union.tree_node* %6, i64 2, i64 0) #7, !dbg !6312
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6313
  %8 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !6314
  call void @llvm.dbg.value(metadata %struct.data_structure* %8, metadata !6287, metadata !DIExpression()), !dbg !6297
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %8, i64 0, i32 6, !dbg !6314
  %9 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !6314
  %tobool7 = icmp eq %struct.VEC_tree_heap* %9, null, !dbg !6314
  br i1 %tobool7, label %cond.end12, label %cond.true8, !dbg !6314

cond.true8:                                       ; preds = %if.then5
  call void @llvm.dbg.value(metadata %struct.data_structure* %8, metadata !6287, metadata !DIExpression()), !dbg !6297
  %base10 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %9, i64 0, i32 0, !dbg !6314
  br label %cond.end12, !dbg !6314

cond.end12:                                       ; preds = %if.then5, %cond.true8
  %cond13 = phi %struct.VEC_tree_base* [ %base10, %cond.true8 ], [ null, %if.then5 ], !dbg !6314
  %call14 = call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond13) #7, !dbg !6314
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 %call14) #6, !dbg !6315
  br label %if.end16, !dbg !6316

if.end16:                                         ; preds = %for.body, %cond.end12
  call void @llvm.dbg.value(metadata i32 0, metadata !6290, metadata !DIExpression()), !dbg !6297
  br label %for.cond17, !dbg !6317

for.cond17:                                       ; preds = %for.body28, %if.end16
  %j.0 = phi i32 [ 0, %if.end16 ], [ %inc, %for.body28 ], !dbg !6319
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !6290, metadata !DIExpression()), !dbg !6297
  %10 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !6320
  call void @llvm.dbg.value(metadata %struct.data_structure* %10, metadata !6287, metadata !DIExpression()), !dbg !6297
  %new_types18 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %10, i64 0, i32 6, !dbg !6320
  %11 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types18, align 8, !dbg !6320
  %tobool19 = icmp eq %struct.VEC_tree_heap* %11, null, !dbg !6320
  br i1 %tobool19, label %cond.end24, label %cond.true20, !dbg !6320

cond.true20:                                      ; preds = %for.cond17
  call void @llvm.dbg.value(metadata %struct.data_structure* %10, metadata !6287, metadata !DIExpression()), !dbg !6297
  %base22 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %11, i64 0, i32 0, !dbg !6320
  br label %cond.end24, !dbg !6320

cond.end24:                                       ; preds = %for.cond17, %cond.true20
  %cond25 = phi %struct.VEC_tree_base* [ %base22, %cond.true20 ], [ null, %for.cond17 ], !dbg !6320
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !6288, metadata !DIExpression(DW_OP_deref)), !dbg !6297
  %call26 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond25, i32 %j.0, %union.tree_node** nonnull %type) #7, !dbg !6320
  %tobool27 = icmp eq i32 %call26, 0, !dbg !6322
  br i1 %tobool27, label %for.inc29, label %for.body28, !dbg !6322

for.body28:                                       ; preds = %cond.end24
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6288, metadata !DIExpression()), !dbg !6297
  call fastcc void @dump_struct_type(%union.tree_node* %12, i64 2, i64 0) #7, !dbg !6324
  %inc = add i32 %j.0, 1, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6290, metadata !DIExpression()), !dbg !6297
  br label %for.cond17, !dbg !6326, !llvm.loop !6327

for.inc29:                                        ; preds = %cond.end24
  %inc30 = add i32 %i.0, 1, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %inc30, metadata !6289, metadata !DIExpression()), !dbg !6297
  br label %for.cond, !dbg !6330, !llvm.loop !6331

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6333

cleanup:                                          ; preds = %cleanup.loopexit, %entry
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6333
  ret void, !dbg !6333
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_global_vars() unnamed_addr #5 !dbg !6334 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !6338, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i64 0, metadata !6337, metadata !DIExpression()), !dbg !6346
  br label %for.cond, !dbg !6347

for.cond:                                         ; preds = %for.inc11, %entry
  %varpool_size.0 = phi i64 [ 0, %entry ], [ %varpool_size.1.lcssa, %for.inc11 ], !dbg !6348
  %i.0 = phi i64 [ 0, %entry ], [ %inc12, %for.inc11 ], !dbg !6349
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6337, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i64 %varpool_size.0, metadata !6338, metadata !DIExpression()), !dbg !6346
  %exitcond = icmp eq i64 %i.0, 2, !dbg !6350
  br i1 %exitcond, label %for.end13, label %for.body, !dbg !6351

for.body:                                         ; preds = %for.cond
  %tobool = icmp eq i64 %i.0, 0, !dbg !6352
  br i1 %tobool, label %if.end, label %if.then, !dbg !6354

if.then:                                          ; preds = %for.body
  %call = tail call %struct.htab* @htab_create(i64 %varpool_size.0, i32 (i8*)* nonnull @new_var_hash, i32 (i8*, i8*)* nonnull @new_var_eq, void (i8*)* null) #6, !dbg !6355
  store %struct.htab* %call, %struct.htab** @new_global_vars, align 8, !dbg !6356
  br label %if.end, !dbg !6357

if.end:                                           ; preds = %for.body, %if.then
  br i1 %tobool, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !6358

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %for.cond1, !dbg !6358

if.end.split.us:                                  ; preds = %if.end
  br label %for.cond1.us, !dbg !6358

for.cond1.us:                                     ; preds = %cleanup.us, %if.end.split.us
  %varpool_size.1.us = phi i64 [ %varpool_size.0, %if.end.split.us ], [ %varpool_size.3.us, %cleanup.us ], !dbg !6348
  %current_varpool.0.in.us = phi %struct.varpool_node** [ @varpool_nodes_queue, %if.end.split.us ], [ %next_needed.us, %cleanup.us ]
  %current_varpool.0.us = load %struct.varpool_node*, %struct.varpool_node** %current_varpool.0.in.us, align 8, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.varpool_node* %current_varpool.0.us, metadata !6336, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i64 %varpool_size.1.us, metadata !6338, metadata !DIExpression()), !dbg !6346
  %tobool2.us = icmp eq %struct.varpool_node* %current_varpool.0.us, null, !dbg !6358
  br i1 %tobool2.us, label %for.inc11.us-lcssa.us, label %for.body3.us, !dbg !6358

for.body3.us:                                     ; preds = %for.cond1.us
  %decl.us = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0.us, i64 0, i32 0, !dbg !6360
  %0 = load %union.tree_node*, %union.tree_node** %decl.us, align 8, !dbg !6360
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6339, metadata !DIExpression()), !dbg !6361
  %tobool4.us = icmp eq %union.tree_node* %0, null, !dbg !6362
  br i1 %tobool4.us, label %cleanup.us, label %lor.lhs.false.us, !dbg !6364

lor.lhs.false.us:                                 ; preds = %for.body3.us
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6365
  %bf.load.us = load i64, i64* %1, align 8, !dbg !6365
  %bf.cast1.us = and i64 %bf.load.us, 65535, !dbg !6366
  %cmp5.us = icmp eq i64 %bf.cast1.us, 32, !dbg !6366
  br i1 %cmp5.us, label %if.end7.us, label %cleanup.us, !dbg !6367

if.end7.us:                                       ; preds = %lor.lhs.false.us
  %inc.us = add i64 %varpool_size.1.us, 1, !dbg !6368
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !6338, metadata !DIExpression()), !dbg !6346
  br label %cleanup.us, !dbg !6370

cleanup.us:                                       ; preds = %if.end7.us, %lor.lhs.false.us, %for.body3.us
  %varpool_size.3.us = phi i64 [ %varpool_size.1.us, %lor.lhs.false.us ], [ %varpool_size.1.us, %for.body3.us ], [ %inc.us, %if.end7.us ], !dbg !6348
  call void @llvm.dbg.value(metadata i64 %varpool_size.3.us, metadata !6338, metadata !DIExpression()), !dbg !6346
  %next_needed.us = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0.us, i64 0, i32 2, !dbg !6371
  br label %for.cond1.us, !dbg !6371, !llvm.loop !6372

for.inc11.us-lcssa.us:                            ; preds = %for.cond1.us
  %varpool_size.1.us.lcssa = phi i64 [ %varpool_size.1.us, %for.cond1.us ], !dbg !6348
  call void @llvm.dbg.value(metadata i64 %varpool_size.1.us.lcssa, metadata !6338, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i64 %varpool_size.1.us.lcssa, metadata !6338, metadata !DIExpression()), !dbg !6346
  br label %for.inc11, !dbg !6374

for.cond1:                                        ; preds = %cleanup, %if.end.if.end.split_crit_edge
  %current_varpool.0.in = phi %struct.varpool_node** [ @varpool_nodes_queue, %if.end.if.end.split_crit_edge ], [ %next_needed, %cleanup ]
  %current_varpool.0 = load %struct.varpool_node*, %struct.varpool_node** %current_varpool.0.in, align 8, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.varpool_node* %current_varpool.0, metadata !6336, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i64 %varpool_size.0, metadata !6338, metadata !DIExpression()), !dbg !6346
  %tobool2 = icmp eq %struct.varpool_node* %current_varpool.0, null, !dbg !6358
  br i1 %tobool2, label %for.inc11.us-lcssa, label %for.body3, !dbg !6358

for.body3:                                        ; preds = %for.cond1
  %decl = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0, i64 0, i32 0, !dbg !6360
  %2 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6360
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6339, metadata !DIExpression()), !dbg !6361
  %tobool4 = icmp eq %union.tree_node* %2, null, !dbg !6362
  br i1 %tobool4, label %cleanup, label %lor.lhs.false, !dbg !6364

lor.lhs.false:                                    ; preds = %for.body3
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6365
  %bf.load = load i64, i64* %3, align 8, !dbg !6365
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6366
  %cmp5 = icmp eq i64 %bf.cast1, 32, !dbg !6366
  br i1 %cmp5, label %if.end7, label %cleanup, !dbg !6367

if.end7:                                          ; preds = %lor.lhs.false
  %4 = load %struct.htab*, %struct.htab** @new_global_vars, align 8, !dbg !6375
  tail call fastcc void @create_new_var(%union.tree_node* nonnull %2, %struct.htab* %4) #7, !dbg !6376
  br label %cleanup

cleanup:                                          ; preds = %lor.lhs.false, %for.body3, %if.end7
  call void @llvm.dbg.value(metadata i64 %varpool_size.0, metadata !6338, metadata !DIExpression()), !dbg !6346
  %next_needed = getelementptr inbounds %struct.varpool_node, %struct.varpool_node* %current_varpool.0, i64 0, i32 2, !dbg !6371
  br label %for.cond1, !dbg !6371, !llvm.loop !6372

for.inc11.us-lcssa:                               ; preds = %for.cond1
  br label %for.inc11, !dbg !6374

for.inc11:                                        ; preds = %for.inc11.us-lcssa.us, %for.inc11.us-lcssa
  %varpool_size.1.lcssa = phi i64 [ %varpool_size.0, %for.inc11.us-lcssa ], [ %varpool_size.1.us.lcssa, %for.inc11.us-lcssa.us ], !dbg !6348
  call void @llvm.dbg.value(metadata i64 %varpool_size.1.lcssa, metadata !6338, metadata !DIExpression()), !dbg !6346
  %inc12 = add nuw nsw i64 %i.0, 1, !dbg !6374
  call void @llvm.dbg.value(metadata i64 %inc12, metadata !6337, metadata !DIExpression()), !dbg !6346
  br label %for.cond, !dbg !6377, !llvm.loop !6378

for.end13:                                        ; preds = %for.cond
  %5 = load %struct.htab*, %struct.htab** @new_global_vars, align 8, !dbg !6380
  %tobool14 = icmp eq %struct.htab* %5, null, !dbg !6380
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6382

if.then15:                                        ; preds = %for.end13
  tail call void @htab_traverse(%struct.htab* nonnull %5, i32 (i8**, i8*)* nonnull @update_varpool_with_new_var, i8* null) #6, !dbg !6383
  br label %if.end16, !dbg !6383

if.end16:                                         ; preds = %for.end13, %if.then15
  ret void, !dbg !6384
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_new_vars(%struct.htab* %new_vars_htab) unnamed_addr #5 !dbg !6385 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %new_vars_htab, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6389
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !6389
  %tobool1 = icmp ne %struct.htab* %new_vars_htab, null, !dbg !6391
  %or.cond = and i1 %tobool, %tobool1, !dbg !6393
  br i1 %or.cond, label %if.then2, label %if.end3, !dbg !6393

if.then2:                                         ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %new_vars_htab, i32 (i8**, i8*)* nonnull @dump_new_var, i8* null) #6, !dbg !6394
  br label %if.end3, !dbg !6394

if.end3:                                          ; preds = %entry, %if.then2
  ret void, !dbg !6395
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_reorg_1() unnamed_addr #5 !dbg !6396 {
entry:
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* null) #6, !dbg !6399
  br label %for.cond, !dbg !6400

for.cond:                                         ; preds = %for.inc, %entry
  %node.0.in = phi %struct.cgraph_node** [ @cgraph_nodes, %entry ], [ %next, %for.inc ]
  %node.0 = load %struct.cgraph_node*, %struct.cgraph_node** %node.0.in, align 8, !dbg !6402
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !6398, metadata !DIExpression()), !dbg !6403
  %tobool = icmp eq %struct.cgraph_node* %node.0, null, !dbg !6404
  br i1 %tobool, label %for.end, label %for.body, !dbg !6404

for.body:                                         ; preds = %for.cond
  %analyzed = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 27, !dbg !6405
  %bf.load = load i16, i16* %analyzed, align 4, !dbg !6405
  %bf.clear = and i16 %bf.load, 32, !dbg !6405
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !6408
  br i1 %tobool1, label %for.inc, label %land.lhs.true, !dbg !6409

land.lhs.true:                                    ; preds = %for.body
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 0, !dbg !6410
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6410
  %tobool2 = icmp eq %union.tree_node* %0, null, !dbg !6411
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !6412

if.then:                                          ; preds = %land.lhs.true
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 1, !dbg !6413
  %1 = load %struct.function*, %struct.function** %f, align 8, !dbg !6413
  tail call void @push_cfun(%struct.function* %1) #6, !dbg !6415
  %2 = bitcast %struct.cgraph_node* %node.0 to i64*, !dbg !6416
  %3 = load i64, i64* %2, align 8, !dbg !6416
  store i64 %3, i64* bitcast (%union.tree_node** @current_function_decl to i64*), align 8, !dbg !6417
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6418
  %tobool5 = icmp eq %struct._IO_FILE* %4, null, !dbg !6418
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6420

if.then6:                                         ; preds = %if.then
  %5 = bitcast %struct.cgraph_node* %node.0 to %struct.tree_decl_minimal**, !dbg !6421
  %6 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %5, align 8, !dbg !6421
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %6, i64 0, i32 3, !dbg !6421
  %7 = bitcast %union.tree_node** %name to %struct.tree_identifier**, !dbg !6421
  %8 = load %struct.tree_identifier*, %struct.tree_identifier** %7, align 8, !dbg !6421
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %8, i64 0, i32 1, i32 0, !dbg !6421
  %9 = load i8*, i8** %str, align 8, !dbg !6421
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0), i8* %9) #6, !dbg !6422
  br label %if.end, !dbg !6422

if.end:                                           ; preds = %if.then, %if.then6
  tail call fastcc void @do_reorg_for_func(%struct.cgraph_node* nonnull %node.0) #7, !dbg !6423
  tail call void @free_dominance_info(i32 1) #6, !dbg !6424
  tail call void @free_dominance_info(i32 2) #6, !dbg !6425
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !dbg !6426
  tail call void @pop_cfun() #6, !dbg !6427
  br label %for.inc, !dbg !6428

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.end
  %next = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 3, !dbg !6429
  br label %for.cond, !dbg !6430, !llvm.loop !6431

for.end:                                          ; preds = %for.cond
  tail call void @set_cfun(%struct.function* null) #6, !dbg !6433
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* null) #6, !dbg !6434
  ret void, !dbg !6435
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_new_vars_htab(%struct.htab* %new_vars_htab) unnamed_addr #5 !dbg !6436 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %new_vars_htab, metadata !6438, metadata !DIExpression()), !dbg !6439
  %tobool = icmp eq %struct.htab* %new_vars_htab, null, !dbg !6440
  br i1 %tobool, label %if.end, label %if.then, !dbg !6442

if.then:                                          ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %new_vars_htab, i32 (i8**, i8*)* nonnull @free_new_var, i8* null) #6, !dbg !6443
  br label %if.end, !dbg !6443

if.end:                                           ; preds = %entry, %if.then
  tail call void @htab_delete(%struct.htab* %new_vars_htab) #6, !dbg !6444
  call void @llvm.dbg.value(metadata %struct.htab* null, metadata !6438, metadata !DIExpression()), !dbg !6439
  ret void, !dbg !6445
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_type(%struct.data_structure* %str, i32* %str_num) unnamed_addr #5 !dbg !6446 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6450, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32* %str_num, metadata !6451, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32 0, metadata !6452, metadata !DIExpression()), !dbg !6458
  %struct_clustering = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 5, !dbg !6459
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 0, !dbg !6460
  %fields1 = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !6460
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !6460
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 6, !dbg !6460
  br label %while.cond, !dbg !6461

while.cond:                                       ; preds = %while.body, %entry
  %cluster_num.0 = phi i32 [ 0, %entry ], [ %inc, %while.body ], !dbg !6458
  %cluster.0.in = phi %struct.field_cluster** [ %struct_clustering, %entry ], [ %sibling, %while.body ]
  %cluster.0 = load %struct.field_cluster*, %struct.field_cluster** %cluster.0.in, align 8, !dbg !6458
  call void @llvm.dbg.value(metadata %struct.field_cluster* %cluster.0, metadata !6453, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32 %cluster_num.0, metadata !6452, metadata !DIExpression()), !dbg !6458
  %tobool = icmp eq %struct.field_cluster* %cluster.0, null, !dbg !6461
  br i1 %tobool, label %while.end, label %while.body, !dbg !6461

while.body:                                       ; preds = %while.cond
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6462
  %1 = load i32, i32* %str_num, align 4, !dbg !6463
  %call = tail call fastcc %union.tree_node* @gen_cluster_name(%union.tree_node* %0, i32 %cluster_num.0, i32 %1) #7, !dbg !6464
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6454, metadata !DIExpression()), !dbg !6460
  %inc = add nuw nsw i32 %cluster_num.0, 1, !dbg !6465
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6452, metadata !DIExpression()), !dbg !6458
  %2 = load %struct.field_entry*, %struct.field_entry** %fields1, align 8, !dbg !6466
  %3 = load i32, i32* %num_fields, align 8, !dbg !6467
  %call2 = tail call fastcc %union.tree_node* @create_fields(%struct.field_cluster* nonnull %cluster.0, %struct.field_entry* %2, i32 %3) #7, !dbg !6468
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6456, metadata !DIExpression()), !dbg !6460
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6469
  %call4 = tail call fastcc %union.tree_node* @build_basic_struct(%union.tree_node* %call2, %union.tree_node* %call, %union.tree_node* %4) #7, !dbg !6470
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6457, metadata !DIExpression()), !dbg !6460
  %5 = load %struct.field_entry*, %struct.field_entry** %fields1, align 8, !dbg !6471
  %6 = load i32, i32* %num_fields, align 8, !dbg !6472
  tail call fastcc void @update_fields_mapping(%struct.field_cluster* nonnull %cluster.0, %union.tree_node* %call4, %struct.field_entry* %5, i32 %6) #7, !dbg !6473
  %call7 = tail call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %new_types, %union.tree_node* %call4) #7, !dbg !6474
  %sibling = getelementptr inbounds %struct.field_cluster, %struct.field_cluster* %cluster.0, i64 0, i32 1, !dbg !6475
  br label %while.cond, !dbg !6461, !llvm.loop !6476

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %str_num, align 4, !dbg !6478
  %inc8 = add nsw i32 %7, 1, !dbg !6478
  store i32 %inc8, i32* %str_num, align 4, !dbg !6478
  ret void, !dbg !6479
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gen_cluster_name(%union.tree_node* %decl, i32 %clust_num, i32 %str_num) unnamed_addr #0 !dbg !6480 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6484, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %clust_num, metadata !6485, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i32 %str_num, metadata !6486, metadata !DIExpression()), !dbg !6501
  %call = tail call fastcc i8* @get_type_name(%union.tree_node* %decl) #7, !dbg !6502
  call void @llvm.dbg.value(metadata i8* %call, metadata !6487, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* null, metadata !6488, metadata !DIExpression()), !dbg !6501
  %tobool = icmp eq i8* %call, null, !dbg !6503
  br i1 %tobool, label %do.body, label %if.end, !dbg !6504

do.body:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), metadata !6492, metadata !DIExpression()), !dbg !6505
  %call1 = tail call i64 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !6506
  %add = add i64 %call1, 32, !dbg !6506
  %0 = alloca i8, i64 %add, align 16, !dbg !6506
  call void @llvm.dbg.value(metadata i8* %0, metadata !6488, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %0, metadata !6496, metadata !DIExpression()), !dbg !6505
  %conv = sext i32 %str_num to i64, !dbg !6506
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i64 %conv) #6, !dbg !6506
  br label %if.end, !dbg !6506

if.end:                                           ; preds = %entry, %do.body
  %tmp_name.0 = phi i8* [ null, %entry ], [ %0, %do.body ], !dbg !6501
  call void @llvm.dbg.value(metadata i8* %tmp_name.0, metadata !6488, metadata !DIExpression()), !dbg !6501
  %tobool3 = icmp eq i8* %tmp_name.0, null, !dbg !6507
  %tmp_name.0.call = select i1 %tobool3, i8* %call, i8* %tmp_name.0, !dbg !6507
  %call4 = call i64 @strlen(i8* %tmp_name.0.call) #6, !dbg !6508
  %call5 = call i64 @strlen(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6509
  %add6 = add i64 %call4, %call5, !dbg !6510
  call void @llvm.dbg.value(metadata i64 %add6, metadata !6491, metadata !DIExpression()), !dbg !6501
  %add7 = add i64 %add6, 1, !dbg !6511
  %1 = alloca i8, i64 %add7, align 16, !dbg !6511
  call void @llvm.dbg.value(metadata i8* %1, metadata !6489, metadata !DIExpression()), !dbg !6501
  %call18 = call i64 @strlen(i8* %tmp_name.0.call) #6, !dbg !6512
  %call19 = call i8* @memcpy(i8* nonnull %1, i8* %tmp_name.0.call, i64 %call18) #6, !dbg !6513
  %call25 = call i64 @strlen(i8* %tmp_name.0.call) #6, !dbg !6514
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %call25, !dbg !6515
  %call26 = call i8* @strcpy(i8* nonnull %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6516
  call void @llvm.dbg.value(metadata i8* %1, metadata !6498, metadata !DIExpression()), !dbg !6517
  %call30 = call i64 @strlen(i8* nonnull %1) #6, !dbg !6518
  %add31 = add i64 %call30, 32, !dbg !6518
  %2 = alloca i8, i64 %add31, align 16, !dbg !6518
  call void @llvm.dbg.value(metadata i8* %2, metadata !6490, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %2, metadata !6500, metadata !DIExpression()), !dbg !6517
  %conv32 = sext i32 %clust_num to i64, !dbg !6518
  %call33 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8* nonnull %1, i64 %conv32) #6, !dbg !6518
  %call36 = call %union.tree_node* @get_identifier(i8* nonnull %2) #6, !dbg !6519
  ret %union.tree_node* %call36, !dbg !6520
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_fields(%struct.field_cluster* %cluster, %struct.field_entry* %fields, i32 %num_fields) unnamed_addr #5 !dbg !6521 {
entry:
  call void @llvm.dbg.value(metadata %struct.field_cluster* %cluster, metadata !6525, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %struct.field_entry* %fields, metadata !6526, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 %num_fields, metadata !6527, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6529, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6530, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i32 0, metadata !6528, metadata !DIExpression()), !dbg !6536
  %fields_in_cluster = getelementptr inbounds %struct.field_cluster, %struct.field_cluster* %cluster, i64 0, i32 0, !dbg !6537
  %0 = sext i32 %num_fields to i64, !dbg !6538
  br label %for.cond, !dbg !6538

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6539
  %new_types.0 = phi %union.tree_node* [ %new_types.2, %for.inc ], [ null, %entry ], !dbg !6540
  %last.0 = phi %union.tree_node* [ %last.1, %for.inc ], [ null, %entry ], !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0, metadata !6530, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %new_types.0, metadata !6529, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6528, metadata !DIExpression()), !dbg !6536
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !6541
  br i1 %cmp, label %for.body, label %for.end, !dbg !6542

for.body:                                         ; preds = %for.cond
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !6543
  %div = lshr i64 %indvars.iv, 6, !dbg !6543
  %idxprom = and i64 %div, 67108863, !dbg !6543
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 3, i64 %idxprom, !dbg !6543
  %2 = load i64, i64* %arrayidx, align 8, !dbg !6543
  %rem = and i64 %indvars.iv, 63, !dbg !6543
  %3 = shl i64 1, %rem, !dbg !6543
  %4 = and i64 %2, %3, !dbg !6543
  %tobool = icmp eq i64 %4, 0, !dbg !6543
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6544

if.then:                                          ; preds = %for.body
  %decl = getelementptr inbounds %struct.field_entry, %struct.field_entry* %fields, i64 %indvars.iv, i32 2, !dbg !6545
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !6545
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %5) #6, !dbg !6546
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6531, metadata !DIExpression()), !dbg !6547
  %tobool3 = icmp eq %union.tree_node* %new_types.0, null, !dbg !6548
  br i1 %tobool3, label %for.inc, label %if.else, !dbg !6550

if.else:                                          ; preds = %if.then
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6551
  store %union.tree_node* %call, %union.tree_node** %chain, align 8, !dbg !6552
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body, %if.else
  %new_types.2 = phi %union.tree_node* [ %new_types.0, %for.body ], [ %new_types.0, %if.else ], [ %call, %if.then ], !dbg !6540
  %last.1 = phi %union.tree_node* [ %last.0, %for.body ], [ %call, %if.else ], [ %call, %if.then ], !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %last.1, metadata !6530, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %new_types.2, metadata !6529, metadata !DIExpression()), !dbg !6536
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6553
  call void @llvm.dbg.value(metadata i32 undef, metadata !6528, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6536
  br label %for.cond, !dbg !6554, !llvm.loop !6555

for.end:                                          ; preds = %for.cond
  %new_types.0.lcssa = phi %union.tree_node* [ %new_types.0, %for.cond ], !dbg !6540
  %last.0.lcssa = phi %union.tree_node* [ %last.0, %for.cond ], !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %new_types.0.lcssa, metadata !6529, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !6530, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %new_types.0.lcssa, metadata !6529, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !6530, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %new_types.0.lcssa, metadata !6529, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.value(metadata %union.tree_node* %last.0.lcssa, metadata !6530, metadata !DIExpression()), !dbg !6536
  %chain7 = getelementptr inbounds %union.tree_node, %union.tree_node* %last.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6557
  store %union.tree_node* null, %union.tree_node** %chain7, align 8, !dbg !6558
  ret %union.tree_node* %new_types.0.lcssa, !dbg !6559
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @build_basic_struct(%union.tree_node* %fields, %union.tree_node* %name, %union.tree_node* %orig_struct) unnamed_addr #5 !dbg !6560 {
entry:
  %ref = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fields, metadata !6564, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !6565, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_struct, metadata !6566, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6567, metadata !DIExpression()), !dbg !6570
  %0 = bitcast %union.tree_node** %ref to i8*, !dbg !6571
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6571
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6568, metadata !DIExpression()), !dbg !6570
  store %union.tree_node* null, %union.tree_node** %ref, align 8, !dbg !6572
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_struct, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6573
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !6573
  %tobool = icmp eq %union.tree_node* %2, null, !dbg !6573
  br i1 %tobool, label %if.end, label %if.then, !dbg !6575

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* nonnull %2) #6, !dbg !6576
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6567, metadata !DIExpression()), !dbg !6570
  br label %if.end, !dbg !6577

if.end:                                           ; preds = %entry, %if.then
  %attributes.0 = phi %union.tree_node* [ %call, %if.then ], [ null, %entry ], !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* %attributes.0, metadata !6567, metadata !DIExpression()), !dbg !6570
  %call4 = tail call %union.tree_node* @make_node_stat(i32 16) #6, !dbg !6578
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6568, metadata !DIExpression()), !dbg !6570
  store %union.tree_node* %call4, %union.tree_node** %ref, align 8, !dbg !6579
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6580
  store %union.tree_node* null, %union.tree_node** %3, align 8, !dbg !6581
  call void @llvm.dbg.value(metadata %union.tree_node** %ref, metadata !6568, metadata !DIExpression(DW_OP_deref)), !dbg !6570
  %call6 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %ref, %union.tree_node* %attributes.0, i32 8) #6, !dbg !6582
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_struct, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6583
  %bf.load = load i64, i64* %4, align 8, !dbg !6583
  %bf.cast = and i64 %bf.load, 2199023255552, !dbg !6583
  %5 = bitcast %union.tree_node** %ref to %struct.tree_common**, !dbg !6584
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !6584
  %7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 0, i32 0, !dbg !6584
  %bf.load9 = load i64, i64* %7, align 8, !dbg !6585
  %bf.clear10 = and i64 %bf.load9, -2199023255553, !dbg !6585
  %bf.set = or i64 %bf.clear10, %bf.cast, !dbg !6585
  store i64 %bf.set, i64* %7, align 8, !dbg !6585
  call void @llvm.dbg.value(metadata %union.tree_node* %fields, metadata !6569, metadata !DIExpression()), !dbg !6570
  br label %for.cond, !dbg !6586

for.cond:                                         ; preds = %for.body, %if.end
  %x.0 = phi %union.tree_node* [ %fields, %if.end ], [ %12, %for.body ], !dbg !6588
  call void @llvm.dbg.value(metadata %union.tree_node* %x.0, metadata !6569, metadata !DIExpression()), !dbg !6570
  %tobool11 = icmp eq %union.tree_node* %x.0, null, !dbg !6589
  %8 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !6570
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6568, metadata !DIExpression()), !dbg !6570
  br i1 %tobool11, label %for.end, label %for.body, !dbg !6589

for.body:                                         ; preds = %for.cond
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6590
  store %union.tree_node* %8, %union.tree_node** %context, align 8, !dbg !6593
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6594
  %bf.load14 = load i64, i64* %9, align 8, !dbg !6594
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6595
  %bf.load20 = load i64, i64* %10, align 8, !dbg !6596
  %11 = and i64 %bf.load14, 2199023255552, !dbg !6596
  %bf.set28 = or i64 %11, %bf.load20, !dbg !6596
  store i64 %bf.set28, i64* %10, align 8, !dbg !6596
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %x.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6597
  %12 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6597
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6569, metadata !DIExpression()), !dbg !6570
  br label %for.cond, !dbg !6598, !llvm.loop !6599

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %union.tree_node* [ %8, %for.cond ], !dbg !6570
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6601
  %13 = bitcast i32* %values to %union.tree_node**, !dbg !6601
  store %union.tree_node* %fields, %union.tree_node** %13, align 8, !dbg !6602
  call void @llvm.dbg.value(metadata %union.tree_node* %.lcssa, metadata !6568, metadata !DIExpression()), !dbg !6570
  call void @layout_type(%union.tree_node* %.lcssa) #6, !dbg !6603
  %14 = bitcast %union.tree_node** %ref to %struct.tree_type**, !dbg !6604
  %15 = load %struct.tree_type*, %struct.tree_type** %14, align 8, !dbg !6604
  %name33 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %15, i64 0, i32 12, !dbg !6604
  store %union.tree_node* %name, %union.tree_node** %name33, align 8, !dbg !6605
  %.cast = bitcast %struct.tree_type* %15 to %union.tree_node*, !dbg !6606
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !6568, metadata !DIExpression()), !dbg !6570
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6607
  ret %union.tree_node* %.cast, !dbg !6608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_fields_mapping(%struct.field_cluster* %cluster, %union.tree_node* %new_type, %struct.field_entry* %fields, i32 %num_fields) unnamed_addr #0 !dbg !6609 {
entry:
  call void @llvm.dbg.value(metadata %struct.field_cluster* %cluster, metadata !6613, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !6614, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata %struct.field_entry* %fields, metadata !6615, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i32 %num_fields, metadata !6616, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i32 0, metadata !6617, metadata !DIExpression()), !dbg !6618
  %fields_in_cluster = getelementptr inbounds %struct.field_cluster, %struct.field_cluster* %cluster, i64 0, i32 0, !dbg !6619
  %0 = sext i32 %num_fields to i64, !dbg !6623
  br label %for.cond, !dbg !6623

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !6624
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6617, metadata !DIExpression()), !dbg !6618
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !6625
  br i1 %cmp, label %for.body, label %for.end, !dbg !6626

for.body:                                         ; preds = %for.cond
  %1 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %fields_in_cluster, align 8, !dbg !6627
  %div = lshr i64 %indvars.iv, 6, !dbg !6627
  %idxprom = and i64 %div, 67108863, !dbg !6627
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %1, i64 0, i32 3, i64 %idxprom, !dbg !6627
  %2 = load i64, i64* %arrayidx, align 8, !dbg !6627
  %rem = and i64 %indvars.iv, 63, !dbg !6627
  %3 = shl i64 1, %rem, !dbg !6627
  %4 = and i64 %2, %3, !dbg !6627
  %tobool = icmp eq i64 %4, 0, !dbg !6627
  br i1 %tobool, label %for.inc, label %if.then, !dbg !6628

if.then:                                          ; preds = %for.body
  %field_mapping = getelementptr inbounds %struct.field_entry, %struct.field_entry* %fields, i64 %indvars.iv, i32 3, !dbg !6629
  store %union.tree_node* %new_type, %union.tree_node** %field_mapping, align 8, !dbg !6630
  br label %for.inc, !dbg !6631

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6632
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6618
  br label %for.cond, !dbg !6633, !llvm.loop !6634

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6636
}

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dump_struct_type(%union.tree_node* %type, i64 %indent, i64 %shift) unnamed_addr #5 !dbg !6637 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6641, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i64 2, metadata !6642, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i64 %shift, metadata !6643, metadata !DIExpression()), !dbg !6651
  %tobool = icmp ne %union.tree_node* %type, null, !dbg !6652
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6654
  %tobool1 = icmp ne %struct._IO_FILE* %0, null, !dbg !6654
  %or.cond = and i1 %tobool, %tobool1, !dbg !6655
  br i1 %or.cond, label %if.end, label %cleanup.cont, !dbg !6655

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6656
  %bf.load = load i64, i64* %1, align 8, !dbg !6656
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6658
  %cmp = icmp eq i64 %bf.cast1, 16, !dbg !6658
  br i1 %cmp, label %if.end3, label %if.then2, !dbg !6659

if.then2:                                         ; preds = %if.end
  tail call void @print_generic_expr(%struct._IO_FILE* nonnull %0, %union.tree_node* nonnull %type, i32 0) #6, !dbg !6660
  br label %cleanup.cont, !dbg !6662

if.end3:                                          ; preds = %if.end
  tail call fastcc void @print_shift(i64 %shift) #7, !dbg !6663
  %call = tail call fastcc i8* @get_type_name(%union.tree_node* nonnull %type) #7, !dbg !6664
  call void @llvm.dbg.value(metadata i8* %call, metadata !6644, metadata !DIExpression()), !dbg !6651
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6665
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !6666
  %tobool5 = icmp eq i8* %call, null, !dbg !6667
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !6669

if.then6:                                         ; preds = %if.end3
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6670
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i8* nonnull %call) #6, !dbg !6671
  br label %if.end8, !dbg !6671

if.end8:                                          ; preds = %if.end3, %if.then6
  tail call fastcc void @print_shift(i64 %shift) #7, !dbg !6672
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6673
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !6674
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6675
  %5 = bitcast i32* %values to %union.tree_node**, !dbg !6675
  %add = add i64 %shift, 2, !dbg !6676
  br label %for.cond, !dbg !6677

for.cond:                                         ; preds = %while.end, %if.end8
  %field.0.in = phi %union.tree_node** [ %5, %if.end8 ], [ %chain, %while.end ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !6678
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !6645, metadata !DIExpression()), !dbg !6651
  %tobool11 = icmp eq %union.tree_node* %field.0, null, !dbg !6679
  br i1 %tobool11, label %for.end, label %for.body, !dbg !6679

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 2, metadata !6646, metadata !DIExpression()), !dbg !6676
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6680
  %6 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !6680
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6650, metadata !DIExpression()), !dbg !6676
  tail call fastcc void @print_shift(i64 %shift) #7, !dbg !6681
  br label %while.cond, !dbg !6682

while.cond:                                       ; preds = %while.body, %for.body
  %s.0 = phi i64 [ 2, %for.body ], [ %dec, %while.body ], !dbg !6676
  call void @llvm.dbg.value(metadata i64 %s.0, metadata !6646, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.value(metadata i64 %s.0, metadata !6646, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6676
  %tobool13 = icmp eq i64 %s.0, 0, !dbg !6682
  br i1 %tobool13, label %while.end, label %while.body, !dbg !6682

while.body:                                       ; preds = %while.cond
  %dec = add nsw i64 %s.0, -1, !dbg !6683
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6646, metadata !DIExpression()), !dbg !6676
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6684
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !6685
  br label %while.cond, !dbg !6682, !llvm.loop !6686

while.end:                                        ; preds = %while.cond
  tail call fastcc void @dump_struct_type(%union.tree_node* %6, i64 2, i64 %add) #7, !dbg !6688
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6689
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !6690
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6691
  tail call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* nonnull %field.0, i32 0) #6, !dbg !6692
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6693
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !6694
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6695
  br label %for.cond, !dbg !6696, !llvm.loop !6697

for.end:                                          ; preds = %for.cond
  tail call fastcc void @print_shift(i64 %shift) #7, !dbg !6699
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6700
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #6, !dbg !6701
  br label %cleanup.cont, !dbg !6702

cleanup.cont:                                     ; preds = %if.then2, %for.end, %entry
  ret void, !dbg !6702
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @print_shift(i64 %shift) unnamed_addr #0 !dbg !6703 {
entry:
  call void @llvm.dbg.value(metadata i64 %shift, metadata !6707, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i64 %shift, metadata !6708, metadata !DIExpression()), !dbg !6709
  br label %while.cond, !dbg !6710

while.cond:                                       ; preds = %while.body, %entry
  %sh.0 = phi i64 [ %shift, %entry ], [ %dec, %while.body ], !dbg !6709
  call void @llvm.dbg.value(metadata i64 %sh.0, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i64 %sh.0, metadata !6708, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6709
  %tobool = icmp eq i64 %sh.0, 0, !dbg !6710
  br i1 %tobool, label %while.end, label %while.body, !dbg !6710

while.body:                                       ; preds = %while.cond
  %dec = add i64 %sh.0, -1, !dbg !6711
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6708, metadata !DIExpression()), !dbg !6709
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6712
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !6713
  br label %while.cond, !dbg !6710, !llvm.loop !6714

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6716
}

; Function Attrs: nounwind uwtable
define internal i32 @new_var_hash(i8* %x) #5 !dbg !6717 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !6719, metadata !DIExpression()), !dbg !6720
  %0 = bitcast i8* %x to %struct.tree_decl_minimal**, !dbg !6721
  %1 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %0, align 8, !dbg !6721
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %1, i64 0, i32 2, !dbg !6721
  %2 = load i32, i32* %uid, align 4, !dbg !6721
  ret i32 %2, !dbg !6722
}

; Function Attrs: nounwind uwtable
define internal i32 @new_var_eq(i8* %x, i8* %y) #5 !dbg !6723 {
entry:
  call void @llvm.dbg.value(metadata i8* %x, metadata !6725, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i8* %y, metadata !6726, metadata !DIExpression()), !dbg !6727
  %0 = bitcast i8* %y to i64*, !dbg !6728
  %bf.load = load i64, i64* %0, align 8, !dbg !6728
  %bf.cast = and i64 %bf.load, 65535, !dbg !6728
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !6728
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6728
  %cmp = icmp eq i32 %1, 3, !dbg !6728
  br i1 %cmp, label %if.then, label %return, !dbg !6730

if.then:                                          ; preds = %entry
  %2 = bitcast i8* %x to %struct.tree_decl_minimal**, !dbg !6731
  %3 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %2, align 8, !dbg !6731
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %3, i64 0, i32 2, !dbg !6731
  %4 = load i32, i32* %uid, align 4, !dbg !6731
  %uid2 = getelementptr inbounds i8, i8* %y, i64 28, !dbg !6732
  %5 = bitcast i8* %uid2 to i32*, !dbg !6732
  %6 = load i32, i32* %5, align 4, !dbg !6732
  %cmp3 = icmp eq i32 %4, %6, !dbg !6733
  %conv = zext i1 %cmp3 to i32, !dbg !6733
  br label %return, !dbg !6734

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ 0, %entry ], !dbg !6735
  ret i32 %retval.0, !dbg !6736
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_var(%union.tree_node* %var_decl, %struct.htab* %new_vars_htab) unnamed_addr #5 !dbg !6737 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %var_decl, metadata !6741, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.value(metadata %struct.htab* %new_vars_htab, metadata !6742, metadata !DIExpression()), !dbg !6747
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !6748
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6748
  %tobool = icmp eq %union.tree_node* %var_decl, null, !dbg !6749
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6751

lor.lhs.false:                                    ; preds = %entry
  %call = tail call fastcc %struct.new_var_data* @is_in_new_vars_htab(%union.tree_node* nonnull %var_decl, %struct.htab* %new_vars_htab) #7, !dbg !6752
  %tobool1 = icmp eq %struct.new_var_data* %call, null, !dbg !6752
  br i1 %tobool1, label %if.end, label %cleanup, !dbg !6753

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !6745, metadata !DIExpression(DW_OP_deref)), !dbg !6747
  %call2 = call fastcc zeroext i8 @is_candidate(%union.tree_node* nonnull %var_decl, %union.tree_node** nonnull %type, %struct.VEC_tree_heap** null) #7, !dbg !6754
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6754
  br i1 %tobool3, label %cleanup, label %if.end5, !dbg !6756

if.end5:                                          ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6757
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6745, metadata !DIExpression()), !dbg !6747
  %call6 = call fastcc i32 @find_structure(%union.tree_node* %1) #7, !dbg !6758
  call void @llvm.dbg.value(metadata i32 %call6, metadata !6746, metadata !DIExpression()), !dbg !6747
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !6759
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !6759
  %call8 = call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !6759
  %cmp = icmp eq i32 %call6, %call8, !dbg !6761
  br i1 %cmp, label %cleanup, label %if.end10, !dbg !6762

if.end10:                                         ; preds = %if.end5
  %3 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !6763
  %base13 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %3, i64 0, i32 0, !dbg !6763
  %call17 = call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base13, i32 %call6) #7, !dbg !6763
  call void @llvm.dbg.value(metadata %struct.data_structure* %call17, metadata !6744, metadata !DIExpression()), !dbg !6747
  %call18 = call fastcc %struct.new_var_data* @create_new_var_node(%union.tree_node* nonnull %var_decl, %struct.data_structure* %call17) #7, !dbg !6764
  call void @llvm.dbg.value(metadata %struct.new_var_data* %call18, metadata !6743, metadata !DIExpression()), !dbg !6747
  call fastcc void @create_new_var_1(%union.tree_node* nonnull %var_decl, %struct.data_structure* %call17, %struct.new_var_data* %call18) #7, !dbg !6765
  call fastcc void @add_to_new_vars_htab(%struct.new_var_data* %call18, %struct.htab* %new_vars_htab) #7, !dbg !6766
  br label %cleanup, !dbg !6767

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %entry, %if.end5, %if.end10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6767
  ret void, !dbg !6767
}

; Function Attrs: nounwind uwtable
define internal i32 @update_varpool_with_new_var(i8** %slot, i8* %data) #5 !dbg !6768 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !6770, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata i8* %data, metadata !6771, metadata !DIExpression()), !dbg !6775
  %0 = bitcast i8** %slot to %struct.new_var_data**, !dbg !6776
  %1 = load %struct.new_var_data*, %struct.new_var_data** %0, align 8, !dbg !6776
  call void @llvm.dbg.value(metadata %struct.new_var_data* %1, metadata !6772, metadata !DIExpression()), !dbg !6775
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !6777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6777
  call void @llvm.dbg.value(metadata i32 0, metadata !6774, metadata !DIExpression()), !dbg !6775
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %1, i64 0, i32 1, !dbg !6778
  br label %for.cond, !dbg !6781

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !6782
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6774, metadata !DIExpression()), !dbg !6775
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_vars, align 8, !dbg !6783
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !6783
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6783

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !6783
  br label %cond.end, !dbg !6783

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6783
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !6773, metadata !DIExpression(DW_OP_deref)), !dbg !6775
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !6783
  %tobool2 = icmp eq i32 %call, 0, !dbg !6784
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6784

for.body:                                         ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !6785
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6773, metadata !DIExpression()), !dbg !6775
  call fastcc void @insert_global_to_varpool(%union.tree_node* %4) #7, !dbg !6786
  %inc = add i32 %i.0, 1, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6774, metadata !DIExpression()), !dbg !6775
  br label %for.cond, !dbg !6788, !llvm.loop !6789

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !6791
  ret i32 1, !dbg !6792
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.new_var_data* @is_in_new_vars_htab(%union.tree_node* %decl, %struct.htab* %new_vars_htab) unnamed_addr #5 !dbg !6793 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6797, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata %struct.htab* %new_vars_htab, metadata !6798, metadata !DIExpression()), !dbg !6799
  %0 = bitcast %union.tree_node* %decl to i8*, !dbg !6800
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6801
  %1 = load i32, i32* %uid, align 4, !dbg !6801
  %call = tail call i8* @htab_find_with_hash(%struct.htab* %new_vars_htab, i8* %0, i32 %1) #6, !dbg !6802
  %2 = bitcast i8* %call to %struct.new_var_data*, !dbg !6803
  ret %struct.new_var_data* %2, !dbg !6804
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.new_var_data* @create_new_var_node(%union.tree_node* %var, %struct.data_structure* %str) unnamed_addr #5 !dbg !6805 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6810, metadata !DIExpression()), !dbg !6812
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !6813
  %0 = bitcast i8* %call to %struct.new_var_data*, !dbg !6813
  call void @llvm.dbg.value(metadata %struct.new_var_data* %0, metadata !6811, metadata !DIExpression()), !dbg !6812
  %orig_var = bitcast i8* %call to %union.tree_node**, !dbg !6814
  store %union.tree_node* %var, %union.tree_node** %orig_var, align 8, !dbg !6815
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 6, !dbg !6816
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !6816
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !6816
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6816

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6816
  br label %cond.end, !dbg !6816

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6816
  %call2 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #7, !dbg !6816
  %call3 = tail call fastcc %struct.VEC_tree_heap* @VEC_tree_heap_alloc(i32 %call2) #7, !dbg !6816
  %new_vars = getelementptr inbounds i8, i8* %call, i64 8, !dbg !6817
  %2 = bitcast i8* %new_vars to %struct.VEC_tree_heap**, !dbg !6817
  store %struct.VEC_tree_heap* %call3, %struct.VEC_tree_heap** %2, align 8, !dbg !6818
  ret %struct.new_var_data* %0, !dbg !6819
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_var_1(%union.tree_node* %orig_decl, %struct.data_structure* %str, %struct.new_var_data* %node) unnamed_addr #5 !dbg !6820 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_decl, metadata !6824, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !6825, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata %struct.new_var_data* %node, metadata !6826, metadata !DIExpression()), !dbg !6837
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !6838
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6838
  call void @llvm.dbg.value(metadata i32 0, metadata !6827, metadata !DIExpression()), !dbg !6837
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 6, !dbg !6839
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6840
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %node, i64 0, i32 1, !dbg !6841
  br label %for.cond, !dbg !6842

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !6843
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6827, metadata !DIExpression()), !dbg !6837
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !6844
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !6844
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6844

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !6844
  br label %cond.end, !dbg !6844

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !6844
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !6828, metadata !DIExpression(DW_OP_deref)), !dbg !6837
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %type) #7, !dbg !6844
  %tobool2 = icmp eq i32 %call, 0, !dbg !6845
  br i1 %tobool2, label %for.end, label %for.body, !dbg !6845

for.body:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6829, metadata !DIExpression()), !dbg !6841
  %conv = zext i32 %i.0 to i64, !dbg !6846
  %call3 = call fastcc %union.tree_node* @gen_var_name(%union.tree_node* %orig_decl, i64 %conv) #7, !dbg !6847
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !6833, metadata !DIExpression()), !dbg !6841
  %2 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6848
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6828, metadata !DIExpression()), !dbg !6837
  %call4 = call fastcc %union.tree_node* @gen_struct_type(%union.tree_node* %orig_decl, %union.tree_node* %2) #7, !dbg !6849
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6828, metadata !DIExpression()), !dbg !6837
  store %union.tree_node* %call4, %union.tree_node** %type, align 8, !dbg !6850
  %call5 = call fastcc zeroext i8 @is_global_var(%union.tree_node* %orig_decl) #7, !dbg !6851
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6851
  br i1 %tobool6, label %if.else, label %if.then, !dbg !6852

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %locus, align 8, !dbg !6853
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6853
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6828, metadata !DIExpression()), !dbg !6837
  %call7 = call %union.tree_node* @build_decl_stat(i32 %3, i32 32, %union.tree_node* %call3, %union.tree_node* %4) #6, !dbg !6853
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6829, metadata !DIExpression()), !dbg !6841
  br label %if.end, !dbg !6854

if.else:                                          ; preds = %for.body
  %tobool8 = icmp eq %union.tree_node* %call3, null, !dbg !6855
  br i1 %tobool8, label %cond.end12, label %cond.true9, !dbg !6855

cond.true9:                                       ; preds = %if.else
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6856
  %str10 = bitcast i32* %id to i8**, !dbg !6856
  %5 = load i8*, i8** %str10, align 8, !dbg !6856
  br label %cond.end12, !dbg !6855

cond.end12:                                       ; preds = %if.else, %cond.true9
  %cond13 = phi i8* [ %5, %cond.true9 ], [ null, %if.else ], !dbg !6855
  call void @llvm.dbg.value(metadata i8* %cond13, metadata !6834, metadata !DIExpression()), !dbg !6857
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6858
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6828, metadata !DIExpression()), !dbg !6837
  %call14 = call %union.tree_node* @create_tmp_var(%union.tree_node* %6, i8* %cond13) #6, !dbg !6859
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !6829, metadata !DIExpression()), !dbg !6841
  br label %if.end

if.end:                                           ; preds = %cond.end12, %if.then
  %new_decl.0 = phi %union.tree_node* [ %call7, %if.then ], [ %call14, %cond.end12 ], !dbg !6840
  call void @llvm.dbg.value(metadata %union.tree_node* %new_decl.0, metadata !6829, metadata !DIExpression()), !dbg !6841
  call fastcc void @copy_decl_attributes(%union.tree_node* %new_decl.0, %union.tree_node* %orig_decl) #7, !dbg !6860
  %call15 = call fastcc %union.tree_node** @VEC_tree_heap_safe_push(%struct.VEC_tree_heap** nonnull %new_vars, %union.tree_node* %new_decl.0) #7, !dbg !6861
  %inc = add i32 %i.0, 1, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %inc, metadata !6827, metadata !DIExpression()), !dbg !6837
  br label %for.cond, !dbg !6863, !llvm.loop !6864

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6866
  ret void, !dbg !6866
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_to_new_vars_htab(%struct.new_var_data* %new_node, %struct.htab* %new_vars_htab) unnamed_addr #5 !dbg !6867 {
entry:
  call void @llvm.dbg.value(metadata %struct.new_var_data* %new_node, metadata !6871, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata %struct.htab* %new_vars_htab, metadata !6872, metadata !DIExpression()), !dbg !6874
  %0 = bitcast %struct.new_var_data* %new_node to i8**, !dbg !6875
  %1 = load i8*, i8** %0, align 8, !dbg !6875
  %uid = getelementptr inbounds i8, i8* %1, i64 28, !dbg !6876
  %2 = bitcast i8* %uid to i32*, !dbg !6876
  %3 = load i32, i32* %2, align 4, !dbg !6876
  %call = tail call i8** @htab_find_slot_with_hash(%struct.htab* %new_vars_htab, i8* %1, i32 %3, i32 1) #6, !dbg !6877
  call void @llvm.dbg.value(metadata i8** %call, metadata !6873, metadata !DIExpression()), !dbg !6874
  %4 = bitcast i8** %call to %struct.new_var_data**, !dbg !6878
  store %struct.new_var_data* %new_node, %struct.new_var_data** %4, align 8, !dbg !6878
  ret void, !dbg !6879
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gen_var_name(%union.tree_node* %orig_decl, i64 %i) unnamed_addr #5 !dbg !6880 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_decl, metadata !6884, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i64 %i, metadata !6885, metadata !DIExpression()), !dbg !6892
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6893
  %0 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !6893
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !6893
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6895

lor.lhs.false:                                    ; preds = %entry
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6896
  %1 = bitcast i32* %str to i8**, !dbg !6896
  %2 = load i8*, i8** %1, align 8, !dbg !6896
  %tobool3 = icmp eq i8* %2, null, !dbg !6896
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !6897

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i8* %2, metadata !6886, metadata !DIExpression()), !dbg !6892
  %call = tail call i64 @strlen(i8* nonnull %2) #6, !dbg !6898
  %add = add i64 %call, 1, !dbg !6898
  %3 = alloca i8, i64 %add, align 16, !dbg !6898
  call void @llvm.dbg.value(metadata i8* %3, metadata !6887, metadata !DIExpression()), !dbg !6892
  %call9 = call i8* @strcpy(i8* nonnull %3, i8* nonnull %2) #6, !dbg !6899
  call void @llvm.dbg.value(metadata i8* %3, metadata !6889, metadata !DIExpression()), !dbg !6900
  %call10 = call i64 @strlen(i8* nonnull %3) #6, !dbg !6901
  %add11 = add i64 %call10, 32, !dbg !6901
  %4 = alloca i8, i64 %add11, align 16, !dbg !6901
  call void @llvm.dbg.value(metadata i8* %4, metadata !6888, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i8* %4, metadata !6891, metadata !DIExpression()), !dbg !6900
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8* nonnull %3, i64 %i) #6, !dbg !6901
  %call13 = call %union.tree_node* @get_identifier(i8* nonnull %4) #6, !dbg !6902
  br label %cleanup, !dbg !6903

cleanup:                                          ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call13, %if.end ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !6892
  ret %union.tree_node* %retval.0, !dbg !6904
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gen_struct_type(%union.tree_node* %decl, %union.tree_node* %new_str_type) unnamed_addr #0 !dbg !6905 {
entry:
  %wrapper = alloca %struct.VEC_type_wrapper_t_heap*, align 8
  %wr = alloca %struct.type_wrapper, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6907, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_str_type, metadata !6908, metadata !DIExpression()), !dbg !6915
  %call = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %decl) #7, !dbg !6916
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6909, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_str_type, metadata !6910, metadata !DIExpression()), !dbg !6915
  %0 = bitcast %struct.VEC_type_wrapper_t_heap** %wrapper to i8*, !dbg !6917
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6917
  %call1 = tail call fastcc %struct.VEC_type_wrapper_t_heap* @VEC_type_wrapper_t_heap_alloc(i32 10) #7, !dbg !6918
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %call1, metadata !6911, metadata !DIExpression()), !dbg !6915
  store %struct.VEC_type_wrapper_t_heap* %call1, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !6919
  %1 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %wr, i64 0, i32 0, !dbg !6920
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6920
  %domain29 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %wr, i64 0, i32 1, !dbg !6921
  %2 = bitcast %union.tree_node** %domain29 to i64*, !dbg !6921
  br label %while.cond, !dbg !6925

while.cond:                                       ; preds = %if.end, %entry
  %type_orig.0 = phi %union.tree_node* [ %call, %entry ], [ %6, %if.end ], !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %type_orig.0, metadata !6909, metadata !DIExpression()), !dbg !6915
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_orig.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6926
  %bf.load = load i64, i64* %3, align 8, !dbg !6926
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6926
  %cmp = icmp eq i64 %bf.cast2, 10, !dbg !6926
  br i1 %cmp, label %while.body, label %lor.lhs.false, !dbg !6926

lor.lhs.false:                                    ; preds = %while.cond
  %cmp6 = icmp eq i64 %bf.cast2, 12, !dbg !6926
  %cmp11 = icmp eq i64 %bf.cast2, 15, !dbg !6927
  %or.cond = or i1 %cmp6, %cmp11, !dbg !6928
  br i1 %or.cond, label %while.body, label %while.cond32.preheader, !dbg !6928

while.cond32.preheader:                           ; preds = %lor.lhs.false
  br label %while.cond32, !dbg !6929

while.body:                                       ; preds = %while.cond, %lor.lhs.false
  br i1 %cmp, label %if.then, label %lor.lhs.false17, !dbg !6930

lor.lhs.false17:                                  ; preds = %while.body
  %cmp22 = icmp eq i64 %bf.cast2, 12, !dbg !6930
  br i1 %cmp22, label %if.then, label %if.else, !dbg !6931

if.then:                                          ; preds = %lor.lhs.false17, %while.body
  store i8 0, i8* %1, align 8, !dbg !6932
  store %union.tree_node* null, %union.tree_node** %domain29, align 8, !dbg !6934
  br label %if.end, !dbg !6935

if.else:                                          ; preds = %lor.lhs.false17
  %cmp27 = icmp eq i64 %bf.cast2, 15, !dbg !6936
  br i1 %cmp27, label %cond.end, label %cond.true, !dbg !6936

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1932, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !6936
  br label %cond.end, !dbg !6936

cond.end:                                         ; preds = %if.else, %cond.true
  store i8 1, i8* %1, align 8, !dbg !6937
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type_orig.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6938
  %4 = bitcast i32* %values to i64*, !dbg !6938
  %5 = load i64, i64* %4, align 8, !dbg !6938
  store i64 %5, i64* %2, align 8, !dbg !6939
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %wrapper, metadata !6911, metadata !DIExpression(DW_OP_deref)), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %wr, metadata !6912, metadata !DIExpression(DW_OP_deref)), !dbg !6915
  %call30 = call fastcc %struct.type_wrapper* @VEC_type_wrapper_t_heap_safe_push(%struct.VEC_type_wrapper_t_heap** nonnull %wrapper, %struct.type_wrapper* nonnull %wr) #7, !dbg !6940
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %type_orig.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6941
  %6 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !6941
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6909, metadata !DIExpression()), !dbg !6915
  br label %while.cond, !dbg !6925, !llvm.loop !6942

while.cond32:                                     ; preds = %while.cond32.preheader, %if.end55
  %new_type.0 = phi %union.tree_node* [ %new_type.1, %if.end55 ], [ %new_str_type, %while.cond32.preheader ], !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0, metadata !6910, metadata !DIExpression()), !dbg !6915
  %7 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !6944
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %7, metadata !6911, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %7, metadata !6911, metadata !DIExpression()), !dbg !6915
  %base34 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %7, i64 0, i32 0, !dbg !6944
  %call38 = call fastcc i32 @VEC_type_wrapper_t_base_length(%struct.VEC_type_wrapper_t_base* %base34) #7, !dbg !6944
  %cmp39 = icmp eq i32 %call38, 0, !dbg !6945
  br i1 %cmp39, label %while.end62, label %while.body40, !dbg !6929

while.body40:                                     ; preds = %while.cond32
  %8 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !6946
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %8, metadata !6911, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %8, metadata !6911, metadata !DIExpression()), !dbg !6915
  %base43 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %8, i64 0, i32 0, !dbg !6946
  %call47 = call fastcc %struct.type_wrapper* @VEC_type_wrapper_t_base_last(%struct.VEC_type_wrapper_t_base* %base43) #7, !dbg !6946
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %call47, metadata !6913, metadata !DIExpression()), !dbg !6915
  %wrap48 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %call47, i64 0, i32 0, !dbg !6948
  %9 = load i8, i8* %wrap48, align 8, !dbg !6948
  %tobool49 = icmp eq i8 %9, 0, !dbg !6950
  br i1 %tobool49, label %if.else53, label %if.then50, !dbg !6951

if.then50:                                        ; preds = %while.body40
  %domain51 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %call47, i64 0, i32 1, !dbg !6952
  %10 = load %union.tree_node*, %union.tree_node** %domain51, align 8, !dbg !6952
  %call52 = call %union.tree_node* @build_array_type(%union.tree_node* %new_type.0, %union.tree_node* %10) #6, !dbg !6953
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !6910, metadata !DIExpression()), !dbg !6915
  br label %if.end55, !dbg !6954

if.else53:                                        ; preds = %while.body40
  %call54 = call %union.tree_node* @build_pointer_type(%union.tree_node* %new_type.0) #6, !dbg !6955
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !6910, metadata !DIExpression()), !dbg !6915
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then50
  %new_type.1 = phi %union.tree_node* [ %call52, %if.then50 ], [ %call54, %if.else53 ], !dbg !6956
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.1, metadata !6910, metadata !DIExpression()), !dbg !6915
  %11 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !6957
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %11, metadata !6911, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %11, metadata !6911, metadata !DIExpression()), !dbg !6915
  %base58 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %11, i64 0, i32 0, !dbg !6957
  call fastcc void @VEC_type_wrapper_t_base_pop(%struct.VEC_type_wrapper_t_base* %base58) #7, !dbg !6957
  br label %while.cond32, !dbg !6929, !llvm.loop !6958

while.end62:                                      ; preds = %while.cond32
  %new_type.0.lcssa = phi %union.tree_node* [ %new_type.0, %while.cond32 ], !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0.lcssa, metadata !6910, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0.lcssa, metadata !6910, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type.0.lcssa, metadata !6910, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %wrapper, metadata !6911, metadata !DIExpression(DW_OP_deref)), !dbg !6915
  call fastcc void @VEC_type_wrapper_t_heap_free(%struct.VEC_type_wrapper_t_heap** nonnull %wrapper) #7, !dbg !6960
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !6961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6961
  ret %union.tree_node* %new_type.0.lcssa, !dbg !6962
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_global_var(%union.tree_node* %t) unnamed_addr #0 !dbg !6963 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6967, metadata !DIExpression()), !dbg !6968
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6969
  %bf.load = load i64, i64* %0, align 8, !dbg !6969
  %bf.cast1 = and i64 %bf.load, 67108864, !dbg !6969
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6969
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6970

lor.rhs:                                          ; preds = %entry
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6971
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !6971
  %bf.load1 = load i64, i64* %1, align 8, !dbg !6971
  %bf.cast42 = lshr i64 %bf.load1, 25, !dbg !6970
  %2 = trunc i64 %bf.cast42 to i8, !dbg !6970
  %3 = and i8 %2, 1, !dbg !6970
  br label %lor.end, !dbg !6970

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !6972
}

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @copy_decl_attributes(%union.tree_node* %new_decl, %union.tree_node* %orig_decl) unnamed_addr #0 !dbg !6973 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_decl, metadata !6977, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_decl, metadata !6978, metadata !DIExpression()), !dbg !6979
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6980
  %0 = bitcast i40* %artificial_flag to i64*, !dbg !6980
  %bf.load = load i64, i64* %0, align 8, !dbg !6981
  %bf.set = or i64 %bf.load, 4096, !dbg !6981
  store i64 %bf.set, i64* %0, align 8, !dbg !6981
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6982
  %1 = bitcast i40* %decl_flag_1 to i64*, !dbg !6982
  %bf.load2 = load i64, i64* %1, align 8, !dbg !6982
  %bf.cast = and i64 %bf.load2, 33554432, !dbg !6982
  %bf.clear7 = and i64 %bf.set, -33554433, !dbg !6983
  %bf.set8 = or i64 %bf.clear7, %bf.cast, !dbg !6983
  store i64 %bf.set8, i64* %0, align 8, !dbg !6983
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6984
  %bf.load9 = load i64, i64* %2, align 8, !dbg !6984
  %bf.cast12 = and i64 %bf.load9, 67108864, !dbg !6984
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6985
  %bf.load14 = load i64, i64* %3, align 8, !dbg !6986
  %bf.clear17 = and i64 %bf.load14, -67108865, !dbg !6986
  %bf.set18 = or i64 %bf.clear17, %bf.cast12, !dbg !6986
  store i64 %bf.set18, i64* %3, align 8, !dbg !6986
  %bf.load21 = load i64, i64* %2, align 8, !dbg !6987
  %bf.cast24 = and i64 %bf.load21, 134217728, !dbg !6987
  %bf.clear29 = and i64 %bf.set18, -134217729, !dbg !6988
  %bf.set30 = or i64 %bf.clear29, %bf.cast24, !dbg !6988
  store i64 %bf.set30, i64* %3, align 8, !dbg !6988
  %bf.load33 = load i64, i64* %2, align 8, !dbg !6989
  %bf.cast36 = and i64 %bf.load33, 16777216, !dbg !6989
  %bf.clear41 = and i64 %bf.set30, -16777217, !dbg !6990
  %bf.set42 = or i64 %bf.clear41, %bf.cast36, !dbg !6990
  store i64 %bf.set42, i64* %3, align 8, !dbg !6990
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6991
  %4 = bitcast %union.tree_node** %context to i64*, !dbg !6991
  %5 = load i64, i64* %4, align 8, !dbg !6991
  %context45 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6992
  %6 = bitcast %union.tree_node** %context45 to i64*, !dbg !6993
  store i64 %5, i64* %6, align 8, !dbg !6993
  %bf.load47 = load i64, i64* %2, align 8, !dbg !6994
  %bf.cast50 = and i64 %bf.load47, 524288, !dbg !6994
  %bf.clear55 = and i64 %bf.set42, -524289, !dbg !6995
  %bf.set56 = or i64 %bf.clear55, %bf.cast50, !dbg !6995
  store i64 %bf.set56, i64* %3, align 8, !dbg !6995
  %bf.load59 = load i64, i64* %2, align 8, !dbg !6996
  %bf.cast62 = and i64 %bf.load59, 262144, !dbg !6996
  %bf.clear67 = and i64 %bf.set56, -262145, !dbg !6997
  %bf.set68 = or i64 %bf.clear67, %bf.cast62, !dbg !6997
  store i64 %bf.set68, i64* %3, align 8, !dbg !6997
  %bf.load71 = load i64, i64* %2, align 8, !dbg !6998
  %bf.cast731 = and i64 %bf.load71, 65535, !dbg !7000
  %cmp = icmp eq i64 %bf.cast731, 32, !dbg !7000
  br i1 %cmp, label %if.then, label %if.end, !dbg !7001

if.then:                                          ; preds = %entry
  %bf.cast78 = and i64 %bf.load71, 1048576, !dbg !7002
  %bf.clear83 = and i64 %bf.set68, -1048577, !dbg !7004
  %bf.set84 = or i64 %bf.clear83, %bf.cast78, !dbg !7004
  store i64 %bf.set84, i64* %3, align 8, !dbg !7004
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7005
  %7 = bitcast i24* %tls_model to i32*, !dbg !7005
  %bf.load86 = load i32, i32* %7, align 8, !dbg !7005
  %bf.clear88 = and i32 %bf.load86, 57344, !dbg !7005
  %tls_model90 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_decl, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7006
  %8 = bitcast i24* %tls_model90 to i32*, !dbg !7006
  %bf.load91 = load i32, i32* %8, align 8, !dbg !7007
  %bf.clear94 = and i32 %bf.load91, -57345, !dbg !7007
  %bf.set95 = or i32 %bf.clear94, %bf.clear88, !dbg !7007
  store i32 %bf.set95, i32* %8, align 8, !dbg !7007
  br label %if.end, !dbg !7008

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7009
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_type_wrapper_t_heap* @VEC_type_wrapper_t_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !7010 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !7014, metadata !DIExpression()), !dbg !7015
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 10, i64 8, i64 16) #6, !dbg !7016
  %0 = bitcast i8* %call to %struct.VEC_type_wrapper_t_heap*, !dbg !7016
  ret %struct.VEC_type_wrapper_t_heap* %0, !dbg !7016
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.type_wrapper* @VEC_type_wrapper_t_heap_safe_push(%struct.VEC_type_wrapper_t_heap** %vec_, %struct.type_wrapper* %obj_) unnamed_addr #0 !dbg !7017 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %vec_, metadata !7024, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %obj_, metadata !7025, metadata !DIExpression()), !dbg !7026
  %call = tail call fastcc i32 @VEC_type_wrapper_t_heap_reserve(%struct.VEC_type_wrapper_t_heap** %vec_, i32 1) #7, !dbg !7027
  %0 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %vec_, align 8, !dbg !7027
  %tobool = icmp eq %struct.VEC_type_wrapper_t_heap* %0, null, !dbg !7027
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7027

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %0, i64 0, i32 0, !dbg !7027
  br label %cond.end, !dbg !7027

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_type_wrapper_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7027
  %call1 = tail call fastcc %struct.type_wrapper* @VEC_type_wrapper_t_base_quick_push(%struct.VEC_type_wrapper_t_base* %cond, %struct.type_wrapper* %obj_) #7, !dbg !7027
  ret %struct.type_wrapper* %call1, !dbg !7027
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_type_wrapper_t_base_length(%struct.VEC_type_wrapper_t_base* %vec_) unnamed_addr #0 !dbg !7028 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_base* %vec_, metadata !7034, metadata !DIExpression()), !dbg !7035
  %tobool = icmp eq %struct.VEC_type_wrapper_t_base* %vec_, null, !dbg !7036
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7036

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 0, !dbg !7036
  %0 = load i32, i32* %num, align 8, !dbg !7036
  br label %cond.end, !dbg !7036

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !7036
  ret i32 %cond, !dbg !7036
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.type_wrapper* @VEC_type_wrapper_t_base_last(%struct.VEC_type_wrapper_t_base* %vec_) unnamed_addr #0 !dbg !7037 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_base* %vec_, metadata !7042, metadata !DIExpression()), !dbg !7043
  br label %land.end, !dbg !7044

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %num2 = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 0, !dbg !7044
  %0 = load i32, i32* %num2, align 8, !dbg !7044
  %sub = add i32 %0, -1, !dbg !7044
  %idxprom = zext i32 %sub to i64, !dbg !7044
  %arrayidx = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7044
  ret %struct.type_wrapper* %arrayidx, !dbg !7044
}

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_type_wrapper_t_base_pop(%struct.VEC_type_wrapper_t_base* %vec_) unnamed_addr #0 !dbg !7045 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_base* %vec_, metadata !7049, metadata !DIExpression()), !dbg !7050
  %num1 = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 0, !dbg !7051
  %0 = load i32, i32* %num1, align 8, !dbg !7051
  %dec = add i32 %0, -1, !dbg !7051
  store i32 %dec, i32* %num1, align 8, !dbg !7051
  ret void, !dbg !7051
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_type_wrapper_t_heap_free(%struct.VEC_type_wrapper_t_heap** %vec_) unnamed_addr #0 !dbg !7052 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %vec_, metadata !7056, metadata !DIExpression()), !dbg !7057
  %0 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %vec_, align 8, !dbg !7058
  %tobool = icmp eq %struct.VEC_type_wrapper_t_heap* %0, null, !dbg !7058
  br i1 %tobool, label %if.end, label %if.then, !dbg !7060

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_type_wrapper_t_heap* %0 to i8*, !dbg !7060
  tail call void @free(i8* nonnull %1) #6, !dbg !7058
  br label %if.end, !dbg !7058

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_type_wrapper_t_heap* null, %struct.VEC_type_wrapper_t_heap** %vec_, align 8, !dbg !7060
  ret void, !dbg !7060
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_type_wrapper_t_heap_reserve(%struct.VEC_type_wrapper_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7061 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %vec_, metadata !7065, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 1, metadata !7066, metadata !DIExpression()), !dbg !7068
  %0 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %vec_, align 8, !dbg !7069
  %tobool = icmp eq %struct.VEC_type_wrapper_t_heap* %0, null, !dbg !7069
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7069

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %0, i64 0, i32 0, !dbg !7069
  br label %cond.end, !dbg !7069

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_type_wrapper_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7069
  %call = tail call fastcc i32 @VEC_type_wrapper_t_base_space(%struct.VEC_type_wrapper_t_base* %cond, i32 1) #7, !dbg !7069
  %tobool1 = icmp eq i32 %call, 0, !dbg !7069
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7069
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7067, metadata !DIExpression()), !dbg !7068
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7069

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_type_wrapper_t_heap** %vec_ to i8**, !dbg !7070
  %2 = load i8*, i8** %1, align 8, !dbg !7070
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 16) #6, !dbg !7070
  store i8* %call3, i8** %1, align 8, !dbg !7070
  br label %if.end, !dbg !7070

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7069
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.type_wrapper* @VEC_type_wrapper_t_base_quick_push(%struct.VEC_type_wrapper_t_base* %vec_, %struct.type_wrapper* %obj_) unnamed_addr #0 !dbg !7072 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_base* %vec_, metadata !7076, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %obj_, metadata !7077, metadata !DIExpression()), !dbg !7079
  %num1 = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 0, !dbg !7080
  %0 = load i32, i32* %num1, align 8, !dbg !7080
  %inc = add i32 %0, 1, !dbg !7080
  store i32 %inc, i32* %num1, align 8, !dbg !7080
  %idxprom = zext i32 %0 to i64, !dbg !7080
  %arrayidx = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7080
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %arrayidx, metadata !7078, metadata !DIExpression()), !dbg !7079
  %tobool = icmp eq %struct.type_wrapper* %obj_, null, !dbg !7081
  br i1 %tobool, label %if.end, label %if.then, !dbg !7080

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %arrayidx, i64 0, i32 0, !dbg !7081
  %2 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %obj_, i64 0, i32 0, !dbg !7081
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7081
  br label %if.end, !dbg !7081

if.end:                                           ; preds = %entry, %if.then
  ret %struct.type_wrapper* %arrayidx, !dbg !7080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_type_wrapper_t_base_space(%struct.VEC_type_wrapper_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7083 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_base* %vec_, metadata !7087, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i32 1, metadata !7088, metadata !DIExpression()), !dbg !7089
  %tobool = icmp eq %struct.VEC_type_wrapper_t_base* %vec_, null, !dbg !7090
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7090

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 1, !dbg !7090
  %0 = load i32, i32* %alloc, align 4, !dbg !7090
  %num = getelementptr inbounds %struct.VEC_type_wrapper_t_base, %struct.VEC_type_wrapper_t_base* %vec_, i64 0, i32 0, !dbg !7090
  %1 = load i32, i32* %num, align 8, !dbg !7090
  %cmp1 = icmp ne i32 %0, %1, !dbg !7090
  %phitmp = zext i1 %cmp1 to i32, !dbg !7090
  br label %cond.end, !dbg !7090

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7090
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @insert_global_to_varpool(%union.tree_node* %new_decl) unnamed_addr #0 !dbg !7091 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_decl, metadata !7093, metadata !DIExpression()), !dbg !7095
  %call = tail call %struct.varpool_node* @varpool_node(%union.tree_node* %new_decl) #6, !dbg !7096
  call void @llvm.dbg.value(metadata %struct.varpool_node* %call, metadata !7094, metadata !DIExpression()), !dbg !7095
  tail call void @notice_global_symbol(%union.tree_node* %new_decl) #6, !dbg !7097
  tail call void @varpool_mark_needed_node(%struct.varpool_node* %call) #6, !dbg !7098
  tail call void @varpool_finalize_decl(%union.tree_node* %new_decl) #6, !dbg !7099
  ret void, !dbg !7100
}

declare dso_local %struct.varpool_node* @varpool_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @notice_global_symbol(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @varpool_mark_needed_node(%struct.varpool_node*) local_unnamed_addr #2

declare dso_local void @varpool_finalize_decl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @dump_new_var(i8** %slot, i8* %data) #5 !dbg !7101 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !7103, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i8* %data, metadata !7104, metadata !DIExpression()), !dbg !7109
  %0 = bitcast i8** %slot to %struct.new_var_data**, !dbg !7110
  %1 = load %struct.new_var_data*, %struct.new_var_data** %0, align 8, !dbg !7110
  call void @llvm.dbg.value(metadata %struct.new_var_data* %1, metadata !7105, metadata !DIExpression()), !dbg !7109
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !7111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7111
  %orig_var = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %1, i64 0, i32 0, !dbg !7112
  %3 = load %union.tree_node*, %union.tree_node** %orig_var, align 8, !dbg !7112
  %call = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %3) #7, !dbg !7113
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7106, metadata !DIExpression()), !dbg !7109
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7114
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i64 0, i64 0)) #6, !dbg !7115
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7116
  %6 = load %union.tree_node*, %union.tree_node** %orig_var, align 8, !dbg !7117
  tail call void @print_generic_expr(%struct._IO_FILE* %5, %union.tree_node* %6, i32 0) #6, !dbg !7118
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7119
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !7120
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7121
  tail call void @print_generic_expr(%struct._IO_FILE* %8, %union.tree_node* %call, i32 0) #6, !dbg !7122
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7123
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !7124
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7109
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %1, i64 0, i32 1, !dbg !7125
  br label %for.cond, !dbg !7128

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7108, metadata !DIExpression()), !dbg !7109
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_vars, align 8, !dbg !7130
  %tobool = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !7130
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7130

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !7130
  br label %cond.end, !dbg !7130

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7130
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !7107, metadata !DIExpression(DW_OP_deref)), !dbg !7109
  %call6 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !7130
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7131
  br i1 %tobool7, label %for.end, label %for.body, !dbg !7131

for.body:                                         ; preds = %cond.end
  %11 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7132
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7107, metadata !DIExpression()), !dbg !7109
  %call8 = call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %11) #7, !dbg !7134
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7106, metadata !DIExpression()), !dbg !7109
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7135
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !7136
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7137
  %14 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7138
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @print_generic_expr(%struct._IO_FILE* %13, %union.tree_node* %14, i32 0) #6, !dbg !7139
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7140
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0)) #6, !dbg !7141
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7142
  call void @print_generic_expr(%struct._IO_FILE* %16, %union.tree_node* %call8, i32 0) #6, !dbg !7143
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7144
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !7145
  %inc = add i32 %i.0, 1, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7108, metadata !DIExpression()), !dbg !7109
  br label %for.cond, !dbg !7147, !llvm.loop !7148

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7150
  ret i32 1, !dbg !7151
}

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @do_reorg_for_func(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !7152 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !7154, metadata !DIExpression()), !dbg !7155
  tail call fastcc void @create_new_local_vars() #7, !dbg !7156
  tail call fastcc void @create_new_alloc_sites_for_func(%struct.cgraph_node* %node) #7, !dbg !7157
  tail call fastcc void @create_new_accesses_for_func() #7, !dbg !7158
  tail call void @update_ssa(i32 2048) #6, !dbg !7159
  %call = tail call zeroext i8 @cleanup_tree_cfg() #6, !dbg !7160
  %0 = load %struct.htab*, %struct.htab** @new_local_vars, align 8, !dbg !7161
  tail call fastcc void @free_new_vars_htab(%struct.htab* %0) #7, !dbg !7162
  ret void, !dbg !7163
}

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @pop_cfun() local_unnamed_addr #2

declare dso_local void @set_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_local_vars() unnamed_addr #5 !dbg !7164 {
entry:
  %rvi = alloca %struct.referenced_var_iterator, align 8
  %0 = bitcast %struct.referenced_var_iterator* %rvi to i8*, !dbg !7178
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7178
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7179
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %1) #7, !dbg !7179
  %call1 = tail call i64 @htab_elements(%struct.htab* %call) #6, !dbg !7179
  %call2 = tail call %struct.htab* @htab_create(i64 %call1, i32 (i8*)* nonnull @new_var_hash, i32 (i8*, i8*)* nonnull @new_var_eq, void (i8*)* null) #6, !dbg !7180
  store %struct.htab* %call2, %struct.htab** @new_local_vars, align 8, !dbg !7181
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !7167, metadata !DIExpression(DW_OP_deref)), !dbg !7182
  %call3 = call fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !7183
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7166, metadata !DIExpression()), !dbg !7182
  br label %for.cond, !dbg !7183

for.cond:                                         ; preds = %for.inc, %entry
  %var.0 = phi %union.tree_node* [ %call3, %entry ], [ %call7, %for.inc ], !dbg !7185
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !7166, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !7167, metadata !DIExpression(DW_OP_deref)), !dbg !7182
  %call4 = call fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !7186
  %tobool = icmp eq i8 %call4, 0, !dbg !7186
  br i1 %tobool, label %for.body, label %for.end, !dbg !7183

for.body:                                         ; preds = %for.cond
  %call5 = call fastcc zeroext i8 @is_global_var(%union.tree_node* %var.0) #7, !dbg !7188
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7188
  br i1 %tobool6, label %if.then, label %for.inc, !dbg !7191

if.then:                                          ; preds = %for.body
  %2 = load %struct.htab*, %struct.htab** @new_local_vars, align 8, !dbg !7192
  call fastcc void @create_new_var(%union.tree_node* %var.0, %struct.htab* %2) #7, !dbg !7193
  br label %for.inc, !dbg !7193

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %rvi, metadata !7167, metadata !DIExpression(DW_OP_deref)), !dbg !7182
  %call7 = call fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* nonnull %rvi) #7, !dbg !7186
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7166, metadata !DIExpression()), !dbg !7182
  br label %for.cond, !dbg !7186, !llvm.loop !7194

for.end:                                          ; preds = %for.cond
  %3 = load %struct.htab*, %struct.htab** @new_local_vars, align 8, !dbg !7196
  %tobool8 = icmp eq %struct.htab* %3, null, !dbg !7196
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !7198

if.then9:                                         ; preds = %for.end
  call void @htab_traverse(%struct.htab* nonnull %3, i32 (i8**, i8*)* nonnull @finalize_new_vars_creation, i8* null) #6, !dbg !7199
  %.pre = load %struct.htab*, %struct.htab** @new_local_vars, align 8, !dbg !7200
  br label %if.end10, !dbg !7199

if.end10:                                         ; preds = %for.end, %if.then9
  %4 = phi %struct.htab* [ null, %for.end ], [ %.pre, %if.then9 ], !dbg !7200
  call fastcc void @dump_new_vars(%struct.htab* %4) #7, !dbg !7201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7202
  ret void, !dbg !7202
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_alloc_sites_for_func(%struct.cgraph_node* %node) unnamed_addr #5 !dbg !7203 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !7205, metadata !DIExpression()), !dbg !7207
  %decl = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 0, !dbg !7208
  %0 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7208
  %call = tail call fastcc %struct.func_alloc_sites* @get_fallocs(%union.tree_node* %0) #7, !dbg !7209
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* %call, metadata !7206, metadata !DIExpression()), !dbg !7207
  %tobool = icmp eq %struct.func_alloc_sites* %call, null, !dbg !7210
  br i1 %tobool, label %if.end, label %if.then, !dbg !7212

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7213
  tail call fastcc void @create_new_alloc_sites(%struct.func_alloc_sites* nonnull %call, %union.tree_node* %1) #7, !dbg !7214
  br label %if.end, !dbg !7214

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7215
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_accesses_for_func() unnamed_addr #5 !dbg !7216 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7219
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7219
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7219
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !7219
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7219
  br label %for.cond, !dbg !7219

for.cond:                                         ; preds = %for.body, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.body ], !dbg !7221
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.body ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !7223
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7223
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7218, metadata !DIExpression()), !dbg !7224
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !7221
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7221
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !7221
  br i1 %cmp, label %for.end, label %for.body, !dbg !7219

for.body:                                         ; preds = %for.cond
  tail call fastcc void @create_new_accesses_in_bb(%struct.basic_block_def* %bb.0) #7, !dbg !7225
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7221
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !7226
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !7221
  br label %for.cond, !dbg !7221, !llvm.loop !7227

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7229
}

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @cleanup_tree_cfg() local_unnamed_addr #2

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %fun) unnamed_addr #0 !dbg !7230 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !7236, metadata !DIExpression()), !dbg !7237
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !7238
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !7238
  %tobool = icmp eq %struct.gimple_df* %0, null, !dbg !7240
  br i1 %tobool, label %return, label %if.end, !dbg !7241

if.end:                                           ; preds = %entry
  %referenced_vars = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 0, !dbg !7242
  %1 = load %struct.htab*, %struct.htab** %referenced_vars, align 8, !dbg !7242
  br label %return, !dbg !7243

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.htab* [ %1, %if.end ], [ null, %entry ], !dbg !7237
  ret %struct.htab* %retval.0, !dbg !7244
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !7245 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !7250, metadata !DIExpression()), !dbg !7251
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !7252
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7253
  %call = tail call fastcc %struct.htab* @gimple_referenced_vars(%struct.function* %0) #7, !dbg !7254
  %call1 = tail call fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %call) #7, !dbg !7255
  %1 = bitcast i8* %call1 to %union.tree_node*, !dbg !7256
  ret %union.tree_node* %1, !dbg !7257
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_referenced_vars_p(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !7258 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !7264, metadata !DIExpression()), !dbg !7265
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !7266
  %call = tail call fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) #7, !dbg !7267
  ret i8 %call, !dbg !7268
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_referenced_var(%struct.referenced_var_iterator* %iter) unnamed_addr #0 !dbg !7269 {
entry:
  call void @llvm.dbg.value(metadata %struct.referenced_var_iterator* %iter, metadata !7271, metadata !DIExpression()), !dbg !7272
  %hti = getelementptr inbounds %struct.referenced_var_iterator, %struct.referenced_var_iterator* %iter, i64 0, i32 0, !dbg !7273
  %call = tail call fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) #7, !dbg !7274
  %0 = bitcast i8* %call to %union.tree_node*, !dbg !7275
  ret %union.tree_node* %0, !dbg !7276
}

; Function Attrs: nounwind uwtable
define internal i32 @finalize_new_vars_creation(i8** %slot, i8* %data) #5 !dbg !7277 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !7279, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.value(metadata i8* %data, metadata !7280, metadata !DIExpression()), !dbg !7284
  %0 = bitcast i8** %slot to %struct.new_var_data**, !dbg !7285
  %1 = load %struct.new_var_data*, %struct.new_var_data** %0, align 8, !dbg !7285
  call void @llvm.dbg.value(metadata %struct.new_var_data* %1, metadata !7281, metadata !DIExpression()), !dbg !7284
  %2 = bitcast %union.tree_node** %var to i8*, !dbg !7286
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7286
  call void @llvm.dbg.value(metadata i32 0, metadata !7282, metadata !DIExpression()), !dbg !7284
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %1, i64 0, i32 1, !dbg !7287
  br label %for.cond, !dbg !7290

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7291
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7282, metadata !DIExpression()), !dbg !7284
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_vars, align 8, !dbg !7292
  %tobool = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !7292
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7292

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !7292
  br label %cond.end, !dbg !7292

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7292
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !7283, metadata !DIExpression(DW_OP_deref)), !dbg !7284
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !7292
  %tobool2 = icmp eq i32 %call, 0, !dbg !7293
  br i1 %tobool2, label %for.end, label %for.body, !dbg !7293

for.body:                                         ; preds = %cond.end
  %4 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !7294
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7283, metadata !DIExpression()), !dbg !7284
  call fastcc void @finalize_var_creation(%union.tree_node* %4) #7, !dbg !7295
  %inc = add i32 %i.0, 1, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7282, metadata !DIExpression()), !dbg !7284
  br label %for.cond, !dbg !7297, !llvm.loop !7298

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7300
  ret i32 1, !dbg !7301
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @first_htab_element(%struct.htab_iterator* %hti, %struct.htab* %table) unnamed_addr #0 !dbg !7302 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !7307, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata %struct.htab* %table, metadata !7308, metadata !DIExpression()), !dbg !7311
  %htab = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 0, !dbg !7312
  store %struct.htab* %table, %struct.htab** %htab, align 8, !dbg !7313
  %entries = getelementptr inbounds %struct.htab, %struct.htab* %table, i64 0, i32 3, !dbg !7314
  %0 = bitcast i8*** %entries to i64*, !dbg !7314
  %1 = load i64, i64* %0, align 8, !dbg !7314
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !7315
  %2 = bitcast i8*** %slot to i64*, !dbg !7316
  store i64 %1, i64* %2, align 8, !dbg !7316
  %.cast = inttoptr i64 %1 to i8**, !dbg !7317
  %call = tail call i64 @htab_size(%struct.htab* %table) #6, !dbg !7318
  %add.ptr = getelementptr inbounds i8*, i8** %.cast, i64 %call, !dbg !7319
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !7320
  store i8** %add.ptr, i8*** %limit, align 8, !dbg !7321
  %.pre3 = load i8**, i8*** %slot, align 8, !dbg !7322
  br label %do.body, !dbg !7323

do.body:                                          ; preds = %do.cond, %entry
  %3 = phi i8** [ %incdec.ptr, %do.cond ], [ %.pre3, %entry ]
  %indvars2 = bitcast i8** %3 to i64*, !dbg !7322
  %4 = load i64, i64* %indvars2, align 8, !dbg !7324
  %switch1 = icmp ult i64 %4, 2, !dbg !7325
  br i1 %switch1, label %do.cond, label %do.end

do.cond:                                          ; preds = %do.body
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !7327
  store i8** %incdec.ptr, i8*** %slot, align 8, !dbg !7327
  %cmp6 = icmp ult i8** %incdec.ptr, %add.ptr, !dbg !7328
  br i1 %cmp6, label %do.body, label %do.end, !dbg !7329, !llvm.loop !7330

do.end:                                           ; preds = %do.body, %do.cond
  %5 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ]
  %6 = phi i8** [ %3, %do.body ], [ %incdec.ptr, %do.cond ], !dbg !7332
  %cmp9 = icmp ult i8** %6, %add.ptr, !dbg !7334
  br i1 %cmp9, label %if.then10, label %return, !dbg !7335

if.then10:                                        ; preds = %do.end
  %7 = load i8*, i8** %5, align 8, !dbg !7336
  br label %return, !dbg !7337

return:                                           ; preds = %do.end, %if.then10
  %retval.0 = phi i8* [ %7, %if.then10 ], [ null, %do.end ], !dbg !7311
  ret i8* %retval.0, !dbg !7338
}

declare dso_local i64 @htab_size(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_htab_p(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !7339 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !7345, metadata !DIExpression()), !dbg !7346
  %slot = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !7347
  %0 = load i8**, i8*** %slot, align 8, !dbg !7347
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !7349
  %1 = load i8**, i8*** %limit, align 8, !dbg !7349
  %cmp = icmp uge i8** %0, %1, !dbg !7350
  %. = zext i1 %cmp to i8, !dbg !7346
  ret i8 %., !dbg !7351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i8* @next_htab_element(%struct.htab_iterator* %hti) unnamed_addr #0 !dbg !7352 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab_iterator* %hti, metadata !7356, metadata !DIExpression()), !dbg !7359
  %slot1 = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 1, !dbg !7360
  %limit = getelementptr inbounds %struct.htab_iterator, %struct.htab_iterator* %hti, i64 0, i32 2, !dbg !7359
  %.pre = load i8**, i8*** %slot1, align 8, !dbg !7361
  %.pre3 = load i8**, i8*** %limit, align 8, !dbg !7362
  br label %while.cond, !dbg !7363

while.cond:                                       ; preds = %while.body, %entry
  %0 = phi i8** [ %.pre, %entry ], [ %incdec.ptr, %while.body ], !dbg !7361
  %retval.0 = phi i8* [ undef, %entry ], [ %spec.select2, %while.body ]
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !7361
  store i8** %incdec.ptr, i8*** %slot1, align 8, !dbg !7361
  %cmp = icmp ult i8** %incdec.ptr, %.pre3, !dbg !7364
  br i1 %cmp, label %while.body, label %return, !dbg !7363

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %incdec.ptr, align 8, !dbg !7365
  call void @llvm.dbg.value(metadata i8* %1, metadata !7357, metadata !DIExpression()), !dbg !7366
  %switch1 = icmp ult i8* %1, inttoptr (i64 2 to i8*), !dbg !7367
  %spec.select2 = select i1 %switch1, i8* %retval.0, i8* %1, !dbg !7367
  br i1 %switch1, label %while.cond, label %return, !llvm.loop !7369

return:                                           ; preds = %while.cond, %while.body
  %retval.2 = phi i8* [ %spec.select2, %while.body ], [ null, %while.cond ], !dbg !7359
  ret i8* %retval.2, !dbg !7371
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finalize_var_creation(%union.tree_node* %new_decl) unnamed_addr #5 !dbg !7372 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %new_decl, metadata !7374, metadata !DIExpression()), !dbg !7375
  %call = tail call zeroext i8 @add_referenced_var(%union.tree_node* %new_decl) #6, !dbg !7376
  tail call void @mark_sym_for_renaming(%union.tree_node* %new_decl) #6, !dbg !7377
  ret void, !dbg !7378
}

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @mark_sym_for_renaming(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_alloc_sites(%struct.func_alloc_sites* %m_data, %union.tree_node* %context) unnamed_addr #5 !dbg !7379 {
entry:
  %call = alloca %struct.alloc_site*, align 8
  %new_stmts = alloca %struct.gimple_seq_d*, align 8
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* %m_data, metadata !7383, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata %union.tree_node* %context, metadata !7384, metadata !DIExpression()), !dbg !7405
  %0 = bitcast %struct.alloc_site** %call to i8*, !dbg !7406
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7406
  call void @llvm.dbg.value(metadata i32 0, metadata !7386, metadata !DIExpression()), !dbg !7405
  %allocs = getelementptr inbounds %struct.func_alloc_sites, %struct.func_alloc_sites* %m_data, i64 0, i32 1, !dbg !7407
  %1 = bitcast %struct.gimple_seq_d** %new_stmts to i8*, !dbg !7408
  %2 = bitcast %union.tree_node** %type to i8*, !dbg !7408
  br label %for.cond, !dbg !7409

for.cond:                                         ; preds = %for.end, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc25, %for.end ], !dbg !7410
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7386, metadata !DIExpression()), !dbg !7405
  %3 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %allocs, align 8, !dbg !7411
  %tobool = icmp eq %struct.VEC_alloc_site_t_heap* %3, null, !dbg !7411
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7411

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_alloc_site_t_heap, %struct.VEC_alloc_site_t_heap* %3, i64 0, i32 0, !dbg !7411
  br label %cond.end, !dbg !7411

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_alloc_site_t_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7411
  call void @llvm.dbg.value(metadata %struct.alloc_site** %call, metadata !7385, metadata !DIExpression(DW_OP_deref)), !dbg !7405
  %call2 = call fastcc i32 @VEC_alloc_site_t_base_iterate(%struct.VEC_alloc_site_t_base* %cond, i32 %j.0, %struct.alloc_site** nonnull %call) #7, !dbg !7411
  %tobool3 = icmp eq i32 %call2, 0, !dbg !7412
  br i1 %tobool3, label %for.end26, label %for.body, !dbg !7412

for.body:                                         ; preds = %cond.end
  %4 = load %struct.alloc_site*, %struct.alloc_site** %call, align 8, !dbg !7413
  call void @llvm.dbg.value(metadata %struct.alloc_site* %4, metadata !7385, metadata !DIExpression()), !dbg !7405
  %stmt4 = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %4, i64 0, i32 0, !dbg !7414
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt4, align 8, !dbg !7414
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %5, metadata !7387, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.alloc_site* %4, metadata !7385, metadata !DIExpression()), !dbg !7405
  %str5 = getelementptr inbounds %struct.alloc_site, %struct.alloc_site* %4, i64 0, i32 1, !dbg !7415
  %6 = load %struct.data_structure*, %struct.data_structure** %str5, align 8, !dbg !7415
  call void @llvm.dbg.value(metadata %struct.data_structure* %6, metadata !7391, metadata !DIExpression()), !dbg !7408
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7416
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7393, metadata !DIExpression()), !dbg !7408
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7417
  %call6 = call fastcc %union.gimple_statement_d* @get_final_alloc_stmt(%union.gimple_statement_d* %5) #7, !dbg !7418
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !7394, metadata !DIExpression()), !dbg !7408
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7419
  %decl = getelementptr inbounds %struct.data_structure, %struct.data_structure* %6, i64 0, i32 0, !dbg !7420
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7420
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmts, metadata !7393, metadata !DIExpression(DW_OP_deref)), !dbg !7408
  %call7 = call fastcc %union.tree_node* @gen_num_of_structs_in_malloc(%union.gimple_statement_d* %5, %union.tree_node* %7, %struct.gimple_seq_d** nonnull %new_stmts) #7, !dbg !7421
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7392, metadata !DIExpression()), !dbg !7408
  %8 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7422
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !7393, metadata !DIExpression()), !dbg !7408
  %tobool8 = icmp eq %struct.gimple_seq_d* %8, null, !dbg !7422
  br i1 %tobool8, label %if.end, label %if.then, !dbg !7423

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %8, metadata !7393, metadata !DIExpression()), !dbg !7408
  %call9 = call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* nonnull %8) #7, !dbg !7424
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !7397, metadata !DIExpression()), !dbg !7425
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7426
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !7393, metadata !DIExpression()), !dbg !7408
  call fastcc void @insert_seq_after_stmt(%union.gimple_statement_d* %call6, %struct.gimple_seq_d* %9) #7, !dbg !7427
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !7394, metadata !DIExpression()), !dbg !7408
  br label %if.end, !dbg !7428

if.end:                                           ; preds = %for.body, %if.then
  %last_stmt.0 = phi %union.gimple_statement_d* [ %call9, %if.then ], [ %call6, %for.body ], !dbg !7408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %last_stmt.0, metadata !7394, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32 0, metadata !7395, metadata !DIExpression()), !dbg !7408
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %6, i64 0, i32 6, !dbg !7429
  br label %for.cond10, !dbg !7430

for.cond10:                                       ; preds = %for.body20, %if.end
  %last_stmt.1 = phi %union.gimple_statement_d* [ %last_stmt.0, %if.end ], [ %call23, %for.body20 ], !dbg !7408
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body20 ], !dbg !7431
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7395, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %last_stmt.1, metadata !7394, metadata !DIExpression()), !dbg !7408
  %10 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !7432
  %tobool11 = icmp eq %struct.VEC_tree_heap* %10, null, !dbg !7432
  br i1 %tobool11, label %cond.end16, label %cond.true12, !dbg !7432

cond.true12:                                      ; preds = %for.cond10
  %base14 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %10, i64 0, i32 0, !dbg !7432
  br label %cond.end16, !dbg !7432

cond.end16:                                       ; preds = %for.cond10, %cond.true12
  %cond17 = phi %struct.VEC_tree_base* [ %base14, %cond.true12 ], [ null, %for.cond10 ], !dbg !7432
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !7396, metadata !DIExpression(DW_OP_deref)), !dbg !7408
  %call18 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond17, i32 %i.0, %union.tree_node** nonnull %type) #7, !dbg !7432
  %tobool19 = icmp eq i32 %call18, 0, !dbg !7433
  br i1 %tobool19, label %for.end, label %for.body20, !dbg !7433

for.body20:                                       ; preds = %cond.end16
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7400, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !7404, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* null, metadata !7393, metadata !DIExpression()), !dbg !7408
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7435
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7436
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !7396, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmts, metadata !7393, metadata !DIExpression(DW_OP_deref)), !dbg !7408
  %call22 = call fastcc %union.gimple_statement_d* @create_new_malloc(%union.gimple_statement_d* %5, %union.tree_node* %11, %struct.gimple_seq_d** nonnull %new_stmts, %union.tree_node* %call7) #7, !dbg !7437
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call22, metadata !7400, metadata !DIExpression()), !dbg !7434
  %12 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7438
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %12, metadata !7393, metadata !DIExpression()), !dbg !7408
  %call23 = call fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %12) #7, !dbg !7439
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !7404, metadata !DIExpression()), !dbg !7434
  %13 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7440
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %13, metadata !7393, metadata !DIExpression()), !dbg !7408
  call fastcc void @insert_seq_after_stmt(%union.gimple_statement_d* %last_stmt.1, %struct.gimple_seq_d* %13) #7, !dbg !7441
  call fastcc void @update_cgraph_with_malloc_call(%union.gimple_statement_d* %call22, %union.tree_node* %context) #7, !dbg !7442
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call23, metadata !7394, metadata !DIExpression()), !dbg !7408
  %inc = add i32 %i.0, 1, !dbg !7443
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7395, metadata !DIExpression()), !dbg !7408
  br label %for.cond10, !dbg !7444, !llvm.loop !7445

for.end:                                          ; preds = %cond.end16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7447
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7447
  %inc25 = add i32 %j.0, 1, !dbg !7448
  call void @llvm.dbg.value(metadata i32 %inc25, metadata !7386, metadata !DIExpression()), !dbg !7405
  br label %for.cond, !dbg !7449, !llvm.loop !7450

for.end26:                                        ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7452
  ret void, !dbg !7452
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gen_num_of_structs_in_malloc(%union.gimple_statement_d* %stmt, %union.tree_node* %str_decl, %struct.gimple_seq_d** %new_stmts_p) unnamed_addr #5 !dbg !7453 {
entry:
  %num = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7458, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %union.tree_node* %str_decl, metadata !7459, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmts_p, metadata !7460, metadata !DIExpression()), !dbg !7471
  %tobool = icmp eq %union.gimple_statement_d* %stmt, null, !dbg !7472
  br i1 %tobool, label %cleanup52, label %if.end, !dbg !7474

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* nonnull %stmt) #7, !dbg !7475
  %tobool1 = icmp eq i8 %call, 0, !dbg !7475
  br i1 %tobool1, label %cleanup52, label %if.end3, !dbg !7477

if.end3:                                          ; preds = %if.end
  %call4 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* nonnull %stmt, i32 0) #7, !dbg !7478
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7461, metadata !DIExpression()), !dbg !7471
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7479
  %bf.load = load i64, i64* %0, align 8, !dbg !7479
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7481
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7481
  br i1 %cmp, label %if.end11, label %land.lhs.true, !dbg !7482

land.lhs.true:                                    ; preds = %if.end3
  %bf.cast83 = and i64 %bf.load, 131072, !dbg !7483
  %tobool9 = icmp eq i64 %bf.cast83, 0, !dbg !7483
  br i1 %tobool9, label %cleanup52, label %if.end11, !dbg !7484

if.end11:                                         ; preds = %land.lhs.true, %if.end3
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %str_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7485
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !7485
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7462, metadata !DIExpression()), !dbg !7471
  %int_cst12 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7486
  %low = bitcast i32* %int_cst12 to i64*, !dbg !7486
  %3 = load i64, i64* %low, align 8, !dbg !7486
  call void @llvm.dbg.value(metadata i64 %3, metadata !7463, metadata !DIExpression()), !dbg !7471
  %tobool13 = icmp eq %union.tree_node* %2, null, !dbg !7487
  br i1 %tobool13, label %cond.true, label %cond.end, !dbg !7487

cond.true:                                        ; preds = %if.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1815, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7487
  %bf.load15.pre = load i64, i64* %0, align 8, !dbg !7488
  br label %cond.end, !dbg !7487

cond.end:                                         ; preds = %if.end11, %cond.true
  %bf.load40 = phi i64 [ %bf.load, %if.end11 ], [ %bf.load15.pre, %cond.true ], !dbg !7488
  %bf.cast172 = and i64 %bf.load40, 65535, !dbg !7489
  %cmp18 = icmp eq i64 %bf.cast172, 141, !dbg !7489
  br i1 %cmp18, label %if.then19, label %if.end38, !dbg !7490

if.then19:                                        ; preds = %cond.end
  %4 = bitcast %union.tree_node** %num to i8*, !dbg !7491
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7491
  call void @llvm.dbg.value(metadata %union.tree_node** %num, metadata !7464, metadata !DIExpression(DW_OP_deref)), !dbg !7492
  %call20 = call fastcc zeroext i8 @is_result_of_mult(%union.tree_node* %call4, %union.tree_node** nonnull %num, %union.tree_node* %2) #7, !dbg !7493
  %tobool21 = icmp eq i8 %call20, 0, !dbg !7493
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !7495

if.then22:                                        ; preds = %if.then19
  br label %cleanup, !dbg !7496

if.end23:                                         ; preds = %if.then19
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7497
  %call24 = call %union.tree_node* @create_tmp_var(%union.tree_node* %5, i8* null) #6, !dbg !7498
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !7464, metadata !DIExpression()), !dbg !7492
  store %union.tree_node* %call24, %union.tree_node** %num, align 8, !dbg !7499
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !7464, metadata !DIExpression()), !dbg !7492
  %tobool25 = icmp eq %union.tree_node* %call24, null, !dbg !7500
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !7502

if.then26:                                        ; preds = %if.end23
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !7464, metadata !DIExpression()), !dbg !7492
  %call27 = call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %call24) #6, !dbg !7503
  br label %if.end28, !dbg !7503

if.end28:                                         ; preds = %if.end23, %if.then26
  %call29 = call i32 @exact_log2(i64 %3) #6, !dbg !7504
  %cmp30 = icmp eq i32 %call29, -1, !dbg !7505
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !7506

if.then31:                                        ; preds = %if.end28
  %6 = load %union.tree_node*, %union.tree_node** %num, align 8, !dbg !7507
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7464, metadata !DIExpression()), !dbg !7492
  %call32 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 67, %union.tree_node* %6, %union.tree_node* %call4, %union.tree_node* %2) #6, !dbg !7507
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call32, metadata !7467, metadata !DIExpression()), !dbg !7492
  br label %if.end36, !dbg !7508

if.else:                                          ; preds = %if.end28
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !7509
  %call33 = call i32 @exact_log2(i64 %3) #6, !dbg !7510
  %conv = sext i32 %call33 to i64, !dbg !7510
  %call34 = call %union.tree_node* @build_int_cst(%union.tree_node* %7, i64 %conv) #6, !dbg !7511
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !7468, metadata !DIExpression()), !dbg !7512
  %8 = load %union.tree_node*, %union.tree_node** %num, align 8, !dbg !7513
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !7464, metadata !DIExpression()), !dbg !7492
  %call35 = call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 84, %union.tree_node* %8, %union.tree_node* %call4, %union.tree_node* %call34) #6, !dbg !7513
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call35, metadata !7467, metadata !DIExpression()), !dbg !7492
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then31
  %div_stmt.0 = phi %union.gimple_statement_d* [ %call32, %if.then31 ], [ %call35, %if.else ], !dbg !7514
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %div_stmt.0, metadata !7467, metadata !DIExpression()), !dbg !7492
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %new_stmts_p, %union.gimple_statement_d* %div_stmt.0) #6, !dbg !7515
  call fastcc void @finalize_stmt(%union.gimple_statement_d* %div_stmt.0) #7, !dbg !7516
  br label %cleanup, !dbg !7517

cleanup:                                          ; preds = %if.end36, %if.then22
  %retval.0 = load %union.tree_node*, %union.tree_node** %num, align 8, !dbg !7492
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7518
  br label %cleanup52

if.end38:                                         ; preds = %cond.end
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast172, !dbg !7519
  %9 = load i32, i32* %arrayidx, align 4, !dbg !7519
  %cmp43 = icmp eq i32 %9, 1, !dbg !7519
  br i1 %cmp43, label %land.lhs.true45, label %cleanup52, !dbg !7521

land.lhs.true45:                                  ; preds = %if.end38
  %type46 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7522
  %10 = load %union.tree_node*, %union.tree_node** %type46, align 8, !dbg !7522
  %call47 = tail call i32 @multiple_of_p(%union.tree_node* %10, %union.tree_node* %call4, %union.tree_node* %2) #6, !dbg !7523
  %tobool48 = icmp eq i32 %call47, 0, !dbg !7523
  br i1 %tobool48, label %cleanup52, label %if.then49, !dbg !7524

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = tail call %union.tree_node* @int_const_binop(i32 67, %union.tree_node* %call4, %union.tree_node* %2, i32 0) #6, !dbg !7525
  br label %cleanup52, !dbg !7526

cleanup52:                                        ; preds = %land.lhs.true, %land.lhs.true45, %if.end, %entry, %if.end38, %if.then49, %cleanup
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %call50, %if.then49 ], [ null, %entry ], [ null, %if.end ], [ null, %land.lhs.true ], [ null, %land.lhs.true45 ], [ null, %if.end38 ], !dbg !7471
  ret %union.tree_node* %retval.1, !dbg !7527
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gimple_seq_last_stmt(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7528 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7532, metadata !DIExpression()), !dbg !7534
  %call = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) #7, !dbg !7535
  call void @llvm.dbg.value(metadata %struct.gimple_seq_node_d* %call, metadata !7533, metadata !DIExpression()), !dbg !7534
  %tobool = icmp eq %struct.gimple_seq_node_d* %call, null, !dbg !7536
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7536

cond.true:                                        ; preds = %entry
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %call, i64 0, i32 0, !dbg !7537
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7537
  br label %cond.end, !dbg !7536

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %union.gimple_statement_d* [ %0, %cond.true ], [ null, %entry ], !dbg !7536
  ret %union.gimple_statement_d* %cond, !dbg !7538
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_seq_after_stmt(%union.gimple_statement_d* %stmt, %struct.gimple_seq_d* %new_stmts) unnamed_addr #5 !dbg !7539 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7543, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %new_stmts, metadata !7544, metadata !DIExpression()), !dbg !7546
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !7547
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7547
  %tobool = icmp ne %union.gimple_statement_d* %stmt, null, !dbg !7548
  %tobool1 = icmp ne %struct.gimple_seq_d* %new_stmts, null, !dbg !7550
  %or.cond = and i1 %tobool, %tobool1, !dbg !7551
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7551

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7552
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7552
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* nonnull %stmt) #6, !dbg !7552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !7552
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7552
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7545, metadata !DIExpression(DW_OP_deref)), !dbg !7546
  call void @gsi_insert_seq_after(%struct.gimple_stmt_iterator* nonnull %bsi, %struct.gimple_seq_d* nonnull %new_stmts, i32 1) #6, !dbg !7553
  br label %cleanup, !dbg !7554

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7554
  ret void, !dbg !7554
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @create_new_malloc(%union.gimple_statement_d* %malloc_stmt, %union.tree_node* %new_type, %struct.gimple_seq_d** %new_stmts, %union.tree_node* %num) unnamed_addr #5 !dbg !7555 {
entry:
  %new_malloc_size = alloca %union.tree_node*, align 8
  %cast_res = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %malloc_stmt, metadata !7559, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !7560, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %new_stmts, metadata !7561, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata %union.tree_node* %num, metadata !7562, metadata !DIExpression()), !dbg !7570
  %0 = bitcast %union.tree_node** %new_malloc_size to i8*, !dbg !7571
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7571
  %1 = bitcast %union.tree_node** %cast_res to i8*, !dbg !7572
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7572
  %tobool = icmp ne %union.tree_node* %num, null, !dbg !7573
  %tobool1 = icmp ne %union.gimple_statement_d* %malloc_stmt, null, !dbg !7573
  %or.cond = and i1 %tobool, %tobool1, !dbg !7573
  %tobool3 = icmp ne %union.tree_node* %new_type, null, !dbg !7573
  %or.cond1 = and i1 %or.cond, %tobool3, !dbg !7573
  br i1 %or.cond1, label %cond.end, label %cond.true, !dbg !7573

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7573
  br label %cond.end, !dbg !7573

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #6, !dbg !7574
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %new_stmts, align 8, !dbg !7575
  call void @llvm.dbg.value(metadata %union.tree_node** %new_malloc_size, metadata !7563, metadata !DIExpression(DW_OP_deref)), !dbg !7570
  %call4 = call fastcc %union.gimple_statement_d* @gen_size(%union.tree_node* %num, %union.tree_node* %new_type, %union.tree_node** nonnull %new_malloc_size) #7, !dbg !7576
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !7565, metadata !DIExpression()), !dbg !7570
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %new_stmts, %union.gimple_statement_d* %call4) #6, !dbg !7577
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !7578
  %call5 = call %union.tree_node* @create_tmp_var(%union.tree_node* %2, i8* null) #6, !dbg !7579
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7566, metadata !DIExpression()), !dbg !7570
  %call6 = call zeroext i8 @add_referenced_var(%union.tree_node* %call5) #6, !dbg !7580
  %call7 = call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %malloc_stmt) #7, !dbg !7581
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !7564, metadata !DIExpression()), !dbg !7570
  %3 = load %union.tree_node*, %union.tree_node** %new_malloc_size, align 8, !dbg !7582
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7563, metadata !DIExpression()), !dbg !7570
  %call8 = call %union.gimple_statement_d* (%union.tree_node*, i32, ...) @gimple_build_call(%union.tree_node* %call7, i32 1, %union.tree_node* %3) #6, !dbg !7583
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !7567, metadata !DIExpression()), !dbg !7570
  call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %call8, %union.tree_node* %call5) #7, !dbg !7584
  call fastcc void @finalize_stmt_and_append(%struct.gimple_seq_d** %new_stmts, %union.gimple_statement_d* %call8) #7, !dbg !7585
  %call9 = call fastcc %union.gimple_statement_d* @get_final_alloc_stmt(%union.gimple_statement_d* %malloc_stmt) #7, !dbg !7586
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !7568, metadata !DIExpression()), !dbg !7570
  %tobool10 = icmp eq %union.gimple_statement_d* %call9, null, !dbg !7587
  br i1 %tobool10, label %cond.true11, label %cond.end13, !dbg !7587

cond.true11:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1779, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7587
  br label %cond.end13, !dbg !7587

cond.end13:                                       ; preds = %cond.end, %cond.true11
  call void @llvm.dbg.value(metadata %union.tree_node** %cast_res, metadata !7569, metadata !DIExpression(DW_OP_deref)), !dbg !7570
  %call15 = call fastcc %union.gimple_statement_d* @gen_cast_stmt(%union.tree_node* %call5, %union.tree_node* %new_type, %union.gimple_statement_d* %call9, %union.tree_node** nonnull %cast_res) #7, !dbg !7588
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call15, metadata !7565, metadata !DIExpression()), !dbg !7570
  call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %new_stmts, %union.gimple_statement_d* %call15) #6, !dbg !7589
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7590
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7590
  ret %union.gimple_statement_d* %call8, !dbg !7591
}

; Function Attrs: nounwind uwtable
define internal fastcc void @update_cgraph_with_malloc_call(%union.gimple_statement_d* %malloc_stmt, %union.tree_node* %context) unnamed_addr #5 !dbg !7592 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %malloc_stmt, metadata !7596, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata %union.tree_node* %context, metadata !7597, metadata !DIExpression()), !dbg !7601
  %tobool = icmp eq %union.gimple_statement_d* %malloc_stmt, null, !dbg !7602
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !7604

if.end:                                           ; preds = %entry
  %call = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* nonnull %malloc_stmt) #7, !dbg !7605
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7600, metadata !DIExpression()), !dbg !7601
  %call1 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %context) #6, !dbg !7606
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call1, metadata !7598, metadata !DIExpression()), !dbg !7601
  %call2 = tail call %struct.cgraph_node* @cgraph_node(%union.tree_node* %call) #6, !dbg !7607
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call2, metadata !7599, metadata !DIExpression()), !dbg !7601
  %call3 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %malloc_stmt) #7, !dbg !7608
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call3, i64 0, i32 8, !dbg !7609
  %0 = load i64, i64* %count, align 8, !dbg !7609
  %call4 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %malloc_stmt) #7, !dbg !7610
  %call5 = tail call i32 @compute_call_stmt_bb_frequency(%union.tree_node* %context, %struct.basic_block_def* %call4) #6, !dbg !7611
  %call6 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* nonnull %malloc_stmt) #7, !dbg !7612
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call6, i64 0, i32 10, !dbg !7613
  %1 = load i32, i32* %loop_depth, align 4, !dbg !7613
  %call7 = tail call %struct.cgraph_edge* @cgraph_create_edge(%struct.cgraph_node* %call1, %struct.cgraph_node* %call2, %union.gimple_statement_d* nonnull %malloc_stmt, i64 %0, i32 %call5, i32 %1) #6, !dbg !7614
  br label %cleanup.cont, !dbg !7615

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !7615
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !7616 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 0, metadata !7619, metadata !DIExpression()), !dbg !7620
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 3) #7, !dbg !7621
  ret %union.tree_node* %call, !dbg !7622
}

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local void @gimple_seq_add_stmt(%struct.gimple_seq_d**, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @finalize_stmt(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7623 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7627, metadata !DIExpression()), !dbg !7628
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !7629
  tail call void @mark_symbols_for_renaming(%union.gimple_statement_d* %stmt) #6, !dbg !7630
  ret void, !dbg !7631
}

declare dso_local i32 @multiple_of_p(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @int_const_binop(i32, %union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7632 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7634, metadata !DIExpression()), !dbg !7635
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #7, !dbg !7636
  %tobool = icmp eq i8 %call, 0, !dbg !7636
  br i1 %tobool, label %if.end, label %if.then, !dbg !7638

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !7639
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !7641
  br label %if.end, !dbg !7642

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7643
}

declare dso_local void @mark_symbols_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !7644 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !7646, metadata !DIExpression()), !dbg !7647
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !7648
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7648

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !7649
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !7649
  br label %cond.end, !dbg !7648

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !7648
  ret %struct.gimple_seq_node_d* %cond, !dbg !7650
}

declare dso_local void @gsi_for_stmt(%struct.gimple_stmt_iterator* sret, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_seq_after(%struct.gimple_stmt_iterator*, %struct.gimple_seq_d*, i32) local_unnamed_addr #2

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gen_size(%union.tree_node* %num, %union.tree_node* %type, %union.tree_node** %res) unnamed_addr #5 !dbg !7651 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %num, metadata !7655, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7656, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata %union.tree_node** %res, metadata !7657, metadata !DIExpression()), !dbg !7666
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7667
  %1 = bitcast %union.tree_node** %0 to %struct.tree_int_cst**, !dbg !7667
  %2 = load %struct.tree_int_cst*, %struct.tree_int_cst** %1, align 8, !dbg !7667
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %2, i64 0, i32 1, i32 0, !dbg !7668
  %3 = load i64, i64* %low, align 8, !dbg !7668
  call void @llvm.dbg.value(metadata i64 %3, metadata !7659, metadata !DIExpression()), !dbg !7666
  %type3 = getelementptr inbounds %union.tree_node, %union.tree_node* %num, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7669
  %4 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7669
  %call = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* null) #6, !dbg !7670
  store %union.tree_node* %call, %union.tree_node** %res, align 8, !dbg !7671
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7672
  br i1 %tobool, label %if.end, label %if.then, !dbg !7674

if.then:                                          ; preds = %entry
  %call4 = tail call zeroext i8 @add_referenced_var(%union.tree_node* nonnull %call) #6, !dbg !7675
  br label %if.end, !dbg !7675

if.end:                                           ; preds = %entry, %if.then
  %call5 = tail call i32 @exact_log2(i64 %3) #6, !dbg !7676
  %cmp = icmp eq i32 %call5, -1, !dbg !7677
  %5 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7678
  br i1 %cmp, label %if.then6, label %if.else, !dbg !7679

if.then6:                                         ; preds = %if.end
  %call9 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 %3) #6, !dbg !7680
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7661, metadata !DIExpression()), !dbg !7681
  %6 = load %union.tree_node*, %union.tree_node** %res, align 8, !dbg !7682
  %7 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7682
  %call12 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 65, %union.tree_node* %7, %union.tree_node* %num, %union.tree_node* %call9) #6, !dbg !7682
  %call13 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %6, %union.tree_node* %call12) #6, !dbg !7682
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call13, metadata !7660, metadata !DIExpression()), !dbg !7666
  br label %if.end22, !dbg !7683

if.else:                                          ; preds = %if.end
  %call16 = tail call i32 @exact_log2(i64 %3) #6, !dbg !7684
  %conv = sext i32 %call16 to i64, !dbg !7684
  %call17 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 %conv) #6, !dbg !7685
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !7664, metadata !DIExpression()), !dbg !7686
  %8 = load %union.tree_node*, %union.tree_node** %res, align 8, !dbg !7687
  %9 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7687
  %call20 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 83, %union.tree_node* %9, %union.tree_node* %num, %union.tree_node* %call17) #6, !dbg !7687
  %call21 = tail call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %8, %union.tree_node* %call20) #6, !dbg !7687
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !7660, metadata !DIExpression()), !dbg !7666
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then6
  %new_stmt.0 = phi %union.gimple_statement_d* [ %call13, %if.then6 ], [ %call21, %if.else ], !dbg !7678
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt.0, metadata !7660, metadata !DIExpression()), !dbg !7666
  tail call fastcc void @finalize_stmt(%union.gimple_statement_d* %new_stmt.0) #7, !dbg !7688
  ret %union.gimple_statement_d* %new_stmt.0, !dbg !7689
}

declare dso_local %union.gimple_statement_d* @gimple_build_call(%union.tree_node*, i32, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !7690 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7692, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !7693, metadata !DIExpression()), !dbg !7694
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !7695
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !7696
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7698

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7699
  %bf.load = load i64, i64* %0, align 8, !dbg !7699
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7700
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7700
  br i1 %cmp, label %if.then, label %if.end, !dbg !7701

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7702
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !7702
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !7703
  br label %if.end, !dbg !7702

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !7704
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @finalize_stmt_and_append(%struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !7705 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !7709, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7710, metadata !DIExpression()), !dbg !7711
  tail call void @gimple_seq_add_stmt(%struct.gimple_seq_d** %stmts, %union.gimple_statement_d* %stmt) #6, !dbg !7712
  tail call fastcc void @finalize_stmt(%union.gimple_statement_d* %stmt) #7, !dbg !7713
  ret void, !dbg !7714
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gen_cast_stmt(%union.tree_node* %before_cast, %union.tree_node* %new_type, %union.gimple_statement_d* %orig_cast_stmt, %union.tree_node** %res_p) unnamed_addr #5 !dbg !7715 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %before_cast, metadata !7719, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !7720, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %orig_cast_stmt, metadata !7721, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata %union.tree_node** %res_p, metadata !7722, metadata !DIExpression()), !dbg !7726
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %orig_cast_stmt) #7, !dbg !7727
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7723, metadata !DIExpression()), !dbg !7726
  %call1 = tail call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %call, %union.tree_node* %new_type) #7, !dbg !7728
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7724, metadata !DIExpression()), !dbg !7726
  %tobool = icmp eq %union.tree_node* %call1, null, !dbg !7729
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7729

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 658, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7729
  br label %cond.end, !dbg !7729

cond.end:                                         ; preds = %entry, %cond.true
  %call2 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 116, %union.tree_node* %call1, %union.tree_node* %before_cast, %union.tree_node* null) #6, !dbg !7730
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !7725, metadata !DIExpression()), !dbg !7726
  tail call fastcc void @finalize_stmt(%union.gimple_statement_d* %call2) #7, !dbg !7731
  store %union.tree_node* %call1, %union.tree_node** %res_p, align 8, !dbg !7732
  ret %union.gimple_statement_d* %call2, !dbg !7733
}

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !7734 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7738, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 %i, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !7740, metadata !DIExpression()), !dbg !7741
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #7, !dbg !7742
  %tobool = icmp eq i8 %call, 0, !dbg !7742
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !7742

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #7, !dbg !7742
  %cmp = icmp ugt i32 %call1, %i, !dbg !7742
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7742

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7742
  br label %cond.end, !dbg !7742

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #7, !dbg !7743
  %idxprom = zext i32 %i to i64, !dbg !7743
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !7743
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !7744
  ret void, !dbg !7745
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %orig_var, %union.tree_node* %new_type) unnamed_addr #5 !dbg !7746 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_var, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !7749, metadata !DIExpression()), !dbg !7751
  %tobool = icmp ne %union.tree_node* %orig_var, null, !dbg !7752
  %tobool1 = icmp ne %union.tree_node* %new_type, null, !dbg !7752
  %or.cond = and i1 %tobool, %tobool1, !dbg !7752
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !7752

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 597, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7752
  br label %cond.end, !dbg !7752

cond.end:                                         ; preds = %entry, %cond.true
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7753
  %bf.load = load i64, i64* %0, align 8, !dbg !7753
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7755
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !7755
  br i1 %cmp, label %if.then, label %if.end, !dbg !7756

if.then:                                          ; preds = %cond.end
  %var2 = getelementptr inbounds %union.tree_node, %union.tree_node* %orig_var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7757
  %1 = bitcast i32* %var2 to %union.tree_node**, !dbg !7757
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !7757
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7748, metadata !DIExpression()), !dbg !7751
  br label %if.end, !dbg !7758

if.end:                                           ; preds = %if.then, %cond.end
  %orig_var.addr.0 = phi %union.tree_node* [ %2, %if.then ], [ %orig_var, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %orig_var.addr.0, metadata !7748, metadata !DIExpression()), !dbg !7751
  %3 = load %struct.htab*, %struct.htab** @new_global_vars, align 8, !dbg !7759
  %call = tail call fastcc %struct.new_var_data* @is_in_new_vars_htab(%union.tree_node* %orig_var.addr.0, %struct.htab* %3) #7, !dbg !7760
  call void @llvm.dbg.value(metadata %struct.new_var_data* %call, metadata !7750, metadata !DIExpression()), !dbg !7751
  %tobool3 = icmp eq %struct.new_var_data* %call, null, !dbg !7761
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7763

if.then4:                                         ; preds = %if.end
  %4 = load %struct.htab*, %struct.htab** @new_local_vars, align 8, !dbg !7764
  %call5 = tail call fastcc %struct.new_var_data* @is_in_new_vars_htab(%union.tree_node* %orig_var.addr.0, %struct.htab* %4) #7, !dbg !7765
  call void @llvm.dbg.value(metadata %struct.new_var_data* %call5, metadata !7750, metadata !DIExpression()), !dbg !7751
  br label %if.end6, !dbg !7766

if.end6:                                          ; preds = %if.end, %if.then4
  %var.0 = phi %struct.new_var_data* [ %call, %if.end ], [ %call5, %if.then4 ], !dbg !7751
  call void @llvm.dbg.value(metadata %struct.new_var_data* %var.0, metadata !7750, metadata !DIExpression()), !dbg !7751
  %tobool7 = icmp eq %struct.new_var_data* %var.0, null, !dbg !7767
  br i1 %tobool7, label %cond.true8, label %cond.end10, !dbg !7767

cond.true8:                                       ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7767
  br label %cond.end10, !dbg !7767

cond.end10:                                       ; preds = %if.end6, %cond.true8
  %call12 = tail call fastcc %union.tree_node* @find_var_in_new_vars_vec(%struct.new_var_data* %var.0, %union.tree_node* %new_type) #7, !dbg !7768
  ret %union.tree_node* %call12, !dbg !7769
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @find_var_in_new_vars_vec(%struct.new_var_data* %var, %union.tree_node* %new_type) unnamed_addr #5 !dbg !7770 {
entry:
  %n_var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.new_var_data* %var, metadata !7774, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !7775, metadata !DIExpression()), !dbg !7782
  %0 = bitcast %union.tree_node** %n_var to i8*, !dbg !7783
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7783
  call void @llvm.dbg.value(metadata i32 0, metadata !7777, metadata !DIExpression()), !dbg !7782
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %var, i64 0, i32 1, !dbg !7784
  br label %for.cond, !dbg !7785

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !7786
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.1, %for.inc ]
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7777, metadata !DIExpression()), !dbg !7782
  %1 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_vars, align 8, !dbg !7787
  %tobool = icmp eq %struct.VEC_tree_heap* %1, null, !dbg !7787
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7787

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %1, i64 0, i32 0, !dbg !7787
  br label %cond.end, !dbg !7787

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !7787
  call void @llvm.dbg.value(metadata %union.tree_node** %n_var, metadata !7776, metadata !DIExpression(DW_OP_deref)), !dbg !7782
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %n_var) #7, !dbg !7787
  %tobool2 = icmp eq i32 %call, 0, !dbg !7788
  br i1 %tobool2, label %cleanup10, label %for.body, !dbg !7788

for.body:                                         ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** %n_var, align 8, !dbg !7789
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7776, metadata !DIExpression()), !dbg !7782
  %call3 = call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %2) #7, !dbg !7790
  %call4 = call fastcc %union.tree_node* @strip_type(%union.tree_node* %call3) #7, !dbg !7791
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7778, metadata !DIExpression()), !dbg !7792
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !7793
  br i1 %tobool5, label %cond.true6, label %cond.end8, !dbg !7793

cond.true6:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 570, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !7793
  br label %cond.end8, !dbg !7793

cond.end8:                                        ; preds = %for.body, %cond.true6
  %cmp = icmp eq %union.tree_node* %call4, %new_type, !dbg !7794
  %3 = load %union.tree_node*, %union.tree_node** %n_var, align 8, !dbg !7796
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7776, metadata !DIExpression()), !dbg !7782
  %retval.1 = select i1 %cmp, %union.tree_node* %3, %union.tree_node* %retval.0, !dbg !7796
  br i1 %cmp, label %cleanup10, label %for.inc

for.inc:                                          ; preds = %cond.end8
  %inc = add i32 %i.0, 1, !dbg !7797
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7777, metadata !DIExpression()), !dbg !7782
  br label %for.cond, !dbg !7798, !llvm.loop !7799

cleanup10:                                        ; preds = %cond.end8, %cond.end
  %retval.2 = phi %union.tree_node* [ %retval.1, %cond.end8 ], [ null, %cond.end ], !dbg !7782
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7801
  ret %union.tree_node* %retval.2, !dbg !7801
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.cgraph_edge* @cgraph_create_edge(%struct.cgraph_node*, %struct.cgraph_node*, %union.gimple_statement_d*, i64, i32, i32) local_unnamed_addr #2

declare dso_local i32 @compute_call_stmt_bb_frequency(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_accesses_in_bb(%struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7802 {
entry:
  %str = alloca %struct.data_structure*, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7804, metadata !DIExpression()), !dbg !7807
  %0 = bitcast %struct.data_structure** %str to i8*, !dbg !7808
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7808
  call void @llvm.dbg.value(metadata i32 0, metadata !7806, metadata !DIExpression()), !dbg !7807
  br label %for.cond, !dbg !7809

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7811
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7806, metadata !DIExpression()), !dbg !7807
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !7812
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !7812
  call void @llvm.dbg.value(metadata %struct.data_structure** %str, metadata !7805, metadata !DIExpression(DW_OP_deref)), !dbg !7807
  %call = call fastcc i32 @VEC_structure_base_iterate(%struct.VEC_structure_base* %base, i32 %i.0, %struct.data_structure** nonnull %str) #7, !dbg !7812
  %tobool1 = icmp eq i32 %call, 0, !dbg !7814
  br i1 %tobool1, label %for.end, label %for.body, !dbg !7814

for.body:                                         ; preds = %for.cond
  %2 = load %struct.data_structure*, %struct.data_structure** %str, align 8, !dbg !7815
  call void @llvm.dbg.value(metadata %struct.data_structure* %2, metadata !7805, metadata !DIExpression()), !dbg !7807
  call fastcc void @create_new_accs_for_struct(%struct.data_structure* %2, %struct.basic_block_def* %bb) #7, !dbg !7816
  %inc = add i32 %i.0, 1, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7806, metadata !DIExpression()), !dbg !7807
  br label %for.cond, !dbg !7818, !llvm.loop !7819

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7821
  ret void, !dbg !7821
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_accs_for_struct(%struct.data_structure* %str, %struct.basic_block_def* %bb) unnamed_addr #5 !dbg !7822 {
entry:
  %dt = alloca %struct.create_acc_data, align 8
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !7826, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7827, metadata !DIExpression()), !dbg !7830
  %0 = bitcast %struct.create_acc_data* %dt to i8*, !dbg !7831
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7831
  %str1 = getelementptr inbounds %struct.create_acc_data, %struct.create_acc_data* %dt, i64 0, i32 1, !dbg !7832
  store %struct.data_structure* %str, %struct.data_structure** %str1, align 8, !dbg !7833
  %bb2 = getelementptr inbounds %struct.create_acc_data, %struct.create_acc_data* %dt, i64 0, i32 0, !dbg !7834
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb2, align 8, !dbg !7835
  %field_index = getelementptr inbounds %struct.create_acc_data, %struct.create_acc_data* %dt, i64 0, i32 2, !dbg !7836
  store i32 -1, i32* %field_index, align 8, !dbg !7837
  call void @llvm.dbg.value(metadata i32 0, metadata !7828, metadata !DIExpression()), !dbg !7830
  %num_fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 1, !dbg !7838
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 3, !dbg !7841
  br label %for.cond, !dbg !7844

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !7845
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7828, metadata !DIExpression()), !dbg !7830
  %1 = load i32, i32* %num_fields, align 8, !dbg !7846
  %2 = sext i32 %1 to i64, !dbg !7847
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !7847
  br i1 %cmp, label %for.body, label %for.end, !dbg !7848

for.body:                                         ; preds = %for.cond
  %3 = trunc i64 %indvars.iv to i32, !dbg !7849
  store i32 %3, i32* %field_index, align 8, !dbg !7849
  %4 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !7850
  %acc_sites = getelementptr inbounds %struct.field_entry, %struct.field_entry* %4, i64 %indvars.iv, i32 4, !dbg !7851
  %5 = load %struct.htab*, %struct.htab** %acc_sites, align 8, !dbg !7851
  %tobool = icmp eq %struct.htab* %5, null, !dbg !7852
  br i1 %tobool, label %for.inc, label %if.then, !dbg !7853

if.then:                                          ; preds = %for.body
  call void @htab_traverse(%struct.htab* nonnull %5, i32 (i8**, i8*)* nonnull @create_new_field_acc, i8* nonnull %0) #6, !dbg !7854
  br label %for.inc, !dbg !7854

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7855
  call void @llvm.dbg.value(metadata i32 undef, metadata !7828, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7830
  br label %for.cond, !dbg !7856, !llvm.loop !7857

for.end:                                          ; preds = %for.cond
  %accs = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 4, !dbg !7859
  %6 = load %struct.htab*, %struct.htab** %accs, align 8, !dbg !7859
  %tobool8 = icmp eq %struct.htab* %6, null, !dbg !7861
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !7862

if.then9:                                         ; preds = %for.end
  call void @htab_traverse(%struct.htab* nonnull %6, i32 (i8**, i8*)* nonnull @create_new_acc, i8* nonnull %0) #6, !dbg !7863
  br label %if.end11, !dbg !7863

if.end11:                                         ; preds = %for.end, %if.then9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7864
  ret void, !dbg !7864
}

; Function Attrs: nounwind uwtable
define internal i32 @create_new_field_acc(i8** %slot, i8* %data) #5 !dbg !7865 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !7867, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %data, metadata !7868, metadata !DIExpression()), !dbg !7873
  %0 = bitcast i8** %slot to %struct.field_access_site**, !dbg !7874
  %1 = load %struct.field_access_site*, %struct.field_access_site** %0, align 8, !dbg !7874
  call void @llvm.dbg.value(metadata %struct.field_access_site* %1, metadata !7869, metadata !DIExpression()), !dbg !7873
  %bb1 = bitcast i8* %data to %struct.basic_block_def**, !dbg !7875
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !7875
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !7870, metadata !DIExpression()), !dbg !7873
  %str2 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !7876
  %3 = bitcast i8* %str2 to %struct.data_structure**, !dbg !7876
  %4 = load %struct.data_structure*, %struct.data_structure** %3, align 8, !dbg !7876
  call void @llvm.dbg.value(metadata %struct.data_structure* %4, metadata !7871, metadata !DIExpression()), !dbg !7873
  %field_index = getelementptr inbounds i8, i8* %data, i64 16, !dbg !7877
  %5 = bitcast i8* %field_index to i32*, !dbg !7877
  %6 = load i32, i32* %5, align 8, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %6, metadata !7872, metadata !DIExpression()), !dbg !7873
  %stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %1, i64 0, i32 0, !dbg !7878
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7878
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %7) #7, !dbg !7880
  %cmp = icmp eq %struct.basic_block_def* %call, %2, !dbg !7881
  br i1 %cmp, label %if.then, label %if.end, !dbg !7882

if.then:                                          ; preds = %entry
  %fields = getelementptr inbounds %struct.data_structure, %struct.data_structure* %4, i64 0, i32 3, !dbg !7883
  %8 = load %struct.field_entry*, %struct.field_entry** %fields, align 8, !dbg !7883
  %idxprom = sext i32 %6 to i64, !dbg !7884
  %arrayidx = getelementptr inbounds %struct.field_entry, %struct.field_entry* %8, i64 %idxprom, !dbg !7884
  tail call fastcc void @create_new_field_access(%struct.field_access_site* %1, %struct.field_entry* byval(%struct.field_entry) align 8 %arrayidx) #7, !dbg !7885
  br label %if.end, !dbg !7885

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !7886
}

; Function Attrs: nounwind uwtable
define internal i32 @create_new_acc(i8** %slot, i8* %data) #5 !dbg !7887 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !7889, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i8* %data, metadata !7890, metadata !DIExpression()), !dbg !7894
  %0 = bitcast i8** %slot to %struct.access_site**, !dbg !7895
  %1 = load %struct.access_site*, %struct.access_site** %0, align 8, !dbg !7895
  call void @llvm.dbg.value(metadata %struct.access_site* %1, metadata !7891, metadata !DIExpression()), !dbg !7894
  %bb1 = bitcast i8* %data to %struct.basic_block_def**, !dbg !7896
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !7896
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %2, metadata !7892, metadata !DIExpression()), !dbg !7894
  %str2 = getelementptr inbounds i8, i8* %data, i64 8, !dbg !7897
  %3 = bitcast i8* %str2 to %struct.data_structure**, !dbg !7897
  %4 = load %struct.data_structure*, %struct.data_structure** %3, align 8, !dbg !7897
  call void @llvm.dbg.value(metadata %struct.data_structure* %4, metadata !7893, metadata !DIExpression()), !dbg !7894
  %stmt = getelementptr inbounds %struct.access_site, %struct.access_site* %1, i64 0, i32 0, !dbg !7898
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !7898
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %5) #7, !dbg !7900
  %cmp = icmp eq %struct.basic_block_def* %call, %2, !dbg !7901
  br i1 %cmp, label %if.then, label %if.end, !dbg !7902

if.then:                                          ; preds = %entry
  tail call fastcc void @create_new_general_access(%struct.access_site* %1, %struct.data_structure* %4) #7, !dbg !7903
  br label %if.end, !dbg !7903

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !7904
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_field_access(%struct.field_access_site* %f_acc, %struct.field_entry* byval(%struct.field_entry) align 8 %field) unnamed_addr #5 !dbg !7905 {
entry:
  %size_res = alloca %union.tree_node*, align 8
  %cast_res = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.field_access_site* %f_acc, metadata !7909, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.declare(metadata %struct.field_entry* %field, metadata !7910, metadata !DIExpression()), !dbg !7921
  %field_mapping = getelementptr inbounds %struct.field_entry, %struct.field_entry* %field, i64 0, i32 3, !dbg !7922
  %0 = load %union.tree_node*, %union.tree_node** %field_mapping, align 8, !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7911, metadata !DIExpression()), !dbg !7920
  %1 = bitcast %union.tree_node** %size_res to i8*, !dbg !7923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7923
  %2 = bitcast %union.tree_node** %cast_res to i8*, !dbg !7924
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7924
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7916, metadata !DIExpression()), !dbg !7920
  store %union.tree_node* null, %union.tree_node** %cast_res, align 8, !dbg !7925
  %num = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %f_acc, i64 0, i32 4, !dbg !7926
  %3 = load %union.tree_node*, %union.tree_node** %num, align 8, !dbg !7926
  %tobool = icmp eq %union.tree_node* %3, null, !dbg !7928
  br i1 %tobool, label %if.end, label %if.then, !dbg !7929

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %union.tree_node** %size_res, metadata !7913, metadata !DIExpression(DW_OP_deref)), !dbg !7920
  %call = call fastcc %union.gimple_statement_d* @gen_size(%union.tree_node* nonnull %3, %union.tree_node* %0, %union.tree_node** nonnull %size_res) #7, !dbg !7930
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !7914, metadata !DIExpression()), !dbg !7920
  %ref_def_stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %f_acc, i64 0, i32 7, !dbg !7932
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt, align 8, !dbg !7932
  call fastcc void @insert_before_stmt(%union.gimple_statement_d* %4, %union.gimple_statement_d* %call) #7, !dbg !7933
  br label %if.end, !dbg !7934

if.end:                                           ; preds = %entry, %if.then
  %cast_stmt2 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %f_acc, i64 0, i32 8, !dbg !7935
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cast_stmt2, align 8, !dbg !7935
  %tobool3 = icmp eq %union.gimple_statement_d* %5, null, !dbg !7937
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !7938

if.then4:                                         ; preds = %if.end
  %6 = load %union.tree_node*, %union.tree_node** %size_res, align 8, !dbg !7939
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7913, metadata !DIExpression()), !dbg !7920
  call void @llvm.dbg.value(metadata %union.tree_node** %cast_res, metadata !7916, metadata !DIExpression(DW_OP_deref)), !dbg !7920
  %call6 = call fastcc %union.gimple_statement_d* @gen_cast_stmt(%union.tree_node* %6, %union.tree_node* %0, %union.gimple_statement_d* nonnull %5, %union.tree_node** nonnull %cast_res) #7, !dbg !7941
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !7915, metadata !DIExpression()), !dbg !7920
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %cast_stmt2, align 8, !dbg !7942
  call fastcc void @insert_after_stmt(%union.gimple_statement_d* %7, %union.gimple_statement_d* %call6) #7, !dbg !7943
  br label %if.end8, !dbg !7944

if.end8:                                          ; preds = %if.end, %if.then4
  %ref_def_stmt9 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %f_acc, i64 0, i32 7, !dbg !7945
  %8 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt9, align 8, !dbg !7945
  %tobool10 = icmp eq %union.gimple_statement_d* %8, null, !dbg !7946
  br i1 %tobool10, label %if.end18, label %if.then11, !dbg !7947

if.then11:                                        ; preds = %if.end8
  %9 = load %union.tree_node*, %union.tree_node** %cast_res, align 8, !dbg !7948
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7916, metadata !DIExpression()), !dbg !7920
  %tobool12 = icmp eq %union.tree_node* %9, null, !dbg !7948
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7916, metadata !DIExpression()), !dbg !7920
  %10 = load %union.tree_node*, %union.tree_node** %size_res, align 8, !dbg !7950
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !7913, metadata !DIExpression()), !dbg !7920
  %offset.0 = select i1 %tobool12, %union.tree_node* %10, %union.tree_node* %9, !dbg !7950
  call void @llvm.dbg.value(metadata %union.tree_node* %offset.0, metadata !7917, metadata !DIExpression()), !dbg !7951
  %call16 = call fastcc %union.gimple_statement_d* @create_base_plus_offset(%union.gimple_statement_d* nonnull %8, %union.tree_node* %0, %union.tree_node* %offset.0) #7, !dbg !7952
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !7912, metadata !DIExpression()), !dbg !7920
  %11 = load %union.gimple_statement_d*, %union.gimple_statement_d** %ref_def_stmt9, align 8, !dbg !7953
  call fastcc void @insert_after_stmt(%union.gimple_statement_d* %11, %union.gimple_statement_d* %call16) #7, !dbg !7954
  br label %if.end18, !dbg !7955

if.end18:                                         ; preds = %if.end8, %if.then11
  call fastcc void @replace_field_access_stmt(%struct.field_access_site* %f_acc, %union.tree_node* %0) #7, !dbg !7956
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !7957
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !7957
  ret void, !dbg !7957
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_before_stmt(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %new_stmt) unnamed_addr #5 !dbg !7958 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7962, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt, metadata !7963, metadata !DIExpression()), !dbg !7965
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !7966
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7966
  %tobool = icmp ne %union.gimple_statement_d* %stmt, null, !dbg !7967
  %tobool1 = icmp ne %union.gimple_statement_d* %new_stmt, null, !dbg !7969
  %or.cond = and i1 %tobool, %tobool1, !dbg !7970
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7970

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7971
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7971
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* nonnull %stmt) #6, !dbg !7971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !7971
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7971
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7964, metadata !DIExpression(DW_OP_deref)), !dbg !7965
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* nonnull %new_stmt, i32 1) #6, !dbg !7972
  br label %cleanup, !dbg !7973

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7973
  ret void, !dbg !7973
}

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_after_stmt(%union.gimple_statement_d* %stmt, %union.gimple_statement_d* %new_stmt) unnamed_addr #5 !dbg !7974 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7976, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %new_stmt, metadata !7977, metadata !DIExpression()), !dbg !7979
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !7980
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7980
  %tobool = icmp ne %union.gimple_statement_d* %stmt, null, !dbg !7981
  %tobool1 = icmp ne %union.gimple_statement_d* %new_stmt, null, !dbg !7983
  %or.cond = and i1 %tobool, %tobool1, !dbg !7984
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !7984

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !7985
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7985
  call void @gsi_for_stmt(%struct.gimple_stmt_iterator* nonnull sret %tmp, %union.gimple_statement_d* nonnull %stmt) #6, !dbg !7985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !7985
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7985
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !7978, metadata !DIExpression(DW_OP_deref)), !dbg !7979
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* nonnull %new_stmt, i32 1) #6, !dbg !7986
  br label %cleanup, !dbg !7987

cleanup:                                          ; preds = %entry, %if.end
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7987
  ret void, !dbg !7987
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @create_base_plus_offset(%union.gimple_statement_d* %orig_stmt, %union.tree_node* %new_type, %union.tree_node* %offset) unnamed_addr #5 !dbg !7988 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %orig_stmt, metadata !7992, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !7993, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %offset, metadata !7994, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7998, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7999, metadata !DIExpression()), !dbg !8007
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %orig_stmt) #7, !dbg !8008
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7995, metadata !DIExpression()), !dbg !8007
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8009
  %bf.load = load i64, i64* %0, align 8, !dbg !8009
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8009
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !8009
  br i1 %cmp, label %cond.end, label %lor.lhs.false, !dbg !8009

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 141, !dbg !8009
  br i1 %cmp5, label %cond.end, label %cond.true, !dbg !8009

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1086, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8009
  br label %cond.end, !dbg !8009

cond.end:                                         ; preds = %entry, %lor.lhs.false, %cond.true
  %call6 = tail call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %call, %union.tree_node* %new_type) #7, !dbg !8010
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7996, metadata !DIExpression()), !dbg !8007
  %tobool = icmp eq %union.tree_node* %call6, null, !dbg !8011
  br i1 %tobool, label %cond.true7, label %cond.end9, !dbg !8011

cond.true7:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1089, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8011
  br label %cond.end9, !dbg !8011

cond.end9:                                        ; preds = %cond.end, %cond.true7
  tail call fastcc void @finalize_var_creation(%union.tree_node* %call6) #7, !dbg !8012
  %call11 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %orig_stmt) #7, !dbg !8013
  switch i32 %call11, label %sw.default [
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 66, label %sw.bb
  ], !dbg !8014

sw.bb:                                            ; preds = %cond.end9, %cond.end9, %cond.end9
  %call12 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %orig_stmt) #7, !dbg !8015
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !8000, metadata !DIExpression()), !dbg !8016
  %call13 = tail call fastcc %union.tree_node* @gimple_assign_rhs2(%union.gimple_statement_d* %orig_stmt) #7, !dbg !8017
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !8003, metadata !DIExpression()), !dbg !8016
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !8018
  %base16 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !8018
  %call20 = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base16) #7, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %call20, metadata !8006, metadata !DIExpression()), !dbg !8016
  %call21 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call12) #7, !dbg !8019
  %call22 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call21) #7, !dbg !8020
  %call23 = tail call fastcc i32 @find_structure(%union.tree_node* %call22) #7, !dbg !8021
  call void @llvm.dbg.value(metadata i32 %call23, metadata !8004, metadata !DIExpression()), !dbg !8016
  %call24 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call13) #7, !dbg !8022
  %call25 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call24) #7, !dbg !8023
  %call26 = tail call fastcc i32 @find_structure(%union.tree_node* %call25) #7, !dbg !8024
  call void @llvm.dbg.value(metadata i32 %call26, metadata !8005, metadata !DIExpression()), !dbg !8016
  %cmp27 = icmp ne i32 %call23, %call20, !dbg !8025
  %cmp29 = icmp ne i32 %call26, %call20, !dbg !8025
  %or.cond = or i1 %cmp27, %cmp29, !dbg !8025
  br i1 %or.cond, label %cond.end32, label %cond.true30, !dbg !8025

cond.true30:                                      ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8025
  br label %cond.end32, !dbg !8025

cond.end32:                                       ; preds = %sw.bb, %cond.true30
  %cmp34 = icmp eq i32 %call23, %call20, !dbg !8026
  br i1 %cmp34, label %if.end, label %if.then, !dbg !8028

if.then:                                          ; preds = %cond.end32
  %call35 = tail call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %call12, %union.tree_node* %new_type) #7, !dbg !8029
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !7998, metadata !DIExpression()), !dbg !8007
  br label %if.end, !dbg !8030

if.end:                                           ; preds = %cond.end32, %if.then
  %new_op0.0 = phi %union.tree_node* [ %call35, %if.then ], [ null, %cond.end32 ], !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %new_op0.0, metadata !7998, metadata !DIExpression()), !dbg !8007
  %cmp36 = icmp eq i32 %call26, %call20, !dbg !8031
  br i1 %cmp36, label %if.end39, label %if.then37, !dbg !8033

if.then37:                                        ; preds = %if.end
  %call38 = tail call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %call13, %union.tree_node* %new_type) #7, !dbg !8034
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !7999, metadata !DIExpression()), !dbg !8007
  br label %if.end39, !dbg !8035

if.end39:                                         ; preds = %if.end, %if.then37
  %new_op1.0 = phi %union.tree_node* [ %call38, %if.then37 ], [ null, %if.end ], !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %new_op1.0, metadata !7999, metadata !DIExpression()), !dbg !8007
  %tobool40 = icmp eq %union.tree_node* %new_op0.0, null, !dbg !8036
  %spec.select = select i1 %tobool40, %union.tree_node* %offset, %union.tree_node* %new_op0.0, !dbg !8038
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !7998, metadata !DIExpression()), !dbg !8007
  %tobool43 = icmp eq %union.tree_node* %new_op1.0, null, !dbg !8039
  %new_op1.1 = select i1 %tobool43, %union.tree_node* %offset, %union.tree_node* %new_op1.0, !dbg !8041
  br label %sw.epilog, !dbg !8041

sw.default:                                       ; preds = %cond.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8042
  br label %sw.epilog, !dbg !8043

sw.epilog:                                        ; preds = %if.end39, %sw.default
  %new_op0.2 = phi %union.tree_node* [ null, %sw.default ], [ %spec.select, %if.end39 ], !dbg !8007
  %new_op1.2 = phi %union.tree_node* [ null, %sw.default ], [ %new_op1.1, %if.end39 ], !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %new_op1.2, metadata !7999, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %union.tree_node* %new_op0.2, metadata !7998, metadata !DIExpression()), !dbg !8007
  %call46 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %orig_stmt) #7, !dbg !8044
  %call47 = tail call %union.gimple_statement_d* @gimple_build_assign_with_ops_stat(i32 %call46, %union.tree_node* %call6, %union.tree_node* %new_op0.2, %union.tree_node* %new_op1.2) #6, !dbg !8044
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call47, metadata !7997, metadata !DIExpression()), !dbg !8007
  tail call fastcc void @finalize_stmt(%union.gimple_statement_d* %call47) #7, !dbg !8045
  ret %union.gimple_statement_d* %call47, !dbg !8046
}

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_field_access_stmt(%struct.field_access_site* %acc, %union.tree_node* %new_type) unnamed_addr #5 !dbg !8047 {
entry:
  call void @llvm.dbg.value(metadata %struct.field_access_site* %acc, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !8052, metadata !DIExpression()), !dbg !8053
  %ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 3, !dbg !8054
  %0 = bitcast %union.tree_node** %ref to i64**, !dbg !8054
  %1 = load i64*, i64** %0, align 8, !dbg !8054
  %bf.load = load i64, i64* %1, align 8, !dbg !8054
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8056
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !8056
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8057

lor.lhs.false:                                    ; preds = %entry
  %cmp6 = icmp eq i64 %bf.cast1, 45, !dbg !8058
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !8059

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %cmp13 = icmp eq i64 %bf.cast1, 32, !dbg !8060
  br i1 %cmp13, label %if.then, label %if.else, !dbg !8061

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  tail call fastcc void @replace_field_acc(%struct.field_access_site* %acc, %union.tree_node* %new_type) #7, !dbg !8062
  br label %if.end, !dbg !8062

if.else:                                          ; preds = %lor.lhs.false7
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1047, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8063
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8064
}

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @replace_field_acc(%struct.field_access_site* %acc, %union.tree_node* %new_type) unnamed_addr #5 !dbg !8065 {
entry:
  %wrapper = alloca %struct.VEC_type_wrapper_t_heap*, align 8
  %r_pos = alloca %struct.ref_pos, align 8
  %wr = alloca %struct.type_wrapper, align 8
  call void @llvm.dbg.value(metadata %struct.field_access_site* %acc, metadata !8067, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !8068, metadata !DIExpression()), !dbg !8083
  %ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 3, !dbg !8084
  %0 = load %union.tree_node*, %union.tree_node** %ref, align 8, !dbg !8084
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8069, metadata !DIExpression()), !dbg !8083
  %field_decl = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 2, !dbg !8085
  %1 = bitcast %union.tree_node** %field_decl to %struct.tree_decl_minimal**, !dbg !8085
  %2 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %1, align 8, !dbg !8085
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %2, i64 0, i32 3, !dbg !8085
  %3 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8085
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8075, metadata !DIExpression()), !dbg !8083
  %4 = bitcast %struct.VEC_type_wrapper_t_heap** %wrapper to i8*, !dbg !8086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8086
  %call = tail call fastcc %struct.VEC_type_wrapper_t_heap* @VEC_type_wrapper_t_heap_alloc(i32 10) #7, !dbg !8087
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %call, metadata !8076, metadata !DIExpression()), !dbg !8083
  store %struct.VEC_type_wrapper_t_heap* %call, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !8088
  call void @llvm.dbg.value(metadata %struct.type_wrapper* null, metadata !8077, metadata !DIExpression()), !dbg !8083
  %5 = bitcast %struct.ref_pos* %r_pos to i8*, !dbg !8089
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !8089
  %6 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %wr, i64 0, i32 0, !dbg !8090
  %domain12 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %wr, i64 0, i32 1, !dbg !8091
  %7 = bitcast %union.tree_node** %domain12 to i64*, !dbg !8091
  br label %while.cond, !dbg !8094

while.cond:                                       ; preds = %if.end, %entry
  %.in = phi %union.tree_node* [ %0, %entry ], [ %13, %if.end ]
  %ref_var.0 = phi %union.tree_node* [ %0, %entry ], [ %13, %if.end ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref_var.0, metadata !8069, metadata !DIExpression()), !dbg !8083
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %ref_var.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8095
  %bf.load = load i64, i64* %8, align 8, !dbg !8095
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8096
  %9 = or i64 %bf.cast1, 2, !dbg !8097
  %10 = icmp eq i64 %9, 47, !dbg !8097
  br i1 %10, label %while.body, label %while.end, !dbg !8097

while.body:                                       ; preds = %while.cond
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !8096
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8, !dbg !8098
  br i1 %cmp, label %if.then, label %if.else, !dbg !8099

if.then:                                          ; preds = %while.body
  store i8 0, i8* %6, align 8, !dbg !8100
  store %union.tree_node* null, %union.tree_node** %domain12, align 8, !dbg !8102
  br label %if.end, !dbg !8103

if.else:                                          ; preds = %while.body
  store i8 1, i8* %6, align 8, !dbg !8104
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8105
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !8105
  %11 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !8105
  %12 = load i64, i64* %11, align 8, !dbg !8105
  store i64 %12, i64* %7, align 8, !dbg !8106
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %wrapper, metadata !8076, metadata !DIExpression(DW_OP_deref)), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %wr, metadata !8079, metadata !DIExpression(DW_OP_deref)), !dbg !8090
  %call13 = call fastcc %struct.type_wrapper* @VEC_type_wrapper_t_heap_safe_push(%struct.VEC_type_wrapper_t_heap** nonnull %wrapper, %struct.type_wrapper* nonnull %wr) #7, !dbg !8107
  %operands15 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !8108
  %13 = load %union.tree_node*, %union.tree_node** %operands15, align 8, !dbg !8108
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8069, metadata !DIExpression()), !dbg !8083
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8, !dbg !8109
  br label %while.cond, !dbg !8094, !llvm.loop !8110

while.end:                                        ; preds = %while.cond
  %ref_var.0.lcssa = phi %union.tree_node* [ %ref_var.0, %while.cond ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref_var.0.lcssa, metadata !8069, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref_var.0.lcssa, metadata !8069, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %ref_var.0.lcssa, metadata !8069, metadata !DIExpression()), !dbg !8083
  %call17 = call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %ref_var.0.lcssa, %union.tree_node* %new_type) #7, !dbg !8111
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !8070, metadata !DIExpression()), !dbg !8083
  call fastcc void @finalize_global_creation(%union.tree_node* %call17) #7, !dbg !8112
  br label %while.cond18, !dbg !8113

while.cond18:                                     ; preds = %if.end40, %while.end
  %new_ref.0 = phi %union.tree_node* [ %call17, %while.end ], [ %new_ref.1, %if.end40 ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref.0, metadata !8070, metadata !DIExpression()), !dbg !8083
  %14 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !8114
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %14, metadata !8076, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %14, metadata !8076, metadata !DIExpression()), !dbg !8083
  %base19 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %14, i64 0, i32 0, !dbg !8114
  %call20 = call fastcc i32 @VEC_type_wrapper_t_base_length(%struct.VEC_type_wrapper_t_base* %base19) #7, !dbg !8114
  %cmp21 = icmp eq i32 %call20, 0, !dbg !8115
  br i1 %cmp21, label %while.end47, label %while.body22, !dbg !8113

while.body22:                                     ; preds = %while.cond18
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_ref.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8116
  %15 = bitcast %union.tree_node** %type23 to %struct.tree_common**, !dbg !8116
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !8116
  %type25 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !8116
  %17 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !8116
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !8081, metadata !DIExpression()), !dbg !8117
  %18 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !8118
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %18, metadata !8076, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %18, metadata !8076, metadata !DIExpression()), !dbg !8083
  %base28 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %18, i64 0, i32 0, !dbg !8118
  %call32 = call fastcc %struct.type_wrapper* @VEC_type_wrapper_t_base_last(%struct.VEC_type_wrapper_t_base* %base28) #7, !dbg !8118
  call void @llvm.dbg.value(metadata %struct.type_wrapper* %call32, metadata !8077, metadata !DIExpression()), !dbg !8083
  %wrap33 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %call32, i64 0, i32 0, !dbg !8119
  %19 = load i8, i8* %wrap33, align 8, !dbg !8119
  %tobool34 = icmp eq i8 %19, 0, !dbg !8121
  br i1 %tobool34, label %if.else38, label %if.then35, !dbg !8122

if.then35:                                        ; preds = %while.body22
  %domain36 = getelementptr inbounds %struct.type_wrapper, %struct.type_wrapper* %call32, i64 0, i32 1, !dbg !8123
  %20 = load %union.tree_node*, %union.tree_node** %domain36, align 8, !dbg !8123
  %call37 = call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %17, %union.tree_node* %new_ref.0, %union.tree_node* %20, %union.tree_node* null, %union.tree_node* null) #6, !dbg !8123
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !8070, metadata !DIExpression()), !dbg !8083
  br label %if.end40, !dbg !8124

if.else38:                                        ; preds = %while.body22
  %call39 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %17, %union.tree_node* %new_ref.0) #6, !dbg !8125
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !8070, metadata !DIExpression()), !dbg !8083
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then35
  %new_ref.1 = phi %union.tree_node* [ %call37, %if.then35 ], [ %call39, %if.else38 ], !dbg !8126
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref.1, metadata !8070, metadata !DIExpression()), !dbg !8083
  %21 = load %struct.VEC_type_wrapper_t_heap*, %struct.VEC_type_wrapper_t_heap** %wrapper, align 8, !dbg !8127
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %21, metadata !8076, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap* %21, metadata !8076, metadata !DIExpression()), !dbg !8083
  %base43 = getelementptr inbounds %struct.VEC_type_wrapper_t_heap, %struct.VEC_type_wrapper_t_heap* %21, i64 0, i32 0, !dbg !8127
  call fastcc void @VEC_type_wrapper_t_base_pop(%struct.VEC_type_wrapper_t_base* %base43) #7, !dbg !8127
  br label %while.cond18, !dbg !8113, !llvm.loop !8128

while.end47:                                      ; preds = %while.cond18
  %new_ref.0.lcssa = phi %union.tree_node* [ %new_ref.0, %while.cond18 ], !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref.0.lcssa, metadata !8070, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref.0.lcssa, metadata !8070, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %union.tree_node* %new_ref.0.lcssa, metadata !8070, metadata !DIExpression()), !dbg !8083
  %call48 = call fastcc %union.tree_node* @build_comp_ref(%union.tree_node* %new_ref.0.lcssa, %union.tree_node* %3, %union.tree_node* %new_type) #7, !dbg !8130
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !8074, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata %struct.VEC_type_wrapper_t_heap** %wrapper, metadata !8076, metadata !DIExpression(DW_OP_deref)), !dbg !8083
  call fastcc void @VEC_type_wrapper_t_heap_free(%struct.VEC_type_wrapper_t_heap** nonnull %wrapper) #7, !dbg !8131
  %stmt = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 0, !dbg !8132
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8132
  %call49 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %22) #7, !dbg !8134
  %tobool50 = icmp eq i8 %call49, 0, !dbg !8134
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8135
  br i1 %tobool50, label %if.else75, label %if.then51, !dbg !8136

if.then51:                                        ; preds = %while.end47
  %call53 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %23) #7, !dbg !8137
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !8071, metadata !DIExpression()), !dbg !8083
  %24 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8139
  %call55 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %24) #7, !dbg !8140
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !8072, metadata !DIExpression()), !dbg !8083
  %comp_ref = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 1, !dbg !8141
  %25 = load %union.tree_node*, %union.tree_node** %comp_ref, align 8, !dbg !8141
  %cmp56 = icmp eq %union.tree_node* %call53, %25, !dbg !8143
  br i1 %cmp56, label %if.then57, label %if.else59, !dbg !8144

if.then57:                                        ; preds = %if.then51
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8145
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %26, %union.tree_node* %call48) #7, !dbg !8146
  br label %if.end84, !dbg !8146

if.else59:                                        ; preds = %if.then51
  %cmp61 = icmp eq %union.tree_node* %call55, %25, !dbg !8147
  %27 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8149
  br i1 %cmp61, label %if.then62, label %if.else64, !dbg !8150

if.then62:                                        ; preds = %if.else59
  call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %27, %union.tree_node* %call48) #7, !dbg !8151
  br label %if.end84, !dbg !8151

if.else64:                                        ; preds = %if.else59
  call void @llvm.dbg.value(metadata %struct.ref_pos* %r_pos, metadata !8078, metadata !DIExpression(DW_OP_deref)), !dbg !8083
  %call67 = call fastcc %union.tree_node** @find_pos_in_stmt(%union.gimple_statement_d* %27, %union.tree_node* %25, %struct.ref_pos* nonnull %r_pos) #7, !dbg !8152
  call void @llvm.dbg.value(metadata %union.tree_node** %call67, metadata !8073, metadata !DIExpression()), !dbg !8083
  %tobool68 = icmp eq %union.tree_node** %call67, null, !dbg !8154
  br i1 %tobool68, label %cond.true69, label %cond.end71, !dbg !8154

cond.true69:                                      ; preds = %if.else64
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8154
  br label %cond.end71, !dbg !8154

cond.end71:                                       ; preds = %if.else64, %cond.true69
  store %union.tree_node* %call48, %union.tree_node** %call67, align 8, !dbg !8155
  br label %if.end84

if.else75:                                        ; preds = %while.end47
  %comp_ref77 = getelementptr inbounds %struct.field_access_site, %struct.field_access_site* %acc, i64 0, i32 1, !dbg !8156
  %28 = load %union.tree_node*, %union.tree_node** %comp_ref77, align 8, !dbg !8156
  call void @llvm.dbg.value(metadata %struct.ref_pos* %r_pos, metadata !8078, metadata !DIExpression(DW_OP_deref)), !dbg !8083
  %call78 = call fastcc %union.tree_node** @find_pos_in_stmt(%union.gimple_statement_d* %23, %union.tree_node* %28, %struct.ref_pos* nonnull %r_pos) #7, !dbg !8158
  call void @llvm.dbg.value(metadata %union.tree_node** %call78, metadata !8073, metadata !DIExpression()), !dbg !8083
  %tobool79 = icmp eq %union.tree_node** %call78, null, !dbg !8159
  br i1 %tobool79, label %cond.true80, label %cond.end82, !dbg !8159

cond.true80:                                      ; preds = %if.else75
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1028, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8159
  br label %cond.end82, !dbg !8159

cond.end82:                                       ; preds = %if.else75, %cond.true80
  store %union.tree_node* %call48, %union.tree_node** %call78, align 8, !dbg !8160
  br label %if.end84

if.end84:                                         ; preds = %if.then57, %cond.end71, %if.then62, %cond.end82
  %29 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8161
  call fastcc void @finalize_stmt(%union.gimple_statement_d* %29) #7, !dbg !8162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !8163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8163
  ret void, !dbg !8163
}

; Function Attrs: nounwind uwtable
define internal fastcc void @finalize_global_creation(%union.tree_node* %var) unnamed_addr #5 !dbg !8164 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !8166, metadata !DIExpression()), !dbg !8167
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8168
  %bf.load = load i64, i64* %0, align 8, !dbg !8168
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8170
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !8170
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8171

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @is_global_var(%union.tree_node* %var) #7, !dbg !8172
  %tobool = icmp eq i8 %call, 0, !dbg !8172
  br i1 %tobool, label %if.end, label %if.then, !dbg !8173

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @finalize_var_creation(%union.tree_node* %var) #7, !dbg !8174
  br label %if.end, !dbg !8174

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  ret void, !dbg !8175
}

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @build_comp_ref(%union.tree_node* %base, %union.tree_node* %field_id, %union.tree_node* %type) unnamed_addr #0 !dbg !8176 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %base, metadata !8178, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata %union.tree_node* %field_id, metadata !8179, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8180, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i8 0, metadata !8182, metadata !DIExpression()), !dbg !8183
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8184
  %0 = bitcast i32* %values to %union.tree_node**, !dbg !8184
  br label %for.cond, !dbg !8186

for.cond:                                         ; preds = %for.inc, %entry
  %field.0.in = phi %union.tree_node** [ %0, %entry ], [ %chain, %for.inc ]
  %field.0 = load %union.tree_node*, %union.tree_node** %field.0.in, align 8, !dbg !8187
  call void @llvm.dbg.value(metadata %union.tree_node* %field.0, metadata !8181, metadata !DIExpression()), !dbg !8183
  %tobool = icmp eq %union.tree_node* %field.0, null, !dbg !8188
  br i1 %tobool, label %for.end, label %for.body, !dbg !8188

for.body:                                         ; preds = %for.cond
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8189
  %1 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8189
  %cmp = icmp eq %union.tree_node* %1, %field_id, !dbg !8193
  br i1 %cmp, label %for.end, label %for.inc, !dbg !8194

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8195
  br label %for.cond, !dbg !8196, !llvm.loop !8197

for.end:                                          ; preds = %for.cond, %for.body
  %field.0.lcssa = phi %union.tree_node* [ %field.0, %for.cond ], [ %field.0, %for.body ], !dbg !8187
  %found.0 = phi i1 [ false, %for.cond ], [ true, %for.body ]
  br i1 %found.0, label %cond.end, label %cond.true, !dbg !8199

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 872, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8199
  br label %cond.end, !dbg !8199

cond.end:                                         ; preds = %for.end, %cond.true
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %field.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8200
  %2 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !8200
  %call = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %2, %union.tree_node* %base, %union.tree_node* %field.0.lcssa, %union.tree_node* null) #6, !dbg !8200
  ret %union.tree_node* %call, !dbg !8201
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !8202 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8204, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !8205, metadata !DIExpression()), !dbg !8206
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #7, !dbg !8207
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !8208
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8210

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8211
  %bf.load = load i64, i64* %0, align 8, !dbg !8211
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8212
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !8212
  br i1 %cmp, label %if.then, label %if.end, !dbg !8213

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !8214
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !8214
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !8215
  br label %if.end, !dbg !8214

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !8216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !8217 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !8220, metadata !DIExpression()), !dbg !8221
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #7, !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node** @find_pos_in_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %ref, %struct.ref_pos* %r_pos) unnamed_addr #5 !dbg !8224 {
entry:
  %wi = alloca %struct.walk_stmt_info, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8228, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata %union.tree_node* %ref, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata %struct.ref_pos* %r_pos, metadata !8230, metadata !DIExpression()), !dbg !8232
  %0 = bitcast %struct.walk_stmt_info* %wi to i8*, !dbg !8233
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !8233
  %ref1 = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %r_pos, i64 0, i32 1, !dbg !8234
  store %union.tree_node* %ref, %union.tree_node** %ref1, align 8, !dbg !8235
  %pos = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %r_pos, i64 0, i32 0, !dbg !8236
  store %union.tree_node** null, %union.tree_node*** %pos, align 8, !dbg !8237
  %container = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %r_pos, i64 0, i32 2, !dbg !8238
  store %union.tree_node* null, %union.tree_node** %container, align 8, !dbg !8239
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !8240
  %info = getelementptr inbounds %struct.walk_stmt_info, %struct.walk_stmt_info* %wi, i64 0, i32 1, !dbg !8241
  %1 = bitcast i8** %info to %struct.ref_pos**, !dbg !8242
  store %struct.ref_pos* %r_pos, %struct.ref_pos** %1, align 8, !dbg !8242
  call void @llvm.dbg.value(metadata %struct.walk_stmt_info* %wi, metadata !8231, metadata !DIExpression(DW_OP_deref)), !dbg !8232
  %call2 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @find_pos_in_stmt_1, %struct.walk_stmt_info* nonnull %wi) #6, !dbg !8243
  %2 = load %union.tree_node**, %union.tree_node*** %pos, align 8, !dbg !8244
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !8245
  ret %union.tree_node** %2, !dbg !8246
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @find_pos_in_stmt_1(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !8247 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !8249, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !8250, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i8* %data, metadata !8251, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i8* %data, metadata !8252, metadata !DIExpression()), !dbg !8256
  %info = getelementptr inbounds i8, i8* %data, i64 24, !dbg !8257
  %0 = bitcast i8* %info to %struct.ref_pos**, !dbg !8257
  %1 = load %struct.ref_pos*, %struct.ref_pos** %0, align 8, !dbg !8257
  call void @llvm.dbg.value(metadata %struct.ref_pos* %1, metadata !8253, metadata !DIExpression()), !dbg !8256
  %ref1 = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %1, i64 0, i32 1, !dbg !8258
  %2 = load %union.tree_node*, %union.tree_node** %ref1, align 8, !dbg !8258
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !8254, metadata !DIExpression()), !dbg !8256
  %3 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !8259
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8255, metadata !DIExpression()), !dbg !8256
  %cmp = icmp eq %union.tree_node* %3, %2, !dbg !8260
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8262

lor.lhs.false:                                    ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8263
  %bf.load = load i64, i64* %4, align 8, !dbg !8263
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8264
  %cmp2 = icmp eq i64 %bf.cast1, 141, !dbg !8264
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !8265

land.lhs.true:                                    ; preds = %lor.lhs.false
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8266
  %5 = bitcast i32* %var to %union.tree_node**, !dbg !8266
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !8266
  %cmp3 = icmp eq %union.tree_node* %6, %2, !dbg !8267
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8268

if.then:                                          ; preds = %land.lhs.true, %entry
  %pos = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %1, i64 0, i32 0, !dbg !8269
  store %union.tree_node** %tp, %union.tree_node*** %pos, align 8, !dbg !8271
  br label %cleanup, !dbg !8272

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %container = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %1, i64 0, i32 2, !dbg !8273
  store %union.tree_node* %3, %union.tree_node** %container, align 8, !dbg !8274
  store i32 1, i32* %walk_subtrees, align 4, !dbg !8275
  br label %cleanup, !dbg !8276

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %if.end ], !dbg !8256
  ret %union.tree_node* %retval.0, !dbg !8277
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_general_access(%struct.access_site* %acc, %struct.data_structure* %str) unnamed_addr #5 !dbg !8278 {
entry:
  call void @llvm.dbg.value(metadata %struct.access_site* %acc, metadata !8282, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !8283, metadata !DIExpression()), !dbg !8285
  %stmt1 = getelementptr inbounds %struct.access_site, %struct.access_site* %acc, i64 0, i32 0, !dbg !8286
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !8286
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !8284, metadata !DIExpression()), !dbg !8285
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %0) #7, !dbg !8287
  switch i32 %call, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !8288

sw.bb:                                            ; preds = %entry
  tail call fastcc void @create_new_stmts_for_cond_expr(%union.gimple_statement_d* %0) #7, !dbg !8289
  br label %sw.epilog, !dbg !8291

sw.bb2:                                           ; preds = %entry
  tail call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %0) #7, !dbg !8292
  tail call fastcc void @update_stmt(%union.gimple_statement_d* %0) #7, !dbg !8293
  br label %sw.epilog, !dbg !8294

sw.default:                                       ; preds = %entry
  tail call fastcc void @create_new_stmts_for_general_acc(%struct.access_site* %acc, %struct.data_structure* %str) #7, !dbg !8295
  br label %sw.epilog, !dbg !8296

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  ret void, !dbg !8297
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_stmts_for_cond_expr(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !8298 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8300, metadata !DIExpression()), !dbg !8317
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !8318
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8318
  %1 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !8319
  %base = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %1, i64 0, i32 0, !dbg !8319
  %call = tail call fastcc i32 @VEC_structure_base_length(%struct.VEC_structure_base* %base) #7, !dbg !8319
  call void @llvm.dbg.value(metadata i32 %call, metadata !8312, metadata !DIExpression()), !dbg !8317
  %call1 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !8320
  %cmp = icmp eq i32 %call1, 101, !dbg !8320
  br i1 %cmp, label %cond.end6, label %lor.lhs.false, !dbg !8320

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %stmt) #7, !dbg !8320
  %cmp3 = icmp eq i32 %call2, 102, !dbg !8320
  br i1 %cmp3, label %cond.end6, label %cond.true4, !dbg !8320

cond.true4:                                       ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8320
  br label %cond.end6, !dbg !8320

cond.end6:                                        ; preds = %entry, %lor.lhs.false, %cond.true4
  %call8 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %stmt) #7, !dbg !8321
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !8301, metadata !DIExpression()), !dbg !8317
  %call9 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %stmt) #7, !dbg !8322
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !8302, metadata !DIExpression()), !dbg !8317
  %call10 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call8) #7, !dbg !8323
  %call11 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call10) #7, !dbg !8324
  %call12 = tail call fastcc i32 @find_structure(%union.tree_node* %call11) #7, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %call12, metadata !8304, metadata !DIExpression()), !dbg !8317
  %call13 = tail call fastcc %union.tree_node* @get_type_of_var(%union.tree_node* %call9) #7, !dbg !8326
  %call14 = tail call fastcc %union.tree_node* @strip_type(%union.tree_node* %call13) #7, !dbg !8327
  %call15 = tail call fastcc i32 @find_structure(%union.tree_node* %call14) #7, !dbg !8328
  call void @llvm.dbg.value(metadata i32 %call15, metadata !8305, metadata !DIExpression()), !dbg !8317
  %cmp16 = icmp ne i32 %call12, %call, !dbg !8329
  call void @llvm.dbg.value(metadata i1 %cmp16, metadata !8306, metadata !DIExpression()), !dbg !8317
  %cmp18 = icmp ne i32 %call15, %call, !dbg !8330
  call void @llvm.dbg.value(metadata i1 %cmp18, metadata !8307, metadata !DIExpression()), !dbg !8317
  %or.cond = or i1 %cmp16, %cmp18, !dbg !8331
  br i1 %or.cond, label %cond.end29, label %cond.true27, !dbg !8331

cond.true27:                                      ; preds = %cond.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1246, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8331
  br label %cond.end29, !dbg !8331

cond.end29:                                       ; preds = %cond.end6, %cond.true27
  %call31 = tail call i32 @integer_zerop(%union.tree_node* %call8) #6, !dbg !8332
  %tobool32 = icmp eq i32 %call31, 0, !dbg !8332
  br i1 %tobool32, label %lor.lhs.false33, label %cond.end38, !dbg !8332

lor.lhs.false33:                                  ; preds = %cond.end29
  %call34 = tail call i32 @integer_zerop(%union.tree_node* %call9) #6, !dbg !8332
  %tobool35 = icmp eq i32 %call34, 0, !dbg !8332
  br i1 %tobool35, label %cond.true36, label %cond.end38, !dbg !8332

cond.true36:                                      ; preds = %lor.lhs.false33
  tail call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8332
  br label %cond.end38, !dbg !8332

cond.end38:                                       ; preds = %lor.lhs.false33, %cond.end29, %cond.true36
  %call40 = tail call i32 @integer_zerop(%union.tree_node* %call8) #6, !dbg !8333
  %tobool41 = icmp eq i32 %call40, 0, !dbg !8333
  %2 = load %struct.VEC_structure_heap*, %struct.VEC_structure_heap** @structures, align 8, !dbg !8317
  %base45 = getelementptr inbounds %struct.VEC_structure_heap, %struct.VEC_structure_heap* %2, i64 0, i32 0, !dbg !8317
  br i1 %tobool41, label %cond.end55, label %cond.end47, !dbg !8333

cond.end47:                                       ; preds = %cond.end38
  %call49 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base45, i32 %call15) #7, !dbg !8334
  br label %cond.end58, !dbg !8333

cond.end55:                                       ; preds = %cond.end38
  %call57 = tail call fastcc %struct.data_structure* @VEC_structure_base_index(%struct.VEC_structure_base* %base45, i32 %call12) #7, !dbg !8335
  br label %cond.end58, !dbg !8333

cond.end58:                                       ; preds = %cond.end55, %cond.end47
  %cond59 = phi %struct.data_structure* [ %call49, %cond.end47 ], [ %call57, %cond.end55 ], !dbg !8333
  call void @llvm.dbg.value(metadata %struct.data_structure* %cond59, metadata !8308, metadata !DIExpression()), !dbg !8317
  %call60 = tail call i32 @integer_zerop(%union.tree_node* %call8) #6, !dbg !8336
  %tobool61 = icmp eq i32 %call60, 0, !dbg !8336
  %call9.call8 = select i1 %tobool61, %union.tree_node* %call8, %union.tree_node* %call9, !dbg !8336
  call void @llvm.dbg.value(metadata %union.tree_node* %call9.call8, metadata !8303, metadata !DIExpression()), !dbg !8317
  %call66 = tail call i32 @integer_zerop(%union.tree_node* %call8) #6, !dbg !8337
  %tobool67 = icmp ne i32 %call66, 0, !dbg !8337
  %cond68 = zext i1 %tobool67 to i32, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %cond68, metadata !8310, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i32 0, metadata !8311, metadata !DIExpression()), !dbg !8317
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %cond59, i64 0, i32 6, !dbg !8338
  br label %for.cond, !dbg !8339

for.cond:                                         ; preds = %for.body, %cond.end58
  %i.0 = phi i32 [ 0, %cond.end58 ], [ %inc, %for.body ], !dbg !8340
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8311, metadata !DIExpression()), !dbg !8317
  %3 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !8341
  %tobool69 = icmp eq %struct.VEC_tree_heap* %3, null, !dbg !8341
  br i1 %tobool69, label %cond.end74, label %cond.true70, !dbg !8341

cond.true70:                                      ; preds = %for.cond
  %base72 = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %3, i64 0, i32 0, !dbg !8341
  br label %cond.end74, !dbg !8341

cond.end74:                                       ; preds = %for.cond, %cond.true70
  %cond75 = phi %struct.VEC_tree_base* [ %base72, %cond.true70 ], [ null, %for.cond ], !dbg !8341
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !8309, metadata !DIExpression(DW_OP_deref)), !dbg !8317
  %call76 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond75, i32 %i.0, %union.tree_node** nonnull %type) #7, !dbg !8341
  %tobool77 = icmp eq i32 %call76, 0, !dbg !8342
  br i1 %tobool77, label %for.end, label %for.body, !dbg !8342

for.body:                                         ; preds = %cond.end74
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8343
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8309, metadata !DIExpression()), !dbg !8317
  %call78 = call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %call9.call8, %union.tree_node* %4) #7, !dbg !8344
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !8313, metadata !DIExpression()), !dbg !8345
  call fastcc void @create_new_stmts_for_cond_expr_1(%union.tree_node* %call78, %union.gimple_statement_d* %stmt, i32 %cond68) #7, !dbg !8346
  %inc = add nuw nsw i32 %i.0, 1, !dbg !8347
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8311, metadata !DIExpression()), !dbg !8317
  br label %for.cond, !dbg !8348, !llvm.loop !8349

for.end:                                          ; preds = %cond.end74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8351
  ret void, !dbg !8351
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !8352 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !8354, metadata !DIExpression()), !dbg !8355
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #7, !dbg !8356
  ret void, !dbg !8357
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_stmts_for_general_acc(%struct.access_site* %acc, %struct.data_structure* %str) unnamed_addr #5 !dbg !8358 {
entry:
  %type = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.access_site* %acc, metadata !8360, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.value(metadata %struct.data_structure* %str, metadata !8361, metadata !DIExpression()), !dbg !8369
  %0 = bitcast %union.tree_node** %type to i8*, !dbg !8370
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8370
  %stmt1 = getelementptr inbounds %struct.access_site, %struct.access_site* %acc, i64 0, i32 0, !dbg !8371
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt1, align 8, !dbg !8371
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %1, metadata !8363, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.value(metadata i32 0, metadata !8364, metadata !DIExpression()), !dbg !8369
  %new_types = getelementptr inbounds %struct.data_structure, %struct.data_structure* %str, i64 0, i32 6, !dbg !8372
  br label %for.cond, !dbg !8373

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !8374
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8364, metadata !DIExpression()), !dbg !8369
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %new_types, align 8, !dbg !8375
  %tobool = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !8375
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8375

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !8375
  br label %cond.end, !dbg !8375

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !8375
  call void @llvm.dbg.value(metadata %union.tree_node** %type, metadata !8362, metadata !DIExpression(DW_OP_deref)), !dbg !8369
  %call = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %type) #7, !dbg !8375
  %tobool3 = icmp eq i32 %call, 0, !dbg !8376
  br i1 %tobool3, label %for.end, label %for.body, !dbg !8376

for.body:                                         ; preds = %cond.end
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8377
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8362, metadata !DIExpression()), !dbg !8369
  %call4 = call fastcc %union.gimple_statement_d* @create_general_new_stmt(%struct.access_site* %acc, %union.tree_node* %3) #7, !dbg !8378
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !8365, metadata !DIExpression()), !dbg !8379
  call fastcc void @insert_after_stmt(%union.gimple_statement_d* %1, %union.gimple_statement_d* %call4) #7, !dbg !8380
  %inc = add i32 %i.0, 1, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8364, metadata !DIExpression()), !dbg !8369
  br label %for.cond, !dbg !8382, !llvm.loop !8383

for.end:                                          ; preds = %cond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8385
  ret void, !dbg !8385
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_new_stmts_for_cond_expr_1(%union.tree_node* %new_var, %union.gimple_statement_d* %cond_stmt, i32 %pos) unnamed_addr #5 !dbg !8386 {
entry:
  %true_e = alloca %struct.edge_def*, align 8
  %false_e = alloca %struct.edge_def*, align 8
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var, metadata !8390, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %cond_stmt, metadata !8391, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i32 %pos, metadata !8392, metadata !DIExpression()), !dbg !8398
  %0 = bitcast %struct.edge_def** %true_e to i8*, !dbg !8399
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8399
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !8394, metadata !DIExpression()), !dbg !8398
  store %struct.edge_def* null, %struct.edge_def** %true_e, align 8, !dbg !8400
  %1 = bitcast %struct.edge_def** %false_e to i8*, !dbg !8399
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8399
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !8395, metadata !DIExpression()), !dbg !8398
  store %struct.edge_def* null, %struct.edge_def** %false_e, align 8, !dbg !8401
  %2 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !8402
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8402
  %call = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8403
  call void @llvm.dbg.value(metadata %struct.edge_def** %true_e, metadata !8394, metadata !DIExpression(DW_OP_deref)), !dbg !8398
  call void @llvm.dbg.value(metadata %struct.edge_def** %false_e, metadata !8395, metadata !DIExpression(DW_OP_deref)), !dbg !8398
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %call, %struct.edge_def** nonnull %true_e, %struct.edge_def** nonnull %false_e) #6, !dbg !8404
  %call1 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8405
  %cmp = icmp eq i32 %pos, 0, !dbg !8406
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !8407

cond.false:                                       ; preds = %entry
  %call2 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8408
  br label %cond.end, !dbg !8407

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %call2, %cond.false ], [ %new_var, %entry ], !dbg !8407
  %cmp3 = icmp eq i32 %pos, 1, !dbg !8409
  br i1 %cmp3, label %cond.end7, label %cond.false5, !dbg !8410

cond.false5:                                      ; preds = %cond.end
  %call6 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8411
  br label %cond.end7, !dbg !8410

cond.end7:                                        ; preds = %cond.end, %cond.false5
  %cond8 = phi %union.tree_node* [ %call6, %cond.false5 ], [ %new_var, %cond.end ], !dbg !8410
  %call9 = call %union.gimple_statement_d* @gimple_build_cond(i32 %call1, %union.tree_node* %cond, %union.tree_node* %cond8, %union.tree_node* null, %union.tree_node* null) #6, !dbg !8412
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call9, metadata !8393, metadata !DIExpression()), !dbg !8398
  call fastcc void @finalize_stmt(%union.gimple_statement_d* %call9) #7, !dbg !8413
  %call10 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8414
  %call11 = call %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def* %call10) #6, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !8396, metadata !DIExpression()), !dbg !8398
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8416
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !8416
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call11) #7, !dbg !8416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !8416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !8416
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !8397, metadata !DIExpression(DW_OP_deref)), !dbg !8398
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %si, %union.gimple_statement_d* %call9, i32 0) #6, !dbg !8417
  %4 = load %struct.edge_def*, %struct.edge_def** %true_e, align 8, !dbg !8418
  call void @llvm.dbg.value(metadata %struct.edge_def* %4, metadata !8394, metadata !DIExpression()), !dbg !8398
  %call12 = call fastcc %struct.edge_def* @make_edge_and_fix_phis_of_dest(%struct.basic_block_def* %call11, %struct.edge_def* %4) #7, !dbg !8419
  %5 = load %struct.edge_def*, %struct.edge_def** %false_e, align 8, !dbg !8420
  call void @llvm.dbg.value(metadata %struct.edge_def* %5, metadata !8395, metadata !DIExpression()), !dbg !8398
  %call13 = call fastcc %struct.edge_def* @make_edge_and_fix_phis_of_dest(%struct.basic_block_def* %call11, %struct.edge_def* %5) #7, !dbg !8421
  %call14 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %cond_stmt) #7, !dbg !8422
  %cmp15 = icmp eq i32 %call14, 102, !dbg !8424
  br i1 %cmp15, label %if.then, label %if.else, !dbg !8425

if.then:                                          ; preds = %cond.end7
  %6 = load %struct.edge_def*, %struct.edge_def** %true_e, align 8, !dbg !8426
  call void @llvm.dbg.value(metadata %struct.edge_def* %6, metadata !8394, metadata !DIExpression()), !dbg !8398
  call void @redirect_edge_succ(%struct.edge_def* %6, %struct.basic_block_def* %call11) #6, !dbg !8427
  br label %if.end, !dbg !8427

if.else:                                          ; preds = %cond.end7
  %7 = load %struct.edge_def*, %struct.edge_def** %false_e, align 8, !dbg !8428
  call void @llvm.dbg.value(metadata %struct.edge_def* %7, metadata !8395, metadata !DIExpression()), !dbg !8398
  call void @redirect_edge_succ(%struct.edge_def* %7, %struct.basic_block_def* %call11) #6, !dbg !8429
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8430
  ret void, !dbg !8430
}

declare dso_local void @extract_true_false_edges_from_block(%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_cond(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @create_empty_bb(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.edge_def* @make_edge_and_fix_phis_of_dest(%struct.basic_block_def* %bb, %struct.edge_def* %e) unnamed_addr #5 !dbg !8431 {
entry:
  %si = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8435, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8436, metadata !DIExpression()), !dbg !8444
  %0 = bitcast %struct.gimple_stmt_iterator* %si to i8*, !dbg !8445
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8445
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !8446
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !8446
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !8447
  %2 = load i32, i32* %flags, align 8, !dbg !8447
  %call = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb, %struct.basic_block_def* %1, i32 %2) #6, !dbg !8448
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !8437, metadata !DIExpression()), !dbg !8444
  %3 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !8449
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !8449
  %dest1 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !8450
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest1, align 8, !dbg !8450
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %4) #6, !dbg !8449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !8449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !8449
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !8451
  br label %for.cond, !dbg !8452

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !8439, metadata !DIExpression(DW_OP_deref)), !dbg !8444
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !8453
  %tobool = icmp eq i8 %call2, 0, !dbg !8454
  br i1 %tobool, label %for.body, label %for.end, !dbg !8455

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !8439, metadata !DIExpression(DW_OP_deref)), !dbg !8444
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %si) #7, !dbg !8456
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !8440, metadata !DIExpression()), !dbg !8451
  %5 = load i32, i32* %dest_idx, align 4, !dbg !8457
  %call4 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call3, i32 %5) #7, !dbg !8457
  %call5 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call4) #7, !dbg !8457
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8438, metadata !DIExpression()), !dbg !8444
  %call6 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %call3, %struct.edge_def* %e) #7, !dbg !8458
  call void @add_phi_arg(%union.gimple_statement_d* %call3, %union.tree_node* %call5, %struct.edge_def* %call, i32 %call6) #6, !dbg !8459
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %si, metadata !8439, metadata !DIExpression(DW_OP_deref)), !dbg !8444
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %si) #7, !dbg !8460
  br label %for.cond, !dbg !8461, !llvm.loop !8462

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8464
  ret %struct.edge_def* %call, !dbg !8465
}

declare dso_local void @redirect_edge_succ(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !8466 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8470, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 %i, metadata !8471, metadata !DIExpression()), !dbg !8472
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #7, !dbg !8473
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !8474
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !8475
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %gs, %struct.edge_def* %e) unnamed_addr #0 !dbg !8476 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8480, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !8481, metadata !DIExpression()), !dbg !8482
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !8483
  %0 = load i32, i32* %dest_idx, align 4, !dbg !8483
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %0) #7, !dbg !8484
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !8485
  %1 = load i32, i32* %locus, align 8, !dbg !8485
  ret i32 %1, !dbg !8486
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !8487 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !8492, metadata !DIExpression()), !dbg !8494
  call void @llvm.dbg.value(metadata i32 %index, metadata !8493, metadata !DIExpression()), !dbg !8494
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !8495
  %0 = load i32, i32* %capacity, align 8, !dbg !8495
  %cmp = icmp ult i32 %0, %index, !dbg !8495
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8495

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8495
  br label %cond.end, !dbg !8495

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !8496
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !8496
  ret %struct.phi_arg_d* %arrayidx, !dbg !8497
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @create_general_new_stmt(%struct.access_site* %acc, %union.tree_node* %new_type) unnamed_addr #5 !dbg !8498 {
entry:
  %var = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.access_site* %acc, metadata !8502, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata %union.tree_node* %new_type, metadata !8503, metadata !DIExpression()), !dbg !8514
  %stmt = getelementptr inbounds %struct.access_site, %struct.access_site* %acc, i64 0, i32 0, !dbg !8515
  %0 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !8515
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %0, metadata !8504, metadata !DIExpression()), !dbg !8514
  %1 = bitcast %union.tree_node** %var to i8*, !dbg !8516
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8516
  %call = tail call %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d* %0) #6, !dbg !8517
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !8506, metadata !DIExpression()), !dbg !8514
  %call1 = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %call) #7, !dbg !8518
  %tobool = icmp eq i8 %call1, 0, !dbg !8518
  br i1 %tobool, label %if.end, label %if.then, !dbg !8520

if.then:                                          ; preds = %entry
  tail call fastcc void @gimple_set_vuse(%union.gimple_statement_d* %call, %union.tree_node* null) #7, !dbg !8521
  tail call fastcc void @gimple_set_vdef(%union.gimple_statement_d* %call, %union.tree_node* null) #7, !dbg !8523
  br label %if.end, !dbg !8524

if.end:                                           ; preds = %entry, %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !8507, metadata !DIExpression()), !dbg !8514
  %vars = getelementptr inbounds %struct.access_site, %struct.access_site* %acc, i64 0, i32 1, !dbg !8525
  br label %for.cond, !dbg !8526

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ], !dbg !8527
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !8507, metadata !DIExpression()), !dbg !8514
  %2 = load %struct.VEC_tree_heap*, %struct.VEC_tree_heap** %vars, align 8, !dbg !8528
  %tobool2 = icmp eq %struct.VEC_tree_heap* %2, null, !dbg !8528
  br i1 %tobool2, label %cond.end, label %cond.true, !dbg !8528

cond.true:                                        ; preds = %for.cond
  %base = getelementptr inbounds %struct.VEC_tree_heap, %struct.VEC_tree_heap* %2, i64 0, i32 0, !dbg !8528
  br label %cond.end, !dbg !8528

cond.end:                                         ; preds = %for.cond, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %for.cond ], !dbg !8528
  call void @llvm.dbg.value(metadata %union.tree_node** %var, metadata !8505, metadata !DIExpression(DW_OP_deref)), !dbg !8514
  %call4 = call fastcc i32 @VEC_tree_base_iterate(%struct.VEC_tree_base* %cond, i32 %i.0, %union.tree_node** nonnull %var) #7, !dbg !8528
  %tobool5 = icmp eq i32 %call4, 0, !dbg !8529
  br i1 %tobool5, label %for.end, label %for.body, !dbg !8529

for.body:                                         ; preds = %cond.end
  %3 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !8530
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8505, metadata !DIExpression()), !dbg !8514
  %call6 = call fastcc %union.tree_node* @find_new_var_of_type(%union.tree_node* %3, %union.tree_node* %new_type) #7, !dbg !8531
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !8508, metadata !DIExpression()), !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8513, metadata !DIExpression()), !dbg !8532
  %tobool7 = icmp eq %union.tree_node* %call6, null, !dbg !8533
  br i1 %tobool7, label %cond.true8, label %cond.end10, !dbg !8533

cond.true8:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1317, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8533
  br label %cond.end10, !dbg !8533

cond.end10:                                       ; preds = %for.body, %cond.true8
  call fastcc void @finalize_var_creation(%union.tree_node* %call6) #7, !dbg !8534
  %call12 = call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call) #7, !dbg !8535
  %tobool13 = icmp eq i8 %call12, 0, !dbg !8535
  br i1 %tobool13, label %if.else53, label %if.then14, !dbg !8537

if.then14:                                        ; preds = %cond.end10
  %call15 = call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %call) #7, !dbg !8538
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !8512, metadata !DIExpression()), !dbg !8532
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8540
  %bf.load = load i64, i64* %4, align 8, !dbg !8540
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8542
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !8542
  br i1 %cmp, label %if.then17, label %if.end19, !dbg !8543

if.then17:                                        ; preds = %if.then14
  %var18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8544
  %5 = bitcast i32* %var18 to %union.tree_node**, !dbg !8544
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !8544
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8512, metadata !DIExpression()), !dbg !8532
  br label %if.end19, !dbg !8545

if.end19:                                         ; preds = %if.then17, %if.then14
  %lhs.0 = phi %union.tree_node* [ %6, %if.then17 ], [ %call15, %if.then14 ], !dbg !8546
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !8512, metadata !DIExpression()), !dbg !8532
  %call20 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call) #7, !dbg !8547
  %cmp21 = icmp eq i32 %call20, 141, !dbg !8549
  br i1 %cmp21, label %if.then22, label %if.end26, !dbg !8550

if.then22:                                        ; preds = %if.end19
  %call23 = call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %call) #7, !dbg !8551
  %var25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8551
  %7 = bitcast i32* %var25 to %union.tree_node**, !dbg !8551
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !8551
  %9 = bitcast %union.tree_node* %8 to %struct.tree_constructor*, !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8513, metadata !DIExpression()), !dbg !8532
  br label %if.end26, !dbg !8552

if.end26:                                         ; preds = %if.then22, %if.end19
  %10 = phi %struct.tree_constructor* [ %9, %if.then22 ], [ null, %if.end19 ], !dbg !8532
  %rhs.0 = phi %union.tree_node* [ %8, %if.then22 ], [ null, %if.end19 ], !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !8513, metadata !DIExpression()), !dbg !8532
  %call27 = call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %call) #7, !dbg !8553
  %cmp28 = icmp eq i32 %call27, 51, !dbg !8555
  br i1 %cmp28, label %if.then29, label %if.end45, !dbg !8556

if.then29:                                        ; preds = %if.end26
  %elts = getelementptr inbounds %struct.tree_constructor, %struct.tree_constructor* %10, i64 0, i32 1, !dbg !8557
  %11 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %elts, align 8, !dbg !8557
  %tobool30 = icmp eq %struct.VEC_constructor_elt_gc* %11, null, !dbg !8557
  br i1 %tobool30, label %cond.end36, label %cond.true31, !dbg !8557

cond.true31:                                      ; preds = %if.then29
  %base34 = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %11, i64 0, i32 0, !dbg !8557
  br label %cond.end36, !dbg !8557

cond.end36:                                       ; preds = %if.then29, %cond.true31
  %cond37 = phi %struct.VEC_constructor_elt_base* [ %base34, %cond.true31 ], [ null, %if.then29 ], !dbg !8557
  %call38 = call fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %cond37) #7, !dbg !8557
  %cmp39 = icmp eq i32 %call38, 0, !dbg !8557
  br i1 %cmp39, label %cond.end42, label %cond.true40, !dbg !8557

cond.true40:                                      ; preds = %cond.end36
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1335, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8557
  br label %cond.end42, !dbg !8557

cond.end42:                                       ; preds = %cond.end36, %cond.true40
  %call44 = call %union.tree_node* @build_constructor(%union.tree_node* %new_type, %struct.VEC_constructor_elt_gc* null) #6, !dbg !8559
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !8513, metadata !DIExpression()), !dbg !8532
  call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %call, %union.tree_node* %call44) #7, !dbg !8560
  br label %if.end45, !dbg !8561

if.end45:                                         ; preds = %cond.end42, %if.end26
  %rhs.1 = phi %union.tree_node* [ %call44, %cond.end42 ], [ %rhs.0, %if.end26 ], !dbg !8546
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.1, metadata !8513, metadata !DIExpression()), !dbg !8532
  %12 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !8562
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !8505, metadata !DIExpression()), !dbg !8514
  %cmp46 = icmp eq %union.tree_node* %lhs.0, %12, !dbg !8564
  br i1 %cmp46, label %if.then47, label %if.else, !dbg !8565

if.then47:                                        ; preds = %if.end45
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call, %union.tree_node* %call6) #7, !dbg !8566
  br label %for.inc, !dbg !8566

if.else:                                          ; preds = %if.end45
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !8505, metadata !DIExpression()), !dbg !8514
  %cmp48 = icmp eq %union.tree_node* %rhs.1, %12, !dbg !8567
  br i1 %cmp48, label %if.then49, label %if.else50, !dbg !8569

if.then49:                                        ; preds = %if.else
  call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %call, %union.tree_node* %call6) #7, !dbg !8570
  br label %for.inc, !dbg !8570

if.else50:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !8505, metadata !DIExpression()), !dbg !8514
  call fastcc void @insert_new_var_in_stmt(%union.gimple_statement_d* %call, %union.tree_node* %12, %union.tree_node* %call6) #7, !dbg !8571
  br label %for.inc

if.else53:                                        ; preds = %cond.end10
  %13 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !8572
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8505, metadata !DIExpression()), !dbg !8514
  call fastcc void @insert_new_var_in_stmt(%union.gimple_statement_d* %call, %union.tree_node* %13, %union.tree_node* %call6) #7, !dbg !8573
  br label %for.inc

for.inc:                                          ; preds = %if.else53, %if.then49, %if.else50, %if.then47
  %inc = add i32 %i.0, 1, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8507, metadata !DIExpression()), !dbg !8514
  br label %for.cond, !dbg !8575, !llvm.loop !8576

for.end:                                          ; preds = %cond.end
  call fastcc void @finalize_stmt(%union.gimple_statement_d* %call) #7, !dbg !8578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8579
  ret %union.gimple_statement_d* %call, !dbg !8580
}

declare dso_local %union.gimple_statement_d* @gimple_copy(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vuse(%union.gimple_statement_d* %g, %union.tree_node* %vuse) unnamed_addr #0 !dbg !8581 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8583, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8584, metadata !DIExpression()), !dbg !8585
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !8586
  %tobool = icmp eq i8 %call, 0, !dbg !8586
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8586

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8586
  br label %cond.end, !dbg !8586

cond.end:                                         ; preds = %entry, %cond.true
  %vuse1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !8587
  %0 = bitcast %struct.ssa_use_operand_d** %vuse1 to %union.tree_node**, !dbg !8587
  store %union.tree_node* null, %union.tree_node** %0, align 8, !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_vdef(%union.gimple_statement_d* %g, %union.tree_node* %vdef) unnamed_addr #0 !dbg !8590 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !8592, metadata !DIExpression()), !dbg !8594
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8593, metadata !DIExpression()), !dbg !8594
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #7, !dbg !8595
  %tobool = icmp eq i8 %call, 0, !dbg !8595
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8595

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8595
  br label %cond.end, !dbg !8595

cond.end:                                         ; preds = %entry, %cond.true
  %vdef1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !8596
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef1 to %union.tree_node**, !dbg !8596
  store %union.tree_node* null, %union.tree_node** %0, align 8, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_length(%struct.VEC_constructor_elt_base* %vec_) unnamed_addr #0 !dbg !8599 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !8605, metadata !DIExpression()), !dbg !8606
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !8607
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8607

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !8607
  %0 = load i32, i32* %num, align 8, !dbg !8607
  br label %cond.end, !dbg !8607

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8607
  ret i32 %cond, !dbg !8607
}

declare dso_local %union.tree_node* @build_constructor(%union.tree_node*, %struct.VEC_constructor_elt_gc*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @insert_new_var_in_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %var, %union.tree_node* %new_var) unnamed_addr #5 !dbg !8608 {
entry:
  %r_pos = alloca %struct.ref_pos, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !8612, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !8613, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var, metadata !8614, metadata !DIExpression()), !dbg !8619
  %0 = bitcast %struct.ref_pos* %r_pos to i8*, !dbg !8620
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8620
  call void @llvm.dbg.value(metadata %struct.ref_pos* %r_pos, metadata !8615, metadata !DIExpression(DW_OP_deref)), !dbg !8619
  %call = call fastcc %union.tree_node** @find_pos_in_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %var, %struct.ref_pos* nonnull %r_pos) #7, !dbg !8621
  call void @llvm.dbg.value(metadata %union.tree_node** %call, metadata !8616, metadata !DIExpression()), !dbg !8619
  %tobool = icmp eq %union.tree_node** %call, null, !dbg !8622
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8622

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8622
  br label %cond.end, !dbg !8622

cond.end:                                         ; preds = %entry, %cond.true
  %container3 = getelementptr inbounds %struct.ref_pos, %struct.ref_pos* %r_pos, i64 0, i32 2, !dbg !8623
  br label %while.cond, !dbg !8624

while.cond:                                       ; preds = %if.end, %cond.end
  %new_var.addr.0 = phi %union.tree_node* [ %new_var, %cond.end ], [ %new_var.addr.1, %if.end ]
  %pos.0 = phi %union.tree_node** [ %call, %cond.end ], [ %call21, %if.end ], !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0, metadata !8614, metadata !DIExpression()), !dbg !8619
  %1 = load %union.tree_node*, %union.tree_node** %container3, align 8, !dbg !8625
  %tobool1 = icmp eq %union.tree_node* %1, null, !dbg !8626
  br i1 %tobool1, label %while.end, label %land.rhs, !dbg !8627

land.rhs:                                         ; preds = %while.cond
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8627
  %bf.load = load i64, i64* %2, align 8, !dbg !8628
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8629
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !8629
  %cmp8 = icmp eq i64 %bf.cast1, 121, !dbg !8630
  %or.cond = or i1 %cmp, %cmp8, !dbg !8631
  br i1 %or.cond, label %while.body, label %while.end, !dbg !8631

while.body:                                       ; preds = %land.rhs
  call void @llvm.dbg.value(metadata %union.tree_node* undef, metadata !8617, metadata !DIExpression()), !dbg !8632
  br i1 %cmp, label %if.then, label %if.else, !dbg !8633

if.then:                                          ; preds = %while.body
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_var.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8634
  %3 = bitcast %union.tree_node** %type9 to %struct.tree_common**, !dbg !8634
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !8634
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !8634
  %5 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !8634
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8617, metadata !DIExpression()), !dbg !8632
  %call18 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %5, %union.tree_node* %new_var.addr.0) #6, !dbg !8635
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !8614, metadata !DIExpression()), !dbg !8619
  br label %if.end, !dbg !8637

if.else:                                          ; preds = %while.body
  %call19 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %new_var.addr.0) #6, !dbg !8638
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !8614, metadata !DIExpression()), !dbg !8619
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %new_var.addr.1 = phi %union.tree_node* [ %call18, %if.then ], [ %call19, %if.else ], !dbg !8639
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.1, metadata !8614, metadata !DIExpression()), !dbg !8619
  %6 = load %union.tree_node*, %union.tree_node** %container3, align 8, !dbg !8640
  call void @llvm.dbg.value(metadata %struct.ref_pos* %r_pos, metadata !8615, metadata !DIExpression(DW_OP_deref)), !dbg !8619
  %call21 = call fastcc %union.tree_node** @find_pos_in_stmt(%union.gimple_statement_d* %stmt, %union.tree_node* %6, %struct.ref_pos* nonnull %r_pos) #7, !dbg !8641
  call void @llvm.dbg.value(metadata %union.tree_node** %call21, metadata !8616, metadata !DIExpression()), !dbg !8619
  br label %while.cond, !dbg !8624, !llvm.loop !8642

while.end:                                        ; preds = %land.rhs, %while.cond
  %new_var.addr.0.lcssa = phi %union.tree_node* [ %new_var.addr.0, %land.rhs ], [ %new_var.addr.0, %while.cond ]
  %pos.0.lcssa = phi %union.tree_node** [ %pos.0, %land.rhs ], [ %pos.0, %while.cond ], !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node* %new_var.addr.0.lcssa, metadata !8614, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata %union.tree_node** %pos.0.lcssa, metadata !8616, metadata !DIExpression()), !dbg !8619
  store %union.tree_node* %new_var.addr.0.lcssa, %union.tree_node** %pos.0.lcssa, align 8, !dbg !8644
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8645
  ret void, !dbg !8645
}

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @free_new_var(i8** %slot, i8* %data) #5 !dbg !8646 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !8648, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i8* %data, metadata !8649, metadata !DIExpression()), !dbg !8651
  %0 = bitcast i8** %slot to %struct.new_var_data**, !dbg !8652
  %1 = load %struct.new_var_data*, %struct.new_var_data** %0, align 8, !dbg !8652
  call void @llvm.dbg.value(metadata %struct.new_var_data* %1, metadata !8650, metadata !DIExpression()), !dbg !8651
  %new_vars = getelementptr inbounds %struct.new_var_data, %struct.new_var_data* %1, i64 0, i32 1, !dbg !8653
  tail call fastcc void @VEC_tree_heap_free(%struct.VEC_tree_heap** nonnull %new_vars) #7, !dbg !8653
  %2 = bitcast %struct.new_var_data* %1 to i8*, !dbg !8654
  tail call void @free(i8* %2) #6, !dbg !8655
  ret i32 1, !dbg !8656
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_alloc_sites() unnamed_addr #5 !dbg !8657 {
entry:
  %0 = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !8658
  %tobool = icmp eq %struct.htab* %0, null, !dbg !8658
  br i1 %tobool, label %if.end, label %if.then, !dbg !8660

if.then:                                          ; preds = %entry
  tail call void @htab_traverse(%struct.htab* nonnull %0, i32 (i8**, i8*)* nonnull @free_falloc_sites, i8* null) #6, !dbg !8661
  %.pre = load %struct.htab*, %struct.htab** @alloc_sites, align 8, !dbg !8662
  br label %if.end, !dbg !8661

if.end:                                           ; preds = %entry, %if.then
  %1 = phi %struct.htab* [ null, %entry ], [ %.pre, %if.then ], !dbg !8662
  tail call void @htab_delete(%struct.htab* %1) #6, !dbg !8663
  store %struct.htab* null, %struct.htab** @alloc_sites, align 8, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: nounwind uwtable
define internal i32 @free_falloc_sites(i8** %slot, i8* %data) #5 !dbg !8666 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !8668, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* %data, metadata !8669, metadata !DIExpression()), !dbg !8671
  %0 = bitcast i8** %slot to %struct.func_alloc_sites**, !dbg !8672
  %1 = load %struct.func_alloc_sites*, %struct.func_alloc_sites** %0, align 8, !dbg !8672
  call void @llvm.dbg.value(metadata %struct.func_alloc_sites* %1, metadata !8670, metadata !DIExpression()), !dbg !8671
  %allocs = getelementptr inbounds %struct.func_alloc_sites, %struct.func_alloc_sites* %1, i64 0, i32 1, !dbg !8673
  tail call fastcc void @VEC_alloc_site_t_heap_free(%struct.VEC_alloc_site_t_heap** nonnull %allocs) #7, !dbg !8673
  %2 = bitcast %struct.func_alloc_sites* %1 to i8*, !dbg !8674
  tail call void @free(i8* %2) #6, !dbg !8675
  ret i32 1, !dbg !8676
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_alloc_site_t_heap_free(%struct.VEC_alloc_site_t_heap** %vec_) unnamed_addr #0 !dbg !8677 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alloc_site_t_heap** %vec_, metadata !8681, metadata !DIExpression()), !dbg !8682
  %0 = load %struct.VEC_alloc_site_t_heap*, %struct.VEC_alloc_site_t_heap** %vec_, align 8, !dbg !8683
  %tobool = icmp eq %struct.VEC_alloc_site_t_heap* %0, null, !dbg !8683
  br i1 %tobool, label %if.end, label %if.then, !dbg !8685

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_alloc_site_t_heap* %0 to i8*, !dbg !8685
  tail call void @free(i8* nonnull %1) #6, !dbg !8683
  br label %if.end, !dbg !8683

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_alloc_site_t_heap* null, %struct.VEC_alloc_site_t_heap** %vec_, align 8, !dbg !8685
  ret void, !dbg !8685
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2187, !2188, !2189}
!llvm.ident = !{!2190}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "alloc_sites", scope: !2, file: !3, line: 188, type: !1444, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !668, globals: !2152, nameTableKind: None)
!3 = !DIFile(filename: "ipa-struct-reorg.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !13, !189, !317, !512, !518, !523, !528, !546, !553, !560, !583, !622, !629, !655, !661}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !6, line: 104, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 74, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!16 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!105 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!106 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!107 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!108 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!109 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!110 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!111 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!112 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!113 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!114 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!115 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!116 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!117 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!118 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!119 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!120 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!121 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!122 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!123 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!124 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!125 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!126 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!127 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!128 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!129 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!130 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!131 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!132 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!133 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!134 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!135 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!136 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!137 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!138 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!139 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!140 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!141 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!142 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!143 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!144 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !190, line: 7, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316}
!192 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!284 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!285 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!286 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!288 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!289 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!290 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!291 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!292 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!293 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!294 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!295 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!296 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!297 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!298 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!299 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!300 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!301 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!302 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!303 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!304 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!305 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!306 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!307 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!312 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!315 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!316 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !318, line: 39, baseType: !7, size: 32, elements: !319)
!318 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!319 = !{!320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!320 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!323 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!324 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!325 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!326 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!327 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!328 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!329 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!330 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!331 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!332 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!333 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!334 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!335 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!336 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!337 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!338 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!339 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!340 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!341 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!342 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!343 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!344 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!345 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!346 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!347 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!348 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!349 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!350 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!351 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!352 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!353 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!354 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!355 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!356 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!357 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!358 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!359 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!360 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!361 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!362 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!363 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!364 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!365 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!366 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!367 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!368 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!369 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!370 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!371 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!372 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!373 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!374 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!375 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!376 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!378 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!379 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!380 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!381 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!382 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!383 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!384 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!385 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!386 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!387 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!388 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!389 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!390 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!391 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!392 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!393 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!394 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!395 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!396 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!397 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!398 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!399 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!400 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!401 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!402 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!403 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!404 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!405 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!406 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!407 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!408 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!409 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!410 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!411 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!412 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!413 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!414 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!415 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!416 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!417 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!418 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!419 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!420 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!421 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!422 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!423 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!424 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!425 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!426 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!427 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!428 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!429 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!430 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!431 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!432 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!433 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!434 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!435 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!436 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!437 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!438 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!439 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!440 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!441 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!442 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!443 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!444 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!445 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!446 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!447 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!448 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!449 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!450 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!451 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!452 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!453 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!454 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!455 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!456 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!457 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!458 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!459 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!460 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!461 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!462 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!463 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!464 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!465 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!466 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!467 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!468 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!469 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!470 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!471 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!472 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!473 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!474 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!475 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!476 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!477 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!478 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!479 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!480 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!481 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!482 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!483 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!484 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!485 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!486 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!487 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!488 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!489 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!490 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!491 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!492 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!493 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!494 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!495 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!496 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!497 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!498 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!499 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!500 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!501 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!502 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!505 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!506 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!507 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!508 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!509 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!510 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!511 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !513, line: 363, baseType: !7, size: 32, elements: !514)
!513 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!514 = !{!515, !516, !517}
!515 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!516 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!517 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !513, line: 355, baseType: !7, size: 32, elements: !519)
!519 = !{!520, !521, !522}
!520 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!521 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!522 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!523 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !524, line: 474, baseType: !7, size: 32, elements: !525)
!524 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!525 = !{!526, !527}
!526 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!527 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !318, line: 280, baseType: !7, size: 32, elements: !529)
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545}
!530 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!532 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!533 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!534 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!535 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!536 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!537 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!538 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!539 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!540 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!541 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!542 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!543 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!544 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!545 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !318, line: 1817, baseType: !7, size: 32, elements: !547)
!547 = !{!548, !549, !550, !551, !552}
!548 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!549 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!550 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!551 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!552 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !318, line: 1805, baseType: !7, size: 32, elements: !554)
!554 = !{!555, !556, !557, !558, !559}
!555 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!556 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!557 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!558 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!559 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !561, line: 309, baseType: !7, size: 32, elements: !562)
!561 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!562 = !{!563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582}
!563 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!564 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!565 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!566 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!567 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!568 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!569 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!570 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!571 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!572 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!573 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!574 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!575 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!576 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!577 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!578 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!579 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!580 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!581 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!582 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !584, line: 51, baseType: !7, size: 32, elements: !585)
!584 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621}
!586 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!587 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!588 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!589 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!590 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!591 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!592 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!593 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!594 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!595 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!596 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!597 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!598 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!599 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!600 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!601 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!602 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!603 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!604 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!605 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!606 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!607 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!608 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!609 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!610 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!611 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!612 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!613 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!614 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!615 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!616 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!617 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!618 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!619 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!620 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!621 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!622 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "availability", file: !561, line: 27, baseType: !7, size: 32, elements: !623)
!623 = !{!624, !625, !626, !627, !628}
!624 = !DIEnumerator(name: "AVAIL_UNSET", value: 0, isUnsigned: true)
!625 = !DIEnumerator(name: "AVAIL_NOT_AVAILABLE", value: 1, isUnsigned: true)
!626 = !DIEnumerator(name: "AVAIL_OVERWRITABLE", value: 2, isUnsigned: true)
!627 = !DIEnumerator(name: "AVAIL_AVAILABLE", value: 3, isUnsigned: true)
!628 = !DIEnumerator(name: "AVAIL_LOCAL", value: 4, isUnsigned: true)
!629 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !584, line: 727, baseType: !7, size: 32, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654}
!631 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!632 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!633 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!634 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!635 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!636 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!637 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!638 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!639 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!640 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!641 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!642 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!643 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!644 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!645 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!646 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!647 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!648 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!649 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!650 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!651 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!652 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!653 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!654 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!655 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !584, line: 80, baseType: !7, size: 32, elements: !656)
!656 = !{!657, !658, !659, !660}
!657 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!658 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!659 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!660 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!661 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !662, line: 119, baseType: !7, size: 32, elements: !663)
!662 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!663 = !{!664, !665, !666, !667}
!664 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!665 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!666 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!667 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!668 = !{!669, !670, !671, !672, !675, !676, !678, !1977, !317, !690, !7, !1997, !2023, !2036, !2039, !2045, !2069, !2071, !2073, !2075, !2078, !1015, !2037, !1048, !673, !2081, !2046, !2047, !2052, !2084, !1014, !2074, !2072, !655, !2103, !2108, !1224, !744, !2007, !2113, !2120, !2121, !2122, !2139, !817, !2140, !2146}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!671 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !318, line: 184, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !318, line: 184, size: 128, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !680, file: !318, line: 184, baseType: !683, size: 128)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !318, line: 182, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !318, line: 182, size: 128, elements: !685)
!685 = !{!686, !687, !688}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !684, file: !318, line: 182, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !684, file: !318, line: 182, baseType: !7, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !684, file: !318, line: 182, baseType: !689, size: 64, offset: 64)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 64, elements: !789)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !691, line: 56, baseType: !692)
!691 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !318, line: 3371, size: 1792, elements: !694)
!694 = !{!695, !728, !734, !747, !766, !777, !782, !791, !797, !810, !822, !860, !1316, !1344, !1361, !1362, !1367, !1376, !1382, !1387, !1391, !1395, !1628, !1675, !1681, !1687, !1694, !1707, !1721, !1738, !1750, !1772, !1787, !1959}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !693, file: !318, line: 3372, baseType: !696, size: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !318, line: 360, size: 64, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !696, file: !318, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !696, file: !318, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !696, file: !318, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !696, file: !318, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !696, file: !318, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !696, file: !318, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !696, file: !318, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !696, file: !318, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !696, file: !318, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !696, file: !318, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !696, file: !318, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !696, file: !318, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !696, file: !318, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !696, file: !318, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !696, file: !318, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !696, file: !318, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !696, file: !318, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !696, file: !318, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !696, file: !318, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !696, file: !318, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !696, file: !318, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !696, file: !318, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !696, file: !318, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !696, file: !318, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !696, file: !318, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !696, file: !318, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !696, file: !318, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !696, file: !318, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !696, file: !318, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !696, file: !318, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !693, file: !318, line: 3373, baseType: !729, size: 192)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !318, line: 402, size: 192, elements: !730)
!730 = !{!731, !732, !733}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !729, file: !318, line: 403, baseType: !696, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !729, file: !318, line: 404, baseType: !690, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !729, file: !318, line: 405, baseType: !690, size: 64, offset: 128)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !693, file: !318, line: 3374, baseType: !735, size: 320)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !318, line: 1384, size: 320, elements: !736)
!736 = !{!737, !738}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !735, file: !318, line: 1385, baseType: !729, size: 192)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !735, file: !318, line: 1386, baseType: !739, size: 128, offset: 192)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !740, line: 58, baseType: !741)
!740 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !740, line: 54, size: 128, elements: !742)
!742 = !{!743, !745}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !741, file: !740, line: 56, baseType: !744, size: 64)
!744 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !741, file: !740, line: 57, baseType: !746, size: 64, offset: 64)
!746 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !693, file: !318, line: 3375, baseType: !748, size: 256)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !318, line: 1397, size: 256, elements: !749)
!749 = !{!750, !751}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !748, file: !318, line: 1398, baseType: !729, size: 192)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !748, file: !318, line: 1399, baseType: !752, size: 64, offset: 192)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !754, line: 52, size: 256, elements: !755)
!754 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!755 = !{!756, !757, !758, !759, !760, !761, !762}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !753, file: !754, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !753, file: !754, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !753, file: !754, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !753, file: !754, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !753, file: !754, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !753, file: !754, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !753, file: !754, line: 62, baseType: !763, size: 192, offset: 64)
!763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 192, elements: !764)
!764 = !{!765}
!765 = !DISubrange(count: 3)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !693, file: !318, line: 3376, baseType: !767, size: 256)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !318, line: 1408, size: 256, elements: !768)
!768 = !{!769, !770}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !767, file: !318, line: 1409, baseType: !729, size: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !767, file: !318, line: 1410, baseType: !771, size: 64, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !773, line: 27, size: 192, elements: !774)
!773 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !772, file: !773, line: 29, baseType: !739, size: 128)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !772, file: !773, line: 30, baseType: !189, size: 32, offset: 128)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !693, file: !318, line: 3377, baseType: !778, size: 256)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !318, line: 1437, size: 256, elements: !779)
!779 = !{!780, !781}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !778, file: !318, line: 1438, baseType: !729, size: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !778, file: !318, line: 1439, baseType: !690, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !693, file: !318, line: 3378, baseType: !783, size: 256)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !318, line: 1418, size: 256, elements: !784)
!784 = !{!785, !786, !787}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !783, file: !318, line: 1419, baseType: !729, size: 192)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !783, file: !318, line: 1420, baseType: !671, size: 32, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !783, file: !318, line: 1421, baseType: !788, size: 8, offset: 224)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 8, elements: !789)
!789 = !{!790}
!790 = !DISubrange(count: 1)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !693, file: !318, line: 3379, baseType: !792, size: 320)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !318, line: 1428, size: 320, elements: !793)
!793 = !{!794, !795, !796}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !792, file: !318, line: 1429, baseType: !729, size: 192)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !792, file: !318, line: 1430, baseType: !690, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !792, file: !318, line: 1431, baseType: !690, size: 64, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !693, file: !318, line: 3380, baseType: !798, size: 320)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !318, line: 1460, size: 320, elements: !799)
!799 = !{!800, !801}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !798, file: !318, line: 1461, baseType: !729, size: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !798, file: !318, line: 1462, baseType: !802, size: 128, offset: 192)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !803, line: 31, size: 128, elements: !804)
!803 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!804 = !{!805, !808, !809}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !802, file: !803, line: 32, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !802, file: !803, line: 33, baseType: !7, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !802, file: !803, line: 34, baseType: !7, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !693, file: !318, line: 3381, baseType: !811, size: 384)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !318, line: 2507, size: 384, elements: !812)
!812 = !{!813, !814, !819, !820, !821}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !811, file: !318, line: 2508, baseType: !729, size: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !811, file: !318, line: 2509, baseType: !815, size: 32, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !816, line: 58, baseType: !817)
!816 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !818, line: 44, baseType: !7)
!818 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!819 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !811, file: !318, line: 2510, baseType: !7, size: 32, offset: 224)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !811, file: !318, line: 2511, baseType: !690, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !811, file: !318, line: 2512, baseType: !690, size: 64, offset: 320)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !693, file: !318, line: 3382, baseType: !823, size: 896)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !318, line: 2652, size: 896, elements: !824)
!824 = !{!825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !823, file: !318, line: 2653, baseType: !811, size: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !823, file: !318, line: 2654, baseType: !690, size: 64, offset: 384)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !823, file: !318, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !823, file: !318, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !823, file: !318, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !823, file: !318, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !823, file: !318, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !823, file: !318, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !823, file: !318, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !823, file: !318, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !823, file: !318, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !823, file: !318, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !823, file: !318, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !823, file: !318, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !823, file: !318, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !823, file: !318, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !823, file: !318, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !823, file: !318, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !823, file: !318, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !823, file: !318, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !823, file: !318, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !823, file: !318, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !823, file: !318, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !823, file: !318, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !823, file: !318, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !823, file: !318, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !823, file: !318, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !823, file: !318, line: 2703, baseType: !7, size: 32, offset: 512)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !823, file: !318, line: 2705, baseType: !690, size: 64, offset: 576)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !823, file: !318, line: 2706, baseType: !690, size: 64, offset: 640)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !823, file: !318, line: 2707, baseType: !690, size: 64, offset: 704)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !823, file: !318, line: 2708, baseType: !690, size: 64, offset: 768)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !823, file: !318, line: 2711, baseType: !858, size: 64, offset: 832)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !318, line: 2711, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !693, file: !318, line: 3383, baseType: !861, size: 960)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !318, line: 2756, size: 960, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !861, file: !318, line: 2757, baseType: !823, size: 896)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !861, file: !318, line: 2758, baseType: !865, size: 64, offset: 896)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !691, line: 50, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !868, line: 240, size: 384, elements: !869)
!868 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!869 = !{!870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !867, file: !868, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !867, file: !868, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !867, file: !868, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !867, file: !868, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !867, file: !868, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !867, file: !868, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !867, file: !868, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !867, file: !868, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !867, file: !868, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !867, file: !868, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !867, file: !868, line: 321, baseType: !881, size: 320, offset: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !868, line: 315, size: 320, elements: !882)
!882 = !{!883, !1283, !1285, !1314, !1315}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !881, file: !868, line: 316, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 64, elements: !789)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !868, line: 183, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !868, line: 166, size: 64, elements: !887)
!887 = !{!888, !889, !890, !891, !892, !900, !901, !913, !916, !976, !977, !1260, !1273, !1280}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !886, file: !868, line: 168, baseType: !671, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !886, file: !868, line: 169, baseType: !7, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !886, file: !868, line: 170, baseType: !676, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !886, file: !868, line: 171, baseType: !865, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !886, file: !868, line: 172, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !691, line: 53, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !868, line: 359, size: 128, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !895, file: !868, line: 360, baseType: !671, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !895, file: !868, line: 361, baseType: !899, size: 64, offset: 64)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 64, elements: !789)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !886, file: !868, line: 173, baseType: !189, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !886, file: !868, line: 174, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !868, line: 133, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !868, line: 115, size: 32, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911, !912}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !903, file: !868, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !903, file: !868, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !903, file: !868, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !903, file: !868, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !903, file: !868, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !903, file: !868, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !903, file: !868, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !903, file: !868, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !886, file: !868, line: 175, baseType: !914, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !868, line: 175, flags: DIFlagFwdDecl)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !886, file: !868, line: 176, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !919, line: 75, size: 256, elements: !920)
!919 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!920 = !{!921, !935, !936, !937}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !918, file: !919, line: 76, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !919, line: 68, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !919, line: 63, size: 320, elements: !925)
!925 = !{!926, !928, !929, !930}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !924, file: !919, line: 64, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !924, file: !919, line: 65, baseType: !927, size: 64, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !924, file: !919, line: 66, baseType: !7, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !924, file: !919, line: 67, baseType: !931, size: 128, offset: 192)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 128, elements: !933)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !919, line: 29, baseType: !744)
!933 = !{!934}
!934 = !DISubrange(count: 2)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !918, file: !919, line: 77, baseType: !922, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !918, file: !919, line: 78, baseType: !7, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !918, file: !919, line: 79, baseType: !938, size: 64, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !919, line: 49, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !919, line: 45, size: 832, elements: !941)
!941 = !{!942, !943, !944}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !940, file: !919, line: 46, baseType: !927, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !940, file: !919, line: 47, baseType: !917, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !940, file: !919, line: 48, baseType: !945, size: 704, offset: 128)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !946, line: 164, size: 704, elements: !947)
!946 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!947 = !{!948, !949, !959, !960, !961, !962, !963, !964, !968, !972, !973, !974, !975}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !945, file: !946, line: 166, baseType: !746, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !945, file: !946, line: 167, baseType: !950, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !946, line: 157, size: 192, elements: !952)
!952 = !{!953, !954, !955}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !951, file: !946, line: 159, baseType: !673, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !951, file: !946, line: 160, baseType: !950, size: 64, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !951, file: !946, line: 161, baseType: !956, size: 32, offset: 128)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 32, elements: !957)
!957 = !{!958}
!958 = !DISubrange(count: 4)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !945, file: !946, line: 168, baseType: !673, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !945, file: !946, line: 169, baseType: !673, size: 64, offset: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !945, file: !946, line: 170, baseType: !673, size: 64, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !945, file: !946, line: 171, baseType: !746, size: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !945, file: !946, line: 172, baseType: !671, size: 32, offset: 384)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !945, file: !946, line: 176, baseType: !965, size: 64, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!950, !675, !746}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !945, file: !946, line: 177, baseType: !969, size: 64, offset: 512)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !675, !950}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !945, file: !946, line: 178, baseType: !675, size: 64, offset: 576)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !945, file: !946, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !945, file: !946, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !945, file: !946, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !886, file: !868, line: 177, baseType: !690, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !886, file: !868, line: 178, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !513, line: 217, size: 832, elements: !980)
!980 = !{!981, !1225, !1226, !1227, !1230, !1234, !1235, !1236, !1254, !1255, !1256, !1257, !1258, !1259}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !979, file: !513, line: 219, baseType: !982, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !513, line: 151, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !513, line: 151, size: 128, elements: !985)
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !984, file: !513, line: 151, baseType: !987, size: 128)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !513, line: 150, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !513, line: 150, size: 128, elements: !989)
!989 = !{!990, !991, !992}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !988, file: !513, line: 150, baseType: !7, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !988, file: !513, line: 150, baseType: !7, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !988, file: !513, line: 150, baseType: !993, size: 64, offset: 64)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 64, elements: !789)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !691, line: 108, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !513, line: 122, size: 512, elements: !997)
!997 = !{!998, !999, !1000, !1217, !1218, !1219, !1220, !1221, !1222, !1223}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !996, file: !513, line: 124, baseType: !978, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !996, file: !513, line: 125, baseType: !978, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !996, file: !513, line: 131, baseType: !1001, size: 64, offset: 128)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !513, line: 128, size: 64, elements: !1002)
!1002 = !{!1003, !1216}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1001, file: !513, line: 129, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !691, line: 66, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !584, line: 143, size: 192, elements: !1007)
!1007 = !{!1008, !1214, !1215}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1006, file: !584, line: 145, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !691, line: 69, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !584, line: 136, size: 192, elements: !1012)
!1012 = !{!1013, !1212, !1213}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1011, file: !584, line: 137, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !691, line: 58, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !584, line: 737, size: 768, elements: !1017)
!1017 = !{!1018, !1035, !1067, !1073, !1078, !1083, !1090, !1096, !1102, !1107, !1121, !1126, !1132, !1137, !1147, !1152, !1170, !1177, !1184, !1190, !1195, !1201, !1207}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1016, file: !584, line: 738, baseType: !1019, size: 256)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !584, line: 271, size: 256, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1019, file: !584, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1019, file: !584, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1019, file: !584, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1019, file: !584, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1019, file: !584, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1019, file: !584, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1019, file: !584, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1019, file: !584, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1019, file: !584, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1019, file: !584, line: 312, baseType: !7, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1019, file: !584, line: 316, baseType: !815, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1019, file: !584, line: 319, baseType: !7, size: 32, offset: 96)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1019, file: !584, line: 323, baseType: !978, size: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1019, file: !584, line: 327, baseType: !690, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1016, file: !584, line: 739, baseType: !1036, size: 448)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !584, line: 350, size: 448, elements: !1037)
!1037 = !{!1038, !1066}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1036, file: !584, line: 353, baseType: !1039, size: 384)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !584, line: 333, size: 384, elements: !1040)
!1040 = !{!1041, !1042, !1049}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1039, file: !584, line: 336, baseType: !1019, size: 256)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1039, file: !584, line: 343, baseType: !1043, size: 64, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !662, line: 37, size: 128, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !662, line: 39, baseType: !1043, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1044, file: !662, line: 40, baseType: !1048, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1039, file: !584, line: 344, baseType: !1050, size: 64, offset: 320)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !662, line: 45, size: 320, elements: !1052)
!1052 = !{!1053, !1054}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1051, file: !662, line: 47, baseType: !1050, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1051, file: !662, line: 48, baseType: !1055, size: 256, offset: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !318, line: 1883, size: 256, elements: !1056)
!1056 = !{!1057, !1059, !1060, !1065}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1055, file: !318, line: 1884, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !318, line: 1885, baseType: !1058, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1055, file: !318, line: 1891, baseType: !1061, size: 64, offset: 128)
!1061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1055, file: !318, line: 1891, size: 64, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1061, file: !318, line: 1891, baseType: !1014, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1061, file: !318, line: 1891, baseType: !690, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1055, file: !318, line: 1892, baseType: !1048, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1036, file: !584, line: 359, baseType: !689, size: 64, offset: 384)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1016, file: !584, line: 740, baseType: !1068, size: 512)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !584, line: 365, size: 512, elements: !1069)
!1069 = !{!1070, !1071, !1072}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1068, file: !584, line: 368, baseType: !1039, size: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1068, file: !584, line: 373, baseType: !690, size: 64, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1068, file: !584, line: 374, baseType: !690, size: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1016, file: !584, line: 741, baseType: !1074, size: 576)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !584, line: 380, size: 576, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1074, file: !584, line: 383, baseType: !1068, size: 512)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1074, file: !584, line: 389, baseType: !689, size: 64, offset: 512)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1016, file: !584, line: 742, baseType: !1079, size: 320)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !584, line: 395, size: 320, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1079, file: !584, line: 397, baseType: !1019, size: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1079, file: !584, line: 400, baseType: !1004, size: 64, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1016, file: !584, line: 743, baseType: !1084, size: 448)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !584, line: 406, size: 448, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1084, file: !584, line: 408, baseType: !1019, size: 256)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1084, file: !584, line: 412, baseType: !690, size: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1084, file: !584, line: 420, baseType: !690, size: 64, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1084, file: !584, line: 423, baseType: !1004, size: 64, offset: 384)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1016, file: !584, line: 744, baseType: !1091, size: 384)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !584, line: 429, size: 384, elements: !1092)
!1092 = !{!1093, !1094, !1095}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1091, file: !584, line: 431, baseType: !1019, size: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1091, file: !584, line: 434, baseType: !690, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1091, file: !584, line: 437, baseType: !1004, size: 64, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1016, file: !584, line: 745, baseType: !1097, size: 384)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !584, line: 443, size: 384, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1097, file: !584, line: 445, baseType: !1019, size: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1097, file: !584, line: 449, baseType: !690, size: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1097, file: !584, line: 453, baseType: !1004, size: 64, offset: 320)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1016, file: !584, line: 746, baseType: !1103, size: 320)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !584, line: 459, size: 320, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1103, file: !584, line: 461, baseType: !1019, size: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1103, file: !584, line: 464, baseType: !690, size: 64, offset: 256)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1016, file: !584, line: 747, baseType: !1108, size: 768)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !584, line: 469, size: 768, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1108, file: !584, line: 471, baseType: !1019, size: 256)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1108, file: !584, line: 474, baseType: !7, size: 32, offset: 256)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1108, file: !584, line: 475, baseType: !7, size: 32, offset: 288)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1108, file: !584, line: 478, baseType: !690, size: 64, offset: 320)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1108, file: !584, line: 481, baseType: !1115, size: 384, offset: 384)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 384, elements: !789)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !318, line: 1917, size: 384, elements: !1117)
!1117 = !{!1118, !1119, !1120}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1116, file: !318, line: 1920, baseType: !1055, size: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1116, file: !318, line: 1921, baseType: !690, size: 64, offset: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1116, file: !318, line: 1922, baseType: !815, size: 32, offset: 320)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1016, file: !584, line: 748, baseType: !1122, size: 320)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !584, line: 487, size: 320, elements: !1123)
!1123 = !{!1124, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1122, file: !584, line: 490, baseType: !1019, size: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1122, file: !584, line: 494, baseType: !671, size: 32, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1016, file: !584, line: 749, baseType: !1127, size: 384)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !584, line: 500, size: 384, elements: !1128)
!1128 = !{!1129, !1130, !1131}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1127, file: !584, line: 502, baseType: !1019, size: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1127, file: !584, line: 506, baseType: !1004, size: 64, offset: 256)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1127, file: !584, line: 510, baseType: !1004, size: 64, offset: 320)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1016, file: !584, line: 750, baseType: !1133, size: 320)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !584, line: 529, size: 320, elements: !1134)
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1133, file: !584, line: 531, baseType: !1019, size: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1133, file: !584, line: 540, baseType: !1004, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1016, file: !584, line: 751, baseType: !1138, size: 704)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !584, line: 546, size: 704, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1138, file: !584, line: 549, baseType: !1068, size: 512)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1138, file: !584, line: 553, baseType: !676, size: 64, offset: 512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1138, file: !584, line: 557, baseType: !670, size: 8, offset: 576)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1138, file: !584, line: 558, baseType: !670, size: 8, offset: 584)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1138, file: !584, line: 559, baseType: !670, size: 8, offset: 592)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1138, file: !584, line: 560, baseType: !670, size: 8, offset: 600)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1138, file: !584, line: 566, baseType: !689, size: 64, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1016, file: !584, line: 752, baseType: !1148, size: 384)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !584, line: 571, size: 384, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1148, file: !584, line: 573, baseType: !1079, size: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1148, file: !584, line: 577, baseType: !690, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1016, file: !584, line: 753, baseType: !1153, size: 576)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !584, line: 600, size: 576, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1160, !1169}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1153, file: !584, line: 602, baseType: !1079, size: 320)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1153, file: !584, line: 605, baseType: !690, size: 64, offset: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1153, file: !584, line: 609, baseType: !1158, size: 64, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1159, line: 46, baseType: !744)
!1159 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1153, file: !584, line: 612, baseType: !1161, size: 64, offset: 448)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !584, line: 581, size: 320, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1162, file: !584, line: 583, baseType: !317, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1162, file: !584, line: 586, baseType: !690, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1162, file: !584, line: 589, baseType: !690, size: 64, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1162, file: !584, line: 592, baseType: !690, size: 64, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1162, file: !584, line: 595, baseType: !690, size: 64, offset: 256)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1153, file: !584, line: 616, baseType: !1004, size: 64, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1016, file: !584, line: 754, baseType: !1171, size: 512)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !584, line: 622, size: 512, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1171, file: !584, line: 624, baseType: !1079, size: 320)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1171, file: !584, line: 628, baseType: !690, size: 64, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1171, file: !584, line: 632, baseType: !690, size: 64, offset: 384)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1171, file: !584, line: 636, baseType: !690, size: 64, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1016, file: !584, line: 755, baseType: !1178, size: 704)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !584, line: 642, size: 704, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1178, file: !584, line: 644, baseType: !1171, size: 512)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1178, file: !584, line: 648, baseType: !690, size: 64, offset: 512)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1178, file: !584, line: 652, baseType: !690, size: 64, offset: 576)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1178, file: !584, line: 653, baseType: !690, size: 64, offset: 640)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1016, file: !584, line: 756, baseType: !1185, size: 448)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !584, line: 663, size: 448, elements: !1186)
!1186 = !{!1187, !1188, !1189}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1185, file: !584, line: 665, baseType: !1079, size: 320)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1185, file: !584, line: 668, baseType: !690, size: 64, offset: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1185, file: !584, line: 673, baseType: !690, size: 64, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1016, file: !584, line: 757, baseType: !1191, size: 384)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !584, line: 694, size: 384, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1191, file: !584, line: 696, baseType: !1079, size: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1191, file: !584, line: 699, baseType: !690, size: 64, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1016, file: !584, line: 758, baseType: !1196, size: 384)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !584, line: 681, size: 384, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1196, file: !584, line: 683, baseType: !1019, size: 256)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1196, file: !584, line: 686, baseType: !690, size: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1196, file: !584, line: 689, baseType: !690, size: 64, offset: 320)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1016, file: !584, line: 759, baseType: !1202, size: 384)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !584, line: 707, size: 384, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1202, file: !584, line: 709, baseType: !1019, size: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1202, file: !584, line: 712, baseType: !690, size: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1202, file: !584, line: 712, baseType: !690, size: 64, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1016, file: !584, line: 760, baseType: !1208, size: 320)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !584, line: 718, size: 320, elements: !1209)
!1209 = !{!1210, !1211}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1208, file: !584, line: 720, baseType: !1019, size: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1208, file: !584, line: 723, baseType: !690, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1011, file: !584, line: 138, baseType: !1010, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1011, file: !584, line: 139, baseType: !1010, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1006, file: !584, line: 146, baseType: !1009, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1006, file: !584, line: 152, baseType: !1004, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1001, file: !513, line: 130, baseType: !865, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !996, file: !513, line: 134, baseType: !675, size: 64, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !996, file: !513, line: 137, baseType: !690, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !996, file: !513, line: 138, baseType: !815, size: 32, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !996, file: !513, line: 142, baseType: !7, size: 32, offset: 352)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !996, file: !513, line: 144, baseType: !671, size: 32, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !996, file: !513, line: 145, baseType: !671, size: 32, offset: 416)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !996, file: !513, line: 146, baseType: !1224, size: 64, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !513, line: 119, baseType: !746)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !979, file: !513, line: 220, baseType: !982, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !979, file: !513, line: 223, baseType: !675, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !979, file: !513, line: 226, baseType: !1228, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !513, line: 185, flags: DIFlagFwdDecl)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !979, file: !513, line: 229, baseType: !1231, size: 128, offset: 256)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1232, size: 128, elements: !933)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !513, line: 229, flags: DIFlagFwdDecl)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !979, file: !513, line: 232, baseType: !978, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !979, file: !513, line: 233, baseType: !978, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !979, file: !513, line: 238, baseType: !1237, size: 64, offset: 512)
!1237 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !513, line: 235, size: 64, elements: !1238)
!1238 = !{!1239, !1245}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1237, file: !513, line: 236, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !513, line: 273, size: 128, elements: !1242)
!1242 = !{!1243, !1244}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1241, file: !513, line: 275, baseType: !1004, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1241, file: !513, line: 278, baseType: !1004, size: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1237, file: !513, line: 237, baseType: !1246, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !513, line: 259, size: 320, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1247, file: !513, line: 261, baseType: !865, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1247, file: !513, line: 262, baseType: !865, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1247, file: !513, line: 266, baseType: !865, size: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1247, file: !513, line: 267, baseType: !865, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1247, file: !513, line: 270, baseType: !671, size: 32, offset: 256)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !979, file: !513, line: 241, baseType: !1224, size: 64, offset: 576)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !979, file: !513, line: 244, baseType: !671, size: 32, offset: 640)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !979, file: !513, line: 247, baseType: !671, size: 32, offset: 672)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !979, file: !513, line: 250, baseType: !671, size: 32, offset: 704)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !979, file: !513, line: 253, baseType: !671, size: 32, offset: 736)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !979, file: !513, line: 256, baseType: !671, size: 32, offset: 768)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !886, file: !868, line: 179, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !868, line: 150, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !868, line: 142, size: 320, elements: !1264)
!1264 = !{!1265, !1266, !1267, !1268, !1271, !1272}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1263, file: !868, line: 144, baseType: !690, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1263, file: !868, line: 145, baseType: !865, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1263, file: !868, line: 146, baseType: !865, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1263, file: !868, line: 147, baseType: !1269, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1270, line: 31, baseType: !671)
!1270 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1263, file: !868, line: 148, baseType: !7, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1263, file: !868, line: 149, baseType: !670, size: 8, offset: 256)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !886, file: !868, line: 180, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !868, line: 162, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !868, line: 159, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1276, file: !868, line: 160, baseType: !690, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1276, file: !868, line: 161, baseType: !746, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !886, file: !868, line: 181, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !868, line: 181, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !881, file: !868, line: 317, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !746, size: 64, elements: !789)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !881, file: !868, line: 318, baseType: !1286, size: 320)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !868, line: 188, size: 320, elements: !1287)
!1287 = !{!1288, !1290, !1313}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1286, file: !868, line: 190, baseType: !1289, size: 192)
!1289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 192, elements: !764)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1286, file: !868, line: 193, baseType: !1291, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !868, line: 206, size: 320, elements: !1293)
!1293 = !{!1294, !1298, !1299, !1300, !1312}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1292, file: !868, line: 208, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !691, line: 62, baseType: !1297)
!1297 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !691, line: 61, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1292, file: !868, line: 211, baseType: !7, size: 32, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1292, file: !868, line: 214, baseType: !746, size: 64, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1292, file: !868, line: 224, baseType: !1301, size: 64, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !868, line: 202, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !868, line: 202, size: 128, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1303, file: !868, line: 202, baseType: !1306, size: 128)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !868, line: 200, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !868, line: 200, size: 128, elements: !1308)
!1308 = !{!1309, !1310, !1311}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1307, file: !868, line: 200, baseType: !7, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1307, file: !868, line: 200, baseType: !7, size: 32, offset: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1307, file: !868, line: 200, baseType: !899, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1292, file: !868, line: 234, baseType: !1301, size: 64, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1286, file: !868, line: 197, baseType: !746, size: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !881, file: !868, line: 319, baseType: !753, size: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !881, file: !868, line: 320, baseType: !772, size: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !693, file: !318, line: 3384, baseType: !1317, size: 1472)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !318, line: 3114, size: 1472, elements: !1318)
!1318 = !{!1319, !1340, !1341, !1342, !1343}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1317, file: !318, line: 3115, baseType: !1320, size: 1216)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !318, line: 2984, size: 1216, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1320, file: !318, line: 2985, baseType: !861, size: 960)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1320, file: !318, line: 2986, baseType: !690, size: 64, offset: 960)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1320, file: !318, line: 2987, baseType: !690, size: 64, offset: 1024)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1320, file: !318, line: 2988, baseType: !690, size: 64, offset: 1088)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1320, file: !318, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1320, file: !318, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1320, file: !318, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1320, file: !318, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1320, file: !318, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1320, file: !318, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1320, file: !318, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1320, file: !318, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1320, file: !318, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1320, file: !318, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1320, file: !318, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1320, file: !318, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1320, file: !318, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1320, file: !318, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1317, file: !318, line: 3117, baseType: !690, size: 64, offset: 1216)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1317, file: !318, line: 3119, baseType: !690, size: 64, offset: 1280)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1317, file: !318, line: 3121, baseType: !690, size: 64, offset: 1344)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1317, file: !318, line: 3123, baseType: !690, size: 64, offset: 1408)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !693, file: !318, line: 3385, baseType: !1345, size: 1088)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !318, line: 2874, size: 1088, elements: !1346)
!1346 = !{!1347, !1348, !1349}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1345, file: !318, line: 2875, baseType: !861, size: 960)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1345, file: !318, line: 2876, baseType: !865, size: 64, offset: 960)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1345, file: !318, line: 2877, baseType: !1350, size: 64, offset: 1024)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1352, line: 172, size: 128, elements: !1353)
!1352 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1353 = !{!1354, !1355, !1356, !1357, !1358, !1359, !1360}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1351, file: !1352, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1351, file: !1352, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1351, file: !1352, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1351, file: !1352, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1351, file: !1352, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1351, file: !1352, line: 195, baseType: !7, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1351, file: !1352, line: 199, baseType: !690, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !693, file: !318, line: 3386, baseType: !1320, size: 1216)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !693, file: !318, line: 3387, baseType: !1363, size: 1280)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !318, line: 3093, size: 1280, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1363, file: !318, line: 3094, baseType: !1320, size: 1216)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1363, file: !318, line: 3095, baseType: !1350, size: 64, offset: 1216)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !693, file: !318, line: 3388, baseType: !1368, size: 1216)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !318, line: 2824, size: 1216, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1368, file: !318, line: 2825, baseType: !823, size: 896)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1368, file: !318, line: 2827, baseType: !690, size: 64, offset: 896)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1368, file: !318, line: 2828, baseType: !690, size: 64, offset: 960)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1368, file: !318, line: 2829, baseType: !690, size: 64, offset: 1024)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1368, file: !318, line: 2830, baseType: !690, size: 64, offset: 1088)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1368, file: !318, line: 2831, baseType: !690, size: 64, offset: 1152)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !693, file: !318, line: 3389, baseType: !1377, size: 1024)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !318, line: 2850, size: 1024, elements: !1378)
!1378 = !{!1379, !1380, !1381}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1377, file: !318, line: 2851, baseType: !861, size: 960)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1377, file: !318, line: 2852, baseType: !671, size: 32, offset: 960)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1377, file: !318, line: 2853, baseType: !671, size: 32, offset: 992)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !693, file: !318, line: 3390, baseType: !1383, size: 1024)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !318, line: 2857, size: 1024, elements: !1384)
!1384 = !{!1385, !1386}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !318, line: 2858, baseType: !861, size: 960)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1383, file: !318, line: 2859, baseType: !1350, size: 64, offset: 960)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !693, file: !318, line: 3391, baseType: !1388, size: 960)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !318, line: 2862, size: 960, elements: !1389)
!1389 = !{!1390}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1388, file: !318, line: 2863, baseType: !861, size: 960)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !693, file: !318, line: 3392, baseType: !1392, size: 1472)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !318, line: 3304, size: 1472, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1392, file: !318, line: 3305, baseType: !1317, size: 1472)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !693, file: !318, line: 3393, baseType: !1396, size: 1792)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !318, line: 3248, size: 1792, elements: !1397)
!1397 = !{!1398, !1399, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !318, line: 3249, baseType: !1317, size: 1472)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1396, file: !318, line: 3251, baseType: !1400, size: 64, offset: 1472)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1402, line: 463, size: 1152, elements: !1403)
!1402 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1403 = !{!1404, !1407, !1438, !1439, !1548, !1551, !1552, !1553, !1554, !1555, !1556, !1580, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1401, file: !1402, line: 464, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1402, line: 464, flags: DIFlagFwdDecl)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1401, file: !1402, line: 467, baseType: !1408, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !513, line: 374, size: 640, elements: !1410)
!1410 = !{!1411, !1413, !1414, !1427, !1428, !1429, !1430, !1431, !1432, !1434, !1436, !1437}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1409, file: !513, line: 377, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !691, line: 111, baseType: !978)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1409, file: !513, line: 378, baseType: !1412, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1409, file: !513, line: 381, baseType: !1415, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !513, line: 282, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !513, line: 282, size: 128, elements: !1418)
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1417, file: !513, line: 282, baseType: !1420, size: 128)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !513, line: 281, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !513, line: 281, size: 128, elements: !1422)
!1422 = !{!1423, !1424, !1425}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1421, file: !513, line: 281, baseType: !7, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1421, file: !513, line: 281, baseType: !7, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1421, file: !513, line: 281, baseType: !1426, size: 64, offset: 64)
!1426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 64, elements: !789)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1409, file: !513, line: 384, baseType: !671, size: 32, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1409, file: !513, line: 387, baseType: !671, size: 32, offset: 224)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1409, file: !513, line: 390, baseType: !671, size: 32, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1409, file: !513, line: 394, baseType: !1415, size: 64, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1409, file: !513, line: 396, baseType: !512, size: 32, offset: 384)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1409, file: !513, line: 399, baseType: !1433, size: 64, offset: 416)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !933)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1409, file: !513, line: 402, baseType: !1435, size: 64, offset: 480)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !933)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1409, file: !513, line: 406, baseType: !671, size: 32, offset: 544)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1409, file: !513, line: 409, baseType: !671, size: 32, offset: 576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1401, file: !1402, line: 470, baseType: !1005, size: 64, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1401, file: !1402, line: 473, baseType: !1440, size: 64, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1352, line: 39, size: 1152, elements: !1442)
!1442 = !{!1443, !1493, !1506, !1512, !1513, !1525, !1526, !1530, !1531, !1532, !1533, !1534}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1441, file: !1352, line: 41, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1445, line: 144, baseType: !1446)
!1445 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1445, line: 100, size: 896, elements: !1448)
!1448 = !{!1449, !1457, !1462, !1467, !1469, !1470, !1471, !1472, !1473, !1474, !1479, !1481, !1482, !1487, !1492}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1447, file: !1445, line: 102, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1445, line: 52, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1445, line: 47, baseType: !7)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1447, file: !1445, line: 105, baseType: !1458, size: 64, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1445, line: 59, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!671, !1455, !1455}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1447, file: !1445, line: 108, baseType: !1463, size: 64, offset: 128)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1445, line: 63, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !675}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1447, file: !1445, line: 111, baseType: !1468, size: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1447, file: !1445, line: 114, baseType: !1158, size: 64, offset: 256)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1447, file: !1445, line: 117, baseType: !1158, size: 64, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1447, file: !1445, line: 120, baseType: !1158, size: 64, offset: 384)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1447, file: !1445, line: 124, baseType: !7, size: 32, offset: 448)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1447, file: !1445, line: 128, baseType: !7, size: 32, offset: 480)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1447, file: !1445, line: 131, baseType: !1475, size: 64, offset: 512)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1445, line: 75, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!675, !1158, !1158}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1447, file: !1445, line: 132, baseType: !1480, size: 64, offset: 576)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1445, line: 78, baseType: !1464)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1447, file: !1445, line: 135, baseType: !675, size: 64, offset: 640)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1447, file: !1445, line: 136, baseType: !1483, size: 64, offset: 704)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1445, line: 82, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!675, !675, !1158, !1158}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1447, file: !1445, line: 137, baseType: !1488, size: 64, offset: 768)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1445, line: 83, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{null, !675, !675}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1447, file: !1445, line: 141, baseType: !7, size: 32, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1441, file: !1352, line: 48, baseType: !1494, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !584, line: 35, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !584, line: 35, size: 128, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1496, file: !584, line: 35, baseType: !1499, size: 128)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !584, line: 33, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !584, line: 33, size: 128, elements: !1501)
!1501 = !{!1502, !1503, !1504}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1500, file: !584, line: 33, baseType: !7, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1500, file: !584, line: 33, baseType: !7, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1500, file: !584, line: 33, baseType: !1505, size: 64, offset: 64)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 64, elements: !789)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1441, file: !1352, line: 51, baseType: !1507, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !318, line: 183, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !318, line: 183, size: 128, elements: !1510)
!1510 = !{!1511}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1509, file: !318, line: 183, baseType: !683, size: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1441, file: !1352, line: 54, baseType: !690, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1441, file: !1352, line: 57, baseType: !1514, size: 128, offset: 256)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1515, line: 31, size: 128, elements: !1516)
!1515 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1514, file: !1515, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1514, file: !1515, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1514, file: !1515, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1514, file: !1515, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1514, file: !1515, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1514, file: !1515, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1514, file: !1515, line: 56, baseType: !1524, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !691, line: 47, baseType: !917)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1441, file: !1352, line: 60, baseType: !1514, size: 128, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1441, file: !1352, line: 64, baseType: !1527, size: 64, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1529, line: 33, flags: DIFlagFwdDecl)
!1529 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1441, file: !1352, line: 67, baseType: !690, size: 64, offset: 576)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1441, file: !1352, line: 73, baseType: !1444, size: 64, offset: 640)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1441, file: !1352, line: 77, baseType: !1524, size: 64, offset: 704)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1441, file: !1352, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1441, file: !1352, line: 82, baseType: !1535, size: 320, offset: 832)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !662, line: 62, size: 320, elements: !1536)
!1536 = !{!1537, !1543, !1544, !1545, !1546, !1547}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1535, file: !662, line: 63, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !662, line: 56, size: 128, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1539, file: !662, line: 57, baseType: !1538, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1539, file: !662, line: 58, baseType: !788, size: 8, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1535, file: !662, line: 64, baseType: !7, size: 32, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1535, file: !662, line: 66, baseType: !7, size: 32, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1535, file: !662, line: 68, baseType: !670, size: 8, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1535, file: !662, line: 70, baseType: !1043, size: 64, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1535, file: !662, line: 71, baseType: !1050, size: 64, offset: 256)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1401, file: !1402, line: 476, baseType: !1549, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1402, line: 476, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1401, file: !1402, line: 479, baseType: !1444, size: 64, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1401, file: !1402, line: 484, baseType: !690, size: 64, offset: 384)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1401, file: !1402, line: 488, baseType: !690, size: 64, offset: 448)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1401, file: !1402, line: 493, baseType: !690, size: 64, offset: 512)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1401, file: !1402, line: 496, baseType: !690, size: 64, offset: 576)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1401, file: !1402, line: 501, baseType: !1557, size: 64, offset: 640)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !524, line: 2355, size: 576, elements: !1559)
!1559 = !{!1560, !1563, !1564, !1565, !1566, !1568, !1569, !1574, !1575, !1576, !1577, !1578, !1579}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1558, file: !524, line: 2356, baseType: !1561, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !524, line: 2356, flags: DIFlagFwdDecl)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1558, file: !524, line: 2357, baseType: !676, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1558, file: !524, line: 2358, baseType: !671, size: 32, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1558, file: !524, line: 2359, baseType: !671, size: 32, offset: 160)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1558, file: !524, line: 2360, baseType: !1567, size: 128, offset: 192)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 128, elements: !957)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1558, file: !524, line: 2364, baseType: !671, size: 32, offset: 320)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1558, file: !524, line: 2367, baseType: !1570, size: 128, offset: 384)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !524, line: 2349, size: 128, elements: !1571)
!1571 = !{!1572, !1573}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1570, file: !524, line: 2351, baseType: !865, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1570, file: !524, line: 2352, baseType: !746, size: 64, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1558, file: !524, line: 2371, baseType: !523, size: 32, offset: 512)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1558, file: !524, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1558, file: !524, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1558, file: !524, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1558, file: !524, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1558, file: !524, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1401, file: !1402, line: 504, baseType: !1581, size: 64, offset: 704)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1402, line: 504, flags: DIFlagFwdDecl)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1401, file: !1402, line: 507, baseType: !1444, size: 64, offset: 768)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1401, file: !1402, line: 510, baseType: !671, size: 32, offset: 832)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1401, file: !1402, line: 513, baseType: !671, size: 32, offset: 864)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1401, file: !1402, line: 516, baseType: !815, size: 32, offset: 896)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1401, file: !1402, line: 519, baseType: !815, size: 32, offset: 928)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1401, file: !1402, line: 522, baseType: !7, size: 32, offset: 960)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1401, file: !1402, line: 523, baseType: !7, size: 32, offset: 992)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1401, file: !1402, line: 528, baseType: !676, size: 64, offset: 1024)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1401, file: !1402, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1401, file: !1402, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1401, file: !1402, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1401, file: !1402, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1401, file: !1402, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1401, file: !1402, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1401, file: !1402, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1401, file: !1402, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1401, file: !1402, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1401, file: !1402, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1401, file: !1402, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1401, file: !1402, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1401, file: !1402, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1401, file: !1402, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1401, file: !1402, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1401, file: !1402, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1396, file: !318, line: 3254, baseType: !690, size: 64, offset: 1536)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1396, file: !318, line: 3257, baseType: !690, size: 64, offset: 1600)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1396, file: !318, line: 3258, baseType: !690, size: 64, offset: 1664)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1396, file: !318, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1396, file: !318, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1396, file: !318, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1396, file: !318, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1396, file: !318, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1396, file: !318, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1396, file: !318, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1396, file: !318, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1396, file: !318, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1396, file: !318, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1396, file: !318, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1396, file: !318, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1396, file: !318, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1396, file: !318, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1396, file: !318, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1396, file: !318, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1396, file: !318, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1396, file: !318, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !693, file: !318, line: 3394, baseType: !1629, size: 1344)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !318, line: 2279, size: 1344, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1629, file: !318, line: 2280, baseType: !729, size: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1629, file: !318, line: 2281, baseType: !690, size: 64, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1629, file: !318, line: 2282, baseType: !690, size: 64, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1629, file: !318, line: 2283, baseType: !690, size: 64, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1629, file: !318, line: 2284, baseType: !690, size: 64, offset: 384)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1629, file: !318, line: 2285, baseType: !7, size: 32, offset: 448)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1629, file: !318, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1629, file: !318, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1629, file: !318, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1629, file: !318, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1629, file: !318, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1629, file: !318, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1629, file: !318, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1629, file: !318, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1629, file: !318, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1629, file: !318, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1629, file: !318, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1629, file: !318, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1629, file: !318, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1629, file: !318, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1629, file: !318, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1629, file: !318, line: 2305, baseType: !7, size: 32, offset: 512)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1629, file: !318, line: 2306, baseType: !1269, size: 32, offset: 544)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1629, file: !318, line: 2307, baseType: !690, size: 64, offset: 576)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1629, file: !318, line: 2308, baseType: !690, size: 64, offset: 640)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1629, file: !318, line: 2314, baseType: !1657, size: 64, offset: 704)
!1657 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !318, line: 2309, size: 64, elements: !1658)
!1658 = !{!1659, !1660, !1661}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1657, file: !318, line: 2310, baseType: !671, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1657, file: !318, line: 2311, baseType: !676, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1657, file: !318, line: 2312, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !318, line: 2277, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1629, file: !318, line: 2315, baseType: !690, size: 64, offset: 768)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1629, file: !318, line: 2316, baseType: !690, size: 64, offset: 832)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1629, file: !318, line: 2317, baseType: !690, size: 64, offset: 896)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1629, file: !318, line: 2318, baseType: !690, size: 64, offset: 960)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1629, file: !318, line: 2319, baseType: !690, size: 64, offset: 1024)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1629, file: !318, line: 2320, baseType: !690, size: 64, offset: 1088)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1629, file: !318, line: 2321, baseType: !690, size: 64, offset: 1152)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1629, file: !318, line: 2322, baseType: !690, size: 64, offset: 1216)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1629, file: !318, line: 2324, baseType: !1673, size: 64, offset: 1280)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !318, line: 2324, flags: DIFlagFwdDecl)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !693, file: !318, line: 3395, baseType: !1676, size: 320)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !318, line: 1469, size: 320, elements: !1677)
!1677 = !{!1678, !1679, !1680}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1676, file: !318, line: 1470, baseType: !729, size: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1676, file: !318, line: 1471, baseType: !690, size: 64, offset: 192)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1676, file: !318, line: 1472, baseType: !690, size: 64, offset: 256)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !693, file: !318, line: 3396, baseType: !1682, size: 320)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !318, line: 1482, size: 320, elements: !1683)
!1683 = !{!1684, !1685, !1686}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1682, file: !318, line: 1483, baseType: !729, size: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1682, file: !318, line: 1484, baseType: !671, size: 32, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1682, file: !318, line: 1485, baseType: !689, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !693, file: !318, line: 3397, baseType: !1688, size: 384)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !318, line: 1829, size: 384, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1688, file: !318, line: 1830, baseType: !729, size: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1688, file: !318, line: 1831, baseType: !815, size: 32, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1688, file: !318, line: 1832, baseType: !690, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1688, file: !318, line: 1835, baseType: !689, size: 64, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !693, file: !318, line: 3398, baseType: !1695, size: 704)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !318, line: 1898, size: 704, elements: !1696)
!1696 = !{!1697, !1698, !1699, !1700, !1701, !1706}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1695, file: !318, line: 1899, baseType: !729, size: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1695, file: !318, line: 1902, baseType: !690, size: 64, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1695, file: !318, line: 1905, baseType: !1014, size: 64, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1695, file: !318, line: 1908, baseType: !7, size: 32, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1695, file: !318, line: 1911, baseType: !1702, size: 64, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1352, line: 117, size: 128, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1703, file: !1352, line: 120, baseType: !1514, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1695, file: !318, line: 1914, baseType: !1055, size: 256, offset: 448)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !693, file: !318, line: 3399, baseType: !1708, size: 704)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !318, line: 2008, size: 704, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1708, file: !318, line: 2009, baseType: !729, size: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1708, file: !318, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1708, file: !318, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1708, file: !318, line: 2014, baseType: !815, size: 32, offset: 224)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1708, file: !318, line: 2016, baseType: !690, size: 64, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1708, file: !318, line: 2017, baseType: !1507, size: 64, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1708, file: !318, line: 2019, baseType: !690, size: 64, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1708, file: !318, line: 2020, baseType: !690, size: 64, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1708, file: !318, line: 2021, baseType: !690, size: 64, offset: 512)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1708, file: !318, line: 2022, baseType: !690, size: 64, offset: 576)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1708, file: !318, line: 2023, baseType: !690, size: 64, offset: 640)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !693, file: !318, line: 3400, baseType: !1722, size: 832)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !318, line: 2430, size: 832, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1722, file: !318, line: 2431, baseType: !729, size: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1722, file: !318, line: 2433, baseType: !690, size: 64, offset: 192)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1722, file: !318, line: 2434, baseType: !690, size: 64, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1722, file: !318, line: 2435, baseType: !690, size: 64, offset: 320)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1722, file: !318, line: 2436, baseType: !690, size: 64, offset: 384)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1722, file: !318, line: 2437, baseType: !1507, size: 64, offset: 448)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1722, file: !318, line: 2438, baseType: !690, size: 64, offset: 512)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1722, file: !318, line: 2440, baseType: !690, size: 64, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1722, file: !318, line: 2441, baseType: !690, size: 64, offset: 640)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1722, file: !318, line: 2443, baseType: !1734, size: 128, offset: 704)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !318, line: 182, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !318, line: 182, size: 128, elements: !1736)
!1736 = !{!1737}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1735, file: !318, line: 182, baseType: !683, size: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !693, file: !318, line: 3401, baseType: !1739, size: 320)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !318, line: 3327, size: 320, elements: !1740)
!1740 = !{!1741, !1742, !1749}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1739, file: !318, line: 3329, baseType: !729, size: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1739, file: !318, line: 3330, baseType: !1743, size: 64, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !318, line: 3320, size: 192, elements: !1745)
!1745 = !{!1746, !1747, !1748}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1744, file: !318, line: 3322, baseType: !1743, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1744, file: !318, line: 3323, baseType: !1743, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1744, file: !318, line: 3324, baseType: !690, size: 64, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1739, file: !318, line: 3331, baseType: !1743, size: 64, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !693, file: !318, line: 3402, baseType: !1751, size: 256)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !318, line: 1540, size: 256, elements: !1752)
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1751, file: !318, line: 1541, baseType: !729, size: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1751, file: !318, line: 1542, baseType: !1755, size: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !318, line: 1538, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !318, line: 1538, size: 192, elements: !1758)
!1758 = !{!1759}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1757, file: !318, line: 1538, baseType: !1760, size: 192)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !318, line: 1537, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !318, line: 1537, size: 192, elements: !1762)
!1762 = !{!1763, !1764, !1765}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1761, file: !318, line: 1537, baseType: !7, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1761, file: !318, line: 1537, baseType: !7, size: 32, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1761, file: !318, line: 1537, baseType: !1766, size: 128, offset: 64)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 128, elements: !789)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !318, line: 1535, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !318, line: 1532, size: 128, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1768, file: !318, line: 1533, baseType: !690, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1768, file: !318, line: 1534, baseType: !690, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !693, file: !318, line: 3403, baseType: !1773, size: 512)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !318, line: 1938, size: 512, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1784, !1785, !1786}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1773, file: !318, line: 1939, baseType: !729, size: 192)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1773, file: !318, line: 1940, baseType: !815, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1773, file: !318, line: 1941, baseType: !528, size: 32, offset: 224)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1773, file: !318, line: 1946, baseType: !1779, size: 32, offset: 256)
!1779 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !318, line: 1942, size: 32, elements: !1780)
!1780 = !{!1781, !1782, !1783}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1779, file: !318, line: 1943, baseType: !546, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1779, file: !318, line: 1944, baseType: !553, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1779, file: !318, line: 1945, baseType: !317, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1773, file: !318, line: 1950, baseType: !1004, size: 64, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1773, file: !318, line: 1951, baseType: !1004, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1773, file: !318, line: 1953, baseType: !689, size: 64, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !693, file: !318, line: 3404, baseType: !1788, size: 1664)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !318, line: 3337, size: 1664, elements: !1789)
!1789 = !{!1790, !1791}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1788, file: !318, line: 3338, baseType: !729, size: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1788, file: !318, line: 3341, baseType: !1792, size: 1472, offset: 192)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1793, line: 410, size: 1472, elements: !1794)
!1793 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1792, file: !1793, line: 412, baseType: !671, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1792, file: !1793, line: 413, baseType: !671, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1792, file: !1793, line: 414, baseType: !671, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1792, file: !1793, line: 415, baseType: !671, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1792, file: !1793, line: 416, baseType: !671, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1792, file: !1793, line: 417, baseType: !671, size: 32, offset: 160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1792, file: !1793, line: 418, baseType: !670, size: 8, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1792, file: !1793, line: 419, baseType: !670, size: 8, offset: 200)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1792, file: !1793, line: 420, baseType: !1804, size: 8, offset: 208)
!1804 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1792, file: !1793, line: 421, baseType: !1804, size: 8, offset: 216)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1792, file: !1793, line: 422, baseType: !1804, size: 8, offset: 224)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1792, file: !1793, line: 423, baseType: !1804, size: 8, offset: 232)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1792, file: !1793, line: 424, baseType: !1804, size: 8, offset: 240)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1792, file: !1793, line: 425, baseType: !1804, size: 8, offset: 248)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1792, file: !1793, line: 426, baseType: !1804, size: 8, offset: 256)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1792, file: !1793, line: 427, baseType: !1804, size: 8, offset: 264)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1792, file: !1793, line: 428, baseType: !1804, size: 8, offset: 272)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1792, file: !1793, line: 429, baseType: !1804, size: 8, offset: 280)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1792, file: !1793, line: 430, baseType: !1804, size: 8, offset: 288)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1792, file: !1793, line: 431, baseType: !1804, size: 8, offset: 296)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1792, file: !1793, line: 432, baseType: !1804, size: 8, offset: 304)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1792, file: !1793, line: 433, baseType: !1804, size: 8, offset: 312)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1792, file: !1793, line: 434, baseType: !1804, size: 8, offset: 320)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1792, file: !1793, line: 435, baseType: !1804, size: 8, offset: 328)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1792, file: !1793, line: 436, baseType: !1804, size: 8, offset: 336)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1792, file: !1793, line: 437, baseType: !1804, size: 8, offset: 344)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1792, file: !1793, line: 438, baseType: !1804, size: 8, offset: 352)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1792, file: !1793, line: 439, baseType: !1804, size: 8, offset: 360)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1792, file: !1793, line: 440, baseType: !1804, size: 8, offset: 368)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1792, file: !1793, line: 441, baseType: !1804, size: 8, offset: 376)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1792, file: !1793, line: 442, baseType: !1804, size: 8, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1792, file: !1793, line: 443, baseType: !1804, size: 8, offset: 392)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1792, file: !1793, line: 444, baseType: !1804, size: 8, offset: 400)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1792, file: !1793, line: 445, baseType: !1804, size: 8, offset: 408)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1792, file: !1793, line: 446, baseType: !1804, size: 8, offset: 416)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1792, file: !1793, line: 447, baseType: !1804, size: 8, offset: 424)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1792, file: !1793, line: 448, baseType: !1804, size: 8, offset: 432)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1792, file: !1793, line: 449, baseType: !1804, size: 8, offset: 440)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1792, file: !1793, line: 450, baseType: !1804, size: 8, offset: 448)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1792, file: !1793, line: 451, baseType: !1804, size: 8, offset: 456)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1792, file: !1793, line: 452, baseType: !1804, size: 8, offset: 464)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1792, file: !1793, line: 453, baseType: !1804, size: 8, offset: 472)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1792, file: !1793, line: 454, baseType: !1804, size: 8, offset: 480)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1792, file: !1793, line: 455, baseType: !1804, size: 8, offset: 488)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1792, file: !1793, line: 456, baseType: !1804, size: 8, offset: 496)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1792, file: !1793, line: 457, baseType: !1804, size: 8, offset: 504)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1792, file: !1793, line: 458, baseType: !1804, size: 8, offset: 512)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1792, file: !1793, line: 459, baseType: !1804, size: 8, offset: 520)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1792, file: !1793, line: 460, baseType: !1804, size: 8, offset: 528)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1792, file: !1793, line: 461, baseType: !1804, size: 8, offset: 536)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1792, file: !1793, line: 462, baseType: !1804, size: 8, offset: 544)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1792, file: !1793, line: 463, baseType: !1804, size: 8, offset: 552)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1792, file: !1793, line: 464, baseType: !1804, size: 8, offset: 560)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1792, file: !1793, line: 465, baseType: !1804, size: 8, offset: 568)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1792, file: !1793, line: 466, baseType: !1804, size: 8, offset: 576)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1792, file: !1793, line: 467, baseType: !1804, size: 8, offset: 584)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1792, file: !1793, line: 468, baseType: !1804, size: 8, offset: 592)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1792, file: !1793, line: 469, baseType: !1804, size: 8, offset: 600)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1792, file: !1793, line: 470, baseType: !1804, size: 8, offset: 608)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1792, file: !1793, line: 471, baseType: !1804, size: 8, offset: 616)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1792, file: !1793, line: 472, baseType: !1804, size: 8, offset: 624)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1792, file: !1793, line: 473, baseType: !1804, size: 8, offset: 632)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1792, file: !1793, line: 474, baseType: !1804, size: 8, offset: 640)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1792, file: !1793, line: 475, baseType: !1804, size: 8, offset: 648)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1792, file: !1793, line: 476, baseType: !1804, size: 8, offset: 656)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1792, file: !1793, line: 477, baseType: !1804, size: 8, offset: 664)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1792, file: !1793, line: 478, baseType: !1804, size: 8, offset: 672)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1792, file: !1793, line: 479, baseType: !1804, size: 8, offset: 680)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1792, file: !1793, line: 480, baseType: !1804, size: 8, offset: 688)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1792, file: !1793, line: 481, baseType: !1804, size: 8, offset: 696)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1792, file: !1793, line: 482, baseType: !1804, size: 8, offset: 704)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1792, file: !1793, line: 483, baseType: !1804, size: 8, offset: 712)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1792, file: !1793, line: 484, baseType: !1804, size: 8, offset: 720)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1792, file: !1793, line: 485, baseType: !1804, size: 8, offset: 728)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1792, file: !1793, line: 486, baseType: !1804, size: 8, offset: 736)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1792, file: !1793, line: 487, baseType: !1804, size: 8, offset: 744)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1792, file: !1793, line: 488, baseType: !1804, size: 8, offset: 752)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1792, file: !1793, line: 489, baseType: !1804, size: 8, offset: 760)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1792, file: !1793, line: 490, baseType: !1804, size: 8, offset: 768)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1792, file: !1793, line: 491, baseType: !1804, size: 8, offset: 776)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1792, file: !1793, line: 492, baseType: !1804, size: 8, offset: 784)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1792, file: !1793, line: 493, baseType: !1804, size: 8, offset: 792)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1792, file: !1793, line: 494, baseType: !1804, size: 8, offset: 800)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1792, file: !1793, line: 495, baseType: !1804, size: 8, offset: 808)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1792, file: !1793, line: 496, baseType: !1804, size: 8, offset: 816)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1792, file: !1793, line: 497, baseType: !1804, size: 8, offset: 824)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1792, file: !1793, line: 498, baseType: !1804, size: 8, offset: 832)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1792, file: !1793, line: 499, baseType: !1804, size: 8, offset: 840)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1792, file: !1793, line: 500, baseType: !1804, size: 8, offset: 848)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1792, file: !1793, line: 501, baseType: !1804, size: 8, offset: 856)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1792, file: !1793, line: 502, baseType: !1804, size: 8, offset: 864)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1792, file: !1793, line: 503, baseType: !1804, size: 8, offset: 872)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1792, file: !1793, line: 504, baseType: !1804, size: 8, offset: 880)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1792, file: !1793, line: 505, baseType: !1804, size: 8, offset: 888)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1792, file: !1793, line: 506, baseType: !1804, size: 8, offset: 896)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1792, file: !1793, line: 507, baseType: !1804, size: 8, offset: 904)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1792, file: !1793, line: 508, baseType: !1804, size: 8, offset: 912)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1792, file: !1793, line: 509, baseType: !1804, size: 8, offset: 920)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1792, file: !1793, line: 510, baseType: !1804, size: 8, offset: 928)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1792, file: !1793, line: 511, baseType: !1804, size: 8, offset: 936)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1792, file: !1793, line: 512, baseType: !1804, size: 8, offset: 944)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1792, file: !1793, line: 513, baseType: !1804, size: 8, offset: 952)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1792, file: !1793, line: 514, baseType: !1804, size: 8, offset: 960)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1792, file: !1793, line: 515, baseType: !1804, size: 8, offset: 968)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1792, file: !1793, line: 516, baseType: !1804, size: 8, offset: 976)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1792, file: !1793, line: 517, baseType: !1804, size: 8, offset: 984)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1792, file: !1793, line: 518, baseType: !1804, size: 8, offset: 992)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1792, file: !1793, line: 519, baseType: !1804, size: 8, offset: 1000)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1792, file: !1793, line: 520, baseType: !1804, size: 8, offset: 1008)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1792, file: !1793, line: 521, baseType: !1804, size: 8, offset: 1016)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1792, file: !1793, line: 522, baseType: !1804, size: 8, offset: 1024)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1792, file: !1793, line: 523, baseType: !1804, size: 8, offset: 1032)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1792, file: !1793, line: 524, baseType: !1804, size: 8, offset: 1040)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1792, file: !1793, line: 525, baseType: !1804, size: 8, offset: 1048)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1792, file: !1793, line: 526, baseType: !1804, size: 8, offset: 1056)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1792, file: !1793, line: 527, baseType: !1804, size: 8, offset: 1064)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1792, file: !1793, line: 528, baseType: !1804, size: 8, offset: 1072)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1792, file: !1793, line: 529, baseType: !1804, size: 8, offset: 1080)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1792, file: !1793, line: 530, baseType: !1804, size: 8, offset: 1088)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1792, file: !1793, line: 531, baseType: !1804, size: 8, offset: 1096)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1792, file: !1793, line: 532, baseType: !1804, size: 8, offset: 1104)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1792, file: !1793, line: 533, baseType: !1804, size: 8, offset: 1112)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1792, file: !1793, line: 534, baseType: !1804, size: 8, offset: 1120)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1792, file: !1793, line: 535, baseType: !1804, size: 8, offset: 1128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1792, file: !1793, line: 536, baseType: !1804, size: 8, offset: 1136)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1792, file: !1793, line: 537, baseType: !1804, size: 8, offset: 1144)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1792, file: !1793, line: 538, baseType: !1804, size: 8, offset: 1152)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1792, file: !1793, line: 539, baseType: !1804, size: 8, offset: 1160)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1792, file: !1793, line: 540, baseType: !1804, size: 8, offset: 1168)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1792, file: !1793, line: 541, baseType: !1804, size: 8, offset: 1176)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1792, file: !1793, line: 542, baseType: !1804, size: 8, offset: 1184)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1792, file: !1793, line: 543, baseType: !1804, size: 8, offset: 1192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1792, file: !1793, line: 544, baseType: !1804, size: 8, offset: 1200)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1792, file: !1793, line: 545, baseType: !1804, size: 8, offset: 1208)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1792, file: !1793, line: 546, baseType: !1804, size: 8, offset: 1216)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1792, file: !1793, line: 547, baseType: !1804, size: 8, offset: 1224)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1792, file: !1793, line: 548, baseType: !1804, size: 8, offset: 1232)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1792, file: !1793, line: 549, baseType: !1804, size: 8, offset: 1240)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1792, file: !1793, line: 550, baseType: !1804, size: 8, offset: 1248)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1792, file: !1793, line: 551, baseType: !1804, size: 8, offset: 1256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1792, file: !1793, line: 552, baseType: !1804, size: 8, offset: 1264)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1792, file: !1793, line: 553, baseType: !1804, size: 8, offset: 1272)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1792, file: !1793, line: 554, baseType: !1804, size: 8, offset: 1280)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1792, file: !1793, line: 555, baseType: !1804, size: 8, offset: 1288)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1792, file: !1793, line: 556, baseType: !1804, size: 8, offset: 1296)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1792, file: !1793, line: 557, baseType: !1804, size: 8, offset: 1304)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1792, file: !1793, line: 558, baseType: !1804, size: 8, offset: 1312)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1792, file: !1793, line: 559, baseType: !1804, size: 8, offset: 1320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1792, file: !1793, line: 560, baseType: !1804, size: 8, offset: 1328)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1792, file: !1793, line: 561, baseType: !1804, size: 8, offset: 1336)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1792, file: !1793, line: 562, baseType: !1804, size: 8, offset: 1344)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1792, file: !1793, line: 563, baseType: !1804, size: 8, offset: 1352)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1792, file: !1793, line: 564, baseType: !1804, size: 8, offset: 1360)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1792, file: !1793, line: 565, baseType: !1804, size: 8, offset: 1368)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1792, file: !1793, line: 566, baseType: !1804, size: 8, offset: 1376)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1792, file: !1793, line: 567, baseType: !1804, size: 8, offset: 1384)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1792, file: !1793, line: 568, baseType: !1804, size: 8, offset: 1392)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1792, file: !1793, line: 569, baseType: !1804, size: 8, offset: 1400)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1792, file: !1793, line: 570, baseType: !1804, size: 8, offset: 1408)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1792, file: !1793, line: 571, baseType: !1804, size: 8, offset: 1416)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1792, file: !1793, line: 572, baseType: !1804, size: 8, offset: 1424)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1792, file: !1793, line: 573, baseType: !1804, size: 8, offset: 1432)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1792, file: !1793, line: 574, baseType: !1804, size: 8, offset: 1440)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !693, file: !318, line: 3405, baseType: !1960, size: 384)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !318, line: 3352, size: 384, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1960, file: !318, line: 3353, baseType: !729, size: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1960, file: !318, line: 3356, baseType: !1964, size: 192, offset: 192)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1793, line: 578, size: 192, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1964, file: !1793, line: 580, baseType: !671, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1964, file: !1793, line: 581, baseType: !671, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1964, file: !1793, line: 582, baseType: !671, size: 32, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1964, file: !1793, line: 583, baseType: !671, size: 32, offset: 96)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1964, file: !1793, line: 584, baseType: !670, size: 8, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1964, file: !1793, line: 585, baseType: !670, size: 8, offset: 136)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1964, file: !1793, line: 586, baseType: !670, size: 8, offset: 144)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1964, file: !1793, line: 587, baseType: !670, size: 8, offset: 152)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1964, file: !1793, line: 588, baseType: !670, size: 8, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1964, file: !1793, line: 589, baseType: !670, size: 8, offset: 168)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1964, file: !1793, line: 590, baseType: !670, size: 8, offset: 176)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_structure_heap", file: !3, line: 199, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_structure_heap", file: !3, line: 199, size: 512, elements: !1980)
!1980 = !{!1981}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1979, file: !3, line: 199, baseType: !1982, size: 512)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_structure_base", file: !3, line: 198, baseType: !1983)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_structure_base", file: !3, line: 198, size: 512, elements: !1984)
!1984 = !{!1985, !1986, !1987}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1983, file: !3, line: 198, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1983, file: !3, line: 198, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1983, file: !3, line: 198, baseType: !1988, size: 448, offset: 64)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1989, size: 448, elements: !789)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "structure", file: !3, line: 197, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_structure", file: !1991, line: 85, size: 448, elements: !1992)
!1991 = !DIFile(filename: "./ipa-struct-reorg.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1992 = !{!1993, !1994, !1995, !1996, !2005, !2006, !2022}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1990, file: !1991, line: 89, baseType: !690, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "num_fields", scope: !1990, file: !1991, line: 92, baseType: !671, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1990, file: !1991, line: 95, baseType: !1224, size: 64, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !1990, file: !1991, line: 98, baseType: !1997, size: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "field_entry", file: !1991, line: 61, size: 320, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1998, file: !1991, line: 64, baseType: !671, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1998, file: !1991, line: 66, baseType: !1224, size: 64, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1998, file: !1991, line: 67, baseType: !690, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "field_mapping", scope: !1998, file: !1991, line: 69, baseType: !690, size: 64, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "acc_sites", scope: !1998, file: !1991, line: 70, baseType: !1444, size: 64, offset: 256)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "accs", scope: !1990, file: !1991, line: 101, baseType: !1444, size: 64, offset: 256)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "struct_clustering", scope: !1990, file: !1991, line: 104, baseType: !2007, size: 64, offset: 320)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "field_cluster", file: !1991, line: 75, size: 128, elements: !2009)
!2009 = !{!2010, !2021}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "fields_in_cluster", scope: !2008, file: !1991, line: 79, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2012, line: 45, baseType: !2013)
!2012 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2012, line: 39, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2014, file: !2012, line: 41, baseType: !669, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2014, file: !2012, line: 42, baseType: !7, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2014, file: !2012, line: 43, baseType: !7, size: 32, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2014, file: !2012, line: 44, baseType: !2020, size: 64, offset: 128)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 64, elements: !789)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2008, file: !1991, line: 80, baseType: !2007, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "new_types", scope: !1990, file: !1991, line: 107, baseType: !678, size: 64, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "field_access_site", file: !1991, line: 36, size: 576, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2025, file: !1991, line: 39, baseType: !1014, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "comp_ref", scope: !2025, file: !1991, line: 40, baseType: !690, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2025, file: !1991, line: 41, baseType: !690, size: 64, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2025, file: !1991, line: 42, baseType: !690, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2025, file: !1991, line: 43, baseType: !690, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2025, file: !1991, line: 44, baseType: !690, size: 64, offset: 320)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2025, file: !1991, line: 45, baseType: !690, size: 64, offset: 384)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ref_def_stmt", scope: !2025, file: !1991, line: 46, baseType: !1014, size: 64, offset: 448)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "cast_stmt", scope: !2025, file: !1991, line: 47, baseType: !1014, size: 64, offset: 512)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !691, line: 60, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_site", file: !1991, line: 52, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2041, file: !1991, line: 55, baseType: !1014, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2041, file: !1991, line: 57, baseType: !678, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "fallocs_t", file: !3, line: 184, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "func_alloc_sites", file: !3, line: 177, size: 128, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2048, file: !3, line: 179, baseType: !690, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2048, file: !3, line: 181, baseType: !2052, size: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alloc_site_t_heap", file: !3, line: 174, baseType: !2054)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alloc_site_t_heap", file: !3, line: 174, size: 192, elements: !2055)
!2055 = !{!2056}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2054, file: !3, line: 174, baseType: !2057, size: 192)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alloc_site_t_base", file: !3, line: 173, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alloc_site_t_base", file: !3, line: 173, size: 192, elements: !2059)
!2059 = !{!2060, !2061, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2058, file: !3, line: 173, baseType: !7, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2058, file: !3, line: 173, baseType: !7, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2058, file: !3, line: 173, baseType: !2063, size: 128, offset: 64)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2064, size: 128, elements: !789)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_site_t", file: !3, line: 171, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_site", file: !3, line: 167, size: 128, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2065, file: !3, line: 169, baseType: !1014, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2065, file: !3, line: 170, baseType: !2069, size: 64, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "d_str", file: !1991, line: 110, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_fallocs_t", file: !3, line: 185, baseType: !2076)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !691, line: 59, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !662, line: 30, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !318, line: 1893, baseType: !1055)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_stmt_info", file: !584, line: 4652, size: 448, elements: !2086)
!2086 = !{!2087, !2094, !2095, !2098, !2099, !2100, !2101, !2102}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !2085, file: !584, line: 4655, baseType: !2088, size: 192)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !584, line: 265, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !584, line: 254, size: 192, elements: !2090)
!2090 = !{!2091, !2092, !2093}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2089, file: !584, line: 257, baseType: !1009, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2089, file: !584, line: 263, baseType: !1004, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2089, file: !584, line: 264, baseType: !1412, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2085, file: !584, line: 4659, baseType: !675, size: 64, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !2085, file: !584, line: 4664, baseType: !2096, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !318, line: 5199, flags: DIFlagFwdDecl)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "val_only", scope: !2085, file: !584, line: 4678, baseType: !670, size: 8, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "is_lhs", scope: !2085, file: !584, line: 4681, baseType: !670, size: 8, offset: 328)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2085, file: !584, line: 4685, baseType: !670, size: 8, offset: 336)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "want_locations", scope: !2085, file: !584, line: 4688, baseType: !670, size: 8, offset: 344)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !2085, file: !584, line: 4694, baseType: !690, size: 64, offset: 384)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exclude_data", file: !3, line: 846, size: 128, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !2104, file: !3, line: 848, baseType: !690, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2104, file: !3, line: 849, baseType: !2069, size: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "find_stmt_data", file: !3, line: 792, size: 128, elements: !2110)
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "found", scope: !2109, file: !3, line: 794, baseType: !670, size: 8)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2109, file: !3, line: 795, baseType: !1014, size: 64, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_new_var", file: !3, line: 164, baseType: !2114)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "new_var_data", file: !3, line: 156, size: 128, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "orig_var", scope: !2116, file: !3, line: 158, baseType: !690, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "new_vars", scope: !2116, file: !3, line: 160, baseType: !678, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "new_var", file: !3, line: 163, baseType: !2121)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_type_wrapper_t_heap", file: !3, line: 952, baseType: !2124)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_type_wrapper_t_heap", file: !3, line: 952, size: 192, elements: !2125)
!2125 = !{!2126}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2124, file: !3, line: 952, baseType: !2127, size: 192)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_type_wrapper_t_base", file: !3, line: 951, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_type_wrapper_t_base", file: !3, line: 951, size: 192, elements: !2129)
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2128, file: !3, line: 951, baseType: !7, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2128, file: !3, line: 951, baseType: !7, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2128, file: !3, line: 951, baseType: !2133, size: 128, offset: 64)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 128, elements: !789)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "type_wrapper_t", file: !3, line: 949, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "type_wrapper", file: !3, line: 942, size: 128, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "wrap", scope: !2135, file: !3, line: 945, baseType: !670, size: 8)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2135, file: !3, line: 948, baseType: !690, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "create_acc_data", file: !3, line: 1401, size: 192, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2141, file: !3, line: 1403, baseType: !1412, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2141, file: !3, line: 1404, baseType: !2069, size: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "field_index", scope: !2141, file: !3, line: 1405, baseType: !671, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ref_pos", file: !3, line: 882, size: 192, elements: !2148)
!2148 = !{!2149, !2150, !2151}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2147, file: !3, line: 884, baseType: !1048, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2147, file: !3, line: 885, baseType: !690, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2147, file: !3, line: 886, baseType: !690, size: 64, offset: 128)
!2152 = !{!0, !2153, !2181, !2183, !2185}
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "pass_ipa_struct_reorg", scope: !2, file: !3, line: 4045, type: !2155, isLocal: false, isDefinition: true)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_ipa_opt_pass", file: !6, line: 202, size: 640, elements: !2156)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2155, file: !6, line: 204, baseType: !2158, size: 640)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !6, line: 114, size: 640, elements: !2159)
!2159 = !{!2160, !2161, !2162, !2166, !2170, !2172, !2173, !2174, !2176, !2177, !2178, !2179, !2180}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2158, file: !6, line: 117, baseType: !5, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2158, file: !6, line: 121, baseType: !676, size: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2158, file: !6, line: 125, baseType: !2163, size: 64, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!670}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2158, file: !6, line: 130, baseType: !2167, size: 64, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!7}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2158, file: !6, line: 133, baseType: !2171, size: 64, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2158, file: !6, line: 136, baseType: !2171, size: 64, offset: 320)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2158, file: !6, line: 139, baseType: !671, size: 32, offset: 384)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2158, file: !6, line: 143, baseType: !2175, size: 32, offset: 416)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !14, line: 80, baseType: !13)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2158, file: !6, line: 146, baseType: !7, size: 32, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2158, file: !6, line: 147, baseType: !7, size: 32, offset: 480)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2158, file: !6, line: 148, baseType: !7, size: 32, offset: 512)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2158, file: !6, line: 151, baseType: !7, size: 32, offset: 544)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2158, file: !6, line: 152, baseType: !7, size: 32, offset: 576)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "new_global_vars", scope: !2, file: !3, line: 191, type: !1444, isLocal: false, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "new_local_vars", scope: !2, file: !3, line: 194, type: !1444, isLocal: false, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "structures", scope: !2, file: !3, line: 200, type: !1977, isLocal: false, isDefinition: true)
!2187 = !{i32 2, !"Dwarf Version", i32 4}
!2188 = !{i32 2, !"Debug Info Version", i32 3}
!2189 = !{i32 1, !"wchar_size", i32 4}
!2190 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2191 = distinct !DISubprogram(name: "vprintf", scope: !2192, file: !2192, line: 39, type: !2193, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2203)
!2192 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!671, !2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !676)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2198)
!2198 = !{!2199, !2200, !2201, !2202}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2197, file: !3, baseType: !7, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2197, file: !3, baseType: !7, size: 32, offset: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2197, file: !3, baseType: !675, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2197, file: !3, baseType: !675, size: 64, offset: 128)
!2203 = !{!2204, !2205}
!2204 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2191, file: !2192, line: 39, type: !2195)
!2205 = !DILocalVariable(name: "__arg", arg: 2, scope: !2191, file: !2192, line: 39, type: !2196)
!2206 = !DILocation(line: 0, scope: !2191)
!2207 = !DILocation(line: 41, column: 20, scope: !2191)
!2208 = !DILocation(line: 41, column: 10, scope: !2191)
!2209 = !DILocation(line: 41, column: 3, scope: !2191)
!2210 = distinct !DISubprogram(name: "getchar", scope: !2192, file: !2192, line: 47, type: !2211, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!671}
!2213 = !{}
!2214 = !DILocation(line: 49, column: 16, scope: !2210)
!2215 = !DILocation(line: 49, column: 10, scope: !2210)
!2216 = !DILocation(line: 49, column: 3, scope: !2210)
!2217 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2192, file: !2192, line: 56, type: !2218, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2271)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!671, !2220}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2222, line: 7, baseType: !2223)
!2222 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2224, line: 49, size: 1728, elements: !2225)
!2224 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2241, !2243, !2244, !2245, !2248, !2250, !2251, !2252, !2255, !2257, !2260, !2263, !2264, !2265, !2266, !2267}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2223, file: !2224, line: 51, baseType: !671, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2223, file: !2224, line: 54, baseType: !673, size: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2223, file: !2224, line: 55, baseType: !673, size: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2223, file: !2224, line: 56, baseType: !673, size: 64, offset: 192)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2223, file: !2224, line: 57, baseType: !673, size: 64, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2223, file: !2224, line: 58, baseType: !673, size: 64, offset: 320)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2223, file: !2224, line: 59, baseType: !673, size: 64, offset: 384)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2223, file: !2224, line: 60, baseType: !673, size: 64, offset: 448)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2223, file: !2224, line: 61, baseType: !673, size: 64, offset: 512)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2223, file: !2224, line: 64, baseType: !673, size: 64, offset: 576)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2223, file: !2224, line: 65, baseType: !673, size: 64, offset: 640)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2223, file: !2224, line: 66, baseType: !673, size: 64, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2223, file: !2224, line: 68, baseType: !2239, size: 64, offset: 768)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2224, line: 36, flags: DIFlagFwdDecl)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2223, file: !2224, line: 70, baseType: !2242, size: 64, offset: 832)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2223, file: !2224, line: 72, baseType: !671, size: 32, offset: 896)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2223, file: !2224, line: 73, baseType: !671, size: 32, offset: 928)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2223, file: !2224, line: 74, baseType: !2246, size: 64, offset: 960)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2247, line: 152, baseType: !746)
!2247 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2223, file: !2224, line: 77, baseType: !2249, size: 16, offset: 1024)
!2249 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2223, file: !2224, line: 78, baseType: !1804, size: 8, offset: 1040)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2223, file: !2224, line: 79, baseType: !788, size: 8, offset: 1048)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2223, file: !2224, line: 81, baseType: !2253, size: 64, offset: 1088)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2224, line: 43, baseType: null)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2223, file: !2224, line: 89, baseType: !2256, size: 64, offset: 1152)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2247, line: 153, baseType: !746)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2223, file: !2224, line: 91, baseType: !2258, size: 64, offset: 1216)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2224, line: 37, flags: DIFlagFwdDecl)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2223, file: !2224, line: 92, baseType: !2261, size: 64, offset: 1280)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2224, line: 38, flags: DIFlagFwdDecl)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2223, file: !2224, line: 93, baseType: !2242, size: 64, offset: 1344)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2223, file: !2224, line: 94, baseType: !675, size: 64, offset: 1408)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2223, file: !2224, line: 95, baseType: !1158, size: 64, offset: 1472)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2223, file: !2224, line: 96, baseType: !671, size: 32, offset: 1536)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2223, file: !2224, line: 98, baseType: !2268, size: 160, offset: 1568)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 160, elements: !2269)
!2269 = !{!2270}
!2270 = !DISubrange(count: 20)
!2271 = !{!2272}
!2272 = !DILocalVariable(name: "__fp", arg: 1, scope: !2217, file: !2192, line: 56, type: !2220)
!2273 = !DILocation(line: 0, scope: !2217)
!2274 = !DILocation(line: 58, column: 10, scope: !2217)
!2275 = !DILocation(line: 58, column: 3, scope: !2217)
!2276 = distinct !DISubprogram(name: "getc_unlocked", scope: !2192, file: !2192, line: 66, type: !2218, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2277)
!2277 = !{!2278}
!2278 = !DILocalVariable(name: "__fp", arg: 1, scope: !2276, file: !2192, line: 66, type: !2220)
!2279 = !DILocation(line: 0, scope: !2276)
!2280 = !DILocation(line: 68, column: 10, scope: !2276)
!2281 = !DILocation(line: 68, column: 3, scope: !2276)
!2282 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2192, file: !2192, line: 73, type: !2211, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2283 = !DILocation(line: 75, column: 10, scope: !2282)
!2284 = !DILocation(line: 75, column: 3, scope: !2282)
!2285 = distinct !DISubprogram(name: "putchar", scope: !2192, file: !2192, line: 82, type: !2286, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2288)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!671, !671}
!2288 = !{!2289}
!2289 = !DILocalVariable(name: "__c", arg: 1, scope: !2285, file: !2192, line: 82, type: !671)
!2290 = !DILocation(line: 0, scope: !2285)
!2291 = !DILocation(line: 84, column: 21, scope: !2285)
!2292 = !DILocation(line: 84, column: 10, scope: !2285)
!2293 = !DILocation(line: 84, column: 3, scope: !2285)
!2294 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2192, file: !2192, line: 91, type: !2295, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2297)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!671, !671, !2220}
!2297 = !{!2298, !2299}
!2298 = !DILocalVariable(name: "__c", arg: 1, scope: !2294, file: !2192, line: 91, type: !671)
!2299 = !DILocalVariable(name: "__stream", arg: 2, scope: !2294, file: !2192, line: 91, type: !2220)
!2300 = !DILocation(line: 0, scope: !2294)
!2301 = !DILocation(line: 93, column: 10, scope: !2294)
!2302 = !DILocation(line: 93, column: 3, scope: !2294)
!2303 = distinct !DISubprogram(name: "putc_unlocked", scope: !2192, file: !2192, line: 101, type: !2295, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2304)
!2304 = !{!2305, !2306}
!2305 = !DILocalVariable(name: "__c", arg: 1, scope: !2303, file: !2192, line: 101, type: !671)
!2306 = !DILocalVariable(name: "__stream", arg: 2, scope: !2303, file: !2192, line: 101, type: !2220)
!2307 = !DILocation(line: 0, scope: !2303)
!2308 = !DILocation(line: 103, column: 10, scope: !2303)
!2309 = !DILocation(line: 103, column: 3, scope: !2303)
!2310 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2192, file: !2192, line: 108, type: !2286, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2311)
!2311 = !{!2312}
!2312 = !DILocalVariable(name: "__c", arg: 1, scope: !2310, file: !2192, line: 108, type: !671)
!2313 = !DILocation(line: 0, scope: !2310)
!2314 = !DILocation(line: 110, column: 10, scope: !2310)
!2315 = !DILocation(line: 110, column: 3, scope: !2310)
!2316 = distinct !DISubprogram(name: "getline", scope: !2192, file: !2192, line: 118, type: !2317, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2321)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!2319, !672, !2320, !2220}
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2247, line: 193, baseType: !746)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!2321 = !{!2322, !2323, !2324}
!2322 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2316, file: !2192, line: 118, type: !672)
!2323 = !DILocalVariable(name: "__n", arg: 2, scope: !2316, file: !2192, line: 118, type: !2320)
!2324 = !DILocalVariable(name: "__stream", arg: 3, scope: !2316, file: !2192, line: 118, type: !2220)
!2325 = !DILocation(line: 0, scope: !2316)
!2326 = !DILocation(line: 120, column: 10, scope: !2316)
!2327 = !DILocation(line: 120, column: 3, scope: !2316)
!2328 = distinct !DISubprogram(name: "feof_unlocked", scope: !2192, file: !2192, line: 128, type: !2218, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2329)
!2329 = !{!2330}
!2330 = !DILocalVariable(name: "__stream", arg: 1, scope: !2328, file: !2192, line: 128, type: !2220)
!2331 = !DILocation(line: 0, scope: !2328)
!2332 = !DILocation(line: 130, column: 10, scope: !2328)
!2333 = !DILocation(line: 130, column: 3, scope: !2328)
!2334 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2192, file: !2192, line: 135, type: !2218, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2335)
!2335 = !{!2336}
!2336 = !DILocalVariable(name: "__stream", arg: 1, scope: !2334, file: !2192, line: 135, type: !2220)
!2337 = !DILocation(line: 0, scope: !2334)
!2338 = !DILocation(line: 137, column: 10, scope: !2334)
!2339 = !DILocation(line: 137, column: 3, scope: !2334)
!2340 = distinct !DISubprogram(name: "tolower", scope: !2341, file: !2341, line: 207, type: !2286, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2342)
!2341 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2342 = !{!2343}
!2343 = !DILocalVariable(name: "__c", arg: 1, scope: !2340, file: !2341, line: 207, type: !671)
!2344 = !DILocation(line: 0, scope: !2340)
!2345 = !DILocation(line: 209, column: 22, scope: !2340)
!2346 = !DILocation(line: 209, column: 39, scope: !2340)
!2347 = !DILocation(line: 209, column: 38, scope: !2340)
!2348 = !DILocation(line: 209, column: 37, scope: !2340)
!2349 = !DILocation(line: 209, column: 10, scope: !2340)
!2350 = !DILocation(line: 209, column: 3, scope: !2340)
!2351 = distinct !DISubprogram(name: "toupper", scope: !2341, file: !2341, line: 213, type: !2286, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2352)
!2352 = !{!2353}
!2353 = !DILocalVariable(name: "__c", arg: 1, scope: !2351, file: !2341, line: 213, type: !671)
!2354 = !DILocation(line: 0, scope: !2351)
!2355 = !DILocation(line: 215, column: 22, scope: !2351)
!2356 = !DILocation(line: 215, column: 39, scope: !2351)
!2357 = !DILocation(line: 215, column: 38, scope: !2351)
!2358 = !DILocation(line: 215, column: 37, scope: !2351)
!2359 = !DILocation(line: 215, column: 10, scope: !2351)
!2360 = !DILocation(line: 215, column: 3, scope: !2351)
!2361 = distinct !DISubprogram(name: "atoi", scope: !2362, file: !2362, line: 361, type: !2363, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2365)
!2362 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!671, !676}
!2365 = !{!2366}
!2366 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2361, file: !2362, line: 361, type: !676)
!2367 = !DILocation(line: 0, scope: !2361)
!2368 = !DILocation(line: 363, column: 16, scope: !2361)
!2369 = !DILocation(line: 363, column: 10, scope: !2361)
!2370 = !DILocation(line: 363, column: 3, scope: !2361)
!2371 = distinct !DISubprogram(name: "atol", scope: !2362, file: !2362, line: 366, type: !2372, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2374)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!746, !676}
!2374 = !{!2375}
!2375 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2371, file: !2362, line: 366, type: !676)
!2376 = !DILocation(line: 0, scope: !2371)
!2377 = !DILocation(line: 368, column: 10, scope: !2371)
!2378 = !DILocation(line: 368, column: 3, scope: !2371)
!2379 = distinct !DISubprogram(name: "atoll", scope: !2362, file: !2362, line: 373, type: !2380, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2383)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!2382, !676}
!2382 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2383 = !{!2384}
!2384 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2379, file: !2362, line: 373, type: !676)
!2385 = !DILocation(line: 0, scope: !2379)
!2386 = !DILocation(line: 375, column: 10, scope: !2379)
!2387 = !DILocation(line: 375, column: 3, scope: !2379)
!2388 = distinct !DISubprogram(name: "bsearch", scope: !2389, file: !2389, line: 20, type: !2390, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2393)
!2389 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!675, !1455, !1455, !1158, !1158, !2392}
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2362, line: 808, baseType: !1459)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2394 = !DILocalVariable(name: "__key", arg: 1, scope: !2388, file: !2389, line: 20, type: !1455)
!2395 = !DILocalVariable(name: "__base", arg: 2, scope: !2388, file: !2389, line: 20, type: !1455)
!2396 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2388, file: !2389, line: 20, type: !1158)
!2397 = !DILocalVariable(name: "__size", arg: 4, scope: !2388, file: !2389, line: 20, type: !1158)
!2398 = !DILocalVariable(name: "__compar", arg: 5, scope: !2388, file: !2389, line: 21, type: !2392)
!2399 = !DILocalVariable(name: "__l", scope: !2388, file: !2389, line: 23, type: !1158)
!2400 = !DILocalVariable(name: "__u", scope: !2388, file: !2389, line: 23, type: !1158)
!2401 = !DILocalVariable(name: "__idx", scope: !2388, file: !2389, line: 23, type: !1158)
!2402 = !DILocalVariable(name: "__p", scope: !2388, file: !2389, line: 24, type: !1455)
!2403 = !DILocalVariable(name: "__comparison", scope: !2388, file: !2389, line: 25, type: !671)
!2404 = !DILocation(line: 0, scope: !2388)
!2405 = !DILocation(line: 29, column: 3, scope: !2388)
!2406 = !DILocation(line: 27, column: 7, scope: !2388)
!2407 = !DILocation(line: 29, column: 14, scope: !2388)
!2408 = !DILocation(line: 31, column: 20, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2388, file: !2389, line: 30, column: 5)
!2410 = !DILocation(line: 31, column: 27, scope: !2409)
!2411 = !DILocation(line: 32, column: 56, scope: !2409)
!2412 = !DILocation(line: 32, column: 47, scope: !2409)
!2413 = !DILocation(line: 33, column: 22, scope: !2409)
!2414 = !DILocation(line: 34, column: 24, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2409, file: !2389, line: 34, column: 11)
!2416 = !DILocation(line: 34, column: 11, scope: !2409)
!2417 = !DILocation(line: 36, column: 29, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2415, file: !2389, line: 36, column: 16)
!2419 = !DILocation(line: 36, column: 16, scope: !2415)
!2420 = !DILocation(line: 37, column: 14, scope: !2418)
!2421 = distinct !{!2421, !2405, !2422}
!2422 = !DILocation(line: 40, column: 5, scope: !2388)
!2423 = !DILocation(line: 43, column: 1, scope: !2388)
!2424 = distinct !DISubprogram(name: "atof", scope: !2425, file: !2425, line: 25, type: !2426, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2429)
!2425 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!2428, !676}
!2428 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2429 = !{!2430}
!2430 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2424, file: !2425, line: 25, type: !676)
!2431 = !DILocation(line: 0, scope: !2424)
!2432 = !DILocation(line: 27, column: 10, scope: !2424)
!2433 = !DILocation(line: 27, column: 3, scope: !2424)
!2434 = distinct !DISubprogram(name: "strtoimax", scope: !2435, file: !2435, line: 324, type: !2436, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2442)
!2435 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!2438, !2195, !2441, !671}
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2439, line: 101, baseType: !2440)
!2439 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2247, line: 72, baseType: !746)
!2441 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !672)
!2442 = !{!2443, !2444, !2445}
!2443 = !DILocalVariable(name: "nptr", arg: 1, scope: !2434, file: !2435, line: 324, type: !2195)
!2444 = !DILocalVariable(name: "endptr", arg: 2, scope: !2434, file: !2435, line: 324, type: !2441)
!2445 = !DILocalVariable(name: "base", arg: 3, scope: !2434, file: !2435, line: 324, type: !671)
!2446 = !DILocation(line: 0, scope: !2434)
!2447 = !DILocation(line: 327, column: 10, scope: !2434)
!2448 = !DILocation(line: 327, column: 3, scope: !2434)
!2449 = distinct !DISubprogram(name: "strtoumax", scope: !2435, file: !2435, line: 336, type: !2450, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2454)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!2452, !2195, !2441, !671}
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2439, line: 102, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2247, line: 73, baseType: !744)
!2454 = !{!2455, !2456, !2457}
!2455 = !DILocalVariable(name: "nptr", arg: 1, scope: !2449, file: !2435, line: 336, type: !2195)
!2456 = !DILocalVariable(name: "endptr", arg: 2, scope: !2449, file: !2435, line: 336, type: !2441)
!2457 = !DILocalVariable(name: "base", arg: 3, scope: !2449, file: !2435, line: 336, type: !671)
!2458 = !DILocation(line: 0, scope: !2449)
!2459 = !DILocation(line: 339, column: 10, scope: !2449)
!2460 = !DILocation(line: 339, column: 3, scope: !2449)
!2461 = distinct !DISubprogram(name: "wcstoimax", scope: !2435, file: !2435, line: 348, type: !2462, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2471)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!2438, !2464, !2468, !671}
!2464 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2465)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2435, line: 34, baseType: !671)
!2468 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2469)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2471 = !{!2472, !2473, !2474}
!2472 = !DILocalVariable(name: "nptr", arg: 1, scope: !2461, file: !2435, line: 348, type: !2464)
!2473 = !DILocalVariable(name: "endptr", arg: 2, scope: !2461, file: !2435, line: 348, type: !2468)
!2474 = !DILocalVariable(name: "base", arg: 3, scope: !2461, file: !2435, line: 348, type: !671)
!2475 = !DILocation(line: 0, scope: !2461)
!2476 = !DILocation(line: 351, column: 10, scope: !2461)
!2477 = !DILocation(line: 351, column: 3, scope: !2461)
!2478 = distinct !DISubprogram(name: "wcstoumax", scope: !2435, file: !2435, line: 362, type: !2479, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2481)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!2452, !2464, !2468, !671}
!2481 = !{!2482, !2483, !2484}
!2482 = !DILocalVariable(name: "nptr", arg: 1, scope: !2478, file: !2435, line: 362, type: !2464)
!2483 = !DILocalVariable(name: "endptr", arg: 2, scope: !2478, file: !2435, line: 362, type: !2468)
!2484 = !DILocalVariable(name: "base", arg: 3, scope: !2478, file: !2435, line: 362, type: !671)
!2485 = !DILocation(line: 0, scope: !2478)
!2486 = !DILocation(line: 365, column: 10, scope: !2478)
!2487 = !DILocation(line: 365, column: 3, scope: !2478)
!2488 = distinct !DISubprogram(name: "stat", scope: !2489, file: !2489, line: 453, type: !2490, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2527)
!2489 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!671, !676, !2492}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2494, line: 46, size: 1152, elements: !2495)
!2494 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2495 = !{!2496, !2498, !2500, !2502, !2504, !2506, !2508, !2509, !2510, !2511, !2513, !2515, !2523, !2524, !2525}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2493, file: !2494, line: 48, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2247, line: 145, baseType: !744)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2493, file: !2494, line: 53, baseType: !2499, size: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2247, line: 148, baseType: !744)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2493, file: !2494, line: 61, baseType: !2501, size: 64, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2247, line: 151, baseType: !744)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2493, file: !2494, line: 62, baseType: !2503, size: 32, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2247, line: 150, baseType: !7)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2493, file: !2494, line: 64, baseType: !2505, size: 32, offset: 224)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2247, line: 146, baseType: !7)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2493, file: !2494, line: 65, baseType: !2507, size: 32, offset: 256)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2247, line: 147, baseType: !7)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2493, file: !2494, line: 67, baseType: !671, size: 32, offset: 288)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2493, file: !2494, line: 69, baseType: !2497, size: 64, offset: 320)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2493, file: !2494, line: 74, baseType: !2246, size: 64, offset: 384)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2493, file: !2494, line: 78, baseType: !2512, size: 64, offset: 448)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2247, line: 174, baseType: !746)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2493, file: !2494, line: 80, baseType: !2514, size: 64, offset: 512)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2247, line: 179, baseType: !746)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2493, file: !2494, line: 91, baseType: !2516, size: 128, offset: 576)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2517, line: 10, size: 128, elements: !2518)
!2517 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2518 = !{!2519, !2521}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2516, file: !2517, line: 12, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2247, line: 160, baseType: !746)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2516, file: !2517, line: 16, baseType: !2522, size: 64, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2247, line: 196, baseType: !746)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2493, file: !2494, line: 92, baseType: !2516, size: 128, offset: 704)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2493, file: !2494, line: 93, baseType: !2516, size: 128, offset: 832)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2493, file: !2494, line: 106, baseType: !2526, size: 192, offset: 960)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2522, size: 192, elements: !764)
!2527 = !{!2528, !2529}
!2528 = !DILocalVariable(name: "__path", arg: 1, scope: !2488, file: !2489, line: 453, type: !676)
!2529 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2488, file: !2489, line: 453, type: !2492)
!2530 = !DILocation(line: 0, scope: !2488)
!2531 = !DILocation(line: 455, column: 10, scope: !2488)
!2532 = !DILocation(line: 455, column: 3, scope: !2488)
!2533 = distinct !DISubprogram(name: "lstat", scope: !2489, file: !2489, line: 460, type: !2490, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2534)
!2534 = !{!2535, !2536}
!2535 = !DILocalVariable(name: "__path", arg: 1, scope: !2533, file: !2489, line: 460, type: !676)
!2536 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2533, file: !2489, line: 460, type: !2492)
!2537 = !DILocation(line: 0, scope: !2533)
!2538 = !DILocation(line: 462, column: 10, scope: !2533)
!2539 = !DILocation(line: 462, column: 3, scope: !2533)
!2540 = distinct !DISubprogram(name: "fstat", scope: !2489, file: !2489, line: 467, type: !2541, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2543)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!671, !671, !2492}
!2543 = !{!2544, !2545}
!2544 = !DILocalVariable(name: "__fd", arg: 1, scope: !2540, file: !2489, line: 467, type: !671)
!2545 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2540, file: !2489, line: 467, type: !2492)
!2546 = !DILocation(line: 0, scope: !2540)
!2547 = !DILocation(line: 469, column: 10, scope: !2540)
!2548 = !DILocation(line: 469, column: 3, scope: !2540)
!2549 = distinct !DISubprogram(name: "fstatat", scope: !2489, file: !2489, line: 474, type: !2550, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!671, !671, !676, !2492, !671}
!2552 = !{!2553, !2554, !2555, !2556}
!2553 = !DILocalVariable(name: "__fd", arg: 1, scope: !2549, file: !2489, line: 474, type: !671)
!2554 = !DILocalVariable(name: "__filename", arg: 2, scope: !2549, file: !2489, line: 474, type: !676)
!2555 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2549, file: !2489, line: 474, type: !2492)
!2556 = !DILocalVariable(name: "__flag", arg: 4, scope: !2549, file: !2489, line: 474, type: !671)
!2557 = !DILocation(line: 0, scope: !2549)
!2558 = !DILocation(line: 477, column: 10, scope: !2549)
!2559 = !DILocation(line: 477, column: 3, scope: !2549)
!2560 = distinct !DISubprogram(name: "mknod", scope: !2489, file: !2489, line: 483, type: !2561, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2563)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!671, !676, !2503, !2497}
!2563 = !{!2564, !2565, !2566}
!2564 = !DILocalVariable(name: "__path", arg: 1, scope: !2560, file: !2489, line: 483, type: !676)
!2565 = !DILocalVariable(name: "__mode", arg: 2, scope: !2560, file: !2489, line: 483, type: !2503)
!2566 = !DILocalVariable(name: "__dev", arg: 3, scope: !2560, file: !2489, line: 483, type: !2497)
!2567 = !DILocation(line: 0, scope: !2560)
!2568 = !DILocation(line: 485, column: 10, scope: !2560)
!2569 = !DILocation(line: 485, column: 3, scope: !2560)
!2570 = distinct !DISubprogram(name: "mknodat", scope: !2489, file: !2489, line: 491, type: !2571, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2573)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!671, !671, !676, !2503, !2497}
!2573 = !{!2574, !2575, !2576, !2577}
!2574 = !DILocalVariable(name: "__fd", arg: 1, scope: !2570, file: !2489, line: 491, type: !671)
!2575 = !DILocalVariable(name: "__path", arg: 2, scope: !2570, file: !2489, line: 491, type: !676)
!2576 = !DILocalVariable(name: "__mode", arg: 3, scope: !2570, file: !2489, line: 491, type: !2503)
!2577 = !DILocalVariable(name: "__dev", arg: 4, scope: !2570, file: !2489, line: 491, type: !2497)
!2578 = !DILocation(line: 0, scope: !2570)
!2579 = !DILocation(line: 494, column: 10, scope: !2570)
!2580 = !DILocation(line: 494, column: 3, scope: !2570)
!2581 = distinct !DISubprogram(name: "stat64", scope: !2489, file: !2489, line: 502, type: !2582, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2604)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!671, !676, !2584}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2494, line: 119, size: 1152, elements: !2586)
!2586 = !{!2587, !2588, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2600, !2601, !2602, !2603}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2585, file: !2494, line: 121, baseType: !2497, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2585, file: !2494, line: 123, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2247, line: 149, baseType: !744)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2585, file: !2494, line: 124, baseType: !2501, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2585, file: !2494, line: 125, baseType: !2503, size: 32, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2585, file: !2494, line: 132, baseType: !2505, size: 32, offset: 224)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2585, file: !2494, line: 133, baseType: !2507, size: 32, offset: 256)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2585, file: !2494, line: 135, baseType: !671, size: 32, offset: 288)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2585, file: !2494, line: 136, baseType: !2497, size: 64, offset: 320)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2585, file: !2494, line: 137, baseType: !2246, size: 64, offset: 384)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2585, file: !2494, line: 143, baseType: !2512, size: 64, offset: 448)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2585, file: !2494, line: 144, baseType: !2599, size: 64, offset: 512)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2247, line: 180, baseType: !746)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2585, file: !2494, line: 152, baseType: !2516, size: 128, offset: 576)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2585, file: !2494, line: 153, baseType: !2516, size: 128, offset: 704)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2585, file: !2494, line: 154, baseType: !2516, size: 128, offset: 832)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2585, file: !2494, line: 164, baseType: !2526, size: 192, offset: 960)
!2604 = !{!2605, !2606}
!2605 = !DILocalVariable(name: "__path", arg: 1, scope: !2581, file: !2489, line: 502, type: !676)
!2606 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2581, file: !2489, line: 502, type: !2584)
!2607 = !DILocation(line: 0, scope: !2581)
!2608 = !DILocation(line: 504, column: 10, scope: !2581)
!2609 = !DILocation(line: 504, column: 3, scope: !2581)
!2610 = distinct !DISubprogram(name: "lstat64", scope: !2489, file: !2489, line: 509, type: !2582, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2611)
!2611 = !{!2612, !2613}
!2612 = !DILocalVariable(name: "__path", arg: 1, scope: !2610, file: !2489, line: 509, type: !676)
!2613 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2610, file: !2489, line: 509, type: !2584)
!2614 = !DILocation(line: 0, scope: !2610)
!2615 = !DILocation(line: 511, column: 10, scope: !2610)
!2616 = !DILocation(line: 511, column: 3, scope: !2610)
!2617 = distinct !DISubprogram(name: "fstat64", scope: !2489, file: !2489, line: 516, type: !2618, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2620)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!671, !671, !2584}
!2620 = !{!2621, !2622}
!2621 = !DILocalVariable(name: "__fd", arg: 1, scope: !2617, file: !2489, line: 516, type: !671)
!2622 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2617, file: !2489, line: 516, type: !2584)
!2623 = !DILocation(line: 0, scope: !2617)
!2624 = !DILocation(line: 518, column: 10, scope: !2617)
!2625 = !DILocation(line: 518, column: 3, scope: !2617)
!2626 = distinct !DISubprogram(name: "fstatat64", scope: !2489, file: !2489, line: 523, type: !2627, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2629)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!671, !671, !676, !2584, !671}
!2629 = !{!2630, !2631, !2632, !2633}
!2630 = !DILocalVariable(name: "__fd", arg: 1, scope: !2626, file: !2489, line: 523, type: !671)
!2631 = !DILocalVariable(name: "__filename", arg: 2, scope: !2626, file: !2489, line: 523, type: !676)
!2632 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2626, file: !2489, line: 523, type: !2584)
!2633 = !DILocalVariable(name: "__flag", arg: 4, scope: !2626, file: !2489, line: 523, type: !671)
!2634 = !DILocation(line: 0, scope: !2626)
!2635 = !DILocation(line: 526, column: 10, scope: !2626)
!2636 = !DILocation(line: 526, column: 3, scope: !2626)
!2637 = distinct !DISubprogram(name: "struct_reorg_gate", scope: !3, file: !3, line: 4038, type: !2164, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2638 = !DILocation(line: 4040, column: 10, scope: !2637)
!2639 = !DILocation(line: 4041, column: 6, scope: !2637)
!2640 = !DILocation(line: 4041, column: 3, scope: !2637)
!2641 = !DILocation(line: 4042, column: 7, scope: !2637)
!2642 = !DILocation(line: 4042, column: 16, scope: !2637)
!2643 = !DILocation(line: 4040, column: 3, scope: !2637)
!2644 = distinct !DISubprogram(name: "reorg_structs_drive", scope: !3, file: !3, line: 4029, type: !2168, scopeLine: 4030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2645 = !DILocation(line: 4031, column: 3, scope: !2644)
!2646 = !DILocation(line: 4032, column: 3, scope: !2644)
!2647 = distinct !DISubprogram(name: "reorg_structs", scope: !3, file: !3, line: 3997, type: !2648, scopeLine: 3998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{null}
!2650 = !DILocation(line: 4002, column: 3, scope: !2647)
!2651 = !DILocation(line: 4005, column: 3, scope: !2647)
!2652 = !DILocation(line: 4008, column: 3, scope: !2647)
!2653 = !DILocation(line: 4011, column: 3, scope: !2647)
!2654 = !DILocation(line: 4015, column: 3, scope: !2647)
!2655 = !DILocation(line: 4020, column: 3, scope: !2647)
!2656 = !DILocation(line: 4023, column: 3, scope: !2647)
!2657 = !DILocation(line: 4024, column: 1, scope: !2647)
!2658 = distinct !DISubprogram(name: "collect_structures", scope: !3, file: !3, line: 3829, type: !2648, scopeLine: 3830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2659)
!2659 = !{!2660}
!2660 = !DILocalVariable(name: "unsuitable_types", scope: !2658, file: !3, line: 3831, type: !678)
!2661 = !DILocation(line: 3831, column: 3, scope: !2658)
!2662 = !DILocation(line: 3831, column: 40, scope: !2658)
!2663 = !DILocation(line: 0, scope: !2658)
!2664 = !DILocation(line: 3831, column: 21, scope: !2658)
!2665 = !DILocation(line: 3833, column: 16, scope: !2658)
!2666 = !DILocation(line: 3833, column: 14, scope: !2658)
!2667 = !DILocation(line: 3836, column: 7, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 3836, column: 7)
!2669 = !DILocation(line: 3836, column: 7, scope: !2658)
!2670 = !DILocation(line: 3841, column: 3, scope: !2658)
!2671 = !DILocation(line: 3846, column: 3, scope: !2658)
!2672 = !DILocation(line: 3850, column: 3, scope: !2658)
!2673 = !DILocation(line: 3853, column: 3, scope: !2658)
!2674 = !DILocation(line: 3855, column: 28, scope: !2658)
!2675 = !DILocation(line: 3855, column: 3, scope: !2658)
!2676 = !DILocation(line: 3856, column: 3, scope: !2658)
!2677 = !DILocation(line: 3857, column: 1, scope: !2658)
!2678 = distinct !DISubprogram(name: "collect_allocation_sites", scope: !3, file: !3, line: 3863, type: !2648, scopeLine: 3864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2679 = !DILocation(line: 3865, column: 17, scope: !2678)
!2680 = !DILocation(line: 3865, column: 15, scope: !2678)
!2681 = !DILocation(line: 3866, column: 3, scope: !2678)
!2682 = !DILocation(line: 3867, column: 1, scope: !2678)
!2683 = distinct !DISubprogram(name: "collect_data_accesses", scope: !3, file: !3, line: 3874, type: !2648, scopeLine: 3875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2684)
!2684 = !{!2685, !2889, !2893}
!2685 = !DILocalVariable(name: "c_node", scope: !2683, file: !3, line: 3876, type: !2686)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !561, line: 181, size: 2496, elements: !2688)
!2688 = !{!2689, !2690, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2804, !2826, !2836, !2840, !2866, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2687, file: !561, line: 182, baseType: !690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2687, file: !561, line: 183, baseType: !2691, size: 64, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !561, line: 314, size: 768, elements: !2693)
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2705, !2706, !2707, !2708, !2709, !2710, !2711}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2692, file: !561, line: 316, baseType: !1224, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2692, file: !561, line: 317, baseType: !2686, size: 64, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2692, file: !561, line: 318, baseType: !2686, size: 64, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2692, file: !561, line: 319, baseType: !2691, size: 64, offset: 192)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2692, file: !561, line: 320, baseType: !2691, size: 64, offset: 256)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2692, file: !561, line: 321, baseType: !2691, size: 64, offset: 320)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2692, file: !561, line: 322, baseType: !2691, size: 64, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2692, file: !561, line: 323, baseType: !1014, size: 64, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2692, file: !561, line: 324, baseType: !675, size: 64, offset: 512)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2692, file: !561, line: 327, baseType: !2704, size: 32, offset: 576)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !561, line: 312, baseType: !560)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2692, file: !561, line: 330, baseType: !7, size: 32, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2692, file: !561, line: 334, baseType: !671, size: 32, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2692, file: !561, line: 336, baseType: !671, size: 32, offset: 672)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2692, file: !561, line: 338, baseType: !2249, size: 16, offset: 704)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2692, file: !561, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2692, file: !561, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2692, file: !561, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2687, file: !561, line: 184, baseType: !2691, size: 64, offset: 128)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2687, file: !561, line: 185, baseType: !2686, size: 64, offset: 192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2687, file: !561, line: 186, baseType: !2686, size: 64, offset: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2687, file: !561, line: 188, baseType: !2686, size: 64, offset: 320)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2687, file: !561, line: 190, baseType: !2686, size: 64, offset: 384)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2687, file: !561, line: 192, baseType: !2686, size: 64, offset: 448)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2687, file: !561, line: 194, baseType: !2686, size: 64, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2687, file: !561, line: 196, baseType: !2686, size: 64, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2687, file: !561, line: 197, baseType: !2686, size: 64, offset: 640)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2687, file: !561, line: 198, baseType: !2686, size: 64, offset: 704)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2687, file: !561, line: 199, baseType: !2686, size: 64, offset: 768)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2687, file: !561, line: 202, baseType: !2686, size: 64, offset: 832)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2687, file: !561, line: 204, baseType: !2686, size: 64, offset: 896)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2687, file: !561, line: 207, baseType: !1444, size: 64, offset: 960)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2687, file: !561, line: 209, baseType: !675, size: 64, offset: 1024)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2687, file: !561, line: 214, baseType: !2728, size: 64, offset: 1088)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !1402, line: 177, baseType: !2730)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !1402, line: 177, size: 128, elements: !2731)
!2731 = !{!2732}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2730, file: !1402, line: 177, baseType: !2733, size: 128)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !1402, line: 176, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !1402, line: 176, size: 128, elements: !2735)
!2735 = !{!2736, !2737, !2738}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2734, file: !1402, line: 176, baseType: !7, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2734, file: !1402, line: 176, baseType: !7, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2734, file: !1402, line: 176, baseType: !2739, size: 64, offset: 64)
!2739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2740, size: 64, elements: !789)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !1402, line: 174, baseType: !2741)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !6, line: 173, size: 1152, elements: !2743)
!2743 = !{!2744, !2745, !2747, !2770, !2771, !2775, !2780, !2781, !2785}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2742, file: !6, line: 175, baseType: !2158, size: 640)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2742, file: !6, line: 179, baseType: !2746, size: 64, offset: 640)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2742, file: !6, line: 182, baseType: !2748, size: 64, offset: 704)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{null, !2751}
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !561, line: 276, size: 192, elements: !2753)
!2753 = !{!2754, !2755, !2769}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !2752, file: !561, line: 278, baseType: !1444, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2752, file: !561, line: 279, baseType: !2756, size: 64, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !561, line: 272, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !561, line: 272, size: 128, elements: !2759)
!2759 = !{!2760}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2758, file: !561, line: 272, baseType: !2761, size: 128)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !561, line: 270, baseType: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !561, line: 270, size: 128, elements: !2763)
!2763 = !{!2764, !2765, !2766}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2762, file: !561, line: 270, baseType: !7, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2762, file: !561, line: 270, baseType: !7, size: 32, offset: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2762, file: !561, line: 270, baseType: !2767, size: 64, offset: 64)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2768, size: 64, elements: !789)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !561, line: 268, baseType: !2686)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2752, file: !561, line: 280, baseType: !675, size: 64, offset: 128)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2742, file: !6, line: 187, baseType: !2746, size: 64, offset: 768)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2742, file: !6, line: 188, baseType: !2772, size: 64, offset: 832)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{null, !2686}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2742, file: !6, line: 191, baseType: !2776, size: 64, offset: 896)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{null, !2686, !2779}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2742, file: !6, line: 195, baseType: !7, size: 32, offset: 960)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2742, file: !6, line: 196, baseType: !2782, size: 64, offset: 1024)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!7, !2686}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2742, file: !6, line: 197, baseType: !2786, size: 64, offset: 1088)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{null, !2789}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !561, line: 358, size: 320, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2790, file: !561, line: 359, baseType: !690, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2790, file: !561, line: 361, baseType: !2789, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2790, file: !561, line: 363, baseType: !2789, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !2790, file: !561, line: 366, baseType: !2789, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2790, file: !561, line: 368, baseType: !671, size: 32, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2790, file: !561, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !2790, file: !561, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2790, file: !561, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2790, file: !561, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2790, file: !561, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2790, file: !561, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2790, file: !561, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2687, file: !561, line: 216, baseType: !2805, size: 320, offset: 1152)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !561, line: 88, size: 320, elements: !2806)
!2806 = !{!2807, !2810, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !2805, file: !561, line: 90, baseType: !2808, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !561, line: 51, flags: DIFlagFwdDecl)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !2805, file: !561, line: 92, baseType: !2811, size: 192, offset: 64)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !561, line: 57, size: 192, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !2811, file: !561, line: 60, baseType: !746, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !2811, file: !561, line: 63, baseType: !671, size: 32, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !2811, file: !561, line: 65, baseType: !671, size: 32, offset: 96)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !2811, file: !561, line: 67, baseType: !671, size: 32, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !2811, file: !561, line: 69, baseType: !671, size: 32, offset: 160)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2805, file: !561, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !2805, file: !561, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !2805, file: !561, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !2805, file: !561, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2805, file: !561, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !2805, file: !561, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !2805, file: !561, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !2805, file: !561, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2687, file: !561, line: 217, baseType: !2827, size: 320, offset: 1472)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !561, line: 126, size: 320, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832, !2833, !2834, !2835}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !2827, file: !561, line: 128, baseType: !746, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !2827, file: !561, line: 130, baseType: !746, size: 64, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !2827, file: !561, line: 134, baseType: !2686, size: 64, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2827, file: !561, line: 137, baseType: !671, size: 32, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2827, file: !561, line: 138, baseType: !671, size: 32, offset: 224)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !2827, file: !561, line: 141, baseType: !671, size: 32, offset: 256)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !2827, file: !561, line: 144, baseType: !670, size: 8, offset: 288)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2687, file: !561, line: 218, baseType: !2837, size: 32, offset: 1792)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !561, line: 150, size: 32, elements: !2838)
!2838 = !{!2839}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !2837, file: !561, line: 151, baseType: !7, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2687, file: !561, line: 219, baseType: !2841, size: 192, offset: 1856)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !561, line: 171, size: 192, elements: !2842)
!2842 = !{!2843, !2864, !2865}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !2841, file: !561, line: 173, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !561, line: 169, baseType: !2846)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !561, line: 169, size: 128, elements: !2847)
!2847 = !{!2848}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2846, file: !561, line: 169, baseType: !2849, size: 128)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !561, line: 168, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !561, line: 168, size: 128, elements: !2851)
!2851 = !{!2852, !2853, !2854}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2850, file: !561, line: 168, baseType: !7, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2850, file: !561, line: 168, baseType: !7, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2850, file: !561, line: 168, baseType: !2855, size: 64, offset: 64)
!2855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2856, size: 64, elements: !789)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !561, line: 167, baseType: !2857)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !561, line: 156, size: 192, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !2858, file: !561, line: 159, baseType: !690, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !2858, file: !561, line: 161, baseType: !690, size: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !2858, file: !561, line: 163, baseType: !670, size: 8, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !2858, file: !561, line: 165, baseType: !670, size: 8, offset: 136)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !2841, file: !561, line: 174, baseType: !1524, size: 64, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !2841, file: !561, line: 175, baseType: !1524, size: 64, offset: 128)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2687, file: !561, line: 220, baseType: !2867, size: 256, offset: 2048)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !561, line: 74, size: 256, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !2867, file: !561, line: 76, baseType: !746, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !2867, file: !561, line: 77, baseType: !746, size: 64, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2867, file: !561, line: 78, baseType: !690, size: 64, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !2867, file: !561, line: 79, baseType: !670, size: 8, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !2867, file: !561, line: 80, baseType: !670, size: 8, offset: 200)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !2867, file: !561, line: 82, baseType: !670, size: 8, offset: 208)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2687, file: !561, line: 223, baseType: !1224, size: 64, offset: 2304)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2687, file: !561, line: 225, baseType: !671, size: 32, offset: 2368)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2687, file: !561, line: 227, baseType: !671, size: 32, offset: 2400)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2687, file: !561, line: 231, baseType: !671, size: 32, offset: 2432)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2687, file: !561, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2687, file: !561, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2687, file: !561, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2687, file: !561, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2687, file: !561, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2687, file: !561, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2687, file: !561, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2687, file: !561, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2687, file: !561, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2687, file: !561, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!2889 = !DILocalVariable(name: "avail", scope: !2890, file: !3, line: 3880, type: !622)
!2890 = distinct !DILexicalBlock(scope: !2891, file: !3, line: 3879, column: 5)
!2891 = distinct !DILexicalBlock(scope: !2892, file: !3, line: 3878, column: 3)
!2892 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 3878, column: 3)
!2893 = !DILocalVariable(name: "func", scope: !2894, file: !3, line: 3884, type: !1400)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 3883, column: 2)
!2895 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 3882, column: 11)
!2896 = !DILocation(line: 3878, column: 8, scope: !2892)
!2897 = !DILocation(line: 0, scope: !2892)
!2898 = !DILocation(line: 0, scope: !2683)
!2899 = !DILocation(line: 3878, column: 3, scope: !2892)
!2900 = !DILocation(line: 3880, column: 33, scope: !2890)
!2901 = !DILocation(line: 0, scope: !2890)
!2902 = !DILocation(line: 3882, column: 32, scope: !2895)
!2903 = !DILocation(line: 3884, column: 28, scope: !2894)
!2904 = !DILocation(line: 0, scope: !2894)
!2905 = !DILocation(line: 3886, column: 4, scope: !2894)
!2906 = !DILocation(line: 3887, column: 4, scope: !2894)
!2907 = !DILocation(line: 3888, column: 2, scope: !2894)
!2908 = !DILocation(line: 3878, column: 56, scope: !2891)
!2909 = !DILocation(line: 3878, column: 3, scope: !2891)
!2910 = distinct !{!2910, !2899, !2911}
!2911 = !DILocation(line: 3889, column: 5, scope: !2892)
!2912 = !DILocation(line: 3891, column: 3, scope: !2683)
!2913 = !DILocation(line: 3893, column: 3, scope: !2683)
!2914 = !DILocation(line: 3894, column: 1, scope: !2683)
!2915 = distinct !DISubprogram(name: "exclude_cold_structs", scope: !3, file: !3, line: 3907, type: !2648, scopeLine: 3908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2916)
!2916 = !{!2917, !2918, !2919}
!2917 = !DILocalVariable(name: "hottest", scope: !2915, file: !3, line: 3909, type: !1224)
!2918 = !DILocalVariable(name: "i", scope: !2915, file: !3, line: 3910, type: !7)
!2919 = !DILocalVariable(name: "str", scope: !2915, file: !3, line: 3911, type: !2069)
!2920 = !DILocation(line: 3909, column: 3, scope: !2915)
!2921 = !DILocation(line: 0, scope: !2915)
!2922 = !DILocation(line: 3909, column: 13, scope: !2915)
!2923 = !DILocation(line: 3911, column: 3, scope: !2915)
!2924 = !DILocation(line: 3914, column: 8, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 3914, column: 3)
!2926 = !DILocation(line: 0, scope: !2925)
!2927 = !DILocation(line: 3914, column: 15, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 3914, column: 3)
!2929 = !DILocation(line: 3914, column: 3, scope: !2925)
!2930 = !DILocation(line: 3919, column: 3, scope: !2915)
!2931 = !DILocation(line: 3915, column: 17, scope: !2928)
!2932 = !DILocation(line: 3915, column: 5, scope: !2928)
!2933 = !DILocation(line: 3914, column: 61, scope: !2928)
!2934 = !DILocation(line: 3914, column: 3, scope: !2928)
!2935 = distinct !{!2935, !2929, !2936}
!2936 = !DILocation(line: 3915, column: 30, scope: !2925)
!2937 = !DILocation(line: 3918, column: 5, scope: !2915)
!2938 = !DILocation(line: 3919, column: 10, scope: !2915)
!2939 = !DILocation(line: 3920, column: 9, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 3920, column: 9)
!2941 = !DILocation(line: 3920, column: 14, scope: !2940)
!2942 = !DILocation(line: 3920, column: 20, scope: !2940)
!2943 = !DILocation(line: 3920, column: 29, scope: !2940)
!2944 = !DILocation(line: 3920, column: 39, scope: !2940)
!2945 = !DILocation(line: 3920, column: 37, scope: !2940)
!2946 = !DILocation(line: 3920, column: 26, scope: !2940)
!2947 = !DILocation(line: 3920, column: 9, scope: !2915)
!2948 = !DILocation(line: 3922, column: 6, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 3922, column: 6)
!2950 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 3921, column: 7)
!2951 = !DILocation(line: 3922, column: 6, scope: !2950)
!2952 = !DILocation(line: 3924, column: 6, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 3923, column: 4)
!2954 = !DILocation(line: 3925, column: 26, scope: !2953)
!2955 = !DILocation(line: 3925, column: 37, scope: !2953)
!2956 = !DILocation(line: 3925, column: 42, scope: !2953)
!2957 = !DILocation(line: 3925, column: 6, scope: !2953)
!2958 = !DILocation(line: 3926, column: 15, scope: !2953)
!2959 = !DILocation(line: 3926, column: 6, scope: !2953)
!2960 = !DILocation(line: 3927, column: 4, scope: !2953)
!2961 = !DILocation(line: 3928, column: 2, scope: !2950)
!2962 = !DILocation(line: 3929, column: 7, scope: !2950)
!2963 = !DILocation(line: 3931, column: 8, scope: !2940)
!2964 = distinct !{!2964, !2930, !2965}
!2965 = !DILocation(line: 3931, column: 8, scope: !2915)
!2966 = !DILocation(line: 3932, column: 1, scope: !2915)
!2967 = distinct !DISubprogram(name: "peel_structs", scope: !3, file: !3, line: 3938, type: !2648, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2968)
!2968 = !{!2969, !2970}
!2969 = !DILocalVariable(name: "str", scope: !2967, file: !3, line: 3940, type: !2069)
!2970 = !DILocalVariable(name: "i", scope: !2967, file: !3, line: 3941, type: !7)
!2971 = !DILocation(line: 3940, column: 3, scope: !2967)
!2972 = !DILocation(line: 0, scope: !2967)
!2973 = !DILocation(line: 3943, column: 8, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 3943, column: 3)
!2975 = !DILocation(line: 0, scope: !2974)
!2976 = !DILocation(line: 3943, column: 15, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 3943, column: 3)
!2978 = !DILocation(line: 3943, column: 3, scope: !2974)
!2979 = !DILocation(line: 3944, column: 22, scope: !2977)
!2980 = !DILocation(line: 3944, column: 5, scope: !2977)
!2981 = !DILocation(line: 3943, column: 61, scope: !2977)
!2982 = !DILocation(line: 3943, column: 3, scope: !2977)
!2983 = distinct !{!2983, !2978, !2984}
!2984 = !DILocation(line: 3944, column: 25, scope: !2974)
!2985 = !DILocation(line: 3945, column: 1, scope: !2967)
!2986 = distinct !DISubprogram(name: "do_reorg", scope: !3, file: !3, line: 3952, type: !2648, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!2987 = !DILocation(line: 3955, column: 8, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 3955, column: 7)
!2989 = !DILocation(line: 0, scope: !2988)
!2990 = !DILocation(line: 3955, column: 7, scope: !2986)
!2991 = !DILocation(line: 3957, column: 11, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 3956, column: 5)
!2993 = !DILocation(line: 3958, column: 2, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 3957, column: 11)
!2995 = !DILocation(line: 3963, column: 11, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 3962, column: 5)
!2997 = !DILocation(line: 3966, column: 6, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 3964, column: 2)
!2999 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 3963, column: 11)
!3000 = !DILocation(line: 3965, column: 4, scope: !2998)
!3001 = !DILocation(line: 3967, column: 2, scope: !2998)
!3002 = !DILocation(line: 3971, column: 3, scope: !2986)
!3003 = !DILocation(line: 3972, column: 3, scope: !2986)
!3004 = !DILocation(line: 3975, column: 3, scope: !2986)
!3005 = !DILocation(line: 3976, column: 18, scope: !2986)
!3006 = !DILocation(line: 3976, column: 3, scope: !2986)
!3007 = !DILocation(line: 3979, column: 3, scope: !2986)
!3008 = !DILocation(line: 3982, column: 23, scope: !2986)
!3009 = !DILocation(line: 3982, column: 3, scope: !2986)
!3010 = !DILocation(line: 3983, column: 1, scope: !2986)
!3011 = distinct !DISubprogram(name: "free_data_structs", scope: !3, file: !3, line: 3988, type: !2648, scopeLine: 3989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!3012 = !DILocation(line: 3990, column: 3, scope: !3011)
!3013 = !DILocation(line: 3991, column: 3, scope: !3011)
!3014 = !DILocation(line: 3992, column: 1, scope: !3011)
!3015 = distinct !DISubprogram(name: "VEC_tree_heap_alloc", scope: !318, file: !318, line: 184, type: !3016, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3018)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!678, !671}
!3018 = !{!3019}
!3019 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3015, file: !318, line: 184, type: !671)
!3020 = !DILocation(line: 0, scope: !3015)
!3021 = !DILocation(line: 184, column: 1, scope: !3015)
!3022 = distinct !DISubprogram(name: "VEC_structure_heap_alloc", scope: !3, file: !3, line: 199, type: !3023, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3025)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!1977, !671}
!3025 = !{!3026}
!3026 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3022, file: !3, line: 199, type: !671)
!3027 = !DILocation(line: 0, scope: !3022)
!3028 = !DILocation(line: 199, column: 1, scope: !3022)
!3029 = distinct !DISubprogram(name: "program_redefines_malloc_p", scope: !3, file: !3, line: 3471, type: !2164, scopeLine: 3472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3030)
!3030 = !{!3031, !3032, !3033, !3034, !3035}
!3031 = !DILocalVariable(name: "c_node", scope: !3029, file: !3, line: 3473, type: !2686)
!3032 = !DILocalVariable(name: "c_node2", scope: !3029, file: !3, line: 3474, type: !2686)
!3033 = !DILocalVariable(name: "c_edge", scope: !3029, file: !3, line: 3475, type: !2691)
!3034 = !DILocalVariable(name: "fndecl2", scope: !3029, file: !3, line: 3476, type: !690)
!3035 = !DILocalVariable(name: "fname", scope: !3036, file: !3, line: 3486, type: !676)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 3485, column: 6)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 3484, column: 8)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 3481, column: 2)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 3480, column: 7)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 3480, column: 7)
!3041 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 3479, column: 5)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 3478, column: 3)
!3043 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 3478, column: 3)
!3044 = !DILocation(line: 3478, column: 8, scope: !3043)
!3045 = !DILocation(line: 0, scope: !3043)
!3046 = !DILocation(line: 0, scope: !3029)
!3047 = !DILocation(line: 3478, column: 3, scope: !3043)
!3048 = !DILocation(line: 3480, column: 29, scope: !3040)
!3049 = !DILocation(line: 3480, column: 12, scope: !3040)
!3050 = !DILocation(line: 0, scope: !3040)
!3051 = !DILocation(line: 3480, column: 7, scope: !3040)
!3052 = !DILocation(line: 3482, column: 22, scope: !3038)
!3053 = !DILocation(line: 3483, column: 23, scope: !3038)
!3054 = !DILocation(line: 3484, column: 32, scope: !3037)
!3055 = !DILocation(line: 3484, column: 8, scope: !3037)
!3056 = !DILocation(line: 3484, column: 8, scope: !3038)
!3057 = !DILocation(line: 3486, column: 29, scope: !3036)
!3058 = !DILocation(line: 0, scope: !3036)
!3059 = !DILocation(line: 3488, column: 40, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 3488, column: 12)
!3061 = !DILocation(line: 3488, column: 13, scope: !3060)
!3062 = !DILocation(line: 3488, column: 51, scope: !3060)
!3063 = !DILocation(line: 3489, column: 5, scope: !3060)
!3064 = !DILocation(line: 0, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 3496, column: 12)
!3066 = !DILocation(line: 3496, column: 12, scope: !3065)
!3067 = !DILocation(line: 3489, column: 9, scope: !3060)
!3068 = !DILocation(line: 3489, column: 38, scope: !3060)
!3069 = !DILocation(line: 3490, column: 5, scope: !3060)
!3070 = !DILocation(line: 3490, column: 38, scope: !3060)
!3071 = !DILocation(line: 3491, column: 5, scope: !3060)
!3072 = !DILocation(line: 3491, column: 38, scope: !3060)
!3073 = !DILocation(line: 3488, column: 12, scope: !3036)
!3074 = !DILocation(line: 3496, column: 41, scope: !3065)
!3075 = !DILocation(line: 3497, column: 5, scope: !3065)
!3076 = !DILocation(line: 3497, column: 9, scope: !3065)
!3077 = !DILocation(line: 3498, column: 5, scope: !3065)
!3078 = !DILocation(line: 3498, column: 9, scope: !3065)
!3079 = !DILocation(line: 3496, column: 12, scope: !3036)
!3080 = !DILocation(line: 3480, column: 63, scope: !3039)
!3081 = !DILocation(line: 3480, column: 7, scope: !3039)
!3082 = distinct !{!3082, !3051, !3083}
!3083 = !DILocation(line: 3501, column: 2, scope: !3040)
!3084 = !DILocation(line: 3478, column: 56, scope: !3042)
!3085 = !DILocation(line: 3478, column: 3, scope: !3042)
!3086 = distinct !{!3086, !3047, !3087}
!3087 = !DILocation(line: 3502, column: 5, scope: !3043)
!3088 = !DILocation(line: 3505, column: 1, scope: !3029)
!3089 = distinct !DISubprogram(name: "build_data_structure", scope: !3, file: !3, line: 3413, type: !3090, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3093)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null, !3092}
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!3093 = !{!3094, !3095, !3096, !3097, !3098, !3099, !3100, !3104}
!3094 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3089, file: !3, line: 3413, type: !3092)
!3095 = !DILocalVariable(name: "var", scope: !3089, file: !3, line: 3415, type: !690)
!3096 = !DILocalVariable(name: "type", scope: !3089, file: !3, line: 3415, type: !690)
!3097 = !DILocalVariable(name: "var_list", scope: !3089, file: !3, line: 3416, type: !690)
!3098 = !DILocalVariable(name: "current_varpool", scope: !3089, file: !3, line: 3417, type: !2789)
!3099 = !DILocalVariable(name: "c_node", scope: !3089, file: !3, line: 3418, type: !2686)
!3100 = !DILocalVariable(name: "avail", scope: !3101, file: !3, line: 3432, type: !622)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 3431, column: 5)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !3, line: 3430, column: 3)
!3103 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 3430, column: 3)
!3104 = !DILocalVariable(name: "fn", scope: !3105, file: !3, line: 3438, type: !1400)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 3437, column: 2)
!3106 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 3436, column: 11)
!3107 = !DILocation(line: 0, scope: !3089)
!3108 = !DILocation(line: 3415, column: 3, scope: !3089)
!3109 = !DILocation(line: 3421, column: 3, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 3421, column: 3)
!3111 = !DILocation(line: 0, scope: !3110)
!3112 = !DILocation(line: 3423, column: 30, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 3422, column: 5)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 3421, column: 3)
!3115 = !DILocation(line: 3424, column: 11, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 3424, column: 11)
!3117 = !DILocation(line: 3424, column: 11, scope: !3113)
!3118 = !DILocation(line: 3425, column: 17, scope: !3116)
!3119 = !DILocation(line: 3425, column: 2, scope: !3116)
!3120 = !DILocation(line: 3421, column: 3, scope: !3114)
!3121 = distinct !{!3121, !3109, !3122}
!3122 = !DILocation(line: 3426, column: 5, scope: !3110)
!3123 = !DILocation(line: 3430, column: 8, scope: !3103)
!3124 = !DILocation(line: 0, scope: !3103)
!3125 = !DILocation(line: 3430, column: 3, scope: !3103)
!3126 = !DILocation(line: 3433, column: 2, scope: !3101)
!3127 = !DILocation(line: 0, scope: !3101)
!3128 = !DILocation(line: 3436, column: 32, scope: !3106)
!3129 = !DILocation(line: 3438, column: 26, scope: !3105)
!3130 = !DILocation(line: 0, scope: !3105)
!3131 = !DILocation(line: 3440, column: 15, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 3440, column: 4)
!3133 = !DILocation(line: 3440, column: 9, scope: !3132)
!3134 = !DILocation(line: 0, scope: !3132)
!3135 = !DILocation(line: 3440, column: 4, scope: !3132)
!3136 = !DILocation(line: 3442, column: 12, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 3442, column: 12)
!3138 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 3440, column: 4)
!3139 = !DILocation(line: 3442, column: 12, scope: !3138)
!3140 = !DILocation(line: 3443, column: 18, scope: !3137)
!3141 = !DILocation(line: 3443, column: 3, scope: !3137)
!3142 = !DILocation(line: 3441, column: 15, scope: !3138)
!3143 = !DILocation(line: 3440, column: 4, scope: !3138)
!3144 = distinct !{!3144, !3135, !3145}
!3145 = !DILocation(line: 3443, column: 22, scope: !3132)
!3146 = !DILocation(line: 3445, column: 11, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 3445, column: 8)
!3148 = !DILocation(line: 3445, column: 8, scope: !3105)
!3149 = !DILocation(line: 3448, column: 8, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 3446, column: 6)
!3151 = !DILocation(line: 3454, column: 24, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 3454, column: 4)
!3153 = !DILocation(line: 3454, column: 9, scope: !3152)
!3154 = !DILocation(line: 0, scope: !3152)
!3155 = !DILocation(line: 3454, column: 4, scope: !3152)
!3156 = !DILocation(line: 3457, column: 14, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 3456, column: 6)
!3158 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 3454, column: 4)
!3159 = !DILocation(line: 3459, column: 12, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 3459, column: 12)
!3161 = !DILocation(line: 3459, column: 12, scope: !3157)
!3162 = !DILocation(line: 3460, column: 18, scope: !3160)
!3163 = !DILocation(line: 3460, column: 3, scope: !3160)
!3164 = !DILocation(line: 3455, column: 20, scope: !3158)
!3165 = !DILocation(line: 3454, column: 4, scope: !3158)
!3166 = distinct !{!3166, !3155, !3167}
!3167 = !DILocation(line: 3461, column: 6, scope: !3152)
!3168 = !DILocation(line: 3463, column: 5, scope: !3102)
!3169 = !DILocation(line: 3430, column: 56, scope: !3102)
!3170 = !DILocation(line: 3430, column: 3, scope: !3102)
!3171 = distinct !{!3171, !3125, !3172}
!3172 = !DILocation(line: 3463, column: 5, scope: !3103)
!3173 = !DILocation(line: 3464, column: 1, scope: !3089)
!3174 = distinct !DISubprogram(name: "analyze_struct_form", scope: !3, file: !3, line: 3399, type: !3090, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3175)
!3175 = !{!3176, !3177, !3178}
!3176 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3174, file: !3, line: 3399, type: !3092)
!3177 = !DILocalVariable(name: "str", scope: !3174, file: !3, line: 3401, type: !2069)
!3178 = !DILocalVariable(name: "i", scope: !3174, file: !3, line: 3402, type: !7)
!3179 = !DILocation(line: 0, scope: !3174)
!3180 = !DILocation(line: 3401, column: 3, scope: !3174)
!3181 = !DILocation(line: 3404, column: 8, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 3404, column: 3)
!3183 = !DILocation(line: 0, scope: !3182)
!3184 = !DILocation(line: 3404, column: 15, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3182, file: !3, line: 3404, column: 3)
!3186 = !DILocation(line: 3404, column: 3, scope: !3182)
!3187 = !DILocation(line: 3405, column: 24, scope: !3185)
!3188 = !DILocation(line: 3405, column: 5, scope: !3185)
!3189 = !DILocation(line: 3404, column: 61, scope: !3185)
!3190 = !DILocation(line: 3404, column: 3, scope: !3185)
!3191 = distinct !{!3191, !3186, !3192}
!3192 = !DILocation(line: 3405, column: 45, scope: !3182)
!3193 = !DILocation(line: 3406, column: 1, scope: !3174)
!3194 = distinct !DISubprogram(name: "exclude_escaping_types", scope: !3, file: !3, line: 3386, type: !3090, scopeLine: 3387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3195)
!3195 = !{!3196}
!3196 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3194, file: !3, line: 3386, type: !3092)
!3197 = !DILocation(line: 0, scope: !3194)
!3198 = !DILocation(line: 3388, column: 3, scope: !3194)
!3199 = !DILocation(line: 3389, column: 3, scope: !3194)
!3200 = !DILocation(line: 3390, column: 3, scope: !3194)
!3201 = !DILocation(line: 3391, column: 1, scope: !3194)
!3202 = distinct !DISubprogram(name: "exclude_types_with_bit_fields", scope: !3, file: !3, line: 3368, type: !3090, scopeLine: 3369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3203)
!3203 = !{!3204, !3205, !3206}
!3204 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3202, file: !3, line: 3368, type: !3092)
!3205 = !DILocalVariable(name: "str", scope: !3202, file: !3, line: 3370, type: !2069)
!3206 = !DILocalVariable(name: "i", scope: !3202, file: !3, line: 3371, type: !7)
!3207 = !DILocation(line: 0, scope: !3202)
!3208 = !DILocation(line: 3370, column: 3, scope: !3202)
!3209 = !DILocation(line: 3373, column: 8, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 3373, column: 3)
!3211 = !DILocation(line: 0, scope: !3210)
!3212 = !DILocation(line: 3373, column: 15, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 3373, column: 3)
!3214 = !DILocation(line: 3373, column: 3, scope: !3210)
!3215 = !DILocation(line: 3374, column: 22, scope: !3213)
!3216 = !DILocation(line: 3374, column: 5, scope: !3213)
!3217 = !DILocation(line: 3373, column: 61, scope: !3213)
!3218 = !DILocation(line: 3373, column: 3, scope: !3213)
!3219 = distinct !{!3219, !3214, !3220}
!3220 = !DILocation(line: 3374, column: 43, scope: !3210)
!3221 = !DILocation(line: 3375, column: 1, scope: !3202)
!3222 = distinct !DISubprogram(name: "remove_unsuitable_types", scope: !3, file: !3, line: 3347, type: !3223, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3225)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{null, !678}
!3225 = !{!3226, !3227, !3228, !3229, !3230}
!3226 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3222, file: !3, line: 3347, type: !678)
!3227 = !DILocalVariable(name: "str", scope: !3222, file: !3, line: 3349, type: !2069)
!3228 = !DILocalVariable(name: "type", scope: !3222, file: !3, line: 3350, type: !690)
!3229 = !DILocalVariable(name: "i", scope: !3222, file: !3, line: 3351, type: !7)
!3230 = !DILocalVariable(name: "j", scope: !3222, file: !3, line: 3351, type: !7)
!3231 = !DILocation(line: 0, scope: !3222)
!3232 = !DILocation(line: 3349, column: 3, scope: !3222)
!3233 = !DILocation(line: 3350, column: 3, scope: !3222)
!3234 = !DILocation(line: 0, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 3353, column: 3)
!3236 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 3353, column: 3)
!3237 = !DILocation(line: 3353, column: 8, scope: !3236)
!3238 = !DILocation(line: 0, scope: !3236)
!3239 = !DILocation(line: 3353, column: 15, scope: !3235)
!3240 = !DILocation(line: 3353, column: 3, scope: !3236)
!3241 = !DILocation(line: 3354, column: 5, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 3354, column: 5)
!3243 = !DILocation(line: 0, scope: !3242)
!3244 = !DILocation(line: 3354, column: 17, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 3354, column: 5)
!3246 = !DILocation(line: 3355, column: 27, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 3355, column: 11)
!3248 = !DILocation(line: 3355, column: 32, scope: !3247)
!3249 = !DILocation(line: 3355, column: 38, scope: !3247)
!3250 = !DILocation(line: 3355, column: 11, scope: !3247)
!3251 = !DILocation(line: 3355, column: 11, scope: !3245)
!3252 = !DILocation(line: 3357, column: 4, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 3356, column: 2)
!3254 = !DILocation(line: 3358, column: 4, scope: !3253)
!3255 = !DILocation(line: 3354, column: 63, scope: !3245)
!3256 = !DILocation(line: 3354, column: 5, scope: !3245)
!3257 = distinct !{!3257, !3241, !3258}
!3258 = !DILocation(line: 3359, column: 2, scope: !3242)
!3259 = !DILocation(line: 3353, column: 63, scope: !3235)
!3260 = !DILocation(line: 3353, column: 3, scope: !3235)
!3261 = distinct !{!3261, !3240, !3262}
!3262 = !DILocation(line: 3359, column: 2, scope: !3236)
!3263 = !DILocation(line: 3360, column: 1, scope: !3222)
!3264 = distinct !DISubprogram(name: "VEC_tree_heap_free", scope: !318, file: !318, line: 184, type: !3090, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3265)
!3265 = !{!3266}
!3266 = !DILocalVariable(name: "vec_", arg: 1, scope: !3264, file: !318, line: 184, type: !3092)
!3267 = !DILocation(line: 0, scope: !3264)
!3268 = !DILocation(line: 184, column: 1, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3264, file: !318, line: 184, column: 1)
!3270 = !DILocation(line: 184, column: 1, scope: !3264)
!3271 = distinct !DISubprogram(name: "is_gimple_call", scope: !584, file: !584, line: 1870, type: !3272, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3274)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!670, !2036}
!3274 = !{!3275}
!3275 = !DILocalVariable(name: "gs", arg: 1, scope: !3271, file: !584, line: 1870, type: !2036)
!3276 = !DILocation(line: 0, scope: !3271)
!3277 = !DILocation(line: 1872, column: 10, scope: !3271)
!3278 = !DILocation(line: 1872, column: 27, scope: !3271)
!3279 = !DILocation(line: 1872, column: 3, scope: !3271)
!3280 = distinct !DISubprogram(name: "gimple_code", scope: !584, file: !584, line: 1052, type: !3281, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3283)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!583, !2036}
!3283 = !{!3284}
!3284 = !DILocalVariable(name: "g", arg: 1, scope: !3280, file: !584, line: 1052, type: !2036)
!3285 = !DILocation(line: 0, scope: !3280)
!3286 = !DILocation(line: 1054, column: 20, scope: !3280)
!3287 = !DILocation(line: 1054, column: 3, scope: !3280)
!3288 = distinct !DISubprogram(name: "is_candidate", scope: !3, file: !3, line: 2014, type: !3289, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3291)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!670, !690, !1048, !3092}
!3291 = !{!3292, !3293, !3294, !3295, !3296}
!3292 = !DILocalVariable(name: "var", arg: 1, scope: !3288, file: !3, line: 2014, type: !690)
!3293 = !DILocalVariable(name: "type_p", arg: 2, scope: !3288, file: !3, line: 2014, type: !1048)
!3294 = !DILocalVariable(name: "unsuitable_types", arg: 3, scope: !3288, file: !3, line: 2014, type: !3092)
!3295 = !DILocalVariable(name: "type", scope: !3288, file: !3, line: 2016, type: !690)
!3296 = !DILocalVariable(name: "initialized", scope: !3288, file: !3, line: 2017, type: !670)
!3297 = !DILocation(line: 0, scope: !3288)
!3298 = !DILocation(line: 2019, column: 11, scope: !3288)
!3299 = !DILocation(line: 2021, column: 8, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 2021, column: 7)
!3301 = !DILocation(line: 2021, column: 7, scope: !3288)
!3302 = !DILocation(line: 2025, column: 7, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 2025, column: 7)
!3304 = !DILocation(line: 2025, column: 23, scope: !3303)
!3305 = !DILocation(line: 2026, column: 7, scope: !3303)
!3306 = !DILocation(line: 2026, column: 10, scope: !3303)
!3307 = !DILocation(line: 2026, column: 29, scope: !3303)
!3308 = !DILocation(line: 2025, column: 7, scope: !3288)
!3309 = !DILocation(line: 2029, column: 10, scope: !3288)
!3310 = !DILocation(line: 2031, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 2031, column: 7)
!3312 = !DILocation(line: 2031, column: 7, scope: !3288)
!3313 = !DILocation(line: 2033, column: 14, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 2032, column: 5)
!3315 = !DILocation(line: 2034, column: 11, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 2034, column: 11)
!3317 = !DILocation(line: 2034, column: 28, scope: !3316)
!3318 = !DILocation(line: 2034, column: 11, scope: !3314)
!3319 = !DILocation(line: 2038, column: 8, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2038, column: 8)
!3321 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 2037, column: 2)
!3322 = !DILocation(line: 2038, column: 23, scope: !3320)
!3323 = !DILocation(line: 2038, column: 20, scope: !3320)
!3324 = !DILocation(line: 2038, column: 43, scope: !3320)
!3325 = !DILocation(line: 2038, column: 8, scope: !3321)
!3326 = !DILocation(line: 2040, column: 12, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 2040, column: 12)
!3328 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 2039, column: 6)
!3329 = !DILocation(line: 2040, column: 12, scope: !3328)
!3330 = !DILocation(line: 2042, column: 5, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 2041, column: 3)
!3332 = !DILocation(line: 2043, column: 25, scope: !3331)
!3333 = !DILocation(line: 2043, column: 5, scope: !3331)
!3334 = !DILocation(line: 2044, column: 14, scope: !3331)
!3335 = !DILocation(line: 2044, column: 5, scope: !3331)
!3336 = !DILocation(line: 2045, column: 3, scope: !3331)
!3337 = !DILocation(line: 2046, column: 8, scope: !3328)
!3338 = !DILocation(line: 2047, column: 6, scope: !3328)
!3339 = !DILocation(line: 2048, column: 12, scope: !3321)
!3340 = !DILocation(line: 2049, column: 4, scope: !3321)
!3341 = !DILocation(line: 2054, column: 1, scope: !3288)
!3342 = distinct !DISubprogram(name: "add_structure", scope: !3, file: !3, line: 2986, type: !3343, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3345)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{null, !690}
!3345 = !{!3346, !3347, !3348, !3349}
!3346 = !DILocalVariable(name: "type", arg: 1, scope: !3342, file: !3, line: 2986, type: !690)
!3347 = !DILocalVariable(name: "node", scope: !3342, file: !3, line: 2988, type: !1990)
!3348 = !DILocalVariable(name: "i", scope: !3342, file: !3, line: 2989, type: !7)
!3349 = !DILocalVariable(name: "num_fields", scope: !3342, file: !3, line: 2990, type: !671)
!3350 = !DILocation(line: 0, scope: !3342)
!3351 = !DILocation(line: 2988, column: 3, scope: !3342)
!3352 = !DILocation(line: 2992, column: 10, scope: !3342)
!3353 = !DILocation(line: 2994, column: 7, scope: !3342)
!3354 = !DILocation(line: 2996, column: 12, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 2996, column: 7)
!3356 = !DILocation(line: 2996, column: 9, scope: !3355)
!3357 = !DILocation(line: 2996, column: 7, scope: !3342)
!3358 = !DILocation(line: 2999, column: 16, scope: !3342)
!3359 = !DILocation(line: 3000, column: 8, scope: !3342)
!3360 = !DILocation(line: 3000, column: 13, scope: !3342)
!3361 = !DILocation(line: 3001, column: 8, scope: !3342)
!3362 = !DILocation(line: 3001, column: 19, scope: !3342)
!3363 = !DILocation(line: 3002, column: 17, scope: !3342)
!3364 = !DILocation(line: 3002, column: 8, scope: !3342)
!3365 = !DILocation(line: 3002, column: 15, scope: !3342)
!3366 = !DILocation(line: 3003, column: 8, scope: !3342)
!3367 = !DILocation(line: 3003, column: 26, scope: !3342)
!3368 = !DILocation(line: 3004, column: 15, scope: !3342)
!3369 = !DILocation(line: 3004, column: 8, scope: !3342)
!3370 = !DILocation(line: 3004, column: 13, scope: !3342)
!3371 = !DILocation(line: 3005, column: 20, scope: !3342)
!3372 = !DILocation(line: 3005, column: 8, scope: !3342)
!3373 = !DILocation(line: 3005, column: 18, scope: !3342)
!3374 = !DILocation(line: 3006, column: 8, scope: !3342)
!3375 = !DILocation(line: 3006, column: 14, scope: !3342)
!3376 = !DILocation(line: 3008, column: 3, scope: !3342)
!3377 = !DILocation(line: 3010, column: 7, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 3010, column: 7)
!3379 = !DILocation(line: 3010, column: 7, scope: !3342)
!3380 = !DILocation(line: 3012, column: 7, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 3011, column: 5)
!3382 = !DILocation(line: 3013, column: 27, scope: !3381)
!3383 = !DILocation(line: 3013, column: 7, scope: !3381)
!3384 = !DILocation(line: 3014, column: 16, scope: !3381)
!3385 = !DILocation(line: 3014, column: 7, scope: !3381)
!3386 = !DILocation(line: 3015, column: 5, scope: !3381)
!3387 = !DILocation(line: 3016, column: 1, scope: !3342)
!3388 = distinct !DISubprogram(name: "get_type_of_var", scope: !3, file: !3, line: 222, type: !3389, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3391)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!690, !690}
!3391 = !{!3392}
!3392 = !DILocalVariable(name: "var", arg: 1, scope: !3388, file: !3, line: 222, type: !690)
!3393 = !DILocation(line: 0, scope: !3388)
!3394 = !DILocation(line: 224, column: 8, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 224, column: 7)
!3396 = !DILocation(line: 224, column: 7, scope: !3388)
!3397 = !DILocation(line: 227, column: 7, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 227, column: 7)
!3399 = !DILocation(line: 227, column: 23, scope: !3398)
!3400 = !DILocation(line: 227, column: 7, scope: !3388)
!3401 = !DILocation(line: 228, column: 14, scope: !3398)
!3402 = !DILocation(line: 228, column: 7, scope: !3398)
!3403 = !DILocation(line: 230, column: 12, scope: !3398)
!3404 = !DILocation(line: 230, column: 5, scope: !3398)
!3405 = !DILocation(line: 231, column: 1, scope: !3388)
!3406 = distinct !DISubprogram(name: "strip_type", scope: !3, file: !3, line: 208, type: !3389, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3407)
!3407 = !{!3408}
!3408 = !DILocalVariable(name: "type", arg: 1, scope: !3406, file: !3, line: 208, type: !690)
!3409 = !DILocation(line: 0, scope: !3406)
!3410 = !DILocation(line: 210, column: 3, scope: !3406)
!3411 = !DILocation(line: 212, column: 3, scope: !3406)
!3412 = !DILocation(line: 212, column: 10, scope: !3406)
!3413 = !DILocation(line: 213, column: 23, scope: !3406)
!3414 = !DILocation(line: 213, column: 3, scope: !3406)
!3415 = !DILocation(line: 214, column: 12, scope: !3406)
!3416 = distinct !{!3416, !3411, !3415}
!3417 = !DILocation(line: 216, column: 3, scope: !3406)
!3418 = distinct !DISubprogram(name: "add_unsuitable_type", scope: !3, file: !3, line: 1555, type: !3419, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3421)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{null, !3092, !690}
!3421 = !{!3422, !3423, !3424, !3425}
!3422 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3418, file: !3, line: 1555, type: !3092)
!3423 = !DILocalVariable(name: "type", arg: 2, scope: !3418, file: !3, line: 1555, type: !690)
!3424 = !DILocalVariable(name: "i", scope: !3418, file: !3, line: 1557, type: !7)
!3425 = !DILocalVariable(name: "t", scope: !3418, file: !3, line: 1558, type: !690)
!3426 = !DILocation(line: 0, scope: !3418)
!3427 = !DILocation(line: 1558, column: 3, scope: !3418)
!3428 = !DILocation(line: 1560, column: 8, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1560, column: 7)
!3430 = !DILocation(line: 1560, column: 7, scope: !3418)
!3431 = !DILocation(line: 1563, column: 10, scope: !3418)
!3432 = !DILocation(line: 1565, column: 8, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1565, column: 3)
!3434 = !DILocation(line: 0, scope: !3433)
!3435 = !DILocation(line: 1565, column: 15, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 1565, column: 3)
!3437 = !DILocation(line: 1565, column: 3, scope: !3433)
!3438 = !DILocation(line: 1566, column: 25, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1566, column: 9)
!3440 = !DILocation(line: 1566, column: 9, scope: !3439)
!3441 = !DILocation(line: 1566, column: 9, scope: !3436)
!3442 = !DILocation(line: 1565, column: 61, scope: !3436)
!3443 = !DILocation(line: 1565, column: 3, scope: !3436)
!3444 = distinct !{!3444, !3437, !3445}
!3445 = !DILocation(line: 1567, column: 7, scope: !3433)
!3446 = !DILocation(line: 1569, column: 12, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1569, column: 7)
!3448 = !DILocation(line: 1569, column: 9, scope: !3447)
!3449 = !DILocation(line: 1569, column: 7, scope: !3418)
!3450 = !DILocation(line: 1570, column: 5, scope: !3447)
!3451 = !DILocation(line: 1571, column: 1, scope: !3418)
!3452 = distinct !DISubprogram(name: "VEC_tree_base_iterate", scope: !318, file: !318, line: 182, type: !3453, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3457)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!671, !3455, !7, !1048}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!3457 = !{!3458, !3459, !3460}
!3458 = !DILocalVariable(name: "vec_", arg: 1, scope: !3452, file: !318, line: 182, type: !3455)
!3459 = !DILocalVariable(name: "ix_", arg: 2, scope: !3452, file: !318, line: 182, type: !7)
!3460 = !DILocalVariable(name: "ptr", arg: 3, scope: !3452, file: !318, line: 182, type: !1048)
!3461 = !DILocation(line: 0, scope: !3452)
!3462 = !DILocation(line: 182, column: 1, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3452, file: !318, line: 182, column: 1)
!3464 = !DILocation(line: 182, column: 1, scope: !3452)
!3465 = !DILocation(line: 182, column: 1, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3463, file: !318, line: 182, column: 1)
!3467 = !DILocation(line: 182, column: 1, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !318, line: 182, column: 1)
!3469 = !DILocation(line: 0, scope: !3463)
!3470 = distinct !DISubprogram(name: "is_equal_types", scope: !3, file: !3, line: 1599, type: !3471, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!670, !690, !690}
!3473 = !{!3474, !3475, !3476, !3477, !3478, !3481, !3482, !3484, !3485, !3486, !3487, !3488}
!3474 = !DILocalVariable(name: "type1", arg: 1, scope: !3470, file: !3, line: 1599, type: !690)
!3475 = !DILocalVariable(name: "type2", arg: 2, scope: !3470, file: !3, line: 1599, type: !690)
!3476 = !DILocalVariable(name: "name1", scope: !3470, file: !3, line: 1601, type: !676)
!3477 = !DILocalVariable(name: "name2", scope: !3470, file: !3, line: 1601, type: !676)
!3478 = !DILocalVariable(name: "field1", scope: !3479, file: !3, line: 1639, type: !690)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1638, column: 7)
!3480 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1626, column: 5)
!3481 = !DILocalVariable(name: "field2", scope: !3479, file: !3, line: 1639, type: !690)
!3482 = !DILocalVariable(name: "d1", scope: !3483, file: !3, line: 1666, type: !690)
!3483 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1665, column: 7)
!3484 = !DILocalVariable(name: "d2", scope: !3483, file: !3, line: 1666, type: !690)
!3485 = !DILocalVariable(name: "max1", scope: !3483, file: !3, line: 1667, type: !690)
!3486 = !DILocalVariable(name: "min1", scope: !3483, file: !3, line: 1667, type: !690)
!3487 = !DILocalVariable(name: "max2", scope: !3483, file: !3, line: 1667, type: !690)
!3488 = !DILocalVariable(name: "min2", scope: !3483, file: !3, line: 1667, type: !690)
!3489 = !DILocation(line: 1630, column: 9, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1629, column: 7)
!3491 = !DILocation(line: 0, scope: !3470)
!3492 = !DILocation(line: 1603, column: 9, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1603, column: 7)
!3494 = !DILocation(line: 1603, column: 18, scope: !3493)
!3495 = !DILocation(line: 1603, column: 15, scope: !3493)
!3496 = !DILocation(line: 1604, column: 11, scope: !3493)
!3497 = !DILocation(line: 1604, column: 20, scope: !3493)
!3498 = !DILocation(line: 1604, column: 17, scope: !3493)
!3499 = !DILocation(line: 1607, column: 14, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1607, column: 7)
!3501 = !DILocation(line: 1610, column: 7, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1610, column: 7)
!3503 = !DILocation(line: 1610, column: 28, scope: !3502)
!3504 = !DILocation(line: 1610, column: 25, scope: !3502)
!3505 = !DILocation(line: 1610, column: 7, scope: !3470)
!3506 = !DILocation(line: 1613, column: 13, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1613, column: 7)
!3508 = !DILocation(line: 1613, column: 7, scope: !3470)
!3509 = !DILocation(line: 1616, column: 7, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1616, column: 7)
!3511 = !DILocation(line: 1616, column: 36, scope: !3510)
!3512 = !DILocation(line: 1616, column: 33, scope: !3510)
!3513 = !DILocation(line: 1616, column: 7, scope: !3470)
!3514 = !DILocation(line: 1619, column: 11, scope: !3470)
!3515 = !DILocation(line: 1620, column: 11, scope: !3470)
!3516 = !DILocation(line: 1622, column: 7, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 1622, column: 7)
!3518 = !DILocation(line: 1622, column: 16, scope: !3517)
!3519 = !DILocation(line: 1622, column: 13, scope: !3517)
!3520 = !DILocation(line: 1623, column: 12, scope: !3517)
!3521 = !DILocation(line: 1623, column: 34, scope: !3517)
!3522 = !DILocation(line: 1623, column: 5, scope: !3517)
!3523 = !DILocation(line: 1625, column: 11, scope: !3470)
!3524 = !DILocation(line: 1625, column: 3, scope: !3470)
!3525 = !DILocation(line: 1630, column: 25, scope: !3490)
!3526 = !DILocation(line: 1630, column: 44, scope: !3490)
!3527 = !DILocation(line: 1642, column: 16, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1642, column: 2)
!3529 = !DILocation(line: 1642, column: 46, scope: !3528)
!3530 = !DILocation(line: 1642, column: 7, scope: !3528)
!3531 = !DILocation(line: 0, scope: !3528)
!3532 = !DILocation(line: 0, scope: !3479)
!3533 = !DILocation(line: 1643, column: 7, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 1642, column: 2)
!3535 = !DILocation(line: 1643, column: 14, scope: !3534)
!3536 = !DILocation(line: 1642, column: 2, scope: !3528)
!3537 = !DILocation(line: 1646, column: 11, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1646, column: 10)
!3539 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1645, column: 4)
!3540 = !DILocation(line: 1646, column: 10, scope: !3539)
!3541 = !DILocation(line: 1644, column: 16, scope: !3534)
!3542 = !DILocation(line: 1644, column: 46, scope: !3534)
!3543 = !DILocation(line: 1642, column: 2, scope: !3534)
!3544 = distinct !{!3544, !3536, !3545}
!3545 = !DILocation(line: 1648, column: 4, scope: !3528)
!3546 = !DILocation(line: 1649, column: 6, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1649, column: 6)
!3548 = !DILocation(line: 1649, column: 16, scope: !3547)
!3549 = !DILocation(line: 1649, column: 13, scope: !3547)
!3550 = !DILocation(line: 1658, column: 31, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 1658, column: 6)
!3552 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1657, column: 7)
!3553 = !DILocation(line: 1658, column: 28, scope: !3551)
!3554 = !DILocation(line: 1659, column: 6, scope: !3551)
!3555 = !DILocation(line: 1659, column: 9, scope: !3551)
!3556 = !DILocation(line: 1659, column: 35, scope: !3551)
!3557 = !DILocation(line: 1659, column: 32, scope: !3551)
!3558 = !DILocation(line: 1658, column: 6, scope: !3552)
!3559 = !DILocation(line: 1669, column: 23, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1669, column: 6)
!3561 = !DILocation(line: 1669, column: 42, scope: !3560)
!3562 = !DILocation(line: 1669, column: 7, scope: !3560)
!3563 = !DILocation(line: 1669, column: 6, scope: !3483)
!3564 = !DILocation(line: 1672, column: 7, scope: !3483)
!3565 = !DILocation(line: 0, scope: !3483)
!3566 = !DILocation(line: 1673, column: 7, scope: !3483)
!3567 = !DILocation(line: 1675, column: 7, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1675, column: 6)
!3569 = !DILocation(line: 1675, column: 14, scope: !3568)
!3570 = !DILocation(line: 1675, column: 10, scope: !3568)
!3571 = !DILocation(line: 1678, column: 9, scope: !3483)
!3572 = !DILocation(line: 1679, column: 9, scope: !3483)
!3573 = !DILocation(line: 1680, column: 9, scope: !3483)
!3574 = !DILocation(line: 1681, column: 9, scope: !3483)
!3575 = !DILocation(line: 1683, column: 6, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1683, column: 6)
!3577 = !DILocation(line: 1683, column: 14, scope: !3576)
!3578 = !DILocation(line: 1683, column: 11, scope: !3576)
!3579 = !DILocation(line: 1683, column: 22, scope: !3576)
!3580 = !DILocation(line: 1683, column: 30, scope: !3576)
!3581 = !DILocation(line: 1684, column: 9, scope: !3576)
!3582 = !DILocation(line: 1684, column: 29, scope: !3576)
!3583 = !DILocation(line: 1684, column: 26, scope: !3576)
!3584 = !DILocation(line: 1685, column: 6, scope: !3576)
!3585 = !DILocation(line: 1685, column: 26, scope: !3576)
!3586 = !DILocation(line: 1686, column: 6, scope: !3576)
!3587 = !DILocation(line: 1686, column: 9, scope: !3576)
!3588 = !DILocation(line: 1686, column: 29, scope: !3576)
!3589 = !DILocation(line: 1686, column: 26, scope: !3576)
!3590 = !DILocation(line: 1687, column: 6, scope: !3576)
!3591 = !DILocation(line: 1687, column: 26, scope: !3576)
!3592 = !DILocation(line: 1688, column: 6, scope: !3576)
!3593 = !DILocation(line: 1688, column: 9, scope: !3576)
!3594 = !DILocation(line: 1689, column: 6, scope: !3576)
!3595 = !DILocation(line: 1689, column: 9, scope: !3576)
!3596 = !DILocation(line: 1683, column: 6, scope: !3483)
!3597 = !DILocation(line: 1691, column: 7, scope: !3480)
!3598 = !DILocation(line: 1695, column: 2, scope: !3480)
!3599 = !DILocation(line: 1696, column: 5, scope: !3480)
!3600 = !DILocation(line: 1698, column: 3, scope: !3470)
!3601 = !DILocation(line: 1699, column: 1, scope: !3470)
!3602 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !318, file: !318, line: 182, type: !3603, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3605)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!7, !3455}
!3605 = !{!3606}
!3606 = !DILocalVariable(name: "vec_", arg: 1, scope: !3602, file: !318, line: 182, type: !3455)
!3607 = !DILocation(line: 0, scope: !3602)
!3608 = !DILocation(line: 182, column: 1, scope: !3602)
!3609 = distinct !DISubprogram(name: "VEC_tree_heap_safe_push", scope: !318, file: !318, line: 184, type: !3610, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3612)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!1048, !3092, !690}
!3612 = !{!3613, !3614}
!3613 = !DILocalVariable(name: "vec_", arg: 1, scope: !3609, file: !318, line: 184, type: !3092)
!3614 = !DILocalVariable(name: "obj_", arg: 2, scope: !3609, file: !318, line: 184, type: !690)
!3615 = !DILocation(line: 0, scope: !3609)
!3616 = !DILocation(line: 184, column: 1, scope: !3609)
!3617 = distinct !DISubprogram(name: "get_type_name", scope: !3, file: !3, line: 1576, type: !3618, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3620)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!676, !690}
!3620 = !{!3621}
!3621 = !DILocalVariable(name: "type", arg: 1, scope: !3617, file: !3, line: 1576, type: !690)
!3622 = !DILocation(line: 0, scope: !3617)
!3623 = !DILocation(line: 1578, column: 9, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1578, column: 7)
!3625 = !DILocation(line: 1578, column: 7, scope: !3617)
!3626 = !DILocation(line: 1581, column: 7, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1581, column: 7)
!3628 = !DILocation(line: 1581, column: 36, scope: !3627)
!3629 = !DILocation(line: 1581, column: 7, scope: !3617)
!3630 = !DILocation(line: 1582, column: 12, scope: !3627)
!3631 = !DILocation(line: 1582, column: 5, scope: !3627)
!3632 = !DILocation(line: 1583, column: 41, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1583, column: 12)
!3634 = !DILocation(line: 1584, column: 5, scope: !3633)
!3635 = !DILocation(line: 1584, column: 8, scope: !3633)
!3636 = !DILocation(line: 1583, column: 12, scope: !3627)
!3637 = !DILocation(line: 1585, column: 12, scope: !3633)
!3638 = !DILocation(line: 1585, column: 5, scope: !3633)
!3639 = !DILocation(line: 1588, column: 1, scope: !3617)
!3640 = distinct !DISubprogram(name: "compare_fields", scope: !3, file: !3, line: 255, type: !3471, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3641)
!3641 = !{!3642, !3643, !3644, !3647}
!3642 = !DILocalVariable(name: "field1", arg: 1, scope: !3640, file: !3, line: 255, type: !690)
!3643 = !DILocalVariable(name: "field2", arg: 2, scope: !3640, file: !3, line: 255, type: !690)
!3644 = !DILocalVariable(name: "name1", scope: !3645, file: !3, line: 259, type: !676)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 258, column: 5)
!3646 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 257, column: 7)
!3647 = !DILocalVariable(name: "name2", scope: !3645, file: !3, line: 260, type: !676)
!3648 = !DILocation(line: 0, scope: !3640)
!3649 = !DILocation(line: 257, column: 7, scope: !3646)
!3650 = !DILocation(line: 257, column: 26, scope: !3646)
!3651 = !DILocation(line: 257, column: 29, scope: !3646)
!3652 = !DILocation(line: 257, column: 7, scope: !3640)
!3653 = !DILocation(line: 259, column: 27, scope: !3645)
!3654 = !DILocation(line: 0, scope: !3645)
!3655 = !DILocation(line: 260, column: 27, scope: !3645)
!3656 = !DILocation(line: 262, column: 7, scope: !3645)
!3657 = !DILocation(line: 264, column: 11, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 264, column: 11)
!3659 = !DILocation(line: 268, column: 31, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 268, column: 12)
!3661 = !DILocation(line: 268, column: 34, scope: !3660)
!3662 = !DILocation(line: 268, column: 12, scope: !3646)
!3663 = !DILocation(line: 271, column: 24, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 271, column: 7)
!3665 = !DILocation(line: 271, column: 44, scope: !3664)
!3666 = !DILocation(line: 271, column: 8, scope: !3664)
!3667 = !DILocation(line: 275, column: 1, scope: !3640)
!3668 = distinct !DISubprogram(name: "VEC_tree_heap_reserve", scope: !318, file: !318, line: 184, type: !3669, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3671)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!671, !3092, !671}
!3671 = !{!3672, !3673, !3674}
!3672 = !DILocalVariable(name: "vec_", arg: 1, scope: !3668, file: !318, line: 184, type: !3092)
!3673 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3668, file: !318, line: 184, type: !671)
!3674 = !DILocalVariable(name: "extend", scope: !3668, file: !318, line: 184, type: !671)
!3675 = !DILocation(line: 0, scope: !3668)
!3676 = !DILocation(line: 184, column: 1, scope: !3668)
!3677 = !DILocation(line: 184, column: 1, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3668, file: !318, line: 184, column: 1)
!3679 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !318, file: !318, line: 182, type: !3680, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3683)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!1048, !3682, !690}
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!3683 = !{!3684, !3685, !3686}
!3684 = !DILocalVariable(name: "vec_", arg: 1, scope: !3679, file: !318, line: 182, type: !3682)
!3685 = !DILocalVariable(name: "obj_", arg: 2, scope: !3679, file: !318, line: 182, type: !690)
!3686 = !DILocalVariable(name: "slot_", scope: !3679, file: !318, line: 182, type: !1048)
!3687 = !DILocation(line: 0, scope: !3679)
!3688 = !DILocation(line: 182, column: 1, scope: !3679)
!3689 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !318, file: !318, line: 182, type: !3690, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!671, !3682, !671}
!3692 = !{!3693, !3694}
!3693 = !DILocalVariable(name: "vec_", arg: 1, scope: !3689, file: !318, line: 182, type: !3682)
!3694 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3689, file: !318, line: 182, type: !671)
!3695 = !DILocation(line: 0, scope: !3689)
!3696 = !DILocation(line: 182, column: 1, scope: !3689)
!3697 = distinct !DISubprogram(name: "find_structure", scope: !3, file: !3, line: 1055, type: !3698, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3700)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!7, !690}
!3700 = !{!3701, !3702, !3703}
!3701 = !DILocalVariable(name: "type", arg: 1, scope: !3697, file: !3, line: 1055, type: !690)
!3702 = !DILocalVariable(name: "str", scope: !3697, file: !3, line: 1057, type: !2069)
!3703 = !DILocalVariable(name: "i", scope: !3697, file: !3, line: 1058, type: !7)
!3704 = !DILocation(line: 0, scope: !3697)
!3705 = !DILocation(line: 1057, column: 3, scope: !3697)
!3706 = !DILocation(line: 1060, column: 10, scope: !3697)
!3707 = !DILocation(line: 1062, column: 8, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 1062, column: 3)
!3709 = !DILocation(line: 0, scope: !3708)
!3710 = !DILocation(line: 1062, column: 15, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 1062, column: 3)
!3712 = !DILocation(line: 1062, column: 3, scope: !3708)
!3713 = !DILocation(line: 1063, column: 25, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 1063, column: 9)
!3715 = !DILocation(line: 1063, column: 30, scope: !3714)
!3716 = !DILocation(line: 1063, column: 9, scope: !3714)
!3717 = !DILocation(line: 1063, column: 9, scope: !3711)
!3718 = !DILocation(line: 1062, column: 61, scope: !3711)
!3719 = !DILocation(line: 1062, column: 3, scope: !3711)
!3720 = distinct !{!3720, !3712, !3721}
!3721 = !DILocation(line: 1064, column: 14, scope: !3708)
!3722 = !DILocation(line: 1066, column: 10, scope: !3697)
!3723 = !DILocation(line: 1066, column: 3, scope: !3697)
!3724 = !DILocation(line: 1067, column: 1, scope: !3697)
!3725 = distinct !DISubprogram(name: "VEC_structure_base_length", scope: !3, file: !3, line: 198, type: !3726, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3730)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!7, !3728}
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1982)
!3730 = !{!3731}
!3731 = !DILocalVariable(name: "vec_", arg: 1, scope: !3725, file: !3, line: 198, type: !3728)
!3732 = !DILocation(line: 0, scope: !3725)
!3733 = !DILocation(line: 198, column: 1, scope: !3725)
!3734 = distinct !DISubprogram(name: "get_fields", scope: !3, file: !3, line: 2337, type: !3735, scopeLine: 2338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3737)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!1997, !690, !671}
!3737 = !{!3738, !3739, !3740, !3741, !3742}
!3738 = !DILocalVariable(name: "struct_decl", arg: 1, scope: !3734, file: !3, line: 2337, type: !690)
!3739 = !DILocalVariable(name: "num_fields", arg: 2, scope: !3734, file: !3, line: 2337, type: !671)
!3740 = !DILocalVariable(name: "list", scope: !3734, file: !3, line: 2339, type: !1997)
!3741 = !DILocalVariable(name: "t", scope: !3734, file: !3, line: 2340, type: !690)
!3742 = !DILocalVariable(name: "idx", scope: !3734, file: !3, line: 2341, type: !671)
!3743 = !DILocation(line: 0, scope: !3734)
!3744 = !DILocation(line: 2340, column: 12, scope: !3734)
!3745 = !DILocation(line: 2343, column: 10, scope: !3734)
!3746 = !DILocation(line: 2345, column: 8, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 2345, column: 3)
!3748 = !DILocation(line: 2345, column: 3, scope: !3747)
!3749 = !DILocation(line: 2346, column: 9, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 2346, column: 9)
!3751 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 2345, column: 3)
!3752 = !DILocation(line: 2346, column: 23, scope: !3750)
!3753 = !DILocation(line: 2346, column: 9, scope: !3751)
!3754 = !DILocation(line: 2348, column: 12, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 2347, column: 7)
!3756 = !DILocation(line: 2348, column: 18, scope: !3755)
!3757 = !DILocation(line: 2349, column: 12, scope: !3755)
!3758 = !DILocation(line: 2349, column: 17, scope: !3755)
!3759 = !DILocation(line: 2351, column: 4, scope: !3755)
!3760 = !DILocation(line: 2350, column: 12, scope: !3755)
!3761 = !DILocation(line: 2350, column: 22, scope: !3755)
!3762 = !DILocation(line: 2352, column: 12, scope: !3755)
!3763 = !DILocation(line: 2352, column: 18, scope: !3755)
!3764 = !DILocation(line: 2353, column: 12, scope: !3755)
!3765 = !DILocation(line: 2353, column: 26, scope: !3755)
!3766 = !DILocation(line: 2354, column: 7, scope: !3755)
!3767 = !DILocation(line: 2345, column: 25, scope: !3751)
!3768 = !DILocation(line: 2345, column: 44, scope: !3751)
!3769 = !DILocation(line: 2345, column: 3, scope: !3751)
!3770 = distinct !{!3770, !3748, !3771}
!3771 = !DILocation(line: 2354, column: 7, scope: !3747)
!3772 = !DILocation(line: 2356, column: 3, scope: !3734)
!3773 = distinct !DISubprogram(name: "acc_hash", scope: !3, file: !3, line: 2319, type: !1452, scopeLine: 2320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3774)
!3774 = !{!3775}
!3775 = !DILocalVariable(name: "x", arg: 1, scope: !3773, file: !3, line: 2319, type: !1455)
!3776 = !DILocation(line: 0, scope: !3773)
!3777 = !DILocation(line: 2321, column: 10, scope: !3773)
!3778 = !DILocation(line: 2321, column: 62, scope: !3773)
!3779 = !DILocation(line: 2321, column: 3, scope: !3773)
!3780 = distinct !DISubprogram(name: "acc_eq", scope: !3, file: !3, line: 2327, type: !1460, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3781)
!3781 = !{!3782, !3783}
!3782 = !DILocalVariable(name: "x", arg: 1, scope: !3780, file: !3, line: 2327, type: !1455)
!3783 = !DILocalVariable(name: "y", arg: 2, scope: !3780, file: !3, line: 2327, type: !1455)
!3784 = !DILocation(line: 0, scope: !3780)
!3785 = !DILocation(line: 2329, column: 43, scope: !3780)
!3786 = !DILocation(line: 2329, column: 51, scope: !3780)
!3787 = !DILocation(line: 2329, column: 48, scope: !3780)
!3788 = !DILocation(line: 2329, column: 3, scope: !3780)
!3789 = distinct !DISubprogram(name: "VEC_structure_heap_safe_push", scope: !3, file: !3, line: 199, type: !3790, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3796)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!3792, !3793, !3794}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!3796 = !{!3797, !3798}
!3797 = !DILocalVariable(name: "vec_", arg: 1, scope: !3789, file: !3, line: 199, type: !3793)
!3798 = !DILocalVariable(name: "obj_", arg: 2, scope: !3789, file: !3, line: 199, type: !3794)
!3799 = !DILocation(line: 0, scope: !3789)
!3800 = !DILocation(line: 199, column: 1, scope: !3789)
!3801 = distinct !DISubprogram(name: "VEC_structure_base_iterate", scope: !3, file: !3, line: 198, type: !3802, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3806)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!671, !3804, !7, !3805}
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3806 = !{!3807, !3808, !3809}
!3807 = !DILocalVariable(name: "vec_", arg: 1, scope: !3801, file: !3, line: 198, type: !3804)
!3808 = !DILocalVariable(name: "ix_", arg: 2, scope: !3801, file: !3, line: 198, type: !7)
!3809 = !DILocalVariable(name: "ptr", arg: 3, scope: !3801, file: !3, line: 198, type: !3805)
!3810 = !DILocation(line: 0, scope: !3801)
!3811 = !DILocation(line: 198, column: 1, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 198, column: 1)
!3813 = !DILocation(line: 198, column: 1, scope: !3801)
!3814 = !DILocation(line: 198, column: 1, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 198, column: 1)
!3816 = !DILocation(line: 198, column: 1, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 198, column: 1)
!3818 = !DILocation(line: 0, scope: !3812)
!3819 = distinct !DISubprogram(name: "field_acc_hash", scope: !3, file: !3, line: 2059, type: !1452, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3820)
!3820 = !{!3821}
!3821 = !DILocalVariable(name: "x", arg: 1, scope: !3819, file: !3, line: 2059, type: !1455)
!3822 = !DILocation(line: 0, scope: !3819)
!3823 = !DILocation(line: 2061, column: 10, scope: !3819)
!3824 = !DILocation(line: 2061, column: 68, scope: !3819)
!3825 = !DILocation(line: 2061, column: 3, scope: !3819)
!3826 = distinct !DISubprogram(name: "field_acc_eq", scope: !3, file: !3, line: 2068, type: !1460, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3827)
!3827 = !{!3828, !3829}
!3828 = !DILocalVariable(name: "x", arg: 1, scope: !3826, file: !3, line: 2068, type: !1455)
!3829 = !DILocalVariable(name: "y", arg: 2, scope: !3826, file: !3, line: 2068, type: !1455)
!3830 = !DILocation(line: 0, scope: !3826)
!3831 = !DILocation(line: 2070, column: 49, scope: !3826)
!3832 = !DILocation(line: 2070, column: 57, scope: !3826)
!3833 = !DILocation(line: 2070, column: 54, scope: !3826)
!3834 = !DILocation(line: 2070, column: 3, scope: !3826)
!3835 = distinct !DISubprogram(name: "VEC_structure_heap_reserve", scope: !3, file: !3, line: 199, type: !3836, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3838)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!671, !3793, !671}
!3838 = !{!3839, !3840, !3841}
!3839 = !DILocalVariable(name: "vec_", arg: 1, scope: !3835, file: !3, line: 199, type: !3793)
!3840 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3835, file: !3, line: 199, type: !671)
!3841 = !DILocalVariable(name: "extend", scope: !3835, file: !3, line: 199, type: !671)
!3842 = !DILocation(line: 0, scope: !3835)
!3843 = !DILocation(line: 199, column: 1, scope: !3835)
!3844 = !DILocation(line: 199, column: 1, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 199, column: 1)
!3846 = distinct !DISubprogram(name: "VEC_structure_base_quick_push", scope: !3, file: !3, line: 198, type: !3847, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!3792, !3804, !3794}
!3849 = !{!3850, !3851, !3852}
!3850 = !DILocalVariable(name: "vec_", arg: 1, scope: !3846, file: !3, line: 198, type: !3804)
!3851 = !DILocalVariable(name: "obj_", arg: 2, scope: !3846, file: !3, line: 198, type: !3794)
!3852 = !DILocalVariable(name: "slot_", scope: !3846, file: !3, line: 198, type: !3792)
!3853 = !DILocation(line: 0, scope: !3846)
!3854 = !DILocation(line: 198, column: 1, scope: !3846)
!3855 = !DILocation(line: 198, column: 1, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 198, column: 1)
!3857 = distinct !DISubprogram(name: "VEC_structure_base_space", scope: !3, file: !3, line: 198, type: !3858, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!671, !3804, !671}
!3860 = !{!3861, !3862}
!3861 = !DILocalVariable(name: "vec_", arg: 1, scope: !3857, file: !3, line: 198, type: !3804)
!3862 = !DILocalVariable(name: "alloc_", arg: 2, scope: !3857, file: !3, line: 198, type: !671)
!3863 = !DILocation(line: 0, scope: !3857)
!3864 = !DILocation(line: 198, column: 1, scope: !3857)
!3865 = distinct !DISubprogram(name: "check_struct_form", scope: !3, file: !3, line: 2958, type: !3866, scopeLine: 2959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{null, !2069, !3092}
!3868 = !{!3869, !3870, !3871, !3872}
!3869 = !DILocalVariable(name: "str", arg: 1, scope: !3865, file: !3, line: 2958, type: !2069)
!3870 = !DILocalVariable(name: "unsuitable_types", arg: 2, scope: !3865, file: !3, line: 2958, type: !3092)
!3871 = !DILocalVariable(name: "i", scope: !3865, file: !3, line: 2960, type: !671)
!3872 = !DILocalVariable(name: "f_type", scope: !3873, file: !3, line: 2964, type: !690)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !3, line: 2963, column: 5)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 2962, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 2962, column: 3)
!3876 = !DILocation(line: 0, scope: !3865)
!3877 = !DILocation(line: 0, scope: !3874)
!3878 = !DILocation(line: 0, scope: !3873)
!3879 = !DILocation(line: 0, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 2967, column: 2)
!3881 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 2966, column: 11)
!3882 = !DILocation(line: 2962, column: 8, scope: !3875)
!3883 = !DILocation(line: 0, scope: !3875)
!3884 = !DILocation(line: 2962, column: 24, scope: !3874)
!3885 = !DILocation(line: 2962, column: 17, scope: !3874)
!3886 = !DILocation(line: 2962, column: 3, scope: !3875)
!3887 = !DILocation(line: 2964, column: 32, scope: !3873)
!3888 = !DILocation(line: 2964, column: 21, scope: !3873)
!3889 = !DILocation(line: 2966, column: 11, scope: !3881)
!3890 = !DILocation(line: 2966, column: 30, scope: !3881)
!3891 = !DILocation(line: 2966, column: 11, scope: !3873)
!3892 = !DILocation(line: 2968, column: 43, scope: !3880)
!3893 = !DILocation(line: 2968, column: 4, scope: !3880)
!3894 = !DILocation(line: 2969, column: 48, scope: !3880)
!3895 = !DILocation(line: 2969, column: 4, scope: !3880)
!3896 = !DILocation(line: 2970, column: 8, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 2970, column: 8)
!3898 = !DILocation(line: 2970, column: 8, scope: !3880)
!3899 = !DILocation(line: 2972, column: 8, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 2971, column: 6)
!3901 = !DILocation(line: 2973, column: 28, scope: !3900)
!3902 = !DILocation(line: 2973, column: 8, scope: !3900)
!3903 = !DILocation(line: 2974, column: 17, scope: !3900)
!3904 = !DILocation(line: 2974, column: 8, scope: !3900)
!3905 = !DILocation(line: 2975, column: 28, scope: !3900)
!3906 = !DILocation(line: 2975, column: 44, scope: !3900)
!3907 = !DILocation(line: 2975, column: 8, scope: !3900)
!3908 = !DILocation(line: 2976, column: 17, scope: !3900)
!3909 = !DILocation(line: 2976, column: 8, scope: !3900)
!3910 = !DILocation(line: 2977, column: 6, scope: !3900)
!3911 = !DILocation(line: 2962, column: 37, scope: !3874)
!3912 = !DILocation(line: 2962, column: 3, scope: !3874)
!3913 = distinct !{!3913, !3886, !3914}
!3914 = !DILocation(line: 2979, column: 5, scope: !3875)
!3915 = !DILocation(line: 2980, column: 1, scope: !3865)
!3916 = distinct !DISubprogram(name: "exclude_types_passed_to_local_func", scope: !3, file: !3, line: 2914, type: !3090, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3917)
!3917 = !{!3918, !3919, !3920, !3925, !3926}
!3918 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3916, file: !3, line: 2914, type: !3092)
!3919 = !DILocalVariable(name: "c_node", scope: !3916, file: !3, line: 2916, type: !2686)
!3920 = !DILocalVariable(name: "fn", scope: !3921, file: !3, line: 2921, type: !690)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 2920, column: 7)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 2919, column: 9)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 2918, column: 3)
!3924 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 2918, column: 3)
!3925 = !DILocalVariable(name: "arg", scope: !3921, file: !3, line: 2922, type: !690)
!3926 = !DILocalVariable(name: "type", scope: !3927, file: !3, line: 2926, type: !690)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 2925, column: 4)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 2924, column: 2)
!3929 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 2924, column: 2)
!3930 = !DILocation(line: 0, scope: !3916)
!3931 = !DILocation(line: 2918, column: 8, scope: !3924)
!3932 = !DILocation(line: 0, scope: !3924)
!3933 = !DILocation(line: 2918, column: 3, scope: !3924)
!3934 = !DILocation(line: 2919, column: 9, scope: !3922)
!3935 = !DILocation(line: 2919, column: 52, scope: !3922)
!3936 = !DILocation(line: 2919, column: 9, scope: !3923)
!3937 = !DILocation(line: 2921, column: 20, scope: !3921)
!3938 = !DILocation(line: 2924, column: 13, scope: !3929)
!3939 = !DILocation(line: 2924, column: 7, scope: !3929)
!3940 = !DILocation(line: 0, scope: !3929)
!3941 = !DILocation(line: 0, scope: !3921)
!3942 = !DILocation(line: 2924, column: 2, scope: !3929)
!3943 = !DILocation(line: 2926, column: 18, scope: !3927)
!3944 = !DILocation(line: 0, scope: !3927)
!3945 = !DILocation(line: 2928, column: 13, scope: !3927)
!3946 = !DILocation(line: 2929, column: 10, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3927, file: !3, line: 2929, column: 10)
!3948 = !DILocation(line: 2929, column: 27, scope: !3947)
!3949 = !DILocation(line: 2929, column: 10, scope: !3927)
!3950 = !DILocation(line: 2932, column: 10, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 2930, column: 8)
!3952 = !DILocation(line: 2931, column: 3, scope: !3951)
!3953 = !DILocation(line: 2933, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 2933, column: 7)
!3955 = !DILocation(line: 2933, column: 7, scope: !3951)
!3956 = !DILocation(line: 2935, column: 7, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 2934, column: 5)
!3958 = !DILocation(line: 2936, column: 27, scope: !3957)
!3959 = !DILocation(line: 2936, column: 7, scope: !3957)
!3960 = !DILocation(line: 2937, column: 16, scope: !3957)
!3961 = !DILocation(line: 2937, column: 7, scope: !3957)
!3962 = !DILocation(line: 2939, column: 5, scope: !3957)
!3963 = !DILocation(line: 2924, column: 45, scope: !3928)
!3964 = !DILocation(line: 2924, column: 2, scope: !3928)
!3965 = distinct !{!3965, !3942, !3966}
!3966 = !DILocation(line: 2941, column: 4, scope: !3929)
!3967 = !DILocation(line: 2918, column: 56, scope: !3923)
!3968 = !DILocation(line: 2918, column: 3, scope: !3923)
!3969 = distinct !{!3969, !3933, !3970}
!3970 = !DILocation(line: 2942, column: 7, scope: !3924)
!3971 = !DILocation(line: 2943, column: 1, scope: !3916)
!3972 = distinct !DISubprogram(name: "exclude_returned_types", scope: !3, file: !3, line: 2881, type: !3090, scopeLine: 2882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3973)
!3973 = !{!3974, !3975, !3976}
!3974 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !3972, file: !3, line: 2881, type: !3092)
!3975 = !DILocalVariable(name: "c_node", scope: !3972, file: !3, line: 2883, type: !2686)
!3976 = !DILocalVariable(name: "ret_t", scope: !3977, file: !3, line: 2887, type: !690)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 2886, column: 5)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 2885, column: 3)
!3979 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 2885, column: 3)
!3980 = !DILocation(line: 0, scope: !3972)
!3981 = !DILocation(line: 2885, column: 8, scope: !3979)
!3982 = !DILocation(line: 0, scope: !3979)
!3983 = !DILocation(line: 2885, column: 3, scope: !3979)
!3984 = !DILocation(line: 2887, column: 20, scope: !3977)
!3985 = !DILocation(line: 0, scope: !3977)
!3986 = !DILocation(line: 2889, column: 11, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 2889, column: 11)
!3988 = !DILocation(line: 2889, column: 11, scope: !3977)
!3989 = !DILocation(line: 2891, column: 12, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 2890, column: 2)
!3991 = !DILocation(line: 2892, column: 8, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 2892, column: 8)
!3993 = !DILocation(line: 2892, column: 26, scope: !3992)
!3994 = !DILocation(line: 2892, column: 8, scope: !3990)
!3995 = !DILocation(line: 2894, column: 47, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 2893, column: 6)
!3997 = !DILocation(line: 2894, column: 8, scope: !3996)
!3998 = !DILocation(line: 2895, column: 12, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 2895, column: 12)
!4000 = !DILocation(line: 2895, column: 12, scope: !3996)
!4001 = !DILocation(line: 2897, column: 5, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 2896, column: 3)
!4003 = !DILocation(line: 2898, column: 25, scope: !4002)
!4004 = !DILocation(line: 2898, column: 5, scope: !4002)
!4005 = !DILocation(line: 2899, column: 14, scope: !4002)
!4006 = !DILocation(line: 2899, column: 5, scope: !4002)
!4007 = !DILocation(line: 2901, column: 3, scope: !4002)
!4008 = !DILocation(line: 2885, column: 56, scope: !3978)
!4009 = !DILocation(line: 2885, column: 3, scope: !3978)
!4010 = distinct !{!4010, !3983, !4011}
!4011 = !DILocation(line: 2904, column: 5, scope: !3979)
!4012 = !DILocation(line: 2905, column: 1, scope: !3972)
!4013 = distinct !DISubprogram(name: "exclude_escaping_types_1", scope: !3, file: !3, line: 2868, type: !3090, scopeLine: 2869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4014)
!4014 = !{!4015, !4016, !4017}
!4015 = !DILocalVariable(name: "unsuitable_types", arg: 1, scope: !4013, file: !3, line: 2868, type: !3092)
!4016 = !DILocalVariable(name: "str", scope: !4013, file: !3, line: 2870, type: !2069)
!4017 = !DILocalVariable(name: "i", scope: !4013, file: !3, line: 2871, type: !7)
!4018 = !DILocation(line: 0, scope: !4013)
!4019 = !DILocation(line: 2870, column: 3, scope: !4013)
!4020 = !DILocation(line: 2873, column: 8, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 2873, column: 3)
!4022 = !DILocation(line: 0, scope: !4021)
!4023 = !DILocation(line: 2873, column: 15, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 2873, column: 3)
!4025 = !DILocation(line: 2873, column: 3, scope: !4021)
!4026 = !DILocation(line: 2874, column: 24, scope: !4024)
!4027 = !DILocation(line: 2874, column: 5, scope: !4024)
!4028 = !DILocation(line: 2873, column: 61, scope: !4024)
!4029 = !DILocation(line: 2873, column: 3, scope: !4024)
!4030 = distinct !{!4030, !4025, !4031}
!4031 = !DILocation(line: 2874, column: 45, scope: !4021)
!4032 = !DILocation(line: 2875, column: 1, scope: !4013)
!4033 = distinct !DISubprogram(name: "check_type_escape", scope: !3, file: !3, line: 2301, type: !3866, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4034)
!4034 = !{!4035, !4036, !4037}
!4035 = !DILocalVariable(name: "str", arg: 1, scope: !4033, file: !3, line: 2301, type: !2069)
!4036 = !DILocalVariable(name: "unsuitable_types", arg: 2, scope: !4033, file: !3, line: 2301, type: !3092)
!4037 = !DILocalVariable(name: "type", scope: !4033, file: !3, line: 2303, type: !690)
!4038 = !DILocation(line: 0, scope: !4033)
!4039 = !DILocation(line: 2303, column: 20, scope: !4033)
!4040 = !DILocation(line: 2305, column: 8, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 2305, column: 7)
!4042 = !DILocation(line: 2305, column: 7, scope: !4033)
!4043 = !DILocation(line: 2307, column: 11, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 2307, column: 11)
!4045 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 2306, column: 5)
!4046 = !DILocation(line: 2307, column: 11, scope: !4045)
!4047 = !DILocation(line: 2309, column: 4, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 2308, column: 2)
!4049 = !DILocation(line: 2310, column: 24, scope: !4048)
!4050 = !DILocation(line: 2310, column: 4, scope: !4048)
!4051 = !DILocation(line: 2311, column: 2, scope: !4048)
!4052 = !DILocation(line: 2312, column: 7, scope: !4045)
!4053 = !DILocation(line: 2313, column: 5, scope: !4045)
!4054 = !DILocation(line: 2314, column: 1, scope: !4033)
!4055 = distinct !DISubprogram(name: "check_bitfields", scope: !3, file: !3, line: 2844, type: !3866, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4056)
!4056 = !{!4057, !4058, !4059, !4060}
!4057 = !DILocalVariable(name: "str", arg: 1, scope: !4055, file: !3, line: 2844, type: !2069)
!4058 = !DILocalVariable(name: "unsuitable_types", arg: 2, scope: !4055, file: !3, line: 2844, type: !3092)
!4059 = !DILocalVariable(name: "type", scope: !4055, file: !3, line: 2846, type: !690)
!4060 = !DILocalVariable(name: "i", scope: !4055, file: !3, line: 2847, type: !671)
!4061 = !DILocation(line: 0, scope: !4055)
!4062 = !DILocation(line: 2846, column: 20, scope: !4055)
!4063 = !DILocation(line: 0, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 2849, column: 3)
!4065 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 2849, column: 3)
!4066 = !DILocation(line: 0, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 2850, column: 9)
!4068 = !DILocation(line: 2849, column: 8, scope: !4065)
!4069 = !DILocation(line: 0, scope: !4065)
!4070 = !DILocation(line: 2849, column: 17, scope: !4064)
!4071 = !DILocation(line: 2849, column: 3, scope: !4065)
!4072 = !DILocation(line: 2850, column: 9, scope: !4067)
!4073 = !DILocation(line: 2850, column: 9, scope: !4064)
!4074 = !DILocation(line: 2852, column: 2, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2851, column: 7)
!4076 = !DILocation(line: 2853, column: 6, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 2853, column: 6)
!4078 = !DILocation(line: 2853, column: 6, scope: !4075)
!4079 = !DILocation(line: 2855, column: 4, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 2854, column: 2)
!4081 = !DILocation(line: 2856, column: 24, scope: !4080)
!4082 = !DILocation(line: 2856, column: 4, scope: !4080)
!4083 = !DILocation(line: 2857, column: 13, scope: !4080)
!4084 = !DILocation(line: 2857, column: 4, scope: !4080)
!4085 = !DILocation(line: 2858, column: 24, scope: !4080)
!4086 = !DILocation(line: 2858, column: 40, scope: !4080)
!4087 = !DILocation(line: 2858, column: 50, scope: !4080)
!4088 = !DILocation(line: 2858, column: 4, scope: !4080)
!4089 = !DILocation(line: 2859, column: 2, scope: !4080)
!4090 = !DILocation(line: 2849, column: 37, scope: !4064)
!4091 = !DILocation(line: 2849, column: 3, scope: !4064)
!4092 = distinct !{!4092, !4071, !4093}
!4093 = !DILocation(line: 2861, column: 7, scope: !4065)
!4094 = !DILocation(line: 2862, column: 1, scope: !4055)
!4095 = distinct !DISubprogram(name: "remove_structure", scope: !3, file: !3, line: 2409, type: !4096, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{null, !7}
!4098 = !{!4099, !4100}
!4099 = !DILocalVariable(name: "i", arg: 1, scope: !4095, file: !3, line: 2409, type: !7)
!4100 = !DILocalVariable(name: "str", scope: !4095, file: !3, line: 2411, type: !2069)
!4101 = !DILocation(line: 0, scope: !4095)
!4102 = !DILocation(line: 2413, column: 12, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 2413, column: 7)
!4104 = !DILocation(line: 2413, column: 9, scope: !4103)
!4105 = !DILocation(line: 2413, column: 7, scope: !4095)
!4106 = !DILocation(line: 2416, column: 9, scope: !4095)
!4107 = !DILocation(line: 2420, column: 3, scope: !4095)
!4108 = !DILocation(line: 2421, column: 3, scope: !4095)
!4109 = !DILocation(line: 2422, column: 3, scope: !4095)
!4110 = !DILocation(line: 2423, column: 1, scope: !4095)
!4111 = distinct !DISubprogram(name: "VEC_structure_base_index", scope: !3, file: !3, line: 198, type: !4112, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4114)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!3792, !3804, !7}
!4114 = !{!4115, !4116}
!4115 = !DILocalVariable(name: "vec_", arg: 1, scope: !4111, file: !3, line: 198, type: !3804)
!4116 = !DILocalVariable(name: "ix_", arg: 2, scope: !4111, file: !3, line: 198, type: !7)
!4117 = !DILocation(line: 0, scope: !4111)
!4118 = !DILocation(line: 198, column: 1, scope: !4111)
!4119 = distinct !DISubprogram(name: "remove_str_allocs", scope: !3, file: !3, line: 2397, type: !4120, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4122)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{null, !2069}
!4122 = !{!4123}
!4123 = !DILocalVariable(name: "str", arg: 1, scope: !4119, file: !3, line: 2397, type: !2069)
!4124 = !DILocation(line: 0, scope: !4119)
!4125 = !DILocation(line: 2399, column: 8, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 2399, column: 7)
!4127 = !DILocation(line: 2402, column: 7, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 2402, column: 7)
!4129 = !DILocation(line: 2399, column: 7, scope: !4119)
!4130 = !DILocation(line: 2403, column: 60, scope: !4128)
!4131 = !DILocation(line: 2403, column: 5, scope: !4128)
!4132 = !DILocation(line: 2404, column: 1, scope: !4119)
!4133 = distinct !DISubprogram(name: "free_data_struct", scope: !3, file: !3, line: 2114, type: !4120, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4134)
!4134 = !{!4135, !4136}
!4135 = !DILocalVariable(name: "d_node", arg: 1, scope: !4133, file: !3, line: 2114, type: !2069)
!4136 = !DILocalVariable(name: "i", scope: !4133, file: !3, line: 2116, type: !671)
!4137 = !DILocation(line: 0, scope: !4133)
!4138 = !DILocation(line: 2118, column: 8, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2118, column: 7)
!4140 = !DILocation(line: 2118, column: 7, scope: !4133)
!4141 = !DILocation(line: 2121, column: 7, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2121, column: 7)
!4143 = !DILocation(line: 2121, column: 7, scope: !4133)
!4144 = !DILocation(line: 2123, column: 7, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 2122, column: 5)
!4146 = !DILocation(line: 2124, column: 27, scope: !4145)
!4147 = !DILocation(line: 2124, column: 46, scope: !4145)
!4148 = !DILocation(line: 2124, column: 7, scope: !4145)
!4149 = !DILocation(line: 2125, column: 16, scope: !4145)
!4150 = !DILocation(line: 2125, column: 7, scope: !4145)
!4151 = !DILocation(line: 2126, column: 5, scope: !4145)
!4152 = !DILocation(line: 2129, column: 15, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2129, column: 7)
!4154 = !DILocation(line: 2129, column: 7, scope: !4153)
!4155 = !DILocation(line: 2129, column: 7, scope: !4133)
!4156 = !DILocation(line: 0, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 2131, column: 7)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 2131, column: 7)
!4159 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 2130, column: 5)
!4160 = !DILocation(line: 2131, column: 7, scope: !4158)
!4161 = !DILocation(line: 0, scope: !4159)
!4162 = !DILocation(line: 2131, column: 31, scope: !4157)
!4163 = !DILocation(line: 2131, column: 21, scope: !4157)
!4164 = !DILocation(line: 2132, column: 41, scope: !4157)
!4165 = !DILocation(line: 2132, column: 2, scope: !4157)
!4166 = !DILocation(line: 2131, column: 44, scope: !4157)
!4167 = !DILocation(line: 2131, column: 7, scope: !4157)
!4168 = distinct !{!4168, !4160, !4169}
!4169 = !DILocation(line: 2132, column: 50, scope: !4158)
!4170 = !DILocation(line: 2133, column: 13, scope: !4159)
!4171 = !DILocation(line: 2133, column: 7, scope: !4159)
!4172 = !DILocation(line: 2134, column: 5, scope: !4159)
!4173 = !DILocation(line: 2136, column: 15, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2136, column: 7)
!4175 = !DILocation(line: 2136, column: 7, scope: !4174)
!4176 = !DILocation(line: 2136, column: 7, scope: !4133)
!4177 = !DILocation(line: 2137, column: 6, scope: !4174)
!4178 = !DILocation(line: 2139, column: 15, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2139, column: 7)
!4180 = !DILocation(line: 2139, column: 7, scope: !4179)
!4181 = !DILocation(line: 2139, column: 7, scope: !4133)
!4182 = !DILocation(line: 2140, column: 5, scope: !4179)
!4183 = !DILocation(line: 2142, column: 15, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2142, column: 7)
!4185 = !DILocation(line: 2142, column: 7, scope: !4184)
!4186 = !DILocation(line: 2142, column: 7, scope: !4133)
!4187 = !DILocation(line: 2143, column: 5, scope: !4184)
!4188 = !DILocation(line: 2144, column: 1, scope: !4133)
!4189 = distinct !DISubprogram(name: "VEC_structure_base_ordered_remove", scope: !3, file: !3, line: 198, type: !4190, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4192)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{null, !3804, !7}
!4192 = !{!4193, !4194, !4195}
!4193 = !DILocalVariable(name: "vec_", arg: 1, scope: !4189, file: !3, line: 198, type: !3804)
!4194 = !DILocalVariable(name: "ix_", arg: 2, scope: !4189, file: !3, line: 198, type: !7)
!4195 = !DILocalVariable(name: "slot_", scope: !4189, file: !3, line: 198, type: !3792)
!4196 = !DILocation(line: 0, scope: !4189)
!4197 = !DILocation(line: 198, column: 1, scope: !4189)
!4198 = distinct !DISubprogram(name: "remove_str_allocs_in_func", scope: !3, file: !3, line: 2376, type: !4199, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4201)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{!671, !1468, !675}
!4201 = !{!4202, !4203, !4204, !4205, !4206}
!4202 = !DILocalVariable(name: "slot", arg: 1, scope: !4198, file: !3, line: 2376, type: !1468)
!4203 = !DILocalVariable(name: "data", arg: 2, scope: !4198, file: !3, line: 2376, type: !675)
!4204 = !DILocalVariable(name: "fallocs", scope: !4198, file: !3, line: 2378, type: !2046)
!4205 = !DILocalVariable(name: "i", scope: !4198, file: !3, line: 2379, type: !7)
!4206 = !DILocalVariable(name: "call", scope: !4198, file: !3, line: 2380, type: !4207)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!4208 = !DILocation(line: 0, scope: !4198)
!4209 = !DILocation(line: 2378, column: 23, scope: !4198)
!4210 = !DILocation(line: 2380, column: 3, scope: !4198)
!4211 = !DILocation(line: 0, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 2384, column: 11)
!4213 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 2383, column: 5)
!4214 = !DILocation(line: 2382, column: 3, scope: !4198)
!4215 = !DILocation(line: 2379, column: 12, scope: !4198)
!4216 = !DILocation(line: 2382, column: 10, scope: !4198)
!4217 = !DILocation(line: 2384, column: 11, scope: !4212)
!4218 = !DILocation(line: 2384, column: 17, scope: !4212)
!4219 = !DILocation(line: 2384, column: 21, scope: !4212)
!4220 = !DILocation(line: 2384, column: 11, scope: !4213)
!4221 = !DILocation(line: 2385, column: 2, scope: !4212)
!4222 = !DILocation(line: 2387, column: 3, scope: !4212)
!4223 = distinct !{!4223, !4214, !4224}
!4224 = !DILocation(line: 2388, column: 5, scope: !4198)
!4225 = !DILocation(line: 2391, column: 1, scope: !4198)
!4226 = !DILocation(line: 2390, column: 3, scope: !4198)
!4227 = distinct !DISubprogram(name: "VEC_alloc_site_t_base_iterate", scope: !3, file: !3, line: 173, type: !4228, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4232)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!671, !4230, !7, !4231}
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4232 = !{!4233, !4234, !4235}
!4233 = !DILocalVariable(name: "vec_", arg: 1, scope: !4227, file: !3, line: 173, type: !4230)
!4234 = !DILocalVariable(name: "ix_", arg: 2, scope: !4227, file: !3, line: 173, type: !7)
!4235 = !DILocalVariable(name: "ptr", arg: 3, scope: !4227, file: !3, line: 173, type: !4231)
!4236 = !DILocation(line: 0, scope: !4227)
!4237 = !DILocation(line: 173, column: 1, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 173, column: 1)
!4239 = !DILocation(line: 173, column: 1, scope: !4227)
!4240 = !DILocation(line: 173, column: 1, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 173, column: 1)
!4242 = !DILocation(line: 173, column: 1, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 173, column: 1)
!4244 = !DILocation(line: 0, scope: !4238)
!4245 = distinct !DISubprogram(name: "VEC_alloc_site_t_base_ordered_remove", scope: !3, file: !3, line: 173, type: !4246, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4248)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{null, !4230, !7}
!4248 = !{!4249, !4250, !4251}
!4249 = !DILocalVariable(name: "vec_", arg: 1, scope: !4245, file: !3, line: 173, type: !4230)
!4250 = !DILocalVariable(name: "ix_", arg: 2, scope: !4245, file: !3, line: 173, type: !7)
!4251 = !DILocalVariable(name: "slot_", scope: !4245, file: !3, line: 173, type: !4207)
!4252 = !DILocation(line: 0, scope: !4245)
!4253 = !DILocation(line: 173, column: 1, scope: !4245)
!4254 = distinct !DISubprogram(name: "free_field_accesses", scope: !3, file: !3, line: 1714, type: !4255, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4257)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{null, !1444}
!4257 = !{!4258}
!4258 = !DILocalVariable(name: "f_accs", arg: 1, scope: !4254, file: !3, line: 1714, type: !1444)
!4259 = !DILocation(line: 0, scope: !4254)
!4260 = !DILocation(line: 1716, column: 7, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 1716, column: 7)
!4262 = !DILocation(line: 1716, column: 7, scope: !4254)
!4263 = !DILocation(line: 1717, column: 5, scope: !4261)
!4264 = !DILocation(line: 1718, column: 3, scope: !4254)
!4265 = !DILocation(line: 1719, column: 1, scope: !4254)
!4266 = distinct !DISubprogram(name: "free_accesses", scope: !3, file: !3, line: 1704, type: !4255, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4267)
!4267 = !{!4268}
!4268 = !DILocalVariable(name: "accs", arg: 1, scope: !4266, file: !3, line: 1704, type: !1444)
!4269 = !DILocation(line: 0, scope: !4266)
!4270 = !DILocation(line: 1706, column: 7, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 1706, column: 7)
!4272 = !DILocation(line: 1706, column: 7, scope: !4266)
!4273 = !DILocation(line: 1707, column: 5, scope: !4271)
!4274 = !DILocation(line: 1708, column: 3, scope: !4266)
!4275 = !DILocation(line: 1709, column: 1, scope: !4266)
!4276 = distinct !DISubprogram(name: "free_struct_cluster", scope: !3, file: !3, line: 2099, type: !4277, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4279)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{null, !2007}
!4279 = !{!4280}
!4280 = !DILocalVariable(name: "cluster", arg: 1, scope: !4276, file: !3, line: 2099, type: !2007)
!4281 = !DILocation(line: 0, scope: !4276)
!4282 = !DILocation(line: 2101, column: 7, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 2101, column: 7)
!4284 = !DILocation(line: 2101, column: 7, scope: !4276)
!4285 = !DILocation(line: 2103, column: 20, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 2103, column: 11)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 2102, column: 5)
!4288 = !DILocation(line: 2103, column: 11, scope: !4286)
!4289 = !DILocation(line: 2103, column: 11, scope: !4287)
!4290 = !DILocation(line: 2104, column: 2, scope: !4286)
!4291 = !DILocation(line: 2105, column: 20, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 2105, column: 11)
!4293 = !DILocation(line: 2105, column: 11, scope: !4292)
!4294 = !DILocation(line: 2105, column: 11, scope: !4287)
!4295 = !DILocation(line: 2106, column: 2, scope: !4292)
!4296 = !DILocation(line: 2107, column: 13, scope: !4287)
!4297 = !DILocation(line: 2107, column: 7, scope: !4287)
!4298 = !DILocation(line: 2108, column: 5, scope: !4287)
!4299 = !DILocation(line: 2109, column: 1, scope: !4276)
!4300 = distinct !DISubprogram(name: "free_field_accs", scope: !3, file: !3, line: 1543, type: !4199, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4301)
!4301 = !{!4302, !4303, !4304}
!4302 = !DILocalVariable(name: "slot", arg: 1, scope: !4300, file: !3, line: 1543, type: !1468)
!4303 = !DILocalVariable(name: "data", arg: 2, scope: !4300, file: !3, line: 1543, type: !675)
!4304 = !DILocalVariable(name: "f_acc", scope: !4300, file: !3, line: 1545, type: !2072)
!4305 = !DILocation(line: 0, scope: !4300)
!4306 = !DILocation(line: 1545, column: 37, scope: !4300)
!4307 = !DILocation(line: 1547, column: 3, scope: !4300)
!4308 = !DILocation(line: 1548, column: 3, scope: !4300)
!4309 = distinct !DISubprogram(name: "free_accs", scope: !3, file: !3, line: 1530, type: !4199, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4310)
!4310 = !{!4311, !4312, !4313}
!4311 = !DILocalVariable(name: "slot", arg: 1, scope: !4309, file: !3, line: 1530, type: !1468)
!4312 = !DILocalVariable(name: "data", arg: 2, scope: !4309, file: !3, line: 1530, type: !675)
!4313 = !DILocalVariable(name: "acc", scope: !4309, file: !3, line: 1532, type: !2074)
!4314 = !DILocation(line: 0, scope: !4309)
!4315 = !DILocation(line: 1532, column: 30, scope: !4309)
!4316 = !DILocation(line: 1534, column: 3, scope: !4309)
!4317 = !DILocation(line: 1535, column: 9, scope: !4309)
!4318 = !DILocation(line: 1535, column: 3, scope: !4309)
!4319 = !DILocation(line: 1536, column: 3, scope: !4309)
!4320 = distinct !DISubprogram(name: "malloc_hash", scope: !3, file: !3, line: 1512, type: !1452, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4321)
!4321 = !{!4322}
!4322 = !DILocalVariable(name: "x", arg: 1, scope: !4320, file: !3, line: 1512, type: !1455)
!4323 = !DILocation(line: 0, scope: !4320)
!4324 = !DILocation(line: 1514, column: 10, scope: !4320)
!4325 = !DILocation(line: 1514, column: 51, scope: !4320)
!4326 = !DILocation(line: 1514, column: 3, scope: !4320)
!4327 = distinct !DISubprogram(name: "malloc_eq", scope: !3, file: !3, line: 1521, type: !1460, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4328)
!4328 = !{!4329, !4330}
!4329 = !DILocalVariable(name: "x", arg: 1, scope: !4327, file: !3, line: 1521, type: !1455)
!4330 = !DILocalVariable(name: "y", arg: 2, scope: !4327, file: !3, line: 1521, type: !1455)
!4331 = !DILocation(line: 0, scope: !4327)
!4332 = !DILocation(line: 1523, column: 32, scope: !4327)
!4333 = !DILocation(line: 1523, column: 40, scope: !4327)
!4334 = !DILocation(line: 1523, column: 37, scope: !4327)
!4335 = !DILocation(line: 1523, column: 3, scope: !4327)
!4336 = distinct !DISubprogram(name: "collect_alloc_sites", scope: !3, file: !3, line: 3523, type: !2648, scopeLine: 3524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4337)
!4337 = !{!4338, !4339, !4340, !4348, !4351, !4354}
!4338 = !DILocalVariable(name: "node", scope: !4336, file: !3, line: 3525, type: !2686)
!4339 = !DILocalVariable(name: "cs", scope: !4336, file: !3, line: 3526, type: !2691)
!4340 = !DILocalVariable(name: "stmt", scope: !4341, file: !3, line: 3533, type: !1014)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 3532, column: 4)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 3531, column: 2)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 3531, column: 2)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 3530, column: 7)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 3529, column: 9)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 3528, column: 3)
!4347 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3528, column: 3)
!4348 = !DILocalVariable(name: "decl", scope: !4349, file: !3, line: 3537, type: !690)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3536, column: 8)
!4350 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 3535, column: 10)
!4351 = !DILocalVariable(name: "i", scope: !4352, file: !3, line: 3543, type: !7)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 3542, column: 5)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 3539, column: 7)
!4354 = !DILocalVariable(name: "str", scope: !4355, file: !3, line: 3550, type: !2069)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 3549, column: 6)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 3548, column: 8)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 3546, column: 9)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 3545, column: 11)
!4359 = !DILocation(line: 0, scope: !4352)
!4360 = !DILocation(line: 3528, column: 8, scope: !4347)
!4361 = !DILocation(line: 0, scope: !4347)
!4362 = !DILocation(line: 0, scope: !4336)
!4363 = !DILocation(line: 3528, column: 3, scope: !4347)
!4364 = !DILocation(line: 3529, column: 15, scope: !4345)
!4365 = !DILocation(line: 3529, column: 9, scope: !4345)
!4366 = !DILocation(line: 3529, column: 24, scope: !4345)
!4367 = !DILocation(line: 3529, column: 33, scope: !4345)
!4368 = !DILocation(line: 3529, column: 27, scope: !4345)
!4369 = !DILocation(line: 3529, column: 9, scope: !4346)
!4370 = !DILocation(line: 3531, column: 18, scope: !4343)
!4371 = !DILocation(line: 3531, column: 7, scope: !4343)
!4372 = !DILocation(line: 0, scope: !4343)
!4373 = !DILocation(line: 3531, column: 2, scope: !4343)
!4374 = !DILocation(line: 3533, column: 24, scope: !4341)
!4375 = !DILocation(line: 0, scope: !4341)
!4376 = !DILocation(line: 3535, column: 10, scope: !4350)
!4377 = !DILocation(line: 3535, column: 10, scope: !4341)
!4378 = !DILocation(line: 3539, column: 7, scope: !4353)
!4379 = !DILocation(line: 3540, column: 7, scope: !4353)
!4380 = !DILocation(line: 3540, column: 18, scope: !4353)
!4381 = !DILocation(line: 0, scope: !4349)
!4382 = !DILocation(line: 3540, column: 16, scope: !4353)
!4383 = !DILocation(line: 3541, column: 7, scope: !4353)
!4384 = !DILocation(line: 3541, column: 10, scope: !4353)
!4385 = !DILocation(line: 3539, column: 7, scope: !4349)
!4386 = !DILocation(line: 3543, column: 7, scope: !4352)
!4387 = !DILocation(line: 3545, column: 11, scope: !4358)
!4388 = !DILocation(line: 3545, column: 11, scope: !4352)
!4389 = !DILocation(line: 3548, column: 8, scope: !4356)
!4390 = !DILocation(line: 3548, column: 34, scope: !4356)
!4391 = !DILocation(line: 3548, column: 8, scope: !4357)
!4392 = !DILocation(line: 3552, column: 14, scope: !4355)
!4393 = !DILocation(line: 0, scope: !4355)
!4394 = !DILocation(line: 3553, column: 30, scope: !4355)
!4395 = !DILocation(line: 3553, column: 8, scope: !4355)
!4396 = !DILocation(line: 3554, column: 6, scope: !4355)
!4397 = !DILocation(line: 3557, column: 12, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 3557, column: 12)
!4399 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 3556, column: 6)
!4400 = !DILocation(line: 3557, column: 12, scope: !4399)
!4401 = !DILocation(line: 3559, column: 5, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 3558, column: 10)
!4403 = !DILocation(line: 3561, column: 24, scope: !4402)
!4404 = !DILocation(line: 3561, column: 5, scope: !4402)
!4405 = !DILocation(line: 3562, column: 10, scope: !4402)
!4406 = !DILocation(line: 3563, column: 26, scope: !4399)
!4407 = !DILocation(line: 3563, column: 8, scope: !4399)
!4408 = !DILocation(line: 3566, column: 5, scope: !4353)
!4409 = !DILocation(line: 3566, column: 5, scope: !4352)
!4410 = !DILocation(line: 3531, column: 40, scope: !4342)
!4411 = !DILocation(line: 3531, column: 2, scope: !4342)
!4412 = distinct !{!4412, !4373, !4413}
!4413 = !DILocation(line: 3568, column: 4, scope: !4343)
!4414 = !DILocation(line: 3528, column: 48, scope: !4346)
!4415 = !DILocation(line: 3528, column: 3, scope: !4346)
!4416 = distinct !{!4416, !4363, !4417}
!4417 = !DILocation(line: 3569, column: 7, scope: !4347)
!4418 = !DILocation(line: 3570, column: 1, scope: !4336)
!4419 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !584, file: !584, line: 1954, type: !4420, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4422)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!690, !2036}
!4422 = !{!4423, !4424}
!4423 = !DILocalVariable(name: "gs", arg: 1, scope: !4419, file: !584, line: 1954, type: !2036)
!4424 = !DILocalVariable(name: "addr", scope: !4419, file: !584, line: 1956, type: !690)
!4425 = !DILocation(line: 0, scope: !4419)
!4426 = !DILocation(line: 1956, column: 15, scope: !4419)
!4427 = !DILocation(line: 1957, column: 7, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4419, file: !584, line: 1957, column: 7)
!4429 = !DILocation(line: 1957, column: 24, scope: !4428)
!4430 = !DILocation(line: 1957, column: 7, scope: !4419)
!4431 = !DILocation(line: 1958, column: 12, scope: !4428)
!4432 = !DILocation(line: 1958, column: 5, scope: !4428)
!4433 = !DILocation(line: 1960, column: 1, scope: !4419)
!4434 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !584, file: !584, line: 1878, type: !4420, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4435)
!4435 = !{!4436}
!4436 = !DILocalVariable(name: "gs", arg: 1, scope: !4434, file: !584, line: 1878, type: !2036)
!4437 = !DILocation(line: 0, scope: !4434)
!4438 = !DILocation(line: 1881, column: 10, scope: !4434)
!4439 = !DILocation(line: 1881, column: 3, scope: !4434)
!4440 = distinct !DISubprogram(name: "is_alloc_of_struct", scope: !3, file: !3, line: 3064, type: !4441, scopeLine: 3065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4444)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!670, !1014, !4443}
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4444 = !{!4445, !4446, !4447, !4448, !4449}
!4445 = !DILocalVariable(name: "stmt", arg: 1, scope: !4440, file: !3, line: 3064, type: !1014)
!4446 = !DILocalVariable(name: "i_p", arg: 2, scope: !4440, file: !3, line: 3064, type: !4443)
!4447 = !DILocalVariable(name: "lhs", scope: !4440, file: !3, line: 3066, type: !690)
!4448 = !DILocalVariable(name: "type", scope: !4440, file: !3, line: 3067, type: !690)
!4449 = !DILocalVariable(name: "final_stmt", scope: !4440, file: !3, line: 3068, type: !1014)
!4450 = !DILocation(line: 0, scope: !4440)
!4451 = !DILocation(line: 3070, column: 16, scope: !4440)
!4452 = !DILocation(line: 3072, column: 8, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 3072, column: 7)
!4454 = !DILocation(line: 3072, column: 7, scope: !4440)
!4455 = !DILocation(line: 3078, column: 7, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 3078, column: 7)
!4457 = !DILocation(line: 3078, column: 32, scope: !4456)
!4458 = !DILocation(line: 3078, column: 7, scope: !4440)
!4459 = !DILocation(line: 3081, column: 9, scope: !4440)
!4460 = !DILocation(line: 3083, column: 10, scope: !4440)
!4461 = !DILocation(line: 3085, column: 8, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 3085, column: 7)
!4463 = !DILocation(line: 3085, column: 7, scope: !4440)
!4464 = !DILocation(line: 3088, column: 8, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 3088, column: 7)
!4466 = !DILocation(line: 3089, column: 7, scope: !4465)
!4467 = !DILocation(line: 3089, column: 10, scope: !4465)
!4468 = !DILocation(line: 3089, column: 40, scope: !4465)
!4469 = !DILocation(line: 3088, column: 7, scope: !4440)
!4470 = !DILocation(line: 3092, column: 26, scope: !4440)
!4471 = !DILocation(line: 3092, column: 10, scope: !4440)
!4472 = !DILocation(line: 3092, column: 8, scope: !4440)
!4473 = !DILocation(line: 3094, column: 15, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 3094, column: 7)
!4475 = !DILocation(line: 3094, column: 12, scope: !4474)
!4476 = !DILocation(line: 3098, column: 1, scope: !4440)
!4477 = distinct !DISubprogram(name: "add_alloc_site", scope: !3, file: !3, line: 3023, type: !4478, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4480)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !690, !1014, !2069}
!4480 = !{!4481, !4482, !4483, !4484, !4485, !4486}
!4481 = !DILocalVariable(name: "fn_decl", arg: 1, scope: !4477, file: !3, line: 3023, type: !690)
!4482 = !DILocalVariable(name: "stmt", arg: 2, scope: !4477, file: !3, line: 3023, type: !1014)
!4483 = !DILocalVariable(name: "str", arg: 3, scope: !4477, file: !3, line: 3023, type: !2069)
!4484 = !DILocalVariable(name: "fallocs", scope: !4477, file: !3, line: 3025, type: !2046)
!4485 = !DILocalVariable(name: "m_call", scope: !4477, file: !3, line: 3026, type: !2064)
!4486 = !DILocalVariable(name: "slot", scope: !4487, file: !3, line: 3037, type: !1468)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 3036, column: 5)
!4488 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3035, column: 7)
!4489 = !DILocation(line: 0, scope: !4477)
!4490 = !DILocation(line: 3026, column: 3, scope: !4477)
!4491 = !DILocation(line: 3028, column: 10, scope: !4477)
!4492 = !DILocation(line: 3028, column: 15, scope: !4477)
!4493 = !DILocation(line: 3029, column: 10, scope: !4477)
!4494 = !DILocation(line: 3029, column: 14, scope: !4477)
!4495 = !DILocation(line: 3032, column: 38, scope: !4477)
!4496 = !DILocation(line: 3033, column: 10, scope: !4477)
!4497 = !DILocation(line: 3033, column: 19, scope: !4477)
!4498 = !DILocation(line: 3032, column: 17, scope: !4477)
!4499 = !DILocation(line: 3035, column: 8, scope: !4488)
!4500 = !DILocation(line: 3035, column: 7, scope: !4477)
!4501 = !DILocation(line: 3039, column: 17, scope: !4487)
!4502 = !DILocation(line: 3040, column: 16, scope: !4487)
!4503 = !DILocation(line: 3040, column: 21, scope: !4487)
!4504 = !DILocation(line: 3041, column: 25, scope: !4487)
!4505 = !DILocation(line: 3041, column: 16, scope: !4487)
!4506 = !DILocation(line: 3041, column: 23, scope: !4487)
!4507 = !DILocation(line: 3042, column: 40, scope: !4487)
!4508 = !DILocation(line: 3043, column: 11, scope: !4487)
!4509 = !DILocation(line: 3042, column: 14, scope: !4487)
!4510 = !DILocation(line: 0, scope: !4487)
!4511 = !DILocation(line: 3044, column: 13, scope: !4487)
!4512 = !DILocation(line: 3045, column: 5, scope: !4487)
!4513 = !DILocation(line: 3046, column: 3, scope: !4477)
!4514 = !DILocation(line: 3049, column: 7, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3049, column: 7)
!4516 = !DILocation(line: 3049, column: 7, scope: !4477)
!4517 = !DILocation(line: 3051, column: 7, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 3050, column: 5)
!4519 = !DILocation(line: 3052, column: 26, scope: !4518)
!4520 = !DILocation(line: 3052, column: 7, scope: !4518)
!4521 = !DILocation(line: 3053, column: 16, scope: !4518)
!4522 = !DILocation(line: 3053, column: 7, scope: !4518)
!4523 = !DILocation(line: 3054, column: 5, scope: !4518)
!4524 = !DILocation(line: 3055, column: 1, scope: !4477)
!4525 = distinct !DISubprogram(name: "gimple_call_fn", scope: !584, file: !584, line: 1911, type: !4420, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4526)
!4526 = !{!4527}
!4527 = !DILocalVariable(name: "gs", arg: 1, scope: !4525, file: !584, line: 1911, type: !2036)
!4528 = !DILocation(line: 0, scope: !4525)
!4529 = !DILocation(line: 1914, column: 10, scope: !4525)
!4530 = !DILocation(line: 1914, column: 3, scope: !4525)
!4531 = distinct !DISubprogram(name: "gimple_op", scope: !584, file: !584, line: 1631, type: !4532, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4534)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{!690, !2036, !7}
!4534 = !{!4535, !4536}
!4535 = !DILocalVariable(name: "gs", arg: 1, scope: !4531, file: !584, line: 1631, type: !2036)
!4536 = !DILocalVariable(name: "i", arg: 2, scope: !4531, file: !584, line: 1631, type: !7)
!4537 = !DILocation(line: 0, scope: !4531)
!4538 = !DILocation(line: 1633, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4531, file: !584, line: 1633, column: 7)
!4540 = !DILocation(line: 1633, column: 7, scope: !4531)
!4541 = !DILocation(line: 1638, column: 14, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !584, line: 1634, column: 5)
!4543 = !DILocation(line: 1638, column: 7, scope: !4542)
!4544 = !DILocation(line: 0, scope: !4539)
!4545 = !DILocation(line: 1642, column: 1, scope: !4531)
!4546 = distinct !DISubprogram(name: "gimple_has_ops", scope: !584, file: !584, line: 1274, type: !3272, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4547)
!4547 = !{!4548}
!4548 = !DILocalVariable(name: "g", arg: 1, scope: !4546, file: !584, line: 1274, type: !2036)
!4549 = !DILocation(line: 0, scope: !4546)
!4550 = !DILocation(line: 1276, column: 10, scope: !4546)
!4551 = !DILocation(line: 1276, column: 26, scope: !4546)
!4552 = !DILocation(line: 1276, column: 41, scope: !4546)
!4553 = !DILocation(line: 1276, column: 44, scope: !4546)
!4554 = !DILocation(line: 1276, column: 60, scope: !4546)
!4555 = !DILocation(line: 1276, column: 3, scope: !4546)
!4556 = distinct !DISubprogram(name: "gimple_ops", scope: !584, file: !584, line: 1614, type: !4557, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4559)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!1048, !1014}
!4559 = !{!4560, !4561}
!4560 = !DILocalVariable(name: "gs", arg: 1, scope: !4556, file: !584, line: 1614, type: !1014)
!4561 = !DILocalVariable(name: "off", scope: !4556, file: !584, line: 1616, type: !1158)
!4562 = !DILocation(line: 0, scope: !4556)
!4563 = !DILocation(line: 1621, column: 28, scope: !4556)
!4564 = !DILocation(line: 1621, column: 9, scope: !4556)
!4565 = !DILocation(line: 1622, column: 3, scope: !4556)
!4566 = !DILocation(line: 1624, column: 20, scope: !4556)
!4567 = !DILocation(line: 1624, column: 32, scope: !4556)
!4568 = !DILocation(line: 1624, column: 10, scope: !4556)
!4569 = !DILocation(line: 1624, column: 3, scope: !4556)
!4570 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !584, file: !584, line: 1073, type: !4571, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4573)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!629, !1014}
!4573 = !{!4574}
!4574 = !DILocalVariable(name: "gs", arg: 1, scope: !4570, file: !584, line: 1073, type: !1014)
!4575 = !DILocation(line: 0, scope: !4570)
!4576 = !DILocation(line: 1075, column: 24, scope: !4570)
!4577 = !DILocation(line: 1075, column: 10, scope: !4570)
!4578 = !DILocation(line: 1075, column: 3, scope: !4570)
!4579 = distinct !DISubprogram(name: "gss_for_code", scope: !584, file: !584, line: 1061, type: !4580, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4582)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{!629, !583}
!4582 = !{!4583}
!4583 = !DILocalVariable(name: "code", arg: 1, scope: !4579, file: !584, line: 1061, type: !583)
!4584 = !DILocation(line: 0, scope: !4579)
!4585 = !DILocation(line: 1066, column: 10, scope: !4579)
!4586 = !DILocation(line: 1066, column: 3, scope: !4579)
!4587 = distinct !DISubprogram(name: "get_final_alloc_stmt", scope: !3, file: !3, line: 747, type: !4588, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4590)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!1014, !1014}
!4590 = !{!4591, !4592, !4593, !4594}
!4591 = !DILocalVariable(name: "alloc_stmt", arg: 1, scope: !4587, file: !3, line: 747, type: !1014)
!4592 = !DILocalVariable(name: "final_stmt", scope: !4587, file: !3, line: 749, type: !1014)
!4593 = !DILocalVariable(name: "use_p", scope: !4587, file: !3, line: 750, type: !2081)
!4594 = !DILocalVariable(name: "alloc_res", scope: !4587, file: !3, line: 751, type: !690)
!4595 = !DILocation(line: 0, scope: !4587)
!4596 = !DILocation(line: 749, column: 3, scope: !4587)
!4597 = !DILocation(line: 750, column: 3, scope: !4587)
!4598 = !DILocation(line: 753, column: 8, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 753, column: 7)
!4600 = !DILocation(line: 753, column: 7, scope: !4587)
!4601 = !DILocation(line: 756, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 756, column: 7)
!4603 = !DILocation(line: 756, column: 7, scope: !4587)
!4604 = !DILocation(line: 759, column: 15, scope: !4587)
!4605 = !DILocation(line: 761, column: 7, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 761, column: 7)
!4607 = !DILocation(line: 761, column: 29, scope: !4606)
!4608 = !DILocation(line: 761, column: 7, scope: !4587)
!4609 = !DILocation(line: 764, column: 8, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 764, column: 7)
!4611 = !DILocation(line: 767, column: 12, scope: !4610)
!4612 = !DILocation(line: 764, column: 7, scope: !4587)
!4613 = !DILocation(line: 768, column: 1, scope: !4587)
!4614 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !584, file: !584, line: 1694, type: !4420, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4615)
!4615 = !{!4616}
!4616 = !DILocalVariable(name: "gs", arg: 1, scope: !4614, file: !584, line: 1694, type: !2036)
!4617 = !DILocation(line: 0, scope: !4614)
!4618 = !DILocation(line: 1697, column: 10, scope: !4614)
!4619 = !DILocation(line: 1697, column: 3, scope: !4614)
!4620 = distinct !DISubprogram(name: "single_imm_use", scope: !4621, file: !4621, line: 373, type: !4622, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4625)
!4621 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!670, !2078, !4624, !2779}
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!4625 = !{!4626, !4627, !4628, !4629, !4633}
!4626 = !DILocalVariable(name: "var", arg: 1, scope: !4620, file: !4621, line: 373, type: !2078)
!4627 = !DILocalVariable(name: "use_p", arg: 2, scope: !4620, file: !4621, line: 373, type: !4624)
!4628 = !DILocalVariable(name: "stmt", arg: 3, scope: !4620, file: !4621, line: 373, type: !2779)
!4629 = !DILocalVariable(name: "ptr", scope: !4620, file: !4621, line: 375, type: !4630)
!4630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4631)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2083)
!4633 = !DILabel(scope: !4634, name: "return_false", file: !4621, line: 380)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !4621, line: 379, column: 5)
!4635 = distinct !DILexicalBlock(scope: !4620, file: !4621, line: 378, column: 7)
!4636 = !DILocation(line: 0, scope: !4620)
!4637 = !DILocation(line: 375, column: 42, scope: !4620)
!4638 = !DILocation(line: 378, column: 19, scope: !4635)
!4639 = !DILocation(line: 378, column: 11, scope: !4635)
!4640 = !DILocation(line: 378, column: 7, scope: !4620)
!4641 = !DILocation(line: 380, column: 5, scope: !4634)
!4642 = !DILocation(line: 381, column: 14, scope: !4634)
!4643 = !DILocation(line: 382, column: 13, scope: !4634)
!4644 = !DILocation(line: 383, column: 7, scope: !4634)
!4645 = !DILocation(line: 387, column: 25, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4620, file: !4621, line: 387, column: 7)
!4647 = !DILocation(line: 387, column: 11, scope: !4646)
!4648 = !DILocation(line: 387, column: 7, scope: !4620)
!4649 = !DILocation(line: 389, column: 29, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !4621, line: 389, column: 11)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !4621, line: 388, column: 5)
!4652 = !DILocation(line: 389, column: 12, scope: !4650)
!4653 = !DILocation(line: 389, column: 11, scope: !4651)
!4654 = !DILocation(line: 391, column: 18, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !4621, line: 390, column: 2)
!4656 = !DILocation(line: 391, column: 11, scope: !4655)
!4657 = !DILocation(line: 392, column: 17, scope: !4655)
!4658 = !DILocation(line: 392, column: 27, scope: !4655)
!4659 = !DILocation(line: 392, column: 10, scope: !4655)
!4660 = !DILocation(line: 393, column: 4, scope: !4655)
!4661 = !DILocation(line: 400, column: 8, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4620, file: !4621, line: 400, column: 7)
!4663 = !DILocation(line: 400, column: 7, scope: !4620)
!4664 = !DILocation(line: 403, column: 10, scope: !4620)
!4665 = !DILocation(line: 403, column: 3, scope: !4620)
!4666 = !DILocation(line: 404, column: 1, scope: !4620)
!4667 = distinct !DISubprogram(name: "is_gimple_debug", scope: !584, file: !584, line: 3249, type: !3272, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4668)
!4668 = !{!4669}
!4669 = !DILocalVariable(name: "gs", arg: 1, scope: !4667, file: !584, line: 3249, type: !2036)
!4670 = !DILocation(line: 0, scope: !4667)
!4671 = !DILocation(line: 3251, column: 10, scope: !4667)
!4672 = !DILocation(line: 3251, column: 27, scope: !4667)
!4673 = !DILocation(line: 3251, column: 3, scope: !4667)
!4674 = distinct !DISubprogram(name: "VEC_alloc_site_t_heap_alloc", scope: !3, file: !3, line: 174, type: !4675, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4677)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!2052, !671}
!4677 = !{!4678}
!4678 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4674, file: !3, line: 174, type: !671)
!4679 = !DILocation(line: 0, scope: !4674)
!4680 = !DILocation(line: 174, column: 1, scope: !4674)
!4681 = distinct !DISubprogram(name: "VEC_alloc_site_t_heap_safe_push", scope: !3, file: !3, line: 174, type: !4682, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4687)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!4207, !4684, !4685}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2064)
!4687 = !{!4688, !4689}
!4688 = !DILocalVariable(name: "vec_", arg: 1, scope: !4681, file: !3, line: 174, type: !4684)
!4689 = !DILocalVariable(name: "obj_", arg: 2, scope: !4681, file: !3, line: 174, type: !4685)
!4690 = !DILocation(line: 0, scope: !4681)
!4691 = !DILocation(line: 174, column: 1, scope: !4681)
!4692 = distinct !DISubprogram(name: "VEC_alloc_site_t_heap_reserve", scope: !3, file: !3, line: 174, type: !4693, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4695)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!671, !4684, !671}
!4695 = !{!4696, !4697, !4698}
!4696 = !DILocalVariable(name: "vec_", arg: 1, scope: !4692, file: !3, line: 174, type: !4684)
!4697 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4692, file: !3, line: 174, type: !671)
!4698 = !DILocalVariable(name: "extend", scope: !4692, file: !3, line: 174, type: !671)
!4699 = !DILocation(line: 0, scope: !4692)
!4700 = !DILocation(line: 174, column: 1, scope: !4692)
!4701 = !DILocation(line: 174, column: 1, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 174, column: 1)
!4703 = distinct !DISubprogram(name: "VEC_alloc_site_t_base_quick_push", scope: !3, file: !3, line: 173, type: !4704, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4706)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{!4207, !4230, !4685}
!4706 = !{!4707, !4708, !4709}
!4707 = !DILocalVariable(name: "vec_", arg: 1, scope: !4703, file: !3, line: 173, type: !4230)
!4708 = !DILocalVariable(name: "obj_", arg: 2, scope: !4703, file: !3, line: 173, type: !4685)
!4709 = !DILocalVariable(name: "slot_", scope: !4703, file: !3, line: 173, type: !4207)
!4710 = !DILocation(line: 0, scope: !4703)
!4711 = !DILocation(line: 173, column: 1, scope: !4703)
!4712 = !DILocation(line: 173, column: 1, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 173, column: 1)
!4714 = distinct !DISubprogram(name: "VEC_alloc_site_t_base_space", scope: !3, file: !3, line: 173, type: !4715, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4717)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!671, !4230, !671}
!4717 = !{!4718, !4719}
!4718 = !DILocalVariable(name: "vec_", arg: 1, scope: !4714, file: !3, line: 173, type: !4230)
!4719 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4714, file: !3, line: 173, type: !671)
!4720 = !DILocation(line: 0, scope: !4714)
!4721 = !DILocation(line: 173, column: 1, scope: !4714)
!4722 = distinct !DISubprogram(name: "collect_accesses_in_func", scope: !3, file: !3, line: 3629, type: !4723, scopeLine: 3630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4725)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{null, !1400}
!4725 = !{!4726, !4727}
!4726 = !DILocalVariable(name: "fn", arg: 1, scope: !4722, file: !3, line: 3629, type: !1400)
!4727 = !DILocalVariable(name: "bb", scope: !4722, file: !3, line: 3631, type: !1412)
!4728 = !DILocation(line: 0, scope: !4722)
!4729 = !DILocation(line: 3633, column: 9, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 3633, column: 7)
!4731 = !DILocation(line: 3633, column: 7, scope: !4722)
!4732 = !DILocation(line: 3637, column: 3, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 3637, column: 3)
!4734 = !DILocation(line: 3637, column: 3, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 3637, column: 3)
!4736 = !DILocation(line: 0, scope: !4733)
!4737 = !DILocation(line: 3638, column: 5, scope: !4735)
!4738 = distinct !{!4738, !4732, !4739}
!4739 = !DILocation(line: 3638, column: 31, scope: !4733)
!4740 = !DILocation(line: 3639, column: 1, scope: !4722)
!4741 = distinct !DISubprogram(name: "exclude_alloc_and_field_accs", scope: !3, file: !3, line: 3616, type: !2773, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4742 = !{!4743, !4744, !4745}
!4743 = !DILocalVariable(name: "node", arg: 1, scope: !4741, file: !3, line: 3616, type: !2686)
!4744 = !DILocalVariable(name: "str", scope: !4741, file: !3, line: 3618, type: !2069)
!4745 = !DILocalVariable(name: "i", scope: !4741, file: !3, line: 3619, type: !7)
!4746 = !DILocation(line: 0, scope: !4741)
!4747 = !DILocation(line: 3618, column: 3, scope: !4741)
!4748 = !DILocation(line: 3621, column: 8, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 3621, column: 3)
!4750 = !DILocation(line: 0, scope: !4749)
!4751 = !DILocation(line: 3621, column: 15, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 3621, column: 3)
!4753 = !DILocation(line: 3621, column: 3, scope: !4749)
!4754 = !DILocation(line: 3622, column: 37, scope: !4752)
!4755 = !DILocation(line: 3622, column: 5, scope: !4752)
!4756 = !DILocation(line: 3621, column: 61, scope: !4752)
!4757 = !DILocation(line: 3621, column: 3, scope: !4752)
!4758 = distinct !{!4758, !4753, !4759}
!4759 = !DILocation(line: 3622, column: 46, scope: !4749)
!4760 = !DILocation(line: 3623, column: 1, scope: !4741)
!4761 = distinct !DISubprogram(name: "check_cond_exprs", scope: !3, file: !3, line: 3592, type: !2648, scopeLine: 3593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4762)
!4762 = !{!4763, !4764, !4765}
!4763 = !DILocalVariable(name: "str", scope: !4761, file: !3, line: 3594, type: !2069)
!4764 = !DILocalVariable(name: "i", scope: !4761, file: !3, line: 3595, type: !7)
!4765 = !DILocalVariable(name: "safe_p", scope: !4766, file: !3, line: 3600, type: !670)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 3599, column: 5)
!4767 = !DILocation(line: 3594, column: 3, scope: !4761)
!4768 = !DILocation(line: 0, scope: !4761)
!4769 = !DILocation(line: 3598, column: 3, scope: !4761)
!4770 = !DILocation(line: 3598, column: 10, scope: !4761)
!4771 = !DILocation(line: 0, scope: !4766)
!4772 = !DILocation(line: 3600, column: 7, scope: !4766)
!4773 = !DILocation(line: 3600, column: 12, scope: !4766)
!4774 = !DILocation(line: 3602, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 3602, column: 11)
!4776 = !DILocation(line: 3602, column: 16, scope: !4775)
!4777 = !DILocation(line: 3602, column: 11, scope: !4766)
!4778 = !DILocation(line: 3603, column: 2, scope: !4775)
!4779 = !DILocation(line: 3604, column: 12, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 3604, column: 11)
!4781 = !DILocation(line: 3604, column: 11, scope: !4766)
!4782 = !DILocation(line: 3605, column: 2, scope: !4780)
!4783 = !DILocation(line: 3607, column: 3, scope: !4780)
!4784 = !DILocation(line: 3608, column: 5, scope: !4761)
!4785 = distinct !{!4785, !4769, !4784}
!4786 = !DILocation(line: 3609, column: 1, scope: !4761)
!4787 = distinct !DISubprogram(name: "dump_accesses", scope: !3, file: !3, line: 3575, type: !2648, scopeLine: 3576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4788)
!4788 = !{!4789, !4790}
!4789 = !DILocalVariable(name: "str", scope: !4787, file: !3, line: 3577, type: !2069)
!4790 = !DILocalVariable(name: "i", scope: !4787, file: !3, line: 3578, type: !7)
!4791 = !DILocation(line: 3577, column: 3, scope: !4787)
!4792 = !DILocation(line: 3580, column: 8, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 3580, column: 7)
!4794 = !DILocation(line: 3580, column: 7, scope: !4787)
!4795 = !DILocation(line: 3583, column: 3, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 3583, column: 3)
!4797 = !DILocation(line: 0, scope: !4796)
!4798 = !DILocation(line: 0, scope: !4787)
!4799 = !DILocation(line: 3583, column: 15, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 3583, column: 3)
!4801 = !DILocation(line: 3584, column: 16, scope: !4800)
!4802 = !DILocation(line: 3584, column: 5, scope: !4800)
!4803 = !DILocation(line: 3583, column: 61, scope: !4800)
!4804 = !DILocation(line: 3583, column: 3, scope: !4800)
!4805 = distinct !{!4805, !4795, !4806}
!4806 = !DILocation(line: 3584, column: 19, scope: !4796)
!4807 = !DILocation(line: 3585, column: 1, scope: !4787)
!4808 = distinct !DISubprogram(name: "collect_accesses_in_bb", scope: !3, file: !3, line: 3164, type: !4809, scopeLine: 3165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4811)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{null, !1412}
!4811 = !{!4812, !4813, !4814, !4815}
!4812 = !DILocalVariable(name: "bb", arg: 1, scope: !4808, file: !3, line: 3164, type: !1412)
!4813 = !DILocalVariable(name: "bsi", scope: !4808, file: !3, line: 3166, type: !2088)
!4814 = !DILocalVariable(name: "wi", scope: !4808, file: !3, line: 3167, type: !2085)
!4815 = !DILocalVariable(name: "stmt", scope: !4816, file: !3, line: 3173, type: !1014)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 3172, column: 5)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 3171, column: 3)
!4818 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 3171, column: 3)
!4819 = !DILocation(line: 0, scope: !4808)
!4820 = !DILocation(line: 3166, column: 3, scope: !4808)
!4821 = !DILocation(line: 3167, column: 3, scope: !4808)
!4822 = !DILocation(line: 3169, column: 3, scope: !4808)
!4823 = !DILocation(line: 3171, column: 14, scope: !4818)
!4824 = !DILocation(line: 0, scope: !4816)
!4825 = !DILocation(line: 3171, column: 8, scope: !4818)
!4826 = !DILocation(line: 3171, column: 34, scope: !4817)
!4827 = !DILocation(line: 3171, column: 33, scope: !4817)
!4828 = !DILocation(line: 3171, column: 3, scope: !4818)
!4829 = !DILocation(line: 3173, column: 21, scope: !4816)
!4830 = !DILocation(line: 3177, column: 11, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 3177, column: 11)
!4832 = !DILocation(line: 3177, column: 30, scope: !4831)
!4833 = !DILocation(line: 3177, column: 11, scope: !4816)
!4834 = !DILocation(line: 3179, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 3178, column: 2)
!4836 = !DILocation(line: 3180, column: 4, scope: !4835)
!4837 = !DILocation(line: 3183, column: 15, scope: !4816)
!4838 = !DILocation(line: 3184, column: 7, scope: !4816)
!4839 = !DILocation(line: 3185, column: 5, scope: !4817)
!4840 = !DILocation(line: 3171, column: 51, scope: !4817)
!4841 = !DILocation(line: 3171, column: 3, scope: !4817)
!4842 = distinct !{!4842, !4828, !4843}
!4843 = !DILocation(line: 3185, column: 5, scope: !4818)
!4844 = !DILocation(line: 3186, column: 1, scope: !4808)
!4845 = distinct !DISubprogram(name: "gsi_start_bb", scope: !584, file: !584, line: 4418, type: !4846, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4848)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!2088, !1412}
!4848 = !{!4849, !4850, !4851}
!4849 = !DILocalVariable(name: "bb", arg: 1, scope: !4845, file: !584, line: 4418, type: !1412)
!4850 = !DILocalVariable(name: "i", scope: !4845, file: !584, line: 4420, type: !2088)
!4851 = !DILocalVariable(name: "seq", scope: !4845, file: !584, line: 4421, type: !1004)
!4852 = !DILocation(line: 0, scope: !4845)
!4853 = !DILocation(line: 4420, column: 24, scope: !4845)
!4854 = !DILocation(line: 4423, column: 9, scope: !4845)
!4855 = !DILocation(line: 4424, column: 11, scope: !4845)
!4856 = !DILocation(line: 4424, column: 5, scope: !4845)
!4857 = !DILocation(line: 4424, column: 9, scope: !4845)
!4858 = !DILocation(line: 4425, column: 5, scope: !4845)
!4859 = !DILocation(line: 4425, column: 9, scope: !4845)
!4860 = !DILocation(line: 4426, column: 5, scope: !4845)
!4861 = !DILocation(line: 4426, column: 8, scope: !4845)
!4862 = !DILocation(line: 4429, column: 1, scope: !4845)
!4863 = distinct !DISubprogram(name: "gsi_end_p", scope: !584, file: !584, line: 4467, type: !4864, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!670, !2088}
!4866 = !{!4867}
!4867 = !DILocalVariable(name: "i", arg: 1, scope: !4863, file: !584, line: 4467, type: !2088)
!4868 = !DILocation(line: 4467, column: 33, scope: !4863)
!4869 = !DILocation(line: 4469, column: 12, scope: !4863)
!4870 = !DILocation(line: 4469, column: 16, scope: !4863)
!4871 = !DILocation(line: 4469, column: 10, scope: !4863)
!4872 = !DILocation(line: 4469, column: 3, scope: !4863)
!4873 = distinct !DISubprogram(name: "gsi_stmt", scope: !584, file: !584, line: 4501, type: !4874, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4876)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!1014, !2088}
!4876 = !{!4877}
!4877 = !DILocalVariable(name: "i", arg: 1, scope: !4873, file: !584, line: 4501, type: !2088)
!4878 = !DILocation(line: 4501, column: 32, scope: !4873)
!4879 = !DILocation(line: 4503, column: 12, scope: !4873)
!4880 = !DILocation(line: 4503, column: 17, scope: !4873)
!4881 = !DILocation(line: 4503, column: 3, scope: !4873)
!4882 = distinct !DISubprogram(name: "free_structures", scope: !3, file: !3, line: 2640, type: !2648, scopeLine: 2641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4883)
!4883 = !{!4884, !4885}
!4884 = !DILocalVariable(name: "str", scope: !4882, file: !3, line: 2642, type: !2069)
!4885 = !DILocalVariable(name: "i", scope: !4882, file: !3, line: 2643, type: !7)
!4886 = !DILocation(line: 2642, column: 3, scope: !4882)
!4887 = !DILocation(line: 0, scope: !4882)
!4888 = !DILocation(line: 2645, column: 8, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 2645, column: 3)
!4890 = !DILocation(line: 0, scope: !4889)
!4891 = !DILocation(line: 2645, column: 15, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 2645, column: 3)
!4893 = !DILocation(line: 2645, column: 3, scope: !4889)
!4894 = !DILocation(line: 2646, column: 23, scope: !4892)
!4895 = !DILocation(line: 2646, column: 5, scope: !4892)
!4896 = !DILocation(line: 2645, column: 61, scope: !4892)
!4897 = !DILocation(line: 2645, column: 3, scope: !4892)
!4898 = distinct !{!4898, !4893, !4899}
!4899 = !DILocation(line: 2646, column: 26, scope: !4889)
!4900 = !DILocation(line: 2648, column: 3, scope: !4882)
!4901 = !DILocation(line: 2649, column: 14, scope: !4882)
!4902 = !DILocation(line: 2650, column: 1, scope: !4882)
!4903 = distinct !DISubprogram(name: "get_stmt_accesses", scope: !3, file: !3, line: 2486, type: !4904, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4907)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!690, !1048, !4906, !675}
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!4907 = !{!4908, !4909, !4910, !4911, !4912, !4913, !4914, !4917, !4918, !4919, !4924, !4926, !4927, !4930, !4931, !4934, !4935, !4938, !4941, !4943, !4944, !4948, !4950}
!4908 = !DILocalVariable(name: "tp", arg: 1, scope: !4903, file: !3, line: 2486, type: !1048)
!4909 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !4903, file: !3, line: 2486, type: !4906)
!4910 = !DILocalVariable(name: "data", arg: 3, scope: !4903, file: !3, line: 2486, type: !675)
!4911 = !DILocalVariable(name: "wi", scope: !4903, file: !3, line: 2488, type: !2084)
!4912 = !DILocalVariable(name: "stmt", scope: !4903, file: !3, line: 2489, type: !1014)
!4913 = !DILocalVariable(name: "t", scope: !4903, file: !3, line: 2490, type: !690)
!4914 = !DILocalVariable(name: "var", scope: !4915, file: !3, line: 2499, type: !690)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2498, column: 7)
!4916 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2496, column: 5)
!4917 = !DILocalVariable(name: "type", scope: !4915, file: !3, line: 2500, type: !690)
!4918 = !DILocalVariable(name: "i", scope: !4915, file: !3, line: 2501, type: !7)
!4919 = !DILocalVariable(name: "str", scope: !4920, file: !3, line: 2507, type: !2069)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 2506, column: 8)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2505, column: 10)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 2504, column: 4)
!4923 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 2503, column: 6)
!4924 = !DILocalVariable(name: "ref", scope: !4925, file: !3, line: 2527, type: !690)
!4925 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2526, column: 7)
!4926 = !DILocalVariable(name: "field_decl", scope: !4925, file: !3, line: 2528, type: !690)
!4927 = !DILocalVariable(name: "type", scope: !4928, file: !3, line: 2536, type: !690)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 2535, column: 4)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 2531, column: 6)
!4930 = !DILocalVariable(name: "i", scope: !4928, file: !3, line: 2537, type: !7)
!4931 = !DILocalVariable(name: "str", scope: !4932, file: !3, line: 2541, type: !2069)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 2540, column: 8)
!4933 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2539, column: 10)
!4934 = !DILocalVariable(name: "field", scope: !4932, file: !3, line: 2542, type: !1997)
!4935 = !DILocalVariable(name: "acc", scope: !4936, file: !3, line: 2554, type: !2072)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 2553, column: 5)
!4937 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2552, column: 7)
!4938 = !DILocalVariable(name: "bb", scope: !4939, file: !3, line: 2582, type: !1412)
!4939 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2580, column: 9)
!4940 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 2565, column: 11)
!4941 = !DILocalVariable(name: "cond", scope: !4942, file: !3, line: 2597, type: !690)
!4942 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2596, column: 7)
!4943 = !DILocalVariable(name: "i", scope: !4942, file: !3, line: 2598, type: !671)
!4944 = !DILocalVariable(name: "t", scope: !4945, file: !3, line: 2601, type: !690)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 2600, column: 4)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 2599, column: 2)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 2599, column: 2)
!4948 = !DILocalVariable(name: "i", scope: !4949, file: !3, line: 2613, type: !7)
!4949 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2612, column: 7)
!4950 = !DILocalVariable(name: "str", scope: !4951, file: !3, line: 2621, type: !2069)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 2620, column: 4)
!4952 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 2619, column: 6)
!4953 = !DILocation(line: 0, scope: !4903)
!4954 = !DILocation(line: 2489, column: 30, scope: !4903)
!4955 = !DILocation(line: 2490, column: 12, scope: !4903)
!4956 = !DILocation(line: 2492, column: 8, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2492, column: 7)
!4958 = !DILocation(line: 2492, column: 7, scope: !4903)
!4959 = !DILocation(line: 2495, column: 11, scope: !4903)
!4960 = !DILocation(line: 2495, column: 3, scope: !4903)
!4961 = !DILocation(line: 2499, column: 13, scope: !4915)
!4962 = !DILocation(line: 0, scope: !4915)
!4963 = !DILocation(line: 2500, column: 14, scope: !4915)
!4964 = !DILocation(line: 2501, column: 15, scope: !4915)
!4965 = !DILocation(line: 2503, column: 11, scope: !4923)
!4966 = !DILocation(line: 2503, column: 8, scope: !4923)
!4967 = !DILocation(line: 2503, column: 6, scope: !4915)
!4968 = !DILocation(line: 2505, column: 10, scope: !4921)
!4969 = !DILocation(line: 2505, column: 10, scope: !4922)
!4970 = !DILocation(line: 2509, column: 9, scope: !4920)
!4971 = !DILocation(line: 0, scope: !4920)
!4972 = !DILocation(line: 2510, column: 45, scope: !4920)
!4973 = !DILocation(line: 2510, column: 3, scope: !4920)
!4974 = !DILocation(line: 2511, column: 18, scope: !4920)
!4975 = !DILocation(line: 2514, column: 10, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2514, column: 10)
!4977 = !DILocation(line: 2514, column: 10, scope: !4922)
!4978 = !DILocation(line: 2516, column: 3, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 2515, column: 8)
!4980 = !DILocation(line: 2517, column: 23, scope: !4979)
!4981 = !DILocation(line: 2517, column: 3, scope: !4979)
!4982 = !DILocation(line: 2518, column: 12, scope: !4979)
!4983 = !DILocation(line: 2518, column: 3, scope: !4979)
!4984 = !DILocation(line: 2519, column: 8, scope: !4979)
!4985 = !DILocation(line: 2520, column: 6, scope: !4922)
!4986 = !DILocation(line: 2521, column: 4, scope: !4922)
!4987 = !DILocation(line: 2527, column: 13, scope: !4925)
!4988 = !DILocation(line: 0, scope: !4925)
!4989 = !DILocation(line: 2528, column: 20, scope: !4925)
!4990 = !DILocation(line: 2531, column: 7, scope: !4929)
!4991 = !DILocation(line: 2531, column: 23, scope: !4929)
!4992 = !DILocation(line: 2532, column: 7, scope: !4929)
!4993 = !DILocation(line: 2532, column: 26, scope: !4929)
!4994 = !DILocation(line: 2533, column: 7, scope: !4929)
!4995 = !DILocation(line: 2533, column: 26, scope: !4929)
!4996 = !DILocation(line: 2534, column: 6, scope: !4929)
!4997 = !DILocation(line: 2534, column: 9, scope: !4929)
!4998 = !DILocation(line: 2534, column: 32, scope: !4929)
!4999 = !DILocation(line: 2531, column: 6, scope: !4925)
!5000 = !DILocation(line: 2536, column: 18, scope: !4928)
!5001 = !DILocation(line: 0, scope: !4928)
!5002 = !DILocation(line: 2537, column: 19, scope: !4928)
!5003 = !DILocation(line: 2539, column: 15, scope: !4933)
!5004 = !DILocation(line: 2539, column: 12, scope: !4933)
!5005 = !DILocation(line: 2539, column: 10, scope: !4928)
!5006 = !DILocation(line: 2541, column: 15, scope: !4932)
!5007 = !DILocation(line: 0, scope: !4932)
!5008 = !DILocation(line: 2543, column: 5, scope: !4932)
!5009 = !DILocation(line: 2545, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2545, column: 7)
!5011 = !DILocation(line: 2545, column: 7, scope: !4932)
!5012 = !DILocation(line: 2547, column: 49, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 2546, column: 5)
!5014 = !DILocation(line: 2547, column: 7, scope: !5013)
!5015 = !DILocation(line: 2548, column: 22, scope: !5013)
!5016 = !DILocation(line: 2549, column: 7, scope: !5013)
!5017 = !DILocation(line: 2552, column: 7, scope: !4937)
!5018 = !DILocation(line: 2552, column: 7, scope: !4932)
!5019 = !DILocation(line: 2554, column: 39, scope: !4936)
!5020 = !DILocation(line: 0, scope: !4936)
!5021 = !DILocation(line: 2556, column: 7, scope: !4936)
!5022 = !DILocation(line: 2558, column: 12, scope: !4936)
!5023 = !DILocation(line: 2558, column: 17, scope: !4936)
!5024 = !DILocation(line: 2559, column: 12, scope: !4936)
!5025 = !DILocation(line: 2559, column: 21, scope: !4936)
!5026 = !DILocation(line: 2560, column: 12, scope: !4936)
!5027 = !DILocation(line: 2560, column: 16, scope: !4936)
!5028 = !DILocation(line: 2561, column: 12, scope: !4936)
!5029 = !DILocation(line: 2561, column: 23, scope: !4936)
!5030 = !DILocation(line: 2565, column: 35, scope: !4940)
!5031 = !DILocation(line: 2565, column: 12, scope: !4940)
!5032 = !DILocation(line: 2565, column: 11, scope: !4936)
!5033 = !DILocation(line: 2567, column: 8, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 2567, column: 8)
!5035 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2566, column: 9)
!5036 = !DILocation(line: 2567, column: 8, scope: !5035)
!5037 = !DILocation(line: 2569, column: 8, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 2568, column: 6)
!5039 = !DILocation(line: 2570, column: 28, scope: !5038)
!5040 = !DILocation(line: 2570, column: 8, scope: !5038)
!5041 = !DILocation(line: 2571, column: 17, scope: !5038)
!5042 = !DILocation(line: 2571, column: 8, scope: !5038)
!5043 = !DILocation(line: 2573, column: 27, scope: !5038)
!5044 = !DILocation(line: 2573, column: 8, scope: !5038)
!5045 = !DILocation(line: 2574, column: 6, scope: !5038)
!5046 = !DILocation(line: 2576, column: 4, scope: !5035)
!5047 = !DILocation(line: 2577, column: 10, scope: !5035)
!5048 = !DILocation(line: 2577, column: 4, scope: !5035)
!5049 = !DILocation(line: 2578, column: 9, scope: !5035)
!5050 = !DILocation(line: 2582, column: 21, scope: !4939)
!5051 = !DILocation(line: 0, scope: !4939)
!5052 = !DILocation(line: 2583, column: 24, scope: !4939)
!5053 = !DILocation(line: 2583, column: 11, scope: !4939)
!5054 = !DILocation(line: 2583, column: 17, scope: !4939)
!5055 = !DILocation(line: 2586, column: 44, scope: !4939)
!5056 = !DILocation(line: 2586, column: 4, scope: !4939)
!5057 = !DILocation(line: 2588, column: 22, scope: !4936)
!5058 = !DILocation(line: 2589, column: 5, scope: !4936)
!5059 = !DILocation(line: 2597, column: 14, scope: !4942)
!5060 = !DILocation(line: 0, scope: !4942)
!5061 = !DILocation(line: 0, scope: !4946)
!5062 = !DILocation(line: 0, scope: !4945)
!5063 = !DILocation(line: 2599, column: 7, scope: !4947)
!5064 = !DILocation(line: 0, scope: !4947)
!5065 = !DILocation(line: 2599, column: 18, scope: !4946)
!5066 = !DILocation(line: 2599, column: 16, scope: !4946)
!5067 = !DILocation(line: 2599, column: 2, scope: !4947)
!5068 = !DILocation(line: 2601, column: 6, scope: !4945)
!5069 = !DILocation(line: 2601, column: 15, scope: !4945)
!5070 = !DILocation(line: 2601, column: 11, scope: !4945)
!5071 = !DILocation(line: 2603, column: 21, scope: !4945)
!5072 = !DILocation(line: 2604, column: 6, scope: !4945)
!5073 = !DILocation(line: 2605, column: 4, scope: !4946)
!5074 = !DILocation(line: 2599, column: 56, scope: !4946)
!5075 = !DILocation(line: 2599, column: 2, scope: !4946)
!5076 = distinct !{!5076, !5067, !5077}
!5077 = !DILocation(line: 2605, column: 4, scope: !4947)
!5078 = !DILocation(line: 2606, column: 17, scope: !4942)
!5079 = !DILocation(line: 2608, column: 7, scope: !4916)
!5080 = !DILocation(line: 2615, column: 20, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 2615, column: 6)
!5082 = !DILocation(line: 2615, column: 6, scope: !4949)
!5083 = !DILocation(line: 2616, column: 8, scope: !5081)
!5084 = !DILocation(line: 2616, column: 4, scope: !5081)
!5085 = !DILocation(line: 2618, column: 34, scope: !4949)
!5086 = !DILocation(line: 2618, column: 22, scope: !4949)
!5087 = !DILocation(line: 2618, column: 6, scope: !4949)
!5088 = !DILocation(line: 0, scope: !4949)
!5089 = !DILocation(line: 2619, column: 11, scope: !4952)
!5090 = !DILocation(line: 2619, column: 8, scope: !4952)
!5091 = !DILocation(line: 2619, column: 6, scope: !4949)
!5092 = !DILocation(line: 2623, column: 12, scope: !4951)
!5093 = !DILocation(line: 0, scope: !4951)
!5094 = !DILocation(line: 2624, column: 45, scope: !4951)
!5095 = !DILocation(line: 2624, column: 6, scope: !4951)
!5096 = !DILocation(line: 2625, column: 4, scope: !4951)
!5097 = !DILocation(line: 2626, column: 17, scope: !4949)
!5098 = !DILocation(line: 2628, column: 7, scope: !4916)
!5099 = !DILocation(line: 2635, column: 1, scope: !4903)
!5100 = distinct !DISubprogram(name: "gsi_next", scope: !584, file: !584, line: 4485, type: !5101, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5104)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{null, !5103}
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!5104 = !{!5105}
!5105 = !DILocalVariable(name: "i", arg: 1, scope: !5100, file: !584, line: 4485, type: !5103)
!5106 = !DILocation(line: 0, scope: !5100)
!5107 = !DILocation(line: 4487, column: 15, scope: !5100)
!5108 = !DILocation(line: 4487, column: 20, scope: !5100)
!5109 = !DILocation(line: 4487, column: 10, scope: !5100)
!5110 = !DILocation(line: 4488, column: 1, scope: !5100)
!5111 = distinct !DISubprogram(name: "bb_seq", scope: !584, file: !584, line: 237, type: !5112, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5117)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!1004, !5114}
!5114 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !691, line: 112, baseType: !5115)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!5117 = !{!5118}
!5118 = !DILocalVariable(name: "bb", arg: 1, scope: !5111, file: !584, line: 237, type: !5114)
!5119 = !DILocation(line: 0, scope: !5111)
!5120 = !DILocation(line: 239, column: 17, scope: !5111)
!5121 = !DILocation(line: 239, column: 23, scope: !5111)
!5122 = !DILocation(line: 239, column: 33, scope: !5111)
!5123 = !DILocation(line: 239, column: 43, scope: !5111)
!5124 = !DILocation(line: 239, column: 36, scope: !5111)
!5125 = !DILocation(line: 239, column: 10, scope: !5111)
!5126 = !DILocation(line: 239, column: 68, scope: !5111)
!5127 = !DILocation(line: 239, column: 3, scope: !5111)
!5128 = distinct !DISubprogram(name: "gimple_seq_first", scope: !584, file: !584, line: 159, type: !5129, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5134)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!1009, !5131}
!5131 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !691, line: 67, baseType: !5132)
!5132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5133, size: 64)
!5133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!5134 = !{!5135}
!5135 = !DILocalVariable(name: "s", arg: 1, scope: !5128, file: !584, line: 159, type: !5131)
!5136 = !DILocation(line: 0, scope: !5128)
!5137 = !DILocation(line: 161, column: 10, scope: !5128)
!5138 = !DILocation(line: 161, column: 17, scope: !5128)
!5139 = !DILocation(line: 161, column: 3, scope: !5128)
!5140 = distinct !DISubprogram(name: "VEC_structure_heap_free", scope: !3, file: !3, line: 199, type: !5141, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{null, !3793}
!5143 = !{!5144}
!5144 = !DILocalVariable(name: "vec_", arg: 1, scope: !5140, file: !3, line: 199, type: !3793)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 199, column: 1, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 199, column: 1)
!5148 = !DILocation(line: 199, column: 1, scope: !5140)
!5149 = distinct !DISubprogram(name: "add_access_to_acc_sites", scope: !3, file: !3, line: 485, type: !5150, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5152)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{null, !1014, !690, !1444}
!5152 = !{!5153, !5154, !5155, !5156, !5157}
!5153 = !DILocalVariable(name: "stmt", arg: 1, scope: !5149, file: !3, line: 485, type: !1014)
!5154 = !DILocalVariable(name: "var", arg: 2, scope: !5149, file: !3, line: 485, type: !690)
!5155 = !DILocalVariable(name: "accs", arg: 3, scope: !5149, file: !3, line: 485, type: !1444)
!5156 = !DILocalVariable(name: "acc", scope: !5149, file: !3, line: 487, type: !2074)
!5157 = !DILocalVariable(name: "slot", scope: !5158, file: !3, line: 494, type: !1468)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 493, column: 6)
!5159 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 492, column: 8)
!5160 = !DILocation(line: 0, scope: !5149)
!5161 = !DILocation(line: 490, column: 33, scope: !5149)
!5162 = !DILocation(line: 490, column: 39, scope: !5149)
!5163 = !DILocation(line: 490, column: 6, scope: !5149)
!5164 = !DILocation(line: 492, column: 9, scope: !5159)
!5165 = !DILocation(line: 492, column: 8, scope: !5149)
!5166 = !DILocation(line: 496, column: 14, scope: !5158)
!5167 = !DILocation(line: 497, column: 13, scope: !5158)
!5168 = !DILocation(line: 497, column: 18, scope: !5158)
!5169 = !DILocation(line: 498, column: 13, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 498, column: 12)
!5171 = !DILocation(line: 498, column: 12, scope: !5158)
!5172 = !DILocation(line: 499, column: 15, scope: !5170)
!5173 = !DILocation(line: 499, column: 8, scope: !5170)
!5174 = !DILocation(line: 499, column: 13, scope: !5170)
!5175 = !DILocation(line: 499, column: 3, scope: !5170)
!5176 = !DILocation(line: 501, column: 8, scope: !5170)
!5177 = !DILocation(line: 501, column: 13, scope: !5170)
!5178 = !DILocation(line: 503, column: 6, scope: !5158)
!5179 = !DILocation(line: 502, column: 15, scope: !5158)
!5180 = !DILocation(line: 0, scope: !5158)
!5181 = !DILocation(line: 504, column: 14, scope: !5158)
!5182 = !DILocation(line: 505, column: 6, scope: !5158)
!5183 = !DILocation(line: 506, column: 9, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 506, column: 8)
!5185 = !DILocation(line: 506, column: 8, scope: !5149)
!5186 = !DILocation(line: 507, column: 6, scope: !5184)
!5187 = !DILocation(line: 508, column: 1, scope: !5149)
!5188 = distinct !DISubprogram(name: "find_field_in_struct", scope: !3, file: !3, line: 308, type: !5189, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!1997, !2069, !690}
!5191 = !{!5192, !5193, !5194, !5195}
!5192 = !DILocalVariable(name: "str", arg: 1, scope: !5188, file: !3, line: 308, type: !2069)
!5193 = !DILocalVariable(name: "field_decl", arg: 2, scope: !5188, file: !3, line: 308, type: !690)
!5194 = !DILocalVariable(name: "i", scope: !5188, file: !3, line: 310, type: !671)
!5195 = !DILocalVariable(name: "field", scope: !5188, file: !3, line: 312, type: !690)
!5196 = !DILocation(line: 0, scope: !5188)
!5197 = !DILocation(line: 312, column: 45, scope: !5188)
!5198 = !DILocation(line: 312, column: 16, scope: !5188)
!5199 = !DILocation(line: 0, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 314, column: 3)
!5201 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 314, column: 3)
!5202 = !DILocation(line: 0, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 315, column: 9)
!5204 = !DILocation(line: 314, column: 8, scope: !5201)
!5205 = !DILocation(line: 0, scope: !5201)
!5206 = !DILocation(line: 314, column: 17, scope: !5200)
!5207 = !DILocation(line: 314, column: 3, scope: !5201)
!5208 = !DILocation(line: 315, column: 14, scope: !5203)
!5209 = !DILocation(line: 315, column: 24, scope: !5203)
!5210 = !DILocation(line: 315, column: 29, scope: !5203)
!5211 = !DILocation(line: 315, column: 9, scope: !5200)
!5212 = !DILocation(line: 316, column: 16, scope: !5203)
!5213 = !DILocation(line: 316, column: 7, scope: !5203)
!5214 = !DILocation(line: 314, column: 37, scope: !5200)
!5215 = !DILocation(line: 314, column: 3, scope: !5200)
!5216 = distinct !{!5216, !5207, !5217}
!5217 = !DILocation(line: 316, column: 30, scope: !5201)
!5218 = !DILocation(line: 319, column: 1, scope: !5188)
!5219 = distinct !DISubprogram(name: "make_field_acc_node", scope: !3, file: !3, line: 448, type: !5220, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!2072}
!5222 = !DILocation(line: 450, column: 10, scope: !5219)
!5223 = !DILocation(line: 450, column: 3, scope: !5219)
!5224 = distinct !DISubprogram(name: "decompose_access", scope: !3, file: !3, line: 431, type: !5225, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5227)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!670, !690, !2072}
!5227 = !{!5228, !5229}
!5228 = !DILocalVariable(name: "str_decl", arg: 1, scope: !5224, file: !3, line: 431, type: !690)
!5229 = !DILocalVariable(name: "acc", arg: 2, scope: !5224, file: !3, line: 431, type: !2072)
!5230 = !DILocation(line: 0, scope: !5224)
!5231 = !DILocation(line: 433, column: 3, scope: !5224)
!5232 = !DILocation(line: 0, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 435, column: 7)
!5234 = !DILocation(line: 435, column: 7, scope: !5233)
!5235 = !DILocation(line: 435, column: 28, scope: !5233)
!5236 = !DILocation(line: 435, column: 7, scope: !5224)
!5237 = !DILocation(line: 436, column: 12, scope: !5233)
!5238 = !DILocation(line: 436, column: 5, scope: !5233)
!5239 = !DILocation(line: 437, column: 12, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 437, column: 12)
!5241 = !DILocation(line: 437, column: 33, scope: !5240)
!5242 = !DILocation(line: 437, column: 12, scope: !5233)
!5243 = !DILocation(line: 439, column: 12, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 439, column: 12)
!5245 = !DILocation(line: 439, column: 33, scope: !5244)
!5246 = !DILocation(line: 439, column: 12, scope: !5240)
!5247 = !DILocation(line: 443, column: 1, scope: !5224)
!5248 = distinct !DISubprogram(name: "gimple_bb", scope: !584, file: !584, line: 1112, type: !5249, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5251)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!978, !2036}
!5251 = !{!5252}
!5252 = !DILocalVariable(name: "g", arg: 1, scope: !5248, file: !584, line: 1112, type: !2036)
!5253 = !DILocation(line: 0, scope: !5248)
!5254 = !DILocation(line: 1114, column: 20, scope: !5248)
!5255 = !DILocation(line: 1114, column: 3, scope: !5248)
!5256 = distinct !DISubprogram(name: "add_field_acc_to_acc_sites", scope: !3, file: !3, line: 467, type: !5257, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5259)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{null, !2072, !1444}
!5259 = !{!5260, !5261, !5262}
!5260 = !DILocalVariable(name: "acc", arg: 1, scope: !5256, file: !3, line: 467, type: !2072)
!5261 = !DILocalVariable(name: "f_accs", arg: 2, scope: !5256, file: !3, line: 468, type: !1444)
!5262 = !DILocalVariable(name: "slot", scope: !5256, file: !3, line: 470, type: !1468)
!5263 = !DILocation(line: 0, scope: !5256)
!5264 = !DILocation(line: 472, column: 3, scope: !5256)
!5265 = !DILocation(line: 473, column: 49, scope: !5256)
!5266 = !DILocation(line: 474, column: 8, scope: !5256)
!5267 = !DILocation(line: 473, column: 10, scope: !5256)
!5268 = !DILocation(line: 476, column: 9, scope: !5256)
!5269 = !DILocation(line: 477, column: 1, scope: !5256)
!5270 = distinct !DISubprogram(name: "find_field_in_struct_1", scope: !3, file: !3, line: 283, type: !5271, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5273)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!690, !690, !690}
!5273 = !{!5274, !5275, !5276}
!5274 = !DILocalVariable(name: "str_type", arg: 1, scope: !5270, file: !3, line: 283, type: !690)
!5275 = !DILocalVariable(name: "field", arg: 2, scope: !5270, file: !3, line: 283, type: !690)
!5276 = !DILocalVariable(name: "str_field", scope: !5270, file: !3, line: 285, type: !690)
!5277 = !DILocation(line: 0, scope: !5270)
!5278 = !DILocation(line: 287, column: 8, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 287, column: 7)
!5280 = !DILocation(line: 287, column: 7, scope: !5270)
!5281 = !DILocation(line: 290, column: 20, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 290, column: 3)
!5283 = !DILocation(line: 290, column: 8, scope: !5282)
!5284 = !DILocation(line: 0, scope: !5282)
!5285 = !DILocation(line: 290, column: 3, scope: !5282)
!5286 = !DILocation(line: 294, column: 12, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 294, column: 11)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 292, column: 5)
!5289 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 290, column: 3)
!5290 = !DILocation(line: 294, column: 11, scope: !5288)
!5291 = !DILocation(line: 297, column: 11, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 297, column: 11)
!5293 = !DILocation(line: 297, column: 11, scope: !5288)
!5294 = !DILocation(line: 291, column: 20, scope: !5289)
!5295 = !DILocation(line: 290, column: 3, scope: !5289)
!5296 = distinct !{!5296, !5285, !5297}
!5297 = !DILocation(line: 299, column: 5, scope: !5282)
!5298 = !DILocation(line: 302, column: 1, scope: !5270)
!5299 = distinct !DISubprogram(name: "decompose_indirect_ref_acc", scope: !3, file: !3, line: 373, type: !5225, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5300)
!5300 = !{!5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308}
!5301 = !DILocalVariable(name: "str_decl", arg: 1, scope: !5299, file: !3, line: 373, type: !690)
!5302 = !DILocalVariable(name: "acc", arg: 2, scope: !5299, file: !3, line: 373, type: !2072)
!5303 = !DILocalVariable(name: "ref_var", scope: !5299, file: !3, line: 375, type: !690)
!5304 = !DILocalVariable(name: "struct_size", scope: !5299, file: !3, line: 376, type: !690)
!5305 = !DILocalVariable(name: "op0", scope: !5299, file: !3, line: 376, type: !690)
!5306 = !DILocalVariable(name: "op1", scope: !5299, file: !3, line: 376, type: !690)
!5307 = !DILocalVariable(name: "before_cast", scope: !5299, file: !3, line: 377, type: !690)
!5308 = !DILocalVariable(name: "rhs_code", scope: !5299, file: !3, line: 378, type: !317)
!5309 = !DILocation(line: 0, scope: !5299)
!5310 = !DILocation(line: 380, column: 13, scope: !5299)
!5311 = !DILocation(line: 382, column: 7, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 382, column: 7)
!5313 = !DILocation(line: 382, column: 27, scope: !5312)
!5314 = !DILocation(line: 382, column: 7, scope: !5299)
!5315 = !DILocation(line: 385, column: 23, scope: !5299)
!5316 = !DILocation(line: 385, column: 8, scope: !5299)
!5317 = !DILocation(line: 385, column: 21, scope: !5299)
!5318 = !DILocation(line: 386, column: 8, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 386, column: 7)
!5320 = !DILocation(line: 387, column: 7, scope: !5319)
!5321 = !DILocation(line: 387, column: 11, scope: !5319)
!5322 = !DILocation(line: 387, column: 43, scope: !5319)
!5323 = !DILocation(line: 386, column: 7, scope: !5299)
!5324 = !DILocation(line: 390, column: 43, scope: !5299)
!5325 = !DILocation(line: 390, column: 14, scope: !5299)
!5326 = !DILocation(line: 393, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 392, column: 7)
!5328 = !DILocation(line: 397, column: 34, scope: !5299)
!5329 = !DILocation(line: 397, column: 9, scope: !5299)
!5330 = !DILocation(line: 398, column: 34, scope: !5299)
!5331 = !DILocation(line: 398, column: 9, scope: !5299)
!5332 = !DILocation(line: 401, column: 14, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 400, column: 7)
!5334 = !DILocation(line: 401, column: 26, scope: !5333)
!5335 = !DILocation(line: 402, column: 14, scope: !5333)
!5336 = !DILocation(line: 400, column: 8, scope: !5333)
!5337 = !DILocation(line: 400, column: 7, scope: !5299)
!5338 = !DILocation(line: 405, column: 12, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 405, column: 7)
!5340 = !DILocation(line: 405, column: 7, scope: !5339)
!5341 = !DILocation(line: 405, column: 7, scope: !5299)
!5342 = !DILocation(line: 406, column: 19, scope: !5339)
!5343 = !DILocation(line: 406, column: 5, scope: !5339)
!5344 = !DILocation(line: 408, column: 24, scope: !5339)
!5345 = !DILocation(line: 0, scope: !5339)
!5346 = !DILocation(line: 410, column: 8, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 410, column: 7)
!5348 = !DILocation(line: 410, column: 7, scope: !5299)
!5349 = !DILocation(line: 414, column: 7, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 414, column: 7)
!5351 = !DILocation(line: 414, column: 7, scope: !5299)
!5352 = !DILocation(line: 417, column: 17, scope: !5299)
!5353 = !DILocation(line: 419, column: 46, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 419, column: 7)
!5355 = !DILocation(line: 419, column: 8, scope: !5354)
!5356 = !DILocation(line: 423, column: 1, scope: !5299)
!5357 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !584, file: !584, line: 1815, type: !5358, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5360)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{!317, !2036}
!5360 = !{!5361, !5362}
!5361 = !DILocalVariable(name: "gs", arg: 1, scope: !5357, file: !584, line: 1815, type: !2036)
!5362 = !DILocalVariable(name: "code", scope: !5357, file: !584, line: 1817, type: !317)
!5363 = !DILocation(line: 0, scope: !5357)
!5364 = !DILocation(line: 1820, column: 10, scope: !5357)
!5365 = !DILocation(line: 1821, column: 7, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5357, file: !584, line: 1821, column: 7)
!5367 = !DILocation(line: 1821, column: 35, scope: !5366)
!5368 = !DILocation(line: 1821, column: 7, scope: !5357)
!5369 = !DILocation(line: 1822, column: 12, scope: !5366)
!5370 = !DILocation(line: 1822, column: 5, scope: !5366)
!5371 = !DILocation(line: 1824, column: 3, scope: !5357)
!5372 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !584, file: !584, line: 1727, type: !4420, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5373)
!5373 = !{!5374}
!5374 = !DILocalVariable(name: "gs", arg: 1, scope: !5372, file: !584, line: 1727, type: !2036)
!5375 = !DILocation(line: 0, scope: !5372)
!5376 = !DILocation(line: 1730, column: 10, scope: !5372)
!5377 = !DILocation(line: 1730, column: 3, scope: !5372)
!5378 = distinct !DISubprogram(name: "gimple_assign_rhs2", scope: !584, file: !584, line: 1759, type: !4420, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5379)
!5379 = !{!5380}
!5380 = !DILocalVariable(name: "gs", arg: 1, scope: !5378, file: !584, line: 1759, type: !2036)
!5381 = !DILocation(line: 0, scope: !5378)
!5382 = !DILocation(line: 1763, column: 7, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !584, line: 1763, column: 7)
!5384 = !DILocation(line: 1763, column: 27, scope: !5383)
!5385 = !DILocation(line: 1763, column: 7, scope: !5378)
!5386 = !DILocation(line: 1764, column: 12, scope: !5383)
!5387 = !DILocation(line: 1764, column: 5, scope: !5383)
!5388 = !DILocation(line: 0, scope: !5383)
!5389 = !DILocation(line: 1767, column: 1, scope: !5378)
!5390 = distinct !DISubprogram(name: "single_ssa_tree_operand", scope: !4621, file: !4621, line: 803, type: !5391, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5393)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{!690, !1014, !671}
!5393 = !{!5394, !5395, !5396, !5397}
!5394 = !DILocalVariable(name: "stmt", arg: 1, scope: !5390, file: !4621, line: 803, type: !1014)
!5395 = !DILocalVariable(name: "flags", arg: 2, scope: !5390, file: !4621, line: 803, type: !671)
!5396 = !DILocalVariable(name: "var", scope: !5390, file: !4621, line: 805, type: !690)
!5397 = !DILocalVariable(name: "iter", scope: !5390, file: !4621, line: 806, type: !5398)
!5398 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !662, line: 140, baseType: !5399)
!5399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !662, line: 131, size: 320, elements: !5400)
!5400 = !{!5401, !5402, !5403, !5405, !5407, !5408, !5409}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5399, file: !662, line: 133, baseType: !670, size: 8)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5399, file: !662, line: 134, baseType: !661, size: 32, offset: 32)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5399, file: !662, line: 135, baseType: !5404, size: 64, offset: 64)
!5404 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !662, line: 42, baseType: !1043)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5399, file: !662, line: 136, baseType: !5406, size: 64, offset: 128)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !662, line: 50, baseType: !1050)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5399, file: !662, line: 137, baseType: !671, size: 32, offset: 192)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5399, file: !662, line: 138, baseType: !671, size: 32, offset: 224)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5399, file: !662, line: 139, baseType: !1014, size: 64, offset: 256)
!5410 = !DILocation(line: 0, scope: !5390)
!5411 = !DILocation(line: 806, column: 3, scope: !5390)
!5412 = !DILocation(line: 808, column: 9, scope: !5390)
!5413 = !DILocation(line: 809, column: 7, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5390, file: !4621, line: 809, column: 7)
!5415 = !DILocation(line: 809, column: 7, scope: !5390)
!5416 = !DILocation(line: 811, column: 3, scope: !5390)
!5417 = !DILocation(line: 812, column: 7, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5390, file: !4621, line: 812, column: 7)
!5419 = !DILocation(line: 815, column: 1, scope: !5390)
!5420 = distinct !DISubprogram(name: "is_result_of_mult", scope: !3, file: !3, line: 326, type: !5421, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5423)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{!670, !690, !1048, !690}
!5423 = !{!5424, !5425, !5426, !5427, !5428, !5431, !5434}
!5424 = !DILocalVariable(name: "arg", arg: 1, scope: !5420, file: !3, line: 326, type: !690)
!5425 = !DILocalVariable(name: "num", arg: 2, scope: !5420, file: !3, line: 326, type: !1048)
!5426 = !DILocalVariable(name: "struct_size", arg: 3, scope: !5420, file: !3, line: 326, type: !690)
!5427 = !DILocalVariable(name: "size_def_stmt", scope: !5420, file: !3, line: 328, type: !1014)
!5428 = !DILocalVariable(name: "lhs", scope: !5429, file: !3, line: 336, type: !690)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 335, column: 5)
!5430 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 334, column: 7)
!5431 = !DILocalVariable(name: "arg0", scope: !5432, file: !3, line: 344, type: !690)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 343, column: 2)
!5433 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 342, column: 11)
!5434 = !DILocalVariable(name: "arg1", scope: !5432, file: !3, line: 345, type: !690)
!5435 = !DILocation(line: 0, scope: !5420)
!5436 = !DILocation(line: 328, column: 26, scope: !5420)
!5437 = !DILocation(line: 334, column: 7, scope: !5430)
!5438 = !DILocation(line: 334, column: 21, scope: !5430)
!5439 = !DILocation(line: 334, column: 24, scope: !5430)
!5440 = !DILocation(line: 334, column: 7, scope: !5420)
!5441 = !DILocation(line: 336, column: 18, scope: !5429)
!5442 = !DILocation(line: 0, scope: !5429)
!5443 = !DILocation(line: 339, column: 12, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 339, column: 11)
!5445 = !DILocation(line: 339, column: 11, scope: !5429)
!5446 = !DILocation(line: 342, column: 11, scope: !5433)
!5447 = !DILocation(line: 342, column: 50, scope: !5433)
!5448 = !DILocation(line: 342, column: 11, scope: !5429)
!5449 = !DILocation(line: 344, column: 16, scope: !5432)
!5450 = !DILocation(line: 0, scope: !5432)
!5451 = !DILocation(line: 345, column: 16, scope: !5432)
!5452 = !DILocation(line: 347, column: 8, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 347, column: 8)
!5454 = !DILocation(line: 347, column: 8, scope: !5432)
!5455 = !DILocation(line: 349, column: 13, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 348, column: 6)
!5457 = !DILocation(line: 350, column: 8, scope: !5456)
!5458 = !DILocation(line: 353, column: 8, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 353, column: 8)
!5460 = !DILocation(line: 353, column: 8, scope: !5432)
!5461 = !DILocation(line: 355, column: 13, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 354, column: 6)
!5463 = !DILocation(line: 356, column: 8, scope: !5462)
!5464 = !DILocation(line: 359, column: 5, scope: !5430)
!5465 = !DILocation(line: 361, column: 8, scope: !5420)
!5466 = !DILocation(line: 362, column: 3, scope: !5420)
!5467 = !DILocation(line: 363, column: 1, scope: !5420)
!5468 = distinct !DISubprogram(name: "gimple_expr_code", scope: !584, file: !584, line: 1438, type: !5358, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5469)
!5469 = !{!5470, !5471}
!5470 = !DILocalVariable(name: "stmt", arg: 1, scope: !5468, file: !584, line: 1438, type: !2036)
!5471 = !DILocalVariable(name: "code", scope: !5468, file: !584, line: 1440, type: !583)
!5472 = !DILocation(line: 0, scope: !5468)
!5473 = !DILocation(line: 1440, column: 27, scope: !5468)
!5474 = !DILocation(line: 1441, column: 29, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5468, file: !584, line: 1441, column: 7)
!5476 = !DILocation(line: 1442, column: 42, scope: !5475)
!5477 = !DILocation(line: 1442, column: 5, scope: !5475)
!5478 = !DILocation(line: 1446, column: 5, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5475, file: !584, line: 1443, column: 12)
!5480 = !DILocation(line: 1448, column: 5, scope: !5468)
!5481 = !DILocation(line: 1450, column: 1, scope: !5468)
!5482 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !584, file: !584, line: 1686, type: !5483, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5485)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!655, !317}
!5485 = !{!5486}
!5486 = !DILocalVariable(name: "code", arg: 1, scope: !5482, file: !584, line: 1686, type: !317)
!5487 = !DILocation(line: 0, scope: !5482)
!5488 = !DILocation(line: 1688, column: 34, scope: !5482)
!5489 = !DILocation(line: 1688, column: 10, scope: !5482)
!5490 = !DILocation(line: 1688, column: 3, scope: !5482)
!5491 = distinct !DISubprogram(name: "gimple_num_ops", scope: !584, file: !584, line: 1596, type: !5492, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5494)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!7, !2036}
!5494 = !{!5495}
!5495 = !DILocalVariable(name: "gs", arg: 1, scope: !5491, file: !584, line: 1596, type: !2036)
!5496 = !DILocation(line: 0, scope: !5491)
!5497 = !DILocation(line: 1598, column: 21, scope: !5491)
!5498 = !DILocation(line: 1598, column: 3, scope: !5491)
!5499 = distinct !DISubprogram(name: "op_iter_init_tree", scope: !4621, file: !4621, line: 792, type: !5500, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5503)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!690, !5502, !1014, !671}
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5503 = !{!5504, !5505, !5506}
!5504 = !DILocalVariable(name: "ptr", arg: 1, scope: !5499, file: !4621, line: 792, type: !5502)
!5505 = !DILocalVariable(name: "stmt", arg: 2, scope: !5499, file: !4621, line: 792, type: !1014)
!5506 = !DILocalVariable(name: "flags", arg: 3, scope: !5499, file: !4621, line: 792, type: !671)
!5507 = !DILocation(line: 0, scope: !5499)
!5508 = !DILocation(line: 794, column: 3, scope: !5499)
!5509 = !DILocation(line: 795, column: 8, scope: !5499)
!5510 = !DILocation(line: 795, column: 18, scope: !5499)
!5511 = !DILocation(line: 796, column: 10, scope: !5499)
!5512 = !DILocation(line: 796, column: 3, scope: !5499)
!5513 = distinct !DISubprogram(name: "op_iter_done", scope: !4621, file: !4621, line: 652, type: !5514, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5518)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!670, !5516}
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5398)
!5518 = !{!5519}
!5519 = !DILocalVariable(name: "ptr", arg: 1, scope: !5513, file: !4621, line: 652, type: !5516)
!5520 = !DILocation(line: 0, scope: !5513)
!5521 = !DILocation(line: 654, column: 15, scope: !5513)
!5522 = !DILocation(line: 654, column: 3, scope: !5513)
!5523 = distinct !DISubprogram(name: "op_iter_next_tree", scope: !4621, file: !4621, line: 699, type: !5524, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!690, !5502}
!5526 = !{!5527, !5528}
!5527 = !DILocalVariable(name: "ptr", arg: 1, scope: !5523, file: !4621, line: 699, type: !5502)
!5528 = !DILocalVariable(name: "val", scope: !5523, file: !4621, line: 701, type: !690)
!5529 = !DILocation(line: 0, scope: !5523)
!5530 = !DILocation(line: 705, column: 12, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5523, file: !4621, line: 705, column: 7)
!5532 = !DILocation(line: 705, column: 7, scope: !5531)
!5533 = !DILocation(line: 705, column: 7, scope: !5523)
!5534 = !DILocation(line: 707, column: 13, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5531, file: !4621, line: 706, column: 5)
!5536 = !DILocation(line: 708, column: 24, scope: !5535)
!5537 = !DILocation(line: 708, column: 30, scope: !5535)
!5538 = !DILocation(line: 708, column: 17, scope: !5535)
!5539 = !DILocation(line: 709, column: 7, scope: !5535)
!5540 = !DILocation(line: 711, column: 12, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5523, file: !4621, line: 711, column: 7)
!5542 = !DILocation(line: 711, column: 7, scope: !5541)
!5543 = !DILocation(line: 711, column: 7, scope: !5523)
!5544 = !DILocation(line: 713, column: 13, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !4621, line: 712, column: 5)
!5546 = !DILocation(line: 714, column: 24, scope: !5545)
!5547 = !DILocation(line: 714, column: 30, scope: !5545)
!5548 = !DILocation(line: 714, column: 17, scope: !5545)
!5549 = !DILocation(line: 715, column: 7, scope: !5545)
!5550 = !DILocation(line: 718, column: 8, scope: !5523)
!5551 = !DILocation(line: 718, column: 13, scope: !5523)
!5552 = !DILocation(line: 719, column: 3, scope: !5523)
!5553 = !DILocation(line: 721, column: 1, scope: !5523)
!5554 = distinct !DISubprogram(name: "op_iter_init", scope: !4621, file: !4621, line: 742, type: !5555, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5557)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{null, !5502, !1014, !671}
!5557 = !{!5558, !5559, !5560}
!5558 = !DILocalVariable(name: "ptr", arg: 1, scope: !5554, file: !4621, line: 742, type: !5502)
!5559 = !DILocalVariable(name: "stmt", arg: 2, scope: !5554, file: !4621, line: 742, type: !1014)
!5560 = !DILocalVariable(name: "flags", arg: 3, scope: !5554, file: !4621, line: 742, type: !671)
!5561 = !DILocation(line: 0, scope: !5554)
!5562 = !DILocation(line: 748, column: 8, scope: !5554)
!5563 = !DILocation(line: 748, column: 13, scope: !5554)
!5564 = !DILocation(line: 750, column: 7, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5554, file: !4621, line: 749, column: 7)
!5566 = !DILocation(line: 751, column: 7, scope: !5565)
!5567 = !DILocation(line: 749, column: 7, scope: !5554)
!5568 = !DILocation(line: 752, column: 5, scope: !5565)
!5569 = !DILocation(line: 753, column: 15, scope: !5554)
!5570 = !DILocation(line: 753, column: 52, scope: !5554)
!5571 = !DILocation(line: 753, column: 8, scope: !5554)
!5572 = !DILocation(line: 753, column: 13, scope: !5554)
!5573 = !DILocation(line: 755, column: 7, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5554, file: !4621, line: 754, column: 7)
!5575 = !DILocation(line: 755, column: 10, scope: !5574)
!5576 = !DILocation(line: 756, column: 7, scope: !5574)
!5577 = !DILocation(line: 756, column: 10, scope: !5574)
!5578 = !DILocation(line: 756, column: 29, scope: !5574)
!5579 = !DILocation(line: 754, column: 7, scope: !5554)
!5580 = !DILocation(line: 757, column: 22, scope: !5574)
!5581 = !DILocation(line: 757, column: 28, scope: !5574)
!5582 = !DILocation(line: 757, column: 15, scope: !5574)
!5583 = !DILocation(line: 757, column: 5, scope: !5574)
!5584 = !DILocation(line: 758, column: 8, scope: !5554)
!5585 = !DILocation(line: 758, column: 13, scope: !5554)
!5586 = !DILocation(line: 760, column: 8, scope: !5554)
!5587 = !DILocation(line: 760, column: 14, scope: !5554)
!5588 = !DILocation(line: 761, column: 8, scope: !5554)
!5589 = !DILocation(line: 761, column: 16, scope: !5554)
!5590 = !DILocation(line: 762, column: 8, scope: !5554)
!5591 = !DILocation(line: 762, column: 17, scope: !5554)
!5592 = !DILocation(line: 763, column: 1, scope: !5554)
!5593 = distinct !DISubprogram(name: "gimple_def_ops", scope: !584, file: !584, line: 1292, type: !5594, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5596)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{!1043, !2036}
!5596 = !{!5597}
!5597 = !DILocalVariable(name: "g", arg: 1, scope: !5593, file: !584, line: 1292, type: !2036)
!5598 = !DILocation(line: 0, scope: !5593)
!5599 = distinct !DISubprogram(name: "gimple_vdef", scope: !584, file: !584, line: 1375, type: !4420, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5600)
!5600 = !{!5601}
!5601 = !DILocalVariable(name: "g", arg: 1, scope: !5599, file: !584, line: 1375, type: !2036)
!5602 = !DILocation(line: 0, scope: !5599)
!5603 = !DILocation(line: 1377, column: 8, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5599, file: !584, line: 1377, column: 7)
!5605 = !DILocation(line: 1377, column: 7, scope: !5599)
!5606 = !DILocation(line: 1379, column: 23, scope: !5599)
!5607 = !DILocation(line: 1379, column: 3, scope: !5599)
!5608 = !DILocation(line: 1380, column: 1, scope: !5599)
!5609 = distinct !DISubprogram(name: "gimple_use_ops", scope: !584, file: !584, line: 1313, type: !5610, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!1050, !2036}
!5612 = !{!5613}
!5613 = !DILocalVariable(name: "g", arg: 1, scope: !5609, file: !584, line: 1313, type: !2036)
!5614 = !DILocation(line: 0, scope: !5609)
!5615 = !DILocation(line: 1315, column: 8, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5609, file: !584, line: 1315, column: 7)
!5617 = !DILocation(line: 1315, column: 7, scope: !5609)
!5618 = !DILocation(line: 1317, column: 26, scope: !5609)
!5619 = !DILocation(line: 1317, column: 3, scope: !5609)
!5620 = !DILocation(line: 1318, column: 1, scope: !5609)
!5621 = distinct !DISubprogram(name: "gimple_vuse", scope: !584, file: !584, line: 1365, type: !4420, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5622)
!5622 = !{!5623}
!5623 = !DILocalVariable(name: "g", arg: 1, scope: !5621, file: !584, line: 1365, type: !2036)
!5624 = !DILocation(line: 0, scope: !5621)
!5625 = !DILocation(line: 1367, column: 8, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5621, file: !584, line: 1367, column: 7)
!5627 = !DILocation(line: 1367, column: 7, scope: !5621)
!5628 = !DILocation(line: 1369, column: 23, scope: !5621)
!5629 = !DILocation(line: 1369, column: 3, scope: !5621)
!5630 = !DILocation(line: 1370, column: 1, scope: !5621)
!5631 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !584, file: !584, line: 1283, type: !3272, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5632)
!5632 = !{!5633}
!5633 = !DILocalVariable(name: "g", arg: 1, scope: !5631, file: !584, line: 1283, type: !2036)
!5634 = !DILocation(line: 0, scope: !5631)
!5635 = !DILocation(line: 1285, column: 10, scope: !5631)
!5636 = !DILocation(line: 1285, column: 26, scope: !5631)
!5637 = !DILocation(line: 1285, column: 43, scope: !5631)
!5638 = !DILocation(line: 1285, column: 46, scope: !5631)
!5639 = !DILocation(line: 1285, column: 62, scope: !5631)
!5640 = !DILocation(line: 1285, column: 3, scope: !5631)
!5641 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !4621, file: !4621, line: 427, type: !5642, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5644)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!690, !2081}
!5644 = !{!5645}
!5645 = !DILocalVariable(name: "use", arg: 1, scope: !5641, file: !4621, line: 427, type: !2081)
!5646 = !DILocation(line: 0, scope: !5641)
!5647 = !DILocation(line: 429, column: 17, scope: !5641)
!5648 = !DILocation(line: 429, column: 10, scope: !5641)
!5649 = !DILocation(line: 429, column: 3, scope: !5641)
!5650 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !4621, file: !4621, line: 434, type: !5651, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5654)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!690, !5653}
!5653 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !662, line: 27, baseType: !1048)
!5654 = !{!5655}
!5655 = !DILocalVariable(name: "def", arg: 1, scope: !5650, file: !4621, line: 434, type: !5653)
!5656 = !DILocation(line: 0, scope: !5650)
!5657 = !DILocation(line: 436, column: 10, scope: !5650)
!5658 = !DILocation(line: 436, column: 3, scope: !5650)
!5659 = distinct !DISubprogram(name: "is_gimple_assign", scope: !584, file: !584, line: 1677, type: !3272, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5660)
!5660 = !{!5661}
!5661 = !DILocalVariable(name: "gs", arg: 1, scope: !5659, file: !584, line: 1677, type: !2036)
!5662 = !DILocation(line: 0, scope: !5659)
!5663 = !DILocation(line: 1679, column: 10, scope: !5659)
!5664 = !DILocation(line: 1679, column: 27, scope: !5659)
!5665 = !DILocation(line: 1679, column: 3, scope: !5659)
!5666 = distinct !DISubprogram(name: "is_in_field_accs", scope: !3, file: !3, line: 457, type: !5667, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5669)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!2072, !1014, !1444}
!5669 = !{!5670, !5671}
!5670 = !DILocalVariable(name: "stmt", arg: 1, scope: !5666, file: !3, line: 457, type: !1014)
!5671 = !DILocalVariable(name: "f_accs", arg: 2, scope: !5666, file: !3, line: 457, type: !1444)
!5672 = !DILocation(line: 0, scope: !5666)
!5673 = !DILocation(line: 460, column: 34, scope: !5666)
!5674 = !DILocation(line: 460, column: 40, scope: !5666)
!5675 = !DILocation(line: 460, column: 5, scope: !5666)
!5676 = !DILocation(line: 459, column: 10, scope: !5666)
!5677 = !DILocation(line: 459, column: 3, scope: !5666)
!5678 = distinct !DISubprogram(name: "exclude_alloc_and_field_accs_1", scope: !3, file: !3, line: 3151, type: !5679, scopeLine: 3152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5681)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{null, !2069, !2686}
!5681 = !{!5682, !5683, !5684}
!5682 = !DILocalVariable(name: "str", arg: 1, scope: !5678, file: !3, line: 3151, type: !2069)
!5683 = !DILocalVariable(name: "node", arg: 2, scope: !5678, file: !3, line: 3151, type: !2686)
!5684 = !DILocalVariable(name: "dt", scope: !5678, file: !3, line: 3153, type: !2104)
!5685 = !DILocation(line: 0, scope: !5678)
!5686 = !DILocation(line: 3153, column: 3, scope: !5678)
!5687 = !DILocation(line: 3154, column: 6, scope: !5678)
!5688 = !DILocation(line: 3154, column: 10, scope: !5678)
!5689 = !DILocation(line: 3155, column: 22, scope: !5678)
!5690 = !DILocation(line: 3155, column: 14, scope: !5678)
!5691 = !DILocation(line: 3157, column: 15, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 3157, column: 7)
!5693 = !DILocation(line: 3157, column: 7, scope: !5692)
!5694 = !DILocation(line: 3157, column: 7, scope: !5678)
!5695 = !DILocation(line: 3158, column: 5, scope: !5692)
!5696 = !DILocation(line: 3159, column: 1, scope: !5678)
!5697 = distinct !DISubprogram(name: "exclude_from_accs", scope: !3, file: !3, line: 2466, type: !4199, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5698)
!5698 = !{!5699, !5700, !5701, !5702, !5703}
!5699 = !DILocalVariable(name: "slot", arg: 1, scope: !5697, file: !3, line: 2466, type: !1468)
!5700 = !DILocalVariable(name: "data", arg: 2, scope: !5697, file: !3, line: 2466, type: !675)
!5701 = !DILocalVariable(name: "acc", scope: !5697, file: !3, line: 2468, type: !2074)
!5702 = !DILocalVariable(name: "fn_decl", scope: !5697, file: !3, line: 2469, type: !690)
!5703 = !DILocalVariable(name: "str", scope: !5697, file: !3, line: 2470, type: !2069)
!5704 = !DILocation(line: 0, scope: !5697)
!5705 = !DILocation(line: 2468, column: 29, scope: !5697)
!5706 = !DILocation(line: 2469, column: 49, scope: !5697)
!5707 = !DILocation(line: 2470, column: 46, scope: !5697)
!5708 = !DILocation(line: 2472, column: 31, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 2472, column: 7)
!5710 = !DILocation(line: 2472, column: 7, scope: !5709)
!5711 = !DILocation(line: 2473, column: 7, scope: !5709)
!5712 = !DILocation(line: 2473, column: 40, scope: !5709)
!5713 = !DILocation(line: 2473, column: 10, scope: !5709)
!5714 = !DILocation(line: 2472, column: 7, scope: !5697)
!5715 = !DILocation(line: 2475, column: 7, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 2474, column: 5)
!5717 = !DILocation(line: 2476, column: 13, scope: !5716)
!5718 = !DILocation(line: 2476, column: 7, scope: !5716)
!5719 = !DILocation(line: 2477, column: 29, scope: !5716)
!5720 = !DILocation(line: 2477, column: 7, scope: !5716)
!5721 = !DILocation(line: 2478, column: 5, scope: !5716)
!5722 = !DILocation(line: 2479, column: 3, scope: !5697)
!5723 = distinct !DISubprogram(name: "is_part_of_malloc", scope: !3, file: !3, line: 774, type: !5724, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5726)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!670, !1014, !690}
!5726 = !{!5727, !5728, !5729, !5730, !5733}
!5727 = !DILocalVariable(name: "stmt", arg: 1, scope: !5723, file: !3, line: 774, type: !1014)
!5728 = !DILocalVariable(name: "fn_decl", arg: 2, scope: !5723, file: !3, line: 774, type: !690)
!5729 = !DILocalVariable(name: "fallocs", scope: !5723, file: !3, line: 776, type: !2046)
!5730 = !DILocalVariable(name: "call", scope: !5731, file: !3, line: 780, type: !4207)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 779, column: 5)
!5732 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 778, column: 7)
!5733 = !DILocalVariable(name: "i", scope: !5731, file: !3, line: 781, type: !7)
!5734 = !DILocation(line: 0, scope: !5723)
!5735 = !DILocation(line: 776, column: 23, scope: !5723)
!5736 = !DILocation(line: 778, column: 7, scope: !5732)
!5737 = !DILocation(line: 778, column: 7, scope: !5723)
!5738 = !DILocation(line: 780, column: 7, scope: !5731)
!5739 = !DILocation(line: 0, scope: !5731)
!5740 = !DILocation(line: 0, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 783, column: 7)
!5742 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 783, column: 7)
!5743 = !DILocation(line: 783, column: 12, scope: !5742)
!5744 = !DILocation(line: 0, scope: !5742)
!5745 = !DILocation(line: 783, column: 19, scope: !5741)
!5746 = !DILocation(line: 783, column: 7, scope: !5742)
!5747 = !DILocation(line: 784, column: 6, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 784, column: 6)
!5749 = !DILocation(line: 784, column: 12, scope: !5748)
!5750 = !DILocation(line: 784, column: 17, scope: !5748)
!5751 = !DILocation(line: 785, column: 6, scope: !5748)
!5752 = !DILocation(line: 785, column: 9, scope: !5748)
!5753 = !DILocation(line: 785, column: 43, scope: !5748)
!5754 = !DILocation(line: 784, column: 6, scope: !5741)
!5755 = !DILocation(line: 783, column: 74, scope: !5741)
!5756 = !DILocation(line: 783, column: 7, scope: !5741)
!5757 = distinct !{!5757, !5746, !5758}
!5758 = !DILocation(line: 786, column: 11, scope: !5742)
!5759 = !DILocation(line: 787, column: 5, scope: !5732)
!5760 = !DILocation(line: 788, column: 3, scope: !5723)
!5761 = !DILocation(line: 789, column: 1, scope: !5723)
!5762 = distinct !DISubprogram(name: "is_part_of_field_access", scope: !3, file: !3, line: 824, type: !5763, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5765)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!670, !1014, !2069}
!5765 = !{!5766, !5767, !5768, !5769}
!5766 = !DILocalVariable(name: "stmt", arg: 1, scope: !5762, file: !3, line: 824, type: !1014)
!5767 = !DILocalVariable(name: "str", arg: 2, scope: !5762, file: !3, line: 824, type: !2069)
!5768 = !DILocalVariable(name: "i", scope: !5762, file: !3, line: 826, type: !671)
!5769 = !DILocalVariable(name: "data", scope: !5770, file: !3, line: 830, type: !2109)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 829, column: 5)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 828, column: 3)
!5772 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 828, column: 3)
!5773 = !DILocation(line: 0, scope: !5762)
!5774 = !DILocation(line: 0, scope: !5771)
!5775 = !DILocation(line: 0, scope: !5770)
!5776 = !DILocation(line: 0, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 834, column: 11)
!5778 = !DILocation(line: 828, column: 8, scope: !5772)
!5779 = !DILocation(line: 0, scope: !5772)
!5780 = !DILocation(line: 828, column: 24, scope: !5771)
!5781 = !DILocation(line: 828, column: 17, scope: !5771)
!5782 = !DILocation(line: 828, column: 3, scope: !5772)
!5783 = !DILocation(line: 830, column: 7, scope: !5770)
!5784 = !DILocation(line: 831, column: 18, scope: !5770)
!5785 = !DILocation(line: 832, column: 17, scope: !5770)
!5786 = !DILocation(line: 834, column: 16, scope: !5777)
!5787 = !DILocation(line: 834, column: 26, scope: !5777)
!5788 = !DILocation(line: 834, column: 11, scope: !5777)
!5789 = !DILocation(line: 834, column: 11, scope: !5770)
!5790 = !DILocation(line: 835, column: 2, scope: !5777)
!5791 = !DILocation(line: 837, column: 16, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 837, column: 11)
!5793 = !DILocation(line: 837, column: 11, scope: !5792)
!5794 = !DILocation(line: 839, column: 5, scope: !5771)
!5795 = !DILocation(line: 828, column: 37, scope: !5771)
!5796 = !DILocation(line: 828, column: 3, scope: !5771)
!5797 = distinct !{!5797, !5782, !5798}
!5798 = !DILocation(line: 839, column: 5, scope: !5772)
!5799 = !DILocation(line: 842, column: 1, scope: !5762)
!5800 = distinct !DISubprogram(name: "get_fallocs", scope: !3, file: !3, line: 734, type: !5801, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5803)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{!2046, !690}
!5803 = !{!5804}
!5804 = !DILocalVariable(name: "fn_decl", arg: 1, scope: !5800, file: !3, line: 734, type: !690)
!5805 = !DILocation(line: 0, scope: !5800)
!5806 = !DILocation(line: 736, column: 43, scope: !5800)
!5807 = !DILocation(line: 736, column: 56, scope: !5800)
!5808 = !DILocation(line: 737, column: 7, scope: !5800)
!5809 = !DILocation(line: 736, column: 22, scope: !5800)
!5810 = !DILocation(line: 736, column: 10, scope: !5800)
!5811 = !DILocation(line: 736, column: 3, scope: !5800)
!5812 = distinct !DISubprogram(name: "find_in_field_accs", scope: !3, file: !3, line: 803, type: !4199, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5813)
!5813 = !{!5814, !5815, !5816, !5817}
!5814 = !DILocalVariable(name: "slot", arg: 1, scope: !5812, file: !3, line: 803, type: !1468)
!5815 = !DILocalVariable(name: "data", arg: 2, scope: !5812, file: !3, line: 803, type: !675)
!5816 = !DILocalVariable(name: "f_acc", scope: !5812, file: !3, line: 805, type: !2072)
!5817 = !DILocalVariable(name: "stmt", scope: !5812, file: !3, line: 806, type: !1014)
!5818 = !DILocation(line: 0, scope: !5812)
!5819 = !DILocation(line: 805, column: 37, scope: !5812)
!5820 = !DILocation(line: 806, column: 50, scope: !5812)
!5821 = !DILocation(line: 808, column: 14, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 808, column: 7)
!5823 = !DILocation(line: 808, column: 19, scope: !5822)
!5824 = !DILocation(line: 809, column: 7, scope: !5822)
!5825 = !DILocation(line: 809, column: 17, scope: !5822)
!5826 = !DILocation(line: 809, column: 30, scope: !5822)
!5827 = !DILocation(line: 810, column: 7, scope: !5822)
!5828 = !DILocation(line: 810, column: 17, scope: !5822)
!5829 = !DILocation(line: 810, column: 27, scope: !5822)
!5830 = !DILocation(line: 808, column: 7, scope: !5812)
!5831 = !DILocation(line: 812, column: 46, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 811, column: 5)
!5833 = !DILocation(line: 813, column: 7, scope: !5832)
!5834 = !DILocation(line: 0, scope: !5822)
!5835 = !DILocation(line: 817, column: 1, scope: !5812)
!5836 = distinct !DISubprogram(name: "safe_cond_expr_check", scope: !3, file: !3, line: 3127, type: !4199, scopeLine: 3128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5837)
!5837 = !{!5838, !5839, !5840}
!5838 = !DILocalVariable(name: "slot", arg: 1, scope: !5836, file: !3, line: 3127, type: !1468)
!5839 = !DILocalVariable(name: "data", arg: 2, scope: !5836, file: !3, line: 3127, type: !675)
!5840 = !DILocalVariable(name: "acc", scope: !5836, file: !3, line: 3129, type: !2074)
!5841 = !DILocation(line: 0, scope: !5836)
!5842 = !DILocation(line: 3129, column: 29, scope: !5836)
!5843 = !DILocation(line: 3131, column: 25, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 3131, column: 7)
!5845 = !DILocation(line: 3131, column: 7, scope: !5844)
!5846 = !DILocation(line: 3131, column: 31, scope: !5844)
!5847 = !DILocation(line: 3132, column: 7, scope: !5844)
!5848 = !DILocation(line: 3132, column: 35, scope: !5844)
!5849 = !DILocation(line: 3132, column: 11, scope: !5844)
!5850 = !DILocation(line: 3131, column: 7, scope: !5836)
!5851 = !DILocation(line: 3134, column: 11, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 3134, column: 11)
!5853 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 3133, column: 5)
!5854 = !DILocation(line: 3134, column: 11, scope: !5853)
!5855 = !DILocation(line: 3136, column: 4, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 3135, column: 2)
!5857 = !DILocation(line: 3137, column: 23, scope: !5856)
!5858 = !DILocation(line: 3137, column: 39, scope: !5856)
!5859 = !DILocation(line: 3137, column: 4, scope: !5856)
!5860 = !DILocation(line: 3138, column: 2, scope: !5856)
!5861 = !DILocation(line: 3139, column: 22, scope: !5853)
!5862 = !DILocation(line: 3140, column: 7, scope: !5853)
!5863 = !DILocation(line: 3143, column: 1, scope: !5836)
!5864 = distinct !DISubprogram(name: "is_safe_cond_expr", scope: !3, file: !3, line: 2429, type: !5865, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5867)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!670, !1014}
!5867 = !{!5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875}
!5868 = !DILocalVariable(name: "cond_stmt", arg: 1, scope: !5864, file: !3, line: 2429, type: !1014)
!5869 = !DILocalVariable(name: "arg0", scope: !5864, file: !3, line: 2431, type: !690)
!5870 = !DILocalVariable(name: "arg1", scope: !5864, file: !3, line: 2431, type: !690)
!5871 = !DILocalVariable(name: "str0", scope: !5864, file: !3, line: 2432, type: !7)
!5872 = !DILocalVariable(name: "str1", scope: !5864, file: !3, line: 2432, type: !7)
!5873 = !DILocalVariable(name: "s0", scope: !5864, file: !3, line: 2433, type: !670)
!5874 = !DILocalVariable(name: "s1", scope: !5864, file: !3, line: 2433, type: !670)
!5875 = !DILocalVariable(name: "length", scope: !5864, file: !3, line: 2434, type: !7)
!5876 = !DILocation(line: 0, scope: !5864)
!5877 = !DILocation(line: 2434, column: 21, scope: !5864)
!5878 = !DILocation(line: 2436, column: 7, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2436, column: 7)
!5880 = !DILocation(line: 2436, column: 36, scope: !5879)
!5881 = !DILocation(line: 2437, column: 7, scope: !5879)
!5882 = !DILocation(line: 2437, column: 10, scope: !5879)
!5883 = !DILocation(line: 2437, column: 39, scope: !5879)
!5884 = !DILocation(line: 2436, column: 7, scope: !5864)
!5885 = !DILocation(line: 2440, column: 10, scope: !5864)
!5886 = !DILocation(line: 2441, column: 10, scope: !5864)
!5887 = !DILocation(line: 2443, column: 38, scope: !5864)
!5888 = !DILocation(line: 2443, column: 26, scope: !5864)
!5889 = !DILocation(line: 2443, column: 10, scope: !5864)
!5890 = !DILocation(line: 2444, column: 38, scope: !5864)
!5891 = !DILocation(line: 2444, column: 26, scope: !5864)
!5892 = !DILocation(line: 2444, column: 10, scope: !5864)
!5893 = !DILocation(line: 2446, column: 14, scope: !5864)
!5894 = !DILocation(line: 2447, column: 14, scope: !5864)
!5895 = !DILocation(line: 2449, column: 11, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2449, column: 7)
!5897 = !DILocation(line: 2453, column: 8, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2453, column: 7)
!5899 = !DILocation(line: 2453, column: 29, scope: !5898)
!5900 = !DILocation(line: 2453, column: 33, scope: !5898)
!5901 = !DILocation(line: 2453, column: 7, scope: !5864)
!5902 = !DILocation(line: 2456, column: 3, scope: !5864)
!5903 = !DILocation(line: 2457, column: 1, scope: !5864)
!5904 = distinct !DISubprogram(name: "gimple_cond_code", scope: !584, file: !584, line: 2221, type: !5358, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5905)
!5905 = !{!5906}
!5906 = !DILocalVariable(name: "gs", arg: 1, scope: !5904, file: !584, line: 2221, type: !2036)
!5907 = !DILocation(line: 0, scope: !5904)
!5908 = !DILocation(line: 2224, column: 38, scope: !5904)
!5909 = !DILocation(line: 2224, column: 3, scope: !5904)
!5910 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !584, file: !584, line: 2241, type: !4420, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5911)
!5911 = !{!5912}
!5912 = !DILocalVariable(name: "gs", arg: 1, scope: !5910, file: !584, line: 2241, type: !2036)
!5913 = !DILocation(line: 0, scope: !5910)
!5914 = !DILocation(line: 2244, column: 10, scope: !5910)
!5915 = !DILocation(line: 2244, column: 3, scope: !5910)
!5916 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !584, file: !584, line: 2271, type: !4420, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5917)
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "gs", arg: 1, scope: !5916, file: !584, line: 2271, type: !2036)
!5919 = !DILocation(line: 0, scope: !5916)
!5920 = !DILocation(line: 2274, column: 10, scope: !5916)
!5921 = !DILocation(line: 2274, column: 3, scope: !5916)
!5922 = distinct !DISubprogram(name: "dump_accs", scope: !3, file: !3, line: 3104, type: !4120, scopeLine: 3105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5923)
!5923 = !{!5924, !5925}
!5924 = !DILocalVariable(name: "str", arg: 1, scope: !5922, file: !3, line: 3104, type: !2069)
!5925 = !DILocalVariable(name: "i", scope: !5922, file: !3, line: 3106, type: !671)
!5926 = !DILocation(line: 0, scope: !5922)
!5927 = !DILocation(line: 3108, column: 12, scope: !5922)
!5928 = !DILocation(line: 3108, column: 3, scope: !5922)
!5929 = !DILocation(line: 3109, column: 23, scope: !5922)
!5930 = !DILocation(line: 3109, column: 39, scope: !5922)
!5931 = !DILocation(line: 3109, column: 3, scope: !5922)
!5932 = !DILocation(line: 0, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 3111, column: 3)
!5934 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 3111, column: 3)
!5935 = !DILocation(line: 0, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 3112, column: 5)
!5937 = !DILocation(line: 3111, column: 8, scope: !5934)
!5938 = !DILocation(line: 0, scope: !5934)
!5939 = !DILocation(line: 3111, column: 24, scope: !5933)
!5940 = !DILocation(line: 3111, column: 17, scope: !5933)
!5941 = !DILocation(line: 3111, column: 3, scope: !5934)
!5942 = !DILocation(line: 3113, column: 7, scope: !5936)
!5943 = !DILocation(line: 3114, column: 27, scope: !5936)
!5944 = !DILocation(line: 3114, column: 43, scope: !5936)
!5945 = !DILocation(line: 3114, column: 53, scope: !5936)
!5946 = !DILocation(line: 3114, column: 7, scope: !5936)
!5947 = !DILocation(line: 3115, column: 34, scope: !5936)
!5948 = !DILocation(line: 3115, column: 44, scope: !5936)
!5949 = !DILocation(line: 3115, column: 7, scope: !5936)
!5950 = !DILocation(line: 3116, column: 16, scope: !5936)
!5951 = !DILocation(line: 3116, column: 7, scope: !5936)
!5952 = !DILocation(line: 3111, column: 37, scope: !5933)
!5953 = !DILocation(line: 3111, column: 3, scope: !5933)
!5954 = distinct !{!5954, !5941, !5955}
!5955 = !DILocation(line: 3117, column: 5, scope: !5934)
!5956 = !DILocation(line: 3118, column: 3, scope: !5922)
!5957 = !DILocation(line: 3119, column: 27, scope: !5922)
!5958 = !DILocation(line: 3119, column: 3, scope: !5922)
!5959 = !DILocation(line: 3120, column: 1, scope: !5922)
!5960 = distinct !DISubprogram(name: "dump_field_acc_sites", scope: !3, file: !3, line: 1500, type: !4255, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5961)
!5961 = !{!5962}
!5962 = !DILocalVariable(name: "f_accs", arg: 1, scope: !5960, file: !3, line: 1500, type: !1444)
!5963 = !DILocation(line: 0, scope: !5960)
!5964 = !DILocation(line: 1502, column: 8, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1502, column: 7)
!5966 = !DILocation(line: 1505, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1505, column: 7)
!5968 = !DILocation(line: 1502, column: 7, scope: !5960)
!5969 = !DILocation(line: 1506, column: 5, scope: !5967)
!5970 = !DILocation(line: 1507, column: 1, scope: !5960)
!5971 = distinct !DISubprogram(name: "dump_access_sites", scope: !3, file: !3, line: 2362, type: !4255, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5972)
!5972 = !{!5973}
!5973 = !DILocalVariable(name: "accs", arg: 1, scope: !5971, file: !3, line: 2362, type: !1444)
!5974 = !DILocation(line: 0, scope: !5971)
!5975 = !DILocation(line: 2364, column: 8, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 2364, column: 7)
!5977 = !DILocation(line: 2367, column: 7, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 2367, column: 7)
!5979 = !DILocation(line: 2364, column: 7, scope: !5971)
!5980 = !DILocation(line: 2368, column: 5, scope: !5978)
!5981 = !DILocation(line: 2369, column: 1, scope: !5971)
!5982 = distinct !DISubprogram(name: "dump_field_acc", scope: !3, file: !3, line: 1482, type: !4199, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5983)
!5983 = !{!5984, !5985, !5986}
!5984 = !DILocalVariable(name: "slot", arg: 1, scope: !5982, file: !3, line: 1482, type: !1468)
!5985 = !DILocalVariable(name: "data", arg: 2, scope: !5982, file: !3, line: 1482, type: !675)
!5986 = !DILocalVariable(name: "f_acc", scope: !5982, file: !3, line: 1484, type: !2072)
!5987 = !DILocation(line: 0, scope: !5982)
!5988 = !DILocation(line: 1485, column: 5, scope: !5982)
!5989 = !DILocation(line: 1487, column: 11, scope: !5982)
!5990 = !DILocation(line: 1487, column: 3, scope: !5982)
!5991 = !DILocation(line: 1488, column: 14, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1488, column: 7)
!5993 = !DILocation(line: 1488, column: 7, scope: !5992)
!5994 = !DILocation(line: 1488, column: 7, scope: !5982)
!5995 = !DILocation(line: 1489, column: 24, scope: !5992)
!5996 = !DILocation(line: 1489, column: 5, scope: !5992)
!5997 = !DILocation(line: 1490, column: 14, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1490, column: 7)
!5999 = !DILocation(line: 1490, column: 7, scope: !5998)
!6000 = !DILocation(line: 1490, column: 7, scope: !5982)
!6001 = !DILocation(line: 1491, column: 24, scope: !5998)
!6002 = !DILocation(line: 1491, column: 5, scope: !5998)
!6003 = !DILocation(line: 1492, column: 14, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1492, column: 7)
!6005 = !DILocation(line: 1492, column: 7, scope: !6004)
!6006 = !DILocation(line: 1492, column: 7, scope: !5982)
!6007 = !DILocation(line: 1493, column: 24, scope: !6004)
!6008 = !DILocation(line: 1493, column: 5, scope: !6004)
!6009 = !DILocation(line: 1494, column: 3, scope: !5982)
!6010 = distinct !DISubprogram(name: "dump_acc", scope: !3, file: !3, line: 2076, type: !4199, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6011)
!6011 = !{!6012, !6013, !6014, !6015, !6016}
!6012 = !DILocalVariable(name: "slot", arg: 1, scope: !6010, file: !3, line: 2076, type: !1468)
!6013 = !DILocalVariable(name: "data", arg: 2, scope: !6010, file: !3, line: 2076, type: !675)
!6014 = !DILocalVariable(name: "acc", scope: !6010, file: !3, line: 2078, type: !2074)
!6015 = !DILocalVariable(name: "var", scope: !6010, file: !3, line: 2079, type: !690)
!6016 = !DILocalVariable(name: "i", scope: !6010, file: !3, line: 2080, type: !7)
!6017 = !DILocation(line: 0, scope: !6010)
!6018 = !DILocation(line: 2078, column: 29, scope: !6010)
!6019 = !DILocation(line: 2079, column: 3, scope: !6010)
!6020 = !DILocation(line: 2082, column: 11, scope: !6010)
!6021 = !DILocation(line: 2082, column: 3, scope: !6010)
!6022 = !DILocation(line: 2083, column: 12, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2083, column: 7)
!6024 = !DILocation(line: 2083, column: 7, scope: !6023)
!6025 = !DILocation(line: 2083, column: 7, scope: !6010)
!6026 = !DILocation(line: 2084, column: 24, scope: !6023)
!6027 = !DILocation(line: 2084, column: 5, scope: !6023)
!6028 = !DILocation(line: 2085, column: 11, scope: !6010)
!6029 = !DILocation(line: 2085, column: 3, scope: !6010)
!6030 = !DILocation(line: 0, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 2087, column: 3)
!6032 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 2087, column: 3)
!6033 = !DILocation(line: 2087, column: 8, scope: !6032)
!6034 = !DILocation(line: 0, scope: !6032)
!6035 = !DILocation(line: 2087, column: 15, scope: !6031)
!6036 = !DILocation(line: 2087, column: 3, scope: !6032)
!6037 = !DILocation(line: 2089, column: 27, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 2088, column: 5)
!6039 = !DILocation(line: 2089, column: 38, scope: !6038)
!6040 = !DILocation(line: 2089, column: 7, scope: !6038)
!6041 = !DILocation(line: 2090, column: 15, scope: !6038)
!6042 = !DILocation(line: 2090, column: 7, scope: !6038)
!6043 = !DILocation(line: 2087, column: 55, scope: !6031)
!6044 = !DILocation(line: 2087, column: 3, scope: !6031)
!6045 = distinct !{!6045, !6036, !6046}
!6046 = !DILocation(line: 2091, column: 5, scope: !6032)
!6047 = !DILocation(line: 2093, column: 1, scope: !6010)
!6048 = !DILocation(line: 2092, column: 3, scope: !6010)
!6049 = distinct !DISubprogram(name: "sum_counts", scope: !3, file: !3, line: 3644, type: !6050, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6053)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{null, !2069, !6052}
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!6053 = !{!6054, !6055, !6056}
!6054 = !DILocalVariable(name: "str", arg: 1, scope: !6049, file: !3, line: 3644, type: !2069)
!6055 = !DILocalVariable(name: "hottest", arg: 2, scope: !6049, file: !3, line: 3644, type: !6052)
!6056 = !DILocalVariable(name: "i", scope: !6049, file: !3, line: 3646, type: !671)
!6057 = !DILocation(line: 0, scope: !6049)
!6058 = !DILocation(line: 3648, column: 8, scope: !6049)
!6059 = !DILocation(line: 3648, column: 14, scope: !6049)
!6060 = !DILocation(line: 0, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 3649, column: 3)
!6062 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 3649, column: 3)
!6063 = !DILocation(line: 0, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 3652, column: 2)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 3651, column: 11)
!6066 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 3650, column: 5)
!6067 = !DILocation(line: 3649, column: 8, scope: !6062)
!6068 = !DILocation(line: 3649, column: 24, scope: !6061)
!6069 = !DILocation(line: 3649, column: 17, scope: !6061)
!6070 = !DILocation(line: 3649, column: 3, scope: !6062)
!6071 = !DILocation(line: 3651, column: 11, scope: !6066)
!6072 = !DILocation(line: 3653, column: 4, scope: !6064)
!6073 = !DILocation(line: 3654, column: 24, scope: !6064)
!6074 = !DILocation(line: 3654, column: 40, scope: !6064)
!6075 = !DILocation(line: 3654, column: 50, scope: !6064)
!6076 = !DILocation(line: 3654, column: 4, scope: !6064)
!6077 = !DILocation(line: 3655, column: 13, scope: !6064)
!6078 = !DILocation(line: 3656, column: 11, scope: !6064)
!6079 = !DILocation(line: 3656, column: 21, scope: !6064)
!6080 = !DILocation(line: 3655, column: 4, scope: !6064)
!6081 = !DILocation(line: 3658, column: 18, scope: !6066)
!6082 = !DILocation(line: 3657, column: 2, scope: !6064)
!6083 = !DILocation(line: 3658, column: 26, scope: !6066)
!6084 = !DILocation(line: 3658, column: 36, scope: !6066)
!6085 = !DILocation(line: 3649, column: 37, scope: !6061)
!6086 = !DILocation(line: 3649, column: 3, scope: !6061)
!6087 = distinct !{!6087, !6070, !6088}
!6088 = !DILocation(line: 3659, column: 5, scope: !6062)
!6089 = !DILocation(line: 3661, column: 7, scope: !6049)
!6090 = !DILocation(line: 3663, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 3662, column: 5)
!6092 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 3661, column: 7)
!6093 = !DILocation(line: 3664, column: 27, scope: !6091)
!6094 = !DILocation(line: 3664, column: 43, scope: !6091)
!6095 = !DILocation(line: 3664, column: 7, scope: !6091)
!6096 = !DILocation(line: 3665, column: 16, scope: !6091)
!6097 = !DILocation(line: 3665, column: 68, scope: !6091)
!6098 = !DILocation(line: 3665, column: 7, scope: !6091)
!6099 = !DILocation(line: 3668, column: 12, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 3668, column: 7)
!6101 = !DILocation(line: 3666, column: 5, scope: !6091)
!6102 = !DILocation(line: 3668, column: 20, scope: !6100)
!6103 = !DILocation(line: 3668, column: 18, scope: !6100)
!6104 = !DILocation(line: 3668, column: 7, scope: !6049)
!6105 = !DILocation(line: 3669, column: 14, scope: !6100)
!6106 = !DILocation(line: 3669, column: 5, scope: !6100)
!6107 = !DILocation(line: 3670, column: 1, scope: !6049)
!6108 = distinct !DISubprogram(name: "peel_hot_fields", scope: !3, file: !3, line: 3677, type: !4120, scopeLine: 3678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6109)
!6109 = !{!6110, !6111, !6112, !6113}
!6110 = !DILocalVariable(name: "str", arg: 1, scope: !6108, file: !3, line: 3677, type: !2069)
!6111 = !DILocalVariable(name: "max_field_count", scope: !6108, file: !3, line: 3679, type: !1224)
!6112 = !DILocalVariable(name: "fields_left", scope: !6108, file: !3, line: 3680, type: !2011)
!6113 = !DILocalVariable(name: "i", scope: !6108, file: !3, line: 3681, type: !671)
!6114 = !DILocation(line: 0, scope: !6108)
!6115 = !DILocation(line: 3680, column: 45, scope: !6108)
!6116 = !DILocation(line: 3680, column: 25, scope: !6108)
!6117 = !DILocation(line: 3683, column: 3, scope: !6108)
!6118 = !DILocation(line: 3685, column: 18, scope: !6108)
!6119 = !DILocation(line: 3685, column: 43, scope: !6108)
!6120 = !DILocation(line: 3685, column: 48, scope: !6108)
!6121 = !DILocation(line: 3687, column: 8, scope: !6108)
!6122 = !DILocation(line: 3687, column: 26, scope: !6108)
!6123 = !DILocation(line: 0, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 3691, column: 11)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 3690, column: 5)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 3689, column: 3)
!6127 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 3689, column: 3)
!6128 = !DILocation(line: 3689, column: 8, scope: !6127)
!6129 = !DILocation(line: 0, scope: !6127)
!6130 = !DILocation(line: 3689, column: 24, scope: !6126)
!6131 = !DILocation(line: 3689, column: 17, scope: !6126)
!6132 = !DILocation(line: 3689, column: 3, scope: !6127)
!6133 = !DILocation(line: 3691, column: 16, scope: !6124)
!6134 = !DILocation(line: 3691, column: 22, scope: !6124)
!6135 = !DILocation(line: 3691, column: 11, scope: !6125)
!6136 = !DILocation(line: 3693, column: 4, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 3692, column: 2)
!6138 = !DILocation(line: 3694, column: 4, scope: !6137)
!6139 = !DILocation(line: 3695, column: 2, scope: !6137)
!6140 = !DILocation(line: 3689, column: 37, scope: !6126)
!6141 = !DILocation(line: 3689, column: 3, scope: !6126)
!6142 = distinct !{!6142, !6132, !6143}
!6143 = !DILocation(line: 3696, column: 5, scope: !6127)
!6144 = !DILocation(line: 3698, column: 7, scope: !6108)
!6145 = !DILocation(line: 3699, column: 9, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 3699, column: 7)
!6147 = !DILocation(line: 3699, column: 7, scope: !6108)
!6148 = !DILocation(line: 3700, column: 5, scope: !6146)
!6149 = !DILocation(line: 3702, column: 5, scope: !6146)
!6150 = !DILocation(line: 3703, column: 1, scope: !6108)
!6151 = distinct !DISubprogram(name: "get_max_field_count", scope: !3, file: !3, line: 3220, type: !6152, scopeLine: 3221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!1224, !2069}
!6154 = !{!6155, !6156, !6157}
!6155 = !DILocalVariable(name: "str", arg: 1, scope: !6151, file: !3, line: 3220, type: !2069)
!6156 = !DILocalVariable(name: "max", scope: !6151, file: !3, line: 3222, type: !1224)
!6157 = !DILocalVariable(name: "i", scope: !6151, file: !3, line: 3223, type: !671)
!6158 = !DILocation(line: 0, scope: !6151)
!6159 = !DILocation(line: 0, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 3225, column: 3)
!6161 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 3225, column: 3)
!6162 = !DILocation(line: 0, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 3226, column: 9)
!6164 = !DILocation(line: 3225, column: 8, scope: !6161)
!6165 = !DILocation(line: 3225, column: 17, scope: !6160)
!6166 = !DILocation(line: 3225, column: 3, scope: !6161)
!6167 = !DILocation(line: 3226, column: 14, scope: !6163)
!6168 = !DILocation(line: 3226, column: 24, scope: !6163)
!6169 = !DILocation(line: 3226, column: 30, scope: !6163)
!6170 = !DILocation(line: 3226, column: 9, scope: !6160)
!6171 = !DILocation(line: 3227, column: 7, scope: !6163)
!6172 = !DILocation(line: 3225, column: 37, scope: !6160)
!6173 = !DILocation(line: 3225, column: 3, scope: !6160)
!6174 = distinct !{!6174, !6166, !6175}
!6175 = !DILocation(line: 3227, column: 28, scope: !6161)
!6176 = !DILocation(line: 3229, column: 3, scope: !6151)
!6177 = distinct !DISubprogram(name: "RESET_BIT", scope: !2012, file: !2012, line: 82, type: !6178, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6180)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !2011, !7}
!6180 = !{!6181, !6182, !6183}
!6181 = !DILocalVariable(name: "map", arg: 1, scope: !6177, file: !2012, line: 82, type: !2011)
!6182 = !DILocalVariable(name: "bitno", arg: 2, scope: !6177, file: !2012, line: 82, type: !7)
!6183 = !DILocalVariable(name: "oldbit", scope: !6184, file: !2012, line: 86, type: !670)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !2012, line: 85, column: 5)
!6185 = distinct !DILexicalBlock(scope: !6177, file: !2012, line: 84, column: 7)
!6186 = !DILocation(line: 0, scope: !6177)
!6187 = !DILocation(line: 84, column: 12, scope: !6185)
!6188 = !DILocation(line: 84, column: 7, scope: !6185)
!6189 = !DILocation(line: 84, column: 7, scope: !6177)
!6190 = !DILocation(line: 92, column: 42, scope: !6177)
!6191 = !DILocation(line: 92, column: 31, scope: !6177)
!6192 = !DILocation(line: 91, column: 19, scope: !6177)
!6193 = !DILocation(line: 91, column: 3, scope: !6177)
!6194 = !DILocation(line: 87, column: 16, scope: !6184)
!6195 = !DILocation(line: 88, column: 11, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6184, file: !2012, line: 88, column: 11)
!6197 = !DILocation(line: 88, column: 11, scope: !6184)
!6198 = !DILocation(line: 89, column: 2, scope: !6196)
!6199 = !DILocation(line: 89, column: 41, scope: !6196)
!6200 = !DILocation(line: 92, column: 8, scope: !6177)
!6201 = !DILocation(line: 92, column: 5, scope: !6177)
!6202 = !DILocation(line: 93, column: 1, scope: !6177)
!6203 = distinct !DISubprogram(name: "peel_field", scope: !3, file: !3, line: 3204, type: !6204, scopeLine: 3205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !671, !2069}
!6206 = !{!6207, !6208, !6209}
!6207 = !DILocalVariable(name: "i", arg: 1, scope: !6203, file: !3, line: 3204, type: !671)
!6208 = !DILocalVariable(name: "ds", arg: 2, scope: !6203, file: !3, line: 3204, type: !2069)
!6209 = !DILocalVariable(name: "crr_cluster", scope: !6203, file: !3, line: 3206, type: !2007)
!6210 = !DILocation(line: 0, scope: !6203)
!6211 = !DILocation(line: 3206, column: 39, scope: !6203)
!6212 = !DILocation(line: 3208, column: 30, scope: !6203)
!6213 = !DILocation(line: 3208, column: 16, scope: !6203)
!6214 = !DILocation(line: 3208, column: 24, scope: !6203)
!6215 = !DILocation(line: 3209, column: 25, scope: !6203)
!6216 = !DILocation(line: 3211, column: 39, scope: !6203)
!6217 = !DILocation(line: 3211, column: 5, scope: !6203)
!6218 = !DILocation(line: 3210, column: 16, scope: !6203)
!6219 = !DILocation(line: 3210, column: 34, scope: !6203)
!6220 = !DILocation(line: 3212, column: 3, scope: !6203)
!6221 = !DILocation(line: 3213, column: 25, scope: !6203)
!6222 = !DILocation(line: 3213, column: 3, scope: !6203)
!6223 = !DILocation(line: 3214, column: 1, scope: !6203)
!6224 = distinct !DISubprogram(name: "gen_cluster", scope: !3, file: !3, line: 3192, type: !6225, scopeLine: 3193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !2011, !2069}
!6227 = !{!6228, !6229, !6230}
!6228 = !DILocalVariable(name: "fields", arg: 1, scope: !6224, file: !3, line: 3192, type: !2011)
!6229 = !DILocalVariable(name: "str", arg: 2, scope: !6224, file: !3, line: 3192, type: !2069)
!6230 = !DILocalVariable(name: "crr_cluster", scope: !6224, file: !3, line: 3194, type: !2007)
!6231 = !DILocation(line: 0, scope: !6224)
!6232 = !DILocation(line: 3194, column: 39, scope: !6224)
!6233 = !DILocation(line: 3196, column: 31, scope: !6224)
!6234 = !DILocation(line: 3196, column: 16, scope: !6224)
!6235 = !DILocation(line: 3196, column: 24, scope: !6224)
!6236 = !DILocation(line: 3197, column: 26, scope: !6224)
!6237 = !DILocation(line: 3198, column: 16, scope: !6224)
!6238 = !DILocation(line: 3198, column: 34, scope: !6224)
!6239 = !DILocation(line: 3199, column: 1, scope: !6224)
!6240 = distinct !DISubprogram(name: "SET_BIT", scope: !2012, file: !2012, line: 63, type: !6178, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6241)
!6241 = !{!6242, !6243, !6244}
!6242 = !DILocalVariable(name: "map", arg: 1, scope: !6240, file: !2012, line: 63, type: !2011)
!6243 = !DILocalVariable(name: "bitno", arg: 2, scope: !6240, file: !2012, line: 63, type: !7)
!6244 = !DILocalVariable(name: "oldbit", scope: !6245, file: !2012, line: 67, type: !670)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !2012, line: 66, column: 5)
!6246 = distinct !DILexicalBlock(scope: !6240, file: !2012, line: 65, column: 7)
!6247 = !DILocation(line: 0, scope: !6240)
!6248 = !DILocation(line: 65, column: 12, scope: !6246)
!6249 = !DILocation(line: 65, column: 7, scope: !6246)
!6250 = !DILocation(line: 65, column: 7, scope: !6240)
!6251 = !DILocation(line: 73, column: 40, scope: !6240)
!6252 = !DILocation(line: 73, column: 29, scope: !6240)
!6253 = !DILocation(line: 72, column: 19, scope: !6240)
!6254 = !DILocation(line: 72, column: 3, scope: !6240)
!6255 = !DILocation(line: 68, column: 16, scope: !6245)
!6256 = !DILocation(line: 69, column: 12, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6245, file: !2012, line: 69, column: 11)
!6258 = !DILocation(line: 69, column: 11, scope: !6245)
!6259 = !DILocation(line: 70, column: 2, scope: !6257)
!6260 = !DILocation(line: 70, column: 41, scope: !6257)
!6261 = !DILocation(line: 73, column: 5, scope: !6240)
!6262 = !DILocation(line: 74, column: 1, scope: !6240)
!6263 = distinct !DISubprogram(name: "create_new_types", scope: !3, file: !3, line: 3803, type: !2648, scopeLine: 3804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6264)
!6264 = !{!6265, !6266, !6267}
!6265 = !DILocalVariable(name: "str", scope: !6263, file: !3, line: 3805, type: !2069)
!6266 = !DILocalVariable(name: "i", scope: !6263, file: !3, line: 3806, type: !7)
!6267 = !DILocalVariable(name: "str_num", scope: !6263, file: !3, line: 3807, type: !671)
!6268 = !DILocation(line: 3805, column: 3, scope: !6263)
!6269 = !DILocation(line: 3807, column: 3, scope: !6263)
!6270 = !DILocation(line: 0, scope: !6263)
!6271 = !DILocation(line: 3807, column: 7, scope: !6263)
!6272 = !DILocation(line: 3809, column: 8, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 3809, column: 3)
!6274 = !DILocation(line: 0, scope: !6273)
!6275 = !DILocation(line: 3809, column: 15, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 3809, column: 3)
!6277 = !DILocation(line: 3809, column: 3, scope: !6273)
!6278 = !DILocation(line: 3810, column: 22, scope: !6276)
!6279 = !DILocation(line: 3810, column: 5, scope: !6276)
!6280 = !DILocation(line: 3809, column: 61, scope: !6276)
!6281 = !DILocation(line: 3809, column: 3, scope: !6276)
!6282 = distinct !{!6282, !6277, !6283}
!6283 = !DILocation(line: 3810, column: 35, scope: !6273)
!6284 = !DILocation(line: 3811, column: 1, scope: !6263)
!6285 = distinct !DISubprogram(name: "dump_new_types", scope: !3, file: !3, line: 3774, type: !2648, scopeLine: 3775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6286)
!6286 = !{!6287, !6288, !6289, !6290}
!6287 = !DILocalVariable(name: "str", scope: !6285, file: !3, line: 3776, type: !2069)
!6288 = !DILocalVariable(name: "type", scope: !6285, file: !3, line: 3777, type: !690)
!6289 = !DILocalVariable(name: "i", scope: !6285, file: !3, line: 3778, type: !7)
!6290 = !DILocalVariable(name: "j", scope: !6285, file: !3, line: 3778, type: !7)
!6291 = !DILocation(line: 3776, column: 3, scope: !6285)
!6292 = !DILocation(line: 3777, column: 3, scope: !6285)
!6293 = !DILocation(line: 3780, column: 8, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 3780, column: 7)
!6295 = !DILocation(line: 3780, column: 7, scope: !6285)
!6296 = !DILocation(line: 3783, column: 3, scope: !6285)
!6297 = !DILocation(line: 0, scope: !6285)
!6298 = !DILocation(line: 3786, column: 8, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 3786, column: 3)
!6300 = !DILocation(line: 0, scope: !6299)
!6301 = !DILocation(line: 3786, column: 15, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 3786, column: 3)
!6303 = !DILocation(line: 3786, column: 3, scope: !6299)
!6304 = !DILocation(line: 3788, column: 11, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 3788, column: 11)
!6306 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 3787, column: 5)
!6307 = !DILocation(line: 3788, column: 11, scope: !6306)
!6308 = !DILocation(line: 3790, column: 4, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 3789, column: 2)
!6310 = !DILocation(line: 3791, column: 22, scope: !6309)
!6311 = !DILocation(line: 3791, column: 27, scope: !6309)
!6312 = !DILocation(line: 3791, column: 4, scope: !6309)
!6313 = !DILocation(line: 3792, column: 13, scope: !6309)
!6314 = !DILocation(line: 3793, column: 6, scope: !6309)
!6315 = !DILocation(line: 3792, column: 4, scope: !6309)
!6316 = !DILocation(line: 3794, column: 2, scope: !6309)
!6317 = !DILocation(line: 3795, column: 12, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 3795, column: 7)
!6319 = !DILocation(line: 0, scope: !6318)
!6320 = !DILocation(line: 3795, column: 19, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3795, column: 7)
!6322 = !DILocation(line: 3795, column: 7, scope: !6318)
!6323 = !DILocation(line: 3796, column: 20, scope: !6321)
!6324 = !DILocation(line: 3796, column: 2, scope: !6321)
!6325 = !DILocation(line: 3795, column: 65, scope: !6321)
!6326 = !DILocation(line: 3795, column: 7, scope: !6321)
!6327 = distinct !{!6327, !6322, !6328}
!6328 = !DILocation(line: 3796, column: 30, scope: !6318)
!6329 = !DILocation(line: 3786, column: 61, scope: !6302)
!6330 = !DILocation(line: 3786, column: 3, scope: !6302)
!6331 = distinct !{!6331, !6303, !6332}
!6332 = !DILocation(line: 3797, column: 5, scope: !6299)
!6333 = !DILocation(line: 3798, column: 1, scope: !6285)
!6334 = distinct !DISubprogram(name: "create_new_global_vars", scope: !3, file: !3, line: 3743, type: !2648, scopeLine: 3744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6335)
!6335 = !{!6336, !6337, !6338, !6339}
!6336 = !DILocalVariable(name: "current_varpool", scope: !6334, file: !3, line: 3745, type: !2789)
!6337 = !DILocalVariable(name: "i", scope: !6334, file: !3, line: 3746, type: !744)
!6338 = !DILocalVariable(name: "varpool_size", scope: !6334, file: !3, line: 3747, type: !744)
!6339 = !DILocalVariable(name: "var_decl", scope: !6340, file: !3, line: 3756, type: !690)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 3755, column: 2)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 3754, column: 7)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3754, column: 7)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 3750, column: 5)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 3749, column: 3)
!6345 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3749, column: 3)
!6346 = !DILocation(line: 0, scope: !6334)
!6347 = !DILocation(line: 3749, column: 8, scope: !6345)
!6348 = !DILocation(line: 3747, column: 26, scope: !6334)
!6349 = !DILocation(line: 0, scope: !6345)
!6350 = !DILocation(line: 3749, column: 17, scope: !6344)
!6351 = !DILocation(line: 3749, column: 3, scope: !6345)
!6352 = !DILocation(line: 3751, column: 11, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3751, column: 11)
!6354 = !DILocation(line: 3751, column: 11, scope: !6343)
!6355 = !DILocation(line: 3752, column: 20, scope: !6353)
!6356 = !DILocation(line: 3752, column: 18, scope: !6353)
!6357 = !DILocation(line: 3752, column: 2, scope: !6353)
!6358 = !DILocation(line: 3754, column: 7, scope: !6342)
!6359 = !DILocation(line: 0, scope: !6342)
!6360 = !DILocation(line: 3756, column: 38, scope: !6340)
!6361 = !DILocation(line: 0, scope: !6340)
!6362 = !DILocation(line: 3758, column: 9, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 3758, column: 8)
!6364 = !DILocation(line: 3758, column: 18, scope: !6363)
!6365 = !DILocation(line: 3758, column: 21, scope: !6363)
!6366 = !DILocation(line: 3758, column: 42, scope: !6363)
!6367 = !DILocation(line: 3758, column: 8, scope: !6340)
!6368 = !DILocation(line: 3761, column: 18, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 3760, column: 8)
!6370 = !DILocation(line: 3761, column: 6, scope: !6369)
!6371 = !DILocation(line: 3754, column: 7, scope: !6341)
!6372 = distinct !{!6372, !6358, !6373}
!6373 = !DILocation(line: 3764, column: 2, scope: !6342)
!6374 = !DILocation(line: 3749, column: 23, scope: !6344)
!6375 = !DILocation(line: 3763, column: 32, scope: !6369)
!6376 = !DILocation(line: 3763, column: 6, scope: !6369)
!6377 = !DILocation(line: 3749, column: 3, scope: !6344)
!6378 = distinct !{!6378, !6351, !6379}
!6379 = !DILocation(line: 3765, column: 5, scope: !6345)
!6380 = !DILocation(line: 3767, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 3767, column: 7)
!6382 = !DILocation(line: 3767, column: 7, scope: !6334)
!6383 = !DILocation(line: 3768, column: 5, scope: !6381)
!6384 = !DILocation(line: 3769, column: 1, scope: !6334)
!6385 = distinct !DISubprogram(name: "dump_new_vars", scope: !3, file: !3, line: 2205, type: !4255, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6386)
!6386 = !{!6387}
!6387 = !DILocalVariable(name: "new_vars_htab", arg: 1, scope: !6385, file: !3, line: 2205, type: !1444)
!6388 = !DILocation(line: 0, scope: !6385)
!6389 = !DILocation(line: 2207, column: 8, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 2207, column: 7)
!6391 = !DILocation(line: 2210, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 2210, column: 7)
!6393 = !DILocation(line: 2207, column: 7, scope: !6385)
!6394 = !DILocation(line: 2211, column: 5, scope: !6392)
!6395 = !DILocation(line: 2212, column: 1, scope: !6385)
!6396 = distinct !DISubprogram(name: "do_reorg_1", scope: !3, file: !3, line: 3710, type: !2648, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6397 = !{!6398}
!6398 = !DILocalVariable(name: "node", scope: !6396, file: !3, line: 3712, type: !2686)
!6399 = !DILocation(line: 3715, column: 3, scope: !6396)
!6400 = !DILocation(line: 3717, column: 8, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3717, column: 3)
!6402 = !DILocation(line: 0, scope: !6401)
!6403 = !DILocation(line: 0, scope: !6396)
!6404 = !DILocation(line: 3717, column: 3, scope: !6401)
!6405 = !DILocation(line: 3718, column: 15, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 3718, column: 9)
!6407 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3717, column: 3)
!6408 = !DILocation(line: 3718, column: 9, scope: !6406)
!6409 = !DILocation(line: 3718, column: 24, scope: !6406)
!6410 = !DILocation(line: 3718, column: 33, scope: !6406)
!6411 = !DILocation(line: 3718, column: 27, scope: !6406)
!6412 = !DILocation(line: 3718, column: 9, scope: !6407)
!6413 = !DILocation(line: 3720, column: 13, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 3719, column: 7)
!6415 = !DILocation(line: 3720, column: 2, scope: !6414)
!6416 = !DILocation(line: 3721, column: 32, scope: !6414)
!6417 = !DILocation(line: 3721, column: 24, scope: !6414)
!6418 = !DILocation(line: 3722, column: 6, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3722, column: 6)
!6420 = !DILocation(line: 3722, column: 6, scope: !6414)
!6421 = !DILocation(line: 3724, column: 21, scope: !6419)
!6422 = !DILocation(line: 3723, column: 4, scope: !6419)
!6423 = !DILocation(line: 3725, column: 2, scope: !6414)
!6424 = !DILocation(line: 3726, column: 2, scope: !6414)
!6425 = !DILocation(line: 3727, column: 2, scope: !6414)
!6426 = !DILocation(line: 3728, column: 24, scope: !6414)
!6427 = !DILocation(line: 3729, column: 2, scope: !6414)
!6428 = !DILocation(line: 3730, column: 7, scope: !6414)
!6429 = !DILocation(line: 3717, column: 48, scope: !6407)
!6430 = !DILocation(line: 3717, column: 3, scope: !6407)
!6431 = distinct !{!6431, !6404, !6432}
!6432 = !DILocation(line: 3730, column: 7, scope: !6401)
!6433 = !DILocation(line: 3732, column: 3, scope: !6396)
!6434 = !DILocation(line: 3733, column: 3, scope: !6396)
!6435 = !DILocation(line: 3734, column: 1, scope: !6396)
!6436 = distinct !DISubprogram(name: "free_new_vars_htab", scope: !3, file: !3, line: 2670, type: !4255, scopeLine: 2671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6437)
!6437 = !{!6438}
!6438 = !DILocalVariable(name: "new_vars_htab", arg: 1, scope: !6436, file: !3, line: 2670, type: !1444)
!6439 = !DILocation(line: 0, scope: !6436)
!6440 = !DILocation(line: 2672, column: 7, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2672, column: 7)
!6442 = !DILocation(line: 2672, column: 7, scope: !6436)
!6443 = !DILocation(line: 2673, column: 5, scope: !6441)
!6444 = !DILocation(line: 2674, column: 3, scope: !6436)
!6445 = !DILocation(line: 2676, column: 1, scope: !6436)
!6446 = distinct !DISubprogram(name: "create_new_type", scope: !3, file: !3, line: 3303, type: !6447, scopeLine: 3304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6449)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{null, !2069, !4906}
!6449 = !{!6450, !6451, !6452, !6453, !6454, !6456, !6457}
!6450 = !DILocalVariable(name: "str", arg: 1, scope: !6446, file: !3, line: 3303, type: !2069)
!6451 = !DILocalVariable(name: "str_num", arg: 2, scope: !6446, file: !3, line: 3303, type: !4906)
!6452 = !DILocalVariable(name: "cluster_num", scope: !6446, file: !3, line: 3305, type: !671)
!6453 = !DILocalVariable(name: "cluster", scope: !6446, file: !3, line: 3307, type: !2007)
!6454 = !DILocalVariable(name: "name", scope: !6455, file: !3, line: 3310, type: !690)
!6455 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3309, column: 5)
!6456 = !DILocalVariable(name: "fields", scope: !6455, file: !3, line: 3312, type: !690)
!6457 = !DILocalVariable(name: "new_type", scope: !6455, file: !3, line: 3313, type: !690)
!6458 = !DILocation(line: 0, scope: !6446)
!6459 = !DILocation(line: 3307, column: 40, scope: !6446)
!6460 = !DILocation(line: 0, scope: !6455)
!6461 = !DILocation(line: 3308, column: 3, scope: !6446)
!6462 = !DILocation(line: 3310, column: 43, scope: !6455)
!6463 = !DILocation(line: 3311, column: 10, scope: !6455)
!6464 = !DILocation(line: 3310, column: 20, scope: !6455)
!6465 = !DILocation(line: 3314, column: 18, scope: !6455)
!6466 = !DILocation(line: 3316, column: 45, scope: !6455)
!6467 = !DILocation(line: 3317, column: 15, scope: !6455)
!6468 = !DILocation(line: 3316, column: 16, scope: !6455)
!6469 = !DILocation(line: 3318, column: 57, scope: !6455)
!6470 = !DILocation(line: 3318, column: 18, scope: !6455)
!6471 = !DILocation(line: 3321, column: 14, scope: !6455)
!6472 = !DILocation(line: 3321, column: 27, scope: !6455)
!6473 = !DILocation(line: 3320, column: 7, scope: !6455)
!6474 = !DILocation(line: 3323, column: 7, scope: !6455)
!6475 = !DILocation(line: 3324, column: 26, scope: !6455)
!6476 = distinct !{!6476, !6461, !6477}
!6477 = !DILocation(line: 3325, column: 5, scope: !6446)
!6478 = !DILocation(line: 3326, column: 13, scope: !6446)
!6479 = !DILocation(line: 3327, column: 1, scope: !6446)
!6480 = distinct !DISubprogram(name: "gen_cluster_name", scope: !3, file: !3, line: 2819, type: !6481, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!690, !690, !671, !671}
!6483 = !{!6484, !6485, !6486, !6487, !6488, !6489, !6490, !6491, !6492, !6496, !6498, !6500}
!6484 = !DILocalVariable(name: "decl", arg: 1, scope: !6480, file: !3, line: 2819, type: !690)
!6485 = !DILocalVariable(name: "clust_num", arg: 2, scope: !6480, file: !3, line: 2819, type: !671)
!6486 = !DILocalVariable(name: "str_num", arg: 3, scope: !6480, file: !3, line: 2819, type: !671)
!6487 = !DILocalVariable(name: "orig_name", scope: !6480, file: !3, line: 2821, type: !676)
!6488 = !DILocalVariable(name: "tmp_name", scope: !6480, file: !3, line: 2822, type: !673)
!6489 = !DILocalVariable(name: "prefix", scope: !6480, file: !3, line: 2823, type: !673)
!6490 = !DILocalVariable(name: "new_name", scope: !6480, file: !3, line: 2824, type: !673)
!6491 = !DILocalVariable(name: "len", scope: !6480, file: !3, line: 2825, type: !1158)
!6492 = !DILocalVariable(name: "name_", scope: !6493, file: !3, line: 2828, type: !6495)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2828, column: 5)
!6494 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 2827, column: 7)
!6495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!6496 = !DILocalVariable(name: "output_", scope: !6493, file: !3, line: 2828, type: !6497)
!6497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!6498 = !DILocalVariable(name: "name_", scope: !6499, file: !3, line: 2836, type: !6495)
!6499 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 2836, column: 3)
!6500 = !DILocalVariable(name: "output_", scope: !6499, file: !3, line: 2836, type: !6497)
!6501 = !DILocation(line: 0, scope: !6480)
!6502 = !DILocation(line: 2821, column: 28, scope: !6480)
!6503 = !DILocation(line: 2827, column: 8, scope: !6494)
!6504 = !DILocation(line: 2827, column: 7, scope: !6480)
!6505 = !DILocation(line: 0, scope: !6493)
!6506 = !DILocation(line: 2828, column: 5, scope: !6493)
!6507 = !DILocation(line: 2830, column: 17, scope: !6480)
!6508 = !DILocation(line: 2830, column: 9, scope: !6480)
!6509 = !DILocation(line: 2830, column: 52, scope: !6480)
!6510 = !DILocation(line: 2830, column: 50, scope: !6480)
!6511 = !DILocation(line: 2831, column: 12, scope: !6480)
!6512 = !DILocation(line: 2833, column: 4, scope: !6480)
!6513 = !DILocation(line: 2832, column: 3, scope: !6480)
!6514 = !DILocation(line: 2834, column: 20, scope: !6480)
!6515 = !DILocation(line: 2834, column: 18, scope: !6480)
!6516 = !DILocation(line: 2834, column: 3, scope: !6480)
!6517 = !DILocation(line: 0, scope: !6499)
!6518 = !DILocation(line: 2836, column: 3, scope: !6499)
!6519 = !DILocation(line: 2837, column: 10, scope: !6480)
!6520 = !DILocation(line: 2837, column: 3, scope: !6480)
!6521 = distinct !DISubprogram(name: "create_fields", scope: !3, file: !3, line: 2782, type: !6522, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!690, !2007, !1997, !671}
!6524 = !{!6525, !6526, !6527, !6528, !6529, !6530, !6531}
!6525 = !DILocalVariable(name: "cluster", arg: 1, scope: !6521, file: !3, line: 2782, type: !2007)
!6526 = !DILocalVariable(name: "fields", arg: 2, scope: !6521, file: !3, line: 2783, type: !1997)
!6527 = !DILocalVariable(name: "num_fields", arg: 3, scope: !6521, file: !3, line: 2783, type: !671)
!6528 = !DILocalVariable(name: "i", scope: !6521, file: !3, line: 2785, type: !671)
!6529 = !DILocalVariable(name: "new_types", scope: !6521, file: !3, line: 2786, type: !690)
!6530 = !DILocalVariable(name: "last", scope: !6521, file: !3, line: 2787, type: !690)
!6531 = !DILocalVariable(name: "new_decl", scope: !6532, file: !3, line: 2792, type: !690)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2791, column: 7)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2790, column: 9)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2789, column: 3)
!6535 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2789, column: 3)
!6536 = !DILocation(line: 0, scope: !6521)
!6537 = !DILocation(line: 0, scope: !6533)
!6538 = !DILocation(line: 2789, column: 8, scope: !6535)
!6539 = !DILocation(line: 0, scope: !6535)
!6540 = !DILocation(line: 2786, column: 8, scope: !6521)
!6541 = !DILocation(line: 2789, column: 17, scope: !6534)
!6542 = !DILocation(line: 2789, column: 3, scope: !6535)
!6543 = !DILocation(line: 2790, column: 9, scope: !6533)
!6544 = !DILocation(line: 2790, column: 9, scope: !6534)
!6545 = !DILocation(line: 2792, column: 42, scope: !6532)
!6546 = !DILocation(line: 2792, column: 18, scope: !6532)
!6547 = !DILocation(line: 0, scope: !6532)
!6548 = !DILocation(line: 2794, column: 7, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 2794, column: 6)
!6550 = !DILocation(line: 2794, column: 6, scope: !6532)
!6551 = !DILocation(line: 2797, column: 4, scope: !6549)
!6552 = !DILocation(line: 2797, column: 22, scope: !6549)
!6553 = !DILocation(line: 2789, column: 32, scope: !6534)
!6554 = !DILocation(line: 2789, column: 3, scope: !6534)
!6555 = distinct !{!6555, !6542, !6556}
!6556 = !DILocation(line: 2799, column: 7, scope: !6535)
!6557 = !DILocation(line: 2801, column: 3, scope: !6521)
!6558 = !DILocation(line: 2801, column: 21, scope: !6521)
!6559 = !DILocation(line: 2802, column: 3, scope: !6521)
!6560 = distinct !DISubprogram(name: "build_basic_struct", scope: !3, file: !3, line: 2752, type: !6561, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6563)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!690, !690, !690, !690}
!6563 = !{!6564, !6565, !6566, !6567, !6568, !6569}
!6564 = !DILocalVariable(name: "fields", arg: 1, scope: !6560, file: !3, line: 2752, type: !690)
!6565 = !DILocalVariable(name: "name", arg: 2, scope: !6560, file: !3, line: 2752, type: !690)
!6566 = !DILocalVariable(name: "orig_struct", arg: 3, scope: !6560, file: !3, line: 2752, type: !690)
!6567 = !DILocalVariable(name: "attributes", scope: !6560, file: !3, line: 2754, type: !690)
!6568 = !DILocalVariable(name: "ref", scope: !6560, file: !3, line: 2755, type: !690)
!6569 = !DILocalVariable(name: "x", scope: !6560, file: !3, line: 2756, type: !690)
!6570 = !DILocation(line: 0, scope: !6560)
!6571 = !DILocation(line: 2755, column: 3, scope: !6560)
!6572 = !DILocation(line: 2755, column: 8, scope: !6560)
!6573 = !DILocation(line: 2758, column: 7, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 2758, column: 7)
!6575 = !DILocation(line: 2758, column: 7, scope: !6560)
!6576 = !DILocation(line: 2759, column: 18, scope: !6574)
!6577 = !DILocation(line: 2759, column: 5, scope: !6574)
!6578 = !DILocation(line: 2760, column: 9, scope: !6560)
!6579 = !DILocation(line: 2760, column: 7, scope: !6560)
!6580 = !DILocation(line: 2761, column: 3, scope: !6560)
!6581 = !DILocation(line: 2761, column: 19, scope: !6560)
!6582 = !DILocation(line: 2762, column: 3, scope: !6560)
!6583 = !DILocation(line: 2763, column: 23, scope: !6560)
!6584 = !DILocation(line: 2763, column: 3, scope: !6560)
!6585 = !DILocation(line: 2763, column: 21, scope: !6560)
!6586 = !DILocation(line: 2764, column: 8, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 2764, column: 3)
!6588 = !DILocation(line: 0, scope: !6587)
!6589 = !DILocation(line: 2764, column: 3, scope: !6587)
!6590 = !DILocation(line: 2766, column: 7, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2765, column: 5)
!6592 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 2764, column: 3)
!6593 = !DILocation(line: 2766, column: 24, scope: !6591)
!6594 = !DILocation(line: 2767, column: 26, scope: !6591)
!6595 = !DILocation(line: 2767, column: 7, scope: !6591)
!6596 = !DILocation(line: 2767, column: 23, scope: !6591)
!6597 = !DILocation(line: 2764, column: 27, scope: !6592)
!6598 = !DILocation(line: 2764, column: 3, scope: !6592)
!6599 = distinct !{!6599, !6589, !6600}
!6600 = !DILocation(line: 2768, column: 5, scope: !6587)
!6601 = !DILocation(line: 2769, column: 3, scope: !6560)
!6602 = !DILocation(line: 2769, column: 21, scope: !6560)
!6603 = !DILocation(line: 2770, column: 3, scope: !6560)
!6604 = !DILocation(line: 2771, column: 3, scope: !6560)
!6605 = !DILocation(line: 2771, column: 19, scope: !6560)
!6606 = !DILocation(line: 2773, column: 10, scope: !6560)
!6607 = !DILocation(line: 2774, column: 1, scope: !6560)
!6608 = !DILocation(line: 2773, column: 3, scope: !6560)
!6609 = distinct !DISubprogram(name: "update_fields_mapping", scope: !3, file: !3, line: 2737, type: !6610, scopeLine: 2739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6612)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{null, !2007, !690, !1997, !671}
!6612 = !{!6613, !6614, !6615, !6616, !6617}
!6613 = !DILocalVariable(name: "cluster", arg: 1, scope: !6609, file: !3, line: 2737, type: !2007)
!6614 = !DILocalVariable(name: "new_type", arg: 2, scope: !6609, file: !3, line: 2737, type: !690)
!6615 = !DILocalVariable(name: "fields", arg: 3, scope: !6609, file: !3, line: 2738, type: !1997)
!6616 = !DILocalVariable(name: "num_fields", arg: 4, scope: !6609, file: !3, line: 2738, type: !671)
!6617 = !DILocalVariable(name: "i", scope: !6609, file: !3, line: 2740, type: !671)
!6618 = !DILocation(line: 0, scope: !6609)
!6619 = !DILocation(line: 0, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 2743, column: 9)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 2742, column: 3)
!6622 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 2742, column: 3)
!6623 = !DILocation(line: 2742, column: 8, scope: !6622)
!6624 = !DILocation(line: 0, scope: !6622)
!6625 = !DILocation(line: 2742, column: 17, scope: !6621)
!6626 = !DILocation(line: 2742, column: 3, scope: !6622)
!6627 = !DILocation(line: 2743, column: 9, scope: !6620)
!6628 = !DILocation(line: 2743, column: 9, scope: !6621)
!6629 = !DILocation(line: 2744, column: 12, scope: !6620)
!6630 = !DILocation(line: 2744, column: 26, scope: !6620)
!6631 = !DILocation(line: 2744, column: 2, scope: !6620)
!6632 = !DILocation(line: 2742, column: 32, scope: !6621)
!6633 = !DILocation(line: 2742, column: 3, scope: !6621)
!6634 = distinct !{!6634, !6626, !6635}
!6635 = !DILocation(line: 2744, column: 28, scope: !6622)
!6636 = !DILocation(line: 2745, column: 1, scope: !6609)
!6637 = distinct !DISubprogram(name: "dump_struct_type", scope: !3, file: !3, line: 3256, type: !6638, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6640)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{null, !690, !744, !744}
!6640 = !{!6641, !6642, !6643, !6644, !6645, !6646, !6650}
!6641 = !DILocalVariable(name: "type", arg: 1, scope: !6637, file: !3, line: 3256, type: !690)
!6642 = !DILocalVariable(name: "indent", arg: 2, scope: !6637, file: !3, line: 3256, type: !744)
!6643 = !DILocalVariable(name: "shift", arg: 3, scope: !6637, file: !3, line: 3257, type: !744)
!6644 = !DILocalVariable(name: "struct_name", scope: !6637, file: !3, line: 3259, type: !676)
!6645 = !DILocalVariable(name: "field", scope: !6637, file: !3, line: 3260, type: !690)
!6646 = !DILocalVariable(name: "s", scope: !6647, file: !3, line: 3282, type: !744)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 3281, column: 5)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 3279, column: 3)
!6649 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 3279, column: 3)
!6650 = !DILocalVariable(name: "f_type", scope: !6647, file: !3, line: 3283, type: !690)
!6651 = !DILocation(line: 0, scope: !6637)
!6652 = !DILocation(line: 3262, column: 8, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 3262, column: 7)
!6654 = !DILocation(line: 3262, column: 17, scope: !6653)
!6655 = !DILocation(line: 3262, column: 13, scope: !6653)
!6656 = !DILocation(line: 3265, column: 7, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 3265, column: 7)
!6658 = !DILocation(line: 3265, column: 24, scope: !6657)
!6659 = !DILocation(line: 3265, column: 7, scope: !6637)
!6660 = !DILocation(line: 3267, column: 7, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3266, column: 5)
!6662 = !DILocation(line: 3268, column: 7, scope: !6661)
!6663 = !DILocation(line: 3271, column: 3, scope: !6637)
!6664 = !DILocation(line: 3272, column: 17, scope: !6637)
!6665 = !DILocation(line: 3273, column: 12, scope: !6637)
!6666 = !DILocation(line: 3273, column: 3, scope: !6637)
!6667 = !DILocation(line: 3274, column: 7, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 3274, column: 7)
!6669 = !DILocation(line: 3274, column: 7, scope: !6637)
!6670 = !DILocation(line: 3275, column: 14, scope: !6668)
!6671 = !DILocation(line: 3275, column: 5, scope: !6668)
!6672 = !DILocation(line: 3276, column: 3, scope: !6637)
!6673 = !DILocation(line: 3277, column: 12, scope: !6637)
!6674 = !DILocation(line: 3277, column: 3, scope: !6637)
!6675 = !DILocation(line: 3279, column: 16, scope: !6649)
!6676 = !DILocation(line: 0, scope: !6647)
!6677 = !DILocation(line: 3279, column: 8, scope: !6649)
!6678 = !DILocation(line: 0, scope: !6649)
!6679 = !DILocation(line: 3279, column: 3, scope: !6649)
!6680 = !DILocation(line: 3283, column: 21, scope: !6647)
!6681 = !DILocation(line: 3285, column: 7, scope: !6647)
!6682 = !DILocation(line: 3286, column: 7, scope: !6647)
!6683 = !DILocation(line: 3286, column: 15, scope: !6647)
!6684 = !DILocation(line: 3287, column: 11, scope: !6647)
!6685 = !DILocation(line: 3287, column: 2, scope: !6647)
!6686 = distinct !{!6686, !6682, !6687}
!6687 = !DILocation(line: 3287, column: 25, scope: !6647)
!6688 = !DILocation(line: 3288, column: 7, scope: !6647)
!6689 = !DILocation(line: 3289, column: 15, scope: !6647)
!6690 = !DILocation(line: 3289, column: 7, scope: !6647)
!6691 = !DILocation(line: 3290, column: 27, scope: !6647)
!6692 = !DILocation(line: 3290, column: 7, scope: !6647)
!6693 = !DILocation(line: 3291, column: 15, scope: !6647)
!6694 = !DILocation(line: 3291, column: 7, scope: !6647)
!6695 = !DILocation(line: 3280, column: 16, scope: !6648)
!6696 = !DILocation(line: 3279, column: 3, scope: !6648)
!6697 = distinct !{!6697, !6679, !6698}
!6698 = !DILocation(line: 3292, column: 5, scope: !6649)
!6699 = !DILocation(line: 3293, column: 3, scope: !6637)
!6700 = !DILocation(line: 3294, column: 12, scope: !6637)
!6701 = !DILocation(line: 3294, column: 3, scope: !6637)
!6702 = !DILocation(line: 3295, column: 1, scope: !6637)
!6703 = distinct !DISubprogram(name: "print_shift", scope: !3, file: !3, line: 2726, type: !6704, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6706)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{null, !744}
!6706 = !{!6707, !6708}
!6707 = !DILocalVariable(name: "shift", arg: 1, scope: !6703, file: !3, line: 2726, type: !744)
!6708 = !DILocalVariable(name: "sh", scope: !6703, file: !3, line: 2728, type: !744)
!6709 = !DILocation(line: 0, scope: !6703)
!6710 = !DILocation(line: 2730, column: 3, scope: !6703)
!6711 = !DILocation(line: 2730, column: 12, scope: !6703)
!6712 = !DILocation(line: 2731, column: 14, scope: !6703)
!6713 = !DILocation(line: 2731, column: 5, scope: !6703)
!6714 = distinct !{!6714, !6710, !6715}
!6715 = !DILocation(line: 2731, column: 28, scope: !6703)
!6716 = !DILocation(line: 2732, column: 1, scope: !6703)
!6717 = distinct !DISubprogram(name: "new_var_hash", scope: !3, file: !3, line: 2279, type: !1452, scopeLine: 2280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6718)
!6718 = !{!6719}
!6719 = !DILocalVariable(name: "x", arg: 1, scope: !6717, file: !3, line: 2279, type: !1455)
!6720 = !DILocation(line: 0, scope: !6717)
!6721 = !DILocation(line: 2281, column: 10, scope: !6717)
!6722 = !DILocation(line: 2281, column: 3, scope: !6717)
!6723 = distinct !DISubprogram(name: "new_var_eq", scope: !3, file: !3, line: 2288, type: !1460, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6724)
!6724 = !{!6725, !6726}
!6725 = !DILocalVariable(name: "x", arg: 1, scope: !6723, file: !3, line: 2288, type: !1455)
!6726 = !DILocalVariable(name: "y", arg: 2, scope: !6723, file: !3, line: 2288, type: !1455)
!6727 = !DILocation(line: 0, scope: !6723)
!6728 = !DILocation(line: 2290, column: 7, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2290, column: 7)
!6730 = !DILocation(line: 2290, column: 7, scope: !6723)
!6731 = !DILocation(line: 2291, column: 12, scope: !6729)
!6732 = !DILocation(line: 2291, column: 55, scope: !6729)
!6733 = !DILocation(line: 2291, column: 52, scope: !6729)
!6734 = !DILocation(line: 2291, column: 5, scope: !6729)
!6735 = !DILocation(line: 0, scope: !6729)
!6736 = !DILocation(line: 2294, column: 1, scope: !6723)
!6737 = distinct !DISubprogram(name: "create_new_var", scope: !3, file: !3, line: 2253, type: !6738, scopeLine: 2254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6740)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{null, !690, !1444}
!6740 = !{!6741, !6742, !6743, !6744, !6745, !6746}
!6741 = !DILocalVariable(name: "var_decl", arg: 1, scope: !6737, file: !3, line: 2253, type: !690)
!6742 = !DILocalVariable(name: "new_vars_htab", arg: 2, scope: !6737, file: !3, line: 2253, type: !1444)
!6743 = !DILocalVariable(name: "node", scope: !6737, file: !3, line: 2255, type: !2120)
!6744 = !DILocalVariable(name: "str", scope: !6737, file: !3, line: 2256, type: !2069)
!6745 = !DILocalVariable(name: "type", scope: !6737, file: !3, line: 2257, type: !690)
!6746 = !DILocalVariable(name: "i", scope: !6737, file: !3, line: 2258, type: !7)
!6747 = !DILocation(line: 0, scope: !6737)
!6748 = !DILocation(line: 2257, column: 3, scope: !6737)
!6749 = !DILocation(line: 2260, column: 8, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2260, column: 7)
!6751 = !DILocation(line: 2260, column: 17, scope: !6750)
!6752 = !DILocation(line: 2260, column: 20, scope: !6750)
!6753 = !DILocation(line: 2260, column: 7, scope: !6737)
!6754 = !DILocation(line: 2263, column: 8, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2263, column: 7)
!6756 = !DILocation(line: 2263, column: 7, scope: !6737)
!6757 = !DILocation(line: 2266, column: 23, scope: !6737)
!6758 = !DILocation(line: 2266, column: 7, scope: !6737)
!6759 = !DILocation(line: 2267, column: 12, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2267, column: 7)
!6761 = !DILocation(line: 2267, column: 9, scope: !6760)
!6762 = !DILocation(line: 2267, column: 7, scope: !6737)
!6763 = !DILocation(line: 2270, column: 9, scope: !6737)
!6764 = !DILocation(line: 2271, column: 10, scope: !6737)
!6765 = !DILocation(line: 2272, column: 3, scope: !6737)
!6766 = !DILocation(line: 2273, column: 3, scope: !6737)
!6767 = !DILocation(line: 2274, column: 1, scope: !6737)
!6768 = distinct !DISubprogram(name: "update_varpool_with_new_var", scope: !3, file: !3, line: 1468, type: !4199, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6769)
!6769 = !{!6770, !6771, !6772, !6773, !6774}
!6770 = !DILocalVariable(name: "slot", arg: 1, scope: !6768, file: !3, line: 1468, type: !1468)
!6771 = !DILocalVariable(name: "data", arg: 2, scope: !6768, file: !3, line: 1468, type: !675)
!6772 = !DILocalVariable(name: "n_var", scope: !6768, file: !3, line: 1470, type: !2120)
!6773 = !DILocalVariable(name: "var", scope: !6768, file: !3, line: 1471, type: !690)
!6774 = !DILocalVariable(name: "i", scope: !6768, file: !3, line: 1472, type: !7)
!6775 = !DILocation(line: 0, scope: !6768)
!6776 = !DILocation(line: 1470, column: 19, scope: !6768)
!6777 = !DILocation(line: 1471, column: 3, scope: !6768)
!6778 = !DILocation(line: 0, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 1474, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1474, column: 3)
!6781 = !DILocation(line: 1474, column: 8, scope: !6780)
!6782 = !DILocation(line: 0, scope: !6780)
!6783 = !DILocation(line: 1474, column: 15, scope: !6779)
!6784 = !DILocation(line: 1474, column: 3, scope: !6780)
!6785 = !DILocation(line: 1475, column: 31, scope: !6779)
!6786 = !DILocation(line: 1475, column: 5, scope: !6779)
!6787 = !DILocation(line: 1474, column: 61, scope: !6779)
!6788 = !DILocation(line: 1474, column: 3, scope: !6779)
!6789 = distinct !{!6789, !6784, !6790}
!6790 = !DILocation(line: 1475, column: 34, scope: !6780)
!6791 = !DILocation(line: 1477, column: 1, scope: !6768)
!6792 = !DILocation(line: 1476, column: 3, scope: !6768)
!6793 = distinct !DISubprogram(name: "is_in_new_vars_htab", scope: !3, file: !3, line: 584, type: !6794, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6796)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{!2120, !690, !1444}
!6796 = !{!6797, !6798}
!6797 = !DILocalVariable(name: "decl", arg: 1, scope: !6793, file: !3, line: 584, type: !690)
!6798 = !DILocalVariable(name: "new_vars_htab", arg: 2, scope: !6793, file: !3, line: 584, type: !1444)
!6799 = !DILocation(line: 0, scope: !6793)
!6800 = !DILocation(line: 586, column: 56, scope: !6793)
!6801 = !DILocation(line: 587, column: 6, scope: !6793)
!6802 = !DILocation(line: 586, column: 20, scope: !6793)
!6803 = !DILocation(line: 586, column: 10, scope: !6793)
!6804 = !DILocation(line: 586, column: 3, scope: !6793)
!6805 = distinct !DISubprogram(name: "create_new_var_node", scope: !3, file: !3, line: 1998, type: !6806, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6808)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{!2120, !690, !2069}
!6808 = !{!6809, !6810, !6811}
!6809 = !DILocalVariable(name: "var", arg: 1, scope: !6805, file: !3, line: 1998, type: !690)
!6810 = !DILocalVariable(name: "str", arg: 2, scope: !6805, file: !3, line: 1998, type: !2069)
!6811 = !DILocalVariable(name: "node", scope: !6805, file: !3, line: 2000, type: !2120)
!6812 = !DILocation(line: 0, scope: !6805)
!6813 = !DILocation(line: 2002, column: 10, scope: !6805)
!6814 = !DILocation(line: 2003, column: 9, scope: !6805)
!6815 = !DILocation(line: 2003, column: 18, scope: !6805)
!6816 = !DILocation(line: 2004, column: 20, scope: !6805)
!6817 = !DILocation(line: 2004, column: 9, scope: !6805)
!6818 = !DILocation(line: 2004, column: 18, scope: !6805)
!6819 = !DILocation(line: 2005, column: 3, scope: !6805)
!6820 = distinct !DISubprogram(name: "create_new_var_1", scope: !3, file: !3, line: 2220, type: !6821, scopeLine: 2221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6823)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{null, !690, !2069, !2120}
!6823 = !{!6824, !6825, !6826, !6827, !6828, !6829, !6833, !6834}
!6824 = !DILocalVariable(name: "orig_decl", arg: 1, scope: !6820, file: !3, line: 2220, type: !690)
!6825 = !DILocalVariable(name: "str", arg: 2, scope: !6820, file: !3, line: 2220, type: !2069)
!6826 = !DILocalVariable(name: "node", arg: 3, scope: !6820, file: !3, line: 2220, type: !2120)
!6827 = !DILocalVariable(name: "i", scope: !6820, file: !3, line: 2222, type: !7)
!6828 = !DILocalVariable(name: "type", scope: !6820, file: !3, line: 2223, type: !690)
!6829 = !DILocalVariable(name: "new_decl", scope: !6830, file: !3, line: 2228, type: !690)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 2227, column: 5)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 2225, column: 3)
!6832 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2225, column: 3)
!6833 = !DILocalVariable(name: "new_name", scope: !6830, file: !3, line: 2229, type: !690)
!6834 = !DILocalVariable(name: "name", scope: !6835, file: !3, line: 2239, type: !676)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2238, column: 2)
!6836 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 2234, column: 11)
!6837 = !DILocation(line: 0, scope: !6820)
!6838 = !DILocation(line: 2223, column: 3, scope: !6820)
!6839 = !DILocation(line: 0, scope: !6831)
!6840 = !DILocation(line: 0, scope: !6836)
!6841 = !DILocation(line: 0, scope: !6830)
!6842 = !DILocation(line: 2225, column: 8, scope: !6832)
!6843 = !DILocation(line: 0, scope: !6832)
!6844 = !DILocation(line: 2226, column: 8, scope: !6831)
!6845 = !DILocation(line: 2225, column: 3, scope: !6832)
!6846 = !DILocation(line: 2231, column: 43, scope: !6830)
!6847 = !DILocation(line: 2231, column: 18, scope: !6830)
!6848 = !DILocation(line: 2232, column: 42, scope: !6830)
!6849 = !DILocation(line: 2232, column: 14, scope: !6830)
!6850 = !DILocation(line: 2232, column: 12, scope: !6830)
!6851 = !DILocation(line: 2234, column: 11, scope: !6836)
!6852 = !DILocation(line: 2234, column: 11, scope: !6830)
!6853 = !DILocation(line: 2235, column: 13, scope: !6836)
!6854 = !DILocation(line: 2235, column: 2, scope: !6836)
!6855 = !DILocation(line: 2239, column: 23, scope: !6835)
!6856 = !DILocation(line: 2239, column: 34, scope: !6835)
!6857 = !DILocation(line: 0, scope: !6835)
!6858 = !DILocation(line: 2240, column: 31, scope: !6835)
!6859 = !DILocation(line: 2240, column: 15, scope: !6835)
!6860 = !DILocation(line: 2243, column: 7, scope: !6830)
!6861 = !DILocation(line: 2244, column: 7, scope: !6830)
!6862 = !DILocation(line: 2226, column: 54, scope: !6831)
!6863 = !DILocation(line: 2225, column: 3, scope: !6831)
!6864 = distinct !{!6864, !6845, !6865}
!6865 = !DILocation(line: 2245, column: 5, scope: !6832)
!6866 = !DILocation(line: 2246, column: 1, scope: !6820)
!6867 = distinct !DISubprogram(name: "add_to_new_vars_htab", scope: !3, file: !3, line: 1984, type: !6868, scopeLine: 1985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6870)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{null, !2120, !1444}
!6870 = !{!6871, !6872, !6873}
!6871 = !DILocalVariable(name: "new_node", arg: 1, scope: !6867, file: !3, line: 1984, type: !2120)
!6872 = !DILocalVariable(name: "new_vars_htab", arg: 2, scope: !6867, file: !3, line: 1984, type: !1444)
!6873 = !DILocalVariable(name: "slot", scope: !6867, file: !3, line: 1986, type: !1468)
!6874 = !DILocation(line: 0, scope: !6867)
!6875 = !DILocation(line: 1988, column: 61, scope: !6867)
!6876 = !DILocation(line: 1989, column: 8, scope: !6867)
!6877 = !DILocation(line: 1988, column: 10, scope: !6867)
!6878 = !DILocation(line: 1991, column: 9, scope: !6867)
!6879 = !DILocation(line: 1992, column: 1, scope: !6867)
!6880 = distinct !DISubprogram(name: "gen_var_name", scope: !3, file: !3, line: 1961, type: !6881, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6883)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!690, !690, !744}
!6883 = !{!6884, !6885, !6886, !6887, !6888, !6889, !6891}
!6884 = !DILocalVariable(name: "orig_decl", arg: 1, scope: !6880, file: !3, line: 1961, type: !690)
!6885 = !DILocalVariable(name: "i", arg: 2, scope: !6880, file: !3, line: 1961, type: !744)
!6886 = !DILocalVariable(name: "old_name", scope: !6880, file: !3, line: 1963, type: !676)
!6887 = !DILocalVariable(name: "prefix", scope: !6880, file: !3, line: 1964, type: !673)
!6888 = !DILocalVariable(name: "new_name", scope: !6880, file: !3, line: 1965, type: !673)
!6889 = !DILocalVariable(name: "name_", scope: !6890, file: !3, line: 1977, type: !6495)
!6890 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1977, column: 3)
!6891 = !DILocalVariable(name: "output_", scope: !6890, file: !3, line: 1977, type: !6497)
!6892 = !DILocation(line: 0, scope: !6880)
!6893 = !DILocation(line: 1967, column: 8, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1967, column: 7)
!6895 = !DILocation(line: 1968, column: 7, scope: !6894)
!6896 = !DILocation(line: 1968, column: 11, scope: !6894)
!6897 = !DILocation(line: 1967, column: 7, scope: !6880)
!6898 = !DILocation(line: 1975, column: 12, scope: !6880)
!6899 = !DILocation(line: 1976, column: 3, scope: !6880)
!6900 = !DILocation(line: 0, scope: !6890)
!6901 = !DILocation(line: 1977, column: 3, scope: !6890)
!6902 = !DILocation(line: 1978, column: 10, scope: !6880)
!6903 = !DILocation(line: 1978, column: 3, scope: !6880)
!6904 = !DILocation(line: 1979, column: 1, scope: !6880)
!6905 = distinct !DISubprogram(name: "gen_struct_type", scope: !3, file: !3, line: 1914, type: !5271, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6906)
!6906 = !{!6907, !6908, !6909, !6910, !6911, !6912, !6913}
!6907 = !DILocalVariable(name: "decl", arg: 1, scope: !6905, file: !3, line: 1914, type: !690)
!6908 = !DILocalVariable(name: "new_str_type", arg: 2, scope: !6905, file: !3, line: 1914, type: !690)
!6909 = !DILocalVariable(name: "type_orig", scope: !6905, file: !3, line: 1916, type: !690)
!6910 = !DILocalVariable(name: "new_type", scope: !6905, file: !3, line: 1917, type: !690)
!6911 = !DILocalVariable(name: "wrapper", scope: !6905, file: !3, line: 1918, type: !2122)
!6912 = !DILocalVariable(name: "wr", scope: !6905, file: !3, line: 1919, type: !2134)
!6913 = !DILocalVariable(name: "wr_p", scope: !6905, file: !3, line: 1920, type: !6914)
!6914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!6915 = !DILocation(line: 0, scope: !6905)
!6916 = !DILocation(line: 1916, column: 20, scope: !6905)
!6917 = !DILocation(line: 1918, column: 3, scope: !6905)
!6918 = !DILocation(line: 1918, column: 41, scope: !6905)
!6919 = !DILocation(line: 1918, column: 31, scope: !6905)
!6920 = !DILocation(line: 1919, column: 3, scope: !6905)
!6921 = !DILocation(line: 0, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 1931, column: 2)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 1925, column: 11)
!6924 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1924, column: 5)
!6925 = !DILocation(line: 1922, column: 3, scope: !6905)
!6926 = !DILocation(line: 1922, column: 10, scope: !6905)
!6927 = !DILocation(line: 1923, column: 28, scope: !6905)
!6928 = !DILocation(line: 1923, column: 3, scope: !6905)
!6929 = !DILocation(line: 1940, column: 3, scope: !6905)
!6930 = !DILocation(line: 1925, column: 11, scope: !6923)
!6931 = !DILocation(line: 1925, column: 11, scope: !6924)
!6932 = !DILocation(line: 1927, column: 12, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 1926, column: 2)
!6934 = !DILocation(line: 1928, column: 14, scope: !6933)
!6935 = !DILocation(line: 1929, column: 2, scope: !6933)
!6936 = !DILocation(line: 1932, column: 4, scope: !6922)
!6937 = !DILocation(line: 1933, column: 12, scope: !6922)
!6938 = !DILocation(line: 1934, column: 16, scope: !6922)
!6939 = !DILocation(line: 1934, column: 14, scope: !6922)
!6940 = !DILocation(line: 1936, column: 7, scope: !6924)
!6941 = !DILocation(line: 1937, column: 19, scope: !6924)
!6942 = distinct !{!6942, !6925, !6943}
!6943 = !DILocation(line: 1938, column: 5, scope: !6905)
!6944 = !DILocation(line: 1940, column: 10, scope: !6905)
!6945 = !DILocation(line: 1940, column: 47, scope: !6905)
!6946 = !DILocation(line: 1942, column: 14, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1941, column: 5)
!6948 = !DILocation(line: 1944, column: 17, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1944, column: 11)
!6950 = !DILocation(line: 1944, column: 11, scope: !6949)
!6951 = !DILocation(line: 1944, column: 11, scope: !6947)
!6952 = !DILocation(line: 1945, column: 47, scope: !6949)
!6953 = !DILocation(line: 1945, column: 13, scope: !6949)
!6954 = !DILocation(line: 1945, column: 2, scope: !6949)
!6955 = !DILocation(line: 1947, column: 13, scope: !6949)
!6956 = !DILocation(line: 0, scope: !6949)
!6957 = !DILocation(line: 1949, column: 7, scope: !6947)
!6958 = distinct !{!6958, !6929, !6959}
!6959 = !DILocation(line: 1950, column: 5, scope: !6905)
!6960 = !DILocation(line: 1952, column: 3, scope: !6905)
!6961 = !DILocation(line: 1954, column: 1, scope: !6905)
!6962 = !DILocation(line: 1953, column: 3, scope: !6905)
!6963 = distinct !DISubprogram(name: "is_global_var", scope: !4621, file: !4621, line: 575, type: !6964, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6966)
!6964 = !DISubroutineType(types: !6965)
!6965 = !{!670, !2078}
!6966 = !{!6967}
!6967 = !DILocalVariable(name: "t", arg: 1, scope: !6963, file: !4621, line: 575, type: !2078)
!6968 = !DILocation(line: 0, scope: !6963)
!6969 = !DILocation(line: 577, column: 11, scope: !6963)
!6970 = !DILocation(line: 577, column: 27, scope: !6963)
!6971 = !DILocation(line: 577, column: 30, scope: !6963)
!6972 = !DILocation(line: 577, column: 3, scope: !6963)
!6973 = distinct !DISubprogram(name: "copy_decl_attributes", scope: !3, file: !3, line: 1890, type: !6974, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6976)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{null, !690, !690}
!6976 = !{!6977, !6978}
!6977 = !DILocalVariable(name: "new_decl", arg: 1, scope: !6973, file: !3, line: 1890, type: !690)
!6978 = !DILocalVariable(name: "orig_decl", arg: 2, scope: !6973, file: !3, line: 1890, type: !690)
!6979 = !DILocation(line: 0, scope: !6973)
!6980 = !DILocation(line: 1893, column: 3, scope: !6973)
!6981 = !DILocation(line: 1893, column: 30, scope: !6973)
!6982 = !DILocation(line: 1894, column: 30, scope: !6973)
!6983 = !DILocation(line: 1894, column: 28, scope: !6973)
!6984 = !DILocation(line: 1895, column: 28, scope: !6973)
!6985 = !DILocation(line: 1895, column: 3, scope: !6973)
!6986 = !DILocation(line: 1895, column: 26, scope: !6973)
!6987 = !DILocation(line: 1896, column: 28, scope: !6973)
!6988 = !DILocation(line: 1896, column: 26, scope: !6973)
!6989 = !DILocation(line: 1897, column: 26, scope: !6973)
!6990 = !DILocation(line: 1897, column: 24, scope: !6973)
!6991 = !DILocation(line: 1898, column: 29, scope: !6973)
!6992 = !DILocation(line: 1898, column: 3, scope: !6973)
!6993 = !DILocation(line: 1898, column: 27, scope: !6973)
!6994 = !DILocation(line: 1899, column: 35, scope: !6973)
!6995 = !DILocation(line: 1899, column: 33, scope: !6973)
!6996 = !DILocation(line: 1900, column: 33, scope: !6973)
!6997 = !DILocation(line: 1900, column: 31, scope: !6973)
!6998 = !DILocation(line: 1902, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 1902, column: 7)
!7000 = !DILocation(line: 1902, column: 29, scope: !6999)
!7001 = !DILocation(line: 1902, column: 7, scope: !6973)
!7002 = !DILocation(line: 1904, column: 34, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 1903, column: 5)
!7004 = !DILocation(line: 1904, column: 32, scope: !7003)
!7005 = !DILocation(line: 1905, column: 35, scope: !7003)
!7006 = !DILocation(line: 1905, column: 7, scope: !7003)
!7007 = !DILocation(line: 1905, column: 33, scope: !7003)
!7008 = !DILocation(line: 1906, column: 5, scope: !7003)
!7009 = !DILocation(line: 1907, column: 1, scope: !6973)
!7010 = distinct !DISubprogram(name: "VEC_type_wrapper_t_heap_alloc", scope: !3, file: !3, line: 952, type: !7011, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7013)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!2122, !671}
!7013 = !{!7014}
!7014 = !DILocalVariable(name: "alloc_", arg: 1, scope: !7010, file: !3, line: 952, type: !671)
!7015 = !DILocation(line: 0, scope: !7010)
!7016 = !DILocation(line: 952, column: 1, scope: !7010)
!7017 = distinct !DISubprogram(name: "VEC_type_wrapper_t_heap_safe_push", scope: !3, file: !3, line: 952, type: !7018, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7023)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!6914, !7020, !7021}
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!7021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7022, size: 64)
!7022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2134)
!7023 = !{!7024, !7025}
!7024 = !DILocalVariable(name: "vec_", arg: 1, scope: !7017, file: !3, line: 952, type: !7020)
!7025 = !DILocalVariable(name: "obj_", arg: 2, scope: !7017, file: !3, line: 952, type: !7021)
!7026 = !DILocation(line: 0, scope: !7017)
!7027 = !DILocation(line: 952, column: 1, scope: !7017)
!7028 = distinct !DISubprogram(name: "VEC_type_wrapper_t_base_length", scope: !3, file: !3, line: 951, type: !7029, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7033)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!7, !7031}
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2127)
!7033 = !{!7034}
!7034 = !DILocalVariable(name: "vec_", arg: 1, scope: !7028, file: !3, line: 951, type: !7031)
!7035 = !DILocation(line: 0, scope: !7028)
!7036 = !DILocation(line: 951, column: 1, scope: !7028)
!7037 = distinct !DISubprogram(name: "VEC_type_wrapper_t_base_last", scope: !3, file: !3, line: 951, type: !7038, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7041)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!6914, !7040}
!7040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "vec_", arg: 1, scope: !7037, file: !3, line: 951, type: !7040)
!7043 = !DILocation(line: 0, scope: !7037)
!7044 = !DILocation(line: 951, column: 1, scope: !7037)
!7045 = distinct !DISubprogram(name: "VEC_type_wrapper_t_base_pop", scope: !3, file: !3, line: 951, type: !7046, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7048)
!7046 = !DISubroutineType(types: !7047)
!7047 = !{null, !7040}
!7048 = !{!7049}
!7049 = !DILocalVariable(name: "vec_", arg: 1, scope: !7045, file: !3, line: 951, type: !7040)
!7050 = !DILocation(line: 0, scope: !7045)
!7051 = !DILocation(line: 951, column: 1, scope: !7045)
!7052 = distinct !DISubprogram(name: "VEC_type_wrapper_t_heap_free", scope: !3, file: !3, line: 952, type: !7053, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7055)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{null, !7020}
!7055 = !{!7056}
!7056 = !DILocalVariable(name: "vec_", arg: 1, scope: !7052, file: !3, line: 952, type: !7020)
!7057 = !DILocation(line: 0, scope: !7052)
!7058 = !DILocation(line: 952, column: 1, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 952, column: 1)
!7060 = !DILocation(line: 952, column: 1, scope: !7052)
!7061 = distinct !DISubprogram(name: "VEC_type_wrapper_t_heap_reserve", scope: !3, file: !3, line: 952, type: !7062, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7064)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!671, !7020, !671}
!7064 = !{!7065, !7066, !7067}
!7065 = !DILocalVariable(name: "vec_", arg: 1, scope: !7061, file: !3, line: 952, type: !7020)
!7066 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7061, file: !3, line: 952, type: !671)
!7067 = !DILocalVariable(name: "extend", scope: !7061, file: !3, line: 952, type: !671)
!7068 = !DILocation(line: 0, scope: !7061)
!7069 = !DILocation(line: 952, column: 1, scope: !7061)
!7070 = !DILocation(line: 952, column: 1, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 952, column: 1)
!7072 = distinct !DISubprogram(name: "VEC_type_wrapper_t_base_quick_push", scope: !3, file: !3, line: 951, type: !7073, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7075)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!6914, !7040, !7021}
!7075 = !{!7076, !7077, !7078}
!7076 = !DILocalVariable(name: "vec_", arg: 1, scope: !7072, file: !3, line: 951, type: !7040)
!7077 = !DILocalVariable(name: "obj_", arg: 2, scope: !7072, file: !3, line: 951, type: !7021)
!7078 = !DILocalVariable(name: "slot_", scope: !7072, file: !3, line: 951, type: !6914)
!7079 = !DILocation(line: 0, scope: !7072)
!7080 = !DILocation(line: 951, column: 1, scope: !7072)
!7081 = !DILocation(line: 951, column: 1, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 951, column: 1)
!7083 = distinct !DISubprogram(name: "VEC_type_wrapper_t_base_space", scope: !3, file: !3, line: 951, type: !7084, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7086)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{!671, !7040, !671}
!7086 = !{!7087, !7088}
!7087 = !DILocalVariable(name: "vec_", arg: 1, scope: !7083, file: !3, line: 951, type: !7040)
!7088 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7083, file: !3, line: 951, type: !671)
!7089 = !DILocation(line: 0, scope: !7083)
!7090 = !DILocation(line: 951, column: 1, scope: !7083)
!7091 = distinct !DISubprogram(name: "insert_global_to_varpool", scope: !3, file: !3, line: 533, type: !3343, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7092)
!7092 = !{!7093, !7094}
!7093 = !DILocalVariable(name: "new_decl", arg: 1, scope: !7091, file: !3, line: 533, type: !690)
!7094 = !DILocalVariable(name: "new_node", scope: !7091, file: !3, line: 535, type: !2789)
!7095 = !DILocation(line: 0, scope: !7091)
!7096 = !DILocation(line: 537, column: 14, scope: !7091)
!7097 = !DILocation(line: 538, column: 3, scope: !7091)
!7098 = !DILocation(line: 539, column: 3, scope: !7091)
!7099 = !DILocation(line: 540, column: 3, scope: !7091)
!7100 = !DILocation(line: 541, column: 1, scope: !7091)
!7101 = distinct !DISubprogram(name: "dump_new_var", scope: !3, file: !3, line: 1858, type: !4199, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7102)
!7102 = !{!7103, !7104, !7105, !7106, !7107, !7108}
!7103 = !DILocalVariable(name: "slot", arg: 1, scope: !7101, file: !3, line: 1858, type: !1468)
!7104 = !DILocalVariable(name: "data", arg: 2, scope: !7101, file: !3, line: 1858, type: !675)
!7105 = !DILocalVariable(name: "n_var", scope: !7101, file: !3, line: 1860, type: !2120)
!7106 = !DILocalVariable(name: "var_type", scope: !7101, file: !3, line: 1861, type: !690)
!7107 = !DILocalVariable(name: "var", scope: !7101, file: !3, line: 1862, type: !690)
!7108 = !DILocalVariable(name: "i", scope: !7101, file: !3, line: 1863, type: !7)
!7109 = !DILocation(line: 0, scope: !7101)
!7110 = !DILocation(line: 1860, column: 19, scope: !7101)
!7111 = !DILocation(line: 1862, column: 3, scope: !7101)
!7112 = !DILocation(line: 1865, column: 38, scope: !7101)
!7113 = !DILocation(line: 1865, column: 14, scope: !7101)
!7114 = !DILocation(line: 1867, column: 12, scope: !7101)
!7115 = !DILocation(line: 1867, column: 3, scope: !7101)
!7116 = !DILocation(line: 1868, column: 23, scope: !7101)
!7117 = !DILocation(line: 1868, column: 41, scope: !7101)
!7118 = !DILocation(line: 1868, column: 3, scope: !7101)
!7119 = !DILocation(line: 1869, column: 12, scope: !7101)
!7120 = !DILocation(line: 1869, column: 3, scope: !7101)
!7121 = !DILocation(line: 1870, column: 23, scope: !7101)
!7122 = !DILocation(line: 1870, column: 3, scope: !7101)
!7123 = !DILocation(line: 1871, column: 12, scope: !7101)
!7124 = !DILocation(line: 1871, column: 3, scope: !7101)
!7125 = !DILocation(line: 0, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 1873, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 1873, column: 3)
!7128 = !DILocation(line: 1873, column: 8, scope: !7127)
!7129 = !DILocation(line: 0, scope: !7127)
!7130 = !DILocation(line: 1874, column: 8, scope: !7126)
!7131 = !DILocation(line: 1873, column: 3, scope: !7127)
!7132 = !DILocation(line: 1876, column: 35, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1875, column: 5)
!7134 = !DILocation(line: 1876, column: 18, scope: !7133)
!7135 = !DILocation(line: 1878, column: 16, scope: !7133)
!7136 = !DILocation(line: 1878, column: 7, scope: !7133)
!7137 = !DILocation(line: 1879, column: 27, scope: !7133)
!7138 = !DILocation(line: 1879, column: 38, scope: !7133)
!7139 = !DILocation(line: 1879, column: 7, scope: !7133)
!7140 = !DILocation(line: 1880, column: 16, scope: !7133)
!7141 = !DILocation(line: 1880, column: 7, scope: !7133)
!7142 = !DILocation(line: 1881, column: 27, scope: !7133)
!7143 = !DILocation(line: 1881, column: 7, scope: !7133)
!7144 = !DILocation(line: 1882, column: 16, scope: !7133)
!7145 = !DILocation(line: 1882, column: 7, scope: !7133)
!7146 = !DILocation(line: 1874, column: 54, scope: !7126)
!7147 = !DILocation(line: 1873, column: 3, scope: !7126)
!7148 = distinct !{!7148, !7131, !7149}
!7149 = !DILocation(line: 1883, column: 5, scope: !7127)
!7150 = !DILocation(line: 1885, column: 1, scope: !7101)
!7151 = !DILocation(line: 1884, column: 3, scope: !7101)
!7152 = distinct !DISubprogram(name: "do_reorg_for_func", scope: !3, file: !3, line: 3237, type: !2773, scopeLine: 3238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7153)
!7153 = !{!7154}
!7154 = !DILocalVariable(name: "node", arg: 1, scope: !7152, file: !3, line: 3237, type: !2686)
!7155 = !DILocation(line: 0, scope: !7152)
!7156 = !DILocation(line: 3239, column: 3, scope: !7152)
!7157 = !DILocation(line: 3240, column: 3, scope: !7152)
!7158 = !DILocation(line: 3241, column: 3, scope: !7152)
!7159 = !DILocation(line: 3242, column: 3, scope: !7152)
!7160 = !DILocation(line: 3243, column: 3, scope: !7152)
!7161 = !DILocation(line: 3246, column: 23, scope: !7152)
!7162 = !DILocation(line: 3246, column: 3, scope: !7152)
!7163 = !DILocation(line: 3247, column: 1, scope: !7152)
!7164 = distinct !DISubprogram(name: "create_new_local_vars", scope: !3, file: !3, line: 2704, type: !2648, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7165)
!7165 = !{!7166, !7167}
!7166 = !DILocalVariable(name: "var", scope: !7164, file: !3, line: 2706, type: !690)
!7167 = !DILocalVariable(name: "rvi", scope: !7164, file: !3, line: 2707, type: !7168)
!7168 = !DIDerivedType(tag: DW_TAG_typedef, name: "referenced_var_iterator", file: !1352, line: 336, baseType: !7169)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 333, size: 192, elements: !7170)
!7170 = !{!7171}
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "hti", scope: !7169, file: !1352, line: 335, baseType: !7172, size: 192)
!7172 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_iterator", file: !1352, line: 98, baseType: !7173)
!7173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 93, size: 192, elements: !7174)
!7174 = !{!7175, !7176, !7177}
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !7173, file: !1352, line: 95, baseType: !1444, size: 64)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7173, file: !1352, line: 96, baseType: !1468, size: 64, offset: 64)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7173, file: !1352, line: 97, baseType: !1468, size: 64, offset: 128)
!7178 = !DILocation(line: 2707, column: 3, scope: !7164)
!7179 = !DILocation(line: 2709, column: 33, scope: !7164)
!7180 = !DILocation(line: 2709, column: 20, scope: !7164)
!7181 = !DILocation(line: 2709, column: 18, scope: !7164)
!7182 = !DILocation(line: 0, scope: !7164)
!7183 = !DILocation(line: 2712, column: 3, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2712, column: 3)
!7185 = !DILocation(line: 0, scope: !7184)
!7186 = !DILocation(line: 2712, column: 3, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 2712, column: 3)
!7188 = !DILocation(line: 2714, column: 12, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 2714, column: 11)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 2713, column: 5)
!7191 = !DILocation(line: 2714, column: 11, scope: !7190)
!7192 = !DILocation(line: 2715, column: 23, scope: !7189)
!7193 = !DILocation(line: 2715, column: 2, scope: !7189)
!7194 = distinct !{!7194, !7183, !7195}
!7195 = !DILocation(line: 2716, column: 5, scope: !7184)
!7196 = !DILocation(line: 2718, column: 7, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2718, column: 7)
!7198 = !DILocation(line: 2718, column: 7, scope: !7164)
!7199 = !DILocation(line: 2719, column: 5, scope: !7197)
!7200 = !DILocation(line: 2720, column: 18, scope: !7164)
!7201 = !DILocation(line: 2720, column: 3, scope: !7164)
!7202 = !DILocation(line: 2721, column: 1, scope: !7164)
!7203 = distinct !DISubprogram(name: "create_new_alloc_sites_for_func", scope: !3, file: !3, line: 2692, type: !2773, scopeLine: 2693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7204)
!7204 = !{!7205, !7206}
!7205 = !DILocalVariable(name: "node", arg: 1, scope: !7203, file: !3, line: 2692, type: !2686)
!7206 = !DILocalVariable(name: "fallocs", scope: !7203, file: !3, line: 2694, type: !2046)
!7207 = !DILocation(line: 0, scope: !7203)
!7208 = !DILocation(line: 2694, column: 42, scope: !7203)
!7209 = !DILocation(line: 2694, column: 23, scope: !7203)
!7210 = !DILocation(line: 2696, column: 7, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2696, column: 7)
!7212 = !DILocation(line: 2696, column: 7, scope: !7203)
!7213 = !DILocation(line: 2697, column: 44, scope: !7211)
!7214 = !DILocation(line: 2697, column: 5, scope: !7211)
!7215 = !DILocation(line: 2698, column: 1, scope: !7203)
!7216 = distinct !DISubprogram(name: "create_new_accesses_for_func", scope: !3, file: !3, line: 2681, type: !2648, scopeLine: 2682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7217)
!7217 = !{!7218}
!7218 = !DILocalVariable(name: "bb", scope: !7216, file: !3, line: 2683, type: !1412)
!7219 = !DILocation(line: 2685, column: 3, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 2685, column: 3)
!7221 = !DILocation(line: 2685, column: 3, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2685, column: 3)
!7223 = !DILocation(line: 0, scope: !7220)
!7224 = !DILocation(line: 0, scope: !7216)
!7225 = !DILocation(line: 2686, column: 5, scope: !7222)
!7226 = !DILocation(line: 0, scope: !7222)
!7227 = distinct !{!7227, !7219, !7228}
!7228 = !DILocation(line: 2686, column: 34, scope: !7220)
!7229 = !DILocation(line: 2687, column: 1, scope: !7216)
!7230 = distinct !DISubprogram(name: "gimple_referenced_vars", scope: !4621, file: !4621, line: 40, type: !7231, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7235)
!7231 = !DISubroutineType(types: !7232)
!7232 = !{!1444, !7233}
!7233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7234, size: 64)
!7234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1401)
!7235 = !{!7236}
!7236 = !DILocalVariable(name: "fun", arg: 1, scope: !7230, file: !4621, line: 40, type: !7233)
!7237 = !DILocation(line: 0, scope: !7230)
!7238 = !DILocation(line: 42, column: 13, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7230, file: !4621, line: 42, column: 7)
!7240 = !DILocation(line: 42, column: 8, scope: !7239)
!7241 = !DILocation(line: 42, column: 7, scope: !7230)
!7242 = !DILocation(line: 44, column: 26, scope: !7230)
!7243 = !DILocation(line: 44, column: 3, scope: !7230)
!7244 = !DILocation(line: 45, column: 1, scope: !7230)
!7245 = distinct !DISubprogram(name: "first_referenced_var", scope: !4621, file: !4621, line: 105, type: !7246, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7249)
!7246 = !DISubroutineType(types: !7247)
!7247 = !{!690, !7248}
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 64)
!7249 = !{!7250}
!7250 = !DILocalVariable(name: "iter", arg: 1, scope: !7245, file: !4621, line: 105, type: !7248)
!7251 = !DILocation(line: 0, scope: !7245)
!7252 = !DILocation(line: 107, column: 44, scope: !7245)
!7253 = !DILocation(line: 108, column: 33, scope: !7245)
!7254 = !DILocation(line: 108, column: 9, scope: !7245)
!7255 = !DILocation(line: 107, column: 17, scope: !7245)
!7256 = !DILocation(line: 107, column: 10, scope: !7245)
!7257 = !DILocation(line: 107, column: 3, scope: !7245)
!7258 = distinct !DISubprogram(name: "end_referenced_vars_p", scope: !4621, file: !4621, line: 115, type: !7259, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7263)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{!670, !7261}
!7261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7262, size: 64)
!7262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7168)
!7263 = !{!7264}
!7264 = !DILocalVariable(name: "iter", arg: 1, scope: !7258, file: !4621, line: 115, type: !7261)
!7265 = !DILocation(line: 0, scope: !7258)
!7266 = !DILocation(line: 117, column: 29, scope: !7258)
!7267 = !DILocation(line: 117, column: 10, scope: !7258)
!7268 = !DILocation(line: 117, column: 3, scope: !7258)
!7269 = distinct !DISubprogram(name: "next_referenced_var", scope: !4621, file: !4621, line: 124, type: !7246, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "iter", arg: 1, scope: !7269, file: !4621, line: 124, type: !7248)
!7272 = !DILocation(line: 0, scope: !7269)
!7273 = !DILocation(line: 126, column: 43, scope: !7269)
!7274 = !DILocation(line: 126, column: 17, scope: !7269)
!7275 = !DILocation(line: 126, column: 10, scope: !7269)
!7276 = !DILocation(line: 126, column: 3, scope: !7269)
!7277 = distinct !DISubprogram(name: "finalize_new_vars_creation", scope: !3, file: !3, line: 547, type: !4199, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7278)
!7278 = !{!7279, !7280, !7281, !7282, !7283}
!7279 = !DILocalVariable(name: "slot", arg: 1, scope: !7277, file: !3, line: 547, type: !1468)
!7280 = !DILocalVariable(name: "data", arg: 2, scope: !7277, file: !3, line: 547, type: !675)
!7281 = !DILocalVariable(name: "n_var", scope: !7277, file: !3, line: 549, type: !2120)
!7282 = !DILocalVariable(name: "i", scope: !7277, file: !3, line: 550, type: !7)
!7283 = !DILocalVariable(name: "var", scope: !7277, file: !3, line: 551, type: !690)
!7284 = !DILocation(line: 0, scope: !7277)
!7285 = !DILocation(line: 549, column: 19, scope: !7277)
!7286 = !DILocation(line: 551, column: 3, scope: !7277)
!7287 = !DILocation(line: 0, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 553, column: 3)
!7289 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 553, column: 3)
!7290 = !DILocation(line: 553, column: 8, scope: !7289)
!7291 = !DILocation(line: 0, scope: !7289)
!7292 = !DILocation(line: 553, column: 15, scope: !7288)
!7293 = !DILocation(line: 553, column: 3, scope: !7289)
!7294 = !DILocation(line: 554, column: 28, scope: !7288)
!7295 = !DILocation(line: 554, column: 5, scope: !7288)
!7296 = !DILocation(line: 553, column: 61, scope: !7288)
!7297 = !DILocation(line: 553, column: 3, scope: !7288)
!7298 = distinct !{!7298, !7293, !7299}
!7299 = !DILocation(line: 554, column: 31, scope: !7289)
!7300 = !DILocation(line: 556, column: 1, scope: !7277)
!7301 = !DILocation(line: 555, column: 3, scope: !7277)
!7302 = distinct !DISubprogram(name: "first_htab_element", scope: !4621, file: !4621, line: 58, type: !7303, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7306)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!675, !7305, !1444}
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 64)
!7306 = !{!7307, !7308, !7309}
!7307 = !DILocalVariable(name: "hti", arg: 1, scope: !7302, file: !4621, line: 58, type: !7305)
!7308 = !DILocalVariable(name: "table", arg: 2, scope: !7302, file: !4621, line: 58, type: !1444)
!7309 = !DILocalVariable(name: "x", scope: !7310, file: !4621, line: 65, type: !675)
!7310 = distinct !DILexicalBlock(scope: !7302, file: !4621, line: 64, column: 5)
!7311 = !DILocation(line: 0, scope: !7302)
!7312 = !DILocation(line: 60, column: 8, scope: !7302)
!7313 = !DILocation(line: 60, column: 13, scope: !7302)
!7314 = !DILocation(line: 61, column: 22, scope: !7302)
!7315 = !DILocation(line: 61, column: 8, scope: !7302)
!7316 = !DILocation(line: 61, column: 13, scope: !7302)
!7317 = !DILocation(line: 62, column: 21, scope: !7302)
!7318 = !DILocation(line: 62, column: 28, scope: !7302)
!7319 = !DILocation(line: 62, column: 26, scope: !7302)
!7320 = !DILocation(line: 62, column: 8, scope: !7302)
!7321 = !DILocation(line: 62, column: 14, scope: !7302)
!7322 = !DILocation(line: 65, column: 22, scope: !7310)
!7323 = !DILocation(line: 63, column: 3, scope: !7302)
!7324 = !DILocation(line: 65, column: 15, scope: !7310)
!7325 = !DILocation(line: 66, column: 33, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7310, file: !4621, line: 66, column: 11)
!7327 = !DILocation(line: 68, column: 14, scope: !7302)
!7328 = !DILocation(line: 68, column: 28, scope: !7302)
!7329 = !DILocation(line: 68, column: 5, scope: !7310)
!7330 = distinct !{!7330, !7323, !7331}
!7331 = !DILocation(line: 68, column: 40, scope: !7302)
!7332 = !DILocation(line: 70, column: 12, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7302, file: !4621, line: 70, column: 7)
!7334 = !DILocation(line: 70, column: 17, scope: !7333)
!7335 = !DILocation(line: 70, column: 7, scope: !7302)
!7336 = !DILocation(line: 71, column: 12, scope: !7333)
!7337 = !DILocation(line: 71, column: 5, scope: !7333)
!7338 = !DILocation(line: 73, column: 1, scope: !7302)
!7339 = distinct !DISubprogram(name: "end_htab_p", scope: !4621, file: !4621, line: 79, type: !7340, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7344)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!670, !7342}
!7342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7343, size: 64)
!7343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7172)
!7344 = !{!7345}
!7345 = !DILocalVariable(name: "hti", arg: 1, scope: !7339, file: !4621, line: 79, type: !7342)
!7346 = !DILocation(line: 0, scope: !7339)
!7347 = !DILocation(line: 81, column: 12, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7339, file: !4621, line: 81, column: 7)
!7349 = !DILocation(line: 81, column: 25, scope: !7348)
!7350 = !DILocation(line: 81, column: 17, scope: !7348)
!7351 = !DILocation(line: 84, column: 1, scope: !7339)
!7352 = distinct !DISubprogram(name: "next_htab_element", scope: !4621, file: !4621, line: 90, type: !7353, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7355)
!7353 = !DISubroutineType(types: !7354)
!7354 = !{!675, !7305}
!7355 = !{!7356, !7357}
!7356 = !DILocalVariable(name: "hti", arg: 1, scope: !7352, file: !4621, line: 90, type: !7305)
!7357 = !DILocalVariable(name: "x", scope: !7358, file: !4621, line: 94, type: !675)
!7358 = distinct !DILexicalBlock(scope: !7352, file: !4621, line: 93, column: 5)
!7359 = !DILocation(line: 0, scope: !7352)
!7360 = !DILocation(line: 94, column: 22, scope: !7358)
!7361 = !DILocation(line: 92, column: 10, scope: !7352)
!7362 = !DILocation(line: 92, column: 31, scope: !7352)
!7363 = !DILocation(line: 92, column: 3, scope: !7352)
!7364 = !DILocation(line: 92, column: 24, scope: !7352)
!7365 = !DILocation(line: 94, column: 15, scope: !7358)
!7366 = !DILocation(line: 0, scope: !7358)
!7367 = !DILocation(line: 95, column: 33, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7358, file: !4621, line: 95, column: 11)
!7369 = distinct !{!7369, !7363, !7370}
!7370 = !DILocation(line: 97, column: 5, scope: !7352)
!7371 = !DILocation(line: 99, column: 1, scope: !7352)
!7372 = distinct !DISubprogram(name: "finalize_var_creation", scope: !3, file: !3, line: 514, type: !3343, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7373)
!7373 = !{!7374}
!7374 = !DILocalVariable(name: "new_decl", arg: 1, scope: !7372, file: !3, line: 514, type: !690)
!7375 = !DILocation(line: 0, scope: !7372)
!7376 = !DILocation(line: 516, column: 3, scope: !7372)
!7377 = !DILocation(line: 517, column: 3, scope: !7372)
!7378 = !DILocation(line: 518, column: 1, scope: !7372)
!7379 = distinct !DISubprogram(name: "create_new_alloc_sites", scope: !3, file: !3, line: 2162, type: !7380, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7382)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{null, !2046, !690}
!7382 = !{!7383, !7384, !7385, !7386, !7387, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7400, !7404}
!7383 = !DILocalVariable(name: "m_data", arg: 1, scope: !7379, file: !3, line: 2162, type: !2046)
!7384 = !DILocalVariable(name: "context", arg: 2, scope: !7379, file: !3, line: 2162, type: !690)
!7385 = !DILocalVariable(name: "call", scope: !7379, file: !3, line: 2164, type: !4207)
!7386 = !DILocalVariable(name: "j", scope: !7379, file: !3, line: 2165, type: !7)
!7387 = !DILocalVariable(name: "stmt", scope: !7388, file: !3, line: 2169, type: !1014)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 2168, column: 5)
!7389 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 2167, column: 3)
!7390 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2167, column: 3)
!7391 = !DILocalVariable(name: "str", scope: !7388, file: !3, line: 2170, type: !2069)
!7392 = !DILocalVariable(name: "num", scope: !7388, file: !3, line: 2171, type: !690)
!7393 = !DILocalVariable(name: "new_stmts", scope: !7388, file: !3, line: 2172, type: !1004)
!7394 = !DILocalVariable(name: "last_stmt", scope: !7388, file: !3, line: 2173, type: !1014)
!7395 = !DILocalVariable(name: "i", scope: !7388, file: !3, line: 2174, type: !7)
!7396 = !DILocalVariable(name: "type", scope: !7388, file: !3, line: 2175, type: !690)
!7397 = !DILocalVariable(name: "last_stmt_tmp", scope: !7398, file: !3, line: 2180, type: !1014)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2179, column: 2)
!7399 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2178, column: 11)
!7400 = !DILocalVariable(name: "new_malloc_stmt", scope: !7401, file: !3, line: 2188, type: !1014)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 2187, column: 2)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2186, column: 7)
!7403 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2186, column: 7)
!7404 = !DILocalVariable(name: "last_stmt_tmp", scope: !7401, file: !3, line: 2189, type: !1014)
!7405 = !DILocation(line: 0, scope: !7379)
!7406 = !DILocation(line: 2164, column: 3, scope: !7379)
!7407 = !DILocation(line: 0, scope: !7389)
!7408 = !DILocation(line: 0, scope: !7388)
!7409 = !DILocation(line: 2167, column: 8, scope: !7390)
!7410 = !DILocation(line: 0, scope: !7390)
!7411 = !DILocation(line: 2167, column: 15, scope: !7389)
!7412 = !DILocation(line: 2167, column: 3, scope: !7390)
!7413 = !DILocation(line: 2169, column: 21, scope: !7388)
!7414 = !DILocation(line: 2169, column: 27, scope: !7388)
!7415 = !DILocation(line: 2170, column: 25, scope: !7388)
!7416 = !DILocation(line: 2172, column: 7, scope: !7388)
!7417 = !DILocation(line: 2172, column: 18, scope: !7388)
!7418 = !DILocation(line: 2173, column: 26, scope: !7388)
!7419 = !DILocation(line: 2175, column: 7, scope: !7388)
!7420 = !DILocation(line: 2177, column: 54, scope: !7388)
!7421 = !DILocation(line: 2177, column: 13, scope: !7388)
!7422 = !DILocation(line: 2178, column: 11, scope: !7399)
!7423 = !DILocation(line: 2178, column: 11, scope: !7388)
!7424 = !DILocation(line: 2180, column: 27, scope: !7398)
!7425 = !DILocation(line: 0, scope: !7398)
!7426 = !DILocation(line: 2181, column: 38, scope: !7398)
!7427 = !DILocation(line: 2181, column: 4, scope: !7398)
!7428 = !DILocation(line: 2183, column: 2, scope: !7398)
!7429 = !DILocation(line: 0, scope: !7402)
!7430 = !DILocation(line: 2186, column: 12, scope: !7403)
!7431 = !DILocation(line: 0, scope: !7403)
!7432 = !DILocation(line: 2186, column: 19, scope: !7402)
!7433 = !DILocation(line: 2186, column: 7, scope: !7403)
!7434 = !DILocation(line: 0, scope: !7401)
!7435 = !DILocation(line: 2191, column: 14, scope: !7401)
!7436 = !DILocation(line: 2192, column: 47, scope: !7401)
!7437 = !DILocation(line: 2192, column: 22, scope: !7401)
!7438 = !DILocation(line: 2193, column: 42, scope: !7401)
!7439 = !DILocation(line: 2193, column: 20, scope: !7401)
!7440 = !DILocation(line: 2194, column: 38, scope: !7401)
!7441 = !DILocation(line: 2194, column: 4, scope: !7401)
!7442 = !DILocation(line: 2195, column: 4, scope: !7401)
!7443 = !DILocation(line: 2186, column: 65, scope: !7402)
!7444 = !DILocation(line: 2186, column: 7, scope: !7402)
!7445 = distinct !{!7445, !7433, !7446}
!7446 = !DILocation(line: 2197, column: 2, scope: !7403)
!7447 = !DILocation(line: 2198, column: 5, scope: !7389)
!7448 = !DILocation(line: 2167, column: 69, scope: !7389)
!7449 = !DILocation(line: 2167, column: 3, scope: !7389)
!7450 = distinct !{!7450, !7412, !7451}
!7451 = !DILocation(line: 2198, column: 5, scope: !7390)
!7452 = !DILocation(line: 2199, column: 1, scope: !7379)
!7453 = distinct !DISubprogram(name: "gen_num_of_structs_in_malloc", scope: !3, file: !3, line: 1792, type: !7454, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7457)
!7454 = !DISubroutineType(types: !7455)
!7455 = !{!690, !1014, !690, !7456}
!7456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!7457 = !{!7458, !7459, !7460, !7461, !7462, !7463, !7464, !7467, !7468}
!7458 = !DILocalVariable(name: "stmt", arg: 1, scope: !7453, file: !3, line: 1792, type: !1014)
!7459 = !DILocalVariable(name: "str_decl", arg: 2, scope: !7453, file: !3, line: 1792, type: !690)
!7460 = !DILocalVariable(name: "new_stmts_p", arg: 3, scope: !7453, file: !3, line: 1793, type: !7456)
!7461 = !DILocalVariable(name: "arg", scope: !7453, file: !3, line: 1795, type: !690)
!7462 = !DILocalVariable(name: "struct_size", scope: !7453, file: !3, line: 1796, type: !690)
!7463 = !DILocalVariable(name: "struct_size_int", scope: !7453, file: !3, line: 1797, type: !746)
!7464 = !DILocalVariable(name: "num", scope: !7465, file: !3, line: 1819, type: !690)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 1818, column: 5)
!7466 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1817, column: 7)
!7467 = !DILocalVariable(name: "div_stmt", scope: !7465, file: !3, line: 1820, type: !1014)
!7468 = !DILocalVariable(name: "C", scope: !7469, file: !3, line: 1835, type: !690)
!7469 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 1834, column: 2)
!7470 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1830, column: 11)
!7471 = !DILocation(line: 0, scope: !7453)
!7472 = !DILocation(line: 1799, column: 8, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1799, column: 7)
!7474 = !DILocation(line: 1799, column: 7, scope: !7453)
!7475 = !DILocation(line: 1803, column: 8, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1803, column: 7)
!7477 = !DILocation(line: 1803, column: 7, scope: !7453)
!7478 = !DILocation(line: 1806, column: 9, scope: !7453)
!7479 = !DILocation(line: 1808, column: 7, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1808, column: 7)
!7481 = !DILocation(line: 1808, column: 23, scope: !7480)
!7482 = !DILocation(line: 1809, column: 7, scope: !7480)
!7483 = !DILocation(line: 1809, column: 11, scope: !7480)
!7484 = !DILocation(line: 1808, column: 7, scope: !7453)
!7485 = !DILocation(line: 1812, column: 17, scope: !7453)
!7486 = !DILocation(line: 1813, column: 21, scope: !7453)
!7487 = !DILocation(line: 1815, column: 3, scope: !7453)
!7488 = !DILocation(line: 1817, column: 7, scope: !7466)
!7489 = !DILocation(line: 1817, column: 23, scope: !7466)
!7490 = !DILocation(line: 1817, column: 7, scope: !7453)
!7491 = !DILocation(line: 1819, column: 7, scope: !7465)
!7492 = !DILocation(line: 0, scope: !7465)
!7493 = !DILocation(line: 1822, column: 11, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1822, column: 11)
!7495 = !DILocation(line: 1822, column: 11, scope: !7465)
!7496 = !DILocation(line: 1823, column: 4, scope: !7494)
!7497 = !DILocation(line: 1825, column: 29, scope: !7465)
!7498 = !DILocation(line: 1825, column: 13, scope: !7465)
!7499 = !DILocation(line: 1825, column: 11, scope: !7465)
!7500 = !DILocation(line: 1827, column: 11, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1827, column: 11)
!7502 = !DILocation(line: 1827, column: 11, scope: !7465)
!7503 = !DILocation(line: 1828, column: 2, scope: !7501)
!7504 = !DILocation(line: 1830, column: 11, scope: !7470)
!7505 = !DILocation(line: 1830, column: 40, scope: !7470)
!7506 = !DILocation(line: 1830, column: 11, scope: !7465)
!7507 = !DILocation(line: 1831, column: 13, scope: !7470)
!7508 = !DILocation(line: 1831, column: 2, scope: !7470)
!7509 = !DILocation(line: 1835, column: 29, scope: !7469)
!7510 = !DILocation(line: 1836, column: 8, scope: !7469)
!7511 = !DILocation(line: 1835, column: 14, scope: !7469)
!7512 = !DILocation(line: 0, scope: !7469)
!7513 = !DILocation(line: 1838, column: 15, scope: !7469)
!7514 = !DILocation(line: 0, scope: !7470)
!7515 = !DILocation(line: 1840, column: 7, scope: !7465)
!7516 = !DILocation(line: 1841, column: 7, scope: !7465)
!7517 = !DILocation(line: 1842, column: 7, scope: !7465)
!7518 = !DILocation(line: 1843, column: 5, scope: !7466)
!7519 = !DILocation(line: 1845, column: 7, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 1845, column: 7)
!7521 = !DILocation(line: 1846, column: 7, scope: !7520)
!7522 = !DILocation(line: 1846, column: 25, scope: !7520)
!7523 = !DILocation(line: 1846, column: 10, scope: !7520)
!7524 = !DILocation(line: 1845, column: 7, scope: !7453)
!7525 = !DILocation(line: 1847, column: 12, scope: !7520)
!7526 = !DILocation(line: 1847, column: 5, scope: !7520)
!7527 = !DILocation(line: 1850, column: 1, scope: !7453)
!7528 = distinct !DISubprogram(name: "gimple_seq_last_stmt", scope: !584, file: !584, line: 187, type: !7529, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7531)
!7529 = !DISubroutineType(types: !7530)
!7530 = !{!1014, !5131}
!7531 = !{!7532, !7533}
!7532 = !DILocalVariable(name: "s", arg: 1, scope: !7528, file: !584, line: 187, type: !5131)
!7533 = !DILocalVariable(name: "n", scope: !7528, file: !584, line: 189, type: !1009)
!7534 = !DILocation(line: 0, scope: !7528)
!7535 = !DILocation(line: 189, column: 23, scope: !7528)
!7536 = !DILocation(line: 190, column: 10, scope: !7528)
!7537 = !DILocation(line: 190, column: 19, scope: !7528)
!7538 = !DILocation(line: 190, column: 3, scope: !7528)
!7539 = distinct !DISubprogram(name: "insert_seq_after_stmt", scope: !3, file: !3, line: 705, type: !7540, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{null, !1014, !1004}
!7542 = !{!7543, !7544, !7545}
!7543 = !DILocalVariable(name: "stmt", arg: 1, scope: !7539, file: !3, line: 705, type: !1014)
!7544 = !DILocalVariable(name: "new_stmts", arg: 2, scope: !7539, file: !3, line: 705, type: !1004)
!7545 = !DILocalVariable(name: "bsi", scope: !7539, file: !3, line: 707, type: !2088)
!7546 = !DILocation(line: 0, scope: !7539)
!7547 = !DILocation(line: 707, column: 3, scope: !7539)
!7548 = !DILocation(line: 709, column: 8, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 709, column: 7)
!7550 = !DILocation(line: 709, column: 17, scope: !7549)
!7551 = !DILocation(line: 709, column: 13, scope: !7549)
!7552 = !DILocation(line: 712, column: 9, scope: !7539)
!7553 = !DILocation(line: 713, column: 3, scope: !7539)
!7554 = !DILocation(line: 714, column: 1, scope: !7539)
!7555 = distinct !DISubprogram(name: "create_new_malloc", scope: !3, file: !3, line: 1750, type: !7556, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7558)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!1014, !1014, !690, !7456, !690}
!7558 = !{!7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569}
!7559 = !DILocalVariable(name: "malloc_stmt", arg: 1, scope: !7555, file: !3, line: 1750, type: !1014)
!7560 = !DILocalVariable(name: "new_type", arg: 2, scope: !7555, file: !3, line: 1750, type: !690)
!7561 = !DILocalVariable(name: "new_stmts", arg: 3, scope: !7555, file: !3, line: 1750, type: !7456)
!7562 = !DILocalVariable(name: "num", arg: 4, scope: !7555, file: !3, line: 1751, type: !690)
!7563 = !DILocalVariable(name: "new_malloc_size", scope: !7555, file: !3, line: 1753, type: !690)
!7564 = !DILocalVariable(name: "malloc_fn_decl", scope: !7555, file: !3, line: 1754, type: !690)
!7565 = !DILocalVariable(name: "new_stmt", scope: !7555, file: !3, line: 1755, type: !1014)
!7566 = !DILocalVariable(name: "malloc_res", scope: !7555, file: !3, line: 1756, type: !690)
!7567 = !DILocalVariable(name: "call_stmt", scope: !7555, file: !3, line: 1757, type: !1014)
!7568 = !DILocalVariable(name: "final_stmt", scope: !7555, file: !3, line: 1757, type: !1014)
!7569 = !DILocalVariable(name: "cast_res", scope: !7555, file: !3, line: 1758, type: !690)
!7570 = !DILocation(line: 0, scope: !7555)
!7571 = !DILocation(line: 1753, column: 3, scope: !7555)
!7572 = !DILocation(line: 1758, column: 3, scope: !7555)
!7573 = !DILocation(line: 1760, column: 3, scope: !7555)
!7574 = !DILocation(line: 1761, column: 16, scope: !7555)
!7575 = !DILocation(line: 1761, column: 14, scope: !7555)
!7576 = !DILocation(line: 1765, column: 14, scope: !7555)
!7577 = !DILocation(line: 1766, column: 3, scope: !7555)
!7578 = !DILocation(line: 1769, column: 32, scope: !7555)
!7579 = !DILocation(line: 1769, column: 16, scope: !7555)
!7580 = !DILocation(line: 1770, column: 3, scope: !7555)
!7581 = !DILocation(line: 1772, column: 20, scope: !7555)
!7582 = !DILocation(line: 1773, column: 53, scope: !7555)
!7583 = !DILocation(line: 1773, column: 15, scope: !7555)
!7584 = !DILocation(line: 1774, column: 3, scope: !7555)
!7585 = !DILocation(line: 1775, column: 3, scope: !7555)
!7586 = !DILocation(line: 1778, column: 16, scope: !7555)
!7587 = !DILocation(line: 1779, column: 3, scope: !7555)
!7588 = !DILocation(line: 1780, column: 14, scope: !7555)
!7589 = !DILocation(line: 1781, column: 3, scope: !7555)
!7590 = !DILocation(line: 1784, column: 1, scope: !7555)
!7591 = !DILocation(line: 1783, column: 3, scope: !7555)
!7592 = distinct !DISubprogram(name: "update_cgraph_with_malloc_call", scope: !3, file: !3, line: 1725, type: !7593, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7595)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{null, !1014, !690}
!7595 = !{!7596, !7597, !7598, !7599, !7600}
!7596 = !DILocalVariable(name: "malloc_stmt", arg: 1, scope: !7592, file: !3, line: 1725, type: !1014)
!7597 = !DILocalVariable(name: "context", arg: 2, scope: !7592, file: !3, line: 1725, type: !690)
!7598 = !DILocalVariable(name: "src", scope: !7592, file: !3, line: 1727, type: !2686)
!7599 = !DILocalVariable(name: "dest", scope: !7592, file: !3, line: 1727, type: !2686)
!7600 = !DILocalVariable(name: "malloc_fn_decl", scope: !7592, file: !3, line: 1728, type: !690)
!7601 = !DILocation(line: 0, scope: !7592)
!7602 = !DILocation(line: 1730, column: 8, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 1730, column: 7)
!7604 = !DILocation(line: 1730, column: 7, scope: !7592)
!7605 = !DILocation(line: 1733, column: 20, scope: !7592)
!7606 = !DILocation(line: 1735, column: 9, scope: !7592)
!7607 = !DILocation(line: 1736, column: 10, scope: !7592)
!7608 = !DILocation(line: 1738, column: 9, scope: !7592)
!7609 = !DILocation(line: 1738, column: 34, scope: !7592)
!7610 = !DILocation(line: 1740, column: 21, scope: !7592)
!7611 = !DILocation(line: 1739, column: 9, scope: !7592)
!7612 = !DILocation(line: 1741, column: 9, scope: !7592)
!7613 = !DILocation(line: 1741, column: 34, scope: !7592)
!7614 = !DILocation(line: 1737, column: 3, scope: !7592)
!7615 = !DILocation(line: 1742, column: 1, scope: !7592)
!7616 = distinct !DISubprogram(name: "gimple_call_arg", scope: !584, file: !584, line: 2025, type: !4532, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7617)
!7617 = !{!7618, !7619}
!7618 = !DILocalVariable(name: "gs", arg: 1, scope: !7616, file: !584, line: 2025, type: !2036)
!7619 = !DILocalVariable(name: "index", arg: 2, scope: !7616, file: !584, line: 2025, type: !7)
!7620 = !DILocation(line: 0, scope: !7616)
!7621 = !DILocation(line: 2028, column: 10, scope: !7616)
!7622 = !DILocation(line: 2028, column: 3, scope: !7616)
!7623 = distinct !DISubprogram(name: "finalize_stmt", scope: !3, file: !3, line: 236, type: !7624, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7626)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{null, !1014}
!7626 = !{!7627}
!7627 = !DILocalVariable(name: "stmt", arg: 1, scope: !7623, file: !3, line: 236, type: !1014)
!7628 = !DILocation(line: 0, scope: !7623)
!7629 = !DILocation(line: 238, column: 3, scope: !7623)
!7630 = !DILocation(line: 239, column: 3, scope: !7623)
!7631 = !DILocation(line: 240, column: 1, scope: !7623)
!7632 = distinct !DISubprogram(name: "update_stmt", scope: !584, file: !584, line: 1456, type: !7624, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7633)
!7633 = !{!7634}
!7634 = !DILocalVariable(name: "s", arg: 1, scope: !7632, file: !584, line: 1456, type: !1014)
!7635 = !DILocation(line: 0, scope: !7632)
!7636 = !DILocation(line: 1458, column: 7, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !584, line: 1458, column: 7)
!7638 = !DILocation(line: 1458, column: 7, scope: !7632)
!7639 = !DILocation(line: 1460, column: 7, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7637, file: !584, line: 1459, column: 5)
!7641 = !DILocation(line: 1461, column: 7, scope: !7640)
!7642 = !DILocation(line: 1462, column: 5, scope: !7640)
!7643 = !DILocation(line: 1463, column: 1, scope: !7632)
!7644 = distinct !DISubprogram(name: "gimple_seq_last", scope: !584, file: !584, line: 178, type: !5129, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7645)
!7645 = !{!7646}
!7646 = !DILocalVariable(name: "s", arg: 1, scope: !7644, file: !584, line: 178, type: !5131)
!7647 = !DILocation(line: 0, scope: !7644)
!7648 = !DILocation(line: 180, column: 10, scope: !7644)
!7649 = !DILocation(line: 180, column: 17, scope: !7644)
!7650 = !DILocation(line: 180, column: 3, scope: !7644)
!7651 = distinct !DISubprogram(name: "gen_size", scope: !3, file: !3, line: 614, type: !7652, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7654)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{!1014, !690, !690, !1048}
!7654 = !{!7655, !7656, !7657, !7658, !7659, !7660, !7661, !7664}
!7655 = !DILocalVariable(name: "num", arg: 1, scope: !7651, file: !3, line: 614, type: !690)
!7656 = !DILocalVariable(name: "type", arg: 2, scope: !7651, file: !3, line: 614, type: !690)
!7657 = !DILocalVariable(name: "res", arg: 3, scope: !7651, file: !3, line: 614, type: !1048)
!7658 = !DILocalVariable(name: "struct_size", scope: !7651, file: !3, line: 616, type: !690)
!7659 = !DILocalVariable(name: "struct_size_int", scope: !7651, file: !3, line: 617, type: !746)
!7660 = !DILocalVariable(name: "new_stmt", scope: !7651, file: !3, line: 618, type: !1014)
!7661 = !DILocalVariable(name: "size", scope: !7662, file: !3, line: 627, type: !690)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 626, column: 5)
!7663 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 625, column: 7)
!7664 = !DILocalVariable(name: "C", scope: !7665, file: !3, line: 634, type: !690)
!7665 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 633, column: 5)
!7666 = !DILocation(line: 0, scope: !7651)
!7667 = !DILocation(line: 616, column: 22, scope: !7651)
!7668 = !DILocation(line: 617, column: 35, scope: !7651)
!7669 = !DILocation(line: 620, column: 26, scope: !7651)
!7670 = !DILocation(line: 620, column: 10, scope: !7651)
!7671 = !DILocation(line: 620, column: 8, scope: !7651)
!7672 = !DILocation(line: 622, column: 7, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 622, column: 7)
!7674 = !DILocation(line: 622, column: 7, scope: !7651)
!7675 = !DILocation(line: 623, column: 5, scope: !7673)
!7676 = !DILocation(line: 625, column: 7, scope: !7663)
!7677 = !DILocation(line: 625, column: 36, scope: !7663)
!7678 = !DILocation(line: 0, scope: !7663)
!7679 = !DILocation(line: 625, column: 7, scope: !7651)
!7680 = !DILocation(line: 627, column: 19, scope: !7662)
!7681 = !DILocation(line: 0, scope: !7662)
!7682 = !DILocation(line: 628, column: 18, scope: !7662)
!7683 = !DILocation(line: 631, column: 5, scope: !7662)
!7684 = !DILocation(line: 634, column: 48, scope: !7665)
!7685 = !DILocation(line: 634, column: 16, scope: !7665)
!7686 = !DILocation(line: 0, scope: !7665)
!7687 = !DILocation(line: 636, column: 18, scope: !7665)
!7688 = !DILocation(line: 641, column: 3, scope: !7651)
!7689 = !DILocation(line: 642, column: 3, scope: !7651)
!7690 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !584, file: !584, line: 1898, type: !7593, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7691)
!7691 = !{!7692, !7693}
!7692 = !DILocalVariable(name: "gs", arg: 1, scope: !7690, file: !584, line: 1898, type: !1014)
!7693 = !DILocalVariable(name: "lhs", arg: 2, scope: !7690, file: !584, line: 1898, type: !690)
!7694 = !DILocation(line: 0, scope: !7690)
!7695 = !DILocation(line: 1901, column: 3, scope: !7690)
!7696 = !DILocation(line: 1902, column: 7, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7690, file: !584, line: 1902, column: 7)
!7698 = !DILocation(line: 1902, column: 11, scope: !7697)
!7699 = !DILocation(line: 1902, column: 14, scope: !7697)
!7700 = !DILocation(line: 1902, column: 30, scope: !7697)
!7701 = !DILocation(line: 1902, column: 7, scope: !7690)
!7702 = !DILocation(line: 1903, column: 5, scope: !7697)
!7703 = !DILocation(line: 1903, column: 29, scope: !7697)
!7704 = !DILocation(line: 1904, column: 1, scope: !7690)
!7705 = distinct !DISubprogram(name: "finalize_stmt_and_append", scope: !3, file: !3, line: 245, type: !7706, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7708)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{null, !7456, !1014}
!7708 = !{!7709, !7710}
!7709 = !DILocalVariable(name: "stmts", arg: 1, scope: !7705, file: !3, line: 245, type: !7456)
!7710 = !DILocalVariable(name: "stmt", arg: 2, scope: !7705, file: !3, line: 245, type: !1014)
!7711 = !DILocation(line: 0, scope: !7705)
!7712 = !DILocation(line: 247, column: 3, scope: !7705)
!7713 = !DILocation(line: 248, column: 3, scope: !7705)
!7714 = !DILocation(line: 249, column: 1, scope: !7705)
!7715 = distinct !DISubprogram(name: "gen_cast_stmt", scope: !3, file: !3, line: 650, type: !7716, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!1014, !690, !690, !1014, !1048}
!7718 = !{!7719, !7720, !7721, !7722, !7723, !7724, !7725}
!7719 = !DILocalVariable(name: "before_cast", arg: 1, scope: !7715, file: !3, line: 650, type: !690)
!7720 = !DILocalVariable(name: "new_type", arg: 2, scope: !7715, file: !3, line: 650, type: !690)
!7721 = !DILocalVariable(name: "orig_cast_stmt", arg: 3, scope: !7715, file: !3, line: 650, type: !1014)
!7722 = !DILocalVariable(name: "res_p", arg: 4, scope: !7715, file: !3, line: 651, type: !1048)
!7723 = !DILocalVariable(name: "lhs", scope: !7715, file: !3, line: 653, type: !690)
!7724 = !DILocalVariable(name: "new_lhs", scope: !7715, file: !3, line: 653, type: !690)
!7725 = !DILocalVariable(name: "new_stmt", scope: !7715, file: !3, line: 654, type: !1014)
!7726 = !DILocation(line: 0, scope: !7715)
!7727 = !DILocation(line: 656, column: 9, scope: !7715)
!7728 = !DILocation(line: 657, column: 13, scope: !7715)
!7729 = !DILocation(line: 658, column: 3, scope: !7715)
!7730 = !DILocation(line: 660, column: 14, scope: !7715)
!7731 = !DILocation(line: 661, column: 3, scope: !7715)
!7732 = !DILocation(line: 662, column: 10, scope: !7715)
!7733 = !DILocation(line: 663, column: 3, scope: !7715)
!7734 = distinct !DISubprogram(name: "gimple_set_op", scope: !584, file: !584, line: 1663, type: !7735, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{null, !1014, !7, !690}
!7737 = !{!7738, !7739, !7740}
!7738 = !DILocalVariable(name: "gs", arg: 1, scope: !7734, file: !584, line: 1663, type: !1014)
!7739 = !DILocalVariable(name: "i", arg: 2, scope: !7734, file: !584, line: 1663, type: !7)
!7740 = !DILocalVariable(name: "op", arg: 3, scope: !7734, file: !584, line: 1663, type: !690)
!7741 = !DILocation(line: 0, scope: !7734)
!7742 = !DILocation(line: 1665, column: 3, scope: !7734)
!7743 = !DILocation(line: 1671, column: 3, scope: !7734)
!7744 = !DILocation(line: 1671, column: 22, scope: !7734)
!7745 = !DILocation(line: 1672, column: 1, scope: !7734)
!7746 = distinct !DISubprogram(name: "find_new_var_of_type", scope: !3, file: !3, line: 594, type: !5271, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7747)
!7747 = !{!7748, !7749, !7750}
!7748 = !DILocalVariable(name: "orig_var", arg: 1, scope: !7746, file: !3, line: 594, type: !690)
!7749 = !DILocalVariable(name: "new_type", arg: 2, scope: !7746, file: !3, line: 594, type: !690)
!7750 = !DILocalVariable(name: "var", scope: !7746, file: !3, line: 596, type: !2120)
!7751 = !DILocation(line: 0, scope: !7746)
!7752 = !DILocation(line: 597, column: 3, scope: !7746)
!7753 = !DILocation(line: 599, column: 7, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 599, column: 7)
!7755 = !DILocation(line: 599, column: 28, scope: !7754)
!7756 = !DILocation(line: 599, column: 7, scope: !7746)
!7757 = !DILocation(line: 600, column: 16, scope: !7754)
!7758 = !DILocation(line: 600, column: 5, scope: !7754)
!7759 = !DILocation(line: 602, column: 40, scope: !7746)
!7760 = !DILocation(line: 602, column: 9, scope: !7746)
!7761 = !DILocation(line: 603, column: 8, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 603, column: 7)
!7763 = !DILocation(line: 603, column: 7, scope: !7746)
!7764 = !DILocation(line: 604, column: 42, scope: !7762)
!7765 = !DILocation(line: 604, column: 11, scope: !7762)
!7766 = !DILocation(line: 604, column: 5, scope: !7762)
!7767 = !DILocation(line: 605, column: 3, scope: !7746)
!7768 = !DILocation(line: 606, column: 10, scope: !7746)
!7769 = !DILocation(line: 606, column: 3, scope: !7746)
!7770 = distinct !DISubprogram(name: "find_var_in_new_vars_vec", scope: !3, file: !3, line: 562, type: !7771, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!690, !2120, !690}
!7773 = !{!7774, !7775, !7776, !7777, !7778}
!7774 = !DILocalVariable(name: "var", arg: 1, scope: !7770, file: !3, line: 562, type: !2120)
!7775 = !DILocalVariable(name: "new_type", arg: 2, scope: !7770, file: !3, line: 562, type: !690)
!7776 = !DILocalVariable(name: "n_var", scope: !7770, file: !3, line: 564, type: !690)
!7777 = !DILocalVariable(name: "i", scope: !7770, file: !3, line: 565, type: !7)
!7778 = !DILocalVariable(name: "type", scope: !7779, file: !3, line: 569, type: !690)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 568, column: 5)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 567, column: 3)
!7781 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 567, column: 3)
!7782 = !DILocation(line: 0, scope: !7770)
!7783 = !DILocation(line: 564, column: 3, scope: !7770)
!7784 = !DILocation(line: 0, scope: !7780)
!7785 = !DILocation(line: 567, column: 8, scope: !7781)
!7786 = !DILocation(line: 0, scope: !7781)
!7787 = !DILocation(line: 567, column: 15, scope: !7780)
!7788 = !DILocation(line: 567, column: 3, scope: !7781)
!7789 = !DILocation(line: 569, column: 47, scope: !7779)
!7790 = !DILocation(line: 569, column: 30, scope: !7779)
!7791 = !DILocation(line: 569, column: 19, scope: !7779)
!7792 = !DILocation(line: 0, scope: !7779)
!7793 = !DILocation(line: 570, column: 7, scope: !7779)
!7794 = !DILocation(line: 572, column: 16, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 572, column: 11)
!7796 = !DILocation(line: 572, column: 11, scope: !7779)
!7797 = !DILocation(line: 567, column: 61, scope: !7780)
!7798 = !DILocation(line: 567, column: 3, scope: !7780)
!7799 = distinct !{!7799, !7788, !7800}
!7800 = !DILocation(line: 574, column: 5, scope: !7781)
!7801 = !DILocation(line: 577, column: 1, scope: !7770)
!7802 = distinct !DISubprogram(name: "create_new_accesses_in_bb", scope: !3, file: !3, line: 2149, type: !4809, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7803)
!7803 = !{!7804, !7805, !7806}
!7804 = !DILocalVariable(name: "bb", arg: 1, scope: !7802, file: !3, line: 2149, type: !1412)
!7805 = !DILocalVariable(name: "str", scope: !7802, file: !3, line: 2151, type: !2069)
!7806 = !DILocalVariable(name: "i", scope: !7802, file: !3, line: 2152, type: !7)
!7807 = !DILocation(line: 0, scope: !7802)
!7808 = !DILocation(line: 2151, column: 3, scope: !7802)
!7809 = !DILocation(line: 2154, column: 8, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2154, column: 3)
!7811 = !DILocation(line: 0, scope: !7810)
!7812 = !DILocation(line: 2154, column: 15, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2154, column: 3)
!7814 = !DILocation(line: 2154, column: 3, scope: !7810)
!7815 = !DILocation(line: 2155, column: 33, scope: !7813)
!7816 = !DILocation(line: 2155, column: 5, scope: !7813)
!7817 = !DILocation(line: 2154, column: 61, scope: !7813)
!7818 = !DILocation(line: 2154, column: 3, scope: !7813)
!7819 = distinct !{!7819, !7814, !7820}
!7820 = !DILocation(line: 2155, column: 40, scope: !7810)
!7821 = !DILocation(line: 2156, column: 1, scope: !7802)
!7822 = distinct !DISubprogram(name: "create_new_accs_for_struct", scope: !3, file: !3, line: 1443, type: !7823, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7825)
!7823 = !DISubroutineType(types: !7824)
!7824 = !{null, !2069, !1412}
!7825 = !{!7826, !7827, !7828, !7829}
!7826 = !DILocalVariable(name: "str", arg: 1, scope: !7822, file: !3, line: 1443, type: !2069)
!7827 = !DILocalVariable(name: "bb", arg: 2, scope: !7822, file: !3, line: 1443, type: !1412)
!7828 = !DILocalVariable(name: "i", scope: !7822, file: !3, line: 1445, type: !671)
!7829 = !DILocalVariable(name: "dt", scope: !7822, file: !3, line: 1446, type: !2141)
!7830 = !DILocation(line: 0, scope: !7822)
!7831 = !DILocation(line: 1446, column: 3, scope: !7822)
!7832 = !DILocation(line: 1448, column: 6, scope: !7822)
!7833 = !DILocation(line: 1448, column: 10, scope: !7822)
!7834 = !DILocation(line: 1449, column: 6, scope: !7822)
!7835 = !DILocation(line: 1449, column: 9, scope: !7822)
!7836 = !DILocation(line: 1450, column: 6, scope: !7822)
!7837 = !DILocation(line: 1450, column: 18, scope: !7822)
!7838 = !DILocation(line: 0, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 1452, column: 3)
!7840 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 1452, column: 3)
!7841 = !DILocation(line: 0, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1456, column: 11)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1453, column: 5)
!7844 = !DILocation(line: 1452, column: 8, scope: !7840)
!7845 = !DILocation(line: 0, scope: !7840)
!7846 = !DILocation(line: 1452, column: 24, scope: !7839)
!7847 = !DILocation(line: 1452, column: 17, scope: !7839)
!7848 = !DILocation(line: 1452, column: 3, scope: !7840)
!7849 = !DILocation(line: 1454, column: 22, scope: !7843)
!7850 = !DILocation(line: 1456, column: 16, scope: !7842)
!7851 = !DILocation(line: 1456, column: 26, scope: !7842)
!7852 = !DILocation(line: 1456, column: 11, scope: !7842)
!7853 = !DILocation(line: 1456, column: 11, scope: !7843)
!7854 = !DILocation(line: 1457, column: 2, scope: !7842)
!7855 = !DILocation(line: 1452, column: 37, scope: !7839)
!7856 = !DILocation(line: 1452, column: 3, scope: !7839)
!7857 = distinct !{!7857, !7848, !7858}
!7858 = !DILocation(line: 1459, column: 5, scope: !7840)
!7859 = !DILocation(line: 1460, column: 12, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 1460, column: 7)
!7861 = !DILocation(line: 1460, column: 7, scope: !7860)
!7862 = !DILocation(line: 1460, column: 7, scope: !7822)
!7863 = !DILocation(line: 1461, column: 5, scope: !7860)
!7864 = !DILocation(line: 1462, column: 1, scope: !7822)
!7865 = distinct !DISubprogram(name: "create_new_field_acc", scope: !3, file: !3, line: 1427, type: !4199, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7866)
!7866 = !{!7867, !7868, !7869, !7870, !7871, !7872}
!7867 = !DILocalVariable(name: "slot", arg: 1, scope: !7865, file: !3, line: 1427, type: !1468)
!7868 = !DILocalVariable(name: "data", arg: 2, scope: !7865, file: !3, line: 1427, type: !675)
!7869 = !DILocalVariable(name: "f_acc", scope: !7865, file: !3, line: 1429, type: !2072)
!7870 = !DILocalVariable(name: "bb", scope: !7865, file: !3, line: 1430, type: !1412)
!7871 = !DILocalVariable(name: "str", scope: !7865, file: !3, line: 1431, type: !2069)
!7872 = !DILocalVariable(name: "i", scope: !7865, file: !3, line: 1432, type: !671)
!7873 = !DILocation(line: 0, scope: !7865)
!7874 = !DILocation(line: 1429, column: 37, scope: !7865)
!7875 = !DILocation(line: 1430, column: 54, scope: !7865)
!7876 = !DILocation(line: 1431, column: 49, scope: !7865)
!7877 = !DILocation(line: 1432, column: 45, scope: !7865)
!7878 = !DILocation(line: 1434, column: 25, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 1434, column: 7)
!7880 = !DILocation(line: 1434, column: 7, scope: !7879)
!7881 = !DILocation(line: 1434, column: 31, scope: !7879)
!7882 = !DILocation(line: 1434, column: 7, scope: !7865)
!7883 = !DILocation(line: 1435, column: 42, scope: !7879)
!7884 = !DILocation(line: 1435, column: 37, scope: !7879)
!7885 = !DILocation(line: 1435, column: 5, scope: !7879)
!7886 = !DILocation(line: 1436, column: 3, scope: !7865)
!7887 = distinct !DISubprogram(name: "create_new_acc", scope: !3, file: !3, line: 1412, type: !4199, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7888)
!7888 = !{!7889, !7890, !7891, !7892, !7893}
!7889 = !DILocalVariable(name: "slot", arg: 1, scope: !7887, file: !3, line: 1412, type: !1468)
!7890 = !DILocalVariable(name: "data", arg: 2, scope: !7887, file: !3, line: 1412, type: !675)
!7891 = !DILocalVariable(name: "acc", scope: !7887, file: !3, line: 1414, type: !2074)
!7892 = !DILocalVariable(name: "bb", scope: !7887, file: !3, line: 1415, type: !1412)
!7893 = !DILocalVariable(name: "str", scope: !7887, file: !3, line: 1416, type: !2069)
!7894 = !DILocation(line: 0, scope: !7887)
!7895 = !DILocation(line: 1414, column: 29, scope: !7887)
!7896 = !DILocation(line: 1415, column: 54, scope: !7887)
!7897 = !DILocation(line: 1416, column: 49, scope: !7887)
!7898 = !DILocation(line: 1418, column: 23, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 1418, column: 7)
!7900 = !DILocation(line: 1418, column: 7, scope: !7899)
!7901 = !DILocation(line: 1418, column: 29, scope: !7899)
!7902 = !DILocation(line: 1418, column: 7, scope: !7887)
!7903 = !DILocation(line: 1419, column: 5, scope: !7899)
!7904 = !DILocation(line: 1420, column: 3, scope: !7887)
!7905 = distinct !DISubprogram(name: "create_new_field_access", scope: !3, file: !3, line: 1135, type: !7906, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7908)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{null, !2072, !1998}
!7908 = !{!7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917}
!7909 = !DILocalVariable(name: "f_acc", arg: 1, scope: !7905, file: !3, line: 1135, type: !2072)
!7910 = !DILocalVariable(name: "field", arg: 2, scope: !7905, file: !3, line: 1136, type: !1998)
!7911 = !DILocalVariable(name: "new_type", scope: !7905, file: !3, line: 1138, type: !690)
!7912 = !DILocalVariable(name: "new_stmt", scope: !7905, file: !3, line: 1139, type: !1014)
!7913 = !DILocalVariable(name: "size_res", scope: !7905, file: !3, line: 1140, type: !690)
!7914 = !DILocalVariable(name: "mult_stmt", scope: !7905, file: !3, line: 1141, type: !1014)
!7915 = !DILocalVariable(name: "cast_stmt", scope: !7905, file: !3, line: 1142, type: !1014)
!7916 = !DILocalVariable(name: "cast_res", scope: !7905, file: !3, line: 1143, type: !690)
!7917 = !DILocalVariable(name: "offset", scope: !7918, file: !3, line: 1160, type: !690)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 1159, column: 5)
!7919 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1158, column: 7)
!7920 = !DILocation(line: 0, scope: !7905)
!7921 = !DILocation(line: 1136, column: 24, scope: !7905)
!7922 = !DILocation(line: 1138, column: 25, scope: !7905)
!7923 = !DILocation(line: 1140, column: 3, scope: !7905)
!7924 = !DILocation(line: 1143, column: 3, scope: !7905)
!7925 = !DILocation(line: 1143, column: 8, scope: !7905)
!7926 = !DILocation(line: 1145, column: 14, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1145, column: 7)
!7928 = !DILocation(line: 1145, column: 7, scope: !7927)
!7929 = !DILocation(line: 1145, column: 7, scope: !7905)
!7930 = !DILocation(line: 1147, column: 19, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 1146, column: 5)
!7932 = !DILocation(line: 1148, column: 34, scope: !7931)
!7933 = !DILocation(line: 1148, column: 7, scope: !7931)
!7934 = !DILocation(line: 1149, column: 5, scope: !7931)
!7935 = !DILocation(line: 1151, column: 14, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 1151, column: 7)
!7937 = !DILocation(line: 1151, column: 7, scope: !7936)
!7938 = !DILocation(line: 1151, column: 7, scope: !7905)
!7939 = !DILocation(line: 1153, column: 34, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 1152, column: 5)
!7941 = !DILocation(line: 1153, column: 19, scope: !7940)
!7942 = !DILocation(line: 1155, column: 33, scope: !7940)
!7943 = !DILocation(line: 1155, column: 7, scope: !7940)
!7944 = !DILocation(line: 1156, column: 5, scope: !7940)
!7945 = !DILocation(line: 1158, column: 14, scope: !7919)
!7946 = !DILocation(line: 1158, column: 7, scope: !7919)
!7947 = !DILocation(line: 1158, column: 7, scope: !7905)
!7948 = !DILocation(line: 1161, column: 11, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1161, column: 11)
!7950 = !DILocation(line: 1161, column: 11, scope: !7918)
!7951 = !DILocation(line: 0, scope: !7918)
!7952 = !DILocation(line: 1166, column: 18, scope: !7918)
!7953 = !DILocation(line: 1168, column: 33, scope: !7918)
!7954 = !DILocation(line: 1168, column: 7, scope: !7918)
!7955 = !DILocation(line: 1169, column: 5, scope: !7918)
!7956 = !DILocation(line: 1173, column: 3, scope: !7905)
!7957 = !DILocation(line: 1174, column: 1, scope: !7905)
!7958 = distinct !DISubprogram(name: "insert_before_stmt", scope: !3, file: !3, line: 691, type: !7959, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7961)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{null, !1014, !1014}
!7961 = !{!7962, !7963, !7964}
!7962 = !DILocalVariable(name: "stmt", arg: 1, scope: !7958, file: !3, line: 691, type: !1014)
!7963 = !DILocalVariable(name: "new_stmt", arg: 2, scope: !7958, file: !3, line: 691, type: !1014)
!7964 = !DILocalVariable(name: "bsi", scope: !7958, file: !3, line: 693, type: !2088)
!7965 = !DILocation(line: 0, scope: !7958)
!7966 = !DILocation(line: 693, column: 3, scope: !7958)
!7967 = !DILocation(line: 695, column: 8, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 695, column: 7)
!7969 = !DILocation(line: 695, column: 17, scope: !7968)
!7970 = !DILocation(line: 695, column: 13, scope: !7968)
!7971 = !DILocation(line: 698, column: 9, scope: !7958)
!7972 = !DILocation(line: 699, column: 3, scope: !7958)
!7973 = !DILocation(line: 700, column: 1, scope: !7958)
!7974 = distinct !DISubprogram(name: "insert_after_stmt", scope: !3, file: !3, line: 719, type: !7959, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7975)
!7975 = !{!7976, !7977, !7978}
!7976 = !DILocalVariable(name: "stmt", arg: 1, scope: !7974, file: !3, line: 719, type: !1014)
!7977 = !DILocalVariable(name: "new_stmt", arg: 2, scope: !7974, file: !3, line: 719, type: !1014)
!7978 = !DILocalVariable(name: "bsi", scope: !7974, file: !3, line: 721, type: !2088)
!7979 = !DILocation(line: 0, scope: !7974)
!7980 = !DILocation(line: 721, column: 3, scope: !7974)
!7981 = !DILocation(line: 723, column: 8, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 723, column: 7)
!7983 = !DILocation(line: 723, column: 17, scope: !7982)
!7984 = !DILocation(line: 723, column: 13, scope: !7982)
!7985 = !DILocation(line: 726, column: 9, scope: !7974)
!7986 = !DILocation(line: 727, column: 3, scope: !7974)
!7987 = !DILocation(line: 728, column: 1, scope: !7974)
!7988 = distinct !DISubprogram(name: "create_base_plus_offset", scope: !3, file: !3, line: 1076, type: !7989, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!1014, !1014, !690, !690}
!7991 = !{!7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8003, !8004, !8005, !8006}
!7992 = !DILocalVariable(name: "orig_stmt", arg: 1, scope: !7988, file: !3, line: 1076, type: !1014)
!7993 = !DILocalVariable(name: "new_type", arg: 2, scope: !7988, file: !3, line: 1076, type: !690)
!7994 = !DILocalVariable(name: "offset", arg: 3, scope: !7988, file: !3, line: 1076, type: !690)
!7995 = !DILocalVariable(name: "lhs", scope: !7988, file: !3, line: 1078, type: !690)
!7996 = !DILocalVariable(name: "new_lhs", scope: !7988, file: !3, line: 1079, type: !690)
!7997 = !DILocalVariable(name: "new_stmt", scope: !7988, file: !3, line: 1080, type: !1014)
!7998 = !DILocalVariable(name: "new_op0", scope: !7988, file: !3, line: 1081, type: !690)
!7999 = !DILocalVariable(name: "new_op1", scope: !7988, file: !3, line: 1081, type: !690)
!8000 = !DILocalVariable(name: "op0", scope: !8001, file: !3, line: 1098, type: !690)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1097, column: 7)
!8002 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 1093, column: 5)
!8003 = !DILocalVariable(name: "op1", scope: !8001, file: !3, line: 1099, type: !690)
!8004 = !DILocalVariable(name: "str0", scope: !8001, file: !3, line: 1100, type: !7)
!8005 = !DILocalVariable(name: "str1", scope: !8001, file: !3, line: 1100, type: !7)
!8006 = !DILocalVariable(name: "length", scope: !8001, file: !3, line: 1101, type: !7)
!8007 = !DILocation(line: 0, scope: !7988)
!8008 = !DILocation(line: 1083, column: 9, scope: !7988)
!8009 = !DILocation(line: 1085, column: 3, scope: !7988)
!8010 = !DILocation(line: 1088, column: 13, scope: !7988)
!8011 = !DILocation(line: 1089, column: 3, scope: !7988)
!8012 = !DILocation(line: 1090, column: 3, scope: !7988)
!8013 = !DILocation(line: 1092, column: 11, scope: !7988)
!8014 = !DILocation(line: 1092, column: 3, scope: !7988)
!8015 = !DILocation(line: 1098, column: 13, scope: !8001)
!8016 = !DILocation(line: 0, scope: !8001)
!8017 = !DILocation(line: 1099, column: 13, scope: !8001)
!8018 = !DILocation(line: 1101, column: 20, scope: !8001)
!8019 = !DILocation(line: 1104, column: 37, scope: !8001)
!8020 = !DILocation(line: 1104, column: 25, scope: !8001)
!8021 = !DILocation(line: 1104, column: 9, scope: !8001)
!8022 = !DILocation(line: 1105, column: 37, scope: !8001)
!8023 = !DILocation(line: 1105, column: 25, scope: !8001)
!8024 = !DILocation(line: 1105, column: 9, scope: !8001)
!8025 = !DILocation(line: 1106, column: 2, scope: !8001)
!8026 = !DILocation(line: 1108, column: 11, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1108, column: 6)
!8028 = !DILocation(line: 1108, column: 6, scope: !8001)
!8029 = !DILocation(line: 1109, column: 14, scope: !8027)
!8030 = !DILocation(line: 1109, column: 4, scope: !8027)
!8031 = !DILocation(line: 1110, column: 11, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1110, column: 6)
!8033 = !DILocation(line: 1110, column: 6, scope: !8001)
!8034 = !DILocation(line: 1111, column: 14, scope: !8032)
!8035 = !DILocation(line: 1111, column: 4, scope: !8032)
!8036 = !DILocation(line: 1113, column: 7, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1113, column: 6)
!8038 = !DILocation(line: 1113, column: 6, scope: !8001)
!8039 = !DILocation(line: 1115, column: 7, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 1115, column: 6)
!8041 = !DILocation(line: 1115, column: 6, scope: !8001)
!8042 = !DILocation(line: 1121, column: 7, scope: !8002)
!8043 = !DILocation(line: 1122, column: 5, scope: !8002)
!8044 = !DILocation(line: 1124, column: 14, scope: !7988)
!8045 = !DILocation(line: 1126, column: 3, scope: !7988)
!8046 = !DILocation(line: 1128, column: 3, scope: !7988)
!8047 = distinct !DISubprogram(name: "replace_field_access_stmt", scope: !3, file: !3, line: 1039, type: !8048, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{null, !2072, !690}
!8050 = !{!8051, !8052}
!8051 = !DILocalVariable(name: "acc", arg: 1, scope: !8047, file: !3, line: 1039, type: !2072)
!8052 = !DILocalVariable(name: "new_type", arg: 2, scope: !8047, file: !3, line: 1039, type: !690)
!8053 = !DILocation(line: 0, scope: !8047)
!8054 = !DILocation(line: 1042, column: 7, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1042, column: 7)
!8056 = !DILocation(line: 1042, column: 28, scope: !8055)
!8057 = !DILocation(line: 1043, column: 7, scope: !8055)
!8058 = !DILocation(line: 1043, column: 30, scope: !8055)
!8059 = !DILocation(line: 1044, column: 7, scope: !8055)
!8060 = !DILocation(line: 1044, column: 30, scope: !8055)
!8061 = !DILocation(line: 1042, column: 7, scope: !8047)
!8062 = !DILocation(line: 1045, column: 5, scope: !8055)
!8063 = !DILocation(line: 1047, column: 5, scope: !8055)
!8064 = !DILocation(line: 1048, column: 1, scope: !8047)
!8065 = distinct !DISubprogram(name: "replace_field_acc", scope: !3, file: !3, line: 958, type: !8048, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8066)
!8066 = !{!8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8081}
!8067 = !DILocalVariable(name: "acc", arg: 1, scope: !8065, file: !3, line: 958, type: !2072)
!8068 = !DILocalVariable(name: "new_type", arg: 2, scope: !8065, file: !3, line: 958, type: !690)
!8069 = !DILocalVariable(name: "ref_var", scope: !8065, file: !3, line: 960, type: !690)
!8070 = !DILocalVariable(name: "new_ref", scope: !8065, file: !3, line: 961, type: !690)
!8071 = !DILocalVariable(name: "lhs", scope: !8065, file: !3, line: 962, type: !690)
!8072 = !DILocalVariable(name: "rhs", scope: !8065, file: !3, line: 962, type: !690)
!8073 = !DILocalVariable(name: "pos", scope: !8065, file: !3, line: 963, type: !1048)
!8074 = !DILocalVariable(name: "new_acc", scope: !8065, file: !3, line: 964, type: !690)
!8075 = !DILocalVariable(name: "field_id", scope: !8065, file: !3, line: 965, type: !690)
!8076 = !DILocalVariable(name: "wrapper", scope: !8065, file: !3, line: 966, type: !2122)
!8077 = !DILocalVariable(name: "wr_p", scope: !8065, file: !3, line: 967, type: !6914)
!8078 = !DILocalVariable(name: "r_pos", scope: !8065, file: !3, line: 968, type: !2147)
!8079 = !DILocalVariable(name: "wr", scope: !8080, file: !3, line: 973, type: !2134)
!8080 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 972, column: 5)
!8081 = !DILocalVariable(name: "type", scope: !8082, file: !3, line: 995, type: !690)
!8082 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 994, column: 5)
!8083 = !DILocation(line: 0, scope: !8065)
!8084 = !DILocation(line: 960, column: 23, scope: !8065)
!8085 = !DILocation(line: 965, column: 19, scope: !8065)
!8086 = !DILocation(line: 966, column: 3, scope: !8065)
!8087 = !DILocation(line: 966, column: 41, scope: !8065)
!8088 = !DILocation(line: 966, column: 31, scope: !8065)
!8089 = !DILocation(line: 968, column: 3, scope: !8065)
!8090 = !DILocation(line: 0, scope: !8080)
!8091 = !DILocation(line: 0, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 981, column: 2)
!8093 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 975, column: 12)
!8094 = !DILocation(line: 970, column: 3, scope: !8065)
!8095 = !DILocation(line: 970, column: 10, scope: !8065)
!8096 = !DILocation(line: 970, column: 30, scope: !8065)
!8097 = !DILocation(line: 971, column: 3, scope: !8065)
!8098 = !DILocation(line: 973, column: 7, scope: !8080)
!8099 = !DILocation(line: 975, column: 12, scope: !8080)
!8100 = !DILocation(line: 977, column: 12, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 976, column: 2)
!8102 = !DILocation(line: 978, column: 14, scope: !8101)
!8103 = !DILocation(line: 979, column: 2, scope: !8101)
!8104 = !DILocation(line: 982, column: 12, scope: !8092)
!8105 = !DILocation(line: 983, column: 16, scope: !8092)
!8106 = !DILocation(line: 983, column: 14, scope: !8092)
!8107 = !DILocation(line: 986, column: 7, scope: !8080)
!8108 = !DILocation(line: 987, column: 17, scope: !8080)
!8109 = !DILocation(line: 988, column: 5, scope: !8065)
!8110 = distinct !{!8110, !8094, !8109}
!8111 = !DILocation(line: 990, column: 13, scope: !8065)
!8112 = !DILocation(line: 991, column: 3, scope: !8065)
!8113 = !DILocation(line: 993, column: 3, scope: !8065)
!8114 = !DILocation(line: 993, column: 10, scope: !8065)
!8115 = !DILocation(line: 993, column: 47, scope: !8065)
!8116 = !DILocation(line: 995, column: 19, scope: !8082)
!8117 = !DILocation(line: 0, scope: !8082)
!8118 = !DILocation(line: 997, column: 14, scope: !8082)
!8119 = !DILocation(line: 998, column: 17, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 998, column: 11)
!8121 = !DILocation(line: 998, column: 11, scope: !8120)
!8122 = !DILocation(line: 998, column: 11, scope: !8082)
!8123 = !DILocation(line: 999, column: 12, scope: !8120)
!8124 = !DILocation(line: 999, column: 2, scope: !8120)
!8125 = !DILocation(line: 1002, column: 12, scope: !8120)
!8126 = !DILocation(line: 0, scope: !8120)
!8127 = !DILocation(line: 1003, column: 7, scope: !8082)
!8128 = distinct !{!8128, !8113, !8129}
!8129 = !DILocation(line: 1004, column: 5, scope: !8065)
!8130 = !DILocation(line: 1006, column: 13, scope: !8065)
!8131 = !DILocation(line: 1007, column: 3, scope: !8065)
!8132 = !DILocation(line: 1009, column: 30, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 1009, column: 7)
!8134 = !DILocation(line: 1009, column: 7, scope: !8133)
!8135 = !DILocation(line: 0, scope: !8133)
!8136 = !DILocation(line: 1009, column: 7, scope: !8065)
!8137 = !DILocation(line: 1011, column: 13, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1010, column: 5)
!8139 = !DILocation(line: 1012, column: 38, scope: !8138)
!8140 = !DILocation(line: 1012, column: 13, scope: !8138)
!8141 = !DILocation(line: 1014, column: 23, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1014, column: 11)
!8143 = !DILocation(line: 1014, column: 15, scope: !8142)
!8144 = !DILocation(line: 1014, column: 11, scope: !8138)
!8145 = !DILocation(line: 1015, column: 30, scope: !8142)
!8146 = !DILocation(line: 1015, column: 2, scope: !8142)
!8147 = !DILocation(line: 1016, column: 20, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 1016, column: 16)
!8149 = !DILocation(line: 0, scope: !8148)
!8150 = !DILocation(line: 1016, column: 16, scope: !8142)
!8151 = !DILocation(line: 1017, column: 2, scope: !8148)
!8152 = !DILocation(line: 1020, column: 10, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 1019, column: 2)
!8154 = !DILocation(line: 1021, column: 4, scope: !8153)
!8155 = !DILocation(line: 1022, column: 9, scope: !8153)
!8156 = !DILocation(line: 1027, column: 47, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1026, column: 5)
!8158 = !DILocation(line: 1027, column: 13, scope: !8157)
!8159 = !DILocation(line: 1028, column: 7, scope: !8157)
!8160 = !DILocation(line: 1029, column: 12, scope: !8157)
!8161 = !DILocation(line: 1032, column: 23, scope: !8065)
!8162 = !DILocation(line: 1032, column: 3, scope: !8065)
!8163 = !DILocation(line: 1033, column: 1, scope: !8065)
!8164 = distinct !DISubprogram(name: "finalize_global_creation", scope: !3, file: !3, line: 523, type: !3343, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8165)
!8165 = !{!8166}
!8166 = !DILocalVariable(name: "var", arg: 1, scope: !8164, file: !3, line: 523, type: !690)
!8167 = !DILocation(line: 0, scope: !8164)
!8168 = !DILocation(line: 525, column: 7, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 525, column: 7)
!8170 = !DILocation(line: 525, column: 23, scope: !8169)
!8171 = !DILocation(line: 526, column: 7, scope: !8169)
!8172 = !DILocation(line: 526, column: 10, scope: !8169)
!8173 = !DILocation(line: 525, column: 7, scope: !8164)
!8174 = !DILocation(line: 527, column: 5, scope: !8169)
!8175 = !DILocation(line: 528, column: 1, scope: !8164)
!8176 = distinct !DISubprogram(name: "build_comp_ref", scope: !3, file: !3, line: 856, type: !6561, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8177)
!8177 = !{!8178, !8179, !8180, !8181, !8182}
!8178 = !DILocalVariable(name: "base", arg: 1, scope: !8176, file: !3, line: 856, type: !690)
!8179 = !DILocalVariable(name: "field_id", arg: 2, scope: !8176, file: !3, line: 856, type: !690)
!8180 = !DILocalVariable(name: "type", arg: 3, scope: !8176, file: !3, line: 856, type: !690)
!8181 = !DILocalVariable(name: "field", scope: !8176, file: !3, line: 858, type: !690)
!8182 = !DILocalVariable(name: "found", scope: !8176, file: !3, line: 859, type: !670)
!8183 = !DILocation(line: 0, scope: !8176)
!8184 = !DILocation(line: 863, column: 16, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 863, column: 3)
!8186 = !DILocation(line: 863, column: 8, scope: !8185)
!8187 = !DILocation(line: 0, scope: !8185)
!8188 = !DILocation(line: 863, column: 3, scope: !8185)
!8189 = !DILocation(line: 865, column: 11, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 865, column: 11)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 864, column: 5)
!8192 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 863, column: 3)
!8193 = !DILocation(line: 865, column: 29, scope: !8190)
!8194 = !DILocation(line: 865, column: 11, scope: !8191)
!8195 = !DILocation(line: 863, column: 51, scope: !8192)
!8196 = !DILocation(line: 863, column: 3, scope: !8192)
!8197 = distinct !{!8197, !8188, !8198}
!8198 = !DILocation(line: 870, column: 5, scope: !8185)
!8199 = !DILocation(line: 872, column: 3, scope: !8176)
!8200 = !DILocation(line: 874, column: 10, scope: !8176)
!8201 = !DILocation(line: 874, column: 3, scope: !8176)
!8202 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !584, file: !584, line: 1714, type: !7593, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8203)
!8203 = !{!8204, !8205}
!8204 = !DILocalVariable(name: "gs", arg: 1, scope: !8202, file: !584, line: 1714, type: !1014)
!8205 = !DILocalVariable(name: "lhs", arg: 2, scope: !8202, file: !584, line: 1714, type: !690)
!8206 = !DILocation(line: 0, scope: !8202)
!8207 = !DILocation(line: 1717, column: 3, scope: !8202)
!8208 = !DILocation(line: 1719, column: 7, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8202, file: !584, line: 1719, column: 7)
!8210 = !DILocation(line: 1719, column: 11, scope: !8209)
!8211 = !DILocation(line: 1719, column: 14, scope: !8209)
!8212 = !DILocation(line: 1719, column: 30, scope: !8209)
!8213 = !DILocation(line: 1719, column: 7, scope: !8202)
!8214 = !DILocation(line: 1720, column: 5, scope: !8209)
!8215 = !DILocation(line: 1720, column: 29, scope: !8209)
!8216 = !DILocation(line: 1721, column: 1, scope: !8202)
!8217 = distinct !DISubprogram(name: "gimple_assign_set_rhs1", scope: !584, file: !584, line: 1747, type: !7593, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8218)
!8218 = !{!8219, !8220}
!8219 = !DILocalVariable(name: "gs", arg: 1, scope: !8217, file: !584, line: 1747, type: !1014)
!8220 = !DILocalVariable(name: "rhs", arg: 2, scope: !8217, file: !584, line: 1747, type: !690)
!8221 = !DILocation(line: 0, scope: !8217)
!8222 = !DILocation(line: 1751, column: 3, scope: !8217)
!8223 = !DILocation(line: 1752, column: 1, scope: !8217)
!8224 = distinct !DISubprogram(name: "find_pos_in_stmt", scope: !3, file: !3, line: 919, type: !8225, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8227)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!1048, !1014, !690, !2146}
!8227 = !{!8228, !8229, !8230, !8231}
!8228 = !DILocalVariable(name: "stmt", arg: 1, scope: !8224, file: !3, line: 919, type: !1014)
!8229 = !DILocalVariable(name: "ref", arg: 2, scope: !8224, file: !3, line: 919, type: !690)
!8230 = !DILocalVariable(name: "r_pos", arg: 3, scope: !8224, file: !3, line: 919, type: !2146)
!8231 = !DILocalVariable(name: "wi", scope: !8224, file: !3, line: 921, type: !2085)
!8232 = !DILocation(line: 0, scope: !8224)
!8233 = !DILocation(line: 921, column: 3, scope: !8224)
!8234 = !DILocation(line: 923, column: 10, scope: !8224)
!8235 = !DILocation(line: 923, column: 14, scope: !8224)
!8236 = !DILocation(line: 924, column: 10, scope: !8224)
!8237 = !DILocation(line: 924, column: 14, scope: !8224)
!8238 = !DILocation(line: 925, column: 10, scope: !8224)
!8239 = !DILocation(line: 925, column: 20, scope: !8224)
!8240 = !DILocation(line: 926, column: 3, scope: !8224)
!8241 = !DILocation(line: 927, column: 6, scope: !8224)
!8242 = !DILocation(line: 927, column: 11, scope: !8224)
!8243 = !DILocation(line: 928, column: 3, scope: !8224)
!8244 = !DILocation(line: 930, column: 17, scope: !8224)
!8245 = !DILocation(line: 931, column: 1, scope: !8224)
!8246 = !DILocation(line: 930, column: 3, scope: !8224)
!8247 = distinct !DISubprogram(name: "find_pos_in_stmt_1", scope: !3, file: !3, line: 896, type: !4904, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8248)
!8248 = !{!8249, !8250, !8251, !8252, !8253, !8254, !8255}
!8249 = !DILocalVariable(name: "tp", arg: 1, scope: !8247, file: !3, line: 896, type: !1048)
!8250 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !8247, file: !3, line: 896, type: !4906)
!8251 = !DILocalVariable(name: "data", arg: 3, scope: !8247, file: !3, line: 896, type: !675)
!8252 = !DILocalVariable(name: "wi", scope: !8247, file: !3, line: 898, type: !2084)
!8253 = !DILocalVariable(name: "r_pos", scope: !8247, file: !3, line: 899, type: !2146)
!8254 = !DILocalVariable(name: "ref", scope: !8247, file: !3, line: 900, type: !690)
!8255 = !DILocalVariable(name: "t", scope: !8247, file: !3, line: 901, type: !690)
!8256 = !DILocation(line: 0, scope: !8247)
!8257 = !DILocation(line: 899, column: 50, scope: !8247)
!8258 = !DILocation(line: 900, column: 21, scope: !8247)
!8259 = !DILocation(line: 901, column: 12, scope: !8247)
!8260 = !DILocation(line: 903, column: 9, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 903, column: 7)
!8262 = !DILocation(line: 903, column: 16, scope: !8261)
!8263 = !DILocation(line: 903, column: 20, scope: !8261)
!8264 = !DILocation(line: 903, column: 34, scope: !8261)
!8265 = !DILocation(line: 903, column: 46, scope: !8261)
!8266 = !DILocation(line: 903, column: 49, scope: !8261)
!8267 = !DILocation(line: 903, column: 66, scope: !8261)
!8268 = !DILocation(line: 903, column: 7, scope: !8247)
!8269 = !DILocation(line: 905, column: 14, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 904, column: 5)
!8271 = !DILocation(line: 905, column: 18, scope: !8270)
!8272 = !DILocation(line: 906, column: 7, scope: !8270)
!8273 = !DILocation(line: 909, column: 10, scope: !8247)
!8274 = !DILocation(line: 909, column: 20, scope: !8247)
!8275 = !DILocation(line: 910, column: 18, scope: !8247)
!8276 = !DILocation(line: 911, column: 3, scope: !8247)
!8277 = !DILocation(line: 912, column: 1, scope: !8247)
!8278 = distinct !DISubprogram(name: "create_new_general_access", scope: !3, file: !3, line: 1378, type: !8279, scopeLine: 1379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8281)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{null, !2074, !2069}
!8281 = !{!8282, !8283, !8284}
!8282 = !DILocalVariable(name: "acc", arg: 1, scope: !8278, file: !3, line: 1378, type: !2074)
!8283 = !DILocalVariable(name: "str", arg: 2, scope: !8278, file: !3, line: 1378, type: !2069)
!8284 = !DILocalVariable(name: "stmt", scope: !8278, file: !3, line: 1380, type: !1014)
!8285 = !DILocation(line: 0, scope: !8278)
!8286 = !DILocation(line: 1380, column: 22, scope: !8278)
!8287 = !DILocation(line: 1381, column: 11, scope: !8278)
!8288 = !DILocation(line: 1381, column: 3, scope: !8278)
!8289 = !DILocation(line: 1384, column: 7, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 1382, column: 5)
!8291 = !DILocation(line: 1385, column: 7, scope: !8290)
!8292 = !DILocation(line: 1391, column: 7, scope: !8290)
!8293 = !DILocation(line: 1392, column: 7, scope: !8290)
!8294 = !DILocation(line: 1393, column: 7, scope: !8290)
!8295 = !DILocation(line: 1396, column: 7, scope: !8290)
!8296 = !DILocation(line: 1397, column: 5, scope: !8290)
!8297 = !DILocation(line: 1398, column: 1, scope: !8278)
!8298 = distinct !DISubprogram(name: "create_new_stmts_for_cond_expr", scope: !3, file: !3, line: 1223, type: !7624, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8299)
!8299 = !{!8300, !8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308, !8309, !8310, !8311, !8312, !8313}
!8300 = !DILocalVariable(name: "stmt", arg: 1, scope: !8298, file: !3, line: 1223, type: !1014)
!8301 = !DILocalVariable(name: "arg0", scope: !8298, file: !3, line: 1225, type: !690)
!8302 = !DILocalVariable(name: "arg1", scope: !8298, file: !3, line: 1225, type: !690)
!8303 = !DILocalVariable(name: "arg", scope: !8298, file: !3, line: 1225, type: !690)
!8304 = !DILocalVariable(name: "str0", scope: !8298, file: !3, line: 1226, type: !7)
!8305 = !DILocalVariable(name: "str1", scope: !8298, file: !3, line: 1226, type: !7)
!8306 = !DILocalVariable(name: "s0", scope: !8298, file: !3, line: 1227, type: !670)
!8307 = !DILocalVariable(name: "s1", scope: !8298, file: !3, line: 1227, type: !670)
!8308 = !DILocalVariable(name: "str", scope: !8298, file: !3, line: 1228, type: !2069)
!8309 = !DILocalVariable(name: "type", scope: !8298, file: !3, line: 1229, type: !690)
!8310 = !DILocalVariable(name: "pos", scope: !8298, file: !3, line: 1230, type: !7)
!8311 = !DILocalVariable(name: "i", scope: !8298, file: !3, line: 1231, type: !671)
!8312 = !DILocalVariable(name: "length", scope: !8298, file: !3, line: 1232, type: !7)
!8313 = !DILocalVariable(name: "new_arg", scope: !8314, file: !3, line: 1258, type: !690)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 1257, column: 5)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 1256, column: 3)
!8316 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 1256, column: 3)
!8317 = !DILocation(line: 0, scope: !8298)
!8318 = !DILocation(line: 1229, column: 3, scope: !8298)
!8319 = !DILocation(line: 1232, column: 21, scope: !8298)
!8320 = !DILocation(line: 1234, column: 3, scope: !8298)
!8321 = !DILocation(line: 1237, column: 10, scope: !8298)
!8322 = !DILocation(line: 1238, column: 10, scope: !8298)
!8323 = !DILocation(line: 1240, column: 38, scope: !8298)
!8324 = !DILocation(line: 1240, column: 26, scope: !8298)
!8325 = !DILocation(line: 1240, column: 10, scope: !8298)
!8326 = !DILocation(line: 1241, column: 38, scope: !8298)
!8327 = !DILocation(line: 1241, column: 26, scope: !8298)
!8328 = !DILocation(line: 1241, column: 10, scope: !8298)
!8329 = !DILocation(line: 1243, column: 14, scope: !8298)
!8330 = !DILocation(line: 1244, column: 14, scope: !8298)
!8331 = !DILocation(line: 1246, column: 3, scope: !8298)
!8332 = !DILocation(line: 1248, column: 3, scope: !8298)
!8333 = !DILocation(line: 1250, column: 9, scope: !8298)
!8334 = !DILocation(line: 1251, column: 5, scope: !8298)
!8335 = !DILocation(line: 1252, column: 5, scope: !8298)
!8336 = !DILocation(line: 1253, column: 9, scope: !8298)
!8337 = !DILocation(line: 1254, column: 9, scope: !8298)
!8338 = !DILocation(line: 0, scope: !8315)
!8339 = !DILocation(line: 1256, column: 8, scope: !8316)
!8340 = !DILocation(line: 0, scope: !8316)
!8341 = !DILocation(line: 1256, column: 15, scope: !8315)
!8342 = !DILocation(line: 1256, column: 3, scope: !8316)
!8343 = !DILocation(line: 1260, column: 44, scope: !8314)
!8344 = !DILocation(line: 1260, column: 17, scope: !8314)
!8345 = !DILocation(line: 0, scope: !8314)
!8346 = !DILocation(line: 1261, column: 7, scope: !8314)
!8347 = !DILocation(line: 1256, column: 61, scope: !8315)
!8348 = !DILocation(line: 1256, column: 3, scope: !8315)
!8349 = distinct !{!8349, !8342, !8350}
!8350 = !DILocation(line: 1262, column: 5, scope: !8316)
!8351 = !DILocation(line: 1263, column: 1, scope: !8298)
!8352 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !584, file: !584, line: 3336, type: !7624, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8353)
!8353 = !{!8354}
!8354 = !DILocalVariable(name: "dbg", arg: 1, scope: !8352, file: !584, line: 3336, type: !1014)
!8355 = !DILocation(line: 0, scope: !8352)
!8356 = !DILocation(line: 3342, column: 3, scope: !8352)
!8357 = !DILocation(line: 3343, column: 1, scope: !8352)
!8358 = distinct !DISubprogram(name: "create_new_stmts_for_general_acc", scope: !3, file: !3, line: 1359, type: !8279, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8359)
!8359 = !{!8360, !8361, !8362, !8363, !8364, !8365}
!8360 = !DILocalVariable(name: "acc", arg: 1, scope: !8358, file: !3, line: 1359, type: !2074)
!8361 = !DILocalVariable(name: "str", arg: 2, scope: !8358, file: !3, line: 1359, type: !2069)
!8362 = !DILocalVariable(name: "type", scope: !8358, file: !3, line: 1361, type: !690)
!8363 = !DILocalVariable(name: "stmt", scope: !8358, file: !3, line: 1362, type: !1014)
!8364 = !DILocalVariable(name: "i", scope: !8358, file: !3, line: 1363, type: !7)
!8365 = !DILocalVariable(name: "new_stmt", scope: !8366, file: !3, line: 1367, type: !1014)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 1366, column: 5)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 1365, column: 3)
!8368 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 1365, column: 3)
!8369 = !DILocation(line: 0, scope: !8358)
!8370 = !DILocation(line: 1361, column: 3, scope: !8358)
!8371 = !DILocation(line: 1362, column: 22, scope: !8358)
!8372 = !DILocation(line: 0, scope: !8367)
!8373 = !DILocation(line: 1365, column: 8, scope: !8368)
!8374 = !DILocation(line: 0, scope: !8368)
!8375 = !DILocation(line: 1365, column: 15, scope: !8367)
!8376 = !DILocation(line: 1365, column: 3, scope: !8368)
!8377 = !DILocation(line: 1369, column: 48, scope: !8366)
!8378 = !DILocation(line: 1369, column: 18, scope: !8366)
!8379 = !DILocation(line: 0, scope: !8366)
!8380 = !DILocation(line: 1370, column: 7, scope: !8366)
!8381 = !DILocation(line: 1365, column: 61, scope: !8367)
!8382 = !DILocation(line: 1365, column: 3, scope: !8367)
!8383 = distinct !{!8383, !8376, !8384}
!8384 = !DILocation(line: 1371, column: 5, scope: !8368)
!8385 = !DILocation(line: 1372, column: 1, scope: !8358)
!8386 = distinct !DISubprogram(name: "create_new_stmts_for_cond_expr_1", scope: !3, file: !3, line: 1182, type: !8387, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8389)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !690, !1014, !7}
!8389 = !{!8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397}
!8390 = !DILocalVariable(name: "new_var", arg: 1, scope: !8386, file: !3, line: 1182, type: !690)
!8391 = !DILocalVariable(name: "cond_stmt", arg: 2, scope: !8386, file: !3, line: 1182, type: !1014)
!8392 = !DILocalVariable(name: "pos", arg: 3, scope: !8386, file: !3, line: 1182, type: !7)
!8393 = !DILocalVariable(name: "new_stmt", scope: !8386, file: !3, line: 1184, type: !1014)
!8394 = !DILocalVariable(name: "true_e", scope: !8386, file: !3, line: 1185, type: !994)
!8395 = !DILocalVariable(name: "false_e", scope: !8386, file: !3, line: 1185, type: !994)
!8396 = !DILocalVariable(name: "new_bb", scope: !8386, file: !3, line: 1186, type: !1412)
!8397 = !DILocalVariable(name: "si", scope: !8386, file: !3, line: 1187, type: !2088)
!8398 = !DILocation(line: 0, scope: !8386)
!8399 = !DILocation(line: 1185, column: 3, scope: !8386)
!8400 = !DILocation(line: 1185, column: 8, scope: !8386)
!8401 = !DILocation(line: 1185, column: 23, scope: !8386)
!8402 = !DILocation(line: 1187, column: 3, scope: !8386)
!8403 = !DILocation(line: 1189, column: 40, scope: !8386)
!8404 = !DILocation(line: 1189, column: 3, scope: !8386)
!8405 = !DILocation(line: 1192, column: 33, scope: !8386)
!8406 = !DILocation(line: 1193, column: 15, scope: !8386)
!8407 = !DILocation(line: 1193, column: 11, scope: !8386)
!8408 = !DILocation(line: 1193, column: 32, scope: !8386)
!8409 = !DILocation(line: 1194, column: 15, scope: !8386)
!8410 = !DILocation(line: 1194, column: 11, scope: !8386)
!8411 = !DILocation(line: 1194, column: 32, scope: !8386)
!8412 = !DILocation(line: 1192, column: 14, scope: !8386)
!8413 = !DILocation(line: 1198, column: 3, scope: !8386)
!8414 = !DILocation(line: 1201, column: 29, scope: !8386)
!8415 = !DILocation(line: 1201, column: 12, scope: !8386)
!8416 = !DILocation(line: 1204, column: 8, scope: !8386)
!8417 = !DILocation(line: 1205, column: 3, scope: !8386)
!8418 = !DILocation(line: 1208, column: 43, scope: !8386)
!8419 = !DILocation(line: 1208, column: 3, scope: !8386)
!8420 = !DILocation(line: 1209, column: 43, scope: !8386)
!8421 = !DILocation(line: 1209, column: 3, scope: !8386)
!8422 = !DILocation(line: 1212, column: 7, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 1212, column: 7)
!8424 = !DILocation(line: 1212, column: 36, scope: !8423)
!8425 = !DILocation(line: 1212, column: 7, scope: !8386)
!8426 = !DILocation(line: 1213, column: 25, scope: !8423)
!8427 = !DILocation(line: 1213, column: 5, scope: !8423)
!8428 = !DILocation(line: 1215, column: 25, scope: !8423)
!8429 = !DILocation(line: 1215, column: 5, scope: !8423)
!8430 = !DILocation(line: 1216, column: 1, scope: !8386)
!8431 = distinct !DISubprogram(name: "make_edge_and_fix_phis_of_dest", scope: !3, file: !3, line: 670, type: !8432, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8434)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!994, !1412, !994}
!8434 = !{!8435, !8436, !8437, !8438, !8439, !8440}
!8435 = !DILocalVariable(name: "bb", arg: 1, scope: !8431, file: !3, line: 670, type: !1412)
!8436 = !DILocalVariable(name: "e", arg: 2, scope: !8431, file: !3, line: 670, type: !994)
!8437 = !DILocalVariable(name: "new_e", scope: !8431, file: !3, line: 672, type: !994)
!8438 = !DILocalVariable(name: "arg", scope: !8431, file: !3, line: 673, type: !690)
!8439 = !DILocalVariable(name: "si", scope: !8431, file: !3, line: 674, type: !2088)
!8440 = !DILocalVariable(name: "phi", scope: !8441, file: !3, line: 680, type: !1014)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 679, column: 5)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 678, column: 3)
!8443 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 678, column: 3)
!8444 = !DILocation(line: 0, scope: !8431)
!8445 = !DILocation(line: 674, column: 3, scope: !8431)
!8446 = !DILocation(line: 676, column: 29, scope: !8431)
!8447 = !DILocation(line: 676, column: 38, scope: !8431)
!8448 = !DILocation(line: 676, column: 11, scope: !8431)
!8449 = !DILocation(line: 678, column: 13, scope: !8443)
!8450 = !DILocation(line: 678, column: 36, scope: !8443)
!8451 = !DILocation(line: 0, scope: !8441)
!8452 = !DILocation(line: 678, column: 8, scope: !8443)
!8453 = !DILocation(line: 678, column: 44, scope: !8442)
!8454 = !DILocation(line: 678, column: 43, scope: !8442)
!8455 = !DILocation(line: 678, column: 3, scope: !8443)
!8456 = !DILocation(line: 680, column: 20, scope: !8441)
!8457 = !DILocation(line: 681, column: 13, scope: !8441)
!8458 = !DILocation(line: 682, column: 37, scope: !8441)
!8459 = !DILocation(line: 682, column: 7, scope: !8441)
!8460 = !DILocation(line: 678, column: 60, scope: !8442)
!8461 = !DILocation(line: 678, column: 3, scope: !8442)
!8462 = distinct !{!8462, !8455, !8463}
!8463 = !DILocation(line: 683, column: 5, scope: !8443)
!8464 = !DILocation(line: 686, column: 1, scope: !8431)
!8465 = !DILocation(line: 685, column: 3, scope: !8431)
!8466 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !4621, file: !4621, line: 442, type: !8467, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!2081, !1014, !671}
!8469 = !{!8470, !8471}
!8470 = !DILocalVariable(name: "gs", arg: 1, scope: !8466, file: !4621, line: 442, type: !1014)
!8471 = !DILocalVariable(name: "i", arg: 2, scope: !8466, file: !4621, line: 442, type: !671)
!8472 = !DILocation(line: 0, scope: !8466)
!8473 = !DILocation(line: 444, column: 11, scope: !8466)
!8474 = !DILocation(line: 444, column: 35, scope: !8466)
!8475 = !DILocation(line: 444, column: 3, scope: !8466)
!8476 = distinct !DISubprogram(name: "gimple_phi_arg_location_from_edge", scope: !4621, file: !4621, line: 483, type: !8477, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8479)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!817, !1014, !994}
!8479 = !{!8480, !8481}
!8480 = !DILocalVariable(name: "gs", arg: 1, scope: !8476, file: !4621, line: 483, type: !1014)
!8481 = !DILocalVariable(name: "e", arg: 2, scope: !8476, file: !4621, line: 483, type: !994)
!8482 = !DILocation(line: 0, scope: !8476)
!8483 = !DILocation(line: 485, column: 33, scope: !8476)
!8484 = !DILocation(line: 485, column: 10, scope: !8476)
!8485 = !DILocation(line: 485, column: 44, scope: !8476)
!8486 = !DILocation(line: 485, column: 3, scope: !8476)
!8487 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !584, file: !584, line: 3100, type: !8488, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8491)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!8490, !1014, !7}
!8490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!8491 = !{!8492, !8493}
!8492 = !DILocalVariable(name: "gs", arg: 1, scope: !8487, file: !584, line: 3100, type: !1014)
!8493 = !DILocalVariable(name: "index", arg: 2, scope: !8487, file: !584, line: 3100, type: !7)
!8494 = !DILocation(line: 0, scope: !8487)
!8495 = !DILocation(line: 3103, column: 3, scope: !8487)
!8496 = !DILocation(line: 3104, column: 12, scope: !8487)
!8497 = !DILocation(line: 3104, column: 3, scope: !8487)
!8498 = distinct !DISubprogram(name: "create_general_new_stmt", scope: !3, file: !3, line: 1298, type: !8499, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8501)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!1014, !2074, !690}
!8501 = !{!8502, !8503, !8504, !8505, !8506, !8507, !8508, !8512, !8513}
!8502 = !DILocalVariable(name: "acc", arg: 1, scope: !8498, file: !3, line: 1298, type: !2074)
!8503 = !DILocalVariable(name: "new_type", arg: 2, scope: !8498, file: !3, line: 1298, type: !690)
!8504 = !DILocalVariable(name: "old_stmt", scope: !8498, file: !3, line: 1300, type: !1014)
!8505 = !DILocalVariable(name: "var", scope: !8498, file: !3, line: 1301, type: !690)
!8506 = !DILocalVariable(name: "new_stmt", scope: !8498, file: !3, line: 1302, type: !1014)
!8507 = !DILocalVariable(name: "i", scope: !8498, file: !3, line: 1303, type: !7)
!8508 = !DILocalVariable(name: "new_var", scope: !8509, file: !3, line: 1314, type: !690)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 1313, column: 5)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 1312, column: 3)
!8511 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 1312, column: 3)
!8512 = !DILocalVariable(name: "lhs", scope: !8509, file: !3, line: 1315, type: !690)
!8513 = !DILocalVariable(name: "rhs", scope: !8509, file: !3, line: 1315, type: !690)
!8514 = !DILocation(line: 0, scope: !8498)
!8515 = !DILocation(line: 1300, column: 26, scope: !8498)
!8516 = !DILocation(line: 1301, column: 3, scope: !8498)
!8517 = !DILocation(line: 1302, column: 21, scope: !8498)
!8518 = !DILocation(line: 1306, column: 7, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 1306, column: 7)
!8520 = !DILocation(line: 1306, column: 7, scope: !8498)
!8521 = !DILocation(line: 1308, column: 7, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 1307, column: 5)
!8523 = !DILocation(line: 1309, column: 7, scope: !8522)
!8524 = !DILocation(line: 1310, column: 5, scope: !8522)
!8525 = !DILocation(line: 0, scope: !8510)
!8526 = !DILocation(line: 1312, column: 8, scope: !8511)
!8527 = !DILocation(line: 0, scope: !8511)
!8528 = !DILocation(line: 1312, column: 15, scope: !8510)
!8529 = !DILocation(line: 1312, column: 3, scope: !8511)
!8530 = !DILocation(line: 1314, column: 44, scope: !8509)
!8531 = !DILocation(line: 1314, column: 22, scope: !8509)
!8532 = !DILocation(line: 0, scope: !8509)
!8533 = !DILocation(line: 1317, column: 7, scope: !8509)
!8534 = !DILocation(line: 1318, column: 7, scope: !8509)
!8535 = !DILocation(line: 1320, column: 11, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 1320, column: 11)
!8537 = !DILocation(line: 1320, column: 11, scope: !8509)
!8538 = !DILocation(line: 1322, column: 10, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1321, column: 2)
!8540 = !DILocation(line: 1324, column: 8, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1324, column: 8)
!8542 = !DILocation(line: 1324, column: 24, scope: !8541)
!8543 = !DILocation(line: 1324, column: 8, scope: !8539)
!8544 = !DILocation(line: 1325, column: 12, scope: !8541)
!8545 = !DILocation(line: 1325, column: 6, scope: !8541)
!8546 = !DILocation(line: 0, scope: !8539)
!8547 = !DILocation(line: 1326, column: 8, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1326, column: 8)
!8549 = !DILocation(line: 1326, column: 42, scope: !8548)
!8550 = !DILocation(line: 1326, column: 8, scope: !8539)
!8551 = !DILocation(line: 1327, column: 12, scope: !8548)
!8552 = !DILocation(line: 1327, column: 6, scope: !8548)
!8553 = !DILocation(line: 1331, column: 8, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1331, column: 8)
!8555 = !DILocation(line: 1331, column: 42, scope: !8554)
!8556 = !DILocation(line: 1331, column: 8, scope: !8539)
!8557 = !DILocation(line: 1334, column: 8, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1332, column: 6)
!8559 = !DILocation(line: 1336, column: 14, scope: !8558)
!8560 = !DILocation(line: 1337, column: 8, scope: !8558)
!8561 = !DILocation(line: 1338, column: 6, scope: !8558)
!8562 = !DILocation(line: 1340, column: 15, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 1340, column: 8)
!8564 = !DILocation(line: 1340, column: 12, scope: !8563)
!8565 = !DILocation(line: 1340, column: 8, scope: !8539)
!8566 = !DILocation(line: 1341, column: 6, scope: !8563)
!8567 = !DILocation(line: 1342, column: 17, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 1342, column: 13)
!8569 = !DILocation(line: 1342, column: 13, scope: !8563)
!8570 = !DILocation(line: 1343, column: 6, scope: !8568)
!8571 = !DILocation(line: 1345, column: 6, scope: !8568)
!8572 = !DILocation(line: 1348, column: 36, scope: !8536)
!8573 = !DILocation(line: 1348, column: 2, scope: !8536)
!8574 = !DILocation(line: 1312, column: 55, scope: !8510)
!8575 = !DILocation(line: 1312, column: 3, scope: !8510)
!8576 = distinct !{!8576, !8529, !8577}
!8577 = !DILocation(line: 1349, column: 5, scope: !8511)
!8578 = !DILocation(line: 1351, column: 3, scope: !8498)
!8579 = !DILocation(line: 1353, column: 1, scope: !8498)
!8580 = !DILocation(line: 1352, column: 3, scope: !8498)
!8581 = distinct !DISubprogram(name: "gimple_set_vuse", scope: !584, file: !584, line: 1405, type: !7593, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8582)
!8582 = !{!8583, !8584}
!8583 = !DILocalVariable(name: "g", arg: 1, scope: !8581, file: !584, line: 1405, type: !1014)
!8584 = !DILocalVariable(name: "vuse", arg: 2, scope: !8581, file: !584, line: 1405, type: !690)
!8585 = !DILocation(line: 0, scope: !8581)
!8586 = !DILocation(line: 1407, column: 3, scope: !8581)
!8587 = !DILocation(line: 1408, column: 16, scope: !8581)
!8588 = !DILocation(line: 1408, column: 21, scope: !8581)
!8589 = !DILocation(line: 1409, column: 1, scope: !8581)
!8590 = distinct !DISubprogram(name: "gimple_set_vdef", scope: !584, file: !584, line: 1414, type: !7593, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8591)
!8591 = !{!8592, !8593}
!8592 = !DILocalVariable(name: "g", arg: 1, scope: !8590, file: !584, line: 1414, type: !1014)
!8593 = !DILocalVariable(name: "vdef", arg: 2, scope: !8590, file: !584, line: 1414, type: !690)
!8594 = !DILocation(line: 0, scope: !8590)
!8595 = !DILocation(line: 1416, column: 3, scope: !8590)
!8596 = !DILocation(line: 1417, column: 16, scope: !8590)
!8597 = !DILocation(line: 1417, column: 21, scope: !8590)
!8598 = !DILocation(line: 1418, column: 1, scope: !8590)
!8599 = distinct !DISubprogram(name: "VEC_constructor_elt_base_length", scope: !318, file: !318, line: 1537, type: !8600, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8604)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{!7, !8602}
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 64)
!8603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!8604 = !{!8605}
!8605 = !DILocalVariable(name: "vec_", arg: 1, scope: !8599, file: !318, line: 1537, type: !8602)
!8606 = !DILocation(line: 0, scope: !8599)
!8607 = !DILocation(line: 1537, column: 1, scope: !8599)
!8608 = distinct !DISubprogram(name: "insert_new_var_in_stmt", scope: !3, file: !3, line: 1270, type: !8609, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8611)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{null, !1014, !690, !690}
!8611 = !{!8612, !8613, !8614, !8615, !8616, !8617}
!8612 = !DILocalVariable(name: "stmt", arg: 1, scope: !8608, file: !3, line: 1270, type: !1014)
!8613 = !DILocalVariable(name: "var", arg: 2, scope: !8608, file: !3, line: 1270, type: !690)
!8614 = !DILocalVariable(name: "new_var", arg: 3, scope: !8608, file: !3, line: 1270, type: !690)
!8615 = !DILocalVariable(name: "r_pos", scope: !8608, file: !3, line: 1272, type: !2147)
!8616 = !DILocalVariable(name: "pos", scope: !8608, file: !3, line: 1273, type: !1048)
!8617 = !DILocalVariable(name: "type", scope: !8618, file: !3, line: 1281, type: !690)
!8618 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 1280, column: 5)
!8619 = !DILocation(line: 0, scope: !8608)
!8620 = !DILocation(line: 1272, column: 3, scope: !8608)
!8621 = !DILocation(line: 1275, column: 9, scope: !8608)
!8622 = !DILocation(line: 1276, column: 3, scope: !8608)
!8623 = !DILocation(line: 1279, column: 12, scope: !8608)
!8624 = !DILocation(line: 1278, column: 3, scope: !8608)
!8625 = !DILocation(line: 1278, column: 16, scope: !8608)
!8626 = !DILocation(line: 1278, column: 10, scope: !8608)
!8627 = !DILocation(line: 1278, column: 26, scope: !8608)
!8628 = !DILocation(line: 1278, column: 30, scope: !8608)
!8629 = !DILocation(line: 1278, column: 57, scope: !8608)
!8630 = !DILocation(line: 1279, column: 39, scope: !8608)
!8631 = !DILocation(line: 1279, column: 9, scope: !8608)
!8632 = !DILocation(line: 0, scope: !8618)
!8633 = !DILocation(line: 1283, column: 11, scope: !8618)
!8634 = !DILocation(line: 1281, column: 19, scope: !8618)
!8635 = !DILocation(line: 1284, column: 12, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1283, column: 11)
!8637 = !DILocation(line: 1284, column: 2, scope: !8636)
!8638 = !DILocation(line: 1286, column: 12, scope: !8636)
!8639 = !DILocation(line: 0, scope: !8636)
!8640 = !DILocation(line: 1287, column: 43, scope: !8618)
!8641 = !DILocation(line: 1287, column: 13, scope: !8618)
!8642 = distinct !{!8642, !8624, !8643}
!8643 = !DILocation(line: 1288, column: 5, scope: !8608)
!8644 = !DILocation(line: 1290, column: 8, scope: !8608)
!8645 = !DILocation(line: 1291, column: 1, scope: !8608)
!8646 = distinct !DISubprogram(name: "free_new_var", scope: !3, file: !3, line: 2657, type: !4199, scopeLine: 2658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8647)
!8647 = !{!8648, !8649, !8650}
!8648 = !DILocalVariable(name: "slot", arg: 1, scope: !8646, file: !3, line: 2657, type: !1468)
!8649 = !DILocalVariable(name: "data", arg: 2, scope: !8646, file: !3, line: 2657, type: !675)
!8650 = !DILocalVariable(name: "n_var", scope: !8646, file: !3, line: 2659, type: !2120)
!8651 = !DILocation(line: 0, scope: !8646)
!8652 = !DILocation(line: 2659, column: 19, scope: !8646)
!8653 = !DILocation(line: 2662, column: 3, scope: !8646)
!8654 = !DILocation(line: 2663, column: 9, scope: !8646)
!8655 = !DILocation(line: 2663, column: 3, scope: !8646)
!8656 = !DILocation(line: 2664, column: 3, scope: !8646)
!8657 = distinct !DISubprogram(name: "free_alloc_sites", scope: !3, file: !3, line: 3816, type: !2648, scopeLine: 3817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2213)
!8658 = !DILocation(line: 3818, column: 7, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 3818, column: 7)
!8660 = !DILocation(line: 3818, column: 7, scope: !8657)
!8661 = !DILocation(line: 3819, column: 5, scope: !8659)
!8662 = !DILocation(line: 3820, column: 16, scope: !8657)
!8663 = !DILocation(line: 3820, column: 3, scope: !8657)
!8664 = !DILocation(line: 3821, column: 15, scope: !8657)
!8665 = !DILocation(line: 3822, column: 1, scope: !8657)
!8666 = distinct !DISubprogram(name: "free_falloc_sites", scope: !3, file: !3, line: 3334, type: !4199, scopeLine: 3335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8667)
!8667 = !{!8668, !8669, !8670}
!8668 = !DILocalVariable(name: "slot", arg: 1, scope: !8666, file: !3, line: 3334, type: !1468)
!8669 = !DILocalVariable(name: "data", arg: 2, scope: !8666, file: !3, line: 3334, type: !675)
!8670 = !DILocalVariable(name: "fallocs", scope: !8666, file: !3, line: 3336, type: !2046)
!8671 = !DILocation(line: 0, scope: !8666)
!8672 = !DILocation(line: 3336, column: 23, scope: !8666)
!8673 = !DILocation(line: 3338, column: 3, scope: !8666)
!8674 = !DILocation(line: 3339, column: 9, scope: !8666)
!8675 = !DILocation(line: 3339, column: 3, scope: !8666)
!8676 = !DILocation(line: 3340, column: 3, scope: !8666)
!8677 = distinct !DISubprogram(name: "VEC_alloc_site_t_heap_free", scope: !3, file: !3, line: 174, type: !8678, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8680)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{null, !4684}
!8680 = !{!8681}
!8681 = !DILocalVariable(name: "vec_", arg: 1, scope: !8677, file: !3, line: 174, type: !4684)
!8682 = !DILocation(line: 0, scope: !8677)
!8683 = !DILocation(line: 174, column: 1, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 174, column: 1)
!8685 = !DILocation(line: 174, column: 1, scope: !8677)
